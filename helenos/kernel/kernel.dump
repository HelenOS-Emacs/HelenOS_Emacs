
arch/ia32/src/context.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 g       .text	00000000 context_save_arch
0000001c g       .text	00000000 context_restore_arch



arch/ia32/src/debug/stacktrace.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 stacktrace.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000000f kernel_stack_trace_context_validate
0000000f g     F .text	00000016 kernel_frame_pointer_prev
00000025 g     F .text	00000017 kernel_return_address_get
0000003c g     F .text	0000000f uspace_stack_trace_context_validate
0000004b g     F .text	00000029 uspace_frame_pointer_prev
00000000         *UND*	00000000 copy_from_uspace
00000074 g     F .text	0000002c uspace_return_address_get



arch/ia32/src/debug/stacktrace_asm.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 g       .text	00000000 frame_pointer_get
00000003 g       .text	00000000 program_counter_get



arch/ia32/src/delay.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 g       .text	00000000 asm_delay_loop
00000009 g       .text	00000000 asm_fake_loop



arch/ia32/src/asm.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
0000012e l       .text	00000000 interrupt_handlers
00000030 g       .text	00000000 paging_on
00000045 g       .text	00000000 enable_l_apic_in_msr
00000000 g       .text	00000000 memcpy_from_uspace
00000029 g       .text	00000000 memcpy_from_uspace_failover_address
00000000 g       .text	00000000 memcpy_to_uspace
00000029 g       .text	00000000 memcpy_to_uspace_failover_address
0000252e g       .text	00000000 early_putchar
00000059 g       .text	00000000 sysenter_handler
00000000         *UND*	00000000 syscall_handler
000000b5 g       .text	00000000 int_syscall
0000012e g       .text	00000000 int_0
00000000         *UND*	00000000 exc_dispatch
000001be g       .text	00000000 int_1
0000024e g       .text	00000000 int_2
000002de g       .text	00000000 int_3
0000036e g       .text	00000000 int_4
000003fe g       .text	00000000 int_5
0000048e g       .text	00000000 int_6
0000051e g       .text	00000000 int_7
000005ae g       .text	00000000 int_8
0000063e g       .text	00000000 int_9
000006ce g       .text	00000000 int_10
0000075e g       .text	00000000 int_11
000007ee g       .text	00000000 int_12
0000087e g       .text	00000000 int_13
0000090e g       .text	00000000 int_14
0000099e g       .text	00000000 int_15
00000a2e g       .text	00000000 int_16
00000abe g       .text	00000000 int_17
00000b4e g       .text	00000000 int_18
00000bde g       .text	00000000 int_19
00000c6e g       .text	00000000 int_20
00000cfe g       .text	00000000 int_21
00000d8e g       .text	00000000 int_22
00000e1e g       .text	00000000 int_23
00000eae g       .text	00000000 int_24
00000f3e g       .text	00000000 int_25
00000fce g       .text	00000000 int_26
0000105e g       .text	00000000 int_27
000010ee g       .text	00000000 int_28
0000117e g       .text	00000000 int_29
0000120e g       .text	00000000 int_30
0000129e g       .text	00000000 int_31
0000132e g       .text	00000000 int_32
000013be g       .text	00000000 int_33
0000144e g       .text	00000000 int_34
000014de g       .text	00000000 int_35
0000156e g       .text	00000000 int_36
000015fe g       .text	00000000 int_37
0000168e g       .text	00000000 int_38
0000171e g       .text	00000000 int_39
000017ae g       .text	00000000 int_40
0000183e g       .text	00000000 int_41
000018ce g       .text	00000000 int_42
0000195e g       .text	00000000 int_43
000019ee g       .text	00000000 int_44
00001a7e g       .text	00000000 int_45
00001b0e g       .text	00000000 int_46
00001b9e g       .text	00000000 int_47
00001c2e g       .text	00000000 int_48
00001cbe g       .text	00000000 int_49
00001d4e g       .text	00000000 int_50
00001dde g       .text	00000000 int_51
00001e6e g       .text	00000000 int_52
00001efe g       .text	00000000 int_53
00001f8e g       .text	00000000 int_54
0000201e g       .text	00000000 int_55
000020ae g       .text	00000000 int_56
0000213e g       .text	00000000 int_57
000021ce g       .text	00000000 int_58
0000225e g       .text	00000000 int_59
000022ee g       .text	00000000 int_60
0000237e g       .text	00000000 int_61
0000240e g       .text	00000000 int_62
0000249e g       .text	00000000 int_63



arch/ia32/src/proc/scheduler.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 scheduler.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000009 before_task_runs_arch
00000000         *UND*	00000000 io_perm_bitmap_install
00000009 g     F .text	0000007c before_thread_runs_arch
00000000         *UND*	00000000 set_tls_desc
00000085 g     F .text	00000005 after_thread_ran_arch



arch/ia32/src/proc/task.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 task.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000032 task_create_arch
00000000         *UND*	00000000 bitmap_initialize
00000032 g     F .text	0000001b task_destroy_arch
00000000         *UND*	00000000 free



arch/ia32/src/proc/thread.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 thread.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000012 thread_create_arch



arch/ia32/src/bios/bios.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 bios.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000014 bios_init
00000000 g     O .bss	00000004 ebda



arch/ia32/src/smp/ap.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  K_TEXT_START	00000000 K_TEXT_START
00000008 l       *ABS*	00000000 KTEXT
00000010 l       *ABS*	00000000 KDATA
0000001d l       K_TEXT_START	00000000 jump_to_kernel
00000000 l    d  K_DATA_START	00000000 K_DATA_START
00000000 g       K_TEXT_START	00000000 unmapped_ap_boot
00000000         *UND*	00000000 ap_gdtr
00000000         *UND*	00000000 ctx
00000000         *UND*	00000000 map_kernel_pse
00000000         *UND*	00000000 main_ap
00000000 g       K_DATA_START	00000000 unmapped_ap_gdtr



arch/ia32/src/smp/apic.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 apic.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a l_apic_timer_claim
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
000009cb l     F .text	00000023 apic_spurious
000009ee l     F .text	00000038 l_apic_timer_irq_handler
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	0000000c __func__.3643
00000020 l     O .bss	00000070 l_apic_timer_irq
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
0000000a g     F .text	00000014 l_apic_eoi
00000004 g     O .data	00000004 l_apic
0000001e g     F .text	000004d6 io_apic_enable_irqs
00000000         *UND*	00000000 smp_irq_to_pin
00000000 g     O .data	00000004 io_apic
000004f4 g     F .text	000004d7 io_apic_disable_irqs
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 clock
00000000         *UND*	00000000 irq_spinlock_lock
00000a26 g     F .text	0000011f l_apic_broadcast_custom_ipi
00000000         *UND*	00000000 delay
00000b45 g     F .text	000002d9 l_apic_send_init_ipi
00000000         *UND*	00000000 ap_boot
00000e1e g     F .text	000001ae l_apic_init
00000000         *UND*	00000000 enable_l_apic_in_msr
00000000         *UND*	00000000 panic_common
00000fcc g     F .text	00000592 apic_init
00000000         *UND*	00000000 exc_register
00000000         *UND*	00000000 enable_irqs_function
00000000         *UND*	00000000 disable_irqs_function
00000000         *UND*	00000000 eoi_function
00000000         *UND*	00000000 irqs_info
00000000         *UND*	00000000 irq_initialize
00000000         *UND*	00000000 device_assign_devno
00000000         *UND*	00000000 irq_register
00000004 g     O .bss	00000004 apic_id_mask
00000000 g     O .bss	00000001 bsp_l_apic
0000155e g     F .text	00000005 l_apic_debug
00001563 g     F .text	00000014 io_apic_read
00001577 g     F .text	00000017 io_apic_write
0000158e g     F .text	0000007f io_apic_change_ioredtbl



arch/ia32/src/smp/mps.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 mps.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000044 mps_irq_to_pin
00000028 l     O .bss	00000004 io_intr_entry_cnt
00000024 l     O .bss	00000004 io_intr_entries
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000044 l     F .text	00000071 mps_cpu_apic_id
00000008 l     O .bss	00000004 processor_entry_cnt
0000000c l     O .bss	00000004 processor_entries
00000014 l     O .rodata	00000010 __func__.2222
000000b5 l     F .text	00000075 mps_cpu_bootstrap
00000024 l     O .rodata	00000012 __func__.2230
0000012a l     F .text	0000007a mps_cpu_enabled
00000036 l     O .rodata	00000010 __func__.2226
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .bss	00000004 fs
00000004 l     O .bss	00000004 ct
00000010 l     O .bss	00000004 bus_entries
00000014 l     O .bss	00000004 bus_entry_cnt
00000018 l     O .bss	00000004 io_apic_entries
0000001c l     O .bss	00000004 io_apic_entry_cnt
00000020 l     O .bss	00000004 io_apic_cnt
0000002c l     O .bss	00000004 l_intr_entries
00000030 l     O .bss	00000004 l_intr_entry_cnt
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
000001a4 g     F .text	000005f2 mps_init
00000000         *UND*	00000000 ebda
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 config
00000000         *UND*	00000000 l_apic
00000000         *UND*	00000000 apic_id_mask
00000000         *UND*	00000000 io_apic
00000000 g     O .data	00000010 mps_config_operations



arch/ia32/src/smp/smp.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 smp.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     O .bss	00000004 ops
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000004 l     O .rodata	00000004 __FUNCTION__.3356
00000000 l     O .rodata	00000004 __func__.3353
00000008 l     O .rodata	0000000f __func__.3363
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000089 smp_init
00000000         *UND*	00000000 acpi_madt
00000000         *UND*	00000000 acpi_madt_parse
00000000         *UND*	00000000 madt_config_operations
00000000         *UND*	00000000 config
00000000         *UND*	00000000 l_apic
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 io_apic
00000000         *UND*	00000000 mps_init
00000000         *UND*	00000000 mps_config_operations
00000089 g     F .text	00000270 kmp
00000000         *UND*	00000000 ap_boot
00000000         *UND*	00000000 pic_disable_irqs
00000000         *UND*	00000000 apic_init
00000000         *UND*	00000000 bsp_l_apic
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 gdt
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 protected_ap_gdtr
00000000         *UND*	00000000 gdtr
00000000         *UND*	00000000 l_apic_send_init_ipi
00000000         *UND*	00000000 ap_completion_wq
00000000         *UND*	00000000 waitq_sleep_timeout
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 panic_common
000002f9 g     F .text	00000067 smp_irq_to_pin



arch/ia32/src/atomic.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 g       .text	00000000 spinlock_arch



arch/ia32/src/smp/ipi.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ipi.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000010 ipi_broadcast_arch
00000000         *UND*	00000000 l_apic_broadcast_custom_ipi



arch/ia32/src/ia32.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ia32.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000049 arch_pre_main
00000000         *UND*	00000000 multiboot_info_parse
00000000         *UND*	00000000 multiboot2_info_parse
00000000         *UND*	00000000 _hardcoded_unmapped_size
00000000         *UND*	00000000 memcpy
00000049 g     F .text	00000027 arch_pre_mm_init
00000000         *UND*	00000000 pm_init
00000000         *UND*	00000000 config
00000000         *UND*	00000000 interrupt_init
00000000         *UND*	00000000 bios_init
00000000         *UND*	00000000 i8259_init
00000070 g     F .text	0000005b arch_post_mm_init
00000000         *UND*	00000000 irq_init
00000000         *UND*	00000000 i8254_init
00000000         *UND*	00000000 bfb_init
00000000         *UND*	00000000 zone_merge_all
00000000         *UND*	00000000 ega_init
00000000         *UND*	00000000 stdout_wire
000000cb g     F .text	0000001c arch_post_cpu_init
00000000         *UND*	00000000 l_apic_init
00000000         *UND*	00000000 l_apic_debug
000000e7 g     F .text	00000015 arch_pre_smp_init
00000000         *UND*	00000000 acpi_init
000000fc g     F .text	000000b6 arch_post_smp_init
00000000         *UND*	00000000 str_size
00000000         *UND*	00000000 sysinfo_set_item_data
00000000         *UND*	00000000 i8042_init
00000000         *UND*	00000000 kbrd_init
00000000         *UND*	00000000 stdin_wire
00000000         *UND*	00000000 kbrd_wire
00000000         *UND*	00000000 i8042_wire
00000000         *UND*	00000000 trap_virtual_enable_irqs
00000000         *UND*	00000000 irqs_info
00000000         *UND*	00000000 sysinfo_set_item_val
000001b2 g     F .text	0000001d calibrate_delay_loop
00000000         *UND*	00000000 i8254_calibrate_delay_loop
00000000         *UND*	00000000 i8254_normal_operation
000001cf g     F .text	00000025 sys_tls_set
00000000         *UND*	00000000 set_tls_desc
000001f4 g     F .text	00000008 arch_construct_function
000001fc g     F .text	00000014 arch_reboot
00000000         *UND*	00000000 i8042_cpu_reset
00000210 g     F .text	00000005 irq_initialize_arch



arch/ia32/src/interrupt.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 interrupt.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	0000004c simd_fp_exception
0000004c l     F .text	00000041 ss_fault
0000008d l     F .text	00000041 de_fault
000000ce l     F .text	0000004a null_interrupt
00000118 l     F .text	00000009 nm_fault
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	00000032 trap_virtual_eoi.part.1
00000121 l     F .text	000000b3 gp_fault
000001d4 l     F .text	00000021 tlb_shootdown_ipi
000001f5 l     F .text	00000134 irq_interrupt
00000000 l     O .rodata	0000000e __func__.3484
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 fault_if_from_uspace
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 scheduler_fpu_lazy_request
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 io_perm_bitmap_install
00000004 g     O .bss	00000004 eoi_function
00000000         *UND*	00000000 tlb_shootdown_ipi_recv
00000000         *UND*	00000000 irq_dispatch_and_lock
00000000         *UND*	00000000 printf
00000329 g     F .text	000000d5 istate_decode
000003fe g     F .text	00000307 interrupt_init
00000000         *UND*	00000000 exc_register
00000705 g     F .text	00000045 trap_virtual_enable_irqs
00000008 g     O .bss	00000004 enable_irqs_function
0000074a g     F .text	00000045 trap_virtual_disable_irqs
0000000c g     O .bss	00000004 disable_irqs_function
00000000 g     O .bss	00000004 irqs_info



arch/ia32/src/pm.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 pm.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000020 l     O .bss	00000200 idt
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000220 l     O .bss	00002069 tss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000022 gdt_setbase
00000022 g     F .text	00000026 gdt_setlimit
00000048 g     F .text	0000001f idt_setoffset
00000067 g     F .text	00000023 tss_initialize
00000000         *UND*	00000000 memsetb
0000008a g     F .text	00000539 idt_init
00000000         *UND*	00000000 int_0
00000000         *UND*	00000000 int_1
00000000         *UND*	00000000 int_2
00000000         *UND*	00000000 int_3
00000000         *UND*	00000000 int_4
00000000         *UND*	00000000 int_5
00000000         *UND*	00000000 int_6
00000000         *UND*	00000000 int_7
00000000         *UND*	00000000 int_8
00000000         *UND*	00000000 int_9
00000000         *UND*	00000000 int_10
00000000         *UND*	00000000 int_11
00000000         *UND*	00000000 int_12
00000000         *UND*	00000000 int_13
00000000         *UND*	00000000 int_14
00000000         *UND*	00000000 int_15
00000000         *UND*	00000000 int_16
00000000         *UND*	00000000 int_17
00000000         *UND*	00000000 int_18
00000000         *UND*	00000000 int_19
00000000         *UND*	00000000 int_20
00000000         *UND*	00000000 int_21
00000000         *UND*	00000000 int_22
00000000         *UND*	00000000 int_23
00000000         *UND*	00000000 int_24
00000000         *UND*	00000000 int_25
00000000         *UND*	00000000 int_26
00000000         *UND*	00000000 int_27
00000000         *UND*	00000000 int_28
00000000         *UND*	00000000 int_29
00000000         *UND*	00000000 int_30
00000000         *UND*	00000000 int_31
00000000         *UND*	00000000 int_32
00000000         *UND*	00000000 int_33
00000000         *UND*	00000000 int_34
00000000         *UND*	00000000 int_35
00000000         *UND*	00000000 int_36
00000000         *UND*	00000000 int_37
00000000         *UND*	00000000 int_38
00000000         *UND*	00000000 int_39
00000000         *UND*	00000000 int_40
00000000         *UND*	00000000 int_41
00000000         *UND*	00000000 int_42
00000000         *UND*	00000000 int_43
00000000         *UND*	00000000 int_44
00000000         *UND*	00000000 int_45
00000000         *UND*	00000000 int_46
00000000         *UND*	00000000 int_47
00000000         *UND*	00000000 int_49
00000000         *UND*	00000000 int_50
00000000         *UND*	00000000 int_51
00000000         *UND*	00000000 int_52
00000000         *UND*	00000000 int_53
00000000         *UND*	00000000 int_54
00000000         *UND*	00000000 int_55
00000000         *UND*	00000000 int_56
00000000         *UND*	00000000 int_57
00000000         *UND*	00000000 int_58
00000000         *UND*	00000000 int_59
00000000         *UND*	00000000 int_60
00000000         *UND*	00000000 int_61
00000000         *UND*	00000000 int_62
00000000         *UND*	00000000 int_63
00000000         *UND*	00000000 int_syscall
000005c3 g     F .text	0000010f pm_init
00000000 g     O .data	00000006 gdtr
00000000         *UND*	00000000 config
00000000         *UND*	00000000 malloc
00000000 g     O .bss	00000004 tss_p
00000000         *UND*	00000000 panic_common
000006d2 g     F .text	0000002d set_tls_desc
00000020 g     O .data	00000040 gdt



arch/ia32/src/userspace.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 userspace.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000035 userspace



arch/ia32/src/cpu/cpu.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	0000000c vendor_str
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000000e fpu_disable
0000000e g     F .text	0000000e fpu_enable
0000001c g     F .text	000000db cpu_arch_init
00000000         *UND*	00000000 tss_p
00000000         *UND*	00000000 fpu_fxsr
00000000         *UND*	00000000 fpu_fsr
00000000         *UND*	00000000 syscall_setup_cpu
000000f7 g     F .text	000000d9 cpu_identify
000001d0 g     F .text	0000005b cpu_print_report
00000000         *UND*	00000000 printf



arch/ia32/src/mm/km.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 km.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000019 km_identity_arch_init
00000000         *UND*	00000000 config
00000019 g     F .text	0000001c km_non_identity_arch_init
00000000         *UND*	00000000 km_non_identity_span_add
00000035 g     F .text	0000000f km_is_non_identity_arch



arch/ia32/src/mm/as.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 as.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000000f as_arch_init
00000000         *UND*	00000000 as_pt_operations
00000000         *UND*	00000000 as_operations



arch/ia32/src/mm/frame.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 frame.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000022b init_e820_memory
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	00000018 e820names
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 e820counter
00000000         *UND*	00000000 e820table
00000000         *UND*	00000000 frame_adjust_zone_bounds
00000000         *UND*	00000000 zone_create
00000000         *UND*	00000000 zone_external_conf_alloc
0000022b g     F .text	0000007b physmem_print
00000000         *UND*	00000000 printf
000002a6 g     F .text	00000061 frame_low_arch_init
00000000         *UND*	00000000 config
00000004 g     O .bss	00000004 hardcoded_unmapped_ktext_size
00000000 g     O .bss	00000004 hardcoded_unmapped_kdata_size
00000000         *UND*	00000000 frame_mark_unavailable
00000307 g     F .text	00000019 frame_high_arch_init



arch/ia32/src/mm/page.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 page.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000099 page_fault
00000000         *UND*	00000000 as_page_fault
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 fault_if_from_uspace
00000099 g     F .text	00000111 page_arch_init
00000000         *UND*	00000000 config
00000000         *UND*	00000000 AS_KERNEL
00000000         *UND*	00000000 paging_on
00000000         *UND*	00000000 pt_mapping_operations
00000000         *UND*	00000000 page_mapping_operations
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_mapping_insert
00000000         *UND*	00000000 page_table_unlock
00000000         *UND*	00000000 exc_register



arch/ia32/src/mm/tlb.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 tlb.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000000b tlb_invalidate_all
0000000b g     F .text	0000000b tlb_invalidate_asid
00000016 g     F .text	00000020 tlb_invalidate_pages
00000036 g     F .text	00000005 tlb_arch_init
0000003b g     F .text	00000005 tlb_print



arch/ia32/src/ddi/ddi.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ddi.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000017 __func__.3098
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000010b ddi_iospace_enable_arch
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 bitmap_initialize
00000000         *UND*	00000000 bitmap_set_range
00000000         *UND*	00000000 bitmap_clear_range
00000000         *UND*	00000000 bitmap_copy
00000000         *UND*	00000000 free
0000010b g     F .text	0000018e io_perm_bitmap_install
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 gdt_setlimit
00000000         *UND*	00000000 panic_common



arch/ia32/src/drivers/i8254.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 i8254.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a i8254_claim
0000000a l     F .text	00000038 i8254_irq_handler
00000000 l     O .bss	00000070 i8254_irq
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 clock
00000000         *UND*	00000000 irq_spinlock_lock
00000042 g     F .text	00000083 i8254_init
00000000         *UND*	00000000 irq_initialize
00000000         *UND*	00000000 device_assign_devno
00000000         *UND*	00000000 irq_register
00000000         *UND*	00000000 pic_disable_irqs
00000000         *UND*	00000000 pic_enable_irqs
000000c5 g     F .text	0000003c i8254_normal_operation
00000101 g     F .text	00000115 i8254_calibrate_delay_loop
00000000         *UND*	00000000 asm_delay_loop
00000000         *UND*	00000000 asm_fake_loop
00000000         *UND*	00000000 delay



arch/ia32/src/drivers/i8259.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 i8259.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000065 l     F .text	00000023 pic_spurious
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000002d pic_enable_irqs
0000002d g     F .text	00000025 pic_disable_irqs
00000052 g     F .text	00000013 pic_eoi
00000000         *UND*	00000000 printf
00000088 g     F .text	000000b8 i8259_init
00000000         *UND*	00000000 exc_register
00000000         *UND*	00000000 enable_irqs_function
00000000         *UND*	00000000 disable_irqs_function
00000000         *UND*	00000000 eoi_function
00000000         *UND*	00000000 irqs_info



arch/ia32/src/boot/multiboot.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  K_TEXT_START	00000000 K_TEXT_START
00000000 l       K_TEXT_START	00000000 multiboot_header
0000004a l       K_TEXT_START	00000000 multiboot_meeting_point
00001020 l       K_DATA_START	00000000 status_prot
000003f2 l       K_TEXT_START	00000000 pm_early_puts
0000103a l       K_DATA_START	00000000 status_vesa_copy
00000489 l       K_TEXT_START	00000000 vesa_init
00000ae4 l       K_TEXT_START	00000000 e_vesa_init
00001047 l       K_DATA_START	00000000 status_multiboot_cmdline
000000da l       K_TEXT_START	00000000 no_cmdline
000000a7 l       K_TEXT_START	00000000 skip_loop
000000b2 l       K_TEXT_START	00000000 skip_loop_done
000000b2 l       K_TEXT_START	00000000 space_loop
000000bf l       K_TEXT_START	00000000 space_loop_done
00000aa3 l       K_TEXT_START	00000000 default_mode
000000cf l       K_TEXT_START	00000000 cmd_loop
000000d7 l       K_TEXT_START	00000000 cmd_loop_done
0000105c l       K_DATA_START	00000000 status_vesa_real
000000ed l       K_TEXT_START	00000000 vesa_meeting_point
00001069 l       K_DATA_START	00000000 status_prot2
0000018f l       K_TEXT_START	00000000 pse_unsupported
00001028 l       K_DATA_START	00000000 status_pse
000001a0 l       K_TEXT_START	00000000 stack_init
0000102f l       K_DATA_START	00000000 status_non_pse
00001072 l       K_DATA_START	00000000 status_prot3
00000488 l       K_TEXT_START	00000000 early_puts
0000107b l       K_DATA_START	00000000 status_main
000001cf l       K_TEXT_START	00000000 hlt0
00000000 l       K_DATA_START	00000000 page_directory
000001ec l       K_TEXT_START	00000000 floop_pse
000002c6 l       K_TEXT_START	00000000 calc_kernel_end
00000306 l       K_TEXT_START	00000000 find_mem_for_pt
00001018 l       K_DATA_START	00000000 kernel_end
0000101c l       K_DATA_START	00000000 free_area
00000243 l       K_TEXT_START	00000000 use_kernel_end
00001014 l       K_DATA_START	00000000 pt_loc
0000026f l       K_TEXT_START	00000000 floop_pt
0000029a l       K_TEXT_START	00000000 floop
00000313 l       K_TEXT_START	00000000 check_multiboot_map
00000321 l       K_TEXT_START	00000000 use_multiboot_map
00000329 l       K_TEXT_START	00000000 check_memmap_loop
00000344 l       K_TEXT_START	00000000 next_region
00000350 l       K_TEXT_START	00000000 found_region
00000349 l       K_TEXT_START	00000000 next_region_do
00000363 l       K_TEXT_START	00000000 pm_error_halt
00000390 l       K_TEXT_START	00000000 err_cursor_ok
00000397 l       K_TEXT_START	00000000 err_ploop
000003d2 l       K_TEXT_START	00000000 err_ploop_end
000003ef l       K_TEXT_START	00000000 hlt1
00000424 l       K_TEXT_START	00000000 pm_puts_cursor_ok
0000042b l       K_TEXT_START	00000000 pm_puts_ploop
00000466 l       K_TEXT_START	00000000 pm_puts_ploop_end
00000497 l       K_TEXT_START	00000000 vesa_idtr
0000049d l       K_TEXT_START	00000000 vesa_init_real
000004ac l       K_TEXT_START	00000000 vesa_init_real2
000004d9 l       K_TEXT_START	00000000 parse_width
000004fa l       K_TEXT_START	00000000 parse_width_done
00000a9e l       K_TEXT_START	00000000 default_width
00000556 l       K_TEXT_START	00000000 parse_done
00000507 l       K_TEXT_START	00000000 parse_height
00000528 l       K_TEXT_START	00000000 parse_height_done
00000aa0 l       K_TEXT_START	00000000 default_height
00000535 l       K_TEXT_START	00000000 parse_bpp
00000556 l       K_TEXT_START	00000000 parse_bpp_done
00000aa2 l       K_TEXT_START	00000000 default_bpp
00000677 l       K_TEXT_START	00000000 no_mode
00000579 l       K_TEXT_START	00000000 next_mode
000005c7 l       K_TEXT_START	00000000 set_mode
00000624 l       K_TEXT_START	00000000 vga_not_set
0000069e l       K_TEXT_START	00000000 vga323
00000601 l       K_TEXT_START	00000000 vga_compat
00000623 l       K_TEXT_START	00000000 vga_not_compat
00000610 l       K_TEXT_START	00000000 vga_loop
00000663 l       K_TEXT_START	00000000 vesa_leave_real
0000066f l       K_TEXT_START	00000000 vesa_leave_real2
00000ac7 l       K_TEXT_START	00000000 vesa_init_protected
0000068b l       K_TEXT_START	00000000 text_mode
00000000 l    d  K_DATA_START	00000000 K_DATA_START
00000020 g       K_TEXT_START	00000000 multiboot_image_start
00000000         *UND*	00000000 unmapped_ktext_start
00001006 g       K_DATA_START	00000000 bootstrap_gdtr
00001000 g       K_DATA_START	00000000 bootstrap_idtr
0000100c g       K_DATA_START	00000000 multiboot_eax
00001010 g       K_DATA_START	00000000 multiboot_ebx
00000000         *UND*	00000000 bfb_scanline
00000000         *UND*	00000000 bfb_bpp
00000000         *UND*	00000000 bfb_height
00000000         *UND*	00000000 bfb_width
00000000         *UND*	00000000 bfb_green_pos
00000000         *UND*	00000000 bfb_green_size
00000000         *UND*	00000000 bfb_red_pos
00000000         *UND*	00000000 bfb_red_size
00000000         *UND*	00000000 bfb_blue_pos
00000000         *UND*	00000000 bfb_blue_size
00000000         *UND*	00000000 bfb_addr
000001d2 g       K_TEXT_START	00000000 map_kernel_pse
00000218 g       K_TEXT_START	00000000 map_kernel_non_pse
00000000         *UND*	00000000 arch_pre_main
00000000         *UND*	00000000 main_bsp
00000000         *UND*	00000000 ballocs
00000000         *UND*	00000000 hardcoded_load_address
00000000         *UND*	00000000 hardcoded_ktext_size
00000000         *UND*	00000000 hardcoded_kdata_size
00000000         *UND*	00000000 gdt



arch/ia32/src/boot/multiboot2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  K_TEXT_START	00000000 K_TEXT_START
00000000 l       K_TEXT_START	00000000 multiboot2_header_start
0000007c l       K_TEXT_START	00000000 multiboot2_header_end
00000010 l       K_TEXT_START	00000000 tag_info_req_start
00000024 l       K_TEXT_START	00000000 tag_info_req_end
00000024 l       K_TEXT_START	00000000 tag_address_start
0000003c l       K_TEXT_START	00000000 tag_address_end
0000003c l       K_TEXT_START	00000000 tag_entry_address_start
00000048 l       K_TEXT_START	00000000 tag_entry_address_end
00000048 l       K_TEXT_START	00000000 tag_flags_start
00000054 l       K_TEXT_START	00000000 tag_flags_end
00000054 l       K_TEXT_START	00000000 tag_framebuffer_start
00000068 l       K_TEXT_START	00000000 tag_framebuffer_end
00000068 l       K_TEXT_START	00000000 tag_module_align_start
00000074 l       K_TEXT_START	00000000 tag_module_align_end
00000074 l       K_TEXT_START	00000000 tag_terminator_start
0000007c l       K_TEXT_START	00000000 tag_terminator_end
000000a6 l       K_TEXT_START	00000000 multiboot2_meeting_point
000000d1 l       K_TEXT_START	00000000 pse_unsupported
000000d6 l       K_TEXT_START	00000000 stack_init
000000f1 l       K_TEXT_START	00000000 hlt0
0000007c g       K_TEXT_START	00000000 multiboot2_image_start
00000000         *UND*	00000000 unmapped_ktext_start
00000000         *UND*	00000000 bootstrap_gdtr
00000000         *UND*	00000000 bootstrap_idtr
00000000         *UND*	00000000 multiboot_eax
00000000         *UND*	00000000 multiboot_ebx
00000000         *UND*	00000000 map_kernel_pse
00000000         *UND*	00000000 map_kernel_non_pse
00000000         *UND*	00000000 arch_pre_main
00000000         *UND*	00000000 main_bsp



arch/ia32/src/boot/memmap.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memmap.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .comment	00000000 .comment
00000280       O *COM*	00000020 e820table
00000000 g     O .bss	00000001 e820counter



arch/ia32/src/fpu_context.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 fpu_context.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a fpu_context_f_save
0000000a l     F .text	0000000a fpu_context_f_restore
00000014 l     F .text	0000000b fpu_context_fx_save
0000001f l     F .text	0000000b fpu_context_fx_restore
00000000 l     O .bss	00000004 fpu_save
00000004 l     O .bss	00000004 fpu_restore
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
0000002a g     F .text	00000019 fpu_fxsr
00000043 g     F .text	00000019 fpu_fsr
0000005c g     F .text	0000000b fpu_context_save
00000067 g     F .text	0000000b fpu_context_restore
00000072 g     F .text	00000026 fpu_init



arch/ia32/src/syscall.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 syscall.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000001c syscall_setup_cpu
00000000         *UND*	00000000 sysenter_handler



genarch/src/acpi/acpi.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 acpi.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l       .rodata.str1.1	00000000 .LC0
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000fc acpi_sdt_check
000000fc g     F .text	00000832 acpi_init
00000000         *UND*	00000000 ebda
00000008 g     O .bss	00000004 acpi_rsdp
00000000         *UND*	00000000 km_map
00000004 g     O .bss	00000004 acpi_rsdt
00000000 g     O .bss	00000004 acpi_xsdt
00000000 g     O .data	0000000c signature_map
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 acpi_madt



genarch/src/acpi/madt.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 madt.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000014 madt_irq_to_pin
00000060 l     O .data	00000040 isa_irq_map
00000014 l     F .text	00000024 madt_cmp
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000038 l     F .text	00000072 madt_cpu_apic_id
00000010 l     O .bss	00000004 madt_l_apic_entry_cnt
00000014 l     O .bss	00000004 madt_l_apic_entry_index
0000000c l     O .bss	00000004 madt_entries_index
0000003d l     O .rodata	00000011 __func__.2308
000000aa l     F .text	0000007b madt_cpu_bootstrap
0000004e l     O .rodata	00000013 __func__.2316
00000125 l     F .text	00000079 madt_cpu_enabled
00000061 l     O .rodata	00000011 __func__.2312
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata	00000000 .rodata
00000018 l     O .bss	00000004 madt_io_apic_entry_cnt
0000001c l     O .bss	00000004 madt_io_apic_entry_index
00000024 l     O .rodata	00000019 __func__.2340
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 bsp_l_apic
0000019e g     F .text	00000255 acpi_madt_parse
00000008 g     O .bss	00000004 acpi_madt
00000000         *UND*	00000000 l_apic
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 gsort
00000000         *UND*	00000000 config
00000000         *UND*	00000000 io_apic
00000000         *UND*	00000000 apic_id_mask
00000020 g     O .data	00000024 entry
00000000         *UND*	00000000 printf
00000000 g     O .data	00000010 madt_config_operations
00000000 g     O .bss	00000004 madt_io_apic_entries
00000004 g     O .bss	00000004 madt_l_apic_entries



genarch/src/mm/page_pt.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 page_pt.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	0000018f pt_mapping_insert
00000039 l     O .rodata	00000012 __func__.2932
0000018f l     F .text	0000012b pt_mapping_make_global
00000000 l     O .rodata	00000017 __func__.2975
000002ba l     F .text	00000136 pt_mapping_remove
00000027 l     O .rodata	00000012 __func__.2943
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
000003f0 l     F .text	000000d7 pt_mapping_find
00000017 l     O .rodata	00000010 __func__.2958
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 page_table_locked
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 AS_KERNEL
00000000         *UND*	00000000 km_is_non_identity
00000000         *UND*	00000000 frame_free
00000000 g     O .data	00000010 pt_mapping_operations



genarch/src/mm/as_pt.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 as_pt.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000d pt_locked
0000000d l     F .text	0000001a pt_unlock
00000027 l     F .text	00000009 ptl0_destroy
00000030 l     F .text	000000c5 ptl0_create
000000f5 l     F .text	0000002e pt_lock
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 frame_free
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 AS_KERNEL
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 memcpy
00000000 g     O .data	00000014 as_pt_operations



genarch/src/softint/division.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 division.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000078 __divsi3
00000078 g     F .text	00000145 __divdi3
000001bd g     F .text	0000004f __udivsi3
0000020c g     F .text	000000f2 __udivdi3
000002fe g     F .text	00000048 __modsi3
00000346 g     F .text	000000b4 __moddi3
000003fa g     F .text	0000003d __umodsi3
00000437 g     F .text	0000008d __umoddi3
000004c4 g     F .text	00000084 __divmodsi3
00000548 g     F .text	00000067 __udivmodsi3
000005af g     F .text	00000174 __divmoddi3
00000723 g     F .text	000000fd __udivmoddi3



genarch/src/softint/multiplication.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 multiplication.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000169 __muldi3



genarch/src/fb/font-8x16.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 font-8x16.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000884 fb_font_glyph
00000000 g     O .data	0000b530 fb_font



genarch/src/fb/logo-196x66.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 logo-196x66.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .comment	00000000 .comment
00000000 g     O .data	0000ca20 fb_logo



genarch/src/fb/fb.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 fb.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000029 rgb_0888
00000029 l     F .text	0000002e bgr_0888
00000057 l     F .text	0000002c rgb_8880
00000083 l     F .text	00000042 bgr_8880
000000c5 l     F .text	0000001d rgb_888
000000e2 l     F .text	0000001b bgr_888
000000fd l     F .text	00000030 rgb_555_be
0000012d l     F .text	0000002e rgb_555_le
0000015b l     F .text	0000002d rgb_565_be
00000188 l     F .text	0000002b rgb_565_le
000001b3 l     F .text	0000002c bgr_323
000001df l     F .text	000001e2 fb_redraw_internal
000003c1 l     F .text	00000029 fb_redraw
000003ea l     F .text	00000466 cursor_remove
00000850 l     F .text	00001058 fb_putchar
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata	00000000 .rodata
00000038 l     O .rodata	00000008 __func__.3465
00000000 l     O .data	00000008 fbdev_ops
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 fb_logo
00000000         *UND*	00000000 memcpy
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 console_override
00000000         *UND*	00000000 fb_font_glyph
00000000         *UND*	00000000 memmove
00000000         *UND*	00000000 memsetw
000018a8 g     F .text	0000076b fb_init
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 outdev_initialize
00000000         *UND*	00000000 spinlock_initialize
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 fb_font
00000000         *UND*	00000000 ddi_parea_register
00000000         *UND*	00000000 fb_exported
00000000         *UND*	00000000 free
00000000         *UND*	00000000 sysinfo_set_item_val



genarch/src/fb/bfb.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 bfb.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000010b bfb_init
00000028 g     O .bss	00000004 bfb_addr
00000024 g     O .bss	00000004 bfb_width
00000020 g     O .bss	00000004 bfb_height
0000001c g     O .bss	00000002 bfb_bpp
00000018 g     O .bss	00000004 bfb_scanline
00000000         *UND*	00000000 fb_init
00000000         *UND*	00000000 stdout_wire
00000014 g     O .bss	00000001 bfb_red_pos
00000010 g     O .bss	00000001 bfb_red_size
0000000c g     O .bss	00000001 bfb_green_pos
00000008 g     O .bss	00000001 bfb_green_size
00000004 g     O .bss	00000001 bfb_blue_pos
00000000 g     O .bss	00000001 bfb_blue_size



genarch/src/drivers/i8042/i8042.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 i8042.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000026 i8042_claim
00000026 l     F .text	0000004e i8042_irq_handler
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	0000000b __func__.3069
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 indev_push_character
00000074 g     F .text	0000005d i8042_init
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 irq_initialize
00000000         *UND*	00000000 device_assign_devno
000000d1 g     F .text	00000138 i8042_wire
00000000         *UND*	00000000 delay
00000000         *UND*	00000000 irq_register
00000000         *UND*	00000000 panic_common
00000209 g     F .text	00000126 i8042_cpu_reset



genarch/src/kbrd/kbrd.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 kbrd.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000173 kkbrd
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .bss	00000004 kbrd_raw_ops
00000000 l     O .rodata	0000000a __func__.3176
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 indev_pop_character
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 sc_primary_map
00000000         *UND*	00000000 indev_push_character
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 sc_secondary_map
00000173 g     F .text	000000b9 kbrd_init
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 indev_initialize
00000000         *UND*	00000000 spinlock_initialize
00000000         *UND*	00000000 free
0000022c g     F .text	00000089 kbrd_wire
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 panic_common



genarch/src/kbrd/scanc_pc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 scanc_pc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .comment	00000000 .comment
00000000 g     O .data	00000200 sc_secondary_map
00000200 g     O .data	00000200 sc_primary_map



genarch/src/multiboot/multiboot.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 multiboot.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000071 multiboot_extract_command
00000000         *UND*	00000000 str_chr
00000000         *UND*	00000000 str_ncpy
00000000         *UND*	00000000 str_size
00000071 g     F .text	00000084 multiboot_extract_argument
00000000         *UND*	00000000 str_cpy
000000f5 g     F .text	0000024d multiboot_info_parse
00000000         *UND*	00000000 e820counter
00000000         *UND*	00000000 e820table
00000000         *UND*	00000000 init



genarch/src/multiboot/multiboot2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 multiboot2.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000001df multiboot2_info_parse
00000000         *UND*	00000000 e820counter
00000000         *UND*	00000000 e820table
00000000         *UND*	00000000 init
00000000         *UND*	00000000 multiboot_extract_command
00000000         *UND*	00000000 multiboot_extract_argument
00000000         *UND*	00000000 bfb_addr
00000000         *UND*	00000000 bfb_width
00000000         *UND*	00000000 bfb_height
00000000         *UND*	00000000 bfb_bpp
00000000         *UND*	00000000 bfb_scanline
00000000         *UND*	00000000 bfb_red_pos
00000000         *UND*	00000000 bfb_red_size
00000000         *UND*	00000000 bfb_green_pos
00000000         *UND*	00000000 bfb_green_size
00000000         *UND*	00000000 bfb_blue_pos
00000000         *UND*	00000000 bfb_blue_size



genarch/src/drivers/ega/ega.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ega.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000019d ega_redraw
0000019d l     F .text	00000c2b ega_putchar
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .data	00000008 egadev_ops
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 console_override
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 memmove
00000000         *UND*	00000000 memsetw
00000dc8 g     F .text	00000569 ega_init
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 outdev_initialize
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 ddi_parea_register
00000000         *UND*	00000000 fb_exported
00000000         *UND*	00000000 sysinfo_set_item_val
00000000         *UND*	00000000 free



generic/src/adt/avl.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 avl.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	00000052 repair.isra.0.part.1
0000001e l     O .rodata	00000007 __func__.1068
00000000 l     F .text	00000280 _avltree_walk
00000000 l     O .rodata	0000000f __func__.1053
0000000f l     O .rodata	0000000f __func__.1077
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000280 g     F .text	00000036 avltree_search
000002b6 g     F .text	0000001b avltree_find_min
000002d1 g     F .text	000002e4 avltree_insert
000005b5 g     F .text	000004e1 avltree_delete
00000a96 g     F .text	00000030 avltree_delete_min
00000ac6 g     F .text	0000001a avltree_walk



generic/src/adt/bitmap.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 bitmap.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000011 __func__.1046
00000011 l     O .rodata	00000013 __func__.1060
00000024 l     O .rodata	0000000c __func__.1070
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000013 bitmap_initialize
00000013 g     F .text	0000013b bitmap_set_range
00000000         *UND*	00000000 panic_common
0000014e g     F .text	0000013b bitmap_clear_range
00000289 g     F .text	000000df bitmap_copy



generic/src/adt/btree.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 btree.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	000002ea btree_destroy_subtree
00000000 l     O .bss	00000004 btree_node_slab
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
000002ea l     F .text	000003b2 rotate_from_left
0000069c l     F .text	00000347 rotate_from_right
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
000009e3 l     F .text	00000799 _btree_insert
0000000d l     O .rodata	0000000b __func__.2012
00000000 l     O .rodata	0000000d __func__.2032
00000026 l     O .rodata	0000000d __func__.2049
00000018 l     O .rodata	0000000e __func__.2065
00000034 l     O .rodata	0000001f __func__.2093
00000060 l     O .rodata	00000020 __func__.2098
00000080 l     O .rodata	0000000c __func__.2107
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 slab_alloc
0000117c g     F .text	00000041 btree_init
00000000         *UND*	00000000 slab_cache_create
000011bd g     F .text	00000127 btree_create
000012e4 g     F .text	0000000e btree_destroy
000012f2 g     F .text	00000184 btree_insert
00001476 g     F .text	0000066f btree_remove
00001ae5 g     F .text	000000ad btree_search
00001b92 g     F .text	00000072 btree_leaf_node_left_neighbour
00001c04 g     F .text	00000072 btree_leaf_node_right_neighbour
00001c76 g     F .text	00000280 btree_print
00000000         *UND*	00000000 printf



generic/src/adt/hash_table.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 hash_table.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	00000012 __func__.1894
00000012 l     O .rodata	00000012 __func__.1904
00000024 l     O .rodata	00000010 __func__.1910
00000034 l     O .rodata	00000012 __func__.1921
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000016b hash_table_create
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 panic_common
0000016b g     F .text	0000010d hash_table_insert
00000278 g     F .text	0000012c hash_table_find
000003a4 g     F .text	000001de hash_table_remove



generic/src/adt/list.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 list.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000002d list_member
0000002d g     F .text	0000002e list_concat
0000005b g     F .text	0000001b list_count



generic/src/console/chardev.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 chardev.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000015 __func__.3089
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000050 indev_initialize
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 irq_spinlock_initialize
00000050 g     F .text	000000c9 indev_push_character
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 waitq_wakeup
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 panic_common
00000119 g     F .text	000000e8 indev_pop_character
00000000         *UND*	00000000 haltstate
00000000         *UND*	00000000 waitq_sleep_timeout
00000000         *UND*	00000000 printf
00000201 g     F .text	00000045 outdev_initialize
00000000         *UND*	00000000 spinlock_initialize
00000246 g     F .text	00000021 check_poll



generic/src/console/console.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 console.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000041 stdout_write
00000041 l     F .text	00000039 stdout_redraw
000008b8 l     O .bss	00000004 klog_inited
00000008 l     O .data	00000008 klog_lock
000008bc l     O .bss	00000004 klog_uspace
000008c0 l     O .bss	00000004 klog_len
000008c4 l     O .bss	00000004 klog_start
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000860 l     O .bss	00000004 stdin_ops
00000020 l     O .bss	00000840 stdin_sink
00000000 l     O .data	00000008 stdout_ops
00000880 l     O .bss	00000024 stdout_source
000008a4 l     O .bss	00000014 klog_parea
000008c8 l     O .bss	00000004 klog_stored
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
0000007a g     F .text	0000007c klog_update
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 event_notify
000000f6 g     F .text	0000003d stdin_wire
00000004 g     O .bss	00000004 stdin
00000000         *UND*	00000000 indev_initialize
00000133 g     F .text	0000005e stdout_wire
00000000 g     O .bss	00000004 stdout
00000000         *UND*	00000000 outdev_initialize
00000191 g     F .text	0000008c klog_init
00008000       O *COM*	00001000 klog
00000000         *UND*	00000000 ddi_parea_register
00000000         *UND*	00000000 sysinfo_set_item_val
00000000         *UND*	00000000 event_set_unmask_callback
0000021d g     F .text	00000050 grab_console
00000008 g     O .bss	00000001 console_override
00000000         *UND*	00000000 indev_push_character
0000026d g     F .text	0000000c release_console
00000279 g     F .text	00000055 sys_debug_activate_console
000002ce g     F .text	000001bc putchar
00000000         *UND*	00000000 early_putchar
0000048a g     F .text	00000021 getc
00000000         *UND*	00000000 indev_pop_character
000004ab g     F .text	000000c4 gets
00000000         *UND*	00000000 chr_encode
00000000         *UND*	00000000 str_lsize
0000056f g     F .text	000001a5 sys_klog
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 free
00000000         *UND*	00000000 printf



generic/src/console/prompt.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 prompt.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	00000021 __func__.1714
00000021 l     O .rodata	0000001a __func__.1721
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000c9 console_prompt_display_all_hints
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 indev_pop_character
00000000         *UND*	00000000 panic_common
000000c9 g     F .text	000000de console_prompt_more_hints



generic/src/cpu/cpu.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cpu.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000488 cpu_init
00000000         *UND*	00000000 config
00000004       O *COM*	00000004 cpus
00000000         *UND*	00000000 cpu_identify
00000000         *UND*	00000000 cpu_arch_init
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 panic_common
00000488 g     F .text	0000005a cpu_list
00000000         *UND*	00000000 cpu_print_report
00000000         *UND*	00000000 printf



generic/src/ddi/ddi.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ddi.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     O .bss	0000000c parea_btree
00000020 l     O .bss	00000020 parea_lock
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	0000000c __func__.3177
00000017 l     O .rodata	00000015 __func__.3231
0000000c l     O .rodata	0000000b __func__.3222
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000028 ddi_init
00000000         *UND*	00000000 btree_create
00000000         *UND*	00000000 mutex_initialize
00000028 g     F .text	0000005e ddi_parea_register
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 btree_insert
00000000         *UND*	00000000 mutex_unlock
00000086 g     F .text	0000023e sys_physmem_map
00000000         *UND*	00000000 cap_get
00000000         *UND*	00000000 btree_search
00000000         *UND*	00000000 zones
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 find_zone
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 phys_backend
00000000         *UND*	00000000 as_area_create
00000000         *UND*	00000000 copy_to_uspace
00000000         *UND*	00000000 panic_common
000002c4 g     F .text	00000007 sys_physmem_unmap
000002cb g     F .text	0000010c sys_iospace_enable
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 tasks_lock
00000000         *UND*	00000000 task_find_by_id
00000000         *UND*	00000000 irq_spinlock_exchange
00000000         *UND*	00000000 ddi_iospace_enable_arch
000003d7 g     F .text	0000000a sys_iospace_disable
000003e1 g     F .text	00000225 sys_dmamem_map
00000000         *UND*	00000000 page_find_mapping
00000000         *UND*	00000000 frame_alloc_noreserve
00000000         *UND*	00000000 frame_free_noreserve
00000606 g     F .text	00000007 sys_dmamem_unmap



generic/src/ddi/irq.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 irq.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000014 irq_ht_hash
00000004 l     O .bss	00000004 buckets
00000014 l     F .text	0000000a irq_lin_hash
0000001e l     F .text	0000001e irq_ht_remove
0000003c l     F .text	0000007a irq_ht_compare
000000b6 l     F .text	0000001e irq_lin_remove
000000d4 l     F .text	00000061 irq_lin_compare
0000001c l     O .data	0000000c irq_ht_ops
00000008 l     O .bss	00000010 irq_kernel_hash_table
00000010 l     O .data	0000000c irq_lin_ops
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000028 l     O .data	00000010 irq_kernel_hash_table_lock
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 irq_spinlock_lock
00000135 g     F .text	000000ae irq_init
00000000 g     O .bss	00000004 last_inr
00000010       O *COM*	00000004 irq_uspace_hash_table
00000000         *UND*	00000000 hash_table_create
000001e3 g     F .text	0000006b irq_initialize
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 irq_initialize_arch
0000024e g     F .text	00000080 irq_register
00000000         *UND*	00000000 hash_table_insert
000002ce g     F .text	00000140 irq_dispatch_and_lock
00000000         *UND*	00000000 console_override
00000000         *UND*	00000000 hash_table_find
00000000 g     O .data	00000010 irq_uspace_hash_table_lock



generic/src/ddi/device.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 device.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .bss	00000004 last
00000000 l     O .rodata	00000014 __func__.1036
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000064 device_assign_devno
00000000         *UND*	00000000 panic_common
00000064 g     F .text	00000064 sys_device_assign_devno



generic/src/debug/symtab.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 symtab.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000a6 symtab_name_lookup
00000000         *UND*	00000000 symbol_table
000000a6 g     F .text	0000007b symtab_fmt_name_lookup
00000121 g     F .text	00000100 symtab_addr_lookup
00000000         *UND*	00000000 str_length
00000000         *UND*	00000000 str_chr
00000000         *UND*	00000000 str_lcmp
00000000         *UND*	00000000 str_lsize
00000221 g     F .text	000000d3 symtab_print_search
00000000         *UND*	00000000 printf
000002f4 g     F .text	00000433 symtab_compl
00000000         *UND*	00000000 str_cpy
00000000         *UND*	00000000 console_prompt_display_all_hints
00000000         *UND*	00000000 console_prompt_more_hints



generic/src/debug/stacktrace.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 stacktrace.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000026 kernel_symbol_resolve
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 symtab_name_lookup
00000026 g     F .text	000000e3 stack_trace_ctx
00000000         *UND*	00000000 printf
00000109 g     F .text	00000037 stack_trace
00000000         *UND*	00000000 frame_pointer_get
00000000         *UND*	00000000 program_counter_get
00000010 g     O .data	00000010 kst_ops
00000140 g     F .text	0000003f stack_trace_istate
00000000 g     O .data	00000010 ust_ops
00000000         *UND*	00000000 uspace_stack_trace_context_validate
00000000         *UND*	00000000 uspace_frame_pointer_prev
00000000         *UND*	00000000 uspace_return_address_get
00000000         *UND*	00000000 kernel_stack_trace_context_validate
00000000         *UND*	00000000 kernel_frame_pointer_prev
00000000         *UND*	00000000 kernel_return_address_get



generic/src/debug/panic.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 panic.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000228 panic_common
00000000         *UND*	00000000 console_override
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 vprintf
00000000         *UND*	00000000 istate_decode
00000000         *UND*	00000000 stack_trace
00000000         *UND*	00000000 halt



generic/src/debug/debug.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 debug.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .comment	00000000 .comment



generic/src/interrupt/interrupt.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 interrupt.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	000001e3 cmd_exc_print
00000000 l     O .bss	00000101 flag_buf
000001e3 l     F .text	0000008a fault_from_uspace_core
00000000 l     O .rodata	0000000d __func__.3495
0000000d l     O .rodata	0000000d __func__.3501
0000066a l     F .text	0000004a exc_undef
00000020 l     O .data	00000028 exc_info
00000000 l    d  .rodata	00000000 .rodata
00000048 l     O .data	00000014 exc_argv
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 str_cmp
00000000 g     O .data	00000010 exctbl_lock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 printf
00000700       O *COM*	00000020 exc_table
00000000         *UND*	00000000 order_suffix
00000000         *UND*	00000000 symtab_fmt_name_lookup
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 stdin
00000000         *UND*	00000000 indev_pop_character
00000000         *UND*	00000000 istate_decode
00000000         *UND*	00000000 stack_trace_istate
00000000         *UND*	00000000 vprintf
00000000         *UND*	00000000 task_kill_self
0000026d g     F .text	000000e7 exc_register
00000000         *UND*	00000000 panic_common
00000354 g     F .text	000002e5 exc_dispatch
00000000         *UND*	00000000 thread_update_accounting
00000000         *UND*	00000000 thread_exit
00000639 g     F .text	00000014 fault_from_uspace
0000064d g     F .text	0000001d fault_if_from_uspace
000006b4 g     F .text	00000013 istate_get
000006c7 g     F .text	000000a3 exc_init
00000000         *UND*	00000000 cmd_initialize
00000000         *UND*	00000000 cmd_register



generic/src/main/main.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 main.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000025 main_ap_separated_stack
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000025 l     F .text	000001b0 main_bsp_separated_stack
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 timeout_init
00000000         *UND*	00000000 ap_completion_wq
00000000         *UND*	00000000 waitq_wakeup
00000000         *UND*	00000000 scheduler
00000000         *UND*	00000000 the_initialize
00000000         *UND*	00000000 version_print
00000000         *UND*	00000000 kconsole_init
00000000         *UND*	00000000 exc_init
00000000         *UND*	00000000 arch_pre_mm_init
00000000         *UND*	00000000 km_identity_init
00000000         *UND*	00000000 frame_init
00000000         *UND*	00000000 slab_cache_init
00000000         *UND*	00000000 ra_init
00000000         *UND*	00000000 sysinfo_init
00000000         *UND*	00000000 btree_init
00000000         *UND*	00000000 as_init
00000000         *UND*	00000000 page_init
00000000         *UND*	00000000 tlb_init
00000000         *UND*	00000000 km_non_identity_init
00000000         *UND*	00000000 ddi_init
00000000         *UND*	00000000 arch_post_mm_init
00000000         *UND*	00000000 reserve_init
00000000         *UND*	00000000 arch_pre_smp_init
00000000         *UND*	00000000 smp_init
00000000         *UND*	00000000 slab_enable_cpucache
00000000         *UND*	00000000 zones_total_size
00000000         *UND*	00000000 bin_order_suffix
00000d40 g     O .bss	00000030 config
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 cpu_init
00000000         *UND*	00000000 calibrate_delay_loop
00000000         *UND*	00000000 clock_counter_init
00000000         *UND*	00000000 scheduler_init
00000000         *UND*	00000000 task_init
00000000         *UND*	00000000 thread_init
00000000         *UND*	00000000 futex_init
00000020 g     O .bss	00000d04 init
00000000         *UND*	00000000 ipc_init
00000000         *UND*	00000000 event_init
00000000         *UND*	00000000 klog_init
00000000         *UND*	00000000 stats_init
00000000         *UND*	00000000 AS_KERNEL
00000000         *UND*	00000000 task_create
00000000         *UND*	00000000 kinit
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 panic_common
000001d5 g     F .text	000002a8 main_bsp
00000000         *UND*	00000000 hardcoded_load_address
00000000         *UND*	00000000 hardcoded_ktext_size
00000000         *UND*	00000000 hardcoded_kdata_size
00000004 g     O .bss	00000008 ballocs
00000000 g     O .bss	00000004 stack_safe
0000001c       O *COM*	00000001 ctx
00000000         *UND*	00000000 context_save_arch
00000000         *UND*	00000000 context_restore_arch
0000047d g     F .text	000000da main_ap
00000000         *UND*	00000000 arch_post_cpu_init
00000000         *UND*	00000000 the_copy



generic/src/main/kinit.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 kinit.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000006 l     O .rodata	00000004 alive
00000000 l     O .rodata	00000006 __func__.3726
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000005a8 kinit
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 config
00000000         *UND*	00000000 ap_completion_wq
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 kmp
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 thread_wire
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_join_timeout
00000000         *UND*	00000000 kcpulb
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 arch_post_smp_init
00000000         *UND*	00000000 kload
00000000         *UND*	00000000 stdin
00000000         *UND*	00000000 kconsole_thread
00000000         *UND*	00000000 sysinfo_set_item_val
00000000         *UND*	00000000 init
00000000         *UND*	00000000 str_length
00000000         *UND*	00000000 str_size
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 memcpy
00000000         *UND*	00000000 snprintf
00000000         *UND*	00000000 sysinfo_set_item_data
00000000         *UND*	00000000 cap_set
00000000         *UND*	00000000 ipc_phone_0
00000000         *UND*	00000000 str_cpy
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 program_create_from_image
00000000         *UND*	00000000 program_ready
00000000         *UND*	00000000 init_rd
00000000         *UND*	00000000 thread_sleep
00000000         *UND*	00000000 panic_common



generic/src/main/uinit.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 uinit.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000059 uinit
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 udebug_stoppable_end
00000000         *UND*	00000000 free
00000000         *UND*	00000000 userspace



generic/src/main/version.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 version.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000004c version_print
00000000         *UND*	00000000 printf



generic/src/main/shutdown.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 shutdown.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000021 reboot
00000000         *UND*	00000000 task_done
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 arch_reboot
00000000         *UND*	00000000 halt



generic/src/proc/program.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 program.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000012d program_create
00000000         *UND*	00000000 task_create
00000000         *UND*	00000000 anon_backend
00000000         *UND*	00000000 as_area_create
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 uinit
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 task_destroy
00000000         *UND*	00000000 free
00000000         *UND*	00000000 as_area_destroy
0000012d g     F .text	000000c1 program_create_from_image
00000000         *UND*	00000000 as_create
00000000         *UND*	00000000 elf_load
00000000         *UND*	00000000 as_destroy
00000000 g     O .bss	00000004 program_loader
00000000         *UND*	00000000 printf
000001ee g     F .text	000000b3 program_create_loader
00000000         *UND*	00000000 elf_error
000002a1 g     F .text	00000012 program_ready
00000000         *UND*	00000000 thread_ready
000002b3 g     F .text	00000127 sys_program_spawn_loader
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 cap_get
00000000         *UND*	00000000 cap_set



generic/src/proc/scheduler.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 scheduler.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	00000d23 scheduler_separated_stack
0000000a l     O .rodata	0000001a __func__.3211
00000024 l     O .rodata	00000011 __func__.3183
00000000 l     O .rodata	0000000a __func__.3204
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 task_hold
00000000         *UND*	00000000 as_hold
00000000         *UND*	00000000 after_thread_ran_arch
00000000         *UND*	00000000 thread_states
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 irq_spinlock_lock
00000004       O *COM*	00000004 nrdy
00000000         *UND*	00000000 irq_spinlock_pass
00000000         *UND*	00000000 list_concat
00000000         *UND*	00000000 as_switch
00000000         *UND*	00000000 before_task_runs_arch
00000000         *UND*	00000000 task_release
00000000         *UND*	00000000 as_release
00000000         *UND*	00000000 before_thread_runs_arch
00000000         *UND*	00000000 fpu_disable
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 stack_trace_istate
00000000         *UND*	00000000 the_copy
00000000         *UND*	00000000 context_restore_arch
00000000         *UND*	00000000 irq_spinlock_trylock
00000000         *UND*	00000000 delay
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 fpu_enable
00000000         *UND*	00000000 thread_destroy
00000000         *UND*	00000000 _waitq_wakeup_unsafe
00000d23 g     F .text	000001de scheduler_fpu_lazy_request
00000000         *UND*	00000000 fpu_context_slab
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 fpu_context_save
00000000         *UND*	00000000 fpu_context_restore
00000000         *UND*	00000000 fpu_init
00000f01 g     F .text	00000005 scheduler_init
00000f06 g     F .text	000001d5 scheduler
00000000         *UND*	00000000 haltstate
00000000         *UND*	00000000 context_save_arch
00000000         *UND*	00000000 halt
000010db g     F .text	000002a0 kcpulb
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 thread_sleep
00000000         *UND*	00000000 config
00000000         *UND*	00000000 cpus
0000137b g     F .text	000001f5 sched_print_list



generic/src/proc/thread.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 thread.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000031 thread_search_walker
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000031 l     F .text	000001a7 thread_walker
000001d8 l     F .text	00000043 thr_destructor
0000021b l     F .text	000000c0 thr_constructor
00000000 l     O .bss	00000004 thread_slab
00000000 l     O .rodata	0000000d __func__.3257
0000002c l     O .data	00000010 tidlock
00000008 l     O .bss	00000008 last_tid
00001086 l     F .text	00000178 cushion
0000000d l     O .rodata	0000000f __func__.3274
0000001c l     O .rodata	00000019 __func__.3287
00000035 l     O .rodata	00000018 __func__.3291
0000004d l     O .rodata	00000014 __func__.3304
00000061 l     O .rodata	0000000e __func__.3308
0000006f l     O .rodata	0000000e __func__.3330
0000007d l     O .rodata	00000019 __func__.3336
00000096 l     O .rodata	00000012 __func__.3346
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 order_suffix
00000000         *UND*	00000000 str_cmp
00000000         *UND*	00000000 printf
00000010 g     O .data	0000001c thread_states
00000000         *UND*	00000000 frame_free
00000004       O *COM*	00000004 fpu_context_slab
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 mutex_initialize
000002db g     F .text	000000b0 thread_init
00000000         *UND*	00000000 nrdy
00000000         *UND*	00000000 slab_cache_create
0000000c       O *COM*	00000004 threads_tree
0000038b g     F .text	00000045 thread_wire
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
000003d0 g     F .text	00000164 thread_ready
00000000         *UND*	00000000 irq_spinlock_pass
00000000         *UND*	00000000 panic_common
00000534 g     F .text	000002fb thread_create
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 context_save_arch
00000000         *UND*	00000000 the_initialize
00000000         *UND*	00000000 str_cpy
00000000         *UND*	00000000 timeout_initialize
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 udebug_thread_initialize
00000000         *UND*	00000000 thread_create_arch
00000000         *UND*	00000000 task_hold
00000000 g     O .data	00000010 threads_lock
00000000         *UND*	00000000 avltree_insert
0000082f g     F .text	000001b4 thread_destroy
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 avltree_delete
00000000         *UND*	00000000 task_release
000009e3 g     F .text	0000008c thread_attach
00000a6f g     F .text	000000df thread_exit
00000000         *UND*	00000000 scheduler
00000000         *UND*	00000000 udebug_thread_e_event
00000000         *UND*	00000000 udebug_stoppable_begin
00000000         *UND*	00000000 ipc_cleanup
00000000         *UND*	00000000 futex_cleanup
00000b4e g     F .text	00000071 thread_migration_disable
00000bbf g     F .text	000000a4 thread_migration_enable
00000c63 g     F .text	0000004f thread_sleep
00000000         *UND*	00000000 waitq_sleep_timeout
00000cb2 g     F .text	000000c4 thread_join_timeout
00000d76 g     F .text	000000b1 thread_detach
00000e27 g     F .text	0000002f thread_usleep
00000e56 g     F .text	00000072 thread_print_list
00000000         *UND*	00000000 avltree_walk
00000ec8 g     F .text	0000009d thread_exists
00000000         *UND*	00000000 avltree_search
00000f65 g     F .text	00000121 thread_update_accounting
000011fe g     F .text	000000b5 thread_find_by_id
000012b3 g     F .text	00000185 thread_stack_trace
00000000         *UND*	00000000 waitq_interrupt_sleep
00001438 g     F .text	00000140 sys_thread_create
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 uinit
00000000         *UND*	00000000 copy_to_uspace
00000000         *UND*	00000000 udebug_thread_b_event_attach
00000000         *UND*	00000000 free
00001578 g     F .text	0000000b sys_thread_exit
00001583 g     F .text	0000002e sys_thread_get_id
000015b1 g     F .text	00000031 sys_thread_usleep
000015e2 g     F .text	00000015 sys_thread_udelay
00000000         *UND*	00000000 delay



generic/src/proc/task.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 task.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	000000ea tsk_constructor
000000ea l     F .text	00000107 task_done_walker
00000000 l     O .bss	00000004 task_slab
00000008 l     O .bss	00000008 task_counter
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	00000010 __func__.3242
00000010 l     O .rodata	00000014 __func__.3249
00000901 l     F .text	00000160 task_print_walker
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 ipc_answerbox_init
00000000         *UND*	00000000 ipc_phone_init
00000000         *UND*	00000000 spinlock_initialize
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 threads_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 waitq_interrupt_sleep
000001f1 g     F .text	0000006d task_init
0000000c       O *COM*	00000004 tasks_tree
00000000         *UND*	00000000 slab_cache_create
0000025e g     F .text	00000082 task_done
00000000 g     O .data	00000010 tasks_lock
00000000         *UND*	00000000 avltree_walk
00000000         *UND*	00000000 thread_sleep
000002e0 g     F .text	00000209 task_create
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 task_create_arch
00000000         *UND*	00000000 str_cpy
00000000         *UND*	00000000 event_task_init
00000000         *UND*	00000000 udebug_task_init
00000000         *UND*	00000000 ipc_phone_0
00000000         *UND*	00000000 btree_create
00000000         *UND*	00000000 as_hold
00000000         *UND*	00000000 avltree_insert
00000000         *UND*	00000000 ipc_phone_connect
000004e9 g     F .text	0000007a task_destroy
00000000         *UND*	00000000 avltree_delete
00000000         *UND*	00000000 task_destroy_arch
00000000         *UND*	00000000 btree_destroy
00000000         *UND*	00000000 as_release
00000000         *UND*	00000000 slab_free
00000563 g     F .text	0000000c task_hold
0000056f g     F .text	0000008f task_release
000005fe g     F .text	0000002c sys_task_get_id
00000000         *UND*	00000000 copy_to_uspace
0000062a g     F .text	000000e7 sys_task_set_name
00000000         *UND*	00000000 copy_from_uspace
00000711 g     F .text	0000009e task_find_by_id
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 avltree_search
00000000         *UND*	00000000 panic_common
000007af g     F .text	00000152 task_get_accounting
00000000         *UND*	00000000 thread_update_accounting
00000000         *UND*	00000000 order_suffix
00000a61 g     F .text	000001c9 task_kill
00000c2a g     F .text	0000003a sys_task_kill
00000c64 g     F .text	00000168 task_kill_self
00000000         *UND*	00000000 thread_exit
00000000         *UND*	00000000 event_notify
00000000         *UND*	00000000 udebug_thread_fault
00000dcc g     F .text	00000018 sys_task_exit
00000de4 g     F .text	00000072 task_print_list



generic/src/proc/the.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 the.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000009 __func__.3040
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000031 the_initialize
00000031 g     F .text	00000071 the_copy
00000000         *UND*	00000000 panic_common



generic/src/syscall/syscall.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 syscall.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000209 syscall_handler
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 thread_update_accounting
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 istate_get
00000000 g     O .data	000000c8 syscall_table
00000000         *UND*	00000000 udebug_syscall_event
00000000         *UND*	00000000 udebug_stoppable_begin
00000000         *UND*	00000000 udebug_stoppable_end
00000000         *UND*	00000000 thread_exit
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 task_kill_self
00000000         *UND*	00000000 sys_klog
00000000         *UND*	00000000 sys_tls_set
00000000         *UND*	00000000 sys_thread_create
00000000         *UND*	00000000 sys_thread_exit
00000000         *UND*	00000000 sys_thread_get_id
00000000         *UND*	00000000 sys_thread_usleep
00000000         *UND*	00000000 sys_thread_udelay
00000000         *UND*	00000000 sys_task_get_id
00000000         *UND*	00000000 sys_task_set_name
00000000         *UND*	00000000 sys_task_kill
00000000         *UND*	00000000 sys_task_exit
00000000         *UND*	00000000 sys_program_spawn_loader
00000000         *UND*	00000000 sys_futex_sleep
00000000         *UND*	00000000 sys_futex_wakeup
00000000         *UND*	00000000 sys_smc_coherence
00000000         *UND*	00000000 sys_as_area_create
00000000         *UND*	00000000 sys_as_area_resize
00000000         *UND*	00000000 sys_as_area_change_flags
00000000         *UND*	00000000 sys_as_area_destroy
00000000         *UND*	00000000 sys_page_find_mapping
00000000         *UND*	00000000 sys_ipc_call_async_fast
00000000         *UND*	00000000 sys_ipc_call_async_slow
00000000         *UND*	00000000 sys_ipc_answer_fast
00000000         *UND*	00000000 sys_ipc_answer_slow
00000000         *UND*	00000000 sys_ipc_forward_fast
00000000         *UND*	00000000 sys_ipc_forward_slow
00000000         *UND*	00000000 sys_ipc_wait_for_call
00000000         *UND*	00000000 sys_ipc_poke
00000000         *UND*	00000000 sys_ipc_hangup
00000000         *UND*	00000000 sys_ipc_connect_kbox
00000000         *UND*	00000000 sys_event_subscribe
00000000         *UND*	00000000 sys_event_unmask
00000000         *UND*	00000000 sys_cap_grant
00000000         *UND*	00000000 sys_cap_revoke
00000000         *UND*	00000000 sys_device_assign_devno
00000000         *UND*	00000000 sys_physmem_map
00000000         *UND*	00000000 sys_physmem_unmap
00000000         *UND*	00000000 sys_dmamem_map
00000000         *UND*	00000000 sys_dmamem_unmap
00000000         *UND*	00000000 sys_iospace_enable
00000000         *UND*	00000000 sys_iospace_disable
00000000         *UND*	00000000 sys_irq_register
00000000         *UND*	00000000 sys_irq_unregister
00000000         *UND*	00000000 sys_sysinfo_get_keys_size
00000000         *UND*	00000000 sys_sysinfo_get_keys
00000000         *UND*	00000000 sys_sysinfo_get_val_type
00000000         *UND*	00000000 sys_sysinfo_get_value
00000000         *UND*	00000000 sys_sysinfo_get_data_size
00000000         *UND*	00000000 sys_sysinfo_get_data
00000000         *UND*	00000000 sys_debug_activate_console



generic/src/syscall/copy.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 copy.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000011 __func__.3074
00000011 l     O .rodata	0000000f __func__.3082
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000148 copy_from_uspace
00000000         *UND*	00000000 memcpy_from_uspace
00000000         *UND*	00000000 panic_common
00000148 g     F .text	00000148 copy_to_uspace
00000000         *UND*	00000000 memcpy_to_uspace



generic/src/mm/km.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 km.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	000001ca km_map_aligned
00000004 l     O .bss	00000004 km_ni_arena
0000002e l     O .rodata	0000000f __func__.3261
00000000 l     O .rodata	00000015 __func__.3235
00000015 l     O .rodata	00000019 __func__.3244
0000004e l     O .rodata	00000016 __func__.3296
00000000 l     O .bss	00000004 deferred_pages
00000020 l     O .bss	00001000 deferred_page
00000064 l     O .rodata	00000016 __func__.3300
00000000 l    d  .rodata	00000000 .rodata
0000003d l     O .rodata	00000011 __func__.3271
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 ra_alloc
00000000         *UND*	00000000 AS_KERNEL
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_mapping_insert
00000000         *UND*	00000000 page_table_unlock
00000000         *UND*	00000000 panic_common
000001ca g     F .text	00000014 km_identity_init
00000000         *UND*	00000000 km_identity_arch_init
00000000         *UND*	00000000 config
000001de g     F .text	0000006e km_non_identity_init
00000000         *UND*	00000000 ra_arena_create
00000000         *UND*	00000000 km_non_identity_arch_init
0000024c g     F .text	00000009 km_is_non_identity
00000000         *UND*	00000000 km_is_non_identity_arch
00000255 g     F .text	00000086 km_non_identity_span_add
00000000         *UND*	00000000 page_mapping_make_global
00000000         *UND*	00000000 ra_span_add
000002db g     F .text	00000023 km_page_alloc
000002fe g     F .text	00000023 km_page_free
00000000         *UND*	00000000 ra_free
00000321 g     F .text	00000038 km_map
00000359 g     F .text	000000d3 km_unmap
00000000         *UND*	00000000 tlb_shootdown_start
00000000         *UND*	00000000 page_mapping_remove
00000000         *UND*	00000000 tlb_invalidate_asid
00000000         *UND*	00000000 tlb_shootdown_finalize
0000042c g     F .text	0000012d km_temporary_page_get
00000000         *UND*	00000000 frame_alloc
00000559 g     F .text	00000168 km_temporary_page_put



generic/src/mm/reserve.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 reserve.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     O .bss	00000004 reserve
00000004 l     O .bss	00000001 reserve_initialized
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .data	00000010 reserve_lock
00000000 l     O .rodata	00000012 __func__.1861
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000019 reserve_init
00000000         *UND*	00000000 frame_total_free_get
00000019 g     F .text	00000136 reserve_try_alloc
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 slab_reclaim
00000000         *UND*	00000000 panic_common
0000014f g     F .text	00000043 reserve_force_alloc
00000192 g     F .text	00000043 reserve_free



generic/src/mm/buddy.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 buddy.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000014 __func__.1800
00000040 l     O .rodata	00000012 __func__.1836
0000002d l     O .rodata	00000013 __func__.1828
00000014 l     O .rodata	00000019 __func__.1820
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000000f buddy_conf_size
0000000f g     F .text	00000140 buddy_system_create
00000000         *UND*	00000000 panic_common
0000014f g     F .text	00000036 buddy_system_can_alloc
00000185 g     F .text	00000156 buddy_system_free
000002db g     F .text	00000137 buddy_system_alloc
00000412 g     F .text	00000179 buddy_system_alloc_block



generic/src/mm/frame.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 frame.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000043 zone_buddy_find_block
00000043 l     F .text	0000001e zone_buddy_bisect
00000061 l     F .text	00000018 zone_buddy_coalesce
00000079 l     F .text	0000000f zone_buddy_set_order
00000088 l     F .text	0000000c zone_buddy_get_order
00000094 l     F .text	0000000f zone_buddy_mark_busy
000000a3 l     F .text	0000000f zone_buddy_mark_available
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
000000b2 l     F .text	000000b9 zone_frame_free
0000004e l     O .rodata	00000010 __func__.3279
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	00000052 zone_get_frame.isra.5.part.6
00000095 l     O .rodata	0000000f __func__.3286
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
0000016b l     F .text	000000c9 zone_buddy_find_buddy
00000025 l     O .rodata	00000016 __func__.3234
00000052 l     F .text.unlikely	00000052 zone_frame_alloc.part.9
00000000 l     O .rodata	00000011 __func__.3272
00000234 l     F .text	000000ba zone_mark_unavailable
0000007f l     O .rodata	00000016 __func__.3291
000002ee l     F .text	000003b4 zones_insert_zone
000006a2 l     F .text	000000eb zone_construct.part.10
00000000 l     O .data	00000020 zone_buddy_system_operations
0000078d l     F .text	0000017c return_config_frames
0000005e l     O .rodata	00000015 __func__.3331
0000003b l     O .rodata	00000013 __func__.3343
00000011 l     O .rodata	00000014 __func__.3300
00000073 l     O .rodata	0000000c __func__.3404
000000a4 l     O .rodata	00000011 __func__.3429
000000b5 l     O .rodata	00000011 __func__.3435
00000000 l     O .bss	00000020 mem_avail_mtx
00000020 l     O .bss	00000004 mem_avail_req
00000024 l     O .bss	00000004 mem_avail_gen
00000028 l     O .bss	0000001c mem_avail_cv
000000c6 l     O .rodata	00000013 __func__.3469
000000d9 l     O .rodata	00000014 __func__.3481
000000ed l     O .rodata	0000000c __func__.3520
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 buddy_system_free
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 buddy_system_alloc_block
00000000         *UND*	00000000 reserve_force_alloc
00000394       O *COM*	00000020 zones
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 buddy_system_create
00000000         *UND*	00000000 buddy_conf_size
00000909 g     F .text	00000064 frame_total_free_get
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
0000096d g     F .text	00000069 find_zone
000009d6 g     F .text	00000aea zone_merge
00000000         *UND*	00000000 buddy_system_can_alloc
00000000         *UND*	00000000 buddy_system_alloc
000014c0 g     F .text	0000002f zone_merge_all
000014ef g     F .text	0000006d zone_conf_size
0000155c g     F .text	000007aa zone_create
00000000         *UND*	00000000 config
00000000         *UND*	00000000 init
00001d06 g     F .text	00000109 frame_set_parent
00001e0f g     F .text	00000104 frame_get_parent
00001f13 g     F .text	0000061f frame_alloc_generic
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 _condvar_wait_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 slab_reclaim
00000000         *UND*	00000000 reserve_free
00002532 g     F .text	0000013a zone_external_conf_alloc
0000266c g     F .text	00000024 frame_alloc
00002690 g     F .text	00000029 frame_alloc_noreserve
000026b9 g     F .text	0000015a frame_free_generic
00000000         *UND*	00000000 condvar_broadcast
00002813 g     F .text	0000001b frame_free
0000282e g     F .text	0000001b frame_free_noreserve
00002849 g     F .text	000000e0 frame_reference_add
00002929 g     F .text	000000a7 frame_mark_unavailable
000029d0 g     F .text	000004ab frame_init
00000000         *UND*	00000000 frame_low_arch_init
00000000         *UND*	00000000 frame_high_arch_init
00000000         *UND*	00000000 ballocs
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 condvar_initialize
00002e7b g     F .text	0000006e frame_adjust_zone_bounds
00002ee9 g     F .text	0000007e zones_total_size
00002f67 g     F .text	0000019a zones_stats
00003101 g     F .text	0000017f zones_print_list
00003280 g     F .text	000002ad zone_print_one
00000000         *UND*	00000000 bin_order_suffix



generic/src/mm/page.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 page.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	00000014 __func__.3137
00000014 l     O .rodata	00000014 __func__.3142
00000028 l     O .rodata	00000012 __func__.3148
0000003a l     O .rodata	00000019 __func__.3153
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000009 page_init
00000000         *UND*	00000000 page_arch_init
00000009 g     F .text	000000bc page_mapping_insert
00000000         *UND*	00000000 page_table_locked
00000000 g     O .bss	00000004 page_mapping_operations
00000000         *UND*	00000000 panic_common
000000c5 g     F .text	000000ab page_mapping_remove
00000170 g     F .text	000000b9 page_mapping_find
00000229 g     F .text	00000083 page_mapping_make_global
000002ac g     F .text	000000bd page_find_mapping
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_table_unlock
00000369 g     F .text	000000d3 sys_page_find_mapping
00000000         *UND*	00000000 copy_to_uspace



generic/src/mm/tlb.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 tlb.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     O .data	00000010 tlblock
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	00000017 __func__.3076
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000009 tlb_init
00000000         *UND*	00000000 tlb_arch_init
00000009 g     F .text	0000012b tlb_shootdown_start
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 config
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 ipi_broadcast
00000134 g     F .text	00000032 tlb_shootdown_finalize
00000166 g     F .text	00000014 tlb_shootdown_ipi_send
0000017a g     F .text	00000203 tlb_shootdown_ipi_recv
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 tlb_invalidate_asid
00000000         *UND*	00000000 tlb_invalidate_all
00000000         *UND*	00000000 tlb_invalidate_pages



generic/src/mm/as.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 as.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000007 as_destructor
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000007 l     F .text	00000194 find_area_and_lock
00000069 l     O .rodata	00000013 __func__.3451
0000019b l     F .text	0000002d as_constructor
000001c8 l     F .text	00000131 sh_info_remove_reference
000000ae l     O .rodata	00000019 __func__.3487
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	00000052 page_table_lock.part.2
0000007c l     O .rodata	00000010 __func__.3628
00000052 l     F .text.unlikely	00000052 page_table_unlock.part.3
0000008c l     O .rodata	00000012 __func__.3633
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
000002f9 l     F .text	00000077 page_table_unlock.constprop.5
00000370 l     F .text	000006c1 check_area_conflicts
00000045 l     O .rodata	00000015 __func__.3401
00000008 l     O .bss	00000004 as_slab
00000000 l     O .rodata	00000012 __func__.3619
00000030 l     O .rodata	00000015 __func__.3420
0000009e l     O .rodata	00000010 __func__.3510
00000012 l     O .rodata	0000000b __func__.3380
0000001d l     O .rodata	00000013 __func__.3623
000000c7 l     O .rodata	00000015 __func__.3540
000000dc l     O .rodata	00000015 __func__.3572
000000f1 l     O .rodata	0000000a __func__.3611
000000fb l     O .rodata	00000012 __func__.3615
0000010d l     O .rodata	00000012 __func__.3637
0000011f l     O .rodata	00000012 __func__.3648
00000131 l     O .rodata	00000012 __func__.3678
0000005a l     O .rodata	0000000f __func__.3469
00000143 l     O .rodata	00000011 __func__.3739
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 btree_search
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 btree_leaf_node_left_neighbour
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 btree_destroy
00000000         *UND*	00000000 free
00000000         *UND*	00000000 frame_free
00000004 g     O .bss	00000004 as_operations
00000000         *UND*	00000000 btree_leaf_node_right_neighbour
00000a31 g     F .text	00000100 as_init
00000000         *UND*	00000000 as_arch_init
00000000         *UND*	00000000 slab_cache_create
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 btree_create
00000000 g     O .bss	00000004 AS_KERNEL
00000b31 g     F .text	000000c4 as_create
00000bf5 g     F .text	0000000c as_hold
00000c01 g     F .text	00000441 as_area_create
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 btree_insert
00000000         *UND*	00000000 memsetb
00001042 g     F .text	00000327 as_area_destroy
00000000         *UND*	00000000 tlb_shootdown_start
00000000         *UND*	00000000 page_mapping_find
00000000         *UND*	00000000 page_mapping_remove
00000000         *UND*	00000000 tlb_invalidate_pages
00000000         *UND*	00000000 tlb_shootdown_finalize
00000000         *UND*	00000000 btree_remove
00001369 g     F .text	0000020b as_destroy
00000000         *UND*	00000000 preemption_disable
00000008 g     O .data	00000008 asidlock
00000000         *UND*	00000000 spinlock_trylock
00000000         *UND*	00000000 preemption_enable
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 printf
00001574 g     F .text	0000001d as_release
00001591 g     F .text	0000022b as_area_share
000017bc g     F .text	0000008a as_area_check_access
00001846 g     F .text	00000530 as_area_change_flags
00000000         *UND*	00000000 anon_backend
00000000         *UND*	00000000 page_mapping_insert
00001d76 g     F .text	00000367 as_page_fault
00000000         *UND*	00000000 fault_if_from_uspace
00000000         *UND*	00000000 memcpy_from_uspace_failover_address
00000000         *UND*	00000000 memcpy_to_uspace_failover_address
00000000         *UND*	00000000 task_kill_self
000020dd g     F .text	00000198 as_switch
00000000 g     O .data	00000008 inactive_as_with_asid_list
00002275 g     F .text	000000a2 as_area_get_flags
00002317 g     F .text	0000007c page_table_create
00002393 g     F .text	0000007d page_table_destroy
00002410 g     F .text	00000077 page_table_lock
00002487 g     F .text	00000077 page_table_unlock
000024fe g     F .text	0000007d page_table_locked
0000257b g     F .text	00000104 as_area_get_size
0000267f g     F .text	00000fff used_space_insert
0000367e g     F .text	00000804 used_space_remove
00003e82 g     F .text	00000657 as_area_resize
000044d9 g     F .text	00000062 sys_as_area_create
0000453b g     F .text	00000030 sys_as_area_resize
0000456b g     F .text	00000028 sys_as_area_change_flags
00004593 g     F .text	00000021 sys_as_area_destroy
000045b4 g     F .text	000001e5 as_get_area_info
00004799 g     F .text	000000fe as_print



generic/src/mm/backend_anon.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 backend_anon.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a anon_is_resizable
0000000a l     F .text	00000013 anon_is_shareable
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
0000001d l     F .text	000002b3 anon_page_fault
00000010 l     O .rodata	00000010 __func__.3211
000002d0 l     F .text	0000001a anon_destroy
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
000002ea l     F .text	00000241 anon_share
00000020 l     O .rodata	0000000b __func__.3176
0000052b l     F .text	000000a6 anon_frame_free
00000000 l     O .rodata	00000010 __func__.3223
000005d1 l     F .text	0000001f anon_create
000005f0 l     F .text	0000003e anon_resize
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 page_table_locked
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 as_area_check_access
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 btree_search
00000000         *UND*	00000000 km_temporary_page_get
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 km_temporary_page_put
00000000         *UND*	00000000 btree_insert
00000000         *UND*	00000000 frame_reference_add
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 as_area_get_flags
00000000         *UND*	00000000 page_mapping_insert
00000000         *UND*	00000000 used_space_insert
00000000         *UND*	00000000 reserve_try_alloc
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 reserve_free
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_mapping_find
00000000         *UND*	00000000 page_table_unlock
00000000         *UND*	00000000 frame_free_noreserve
00000000         *UND*	00000000 frame_free
00000000 g     O .data	00000020 anon_backend



generic/src/mm/backend_elf.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 backend_elf.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a elf_is_resizable
0000000a l     F .text	0000000a elf_is_shareable
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000014 l     F .text	0000010c elf_frame_free
00000000 l     O .rodata	0000000f __func__.3264
00000120 l     F .text	000004fa elf_page_fault
0000000f l     O .rodata	0000000f __func__.3248
0000061a l     F .text	00000051 elf_destroy
0000066b l     F .text	00000300 elf_share
0000001e l     O .rodata	0000000a __func__.3205
0000096b l     F .text	0000009c elf_resize
00000a07 l     F .text	00000056 elf_create
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 page_table_locked
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 frame_free_noreserve
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 as_area_check_access
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 btree_search
00000000         *UND*	00000000 frame_reference_add
00000000         *UND*	00000000 as_area_get_flags
00000000         *UND*	00000000 page_mapping_insert
00000000         *UND*	00000000 used_space_insert
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 km_temporary_page_get
00000000         *UND*	00000000 memcpy
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 km_temporary_page_put
00000000         *UND*	00000000 btree_insert
00000000         *UND*	00000000 AS_KERNEL
00000000         *UND*	00000000 page_mapping_find
00000000         *UND*	00000000 reserve_free
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_table_unlock
00000000         *UND*	00000000 btree_leaf_node_left_neighbour
00000000         *UND*	00000000 reserve_try_alloc
00000000 g     O .data	00000020 elf_backend



generic/src/mm/backend_phys.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 backend_phys.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a phys_create
0000000a l     F .text	00000005 phys_destroy
0000000f l     F .text	00000007 phys_is_resizable
00000016 l     F .text	0000000a phys_is_shareable
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000020 l     F .text	00000163 phys_page_fault
00000000 l     O .rodata	00000010 __func__.3151
00000183 l     F .text	0000008c phys_share
00000010 l     O .rodata	0000000b __func__.3135
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 page_table_locked
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 as_area_check_access
00000000         *UND*	00000000 as_area_get_flags
00000000         *UND*	00000000 page_mapping_insert
00000000         *UND*	00000000 used_space_insert
00000000         *UND*	00000000 panic_common
00000000 g     O .data	00000020 phys_backend



generic/src/mm/slab.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 slab.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000023d slab_obj_create
00000070 l     O .bss	00000004 slab_extern_cache
0000051b l     F .text	00000202 slab_obj_destroy
0000071d l     F .text	000002f3 magazine_obj_get
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
0000023d l     F .text	000002de magazine_obj_put
00000080 l     O .bss	00000070 mag_cache
00000011 l     O .rodata	00000017 __func__.3155
00000000 l     O .rodata	00000011 __func__.3111
00000028 l     O .rodata	00000015 __func__.3143
00000a10 l     F .text	000002d1 _slab_reclaim.part.1
00000000 l     O .data	00000010 slab_cache_lock
00000000 l     O .bss	00000070 slab_cache_cache
00000010 l     O .data	00000008 slab_cache_list
000000f0 l     O .bss	00000004 _slab_initialized
00000100 l     O .bss	0000004c malloc_caches
000000ac l     O .rodata	00000007 __func__.3289
0000115c l     F .text	0000031a _slab_cache_create
0000003d l     O .rodata	0000000e __func__.3173
00000060 l     O .rodata	0000004c malloc_names
000000b3 l     O .rodata	00000008 __func__.3296
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 frame_alloc_generic
00000000         *UND*	00000000 frame_set_parent
00000000         *UND*	00000000 frame_free
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 frame_get_parent
00000000         *UND*	00000000 config
00000ce1 g     F .text	0000014d slab_cache_destroy
00000e2e g     F .text	00000036 slab_alloc
00000e64 g     F .text	00000035 slab_free
00000e99 g     F .text	0000006f slab_reclaim
00000f08 g     F .text	00000137 slab_print_list
00000000         *UND*	00000000 printf
0000103f g     F .text	0000011d malloc
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 irq_spinlock_initialize
00001476 g     F .text	00000072 slab_cache_create
000014e8 g     F .text	00000192 slab_cache_init
0000167a g     F .text	0000015c slab_enable_cpucache
000017d6 g     F .text	000001f8 realloc
00000000         *UND*	00000000 memcpy
000019ce g     F .text	00000062 free



generic/src/lib/func.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 func.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000008e halt
00000000 g     O .bss	00000004 haltstate
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 kconsole_check_poll
00000000         *UND*	00000000 kconsole



generic/src/lib/memstr.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memstr.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000016 memsetb
00000000         *UND*	00000000 memset
00000016 g     F .text	000000ae memsetw
000000c4 g     F .text	00000108 memmove
00000000         *UND*	00000000 memcpy



generic/src/lib/memfnc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 memfnc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000d9 memset
000000d9 g     F .text	00000099 memcpy



generic/src/lib/sort.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 sort.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000200 _qsort
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 memcpy
00000200 g     F .text	00000113 gsort
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 free
00000313 g     F .text	000000cb qsort



generic/src/lib/str.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 str.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
000000dc l     O .rodata	00000008 __func__.3249
000000e4 l     O .rodata	00000009 __func__.3262
000000ed l     O .rodata	00000008 __func__.3274
000000f5 l     O .rodata	00000009 __func__.3281
000000fe l     O .rodata	0000000c __func__.3290
00000000 l    d  .rodata	00000000 .rodata
0000010a l     O .rodata	0000000d __func__.3361
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000e2 str_decode
000000e2 g     F .text	000000d4 chr_encode
000001b6 g     F .text	00000018 str_size
000001ce g     F .text	0000001e wstr_size
000001ec g     F .text	000000ed str_lsize
000002d9 g     F .text	00000033 wstr_lsize
0000030c g     F .text	000000d1 str_length
000003dd g     F .text	0000001a wstr_length
000003f7 g     F .text	000000e8 str_nlength
000004df g     F .text	00000032 wstr_nlength
00000511 g     F .text	0000000c ascii_check
0000051d g     F .text	0000000f chr_check
0000052c g     F .text	00000220 str_cmp
0000074c g     F .text	00000245 str_lcmp
00000991 g     F .text	000001f3 str_cpy
00000000         *UND*	00000000 panic_common
00000b84 g     F .text	00000241 str_ncpy
00000dc5 g     F .text	000000a2 str_dup
00000000         *UND*	00000000 malloc
00000e67 g     F .text	000000b6 str_ndup
00000f1d g     F .text	00000161 wstr_to_str
0000107e g     F .text	000000f7 str_chr
00001175 g     F .text	00000059 wstr_linsert
000011ce g     F .text	0000003d wstr_remove
0000120b g     F .text	0000024a str_uint64_t
00000000         *UND*	00000000 __udivdi3
00001455 g     F .text	000001a6 order_suffix
000015fb g     F .text	000000f4 bin_order_suffix



generic/src/lib/elf.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 elf.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
0000000c l     O .rodata	00000018 error_codes
00000000 l     O .rodata	0000000a __func__.3100
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000198 elf_load
00000000         *UND*	00000000 elf_backend
00000000         *UND*	00000000 as_area_create
00000198 g     F .text	00000063 elf_error
00000000         *UND*	00000000 panic_common



generic/src/lib/ra.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ra.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000012 used_hash
00000012 l     F .text	00000013 used_compare
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .bss	00000004 ra_segment_cache
00000000 l     O .data	0000000c used_ops
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000009 l     O .rodata	0000000e __func__.1989
00000000 l     O .rodata	00000009 __func__.2014
00000017 l     O .rodata	0000000d __func__.2007
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000025 g     F .text	0000003f ra_arena_create
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 irq_spinlock_initialize
00000064 g     F .text	00000238 ra_span_add
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 hash_table_create
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 free
0000029c g     F .text	000004e6 ra_alloc
00000000         *UND*	00000000 hash_table_insert
00000000         *UND*	00000000 panic_common
00000782 g     F .text	00000445 ra_free
00000000         *UND*	00000000 hash_table_find
00000000         *UND*	00000000 hash_table_remove
00000bc7 g     F .text	00000041 ra_init
00000000         *UND*	00000000 slab_cache_create



generic/src/lib/rd.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 rd.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .bss	00000014 rd_parea
00000000 l     O .rodata	00000008 __func__.3042
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000101 init_rd
00000000         *UND*	00000000 ddi_parea_register
00000000         *UND*	00000000 sysinfo_set_item_val
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 panic_common



generic/src/printf/printf_core.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 printf_core.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata	00000000 .rodata
000001b0 l     O .rodata	00000001 invalch
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 __umoddi3
00000000         *UND*	00000000 __udivdi3
00000000 g     F .text	00001189 printf_core
00000000         *UND*	00000000 str_decode
00000000         *UND*	00000000 ascii_check
00000000         *UND*	00000000 str_size
00000000         *UND*	00000000 str_length
00000000         *UND*	00000000 str_lsize
00000000         *UND*	00000000 chr_check
00000000         *UND*	00000000 wstr_length
00000000         *UND*	00000000 wstr_lsize



generic/src/printf/printf.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 printf.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000001a printf
00000000         *UND*	00000000 vprintf



generic/src/printf/snprintf.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 snprintf.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000028 snprintf
00000000         *UND*	00000000 vsnprintf



generic/src/printf/vprintf.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 vprintf.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000003b vprintf_wstr_write
0000003b l     F .text	0000004d vprintf_str_write
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 putchar
00000000         *UND*	00000000 str_decode
00000088 g     F .text	00000047 puts
000000cf g     F .text	00000036 vprintf
00000000         *UND*	00000000 printf_core



generic/src/printf/vsnprintf.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000099 vsnprintf_wstr_write
00000099 l     F .text	000000ca vsnprintf_str_write
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 chr_encode
00000000         *UND*	00000000 str_decode
00000000         *UND*	00000000 memcpy
00000163 g     F .text	0000004f vsnprintf
00000000         *UND*	00000000 printf_core



generic/src/time/clock.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 clock.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .bss	00000014 clock_parea
00000014 l     O .bss	00000004 secfrag
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000be clock_counter_init
00000000         *UND*	00000000 frame_alloc
00000004       O *COM*	00000004 uptime
00000000         *UND*	00000000 ddi_parea_register
00000000         *UND*	00000000 sysinfo_set_item_val
00000000         *UND*	00000000 panic_common
000000be g     F .text	00000410 clock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 timeout_reinitialize
00000000         *UND*	00000000 scheduler
00000000         *UND*	00000000 udebug_before_thread_runs



generic/src/time/timeout.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 timeout.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	00000013 __func__.3063
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000047 timeout_init
00000000         *UND*	00000000 irq_spinlock_initialize
00000047 g     F .text	00000039 timeout_reinitialize
00000080 g     F .text	00000051 timeout_initialize
000000d1 g     F .text	00000257 timeout_register
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 panic_common
00000328 g     F .text	0000017e timeout_unregister
00000000         *UND*	00000000 irq_spinlock_trylock
00000000         *UND*	00000000 printf



generic/src/time/delay.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 delay.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000058 delay
00000000         *UND*	00000000 thread_migration_disable
00000000         *UND*	00000000 asm_delay_loop
00000000         *UND*	00000000 thread_migration_enable



generic/src/preempt/preemption.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 preemption.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	00000012 __func__.3039
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000012 preemption_disable
00000012 g     F .text	0000006a preemption_enable
00000000         *UND*	00000000 panic_common



generic/src/synch/spinlock.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 spinlock.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	00000059 spinlock_unlock_debug.part.0
00000000 l     O .rodata	00000016 __func__.3146
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000016 l     O .rodata	00000012 __func__.3163
00000028 l     O .rodata	00000014 __func__.3168
0000003c l     O .rodata	00000015 __func__.3173
00000051 l     O .rodata	00000012 __func__.3179
00000063 l     O .rodata	00000016 __func__.3186
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 panic_common
00000000 g     F .text	00000014 spinlock_initialize
00000014 g     F .text	000000b4 spinlock_lock_debug
00000000         *UND*	00000000 preemption_disable
00000000         *UND*	00000000 symtab_fmt_name_lookup
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 stack_trace
000000c8 g     F .text	00000020 spinlock_unlock_debug
00000000         *UND*	00000000 preemption_enable
000000e8 g     F .text	00000033 spinlock_trylock
0000011b g     F .text	0000000f spinlock_locked
0000012a g     F .text	0000001f irq_spinlock_initialize
00000149 g     F .text	000001fb irq_spinlock_lock
00000344 g     F .text	000000ed irq_spinlock_unlock
00000431 g     F .text	000000b2 irq_spinlock_trylock
000004e3 g     F .text	0000016f irq_spinlock_pass
00000652 g     F .text	00000160 irq_spinlock_exchange
000007b2 g     F .text	0000000f irq_spinlock_locked



generic/src/synch/condvar.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 condvar.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000009 condvar_initialize
00000000         *UND*	00000000 waitq_initialize
00000009 g     F .text	0000001b condvar_signal
00000000         *UND*	00000000 waitq_wakeup
00000024 g     F .text	0000001b condvar_broadcast
0000003f g     F .text	00000075 _condvar_wait_timeout
00000000         *UND*	00000000 waitq_sleep_prepare
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 waitq_sleep_timeout_unsafe
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 waitq_sleep_finish



generic/src/synch/mutex.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 mutex.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000014 __func__.3094
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000001e mutex_initialize
00000000         *UND*	00000000 semaphore_initialize
0000001e g     F .text	0000001b mutex_locked
00000000         *UND*	00000000 semaphore_count_get
00000039 g     F .text	00000184 _mutex_lock_timeout
00000000         *UND*	00000000 _semaphore_down_timeout
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 stack_trace
00000000         *UND*	00000000 panic_common
000001bd g     F .text	0000000d mutex_unlock
00000000         *UND*	00000000 semaphore_up



generic/src/synch/semaphore.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 semaphore.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000027 semaphore_initialize
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 waitq_count_set
00000027 g     F .text	00000009 _semaphore_down_timeout
00000000         *UND*	00000000 waitq_sleep_timeout
00000030 g     F .text	0000001b semaphore_up
00000000         *UND*	00000000 waitq_wakeup
0000004b g     F .text	00000009 semaphore_count_get
00000000         *UND*	00000000 waitq_count_get



generic/src/synch/smc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 smc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000007e sys_smc_coherence



generic/src/synch/waitq.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 waitq.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	00000182 waitq_sleep_timed_out
00000038 l     O .rodata	00000016 __func__.3058
00000000 l     O .rodata	00000016 __func__.3066
00000016 l     O .rodata	0000000e __func__.3071
00000024 l     O .rodata	00000014 __func__.3077
0000004e l     O .rodata	00000015 __func__.3108
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 threads_lock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 thread_exists
00000000         *UND*	00000000 irq_spinlock_trylock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 thread_ready
00000182 g     F .text	00000030 waitq_initialize
00000000         *UND*	00000000 irq_spinlock_initialize
000001b2 g     F .text	00000184 waitq_interrupt_sleep
00000000         *UND*	00000000 timeout_unregister
00000336 g     F .text	00000146 waitq_unsleep
00000000         *UND*	00000000 panic_common
0000047c g     F .text	000000af waitq_sleep_prepare
0000052b g     F .text	0000002f waitq_sleep_finish
0000055a g     F .text	0000023d waitq_sleep_timeout_unsafe
00000000         *UND*	00000000 scheduler
00000000         *UND*	00000000 context_save_arch
00000000         *UND*	00000000 timeout_register
00000797 g     F .text	000000bb waitq_sleep_timeout
00000852 g     F .text	000001ef _waitq_wakeup_unsafe
00000000         *UND*	00000000 irq_spinlock_locked
00000a41 g     F .text	0000003f waitq_wakeup
00000a80 g     F .text	00000037 waitq_count_get
00000ab7 g     F .text	00000036 waitq_count_set



generic/src/synch/futex.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 futex.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000f futex_ht_hash
0000000f l     F .text	000001c2 futex_find
00000000 l     O .bss	00000020 futex_ht_lock
00000020 l     O .bss	00000010 futex_ht
000001d1 l     F .text	0000000d futex_ht_remove_callback
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
000001de l     F .text	00000068 futex_ht_compare
00000000 l     O .rodata	00000011 __func__.3178
00000000 l     O .data	0000000c futex_ht_ops
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 hash_table_find
00000000         *UND*	00000000 btree_search
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 hash_table_insert
00000000         *UND*	00000000 btree_insert
00000000         *UND*	00000000 free
00000000         *UND*	00000000 panic_common
00000246 g     F .text	00000040 futex_init
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 hash_table_create
00000286 g     F .text	000000f0 sys_futex_sleep
00000000         *UND*	00000000 page_table_lock
00000000         *UND*	00000000 page_mapping_find
00000000         *UND*	00000000 page_table_unlock
00000000         *UND*	00000000 udebug_stoppable_begin
00000000         *UND*	00000000 waitq_sleep_timeout
00000000         *UND*	00000000 udebug_stoppable_end
00000376 g     F .text	000000da sys_futex_wakeup
00000000         *UND*	00000000 waitq_wakeup
00000450 g     F .text	000000f4 futex_cleanup
00000000         *UND*	00000000 hash_table_remove



generic/src/smp/ipi.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ipi.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000014 ipi_broadcast
00000000         *UND*	00000000 config
00000000         *UND*	00000000 ipi_broadcast_arch



generic/src/smp/smp.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 smp.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .comment	00000000 .comment
0000001c       O *COM*	00000004 ap_completion_wq



generic/src/ipc/ipc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ipc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	000000dd ipc_print_call_list
000000dd l     F .text	0000014c ipc_forget_all_active_calls
00000004 l     O .bss	00000004 ipc_call_slab
00000229 l     F .text	00000105 _ipc_call
00000000 l     O .rodata	0000001a __func__.3401
00000020 l     O .rodata	00000020 __func__.3423
00000008 l     O .bss	00000004 ipc_answerbox_slab
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_trylock
00000000         *UND*	00000000 sysipc_ops_get
00000000         *UND*	00000000 free
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 waitq_wakeup
0000032e g     F .text	0000000c ipc_call_hold
0000033a g     F .text	00000045 ipc_call_release
0000037f g     F .text	0000006e ipc_call_alloc
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 spinlock_initialize
000003ed g     F .text	00000045 ipc_call_free
00000432 g     F .text	0000007a ipc_answerbox_init
00000000         *UND*	00000000 irq_spinlock_initialize
00000000         *UND*	00000000 waitq_initialize
000004ac g     F .text	00000086 ipc_phone_connect
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000532 g     F .text	0000003b ipc_phone_init
00000000         *UND*	00000000 mutex_initialize
0000056d g     F .text	000001db _ipc_answer_free_call
00000748 g     F .text	00000067 ipc_answer
000007af g     F .text	0000008d ipc_backsend_err
0000083c g     F .text	00000172 ipc_call
000009ae g     F .text	00000136 ipc_phone_hangup
00000ae4 g     F .text	00000215 ipc_forward
00000000         *UND*	00000000 irq_spinlock_pass
00000cf9 g     F .text	00000268 ipc_wait_for_call
00000000         *UND*	00000000 waitq_sleep_timeout
00000f61 g     F .text	000001ae ipc_cleanup_call_list
00000000         *UND*	00000000 answer_preprocess
0000110f g     F .text	0000045a ipc_answerbox_slam_phones
00000000         *UND*	00000000 panic_common
00001569 g     F .text	000003b3 ipc_cleanup
00000000         *UND*	00000000 event_cleanup_answerbox
00000000         *UND*	00000000 ipc_irq_cleanup
00000000         *UND*	00000000 ipc_kbox_cleanup
0000191c g     F .text	0000007a ipc_init
00000000         *UND*	00000000 slab_cache_create
00001996 g     F .text	00000236 ipc_print_task
00000000         *UND*	00000000 tasks_lock
00000000         *UND*	00000000 task_find_by_id
00000000         *UND*	00000000 irq_spinlock_exchange
00000000 g     O .bss	00000004 ipc_phone_0



generic/src/ipc/sysipc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 sysipc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	00000012 __func__.3432
0000019d l     F .text	00000195 sys_ipc_forward_common
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000019d answer_preprocess
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 sysipc_ops_get
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 get_call
00000000         *UND*	00000000 phone_get
00000000         *UND*	00000000 _ipc_answer_free_call
00000000         *UND*	00000000 ipc_forward
00000000         *UND*	00000000 ipc_answer
00000000         *UND*	00000000 phone_dealloc
00000332 g     F .text	000000c3 sys_ipc_call_async_fast
00000000         *UND*	00000000 ipc_call_alloc
00000000         *UND*	00000000 ipc_backsend_err
00000000         *UND*	00000000 ipc_call
000003f5 g     F .text	000000cc sys_ipc_call_async_slow
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 ipc_call_free
000004c1 g     F .text	0000004a sys_ipc_forward_fast
0000050b g     F .text	00000067 sys_ipc_forward_slow
00000572 g     F .text	000000d4 sys_ipc_answer_fast
00000646 g     F .text	000000c8 sys_ipc_answer_slow
0000070e g     F .text	00000034 sys_ipc_hangup
00000000         *UND*	00000000 ipc_phone_hangup
00000742 g     F .text	000001b4 sys_ipc_wait_for_call
00000000         *UND*	00000000 udebug_stoppable_begin
00000000         *UND*	00000000 ipc_wait_for_call
00000000         *UND*	00000000 udebug_stoppable_end
00000000         *UND*	00000000 copy_to_uspace
000008f6 g     F .text	0000001f sys_ipc_poke
00000000         *UND*	00000000 waitq_unsleep
00000915 g     F .text	00000062 sys_irq_register
00000000         *UND*	00000000 cap_get
00000000         *UND*	00000000 ipc_irq_register
00000977 g     F .text	00000054 sys_irq_unregister
00000000         *UND*	00000000 ipc_irq_unregister
000009cb g     F .text	0000003a sys_ipc_connect_kbox
00000000         *UND*	00000000 ipc_connect_kbox



generic/src/ipc/sysipc_ops.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 sysipc_ops.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     O .data	00000018 null_ops
00000000 l     O .rodata	0000002c sysipc_ops
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000007 null_request_preprocess
00000007 g     F .text	00000007 null_request_forget
0000000e g     F .text	00000007 null_request_process
00000015 g     F .text	00000007 null_answer_cleanup
0000001c g     F .text	00000007 null_answer_preprocess
00000023 g     F .text	00000007 null_answer_process
0000002a g     F .text	00000023 sysipc_ops_get
00000018       O *COM*	00000004 ipc_m_debug_ops
00000018       O *COM*	00000004 ipc_m_state_change_authorize_ops
00000018       O *COM*	00000004 ipc_m_data_read_ops
00000018       O *COM*	00000004 ipc_m_data_write_ops
00000018       O *COM*	00000004 ipc_m_share_in_ops
00000018       O *COM*	00000004 ipc_m_share_out_ops
00000018       O *COM*	00000004 ipc_m_connect_me_to_ops
00000018       O *COM*	00000004 ipc_m_connect_to_me_ops
00000018       O *COM*	00000004 ipc_m_clone_establish_ops
00000018       O *COM*	00000004 ipc_m_connection_clone_ops



generic/src/ipc/ops/clnestab.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 clnestab.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000010 request_preprocess
00000010 l     F .text	0000009c answer_cleanup
000000ac l     F .text	000000a0 answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000 g     O .data	00000018 ipc_m_clone_establish_ops
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/conctmeto.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 conctmeto.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000029 answer_process
00000029 l     F .text	00000018 request_forget
00000041 l     F .text	00000033 answer_preprocess
00000074 l     F .text	00000056 request_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 phone_dealloc
00000000         *UND*	00000000 ipc_phone_connect
00000000         *UND*	00000000 phone_alloc
00000000 g     O .data	00000018 ipc_m_connect_me_to_ops
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_cleanup



generic/src/ipc/ops/concttome.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 concttome.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000001c answer_cleanup
0000001c l     F .text	00000022 request_process
0000003e l     F .text	0000009a answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 phone_dealloc
00000000         *UND*	00000000 phone_alloc
00000000         *UND*	00000000 phone_connect
00000000 g     O .data	00000018 ipc_m_connect_to_me_ops
00000000         *UND*	00000000 null_request_preprocess
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/connclone.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 connclone.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	000000b8 answer_cleanup
000000b8 l     F .text	00000180 request_preprocess
00000238 l     F .text	000000bc answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 phone_get
00000000         *UND*	00000000 phone_alloc
00000000         *UND*	00000000 ipc_phone_connect
00000000 g     O .data	00000018 ipc_m_connection_clone_ops
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/dataread.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 dataread.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000036 answer_process
00000036 l     F .text	00000027 request_preprocess
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
0000005d l     F .text	000000bf answer_preprocess
00000000 l     O .rodata	00000012 __func__.2085
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 copy_to_uspace
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 panic_common
00000000 g     O .data	00000018 ipc_m_data_read_ops
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_cleanup



generic/src/ipc/ops/datawrite.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 datawrite.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000005e request_preprocess
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
0000005e l     F .text	0000009c answer_preprocess
00000000 l     O .rodata	00000012 __func__.2087
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 copy_to_uspace
00000000         *UND*	00000000 panic_common
00000000 g     O .data	00000018 ipc_m_data_write_ops
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_cleanup
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/debug.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 debug.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000a request_process
0000000a l     F .text	00000036 answer_process
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 copy_to_uspace
00000000 g     O .data	00000018 ipc_m_debug_ops
00000000         *UND*	00000000 udebug_request_preprocess
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_answer_cleanup
00000000         *UND*	00000000 null_answer_preprocess



generic/src/ipc/ops/sharein.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 sharein.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000096 answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 as_area_share
00000000 g     O .data	00000018 ipc_m_share_in_ops
00000000         *UND*	00000000 null_request_preprocess
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_cleanup
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/shareout.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 shareout.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000002b request_preprocess
0000002b l     F .text	000000bd answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 as_area_get_size
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 as_area_share
00000000         *UND*	00000000 copy_to_uspace
00000000 g     O .data	00000018 ipc_m_share_out_ops
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_cleanup
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ops/stchngath.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 stchngath.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000075 request_preprocess
00000075 l     F .text	000000f0 answer_preprocess
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 phone_get
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 event_task_notify
00000000 g     O .data	00000018 ipc_m_state_change_authorize_ops
00000000         *UND*	00000000 null_request_forget
00000000         *UND*	00000000 null_request_process
00000000         *UND*	00000000 null_answer_cleanup
00000000         *UND*	00000000 null_answer_process



generic/src/ipc/ipcrsc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 ipcrsc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     O .rodata	0000000f __func__.3069
0000000f l     O .rodata	0000000e __func__.3078
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000009c get_call
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
0000009c g     F .text	0000003b phone_get
000000d7 g     F .text	0000009a phone_alloc
00000171 g     F .text	0000007f phone_dealloc
00000000         *UND*	00000000 panic_common
000001f0 g     F .text	0000008a phone_connect
00000000         *UND*	00000000 ipc_phone_connect



generic/src/ipc/irq.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 irq.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000083 l     O .rodata	00000019 __func__.3494
00000060 l     O .rodata	00000013 __func__.3448
00000073 l     O .rodata	00000010 __func__.3455
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000241 ipc_irq_top_half_claim
00000241 g     F .text	00000157 ipc_irq_top_half_handler
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 ipc_call_alloc
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 waitq_wakeup
00000000         *UND*	00000000 panic_common
00000398 g     F .text	0000059f ipc_irq_register
00000000         *UND*	00000000 last_inr
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 free
00000000         *UND*	00000000 irq_initialize
00000000         *UND*	00000000 irq_uspace_hash_table_lock
00000000         *UND*	00000000 irq_uspace_hash_table
00000000         *UND*	00000000 hash_table_find
00000000         *UND*	00000000 hash_table_insert
00000000         *UND*	00000000 km_unmap
00000000         *UND*	00000000 km_map
00000937 g     F .text	000001fc ipc_irq_unregister
00000000         *UND*	00000000 hash_table_remove
00000b33 g     F .text	00000221 ipc_irq_cleanup
00000000         *UND*	00000000 irq_spinlock_trylock
00000d54 g     F .text	00000100 ipc_irq_send_msg



generic/src/ipc/event.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 event.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000131 event_enqueue
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .text.unlikely	00000000 .text.unlikely
00000000 l     F .text.unlikely	00000052 evno2event.part.0
00000000 l     O .rodata	0000000b __func__.3127
00000000 l     O .bss	00000054 events
0000000b l     O .rodata	0000001a __func__.3158
00000028 l     O .rodata	0000001f __func__.3164
00000047 l     O .rodata	0000000d __func__.3185
00000054 l     O .rodata	00000012 __func__.3196
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 ipc_call_alloc
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 waitq_wakeup
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 panic_common
00000131 g     F .text	000000d1 event_init
00000000         *UND*	00000000 spinlock_initialize
00000202 g     F .text	00000055 event_task_init
00000257 g     F .text	000000e7 event_cleanup_answerbox
0000033e g     F .text	0000008b event_set_unmask_callback
000003c9 g     F .text	0000009d event_task_set_unmask_callback
00000466 g     F .text	000000a6 event_notify
0000050c g     F .text	000000b3 event_task_notify
000005bf g     F .text	00000090 sys_event_subscribe
0000064f g     F .text	00000072 sys_event_unmask



generic/src/security/cap.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cap.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000003b cap_set
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
0000003b g     F .text	0000003a cap_get
00000075 g     F .text	00000129 sys_cap_grant
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 tasks_lock
00000000         *UND*	00000000 task_find_by_id
0000019e g     F .text	0000014b sys_cap_revoke



generic/src/sysinfo/sysinfo.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 sysinfo.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000002c sysinfo_item_constructor
0000002c l     F .text	0000001b sysinfo_item_destructor
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000047 l     F .text	00000169 sysinfo_find_item
00000054 l     O .rodata	00000012 __func__.2241
000001b0 l     F .text	00000262 sysinfo_create_path
00000004 l     O .bss	00000004 sysinfo_item_slab
00000028 l     O .rodata	00000014 __func__.2257
00000412 l     F .text	000001fe sysinfo_get_keys_uspace.part.1
00000020 l     O .bss	00000020 sysinfo_lock
00000040 l     O .bss	00000004 global_root
0000003c l     O .rodata	00000018 __func__.2397
00000610 l     F .text	0000019e sysinfo_get_item_uspace.part.0
00000066 l     O .rodata	00000018 __func__.2370
000007ae l     F .text	000001cf sysinfo_dump_internal
00000000 l    d  .rodata	00000000 .rodata
0000097d l     F .text	0000016c sysinfo_dump_internal.constprop.2
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 free
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 str_ndup
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 copy_from_uspace
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 str_size
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 str_cpy
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 str_length
00000ae9 g     F .text	00000055 sysinfo_init
00000000         *UND*	00000000 slab_cache_create
00000000         *UND*	00000000 mutex_initialize
00000b3e g     F .text	00000062 sysinfo_set_item_val
00000ba0 g     F .text	0000006c sysinfo_set_item_data
00000c0c g     F .text	0000006c sysinfo_set_item_gen_val
00000c78 g     F .text	0000006c sysinfo_set_item_gen_data
00000ce4 g     F .text	0000005a sysinfo_set_item_undefined
00000d3e g     F .text	00000072 sysinfo_set_subtree_fn
00000db0 g     F .text	0000004e sysinfo_dump
00000dfe g     F .text	0000005b sys_sysinfo_get_keys_size
00000000         *UND*	00000000 copy_to_uspace
00000e59 g     F .text	0000008f sys_sysinfo_get_keys
00000ee8 g     F .text	00000046 sys_sysinfo_get_val_type
00000f2e g     F .text	00000060 sys_sysinfo_get_value
00000f8e g     F .text	00000069 sys_sysinfo_get_data_size
00000ff7 g     F .text	000000a3 sys_sysinfo_get_data
00000000 g     O .bss	00000001 fb_exported



generic/src/sysinfo/stats.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 stats.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	0000000c get_stats_uptime
0000000c l     F .text	00000010 avl_count_walker
0000001c l     F .text	0000014b get_stats_exception
00000167 l     F .text	000000da get_stats_exceptions
00000241 l     F .text	00000100 get_stats_cpus
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000341 l     F .text	0000010f produce_stats_thread
00000000 l     O .rodata	00000015 __func__.3512
00000450 l     F .text	0000012b get_stats_thread
0000057b l     F .text	0000004e thread_serialize_walker
000005c9 l     F .text	00000275 produce_stats_task
00000015 l     O .rodata	00000013 __func__.3492
0000083e l     F .text	0000012b get_stats_task
00000969 l     F .text	0000004b task_serialize_walker
000009b4 l     F .text	00000095 get_stats_load
00000000 l     O .bss	00000020 load_lock
00000020 l     O .bss	0000000c avenrdy
00000a49 l     F .text	00000105 get_stats_threads
00000b4e l     F .text	00000108 get_stats_tasks
00000c56 l     F .text	00000067 get_stats_physmem
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 uptime
00000000         *UND*	00000000 str_uint64_t
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 exctbl_lock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 exc_table
00000000         *UND*	00000000 str_cpy
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 config
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 irq_spinlock_locked
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 threads_lock
00000000         *UND*	00000000 thread_find_by_id
00000000         *UND*	00000000 irq_spinlock_exchange
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 task_get_accounting
00000000         *UND*	00000000 tasks_lock
00000000         *UND*	00000000 task_find_by_id
00000000         *UND*	00000000 threads_tree
00000000         *UND*	00000000 avltree_walk
00000000         *UND*	00000000 tasks_tree
00000000         *UND*	00000000 zones_stats
00000cbd g     F .text	000000e7 kload
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 nrdy
00000000         *UND*	00000000 thread_sleep
00000da4 g     F .text	00000184 stats_init
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 sysinfo_set_item_gen_val
00000000         *UND*	00000000 sysinfo_set_item_gen_data
00000000         *UND*	00000000 sysinfo_set_subtree_fn



generic/src/console/kconsole.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 kconsole.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	000001da parse_int_arg
000001da l     F .text	000000f7 parse_argument.constprop.1
00000000 l     O .rodata	0000000f __func__.3652
00000000 l     O .bss	00002800 history
00002800 l     O .bss	00000004 history_pos
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 str_ncpy
00000000         *UND*	00000000 symtab_addr_lookup
00000000         *UND*	00000000 str_uint64_t
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 symtab_print_search
00000000         *UND*	00000000 str_decode
00000000         *UND*	00000000 panic_common
000002d1 g     F .text	00000071 kconsole_init
00000000         *UND*	00000000 cmd_init
00000342 g     F .text	000000fb cmd_register
00000008 g     O .data	00000008 cmd_lock
00000000         *UND*	00000000 spinlock_lock_debug
00000000 g     O .data	00000008 cmd_list
00000000         *UND*	00000000 str_cmp
00000000         *UND*	00000000 spinlock_unlock_debug
0000043d g     F .text	00000015 kconsole_check_poll
00000000         *UND*	00000000 stdin
00000000         *UND*	00000000 check_poll
00000452 g     F .text	00000de4 kconsole
00000000         *UND*	00000000 indev_pop_character
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 wstr_linsert
00000000         *UND*	00000000 wstr_length
00000000         *UND*	00000000 putchar
00000000         *UND*	00000000 wstr_remove
00000000         *UND*	00000000 wstr_to_str
00000000         *UND*	00000000 str_length
00000000         *UND*	00000000 str_lcmp
00000000         *UND*	00000000 str_lsize
00000000         *UND*	00000000 str_cpy
00000000         *UND*	00000000 free
00000000         *UND*	00000000 str_nlength
00000000         *UND*	00000000 symtab_compl
00000000         *UND*	00000000 console_prompt_display_all_hints
00000000         *UND*	00000000 console_prompt_more_hints
00001236 g     F .text	00000024 kconsole_thread



generic/src/console/cmd.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 cmd.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000012 cmd_version
00000012 l     F .text	00000012 cmd_cpus
00000024 l     F .text	00000012 cmd_tlb
00000036 l     F .text	00000012 cmd_physmem
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000048 l     F .text	00000014 desc_help
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
0000005c l     F .text	00000085 cmd_pio_write_32
000000e1 l     F .text	0000008b cmd_pio_write_16
0000016c l     F .text	00000089 cmd_pio_write_8
000001f5 l     F .text	0000007f cmd_pio_read_32
00000274 l     F .text	00000084 cmd_pio_read_16
000002f8 l     F .text	00000083 cmd_pio_read_8
0000037b l     F .text	00000023 cmd_btrace
0000039e l     F .text	0000018d run_test
0000052b l     F .text	0000001b cmd_zone
00000546 l     F .text	00000012 cmd_zones
00000558 l     F .text	00000019 cmd_sysinfo
00000571 l     F .text	0000001b cmd_symaddr
0000058c l     F .text	00000012 cmd_slabs
0000059e l     F .text	00000130 cmd_set4
000006ce l     F .text	00000012 cmd_sched
000006e0 l     F .text	00000012 cmd_reboot
000006f2 l     F .text	00000026 cmd_kill
00000718 l     F .text	00000023 cmd_ipc
0000073b l     F .text	000000e7 cmd_help
00000822 l     F .text	0000000b cmd_halt
0000082d l     F .text	000000af cmd_desc
000008dc l     F .text	00000067 cmd_continue
00000943 l     F .text	00000107 cmd_call3
00000a4a l     F .text	000000f3 cmd_call2
00000b3d l     F .text	000000e2 cmd_call1
00000c1f l     F .text	000000cf cmd_call0
00000cee l     F .text	000000f9 cmd_mcall0
00000de7 l     F .text	000002c1 run_bench.isra.0.part.1
000010a8 l     F .text	00000186 cmd_test
0000122e l     F .text	000000ec cmd_uptime
00000090 l     O .rodata	0000000b __func__.3796
0000131a l     F .text	00000077 cmd_threads
00000000 l     O .bss	00000101 flag_buf
00001391 l     F .text	00000077 cmd_tasks
00001408 l     F .text	000000ef cmd_bench
00000100 l     O .data	00000028 call0_info
00000000 l     O .rodata	00000090 basic_commands
00000000 l    d  .rodata	00000000 .rodata
00000140 l     O .data	00000028 mcall0_info
00000180 l     O .data	00000028 call1_info
000001c0 l     O .data	00000028 call2_info
00000200 l     O .data	00000028 call3_info
00000240 l     O .data	00000028 continue_info
00000280 l     O .data	00000028 desc_info
000002c0 l     O .data	00000028 halt_info
00000300 l     O .data	00000028 help_info
00000340 l     O .data	00000028 ipc_info
00000380 l     O .data	00000028 kill_info
000003c0 l     O .data	00000028 reboot_info
00000400 l     O .data	00000028 sched_info
00000440 l     O .data	00000028 set4_info
00000480 l     O .data	00000028 slabs_info
000004c0 l     O .data	00000028 symaddr_info
00000500 l     O .data	00000028 sysinfo_info
00000540 l     O .data	00000028 tasks_info
00000580 l     O .data	00000028 threads_info
000005c0 l     O .data	00000028 uptime_info
00000600 l     O .data	00000028 zones_info
00000640 l     O .data	00000028 zone_info
00000680 l     O .data	00000028 test_info
000006c0 l     O .data	00000028 bench_info
00000700 l     O .data	00000028 btrace_info
00000740 l     O .data	00000028 pio_read_8_info
00000780 l     O .data	00000028 pio_read_16_info
000007c0 l     O .data	00000028 pio_read_32_info
00000800 l     O .data	00000028 pio_write_8_info
00000840 l     O .data	00000028 pio_write_16_info
00000880 l     O .data	00000028 pio_write_32_info
000008a8 l     O .data	00000014 call0_argv
000008bc l     O .data	00000014 mcall0_argv
000008e0 l     O .data	00000028 call1_argv
00000920 l     O .data	0000003c call2_argv
00000960 l     O .data	00000050 call3_argv
000009b0 l     O .data	00000014 desc_argv
000009c4 l     O .data	00000014 ipc_argv
000009d8 l     O .data	00000014 kill_argv
00000a00 l     O .data	00000028 set4_argv
00000a28 l     O .data	00000014 symaddr_argv
00000a3c l     O .data	00000014 tasks_argv
00000a50 l     O .data	00000014 threads_argv
00000a64 l     O .data	00000014 zone_argv
00000a78 l     O .data	00000014 test_argv
00000aa0 l     O .data	00000028 bench_argv
00000ac8 l     O .data	00000014 btrace_argv
00000adc l     O .data	00000014 pio_read_8_argv
00000af0 l     O .data	00000014 pio_read_16_argv
00000b04 l     O .data	00000014 pio_read_32_argv
00000b20 l     O .data	00000028 pio_write_8_argv
00000b60 l     O .data	00000028 pio_write_16_argv
00000ba0 l     O .data	00000028 pio_write_32_argv
00000120 l     O .bss	00000101 call0_buf
00000240 l     O .bss	00000101 carg1_buf
00000360 l     O .bss	00000101 carg2_buf
00000480 l     O .bss	00000101 carg3_buf
000005a0 l     O .bss	00000101 desc_buf
000006c0 l     O .bss	00000101 set_buf
000007e0 l     O .bss	00000101 symaddr_buf
00000900 l     O .bss	00000101 test_buf
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 version_print
00000000         *UND*	00000000 cpu_list
00000000         *UND*	00000000 tlb_print
00000000         *UND*	00000000 physmem_print
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 km_unmap
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 thread_stack_trace
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 task_get_accounting
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 order_suffix
00000000         *UND*	00000000 zone_print_one
00000000         *UND*	00000000 zones_print_list
00000000         *UND*	00000000 sysinfo_dump
00000000         *UND*	00000000 symtab_print_search
00000000         *UND*	00000000 slab_print_list
00000000         *UND*	00000000 str_uint64_t
00000000         *UND*	00000000 symtab_addr_lookup
00000000         *UND*	00000000 sched_print_list
00000000         *UND*	00000000 reboot
00000000         *UND*	00000000 task_kill
00000000         *UND*	00000000 ipc_print_task
00000000         *UND*	00000000 cmd_lock
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 cmd_list
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 str_length
00000000         *UND*	00000000 halt
00000000         *UND*	00000000 str_lcmp
00000000         *UND*	00000000 release_console
00000000         *UND*	00000000 event_notify
00000000         *UND*	00000000 stdin
00000000         *UND*	00000000 indev_pop_character
00000000         *UND*	00000000 arch_construct_function
00000000         *UND*	00000000 config
00000000         *UND*	00000000 cpus
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_wire
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_join_timeout
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 __udivdi3
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 free
00000000         *UND*	00000000 str_cmp
00000000         *UND*	00000000 tests
00000000         *UND*	00000000 uptime
00000000         *UND*	00000000 panic_common
00000000         *UND*	00000000 thread_print_list
00000000         *UND*	00000000 task_print_list
000014f7 g     F .text	00000030 cmd_initialize
00000000         *UND*	00000000 spinlock_initialize
00001527 g     F .text	00000088 cmd_init
00000000         *UND*	00000000 cmd_register
00000000 g     O .data	00000028 version_info
00000040 g     O .data	00000028 cpus_info
00000080 g     O .data	00000028 tlb_info
000000c0 g     O .data	00000028 physmem_info



generic/src/ipc/kbox.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 kbox.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	000001e7 kbox_thread_proc
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 ipc_wait_for_call
00000000         *UND*	00000000 ipc_answer
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 udebug_call_receive
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 udebug_task_cleanup
000001e7 g     F .text	000001b2 ipc_kbox_cleanup
00000000         *UND*	00000000 ipc_answerbox_slam_phones
00000000         *UND*	00000000 thread_join_timeout
00000000         *UND*	00000000 ipc_cleanup_call_list
00000399 g     F .text	0000019f ipc_connect_kbox
00000000         *UND*	00000000 tasks_lock
00000000         *UND*	00000000 task_find_by_id
00000000         *UND*	00000000 phone_alloc
00000000         *UND*	00000000 ipc_phone_connect
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 task_destroy



generic/src/udebug/udebug.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 udebug.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     O .rodata	00000017 __func__.3047
00000017 l     O .rodata	00000015 __func__.3055
0000002c l     O .rodata	00000014 __func__.3084
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	0000003c udebug_task_init
00000000         *UND*	00000000 mutex_initialize
0000003c g     F .text	00000057 udebug_thread_initialize
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 condvar_initialize
00000093 g     F .text	0000027c udebug_stoppable_begin
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 ipc_answer
00000000         *UND*	00000000 panic_common
0000030f g     F .text	000001a3 udebug_stoppable_end
00000000         *UND*	00000000 waitq_sleep_prepare
00000000         *UND*	00000000 waitq_sleep_timeout_unsafe
00000000         *UND*	00000000 waitq_sleep_finish
000004b2 g     F .text	00000011 udebug_before_thread_runs
000004c3 g     F .text	00000237 udebug_syscall_event
000006fa g     F .text	00000182 udebug_thread_b_event_attach
00000000         *UND*	00000000 thread_attach
0000087c g     F .text	000000ff udebug_thread_e_event
0000097b g     F .text	00000194 udebug_task_cleanup
00000000         *UND*	00000000 mutex_locked
00000000         *UND*	00000000 condvar_broadcast
00000000         *UND*	00000000 waitq_wakeup
00000b0f g     F .text	00000132 udebug_thread_fault
00000000         *UND*	00000000 _condvar_wait_timeout



generic/src/udebug/udebug_ops.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 udebug_ops.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000134 _thread_op_begin
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 threads_lock
00000000         *UND*	00000000 irq_spinlock_lock
00000000         *UND*	00000000 thread_exists
00000000         *UND*	00000000 irq_spinlock_exchange
00000000         *UND*	00000000 irq_spinlock_unlock
00000000         *UND*	00000000 mutex_unlock
00000134 g     F .text	00000170 udebug_begin
00000000         *UND*	00000000 condvar_broadcast
000002a4 g     F .text	0000005e udebug_end
00000000         *UND*	00000000 udebug_task_cleanup
00000302 g     F .text	00000083 udebug_set_evmask
00000385 g     F .text	00000061 udebug_go
00000000         *UND*	00000000 waitq_wakeup
000003e6 g     F .text	000000ec udebug_stop
00000000         *UND*	00000000 ipc_answer
000004d2 g     F .text	0000018e udebug_thread_read
00000000         *UND*	00000000 malloc
00000660 g     F .text	0000005f udebug_name_read
00000000         *UND*	00000000 str_size
00000000         *UND*	00000000 memcpy
000006bf g     F .text	000000be udebug_args_read
0000077d g     F .text	000000b1 udebug_regs_read
0000082e g     F .text	000000aa udebug_mem_read
00000000         *UND*	00000000 copy_from_uspace



generic/src/udebug/udebug_ipc.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 udebug_ipc.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata	00000000 .rodata
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000007 udebug_request_preprocess
00000007 g     F .text	00000258 udebug_call_receive
00000000         *UND*	00000000 ipc_answer
00000000         *UND*	00000000 udebug_mem_read
00000000         *UND*	00000000 as_get_area_info
00000000         *UND*	00000000 udebug_name_read
00000000         *UND*	00000000 udebug_thread_read
00000000         *UND*	00000000 udebug_regs_read
00000000         *UND*	00000000 udebug_args_read
00000000         *UND*	00000000 udebug_stop
00000000         *UND*	00000000 udebug_go
00000000         *UND*	00000000 udebug_set_evmask
00000000         *UND*	00000000 udebug_end
00000000         *UND*	00000000 udebug_begin



test/test.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 test.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .comment	00000000 .comment
00000000 g     O .data	00000130 tests
00000000         *UND*	00000000 test_atomic1
00000000         *UND*	00000000 test_avltree1
00000000         *UND*	00000000 test_btree1
00000000         *UND*	00000000 test_mips1
00000000         *UND*	00000000 test_fault1
00000000         *UND*	00000000 test_falloc1
00000000         *UND*	00000000 test_falloc2
00000000         *UND*	00000000 test_mapping1
00000000         *UND*	00000000 test_slab1
00000000         *UND*	00000000 test_slab2
00000000         *UND*	00000000 test_semaphore1
00000000         *UND*	00000000 test_semaphore2
00000000         *UND*	00000000 test_print1
00000000         *UND*	00000000 test_print2
00000000         *UND*	00000000 test_print3
00000000         *UND*	00000000 test_print4
00000000         *UND*	00000000 test_print5
00000000         *UND*	00000000 test_thread1
00000001       O *COM*	00000001 test_quiet



test/atomic/atomic1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 atomic1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000a7 test_atomic1



test/btree/btree1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 btree1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000fea test_btree1
00000000         *UND*	00000000 btree_create
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 btree_insert
00000000         *UND*	00000000 btree_remove
00000000         *UND*	00000000 btree_print
00000000         *UND*	00000000 printf



test/avltree/avltree1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 avltree1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	000001ff alloc_avltree_node_prepare
00000020 l     O .bss	00000960 avltree_nodes
00000980 l     O .bss	00000004 first_free_node
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
000001ff l     F .text	00000524 test_tree_balance
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000723 l     F .text	000003cc test_tree_parents
00000aef l     F .text	0000018f test_tree_insert.constprop.4
00000000 l     O .bss	0000000c avltree
00000c7e l     F .text	000000f9 print_tree_structure_flat
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 avltree_insert
00000d77 g     F .text	00000454 test_avltree1
00000000         *UND*	00000000 avltree_delete
00000000         *UND*	00000000 avltree_delete_min



test/fault/fault1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 fault1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000014 test_fault1



test/mm/falloc1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 falloc1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000206 test_falloc1
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 frame_free
00000000         *UND*	00000000 free
00000000         *UND*	00000000 printf



test/mm/falloc2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 falloc2.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	0000039a falloc
00000004 l     O .bss	00000004 thread_fail
00000000 l     O .bss	00000004 thread_count
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 malloc
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 frame_free
00000000         *UND*	00000000 free
00000000         *UND*	00000000 printf
0000039a g     F .text	000002b0 test_falloc2
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_sleep



test/mm/mapping1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 mapping1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000239 test_mapping1
00000000         *UND*	00000000 frame_alloc
00000000         *UND*	00000000 km_map
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 km_unmap
00000000         *UND*	00000000 frame_free
00000000         *UND*	00000000 printf



test/mm/slab1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 slab1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	0000014f slabtest
00001000 l     O .bss	00000004 thr_cache
00001020 l     O .bss	00006000 thr_data
00001004 l     O .bss	0000001c thr_sem
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
0000014f l     F .text	00000306 testit.constprop.0
00000000 l     O .bss	00001000 data
00000455 l     F .text	00000303 testit.constprop.2
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 semaphore_up
00000000         *UND*	00000000 slab_cache_create
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 slab_cache_destroy
00000758 g     F .text	000006f0 test_slab1
00000000         *UND*	00000000 semaphore_initialize
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 _semaphore_down_timeout



test/mm/slab2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 slab2.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l     F .text	000002f3 totalmemtest
000002f3 l     F .text	000004f4 multitest
00000000 l     O .bss	0000001c thread_starter
00000020 l     O .bss	00000020 starter_mutex
00000040 l     O .bss	00000004 thr_cache
00000044 l     O .bss	0000001c thr_sem
000007e7 l     F .text	00000265 slabtest
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 slab_cache_create
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 memsetb
00000000         *UND*	00000000 slab_alloc
00000000         *UND*	00000000 slab_free
00000000         *UND*	00000000 slab_cache_destroy
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 slab_print_list
00000000         *UND*	00000000 condvar_initialize
00000000         *UND*	00000000 mutex_initialize
00000000         *UND*	00000000 semaphore_initialize
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_sleep
00000000         *UND*	00000000 condvar_broadcast
00000000         *UND*	00000000 _semaphore_down_timeout
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 _mutex_lock_timeout
00000000         *UND*	00000000 _condvar_wait_timeout
00000000         *UND*	00000000 mutex_unlock
00000000         *UND*	00000000 semaphore_up
00000a4c g     F .text	00000075 test_slab2



test/synch/semaphore1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 semaphore1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l     F .text	00000070 producer
00000000 l     O .bss	0000001c can_start
0000001c l     O .bss	0000001c sem
00000038 l     O .bss	00000004 items_produced
00000070 l     F .text	00000070 consumer
0000003c l     O .bss	00000004 items_consumed
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 waitq_sleep_timeout
00000000         *UND*	00000000 _semaphore_down_timeout
00000000         *UND*	00000000 thread_usleep
00000000         *UND*	00000000 semaphore_up
000000e0 g     F .text	0000022a test_semaphore1
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 semaphore_initialize
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 printf
00000000         *UND*	00000000 thread_sleep
00000000         *UND*	00000000 waitq_wakeup



test/synch/semaphore2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 semaphore2.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	00000264 consumer
00000000 l     O .bss	0000001c can_start
00000008 l     O .data	00000004 seed
0000001c l     O .bss	0000001c sem
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 waitq_sleep_timeout
00000000 g     O .data	00000008 sem_lock
00000000         *UND*	00000000 spinlock_lock_debug
00000000         *UND*	00000000 spinlock_unlock_debug
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 _semaphore_down_timeout
00000000         *UND*	00000000 thread_usleep
00000000         *UND*	00000000 semaphore_up
00000000         *UND*	00000000 printf
00000264 g     F .text	0000013f test_semaphore2
00000000         *UND*	00000000 waitq_initialize
00000000         *UND*	00000000 semaphore_initialize
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 waitq_wakeup



test/print/print1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 print1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000001b8 test_print1
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf



test/print/print2.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 print2.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000002d7 test_print2
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf



test/print/print3.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 print3.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000001da test_print3
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 snprintf
00000000         *UND*	00000000 printf



test/print/print4.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 print4.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str4.4	00000000 .rodata.str4.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000003cc test_print4
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf



test/print/print5.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 print5.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	000000bf test_print5
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf



test/thread/thread1.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 thread1.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .rodata.str1.1	00000000 .rodata.str1.1
00000000 l     F .text	0000007d threadtest
00000000 l     O .bss	00000004 finish
00000004 l     O .bss	00000004 threads_finished
00000000 l    d  .rodata.str1.4	00000000 .rodata.str1.4
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000         *UND*	00000000 thread_detach
00000000         *UND*	00000000 thread_usleep
00000000         *UND*	00000000 test_quiet
00000000         *UND*	00000000 printf
0000007d g     F .text	0000020f test_thread1
00000000         *UND*	00000000 thread_create
00000000         *UND*	00000000 thread_ready
00000000         *UND*	00000000 thread_sleep



test/debug/mips1_skip.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 mips1_skip.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000007 test_mips1



test/mm/purge1_skip.o:     file format elf32-i386

SYMBOL TABLE:
00000000 l    df *ABS*	00000000 purge1_skip.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .note.GNU-stack	00000000 .note.GNU-stack
00000000 l    d  .eh_frame	00000000 .eh_frame
00000000 l    d  .comment	00000000 .comment
00000000 g     F .text	00000007 test_purge1


