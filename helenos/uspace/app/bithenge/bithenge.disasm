
bithenge:     file format elf32-i386


Disassembly of section .init:

00001094 <__entry>:
    1094:	66 8c d0             	mov    %ss,%ax
    1097:	8e d8                	mov    %eax,%ds
    1099:	8e c0                	mov    %eax,%es
    109b:	8e e0                	mov    %eax,%fs
    109d:	b8 01 00 00 00       	mov    $0x1,%eax
    10a2:	0f a2                	cpuid  
    10a4:	0f ba e2 0b          	bt     $0xb,%edx
    10a8:	73 0c                	jae    10b6 <__entry+0x22>
    10aa:	8d 05 54 06 03 00    	lea    0x30654,%eax
    10b0:	c7 00 37 a9 02 00    	movl   $0x2a937,(%eax)
    10b6:	6a 00                	push   $0x0
    10b8:	89 e5                	mov    %esp,%ebp
    10ba:	57                   	push   %edi
    10bb:	e8 20 f1 00 00       	call   101e0 <__main>

Disassembly of section .text:

000010c0 <bithenge_transform_dec_ref>:
    10c0:	55                   	push   %ebp
    10c1:	89 e5                	mov    %esp,%ebp
    10c3:	83 ec 18             	sub    $0x18,%esp
    10c6:	85 c0                	test   %eax,%eax
    10c8:	74 15                	je     10df <bithenge_transform_dec_ref+0x1f>
    10ca:	8b 08                	mov    (%eax),%ecx
    10cc:	85 c9                	test   %ecx,%ecx
    10ce:	74 35                	je     1105 <bithenge_transform_dec_ref+0x45>
    10d0:	8b 50 04             	mov    0x4(%eax),%edx
    10d3:	85 d2                	test   %edx,%edx
    10d5:	74 12                	je     10e9 <bithenge_transform_dec_ref+0x29>
    10d7:	4a                   	dec    %edx
    10d8:	89 50 04             	mov    %edx,0x4(%eax)
    10db:	85 d2                	test   %edx,%edx
    10dd:	74 02                	je     10e1 <bithenge_transform_dec_ref+0x21>
    10df:	c9                   	leave  
    10e0:	c3                   	ret    
    10e1:	89 04 24             	mov    %eax,(%esp)
    10e4:	ff 51 0c             	call   *0xc(%ecx)
    10e7:	c9                   	leave  
    10e8:	c3                   	ret    
    10e9:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    10f0:	00 
    10f1:	c7 44 24 04 64 cc 02 	movl   $0x2cc64,0x4(%esp)
    10f8:	00 
    10f9:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    1100:	e8 ab 97 02 00       	call   2a8b0 <assert_abort>
    1105:	c7 44 24 08 74 00 00 	movl   $0x74,0x8(%esp)
    110c:	00 
    110d:	c7 44 24 04 64 cc 02 	movl   $0x2cc64,0x4(%esp)
    1114:	00 
    1115:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    111c:	e8 8f 97 02 00       	call   2a8b0 <assert_abort>
    1121:	66 90                	xchg   %ax,%ax
    1123:	66 90                	xchg   %ax,%ax
    1125:	66 90                	xchg   %ax,%ax
    1127:	66 90                	xchg   %ax,%ax
    1129:	66 90                	xchg   %ax,%ax
    112b:	66 90                	xchg   %ax,%ax
    112d:	66 90                	xchg   %ax,%ax
    112f:	90                   	nop

00001130 <main>:
    1130:	55                   	push   %ebp
    1131:	89 e5                	mov    %esp,%ebp
    1133:	53                   	push   %ebx
    1134:	83 e4 f0             	and    $0xfffffff0,%esp
    1137:	83 ec 20             	sub    $0x20,%esp
    113a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    113d:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
    1141:	0f 8e e2 00 00 00    	jle    1229 <main+0xf9>
    1147:	8d 44 24 10          	lea    0x10(%esp),%eax
    114b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    1152:	00 
    1153:	89 04 24             	mov    %eax,(%esp)
    1156:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
    115d:	00 
    115e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
    1165:	00 
    1166:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    116d:	00 
    116e:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
    1175:	00 
    1176:	e8 d5 86 00 00       	call   9850 <bithenge_scope_new>
    117b:	85 c0                	test   %eax,%eax
    117d:	74 57                	je     11d6 <main+0xa6>
    117f:	89 04 24             	mov    %eax,(%esp)
    1182:	e8 49 57 01 00       	call   168d0 <str_error>
    1187:	c7 04 24 ef cc 02 00 	movl   $0x2ccef,(%esp)
    118e:	89 44 24 04          	mov    %eax,0x4(%esp)
    1192:	e8 b9 a0 01 00       	call   1b250 <printf>
    1197:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
    119e:	00 
    119f:	8b 44 24 18          	mov    0x18(%esp),%eax
    11a3:	89 04 24             	mov    %eax,(%esp)
    11a6:	e8 15 91 00 00       	call   a2c0 <bithenge_node_dec_ref>
    11ab:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    11af:	89 04 24             	mov    %eax,(%esp)
    11b2:	e8 09 91 00 00       	call   a2c0 <bithenge_node_dec_ref>
    11b7:	8b 44 24 14          	mov    0x14(%esp),%eax
    11bb:	e8 00 ff ff ff       	call   10c0 <bithenge_transform_dec_ref>
    11c0:	8b 44 24 10          	mov    0x10(%esp),%eax
    11c4:	89 04 24             	mov    %eax,(%esp)
    11c7:	e8 f4 86 00 00       	call   98c0 <bithenge_scope_dec_ref>
    11cc:	b8 01 00 00 00       	mov    $0x1,%eax
    11d1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11d4:	c9                   	leave  
    11d5:	c3                   	ret    
    11d6:	8d 44 24 14          	lea    0x14(%esp),%eax
    11da:	89 44 24 04          	mov    %eax,0x4(%esp)
    11de:	8b 43 04             	mov    0x4(%ebx),%eax
    11e1:	89 04 24             	mov    %eax,(%esp)
    11e4:	e8 27 42 00 00       	call   5410 <bithenge_parse_script>
    11e9:	85 c0                	test   %eax,%eax
    11eb:	75 5e                	jne    124b <main+0x11b>
    11ed:	8b 43 08             	mov    0x8(%ebx),%eax
    11f0:	89 44 24 04          	mov    %eax,0x4(%esp)
    11f4:	8d 44 24 18          	lea    0x18(%esp),%eax
    11f8:	89 04 24             	mov    %eax,(%esp)
    11fb:	e8 60 67 00 00       	call   7960 <bithenge_node_from_source>
    1200:	85 c0                	test   %eax,%eax
    1202:	74 6c                	je     1270 <main+0x140>
    1204:	89 04 24             	mov    %eax,(%esp)
    1207:	e8 c4 56 01 00       	call   168d0 <str_error>
    120c:	c7 04 24 94 cc 02 00 	movl   $0x2cc94,(%esp)
    1213:	89 44 24 04          	mov    %eax,0x4(%esp)
    1217:	e8 34 a0 01 00       	call   1b250 <printf>
    121c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    1223:	00 
    1224:	e9 76 ff ff ff       	jmp    119f <main+0x6f>
    1229:	8b 03                	mov    (%ebx),%eax
    122b:	c7 44 24 04 d2 cc 02 	movl   $0x2ccd2,0x4(%esp)
    1232:	00 
    1233:	89 44 24 08          	mov    %eax,0x8(%esp)
    1237:	a1 b8 06 03 00       	mov    0x306b8,%eax
    123c:	89 04 24             	mov    %eax,(%esp)
    123f:	e8 dc 9f 01 00       	call   1b220 <fprintf>
    1244:	b8 01 00 00 00       	mov    $0x1,%eax
    1249:	eb 86                	jmp    11d1 <main+0xa1>
    124b:	89 04 24             	mov    %eax,(%esp)
    124e:	e8 7d 56 01 00       	call   168d0 <str_error>
    1253:	c7 04 24 09 cd 02 00 	movl   $0x2cd09,(%esp)
    125a:	89 44 24 04          	mov    %eax,0x4(%esp)
    125e:	e8 ed 9f 01 00       	call   1b250 <printf>
    1263:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
    126a:	00 
    126b:	e9 2f ff ff ff       	jmp    119f <main+0x6f>
    1270:	8d 44 24 1c          	lea    0x1c(%esp),%eax
    1274:	89 44 24 0c          	mov    %eax,0xc(%esp)
    1278:	8b 44 24 18          	mov    0x18(%esp),%eax
    127c:	89 44 24 08          	mov    %eax,0x8(%esp)
    1280:	8b 44 24 10          	mov    0x10(%esp),%eax
    1284:	89 44 24 04          	mov    %eax,0x4(%esp)
    1288:	8b 44 24 14          	mov    0x14(%esp),%eax
    128c:	89 04 24             	mov    %eax,(%esp)
    128f:	e8 dc 82 00 00       	call   9570 <bithenge_transform_apply>
    1294:	89 c3                	mov    %eax,%ebx
    1296:	85 c0                	test   %eax,%eax
    1298:	75 68                	jne    1302 <main+0x1d2>
    129a:	8b 44 24 18          	mov    0x18(%esp),%eax
    129e:	89 04 24             	mov    %eax,(%esp)
    12a1:	e8 1a 90 00 00       	call   a2c0 <bithenge_node_dec_ref>
    12a6:	8b 44 24 14          	mov    0x14(%esp),%eax
    12aa:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    12b1:	00 
    12b2:	e8 09 fe ff ff       	call   10c0 <bithenge_transform_dec_ref>
    12b7:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    12bb:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    12c2:	89 44 24 04          	mov    %eax,0x4(%esp)
    12c6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
    12cd:	00 
    12ce:	e8 dd 07 00 00       	call   1ab0 <bithenge_print_node>
    12d3:	89 c3                	mov    %eax,%ebx
    12d5:	85 c0                	test   %eax,%eax
    12d7:	74 56                	je     132f <main+0x1ff>
    12d9:	8b 44 24 10          	mov    0x10(%esp),%eax
    12dd:	89 04 24             	mov    %eax,(%esp)
    12e0:	e8 7b 86 00 00       	call   9960 <bithenge_scope_get_error>
    12e5:	85 c0                	test   %eax,%eax
    12e7:	0f 84 87 00 00 00    	je     1374 <main+0x244>
    12ed:	89 44 24 04          	mov    %eax,0x4(%esp)
    12f1:	c7 04 24 41 cd 02 00 	movl   $0x2cd41,(%esp)
    12f8:	e8 53 9f 01 00       	call   1b250 <printf>
    12fd:	e9 9d fe ff ff       	jmp    119f <main+0x6f>
    1302:	8b 44 24 10          	mov    0x10(%esp),%eax
    1306:	89 04 24             	mov    %eax,(%esp)
    1309:	e8 52 86 00 00       	call   9960 <bithenge_scope_get_error>
    130e:	85 c0                	test   %eax,%eax
    1310:	74 58                	je     136a <main+0x23a>
    1312:	89 44 24 04          	mov    %eax,0x4(%esp)
    1316:	c7 04 24 23 cd 02 00 	movl   $0x2cd23,(%esp)
    131d:	e8 2e 9f 01 00       	call   1b250 <printf>
    1322:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
    1329:	00 
    132a:	e9 70 fe ff ff       	jmp    119f <main+0x6f>
    132f:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    1333:	89 04 24             	mov    %eax,(%esp)
    1336:	e8 85 8f 00 00       	call   a2c0 <bithenge_node_dec_ref>
    133b:	8b 44 24 10          	mov    0x10(%esp),%eax
    133f:	89 04 24             	mov    %eax,(%esp)
    1342:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
    1349:	00 
    134a:	e8 71 85 00 00       	call   98c0 <bithenge_scope_dec_ref>
    134f:	c7 04 24 07 cf 02 00 	movl   $0x2cf07,(%esp)
    1356:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
    135d:	00 
    135e:	e8 ed 9e 01 00       	call   1b250 <printf>
    1363:	31 c0                	xor    %eax,%eax
    1365:	e9 67 fe ff ff       	jmp    11d1 <main+0xa1>
    136a:	89 1c 24             	mov    %ebx,(%esp)
    136d:	e8 5e 55 01 00       	call   168d0 <str_error>
    1372:	eb 9e                	jmp    1312 <main+0x1e2>
    1374:	89 1c 24             	mov    %ebx,(%esp)
    1377:	e8 54 55 01 00       	call   168d0 <str_error>
    137c:	e9 6c ff ff ff       	jmp    12ed <main+0x1bd>
    1381:	66 90                	xchg   %ax,%ax
    1383:	66 90                	xchg   %ax,%ax
    1385:	66 90                	xchg   %ax,%ax
    1387:	66 90                	xchg   %ax,%ax
    1389:	66 90                	xchg   %ax,%ax
    138b:	66 90                	xchg   %ax,%ax
    138d:	66 90                	xchg   %ax,%ax
    138f:	90                   	nop

00001390 <state_printf>:
    1390:	55                   	push   %ebp
    1391:	89 e5                	mov    %esp,%ebp
    1393:	53                   	push   %ebx
    1394:	83 ec 14             	sub    $0x14,%esp
    1397:	8b 5d 08             	mov    0x8(%ebp),%ebx
    139a:	8b 43 0c             	mov    0xc(%ebx),%eax
    139d:	85 c0                	test   %eax,%eax
    139f:	74 4f                	je     13f0 <state_printf+0x60>
    13a1:	8d 55 10             	lea    0x10(%ebp),%edx
    13a4:	89 54 24 0c          	mov    %edx,0xc(%esp)
    13a8:	8b 55 0c             	mov    0xc(%ebp),%edx
    13ab:	89 54 24 08          	mov    %edx,0x8(%esp)
    13af:	8b 53 10             	mov    0x10(%ebx),%edx
    13b2:	89 04 24             	mov    %eax,(%esp)
    13b5:	89 54 24 04          	mov    %edx,0x4(%esp)
    13b9:	e8 32 a4 01 00       	call   1b7f0 <vsnprintf>
    13be:	85 c0                	test   %eax,%eax
    13c0:	7e 14                	jle    13d6 <state_printf+0x46>
    13c2:	8b 53 10             	mov    0x10(%ebx),%edx
    13c5:	39 d0                	cmp    %edx,%eax
    13c7:	73 17                	jae    13e0 <state_printf+0x50>
    13c9:	8b 4b 0c             	mov    0xc(%ebx),%ecx
    13cc:	29 c2                	sub    %eax,%edx
    13ce:	01 c1                	add    %eax,%ecx
    13d0:	89 53 10             	mov    %edx,0x10(%ebx)
    13d3:	89 4b 0c             	mov    %ecx,0xc(%ebx)
    13d6:	83 c4 14             	add    $0x14,%esp
    13d9:	5b                   	pop    %ebx
    13da:	5d                   	pop    %ebp
    13db:	c3                   	ret    
    13dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    13e0:	8d 42 ff             	lea    -0x1(%edx),%eax
    13e3:	85 c0                	test   %eax,%eax
    13e5:	7f e2                	jg     13c9 <state_printf+0x39>
    13e7:	eb ed                	jmp    13d6 <state_printf+0x46>
    13e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    13f0:	8d 45 10             	lea    0x10(%ebp),%eax
    13f3:	8b 55 0c             	mov    0xc(%ebp),%edx
    13f6:	89 44 24 04          	mov    %eax,0x4(%esp)
    13fa:	89 14 24             	mov    %edx,(%esp)
    13fd:	e8 0e a2 01 00       	call   1b610 <vprintf>
    1402:	83 c4 14             	add    $0x14,%esp
    1405:	5b                   	pop    %ebx
    1406:	5d                   	pop    %ebp
    1407:	c3                   	ret    
    1408:	90                   	nop
    1409:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001410 <print_blob>:
    1410:	55                   	push   %ebp
    1411:	89 e5                	mov    %esp,%ebp
    1413:	57                   	push   %edi
    1414:	56                   	push   %esi
    1415:	53                   	push   %ebx
    1416:	81 ec 5c 04 00 00    	sub    $0x45c,%esp
    141c:	89 85 d4 fb ff ff    	mov    %eax,-0x42c(%ebp)
    1422:	89 95 c4 fb ff ff    	mov    %edx,-0x43c(%ebp)
    1428:	83 3a 05             	cmpl   $0x5,(%edx)
    142b:	0f 85 5d 01 00 00    	jne    158e <print_blob+0x17e>
    1431:	89 c2                	mov    %eax,%edx
    1433:	c7 85 e0 fb ff ff 00 	movl   $0x400,-0x420(%ebp)
    143a:	04 00 00 
    143d:	c7 85 e4 fb ff ff 00 	movl   $0x0,-0x41c(%ebp)
    1444:	00 00 00 
    1447:	b8 5b cd 02 00       	mov    $0x2cd5b,%eax
    144c:	8b 1a                	mov    (%edx),%ebx
    144e:	85 db                	test   %ebx,%ebx
    1450:	75 05                	jne    1457 <print_blob+0x47>
    1452:	b8 5a cd 02 00       	mov    $0x2cd5a,%eax
    1457:	89 44 24 04          	mov    %eax,0x4(%esp)
    145b:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
    1461:	89 04 24             	mov    %eax,(%esp)
    1464:	e8 27 ff ff ff       	call   1390 <state_printf>
    1469:	c7 85 c8 fb ff ff 00 	movl   $0x0,-0x438(%ebp)
    1470:	00 00 00 
    1473:	c7 85 cc fb ff ff 00 	movl   $0x0,-0x434(%ebp)
    147a:	00 00 00 
    147d:	eb 18                	jmp    1497 <print_blob+0x87>
    147f:	90                   	nop
    1480:	01 85 c8 fb ff ff    	add    %eax,-0x438(%ebp)
    1486:	11 95 cc fb ff ff    	adc    %edx,-0x434(%ebp)
    148c:	80 f4 04             	xor    $0x4,%ah
    148f:	09 d0                	or     %edx,%eax
    1491:	0f 85 d0 00 00 00    	jne    1567 <print_blob+0x157>
    1497:	8b 95 c4 fb ff ff    	mov    -0x43c(%ebp),%edx
    149d:	8b 42 08             	mov    0x8(%edx),%eax
    14a0:	85 c0                	test   %eax,%eax
    14a2:	0f 84 02 01 00 00    	je     15aa <print_blob+0x19a>
    14a8:	8b 40 04             	mov    0x4(%eax),%eax
    14ab:	85 c0                	test   %eax,%eax
    14ad:	0f 84 99 00 00 00    	je     154c <print_blob+0x13c>
    14b3:	8d 95 e8 fb ff ff    	lea    -0x418(%ebp),%edx
    14b9:	8d 8d e0 fb ff ff    	lea    -0x420(%ebp),%ecx
    14bf:	89 54 24 0c          	mov    %edx,0xc(%esp)
    14c3:	8b 95 c8 fb ff ff    	mov    -0x438(%ebp),%edx
    14c9:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    14cd:	89 54 24 04          	mov    %edx,0x4(%esp)
    14d1:	8b 8d cc fb ff ff    	mov    -0x434(%ebp),%ecx
    14d7:	8b 95 c4 fb ff ff    	mov    -0x43c(%ebp),%edx
    14dd:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    14e1:	89 14 24             	mov    %edx,(%esp)
    14e4:	ff d0                	call   *%eax
    14e6:	89 85 d0 fb ff ff    	mov    %eax,-0x430(%ebp)
    14ec:	85 c0                	test   %eax,%eax
    14ee:	75 6c                	jne    155c <print_blob+0x14c>
    14f0:	8b 85 e4 fb ff ff    	mov    -0x41c(%ebp),%eax
    14f6:	0b 85 e0 fb ff ff    	or     -0x420(%ebp),%eax
    14fc:	74 69                	je     1567 <print_blob+0x157>
    14fe:	8d 9d e8 fb ff ff    	lea    -0x418(%ebp),%ebx
    1504:	31 f6                	xor    %esi,%esi
    1506:	31 ff                	xor    %edi,%edi
    1508:	31 c0                	xor    %eax,%eax
    150a:	8a 03                	mov    (%ebx),%al
    150c:	c7 44 24 04 89 cd 02 	movl   $0x2cd89,0x4(%esp)
    1513:	00 
    1514:	89 44 24 08          	mov    %eax,0x8(%esp)
    1518:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
    151e:	89 04 24             	mov    %eax,(%esp)
    1521:	e8 6a fe ff ff       	call   1390 <state_printf>
    1526:	83 c6 01             	add    $0x1,%esi
    1529:	83 d7 00             	adc    $0x0,%edi
    152c:	8b 95 e4 fb ff ff    	mov    -0x41c(%ebp),%edx
    1532:	43                   	inc    %ebx
    1533:	8b 85 e0 fb ff ff    	mov    -0x420(%ebp),%eax
    1539:	39 fa                	cmp    %edi,%edx
    153b:	77 cb                	ja     1508 <print_blob+0xf8>
    153d:	0f 82 3d ff ff ff    	jb     1480 <print_blob+0x70>
    1543:	39 f0                	cmp    %esi,%eax
    1545:	77 c1                	ja     1508 <print_blob+0xf8>
    1547:	e9 34 ff ff ff       	jmp    1480 <print_blob+0x70>
    154c:	c7 85 d0 fb ff ff f2 	movl   $0xfffffff2,-0x430(%ebp)
    1553:	ff ff ff 
    1556:	8b 85 d0 fb ff ff    	mov    -0x430(%ebp),%eax
    155c:	81 c4 5c 04 00 00    	add    $0x45c,%esp
    1562:	5b                   	pop    %ebx
    1563:	5e                   	pop    %esi
    1564:	5f                   	pop    %edi
    1565:	5d                   	pop    %ebp
    1566:	c3                   	ret    
    1567:	8b 85 d4 fb ff ff    	mov    -0x42c(%ebp),%eax
    156d:	c7 44 24 04 5b cd 02 	movl   $0x2cd5b,0x4(%esp)
    1574:	00 
    1575:	89 04 24             	mov    %eax,(%esp)
    1578:	e8 13 fe ff ff       	call   1390 <state_printf>
    157d:	8b 85 d0 fb ff ff    	mov    -0x430(%ebp),%eax
    1583:	81 c4 5c 04 00 00    	add    $0x45c,%esp
    1589:	5b                   	pop    %ebx
    158a:	5e                   	pop    %esi
    158b:	5f                   	pop    %edi
    158c:	5d                   	pop    %ebp
    158d:	c3                   	ret    
    158e:	c7 44 24 08 d9 00 00 	movl   $0xd9,0x8(%esp)
    1595:	00 
    1596:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    159d:	00 
    159e:	c7 04 24 dc cd 02 00 	movl   $0x2cddc,(%esp)
    15a5:	e8 06 93 02 00       	call   2a8b0 <assert_abort>
    15aa:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    15b1:	00 
    15b2:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    15b9:	00 
    15ba:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    15c1:	e8 ea 92 02 00       	call   2a8b0 <assert_abort>
    15c6:	8d 76 00             	lea    0x0(%esi),%esi
    15c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000015d0 <print_string>:
    15d0:	55                   	push   %ebp
    15d1:	89 e5                	mov    %esp,%ebp
    15d3:	57                   	push   %edi
    15d4:	56                   	push   %esi
    15d5:	53                   	push   %ebx
    15d6:	83 ec 3c             	sub    $0x3c,%esp
    15d9:	83 3a 04             	cmpl   $0x4,(%edx)
    15dc:	0f 85 fb 00 00 00    	jne    16dd <print_string+0x10d>
    15e2:	8b 5a 08             	mov    0x8(%edx),%ebx
    15e5:	89 04 24             	mov    %eax,(%esp)
    15e8:	c7 44 24 04 5b cd 02 	movl   $0x2cd5b,0x4(%esp)
    15ef:	00 
    15f0:	89 c6                	mov    %eax,%esi
    15f2:	e8 99 fd ff ff       	call   1390 <state_printf>
    15f7:	8d 45 e0             	lea    -0x20(%ebp),%eax
    15fa:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
    1601:	ff 
    1602:	89 44 24 04          	mov    %eax,0x4(%esp)
    1606:	89 1c 24             	mov    %ebx,(%esp)
    1609:	89 5d dc             	mov    %ebx,-0x24(%ebp)
    160c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    1613:	e8 98 25 01 00       	call   13bb0 <str_decode>
    1618:	8b 55 dc             	mov    -0x24(%ebp),%edx
    161b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    161e:	89 55 d0             	mov    %edx,-0x30(%ebp)
    1621:	8b 55 e0             	mov    -0x20(%ebp),%edx
    1624:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    1627:	89 45 d8             	mov    %eax,-0x28(%ebp)
    162a:	8d 7d d4             	lea    -0x2c(%ebp),%edi
    162d:	8d 76 00             	lea    0x0(%esi),%esi
    1630:	8b 5d d8             	mov    -0x28(%ebp),%ebx
    1633:	85 db                	test   %ebx,%ebx
    1635:	74 4d                	je     1684 <print_string+0xb4>
    1637:	83 fb 3f             	cmp    $0x3f,%ebx
    163a:	0f 84 90 00 00 00    	je     16d0 <print_string+0x100>
    1640:	8b 45 d0             	mov    -0x30(%ebp),%eax
    1643:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
    164a:	ff 
    164b:	89 7c 24 04          	mov    %edi,0x4(%esp)
    164f:	89 04 24             	mov    %eax,(%esp)
    1652:	e8 59 25 01 00       	call   13bb0 <str_decode>
    1657:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    165b:	89 45 d8             	mov    %eax,-0x28(%ebp)
    165e:	83 fb 5c             	cmp    $0x5c,%ebx
    1661:	74 55                	je     16b8 <print_string+0xe8>
    1663:	83 fb 22             	cmp    $0x22,%ebx
    1666:	74 50                	je     16b8 <print_string+0xe8>
    1668:	83 fb 1f             	cmp    $0x1f,%ebx
    166b:	7f 33                	jg     16a0 <print_string+0xd0>
    166d:	c7 44 24 04 ad cd 02 	movl   $0x2cdad,0x4(%esp)
    1674:	00 
    1675:	89 34 24             	mov    %esi,(%esp)
    1678:	e8 13 fd ff ff       	call   1390 <state_printf>
    167d:	8b 5d d8             	mov    -0x28(%ebp),%ebx
    1680:	85 db                	test   %ebx,%ebx
    1682:	75 b3                	jne    1637 <print_string+0x67>
    1684:	89 34 24             	mov    %esi,(%esp)
    1687:	c7 44 24 04 5b cd 02 	movl   $0x2cd5b,0x4(%esp)
    168e:	00 
    168f:	e8 fc fc ff ff       	call   1390 <state_printf>
    1694:	83 c4 3c             	add    $0x3c,%esp
    1697:	31 c0                	xor    %eax,%eax
    1699:	5b                   	pop    %ebx
    169a:	5e                   	pop    %esi
    169b:	5f                   	pop    %edi
    169c:	5d                   	pop    %ebp
    169d:	c3                   	ret    
    169e:	66 90                	xchg   %ax,%ax
    16a0:	c7 44 24 04 a9 cd 02 	movl   $0x2cda9,0x4(%esp)
    16a7:	00 
    16a8:	89 34 24             	mov    %esi,(%esp)
    16ab:	e8 e0 fc ff ff       	call   1390 <state_printf>
    16b0:	e9 7b ff ff ff       	jmp    1630 <print_string+0x60>
    16b5:	8d 76 00             	lea    0x0(%esi),%esi
    16b8:	c7 44 24 04 a8 cd 02 	movl   $0x2cda8,0x4(%esp)
    16bf:	00 
    16c0:	89 34 24             	mov    %esi,(%esp)
    16c3:	e8 c8 fc ff ff       	call   1390 <state_printf>
    16c8:	e9 63 ff ff ff       	jmp    1630 <print_string+0x60>
    16cd:	8d 76 00             	lea    0x0(%esi),%esi
    16d0:	83 c4 3c             	add    $0x3c,%esp
    16d3:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    16d8:	5b                   	pop    %ebx
    16d9:	5e                   	pop    %esi
    16da:	5f                   	pop    %edi
    16db:	5d                   	pop    %ebp
    16dc:	c3                   	ret    
    16dd:	c7 44 24 08 a2 00 00 	movl   $0xa2,0x8(%esp)
    16e4:	00 
    16e5:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    16ec:	00 
    16ed:	c7 04 24 00 ce 02 00 	movl   $0x2ce00,(%esp)
    16f4:	e8 b7 91 02 00       	call   2a8b0 <assert_abort>
    16f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001700 <print_internal_func>:
    1700:	55                   	push   %ebp
    1701:	89 e5                	mov    %esp,%ebp
    1703:	57                   	push   %edi
    1704:	56                   	push   %esi
    1705:	53                   	push   %ebx
    1706:	83 ec 2c             	sub    $0x2c,%esp
    1709:	8b 75 10             	mov    0x10(%ebp),%esi
    170c:	8b 5d 08             	mov    0x8(%ebp),%ebx
    170f:	80 7e 04 00          	cmpb   $0x0,0x4(%esi)
    1713:	74 73                	je     1788 <print_internal_func+0x88>
    1715:	c7 44 24 04 07 cf 02 	movl   $0x2cf07,0x4(%esp)
    171c:	00 
    171d:	89 34 24             	mov    %esi,(%esp)
    1720:	e8 6b fc ff ff       	call   1390 <state_printf>
    1725:	8b 46 08             	mov    0x8(%esi),%eax
    1728:	31 ff                	xor    %edi,%edi
    172a:	85 c0                	test   %eax,%eax
    172c:	7e 18                	jle    1746 <print_internal_func+0x46>
    172e:	66 90                	xchg   %ax,%ax
    1730:	c7 44 24 04 cc cd 02 	movl   $0x2cdcc,0x4(%esp)
    1737:	00 
    1738:	89 34 24             	mov    %esi,(%esp)
    173b:	47                   	inc    %edi
    173c:	e8 4f fc ff ff       	call   1390 <state_printf>
    1741:	3b 7e 08             	cmp    0x8(%esi),%edi
    1744:	7c ea                	jl     1730 <print_internal_func+0x30>
    1746:	c6 46 04 00          	movb   $0x0,0x4(%esi)
    174a:	83 3e 01             	cmpl   $0x1,(%esi)
    174d:	74 51                	je     17a0 <print_internal_func+0xa0>
    174f:	8b 03                	mov    (%ebx),%eax
    1751:	31 ff                	xor    %edi,%edi
    1753:	83 f8 05             	cmp    $0x5,%eax
    1756:	76 28                	jbe    1780 <print_internal_func+0x80>
    1758:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    175d:	89 1c 24             	mov    %ebx,(%esp)
    1760:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1763:	e8 58 8b 00 00       	call   a2c0 <bithenge_node_dec_ref>
    1768:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    176b:	89 0c 24             	mov    %ecx,(%esp)
    176e:	e8 4d 8b 00 00       	call   a2c0 <bithenge_node_dec_ref>
    1773:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1776:	83 c4 2c             	add    $0x2c,%esp
    1779:	5b                   	pop    %ebx
    177a:	5e                   	pop    %esi
    177b:	5f                   	pop    %edi
    177c:	5d                   	pop    %ebp
    177d:	c3                   	ret    
    177e:	66 90                	xchg   %ax,%ax
    1780:	ff 24 85 4c ce 02 00 	jmp    *0x2ce4c(,%eax,4)
    1787:	90                   	nop
    1788:	c7 44 24 04 ca cd 02 	movl   $0x2cdca,0x4(%esp)
    178f:	00 
    1790:	89 34 24             	mov    %esi,(%esp)
    1793:	e8 f8 fb ff ff       	call   1390 <state_printf>
    1798:	e9 78 ff ff ff       	jmp    1715 <print_internal_func+0x15>
    179d:	8d 76 00             	lea    0x0(%esi),%esi
    17a0:	31 ff                	xor    %edi,%edi
    17a2:	83 3b 04             	cmpl   $0x4,(%ebx)
    17a5:	74 51                	je     17f8 <print_internal_func+0xf8>
    17a7:	c7 44 24 04 5b cd 02 	movl   $0x2cd5b,0x4(%esp)
    17ae:	00 
    17af:	89 34 24             	mov    %esi,(%esp)
    17b2:	e8 d9 fb ff ff       	call   1390 <state_printf>
    17b7:	bf 01 00 00 00       	mov    $0x1,%edi
    17bc:	8b 03                	mov    (%ebx),%eax
    17be:	eb 93                	jmp    1753 <print_internal_func+0x53>
    17c0:	89 da                	mov    %ebx,%edx
    17c2:	89 f0                	mov    %esi,%eax
    17c4:	e8 47 fc ff ff       	call   1410 <print_blob>
    17c9:	85 c0                	test   %eax,%eax
    17cb:	75 90                	jne    175d <print_internal_func+0x5d>
    17cd:	89 f8                	mov    %edi,%eax
    17cf:	84 c0                	test   %al,%al
    17d1:	75 54                	jne    1827 <print_internal_func+0x127>
    17d3:	c7 44 24 04 fa ce 02 	movl   $0x2cefa,0x4(%esp)
    17da:	00 
    17db:	89 34 24             	mov    %esi,(%esp)
    17de:	e8 ad fb ff ff       	call   1390 <state_printf>
    17e3:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    17e6:	83 39 05             	cmpl   $0x5,(%ecx)
    17e9:	0f 87 69 ff ff ff    	ja     1758 <print_internal_func+0x58>
    17ef:	8b 01                	mov    (%ecx),%eax
    17f1:	ff 24 85 64 ce 02 00 	jmp    *0x2ce64(,%eax,4)
    17f8:	89 da                	mov    %ebx,%edx
    17fa:	89 f0                	mov    %esi,%eax
    17fc:	e8 cf fd ff ff       	call   15d0 <print_string>
    1801:	eb c6                	jmp    17c9 <print_internal_func+0xc9>
    1803:	8b 43 08             	mov    0x8(%ebx),%eax
    1806:	8b 53 0c             	mov    0xc(%ebx),%edx
    1809:	89 54 24 0c          	mov    %edx,0xc(%esp)
    180d:	89 44 24 08          	mov    %eax,0x8(%esp)
    1811:	c7 44 24 04 d5 cd 02 	movl   $0x2cdd5,0x4(%esp)
    1818:	00 
    1819:	89 34 24             	mov    %esi,(%esp)
    181c:	e8 6f fb ff ff       	call   1390 <state_printf>
    1821:	89 f8                	mov    %edi,%eax
    1823:	84 c0                	test   %al,%al
    1825:	74 ac                	je     17d3 <print_internal_func+0xd3>
    1827:	c7 44 24 04 5b cd 02 	movl   $0x2cd5b,0x4(%esp)
    182e:	00 
    182f:	89 34 24             	mov    %esi,(%esp)
    1832:	e8 59 fb ff ff       	call   1390 <state_printf>
    1837:	eb 9a                	jmp    17d3 <print_internal_func+0xd3>
    1839:	8b 06                	mov    (%esi),%eax
    183b:	8a 53 08             	mov    0x8(%ebx),%dl
    183e:	85 c0                	test   %eax,%eax
    1840:	0f 85 6d 01 00 00    	jne    19b3 <print_internal_func+0x2b3>
    1846:	b8 b9 cd 02 00       	mov    $0x2cdb9,%eax
    184b:	84 d2                	test   %dl,%dl
    184d:	0f 85 88 01 00 00    	jne    19db <print_internal_func+0x2db>
    1853:	89 44 24 04          	mov    %eax,0x4(%esp)
    1857:	89 34 24             	mov    %esi,(%esp)
    185a:	e8 31 fb ff ff       	call   1390 <state_printf>
    185f:	e9 69 ff ff ff       	jmp    17cd <print_internal_func+0xcd>
    1864:	c7 44 24 04 d1 cd 02 	movl   $0x2cdd1,0x4(%esp)
    186b:	00 
    186c:	89 34 24             	mov    %esi,(%esp)
    186f:	e8 1c fb ff ff       	call   1390 <state_printf>
    1874:	8b 46 08             	mov    0x8(%esi),%eax
    1877:	40                   	inc    %eax
    1878:	c6 46 04 01          	movb   $0x1,0x4(%esi)
    187c:	89 46 08             	mov    %eax,0x8(%esi)
    187f:	83 3b 01             	cmpl   $0x1,(%ebx)
    1882:	0f 85 01 02 00 00    	jne    1a89 <print_internal_func+0x389>
    1888:	8b 43 08             	mov    0x8(%ebx),%eax
    188b:	89 74 24 08          	mov    %esi,0x8(%esp)
    188f:	c7 44 24 04 00 17 00 	movl   $0x1700,0x4(%esp)
    1896:	00 
    1897:	89 1c 24             	mov    %ebx,(%esp)
    189a:	ff 10                	call   *(%eax)
    189c:	85 c0                	test   %eax,%eax
    189e:	0f 85 b9 fe ff ff    	jne    175d <print_internal_func+0x5d>
    18a4:	8b 46 08             	mov    0x8(%esi),%eax
    18a7:	48                   	dec    %eax
    18a8:	89 46 08             	mov    %eax,0x8(%esi)
    18ab:	80 7e 04 00          	cmpb   $0x0,0x4(%esi)
    18af:	0f 84 95 01 00 00    	je     1a4a <print_internal_func+0x34a>
    18b5:	c6 46 04 00          	movb   $0x0,0x4(%esi)
    18b9:	c7 44 24 04 d3 cd 02 	movl   $0x2cdd3,0x4(%esp)
    18c0:	00 
    18c1:	89 34 24             	mov    %esi,(%esp)
    18c4:	e8 c7 fa ff ff       	call   1390 <state_printf>
    18c9:	e9 ff fe ff ff       	jmp    17cd <print_internal_func+0xcd>
    18ce:	8b 55 0c             	mov    0xc(%ebp),%edx
    18d1:	89 f0                	mov    %esi,%eax
    18d3:	e8 38 fb ff ff       	call   1410 <print_blob>
    18d8:	e9 80 fe ff ff       	jmp    175d <print_internal_func+0x5d>
    18dd:	8b 55 0c             	mov    0xc(%ebp),%edx
    18e0:	89 f0                	mov    %esi,%eax
    18e2:	e8 e9 fc ff ff       	call   15d0 <print_string>
    18e7:	e9 71 fe ff ff       	jmp    175d <print_internal_func+0x5d>
    18ec:	c7 44 24 04 d1 cd 02 	movl   $0x2cdd1,0x4(%esp)
    18f3:	00 
    18f4:	89 34 24             	mov    %esi,(%esp)
    18f7:	e8 94 fa ff ff       	call   1390 <state_printf>
    18fc:	8b 4e 08             	mov    0x8(%esi),%ecx
    18ff:	41                   	inc    %ecx
    1900:	c6 46 04 01          	movb   $0x1,0x4(%esi)
    1904:	89 4e 08             	mov    %ecx,0x8(%esi)
    1907:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    190a:	83 39 01             	cmpl   $0x1,(%ecx)
    190d:	0f 85 76 01 00 00    	jne    1a89 <print_internal_func+0x389>
    1913:	8b 41 08             	mov    0x8(%ecx),%eax
    1916:	89 74 24 08          	mov    %esi,0x8(%esp)
    191a:	c7 44 24 04 00 17 00 	movl   $0x1700,0x4(%esp)
    1921:	00 
    1922:	89 0c 24             	mov    %ecx,(%esp)
    1925:	ff 10                	call   *(%eax)
    1927:	85 c0                	test   %eax,%eax
    1929:	0f 85 2e fe ff ff    	jne    175d <print_internal_func+0x5d>
    192f:	8b 56 08             	mov    0x8(%esi),%edx
    1932:	4a                   	dec    %edx
    1933:	89 56 08             	mov    %edx,0x8(%esi)
    1936:	80 7e 04 00          	cmpb   $0x0,0x4(%esi)
    193a:	0f 84 a5 00 00 00    	je     19e5 <print_internal_func+0x2e5>
    1940:	c6 46 04 00          	movb   $0x0,0x4(%esi)
    1944:	c7 44 24 04 d3 cd 02 	movl   $0x2cdd3,0x4(%esp)
    194b:	00 
    194c:	89 34 24             	mov    %esi,(%esp)
    194f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1952:	e8 39 fa ff ff       	call   1390 <state_printf>
    1957:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    195a:	e9 fe fd ff ff       	jmp    175d <print_internal_func+0x5d>
    195f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    1962:	8b 41 08             	mov    0x8(%ecx),%eax
    1965:	8b 51 0c             	mov    0xc(%ecx),%edx
    1968:	89 54 24 0c          	mov    %edx,0xc(%esp)
    196c:	89 44 24 08          	mov    %eax,0x8(%esp)
    1970:	c7 44 24 04 d5 cd 02 	movl   $0x2cdd5,0x4(%esp)
    1977:	00 
    1978:	89 34 24             	mov    %esi,(%esp)
    197b:	e8 10 fa ff ff       	call   1390 <state_printf>
    1980:	31 c0                	xor    %eax,%eax
    1982:	e9 d6 fd ff ff       	jmp    175d <print_internal_func+0x5d>
    1987:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    198a:	8b 06                	mov    (%esi),%eax
    198c:	85 c0                	test   %eax,%eax
    198e:	8a 51 08             	mov    0x8(%ecx),%dl
    1991:	75 3e                	jne    19d1 <print_internal_func+0x2d1>
    1993:	b8 b9 cd 02 00       	mov    $0x2cdb9,%eax
    1998:	84 d2                	test   %dl,%dl
    199a:	0f 85 a0 00 00 00    	jne    1a40 <print_internal_func+0x340>
    19a0:	89 44 24 04          	mov    %eax,0x4(%esp)
    19a4:	89 34 24             	mov    %esi,(%esp)
    19a7:	e8 e4 f9 ff ff       	call   1390 <state_printf>
    19ac:	31 c0                	xor    %eax,%eax
    19ae:	e9 aa fd ff ff       	jmp    175d <print_internal_func+0x5d>
    19b3:	48                   	dec    %eax
    19b4:	0f 85 13 fe ff ff    	jne    17cd <print_internal_func+0xcd>
    19ba:	b8 c4 cd 02 00       	mov    $0x2cdc4,%eax
    19bf:	84 d2                	test   %dl,%dl
    19c1:	0f 84 8c fe ff ff    	je     1853 <print_internal_func+0x153>
    19c7:	b8 bf cd 02 00       	mov    $0x2cdbf,%eax
    19cc:	e9 82 fe ff ff       	jmp    1853 <print_internal_func+0x153>
    19d1:	48                   	dec    %eax
    19d2:	74 55                	je     1a29 <print_internal_func+0x329>
    19d4:	31 c0                	xor    %eax,%eax
    19d6:	e9 82 fd ff ff       	jmp    175d <print_internal_func+0x5d>
    19db:	b8 b4 cd 02 00       	mov    $0x2cdb4,%eax
    19e0:	e9 6e fe ff ff       	jmp    1853 <print_internal_func+0x153>
    19e5:	c7 44 24 04 07 cf 02 	movl   $0x2cf07,0x4(%esp)
    19ec:	00 
    19ed:	89 34 24             	mov    %esi,(%esp)
    19f0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    19f3:	e8 98 f9 ff ff       	call   1390 <state_printf>
    19f8:	8b 7e 08             	mov    0x8(%esi),%edi
    19fb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    19fe:	85 ff                	test   %edi,%edi
    1a00:	0f 8e 3a ff ff ff    	jle    1940 <print_internal_func+0x240>
    1a06:	31 ff                	xor    %edi,%edi
    1a08:	c7 44 24 04 cc cd 02 	movl   $0x2cdcc,0x4(%esp)
    1a0f:	00 
    1a10:	89 34 24             	mov    %esi,(%esp)
    1a13:	47                   	inc    %edi
    1a14:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1a17:	e8 74 f9 ff ff       	call   1390 <state_printf>
    1a1c:	3b 7e 08             	cmp    0x8(%esi),%edi
    1a1f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1a22:	7c e4                	jl     1a08 <print_internal_func+0x308>
    1a24:	e9 17 ff ff ff       	jmp    1940 <print_internal_func+0x240>
    1a29:	b8 c4 cd 02 00       	mov    $0x2cdc4,%eax
    1a2e:	84 d2                	test   %dl,%dl
    1a30:	0f 84 6a ff ff ff    	je     19a0 <print_internal_func+0x2a0>
    1a36:	b8 bf cd 02 00       	mov    $0x2cdbf,%eax
    1a3b:	e9 60 ff ff ff       	jmp    19a0 <print_internal_func+0x2a0>
    1a40:	b8 b4 cd 02 00       	mov    $0x2cdb4,%eax
    1a45:	e9 56 ff ff ff       	jmp    19a0 <print_internal_func+0x2a0>
    1a4a:	c7 44 24 04 07 cf 02 	movl   $0x2cf07,0x4(%esp)
    1a51:	00 
    1a52:	89 34 24             	mov    %esi,(%esp)
    1a55:	e8 36 f9 ff ff       	call   1390 <state_printf>
    1a5a:	8b 46 08             	mov    0x8(%esi),%eax
    1a5d:	85 c0                	test   %eax,%eax
    1a5f:	0f 8e 50 fe ff ff    	jle    18b5 <print_internal_func+0x1b5>
    1a65:	31 c0                	xor    %eax,%eax
    1a67:	90                   	nop
    1a68:	c7 44 24 04 cc cd 02 	movl   $0x2cdcc,0x4(%esp)
    1a6f:	00 
    1a70:	89 34 24             	mov    %esi,(%esp)
    1a73:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1a76:	e8 15 f9 ff ff       	call   1390 <state_printf>
    1a7b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1a7e:	40                   	inc    %eax
    1a7f:	3b 46 08             	cmp    0x8(%esi),%eax
    1a82:	7c e4                	jl     1a68 <print_internal_func+0x368>
    1a84:	e9 2c fe ff ff       	jmp    18b5 <print_internal_func+0x1b5>
    1a89:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    1a90:	00 
    1a91:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    1a98:	00 
    1a99:	c7 04 24 24 ce 02 00 	movl   $0x2ce24,(%esp)
    1aa0:	e8 0b 8e 02 00       	call   2a8b0 <assert_abort>
    1aa5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1aa9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00001ab0 <bithenge_print_node>:
    1ab0:	55                   	push   %ebp
    1ab1:	89 e5                	mov    %esp,%ebp
    1ab3:	56                   	push   %esi
    1ab4:	53                   	push   %ebx
    1ab5:	83 ec 40             	sub    $0x40,%esp
    1ab8:	c6 45 e8 01          	movb   $0x1,-0x18(%ebp)
    1abc:	8b 55 0c             	mov    0xc(%ebp),%edx
    1abf:	8b 45 08             	mov    0x8(%ebp),%eax
    1ac2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1ac5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    1acc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    1ad3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    1ada:	83 3a 05             	cmpl   $0x5,(%edx)
    1add:	76 11                	jbe    1af0 <bithenge_print_node+0x40>
    1adf:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    1ae4:	83 c4 40             	add    $0x40,%esp
    1ae7:	5b                   	pop    %ebx
    1ae8:	5e                   	pop    %esi
    1ae9:	5d                   	pop    %ebp
    1aea:	c3                   	ret    
    1aeb:	90                   	nop
    1aec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1af0:	8b 0a                	mov    (%edx),%ecx
    1af2:	ff 24 8d 7c ce 02 00 	jmp    *0x2ce7c(,%ecx,4)
    1af9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1b00:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    1b03:	e8 08 f9 ff ff       	call   1410 <print_blob>
    1b08:	83 c4 40             	add    $0x40,%esp
    1b0b:	5b                   	pop    %ebx
    1b0c:	5e                   	pop    %esi
    1b0d:	5d                   	pop    %ebp
    1b0e:	c3                   	ret    
    1b0f:	90                   	nop
    1b10:	8d 5d e4             	lea    -0x1c(%ebp),%ebx
    1b13:	c7 44 24 04 d1 cd 02 	movl   $0x2cdd1,0x4(%esp)
    1b1a:	00 
    1b1b:	89 1c 24             	mov    %ebx,(%esp)
    1b1e:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    1b21:	e8 6a f8 ff ff       	call   1390 <state_printf>
    1b26:	8b 4d ec             	mov    -0x14(%ebp),%ecx
    1b29:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    1b2c:	41                   	inc    %ecx
    1b2d:	89 4d ec             	mov    %ecx,-0x14(%ebp)
    1b30:	c6 45 e8 01          	movb   $0x1,-0x18(%ebp)
    1b34:	83 3a 01             	cmpl   $0x1,(%edx)
    1b37:	0f 85 24 01 00 00    	jne    1c61 <bithenge_print_node+0x1b1>
    1b3d:	8b 42 08             	mov    0x8(%edx),%eax
    1b40:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    1b44:	c7 44 24 04 00 17 00 	movl   $0x1700,0x4(%esp)
    1b4b:	00 
    1b4c:	89 14 24             	mov    %edx,(%esp)
    1b4f:	ff 10                	call   *(%eax)
    1b51:	85 c0                	test   %eax,%eax
    1b53:	75 8f                	jne    1ae4 <bithenge_print_node+0x34>
    1b55:	8b 55 ec             	mov    -0x14(%ebp),%edx
    1b58:	4a                   	dec    %edx
    1b59:	89 55 ec             	mov    %edx,-0x14(%ebp)
    1b5c:	80 7d e8 00          	cmpb   $0x0,-0x18(%ebp)
    1b60:	0f 84 b2 00 00 00    	je     1c18 <bithenge_print_node+0x168>
    1b66:	89 1c 24             	mov    %ebx,(%esp)
    1b69:	c7 44 24 04 d3 cd 02 	movl   $0x2cdd3,0x4(%esp)
    1b70:	00 
    1b71:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    1b74:	c6 45 e8 00          	movb   $0x0,-0x18(%ebp)
    1b78:	e8 13 f8 ff ff       	call   1390 <state_printf>
    1b7d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    1b80:	83 c4 40             	add    $0x40,%esp
    1b83:	5b                   	pop    %ebx
    1b84:	5e                   	pop    %esi
    1b85:	5d                   	pop    %ebp
    1b86:	c3                   	ret    
    1b87:	90                   	nop
    1b88:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    1b8b:	e8 40 fa ff ff       	call   15d0 <print_string>
    1b90:	83 c4 40             	add    $0x40,%esp
    1b93:	5b                   	pop    %ebx
    1b94:	5e                   	pop    %esi
    1b95:	5d                   	pop    %ebp
    1b96:	c3                   	ret    
    1b97:	90                   	nop
    1b98:	8a 52 08             	mov    0x8(%edx),%dl
    1b9b:	85 c0                	test   %eax,%eax
    1b9d:	75 51                	jne    1bf0 <bithenge_print_node+0x140>
    1b9f:	b8 b9 cd 02 00       	mov    $0x2cdb9,%eax
    1ba4:	84 d2                	test   %dl,%dl
    1ba6:	75 68                	jne    1c10 <bithenge_print_node+0x160>
    1ba8:	89 44 24 04          	mov    %eax,0x4(%esp)
    1bac:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    1baf:	89 04 24             	mov    %eax,(%esp)
    1bb2:	e8 d9 f7 ff ff       	call   1390 <state_printf>
    1bb7:	83 c4 40             	add    $0x40,%esp
    1bba:	31 c0                	xor    %eax,%eax
    1bbc:	5b                   	pop    %ebx
    1bbd:	5e                   	pop    %esi
    1bbe:	5d                   	pop    %ebp
    1bbf:	c3                   	ret    
    1bc0:	8b 42 08             	mov    0x8(%edx),%eax
    1bc3:	8b 52 0c             	mov    0xc(%edx),%edx
    1bc6:	89 44 24 08          	mov    %eax,0x8(%esp)
    1bca:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    1bcd:	89 04 24             	mov    %eax,(%esp)
    1bd0:	89 54 24 0c          	mov    %edx,0xc(%esp)
    1bd4:	c7 44 24 04 d5 cd 02 	movl   $0x2cdd5,0x4(%esp)
    1bdb:	00 
    1bdc:	e8 af f7 ff ff       	call   1390 <state_printf>
    1be1:	83 c4 40             	add    $0x40,%esp
    1be4:	31 c0                	xor    %eax,%eax
    1be6:	5b                   	pop    %ebx
    1be7:	5e                   	pop    %esi
    1be8:	5d                   	pop    %ebp
    1be9:	c3                   	ret    
    1bea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1bf0:	48                   	dec    %eax
    1bf1:	74 0d                	je     1c00 <bithenge_print_node+0x150>
    1bf3:	31 c0                	xor    %eax,%eax
    1bf5:	e9 ea fe ff ff       	jmp    1ae4 <bithenge_print_node+0x34>
    1bfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1c00:	b8 c4 cd 02 00       	mov    $0x2cdc4,%eax
    1c05:	84 d2                	test   %dl,%dl
    1c07:	74 9f                	je     1ba8 <bithenge_print_node+0xf8>
    1c09:	b8 bf cd 02 00       	mov    $0x2cdbf,%eax
    1c0e:	eb 98                	jmp    1ba8 <bithenge_print_node+0xf8>
    1c10:	b8 b4 cd 02 00       	mov    $0x2cdb4,%eax
    1c15:	eb 91                	jmp    1ba8 <bithenge_print_node+0xf8>
    1c17:	90                   	nop
    1c18:	c7 44 24 04 07 cf 02 	movl   $0x2cf07,0x4(%esp)
    1c1f:	00 
    1c20:	89 1c 24             	mov    %ebx,(%esp)
    1c23:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    1c26:	e8 65 f7 ff ff       	call   1390 <state_printf>
    1c2b:	8b 45 ec             	mov    -0x14(%ebp),%eax
    1c2e:	85 c0                	test   %eax,%eax
    1c30:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    1c33:	0f 8e 2d ff ff ff    	jle    1b66 <bithenge_print_node+0xb6>
    1c39:	31 f6                	xor    %esi,%esi
    1c3b:	90                   	nop
    1c3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1c40:	c7 44 24 04 cc cd 02 	movl   $0x2cdcc,0x4(%esp)
    1c47:	00 
    1c48:	89 1c 24             	mov    %ebx,(%esp)
    1c4b:	46                   	inc    %esi
    1c4c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    1c4f:	e8 3c f7 ff ff       	call   1390 <state_printf>
    1c54:	3b 75 ec             	cmp    -0x14(%ebp),%esi
    1c57:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    1c5a:	7c e4                	jl     1c40 <bithenge_print_node+0x190>
    1c5c:	e9 05 ff ff ff       	jmp    1b66 <bithenge_print_node+0xb6>
    1c61:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    1c68:	00 
    1c69:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    1c70:	00 
    1c71:	c7 04 24 24 ce 02 00 	movl   $0x2ce24,(%esp)
    1c78:	e8 33 8c 02 00       	call   2a8b0 <assert_abort>
    1c7d:	8d 76 00             	lea    0x0(%esi),%esi

00001c80 <bithenge_print_node_to_string>:
    1c80:	55                   	push   %ebp
    1c81:	89 e5                	mov    %esp,%ebp
    1c83:	57                   	push   %edi
    1c84:	56                   	push   %esi
    1c85:	53                   	push   %ebx
    1c86:	83 ec 4c             	sub    $0x4c,%esp
    1c89:	c6 45 d8 01          	movb   $0x1,-0x28(%ebp)
    1c8d:	8b 75 08             	mov    0x8(%ebp),%esi
    1c90:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    1c93:	8b 55 14             	mov    0x14(%ebp),%edx
    1c96:	8b 45 10             	mov    0x10(%ebp),%eax
    1c99:	8b 3e                	mov    (%esi),%edi
    1c9b:	8b 0b                	mov    (%ebx),%ecx
    1c9d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    1ca0:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    1ca7:	89 7d e0             	mov    %edi,-0x20(%ebp)
    1caa:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    1cad:	83 3a 05             	cmpl   $0x5,(%edx)
    1cb0:	76 16                	jbe    1cc8 <bithenge_print_node_to_string+0x48>
    1cb2:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    1cb7:	89 3e                	mov    %edi,(%esi)
    1cb9:	89 0b                	mov    %ecx,(%ebx)
    1cbb:	83 c4 4c             	add    $0x4c,%esp
    1cbe:	5b                   	pop    %ebx
    1cbf:	5e                   	pop    %esi
    1cc0:	5f                   	pop    %edi
    1cc1:	5d                   	pop    %ebp
    1cc2:	c3                   	ret    
    1cc3:	90                   	nop
    1cc4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1cc8:	8b 02                	mov    (%edx),%eax
    1cca:	ff 24 85 94 ce 02 00 	jmp    *0x2ce94(,%eax,4)
    1cd1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1cd8:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    1cdb:	e8 30 f7 ff ff       	call   1410 <print_blob>
    1ce0:	8b 7d e0             	mov    -0x20(%ebp),%edi
    1ce3:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    1ce6:	89 3e                	mov    %edi,(%esi)
    1ce8:	89 0b                	mov    %ecx,(%ebx)
    1cea:	83 c4 4c             	add    $0x4c,%esp
    1ced:	5b                   	pop    %ebx
    1cee:	5e                   	pop    %esi
    1cef:	5f                   	pop    %edi
    1cf0:	5d                   	pop    %ebp
    1cf1:	c3                   	ret    
    1cf2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1cf8:	8d 7d d4             	lea    -0x2c(%ebp),%edi
    1cfb:	c7 44 24 04 d1 cd 02 	movl   $0x2cdd1,0x4(%esp)
    1d02:	00 
    1d03:	89 3c 24             	mov    %edi,(%esp)
    1d06:	89 55 bc             	mov    %edx,-0x44(%ebp)
    1d09:	e8 82 f6 ff ff       	call   1390 <state_printf>
    1d0e:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    1d11:	8b 55 bc             	mov    -0x44(%ebp),%edx
    1d14:	41                   	inc    %ecx
    1d15:	89 4d dc             	mov    %ecx,-0x24(%ebp)
    1d18:	c6 45 d8 01          	movb   $0x1,-0x28(%ebp)
    1d1c:	83 3a 01             	cmpl   $0x1,(%edx)
    1d1f:	0f 85 5c 01 00 00    	jne    1e81 <bithenge_print_node_to_string+0x201>
    1d25:	8b 42 08             	mov    0x8(%edx),%eax
    1d28:	89 7c 24 08          	mov    %edi,0x8(%esp)
    1d2c:	c7 44 24 04 00 17 00 	movl   $0x1700,0x4(%esp)
    1d33:	00 
    1d34:	89 14 24             	mov    %edx,(%esp)
    1d37:	ff 10                	call   *(%eax)
    1d39:	85 c0                	test   %eax,%eax
    1d3b:	75 2b                	jne    1d68 <bithenge_print_node_to_string+0xe8>
    1d3d:	8b 55 dc             	mov    -0x24(%ebp),%edx
    1d40:	4a                   	dec    %edx
    1d41:	89 55 dc             	mov    %edx,-0x24(%ebp)
    1d44:	80 7d d8 00          	cmpb   $0x0,-0x28(%ebp)
    1d48:	0f 84 e2 00 00 00    	je     1e30 <bithenge_print_node_to_string+0x1b0>
    1d4e:	c7 44 24 04 d3 cd 02 	movl   $0x2cdd3,0x4(%esp)
    1d55:	00 
    1d56:	89 3c 24             	mov    %edi,(%esp)
    1d59:	89 45 bc             	mov    %eax,-0x44(%ebp)
    1d5c:	c6 45 d8 00          	movb   $0x0,-0x28(%ebp)
    1d60:	e8 2b f6 ff ff       	call   1390 <state_printf>
    1d65:	8b 45 bc             	mov    -0x44(%ebp),%eax
    1d68:	8b 7d e0             	mov    -0x20(%ebp),%edi
    1d6b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    1d6e:	89 3e                	mov    %edi,(%esi)
    1d70:	89 0b                	mov    %ecx,(%ebx)
    1d72:	83 c4 4c             	add    $0x4c,%esp
    1d75:	5b                   	pop    %ebx
    1d76:	5e                   	pop    %esi
    1d77:	5f                   	pop    %edi
    1d78:	5d                   	pop    %ebp
    1d79:	c3                   	ret    
    1d7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1d80:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    1d83:	e8 48 f8 ff ff       	call   15d0 <print_string>
    1d88:	eb de                	jmp    1d68 <bithenge_print_node_to_string+0xe8>
    1d8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1d90:	8a 42 08             	mov    0x8(%edx),%al
    1d93:	8b 55 10             	mov    0x10(%ebp),%edx
    1d96:	85 d2                	test   %edx,%edx
    1d98:	75 66                	jne    1e00 <bithenge_print_node_to_string+0x180>
    1d9a:	ba b9 cd 02 00       	mov    $0x2cdb9,%edx
    1d9f:	84 c0                	test   %al,%al
    1da1:	75 7d                	jne    1e20 <bithenge_print_node_to_string+0x1a0>
    1da3:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    1da6:	89 54 24 04          	mov    %edx,0x4(%esp)
    1daa:	89 04 24             	mov    %eax,(%esp)
    1dad:	e8 de f5 ff ff       	call   1390 <state_printf>
    1db2:	8b 7d e0             	mov    -0x20(%ebp),%edi
    1db5:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    1db8:	89 3e                	mov    %edi,(%esi)
    1dba:	89 0b                	mov    %ecx,(%ebx)
    1dbc:	83 c4 4c             	add    $0x4c,%esp
    1dbf:	31 c0                	xor    %eax,%eax
    1dc1:	5b                   	pop    %ebx
    1dc2:	5e                   	pop    %esi
    1dc3:	5f                   	pop    %edi
    1dc4:	5d                   	pop    %ebp
    1dc5:	c3                   	ret    
    1dc6:	66 90                	xchg   %ax,%ax
    1dc8:	8b 42 08             	mov    0x8(%edx),%eax
    1dcb:	8b 52 0c             	mov    0xc(%edx),%edx
    1dce:	89 44 24 08          	mov    %eax,0x8(%esp)
    1dd2:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    1dd5:	89 04 24             	mov    %eax,(%esp)
    1dd8:	89 54 24 0c          	mov    %edx,0xc(%esp)
    1ddc:	c7 44 24 04 d5 cd 02 	movl   $0x2cdd5,0x4(%esp)
    1de3:	00 
    1de4:	e8 a7 f5 ff ff       	call   1390 <state_printf>
    1de9:	8b 7d e0             	mov    -0x20(%ebp),%edi
    1dec:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    1def:	89 3e                	mov    %edi,(%esi)
    1df1:	89 0b                	mov    %ecx,(%ebx)
    1df3:	83 c4 4c             	add    $0x4c,%esp
    1df6:	31 c0                	xor    %eax,%eax
    1df8:	5b                   	pop    %ebx
    1df9:	5e                   	pop    %esi
    1dfa:	5f                   	pop    %edi
    1dfb:	5d                   	pop    %ebp
    1dfc:	c3                   	ret    
    1dfd:	8d 76 00             	lea    0x0(%esi),%esi
    1e00:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
    1e04:	74 0a                	je     1e10 <bithenge_print_node_to_string+0x190>
    1e06:	31 c0                	xor    %eax,%eax
    1e08:	e9 aa fe ff ff       	jmp    1cb7 <bithenge_print_node_to_string+0x37>
    1e0d:	8d 76 00             	lea    0x0(%esi),%esi
    1e10:	ba c4 cd 02 00       	mov    $0x2cdc4,%edx
    1e15:	84 c0                	test   %al,%al
    1e17:	74 8a                	je     1da3 <bithenge_print_node_to_string+0x123>
    1e19:	ba bf cd 02 00       	mov    $0x2cdbf,%edx
    1e1e:	eb 83                	jmp    1da3 <bithenge_print_node_to_string+0x123>
    1e20:	ba b4 cd 02 00       	mov    $0x2cdb4,%edx
    1e25:	e9 79 ff ff ff       	jmp    1da3 <bithenge_print_node_to_string+0x123>
    1e2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    1e30:	c7 44 24 04 07 cf 02 	movl   $0x2cf07,0x4(%esp)
    1e37:	00 
    1e38:	89 3c 24             	mov    %edi,(%esp)
    1e3b:	89 45 bc             	mov    %eax,-0x44(%ebp)
    1e3e:	e8 4d f5 ff ff       	call   1390 <state_printf>
    1e43:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    1e46:	8b 45 bc             	mov    -0x44(%ebp),%eax
    1e49:	85 c9                	test   %ecx,%ecx
    1e4b:	0f 8e fd fe ff ff    	jle    1d4e <bithenge_print_node_to_string+0xce>
    1e51:	31 d2                	xor    %edx,%edx
    1e53:	89 5d c0             	mov    %ebx,-0x40(%ebp)
    1e56:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    1e59:	89 d3                	mov    %edx,%ebx
    1e5b:	90                   	nop
    1e5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1e60:	c7 44 24 04 cc cd 02 	movl   $0x2cdcc,0x4(%esp)
    1e67:	00 
    1e68:	89 3c 24             	mov    %edi,(%esp)
    1e6b:	43                   	inc    %ebx
    1e6c:	e8 1f f5 ff ff       	call   1390 <state_printf>
    1e71:	3b 5d dc             	cmp    -0x24(%ebp),%ebx
    1e74:	7c ea                	jl     1e60 <bithenge_print_node_to_string+0x1e0>
    1e76:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    1e79:	8b 5d c0             	mov    -0x40(%ebp),%ebx
    1e7c:	e9 cd fe ff ff       	jmp    1d4e <bithenge_print_node_to_string+0xce>
    1e81:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    1e88:	00 
    1e89:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    1e90:	00 
    1e91:	c7 04 24 24 ce 02 00 	movl   $0x2ce24,(%esp)
    1e98:	e8 13 8a 02 00       	call   2a8b0 <assert_abort>
    1e9d:	66 90                	xchg   %ax,%ax
    1e9f:	90                   	nop

00001ea0 <syntax_error.part.2>:
    1ea0:	55                   	push   %ebp
    1ea1:	89 e5                	mov    %esp,%ebp
    1ea3:	57                   	push   %edi
    1ea4:	56                   	push   %esi
    1ea5:	53                   	push   %ebx
    1ea6:	83 ec 3c             	sub    $0x3c,%esp
    1ea9:	89 d7                	mov    %edx,%edi
    1eab:	8b b0 1c 10 00 00    	mov    0x101c(%eax),%esi
    1eb1:	8b 90 14 10 00 00    	mov    0x1014(%eax),%edx
    1eb7:	8b 88 10 10 00 00    	mov    0x1010(%eax),%ecx
    1ebd:	01 f2                	add    %esi,%edx
    1ebf:	01 ce                	add    %ecx,%esi
    1ec1:	89 c3                	mov    %eax,%ebx
    1ec3:	89 f0                	mov    %esi,%eax
    1ec5:	c7 44 24 04 ec ce 02 	movl   $0x2ceec,0x4(%esp)
    1ecc:	00 
    1ecd:	29 d0                	sub    %edx,%eax
    1ecf:	89 55 e0             	mov    %edx,-0x20(%ebp)
    1ed2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1ed5:	8b 83 18 10 00 00    	mov    0x1018(%ebx),%eax
    1edb:	89 44 24 0c          	mov    %eax,0xc(%esp)
    1edf:	8b 43 08             	mov    0x8(%ebx),%eax
    1ee2:	89 44 24 08          	mov    %eax,0x8(%esp)
    1ee6:	a1 b8 06 03 00       	mov    0x306b8,%eax
    1eeb:	89 04 24             	mov    %eax,(%esp)
    1eee:	e8 2d 93 01 00       	call   1b220 <fprintf>
    1ef3:	8b 55 e0             	mov    -0x20(%ebp),%edx
    1ef6:	83 7d e4 01          	cmpl   $0x1,-0x1c(%ebp)
    1efa:	76 74                	jbe    1f70 <syntax_error.part.2+0xd0>
    1efc:	4e                   	dec    %esi
    1efd:	a1 b8 06 03 00       	mov    0x306b8,%eax
    1f02:	89 74 24 0c          	mov    %esi,0xc(%esp)
    1f06:	89 54 24 08          	mov    %edx,0x8(%esp)
    1f0a:	c7 44 24 04 f3 ce 02 	movl   $0x2cef3,0x4(%esp)
    1f11:	00 
    1f12:	89 04 24             	mov    %eax,(%esp)
    1f15:	e8 06 93 01 00       	call   1b220 <fprintf>
    1f1a:	8b 83 14 10 00 00    	mov    0x1014(%ebx),%eax
    1f20:	89 7c 24 08          	mov    %edi,0x8(%esp)
    1f24:	c7 44 24 04 fd ce 02 	movl   $0x2cefd,0x4(%esp)
    1f2b:	00 
    1f2c:	8d 44 03 10          	lea    0x10(%ebx,%eax,1),%eax
    1f30:	89 44 24 10          	mov    %eax,0x10(%esp)
    1f34:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    1f37:	89 44 24 0c          	mov    %eax,0xc(%esp)
    1f3b:	a1 b8 06 03 00       	mov    0x306b8,%eax
    1f40:	89 04 24             	mov    %eax,(%esp)
    1f43:	e8 d8 92 01 00       	call   1b220 <fprintf>
    1f48:	8b 03                	mov    (%ebx),%eax
    1f4a:	85 c0                	test   %eax,%eax
    1f4c:	75 19                	jne    1f67 <syntax_error.part.2+0xc7>
    1f4e:	83 bb 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%ebx)
    1f55:	74 39                	je     1f90 <syntax_error.part.2+0xf0>
    1f57:	c7 83 20 10 00 00 80 	movl   $0xffffff80,0x1020(%ebx)
    1f5e:	ff ff ff 
    1f61:	c7 03 f2 ff ff ff    	movl   $0xfffffff2,(%ebx)
    1f67:	83 c4 3c             	add    $0x3c,%esp
    1f6a:	5b                   	pop    %ebx
    1f6b:	5e                   	pop    %esi
    1f6c:	5f                   	pop    %edi
    1f6d:	5d                   	pop    %ebp
    1f6e:	c3                   	ret    
    1f6f:	90                   	nop
    1f70:	a1 b8 06 03 00       	mov    0x306b8,%eax
    1f75:	89 54 24 08          	mov    %edx,0x8(%esp)
    1f79:	c7 44 24 04 f7 ce 02 	movl   $0x2cef7,0x4(%esp)
    1f80:	00 
    1f81:	89 04 24             	mov    %eax,(%esp)
    1f84:	e8 97 92 01 00       	call   1b220 <fprintf>
    1f89:	eb 8f                	jmp    1f1a <syntax_error.part.2+0x7a>
    1f8b:	90                   	nop
    1f8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1f90:	8b 83 24 10 00 00    	mov    0x1024(%ebx),%eax
    1f96:	89 04 24             	mov    %eax,(%esp)
    1f99:	e8 42 e2 01 00       	call   201e0 <free>
    1f9e:	eb b7                	jmp    1f57 <syntax_error.part.2+0xb7>

00001fa0 <next_token>:
    1fa0:	55                   	push   %ebp
    1fa1:	8d 50 10             	lea    0x10(%eax),%edx
    1fa4:	89 e5                	mov    %esp,%ebp
    1fa6:	57                   	push   %edi
    1fa7:	56                   	push   %esi
    1fa8:	53                   	push   %ebx
    1fa9:	83 ec 4c             	sub    $0x4c,%esp
    1fac:	89 c3                	mov    %eax,%ebx
    1fae:	8b b0 10 10 00 00    	mov    0x1010(%eax),%esi
    1fb4:	89 55 d0             	mov    %edx,-0x30(%ebp)
    1fb7:	90                   	nop
    1fb8:	8d 86 00 01 00 00    	lea    0x100(%esi),%eax
    1fbe:	3d ff 0f 00 00       	cmp    $0xfff,%eax
    1fc3:	0f 87 c4 00 00 00    	ja     208d <next_token+0xed>
    1fc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    1fd0:	8b 83 20 10 00 00    	mov    0x1020(%ebx),%eax
    1fd6:	83 f8 86             	cmp    $0xffffff86,%eax
    1fd9:	0f 84 34 01 00 00    	je     2113 <next_token+0x173>
    1fdf:	8b b3 10 10 00 00    	mov    0x1010(%ebx),%esi
    1fe5:	c7 83 20 10 00 00 80 	movl   $0xffffff80,0x1020(%ebx)
    1fec:	ff ff ff 
    1fef:	89 b3 14 10 00 00    	mov    %esi,0x1014(%ebx)
    1ff5:	8a 44 33 10          	mov    0x10(%ebx,%esi,1),%al
    1ff9:	84 c0                	test   %al,%al
    1ffb:	0f 84 bc 04 00 00    	je     24bd <next_token+0x51d>
    2001:	3c 23                	cmp    $0x23,%al
    2003:	0f 84 97 03 00 00    	je     23a0 <next_token+0x400>
    2009:	0f be d0             	movsbl %al,%edx
    200c:	8d 4a f7             	lea    -0x9(%edx),%ecx
    200f:	83 f9 17             	cmp    $0x17,%ecx
    2012:	0f 87 10 01 00 00    	ja     2128 <next_token+0x188>
    2018:	8b 0c 8d 40 d0 02 00 	mov    0x2d040(,%ecx,4),%ecx
    201f:	85 c9                	test   %ecx,%ecx
    2021:	89 f1                	mov    %esi,%ecx
    2023:	0f 84 01 01 00 00    	je     212a <next_token+0x18a>
    2029:	f7 d9                	neg    %ecx
    202b:	46                   	inc    %esi
    202c:	3c 0a                	cmp    $0xa,%al
    202e:	74 24                	je     2054 <next_token+0xb4>
    2030:	8a 44 33 10          	mov    0x10(%ebx,%esi,1),%al
    2034:	0f be d0             	movsbl %al,%edx
    2037:	83 ea 09             	sub    $0x9,%edx
    203a:	83 fa 17             	cmp    $0x17,%edx
    203d:	77 37                	ja     2076 <next_token+0xd6>
    203f:	8b 14 95 40 d0 02 00 	mov    0x2d040(,%edx,4),%edx
    2046:	49                   	dec    %ecx
    2047:	8d 7e 01             	lea    0x1(%esi),%edi
    204a:	85 d2                	test   %edx,%edx
    204c:	74 28                	je     2076 <next_token+0xd6>
    204e:	89 fe                	mov    %edi,%esi
    2050:	3c 0a                	cmp    $0xa,%al
    2052:	75 dc                	jne    2030 <next_token+0x90>
    2054:	8b bb 18 10 00 00    	mov    0x1018(%ebx),%edi
    205a:	89 8b 1c 10 00 00    	mov    %ecx,0x101c(%ebx)
    2060:	47                   	inc    %edi
    2061:	89 bb 18 10 00 00    	mov    %edi,0x1018(%ebx)
    2067:	8a 44 33 10          	mov    0x10(%ebx,%esi,1),%al
    206b:	0f be d0             	movsbl %al,%edx
    206e:	83 ea 09             	sub    $0x9,%edx
    2071:	83 fa 17             	cmp    $0x17,%edx
    2074:	76 c9                	jbe    203f <next_token+0x9f>
    2076:	8d 86 00 01 00 00    	lea    0x100(%esi),%eax
    207c:	89 b3 10 10 00 00    	mov    %esi,0x1010(%ebx)
    2082:	3d ff 0f 00 00       	cmp    $0xfff,%eax
    2087:	0f 86 43 ff ff ff    	jbe    1fd0 <next_token+0x30>
    208d:	bf ff 0f 00 00       	mov    $0xfff,%edi
    2092:	8d 44 33 10          	lea    0x10(%ebx,%esi,1),%eax
    2096:	29 f7                	sub    %esi,%edi
    2098:	8b 55 d0             	mov    -0x30(%ebp),%edx
    209b:	89 14 24             	mov    %edx,(%esp)
    209e:	89 7c 24 08          	mov    %edi,0x8(%esp)
    20a2:	89 44 24 04          	mov    %eax,0x4(%esp)
    20a6:	e8 25 13 01 00       	call   133d0 <memmove>
    20ab:	8b 83 10 10 00 00    	mov    0x1010(%ebx),%eax
    20b1:	8b 93 1c 10 00 00    	mov    0x101c(%ebx),%edx
    20b7:	89 74 24 08          	mov    %esi,0x8(%esp)
    20bb:	01 c2                	add    %eax,%edx
    20bd:	8b 43 0c             	mov    0xc(%ebx),%eax
    20c0:	89 44 24 0c          	mov    %eax,0xc(%esp)
    20c4:	8d 44 3b 10          	lea    0x10(%ebx,%edi,1),%eax
    20c8:	89 93 1c 10 00 00    	mov    %edx,0x101c(%ebx)
    20ce:	c7 83 10 10 00 00 00 	movl   $0x0,0x1010(%ebx)
    20d5:	00 00 00 
    20d8:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
    20df:	00 
    20e0:	89 04 24             	mov    %eax,(%esp)
    20e3:	e8 a8 76 01 00       	call   19790 <fread>
    20e8:	89 c6                	mov    %eax,%esi
    20ea:	8b 43 0c             	mov    0xc(%ebx),%eax
    20ed:	89 04 24             	mov    %eax,(%esp)
    20f0:	e8 6b 90 01 00       	call   1b160 <ferror>
    20f5:	85 c0                	test   %eax,%eax
    20f7:	0f 85 93 03 00 00    	jne    2490 <next_token+0x4f0>
    20fd:	8b 83 20 10 00 00    	mov    0x1020(%ebx),%eax
    2103:	01 df                	add    %ebx,%edi
    2105:	83 f8 86             	cmp    $0xffffff86,%eax
    2108:	c6 44 3e 10 00       	movb   $0x0,0x10(%esi,%edi,1)
    210d:	0f 85 cc fe ff ff    	jne    1fdf <next_token+0x3f>
    2113:	8b 83 24 10 00 00    	mov    0x1024(%ebx),%eax
    2119:	89 04 24             	mov    %eax,(%esp)
    211c:	e8 bf e0 01 00       	call   201e0 <free>
    2121:	e9 b9 fe ff ff       	jmp    1fdf <next_token+0x3f>
    2126:	66 90                	xchg   %ax,%ax
    2128:	89 f1                	mov    %esi,%ecx
    212a:	8d 7a 9f             	lea    -0x61(%edx),%edi
    212d:	83 ff 19             	cmp    $0x19,%edi
    2130:	0f 86 f1 00 00 00    	jbe    2227 <next_token+0x287>
    2136:	8d 7a bf             	lea    -0x41(%edx),%edi
    2139:	83 ff 19             	cmp    $0x19,%edi
    213c:	0f 86 e5 00 00 00    	jbe    2227 <next_token+0x287>
    2142:	8d 4a d0             	lea    -0x30(%edx),%ecx
    2145:	83 f9 09             	cmp    $0x9,%ecx
    2148:	0f 87 a1 03 00 00    	ja     24ef <next_token+0x54f>
    214e:	8d 56 01             	lea    0x1(%esi),%edx
    2151:	eb 07                	jmp    215a <next_token+0x1ba>
    2153:	90                   	nop
    2154:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2158:	89 fa                	mov    %edi,%edx
    215a:	0f be 4c 13 10       	movsbl 0x10(%ebx,%edx,1),%ecx
    215f:	83 e9 30             	sub    $0x30,%ecx
    2162:	8d 7a 01             	lea    0x1(%edx),%edi
    2165:	83 f9 09             	cmp    $0x9,%ecx
    2168:	76 ee                	jbe    2158 <next_token+0x1b8>
    216a:	3c 2d                	cmp    $0x2d,%al
    216c:	89 93 10 10 00 00    	mov    %edx,0x1010(%ebx)
    2172:	0f 94 c0             	sete   %al
    2175:	25 ff 00 00 00       	and    $0xff,%eax
    217a:	8d 54 33 10          	lea    0x10(%ebx,%esi,1),%edx
    217e:	01 c2                	add    %eax,%edx
    2180:	8d 45 e0             	lea    -0x20(%ebp),%eax
    2183:	89 14 24             	mov    %edx,(%esp)
    2186:	c7 83 20 10 00 00 87 	movl   $0xffffff87,0x1020(%ebx)
    218d:	ff ff ff 
    2190:	89 44 24 10          	mov    %eax,0x10(%esp)
    2194:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    219b:	00 
    219c:	c7 44 24 08 0a 00 00 	movl   $0xa,0x8(%esp)
    21a3:	00 
    21a4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    21ab:	00 
    21ac:	e8 2f 43 01 00       	call   164e0 <str_uint64_t>
    21b1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    21b4:	89 c7                	mov    %eax,%edi
    21b6:	8b 45 e0             	mov    -0x20(%ebp),%eax
    21b9:	89 83 24 10 00 00    	mov    %eax,0x1024(%ebx)
    21bf:	89 93 28 10 00 00    	mov    %edx,0x1028(%ebx)
    21c5:	80 7c 33 10 2d       	cmpb   $0x2d,0x10(%ebx,%esi,1)
    21ca:	75 13                	jne    21df <next_token+0x23f>
    21cc:	f7 d8                	neg    %eax
    21ce:	83 d2 00             	adc    $0x0,%edx
    21d1:	89 83 24 10 00 00    	mov    %eax,0x1024(%ebx)
    21d7:	f7 da                	neg    %edx
    21d9:	89 93 28 10 00 00    	mov    %edx,0x1028(%ebx)
    21df:	8b 33                	mov    (%ebx),%esi
    21e1:	85 f6                	test   %esi,%esi
    21e3:	0f 85 de 02 00 00    	jne    24c7 <next_token+0x527>
    21e9:	85 ff                	test   %edi,%edi
    21eb:	0f 84 d6 02 00 00    	je     24c7 <next_token+0x527>
    21f1:	83 bb 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%ebx)
    21f8:	75 0e                	jne    2208 <next_token+0x268>
    21fa:	8b 83 24 10 00 00    	mov    0x1024(%ebx),%eax
    2200:	89 04 24             	mov    %eax,(%esp)
    2203:	e8 d8 df 01 00       	call   201e0 <free>
    2208:	c7 83 20 10 00 00 80 	movl   $0xffffff80,0x1020(%ebx)
    220f:	ff ff ff 
    2212:	89 3b                	mov    %edi,(%ebx)
    2214:	e9 ae 02 00 00       	jmp    24c7 <next_token+0x527>
    2219:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2220:	46                   	inc    %esi
    2221:	89 b3 10 10 00 00    	mov    %esi,0x1010(%ebx)
    2227:	8a 54 33 10          	mov    0x10(%ebx,%esi,1),%dl
    222b:	0f be c2             	movsbl %dl,%eax
    222e:	8d 78 9f             	lea    -0x61(%eax),%edi
    2231:	83 ff 19             	cmp    $0x19,%edi
    2234:	76 ea                	jbe    2220 <next_token+0x280>
    2236:	8d 78 bf             	lea    -0x41(%eax),%edi
    2239:	83 ff 19             	cmp    $0x19,%edi
    223c:	76 e2                	jbe    2220 <next_token+0x280>
    223e:	83 e8 30             	sub    $0x30,%eax
    2241:	83 f8 09             	cmp    $0x9,%eax
    2244:	76 da                	jbe    2220 <next_token+0x280>
    2246:	80 fa 5f             	cmp    $0x5f,%dl
    2249:	74 d5                	je     2220 <next_token+0x280>
    224b:	29 ce                	sub    %ecx,%esi
    224d:	8d 44 0b 10          	lea    0x10(%ebx,%ecx,1),%eax
    2251:	89 74 24 04          	mov    %esi,0x4(%esp)
    2255:	89 04 24             	mov    %eax,(%esp)
    2258:	e8 93 3d 01 00       	call   15ff0 <str_ndup>
    225d:	89 c6                	mov    %eax,%esi
    225f:	85 c0                	test   %eax,%eax
    2261:	0f 84 1c 03 00 00    	je     2583 <next_token+0x5e3>
    2267:	c7 44 24 04 09 cf 02 	movl   $0x2cf09,0x4(%esp)
    226e:	00 
    226f:	89 04 24             	mov    %eax,(%esp)
    2272:	e8 a9 22 01 00       	call   14520 <str_cmp>
    2277:	85 c0                	test   %eax,%eax
    2279:	0f 84 bf 02 00 00    	je     253e <next_token+0x59e>
    227f:	c7 44 24 04 0c cf 02 	movl   $0x2cf0c,0x4(%esp)
    2286:	00 
    2287:	89 34 24             	mov    %esi,(%esp)
    228a:	e8 91 22 01 00       	call   14520 <str_cmp>
    228f:	85 c0                	test   %eax,%eax
    2291:	0f 84 be 02 00 00    	je     2555 <next_token+0x5b5>
    2297:	c7 44 24 04 c4 cd 02 	movl   $0x2cdc4,0x4(%esp)
    229e:	00 
    229f:	89 34 24             	mov    %esi,(%esp)
    22a2:	e8 79 22 01 00       	call   14520 <str_cmp>
    22a7:	85 c0                	test   %eax,%eax
    22a9:	0f 84 bd 02 00 00    	je     256c <next_token+0x5cc>
    22af:	c7 44 24 04 11 cf 02 	movl   $0x2cf11,0x4(%esp)
    22b6:	00 
    22b7:	89 34 24             	mov    %esi,(%esp)
    22ba:	e8 61 22 01 00       	call   14520 <str_cmp>
    22bf:	85 c0                	test   %eax,%eax
    22c1:	0f 84 96 03 00 00    	je     265d <next_token+0x6bd>
    22c7:	c7 44 24 04 a7 cf 02 	movl   $0x2cfa7,0x4(%esp)
    22ce:	00 
    22cf:	89 34 24             	mov    %esi,(%esp)
    22d2:	e8 49 22 01 00       	call   14520 <str_cmp>
    22d7:	85 c0                	test   %eax,%eax
    22d9:	0f 84 95 03 00 00    	je     2674 <next_token+0x6d4>
    22df:	c7 44 24 04 14 cf 02 	movl   $0x2cf14,0x4(%esp)
    22e6:	00 
    22e7:	89 34 24             	mov    %esi,(%esp)
    22ea:	e8 31 22 01 00       	call   14520 <str_cmp>
    22ef:	85 c0                	test   %eax,%eax
    22f1:	0f 84 94 03 00 00    	je     268b <next_token+0x6eb>
    22f7:	c7 44 24 04 1c cf 02 	movl   $0x2cf1c,0x4(%esp)
    22fe:	00 
    22ff:	89 34 24             	mov    %esi,(%esp)
    2302:	e8 19 22 01 00       	call   14520 <str_cmp>
    2307:	85 c0                	test   %eax,%eax
    2309:	0f 84 64 04 00 00    	je     2773 <next_token+0x7d3>
    230f:	c7 44 24 04 23 cf 02 	movl   $0x2cf23,0x4(%esp)
    2316:	00 
    2317:	89 34 24             	mov    %esi,(%esp)
    231a:	e8 01 22 01 00       	call   14520 <str_cmp>
    231f:	85 c0                	test   %eax,%eax
    2321:	0f 84 2b 05 00 00    	je     2852 <next_token+0x8b2>
    2327:	c7 44 24 04 2a cf 02 	movl   $0x2cf2a,0x4(%esp)
    232e:	00 
    232f:	89 34 24             	mov    %esi,(%esp)
    2332:	e8 e9 21 01 00       	call   14520 <str_cmp>
    2337:	85 c0                	test   %eax,%eax
    2339:	0f 84 fc 04 00 00    	je     283b <next_token+0x89b>
    233f:	c7 44 24 04 34 d1 02 	movl   $0x2d134,0x4(%esp)
    2346:	00 
    2347:	89 34 24             	mov    %esi,(%esp)
    234a:	e8 d1 21 01 00       	call   14520 <str_cmp>
    234f:	85 c0                	test   %eax,%eax
    2351:	0f 84 cd 04 00 00    	je     2824 <next_token+0x884>
    2357:	c7 44 24 04 bf cd 02 	movl   $0x2cdbf,0x4(%esp)
    235e:	00 
    235f:	89 34 24             	mov    %esi,(%esp)
    2362:	e8 b9 21 01 00       	call   14520 <str_cmp>
    2367:	85 c0                	test   %eax,%eax
    2369:	0f 84 9e 04 00 00    	je     280d <next_token+0x86d>
    236f:	c7 44 24 04 31 cf 02 	movl   $0x2cf31,0x4(%esp)
    2376:	00 
    2377:	89 34 24             	mov    %esi,(%esp)
    237a:	e8 a1 21 01 00       	call   14520 <str_cmp>
    237f:	85 c0                	test   %eax,%eax
    2381:	0f 84 6f 04 00 00    	je     27f6 <next_token+0x856>
    2387:	c7 83 20 10 00 00 86 	movl   $0xffffff86,0x1020(%ebx)
    238e:	ff ff ff 
    2391:	89 b3 24 10 00 00    	mov    %esi,0x1024(%ebx)
    2397:	e9 2b 01 00 00       	jmp    24c7 <next_token+0x527>
    239c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    23a0:	b0 23                	mov    $0x23,%al
    23a2:	84 c0                	test   %al,%al
    23a4:	0f 84 0e fc ff ff    	je     1fb8 <next_token+0x18>
    23aa:	3c 0a                	cmp    $0xa,%al
    23ac:	0f 84 06 fc ff ff    	je     1fb8 <next_token+0x18>
    23b2:	8d 7e 01             	lea    0x1(%esi),%edi
    23b5:	8d 86 01 01 00 00    	lea    0x101(%esi),%eax
    23bb:	89 bb 10 10 00 00    	mov    %edi,0x1010(%ebx)
    23c1:	3d ff 0f 00 00       	cmp    $0xfff,%eax
    23c6:	77 10                	ja     23d8 <next_token+0x438>
    23c8:	8a 44 3b 10          	mov    0x10(%ebx,%edi,1),%al
    23cc:	89 fe                	mov    %edi,%esi
    23ce:	84 c0                	test   %al,%al
    23d0:	75 d8                	jne    23aa <next_token+0x40a>
    23d2:	e9 e1 fb ff ff       	jmp    1fb8 <next_token+0x18>
    23d7:	90                   	nop
    23d8:	ba ff 0f 00 00       	mov    $0xfff,%edx
    23dd:	8d 44 33 11          	lea    0x11(%ebx,%esi,1),%eax
    23e1:	29 fa                	sub    %edi,%edx
    23e3:	89 44 24 04          	mov    %eax,0x4(%esp)
    23e7:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    23ea:	89 54 24 08          	mov    %edx,0x8(%esp)
    23ee:	8b 55 d0             	mov    -0x30(%ebp),%edx
    23f1:	89 14 24             	mov    %edx,(%esp)
    23f4:	e8 d7 0f 01 00       	call   133d0 <memmove>
    23f9:	8b 83 10 10 00 00    	mov    0x1010(%ebx),%eax
    23ff:	8b 93 1c 10 00 00    	mov    0x101c(%ebx),%edx
    2405:	c7 83 10 10 00 00 00 	movl   $0x0,0x1010(%ebx)
    240c:	00 00 00 
    240f:	01 c2                	add    %eax,%edx
    2411:	8b 43 0c             	mov    0xc(%ebx),%eax
    2414:	89 93 1c 10 00 00    	mov    %edx,0x101c(%ebx)
    241a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    241d:	89 44 24 0c          	mov    %eax,0xc(%esp)
    2421:	89 7c 24 08          	mov    %edi,0x8(%esp)
    2425:	8d 44 13 10          	lea    0x10(%ebx,%edx,1),%eax
    2429:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
    2430:	00 
    2431:	89 04 24             	mov    %eax,(%esp)
    2434:	e8 57 73 01 00       	call   19790 <fread>
    2439:	89 c6                	mov    %eax,%esi
    243b:	8b 43 0c             	mov    0xc(%ebx),%eax
    243e:	89 04 24             	mov    %eax,(%esp)
    2441:	e8 1a 8d 01 00       	call   1b160 <ferror>
    2446:	85 c0                	test   %eax,%eax
    2448:	75 1e                	jne    2468 <next_token+0x4c8>
    244a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    244d:	01 d8                	add    %ebx,%eax
    244f:	c6 44 06 10 00       	movb   $0x0,0x10(%esi,%eax,1)
    2454:	8b b3 10 10 00 00    	mov    0x1010(%ebx),%esi
    245a:	8a 44 33 10          	mov    0x10(%ebx,%esi,1),%al
    245e:	e9 3f ff ff ff       	jmp    23a2 <next_token+0x402>
    2463:	90                   	nop
    2464:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2468:	8b 3b                	mov    (%ebx),%edi
    246a:	85 ff                	test   %edi,%edi
    246c:	75 dc                	jne    244a <next_token+0x4aa>
    246e:	83 bb 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%ebx)
    2475:	74 58                	je     24cf <next_token+0x52f>
    2477:	c7 83 20 10 00 00 80 	movl   $0xffffff80,0x1020(%ebx)
    247e:	ff ff ff 
    2481:	c7 03 f7 fe ff ff    	movl   $0xfffffef7,(%ebx)
    2487:	eb c1                	jmp    244a <next_token+0x4aa>
    2489:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2490:	8b 0b                	mov    (%ebx),%ecx
    2492:	85 c9                	test   %ecx,%ecx
    2494:	0f 85 63 fc ff ff    	jne    20fd <next_token+0x15d>
    249a:	83 bb 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%ebx)
    24a1:	74 3c                	je     24df <next_token+0x53f>
    24a3:	c7 83 20 10 00 00 80 	movl   $0xffffff80,0x1020(%ebx)
    24aa:	ff ff ff 
    24ad:	c7 03 f7 fe ff ff    	movl   $0xfffffef7,(%ebx)
    24b3:	b8 80 ff ff ff       	mov    $0xffffff80,%eax
    24b8:	e9 46 fc ff ff       	jmp    2103 <next_token+0x163>
    24bd:	c7 83 20 10 00 00 84 	movl   $0xffffff84,0x1020(%ebx)
    24c4:	ff ff ff 
    24c7:	83 c4 4c             	add    $0x4c,%esp
    24ca:	5b                   	pop    %ebx
    24cb:	5e                   	pop    %esi
    24cc:	5f                   	pop    %edi
    24cd:	5d                   	pop    %ebp
    24ce:	c3                   	ret    
    24cf:	8b 83 24 10 00 00    	mov    0x1024(%ebx),%eax
    24d5:	89 04 24             	mov    %eax,(%esp)
    24d8:	e8 03 dd 01 00       	call   201e0 <free>
    24dd:	eb 98                	jmp    2477 <next_token+0x4d7>
    24df:	8b 83 24 10 00 00    	mov    0x1024(%ebx),%eax
    24e5:	89 04 24             	mov    %eax,(%esp)
    24e8:	e8 f3 dc 01 00       	call   201e0 <free>
    24ed:	eb b4                	jmp    24a3 <next_token+0x503>
    24ef:	3c 3c                	cmp    $0x3c,%al
    24f1:	0f 84 f1 00 00 00    	je     25e8 <next_token+0x648>
    24f7:	3c 3e                	cmp    $0x3e,%al
    24f9:	0f 84 28 01 00 00    	je     2627 <next_token+0x687>
    24ff:	3c 3d                	cmp    $0x3d,%al
    2501:	0f 84 a8 00 00 00    	je     25af <next_token+0x60f>
    2507:	3c 2f                	cmp    $0x2f,%al
    2509:	0f 84 01 02 00 00    	je     2710 <next_token+0x770>
    250f:	3c 21                	cmp    $0x21,%al
    2511:	0f 84 c1 01 00 00    	je     26d8 <next_token+0x738>
    2517:	3c 26                	cmp    $0x26,%al
    2519:	0f 84 83 01 00 00    	je     26a2 <next_token+0x702>
    251f:	3c 7c                	cmp    $0x7c,%al
    2521:	0f 84 63 02 00 00    	je     278a <next_token+0x7ea>
    2527:	3c 2b                	cmp    $0x2b,%al
    2529:	0f 84 91 02 00 00    	je     27c0 <next_token+0x820>
    252f:	46                   	inc    %esi
    2530:	89 93 20 10 00 00    	mov    %edx,0x1020(%ebx)
    2536:	89 b3 10 10 00 00    	mov    %esi,0x1010(%ebx)
    253c:	eb 89                	jmp    24c7 <next_token+0x527>
    253e:	c7 83 20 10 00 00 8d 	movl   $0xffffff8d,0x1020(%ebx)
    2545:	ff ff ff 
    2548:	89 34 24             	mov    %esi,(%esp)
    254b:	e8 90 dc 01 00       	call   201e0 <free>
    2550:	e9 72 ff ff ff       	jmp    24c7 <next_token+0x527>
    2555:	c7 83 20 10 00 00 8e 	movl   $0xffffff8e,0x1020(%ebx)
    255c:	ff ff ff 
    255f:	89 34 24             	mov    %esi,(%esp)
    2562:	e8 79 dc 01 00       	call   201e0 <free>
    2567:	e9 5b ff ff ff       	jmp    24c7 <next_token+0x527>
    256c:	c7 83 20 10 00 00 8f 	movl   $0xffffff8f,0x1020(%ebx)
    2573:	ff ff ff 
    2576:	89 34 24             	mov    %esi,(%esp)
    2579:	e8 62 dc 01 00       	call   201e0 <free>
    257e:	e9 44 ff ff ff       	jmp    24c7 <next_token+0x527>
    2583:	8b 3b                	mov    (%ebx),%edi
    2585:	85 ff                	test   %edi,%edi
    2587:	0f 85 3a ff ff ff    	jne    24c7 <next_token+0x527>
    258d:	83 bb 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%ebx)
    2594:	0f 84 c6 01 00 00    	je     2760 <next_token+0x7c0>
    259a:	c7 83 20 10 00 00 80 	movl   $0xffffff80,0x1020(%ebx)
    25a1:	ff ff ff 
    25a4:	c7 03 fe ff ff ff    	movl   $0xfffffffe,(%ebx)
    25aa:	e9 18 ff ff ff       	jmp    24c7 <next_token+0x527>
    25af:	8d 46 01             	lea    0x1(%esi),%eax
    25b2:	c7 83 20 10 00 00 3d 	movl   $0x3d,0x1020(%ebx)
    25b9:	00 00 00 
    25bc:	89 83 10 10 00 00    	mov    %eax,0x1010(%ebx)
    25c2:	80 7c 33 11 3d       	cmpb   $0x3d,0x11(%ebx,%esi,1)
    25c7:	0f 85 fa fe ff ff    	jne    24c7 <next_token+0x527>
    25cd:	83 c6 02             	add    $0x2,%esi
    25d0:	c7 83 20 10 00 00 83 	movl   $0xffffff83,0x1020(%ebx)
    25d7:	ff ff ff 
    25da:	89 b3 10 10 00 00    	mov    %esi,0x1010(%ebx)
    25e0:	e9 e2 fe ff ff       	jmp    24c7 <next_token+0x527>
    25e5:	8d 76 00             	lea    0x0(%esi),%esi
    25e8:	8d 46 01             	lea    0x1(%esi),%eax
    25eb:	c7 83 20 10 00 00 3c 	movl   $0x3c,0x1020(%ebx)
    25f2:	00 00 00 
    25f5:	89 83 10 10 00 00    	mov    %eax,0x1010(%ebx)
    25fb:	8a 44 33 11          	mov    0x11(%ebx,%esi,1),%al
    25ff:	3c 2d                	cmp    $0x2d,%al
    2601:	0f 84 41 01 00 00    	je     2748 <next_token+0x7a8>
    2607:	3c 3d                	cmp    $0x3d,%al
    2609:	0f 85 b8 fe ff ff    	jne    24c7 <next_token+0x527>
    260f:	83 c6 02             	add    $0x2,%esi
    2612:	c7 83 20 10 00 00 8a 	movl   $0xffffff8a,0x1020(%ebx)
    2619:	ff ff ff 
    261c:	89 b3 10 10 00 00    	mov    %esi,0x1010(%ebx)
    2622:	e9 a0 fe ff ff       	jmp    24c7 <next_token+0x527>
    2627:	8d 46 01             	lea    0x1(%esi),%eax
    262a:	c7 83 20 10 00 00 3e 	movl   $0x3e,0x1020(%ebx)
    2631:	00 00 00 
    2634:	89 83 10 10 00 00    	mov    %eax,0x1010(%ebx)
    263a:	80 7c 33 11 3d       	cmpb   $0x3d,0x11(%ebx,%esi,1)
    263f:	0f 85 82 fe ff ff    	jne    24c7 <next_token+0x527>
    2645:	83 c6 02             	add    $0x2,%esi
    2648:	c7 83 20 10 00 00 85 	movl   $0xffffff85,0x1020(%ebx)
    264f:	ff ff ff 
    2652:	89 b3 10 10 00 00    	mov    %esi,0x1010(%ebx)
    2658:	e9 6a fe ff ff       	jmp    24c7 <next_token+0x527>
    265d:	c7 83 20 10 00 00 90 	movl   $0xffffff90,0x1020(%ebx)
    2664:	ff ff ff 
    2667:	89 34 24             	mov    %esi,(%esp)
    266a:	e8 71 db 01 00       	call   201e0 <free>
    266f:	e9 53 fe ff ff       	jmp    24c7 <next_token+0x527>
    2674:	c7 83 20 10 00 00 91 	movl   $0xffffff91,0x1020(%ebx)
    267b:	ff ff ff 
    267e:	89 34 24             	mov    %esi,(%esp)
    2681:	e8 5a db 01 00       	call   201e0 <free>
    2686:	e9 3c fe ff ff       	jmp    24c7 <next_token+0x527>
    268b:	c7 83 20 10 00 00 92 	movl   $0xffffff92,0x1020(%ebx)
    2692:	ff ff ff 
    2695:	89 34 24             	mov    %esi,(%esp)
    2698:	e8 43 db 01 00       	call   201e0 <free>
    269d:	e9 25 fe ff ff       	jmp    24c7 <next_token+0x527>
    26a2:	8d 46 01             	lea    0x1(%esi),%eax
    26a5:	c7 83 20 10 00 00 26 	movl   $0x26,0x1020(%ebx)
    26ac:	00 00 00 
    26af:	89 83 10 10 00 00    	mov    %eax,0x1010(%ebx)
    26b5:	80 7c 33 11 26       	cmpb   $0x26,0x11(%ebx,%esi,1)
    26ba:	0f 85 07 fe ff ff    	jne    24c7 <next_token+0x527>
    26c0:	83 c6 02             	add    $0x2,%esi
    26c3:	c7 83 20 10 00 00 81 	movl   $0xffffff81,0x1020(%ebx)
    26ca:	ff ff ff 
    26cd:	89 b3 10 10 00 00    	mov    %esi,0x1010(%ebx)
    26d3:	e9 ef fd ff ff       	jmp    24c7 <next_token+0x527>
    26d8:	8d 46 01             	lea    0x1(%esi),%eax
    26db:	c7 83 20 10 00 00 21 	movl   $0x21,0x1020(%ebx)
    26e2:	00 00 00 
    26e5:	89 83 10 10 00 00    	mov    %eax,0x1010(%ebx)
    26eb:	80 7c 33 11 3d       	cmpb   $0x3d,0x11(%ebx,%esi,1)
    26f0:	0f 85 d1 fd ff ff    	jne    24c7 <next_token+0x527>
    26f6:	83 c6 02             	add    $0x2,%esi
    26f9:	c7 83 20 10 00 00 8b 	movl   $0xffffff8b,0x1020(%ebx)
    2700:	ff ff ff 
    2703:	89 b3 10 10 00 00    	mov    %esi,0x1010(%ebx)
    2709:	e9 b9 fd ff ff       	jmp    24c7 <next_token+0x527>
    270e:	66 90                	xchg   %ax,%ax
    2710:	8d 46 01             	lea    0x1(%esi),%eax
    2713:	c7 83 20 10 00 00 2f 	movl   $0x2f,0x1020(%ebx)
    271a:	00 00 00 
    271d:	89 83 10 10 00 00    	mov    %eax,0x1010(%ebx)
    2723:	80 7c 33 11 2f       	cmpb   $0x2f,0x11(%ebx,%esi,1)
    2728:	0f 85 99 fd ff ff    	jne    24c7 <next_token+0x527>
    272e:	83 c6 02             	add    $0x2,%esi
    2731:	c7 83 20 10 00 00 88 	movl   $0xffffff88,0x1020(%ebx)
    2738:	ff ff ff 
    273b:	89 b3 10 10 00 00    	mov    %esi,0x1010(%ebx)
    2741:	e9 81 fd ff ff       	jmp    24c7 <next_token+0x527>
    2746:	66 90                	xchg   %ax,%ax
    2748:	83 c6 02             	add    $0x2,%esi
    274b:	c7 83 20 10 00 00 89 	movl   $0xffffff89,0x1020(%ebx)
    2752:	ff ff ff 
    2755:	89 b3 10 10 00 00    	mov    %esi,0x1010(%ebx)
    275b:	e9 67 fd ff ff       	jmp    24c7 <next_token+0x527>
    2760:	8b 83 24 10 00 00    	mov    0x1024(%ebx),%eax
    2766:	89 04 24             	mov    %eax,(%esp)
    2769:	e8 72 da 01 00       	call   201e0 <free>
    276e:	e9 27 fe ff ff       	jmp    259a <next_token+0x5fa>
    2773:	c7 83 20 10 00 00 93 	movl   $0xffffff93,0x1020(%ebx)
    277a:	ff ff ff 
    277d:	89 34 24             	mov    %esi,(%esp)
    2780:	e8 5b da 01 00       	call   201e0 <free>
    2785:	e9 3d fd ff ff       	jmp    24c7 <next_token+0x527>
    278a:	8d 46 01             	lea    0x1(%esi),%eax
    278d:	c7 83 20 10 00 00 7c 	movl   $0x7c,0x1020(%ebx)
    2794:	00 00 00 
    2797:	89 83 10 10 00 00    	mov    %eax,0x1010(%ebx)
    279d:	80 7c 33 11 7c       	cmpb   $0x7c,0x11(%ebx,%esi,1)
    27a2:	0f 85 1f fd ff ff    	jne    24c7 <next_token+0x527>
    27a8:	83 c6 02             	add    $0x2,%esi
    27ab:	c7 83 20 10 00 00 8c 	movl   $0xffffff8c,0x1020(%ebx)
    27b2:	ff ff ff 
    27b5:	89 b3 10 10 00 00    	mov    %esi,0x1010(%ebx)
    27bb:	e9 07 fd ff ff       	jmp    24c7 <next_token+0x527>
    27c0:	8d 46 01             	lea    0x1(%esi),%eax
    27c3:	c7 83 20 10 00 00 2b 	movl   $0x2b,0x1020(%ebx)
    27ca:	00 00 00 
    27cd:	89 83 10 10 00 00    	mov    %eax,0x1010(%ebx)
    27d3:	80 7c 33 11 2b       	cmpb   $0x2b,0x11(%ebx,%esi,1)
    27d8:	0f 85 e9 fc ff ff    	jne    24c7 <next_token+0x527>
    27de:	83 c6 02             	add    $0x2,%esi
    27e1:	c7 83 20 10 00 00 82 	movl   $0xffffff82,0x1020(%ebx)
    27e8:	ff ff ff 
    27eb:	89 b3 10 10 00 00    	mov    %esi,0x1010(%ebx)
    27f1:	e9 d1 fc ff ff       	jmp    24c7 <next_token+0x527>
    27f6:	c7 83 20 10 00 00 98 	movl   $0xffffff98,0x1020(%ebx)
    27fd:	ff ff ff 
    2800:	89 34 24             	mov    %esi,(%esp)
    2803:	e8 d8 d9 01 00       	call   201e0 <free>
    2808:	e9 ba fc ff ff       	jmp    24c7 <next_token+0x527>
    280d:	c7 83 20 10 00 00 97 	movl   $0xffffff97,0x1020(%ebx)
    2814:	ff ff ff 
    2817:	89 34 24             	mov    %esi,(%esp)
    281a:	e8 c1 d9 01 00       	call   201e0 <free>
    281f:	e9 a3 fc ff ff       	jmp    24c7 <next_token+0x527>
    2824:	c7 83 20 10 00 00 96 	movl   $0xffffff96,0x1020(%ebx)
    282b:	ff ff ff 
    282e:	89 34 24             	mov    %esi,(%esp)
    2831:	e8 aa d9 01 00       	call   201e0 <free>
    2836:	e9 8c fc ff ff       	jmp    24c7 <next_token+0x527>
    283b:	c7 83 20 10 00 00 95 	movl   $0xffffff95,0x1020(%ebx)
    2842:	ff ff ff 
    2845:	89 34 24             	mov    %esi,(%esp)
    2848:	e8 93 d9 01 00       	call   201e0 <free>
    284d:	e9 75 fc ff ff       	jmp    24c7 <next_token+0x527>
    2852:	c7 83 20 10 00 00 94 	movl   $0xffffff94,0x1020(%ebx)
    2859:	ff ff ff 
    285c:	89 34 24             	mov    %esi,(%esp)
    285f:	e8 7c d9 01 00       	call   201e0 <free>
    2864:	e9 5e fc ff ff       	jmp    24c7 <next_token+0x527>
    2869:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00002870 <parse_expression_precedence>:
    2870:	55                   	push   %ebp
    2871:	89 e5                	mov    %esp,%ebp
    2873:	57                   	push   %edi
    2874:	56                   	push   %esi
    2875:	53                   	push   %ebx
    2876:	83 ec 5c             	sub    $0x5c,%esp
    2879:	89 c6                	mov    %eax,%esi
    287b:	8b 80 20 10 00 00    	mov    0x1020(%eax),%eax
    2881:	89 55 c4             	mov    %edx,-0x3c(%ebp)
    2884:	83 f8 97             	cmp    $0xffffff97,%eax
    2887:	0f 94 c3             	sete   %bl
    288a:	83 f8 8f             	cmp    $0xffffff8f,%eax
    288d:	0f 84 5d 01 00 00    	je     29f0 <parse_expression_precedence+0x180>
    2893:	84 db                	test   %bl,%bl
    2895:	0f 85 55 01 00 00    	jne    29f0 <parse_expression_precedence+0x180>
    289b:	83 f8 91             	cmp    $0xffffff91,%eax
    289e:	0f 84 23 07 00 00    	je     2fc7 <parse_expression_precedence+0x757>
    28a4:	83 f8 87             	cmp    $0xffffff87,%eax
    28a7:	0f 84 83 01 00 00    	je     2a30 <parse_expression_precedence+0x1c0>
    28ad:	83 f8 86             	cmp    $0xffffff86,%eax
    28b0:	0f 84 12 06 00 00    	je     2ec8 <parse_expression_precedence+0x658>
    28b6:	83 f8 2e             	cmp    $0x2e,%eax
    28b9:	0f 84 b1 07 00 00    	je     3070 <parse_expression_precedence+0x800>
    28bf:	83 f8 28             	cmp    $0x28,%eax
    28c2:	0f 85 25 07 00 00    	jne    2fed <parse_expression_precedence+0x77d>
    28c8:	89 f0                	mov    %esi,%eax
    28ca:	e8 d1 f6 ff ff       	call   1fa0 <next_token>
    28cf:	31 d2                	xor    %edx,%edx
    28d1:	89 f0                	mov    %esi,%eax
    28d3:	e8 98 ff ff ff       	call   2870 <parse_expression_precedence>
    28d8:	83 be 20 10 00 00 29 	cmpl   $0x29,0x1020(%esi)
    28df:	89 c3                	mov    %eax,%ebx
    28e1:	0f 84 64 06 00 00    	je     2f4b <parse_expression_precedence+0x6db>
    28e7:	8b 16                	mov    (%esi),%edx
    28e9:	85 d2                	test   %edx,%edx
    28eb:	75 13                	jne    2900 <parse_expression_precedence+0x90>
    28ed:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    28f2:	89 f0                	mov    %esi,%eax
    28f4:	e8 a7 f5 ff ff       	call   1ea0 <syntax_error.part.2>
    28f9:	8b 16                	mov    (%esi),%edx
    28fb:	90                   	nop
    28fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2900:	89 5d d4             	mov    %ebx,-0x2c(%ebp)
    2903:	85 d2                	test   %edx,%edx
    2905:	0f 85 90 00 00 00    	jne    299b <parse_expression_precedence+0x12b>
    290b:	90                   	nop
    290c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2910:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    2916:	83 f8 2e             	cmp    $0x2e,%eax
    2919:	0f 84 b1 02 00 00    	je     2bd0 <parse_expression_precedence+0x360>
    291f:	83 f8 5b             	cmp    $0x5b,%eax
    2922:	75 77                	jne    299b <parse_expression_precedence+0x12b>
    2924:	89 f0                	mov    %esi,%eax
    2926:	e8 75 f6 ff ff       	call   1fa0 <next_token>
    292b:	31 d2                	xor    %edx,%edx
    292d:	89 f0                	mov    %esi,%eax
    292f:	e8 3c ff ff ff       	call   2870 <parse_expression_precedence>
    2934:	89 c7                	mov    %eax,%edi
    2936:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    293c:	83 f8 3a             	cmp    $0x3a,%eax
    293f:	0f 94 c3             	sete   %bl
    2942:	0f 84 48 01 00 00    	je     2a90 <parse_expression_precedence+0x220>
    2948:	83 f8 2c             	cmp    $0x2c,%eax
    294b:	0f 84 3f 01 00 00    	je     2a90 <parse_expression_precedence+0x220>
    2951:	83 f8 5d             	cmp    $0x5d,%eax
    2954:	0f 85 f6 04 00 00    	jne    2e50 <parse_expression_precedence+0x5e0>
    295a:	89 f0                	mov    %esi,%eax
    295c:	e8 3f f6 ff ff       	call   1fa0 <next_token>
    2961:	8b 1e                	mov    (%esi),%ebx
    2963:	85 db                	test   %ebx,%ebx
    2965:	0f 85 fd 04 00 00    	jne    2e68 <parse_expression_precedence+0x5f8>
    296b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    296e:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    2972:	89 44 24 08          	mov    %eax,0x8(%esp)
    2976:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    2979:	c7 44 24 04 0e 00 00 	movl   $0xe,0x4(%esp)
    2980:	00 
    2981:	89 04 24             	mov    %eax,(%esp)
    2984:	e8 d7 ac 00 00       	call   d660 <bithenge_binary_expression>
    2989:	85 c0                	test   %eax,%eax
    298b:	0f 85 58 01 00 00    	jne    2ae9 <parse_expression_precedence+0x279>
    2991:	8b 16                	mov    (%esi),%edx
    2993:	85 d2                	test   %edx,%edx
    2995:	0f 84 75 ff ff ff    	je     2910 <parse_expression_precedence+0xa0>
    299b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    299e:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    29a1:	8d 5d d0             	lea    -0x30(%ebp),%ebx
    29a4:	85 d2                	test   %edx,%edx
    29a6:	0f 85 e9 05 00 00    	jne    2f95 <parse_expression_precedence+0x725>
    29ac:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    29b2:	83 f8 8b             	cmp    $0xffffff8b,%eax
    29b5:	0f 84 3d 04 00 00    	je     2df8 <parse_expression_precedence+0x588>
    29bb:	0f 8f d7 02 00 00    	jg     2c98 <parse_expression_precedence+0x428>
    29c1:	83 f8 83             	cmp    $0xffffff83,%eax
    29c4:	0f 84 fe 03 00 00    	je     2dc8 <parse_expression_precedence+0x558>
    29ca:	0f 8f 70 03 00 00    	jg     2d40 <parse_expression_precedence+0x4d0>
    29d0:	83 f8 81             	cmp    $0xffffff81,%eax
    29d3:	0f 84 67 04 00 00    	je     2e40 <parse_expression_precedence+0x5d0>
    29d9:	83 f8 82             	cmp    $0xffffff82,%eax
    29dc:	0f 84 4e 04 00 00    	je     2e30 <parse_expression_precedence+0x5c0>
    29e2:	8b 45 d0             	mov    -0x30(%ebp),%eax
    29e5:	83 c4 5c             	add    $0x5c,%esp
    29e8:	5b                   	pop    %ebx
    29e9:	5e                   	pop    %esi
    29ea:	5f                   	pop    %edi
    29eb:	5d                   	pop    %ebp
    29ec:	c3                   	ret    
    29ed:	8d 76 00             	lea    0x0(%esi),%esi
    29f0:	89 f0                	mov    %esi,%eax
    29f2:	81 e3 ff 00 00 00    	and    $0xff,%ebx
    29f8:	e8 a3 f5 ff ff       	call   1fa0 <next_token>
    29fd:	8d 45 e0             	lea    -0x20(%ebp),%eax
    2a00:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    2a04:	89 04 24             	mov    %eax,(%esp)
    2a07:	e8 24 7f 00 00       	call   a930 <bithenge_new_boolean_node>
    2a0c:	85 c0                	test   %eax,%eax
    2a0e:	75 50                	jne    2a60 <parse_expression_precedence+0x1f0>
    2a10:	8b 45 e0             	mov    -0x20(%ebp),%eax
    2a13:	89 44 24 04          	mov    %eax,0x4(%esp)
    2a17:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    2a1a:	89 04 24             	mov    %eax,(%esp)
    2a1d:	e8 8e ad 00 00       	call   d7b0 <bithenge_const_expression>
    2a22:	85 c0                	test   %eax,%eax
    2a24:	75 3a                	jne    2a60 <parse_expression_precedence+0x1f0>
    2a26:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    2a29:	8b 16                	mov    (%esi),%edx
    2a2b:	e9 d0 fe ff ff       	jmp    2900 <parse_expression_precedence+0x90>
    2a30:	8b 8e 24 10 00 00    	mov    0x1024(%esi),%ecx
    2a36:	89 f0                	mov    %esi,%eax
    2a38:	8b 9e 28 10 00 00    	mov    0x1028(%esi),%ebx
    2a3e:	89 4d c0             	mov    %ecx,-0x40(%ebp)
    2a41:	e8 5a f5 ff ff       	call   1fa0 <next_token>
    2a46:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    2a49:	8d 45 e0             	lea    -0x20(%ebp),%eax
    2a4c:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    2a50:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    2a54:	89 04 24             	mov    %eax,(%esp)
    2a57:	e8 24 7f 00 00       	call   a980 <bithenge_new_integer_node>
    2a5c:	85 c0                	test   %eax,%eax
    2a5e:	74 b0                	je     2a10 <parse_expression_precedence+0x1a0>
    2a60:	8b 16                	mov    (%esi),%edx
    2a62:	31 db                	xor    %ebx,%ebx
    2a64:	85 d2                	test   %edx,%edx
    2a66:	0f 85 94 fe ff ff    	jne    2900 <parse_expression_precedence+0x90>
    2a6c:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    2a73:	0f 84 51 07 00 00    	je     31ca <parse_expression_precedence+0x95a>
    2a79:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    2a80:	ff ff ff 
    2a83:	89 06                	mov    %eax,(%esi)
    2a85:	89 c2                	mov    %eax,%edx
    2a87:	31 db                	xor    %ebx,%ebx
    2a89:	e9 72 fe ff ff       	jmp    2900 <parse_expression_precedence+0x90>
    2a8e:	66 90                	xchg   %ax,%ax
    2a90:	89 f0                	mov    %esi,%eax
    2a92:	e8 09 f5 ff ff       	call   1fa0 <next_token>
    2a97:	83 be 20 10 00 00 5d 	cmpl   $0x5d,0x1020(%esi)
    2a9e:	75 78                	jne    2b18 <parse_expression_precedence+0x2a8>
    2aa0:	84 db                	test   %bl,%bl
    2aa2:	74 74                	je     2b18 <parse_expression_precedence+0x2a8>
    2aa4:	31 c9                	xor    %ecx,%ecx
    2aa6:	89 f0                	mov    %esi,%eax
    2aa8:	89 4d c0             	mov    %ecx,-0x40(%ebp)
    2aab:	e8 f0 f4 ff ff       	call   1fa0 <next_token>
    2ab0:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    2ab3:	8b 06                	mov    (%esi),%eax
    2ab5:	85 c0                	test   %eax,%eax
    2ab7:	0f 85 7d 00 00 00    	jne    2b3a <parse_expression_precedence+0x2ca>
    2abd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    2ac0:	81 e3 ff 00 00 00    	and    $0xff,%ebx
    2ac6:	89 44 24 04          	mov    %eax,0x4(%esp)
    2aca:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    2acd:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    2ad1:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    2ad5:	89 7c 24 08          	mov    %edi,0x8(%esp)
    2ad9:	89 04 24             	mov    %eax,(%esp)
    2adc:	e8 8f ad 00 00       	call   d870 <bithenge_subblob_expression>
    2ae1:	85 c0                	test   %eax,%eax
    2ae3:	0f 84 a8 fe ff ff    	je     2991 <parse_expression_precedence+0x121>
    2ae9:	8b 16                	mov    (%esi),%edx
    2aeb:	31 c9                	xor    %ecx,%ecx
    2aed:	85 d2                	test   %edx,%edx
    2aef:	0f 85 a9 fe ff ff    	jne    299e <parse_expression_precedence+0x12e>
    2af5:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    2afc:	0f 84 2f 06 00 00    	je     3131 <parse_expression_precedence+0x8c1>
    2b02:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    2b09:	ff ff ff 
    2b0c:	89 06                	mov    %eax,(%esi)
    2b0e:	89 c2                	mov    %eax,%edx
    2b10:	31 c9                	xor    %ecx,%ecx
    2b12:	e9 87 fe ff ff       	jmp    299e <parse_expression_precedence+0x12e>
    2b17:	90                   	nop
    2b18:	31 d2                	xor    %edx,%edx
    2b1a:	89 f0                	mov    %esi,%eax
    2b1c:	e8 4f fd ff ff       	call   2870 <parse_expression_precedence>
    2b21:	83 be 20 10 00 00 5d 	cmpl   $0x5d,0x1020(%esi)
    2b28:	89 c1                	mov    %eax,%ecx
    2b2a:	0f 84 76 ff ff ff    	je     2aa6 <parse_expression_precedence+0x236>
    2b30:	8b 06                	mov    (%esi),%eax
    2b32:	85 c0                	test   %eax,%eax
    2b34:	0f 84 46 01 00 00    	je     2c80 <parse_expression_precedence+0x410>
    2b3a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    2b3d:	85 c0                	test   %eax,%eax
    2b3f:	74 29                	je     2b6a <parse_expression_precedence+0x2fa>
    2b41:	8b 18                	mov    (%eax),%ebx
    2b43:	85 db                	test   %ebx,%ebx
    2b45:	0f 84 4d 07 00 00    	je     3298 <parse_expression_precedence+0xa28>
    2b4b:	8b 50 04             	mov    0x4(%eax),%edx
    2b4e:	85 d2                	test   %edx,%edx
    2b50:	0f 84 47 07 00 00    	je     329d <parse_expression_precedence+0xa2d>
    2b56:	4a                   	dec    %edx
    2b57:	89 50 04             	mov    %edx,0x4(%eax)
    2b5a:	85 d2                	test   %edx,%edx
    2b5c:	75 0c                	jne    2b6a <parse_expression_precedence+0x2fa>
    2b5e:	89 4d c0             	mov    %ecx,-0x40(%ebp)
    2b61:	89 04 24             	mov    %eax,(%esp)
    2b64:	ff 53 04             	call   *0x4(%ebx)
    2b67:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    2b6a:	85 ff                	test   %edi,%edi
    2b6c:	74 29                	je     2b97 <parse_expression_precedence+0x327>
    2b6e:	8b 17                	mov    (%edi),%edx
    2b70:	85 d2                	test   %edx,%edx
    2b72:	0f 84 20 07 00 00    	je     3298 <parse_expression_precedence+0xa28>
    2b78:	8b 47 04             	mov    0x4(%edi),%eax
    2b7b:	85 c0                	test   %eax,%eax
    2b7d:	0f 84 1a 07 00 00    	je     329d <parse_expression_precedence+0xa2d>
    2b83:	48                   	dec    %eax
    2b84:	89 47 04             	mov    %eax,0x4(%edi)
    2b87:	85 c0                	test   %eax,%eax
    2b89:	75 0c                	jne    2b97 <parse_expression_precedence+0x327>
    2b8b:	89 4d c0             	mov    %ecx,-0x40(%ebp)
    2b8e:	89 3c 24             	mov    %edi,(%esp)
    2b91:	ff 52 04             	call   *0x4(%edx)
    2b94:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    2b97:	85 c9                	test   %ecx,%ecx
    2b99:	0f 84 ab 05 00 00    	je     314a <parse_expression_precedence+0x8da>
    2b9f:	8b 11                	mov    (%ecx),%edx
    2ba1:	85 d2                	test   %edx,%edx
    2ba3:	0f 84 ef 06 00 00    	je     3298 <parse_expression_precedence+0xa28>
    2ba9:	8b 41 04             	mov    0x4(%ecx),%eax
    2bac:	85 c0                	test   %eax,%eax
    2bae:	0f 84 e9 06 00 00    	je     329d <parse_expression_precedence+0xa2d>
    2bb4:	48                   	dec    %eax
    2bb5:	89 41 04             	mov    %eax,0x4(%ecx)
    2bb8:	85 c0                	test   %eax,%eax
    2bba:	0f 85 e8 01 00 00    	jne    2da8 <parse_expression_precedence+0x538>
    2bc0:	89 0c 24             	mov    %ecx,(%esp)
    2bc3:	ff 52 04             	call   *0x4(%edx)
    2bc6:	8b 16                	mov    (%esi),%edx
    2bc8:	31 c9                	xor    %ecx,%ecx
    2bca:	e9 cf fd ff ff       	jmp    299e <parse_expression_precedence+0x12e>
    2bcf:	90                   	nop
    2bd0:	89 f0                	mov    %esi,%eax
    2bd2:	e8 c9 f3 ff ff       	call   1fa0 <next_token>
    2bd7:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    2bde:	0f 85 84 01 00 00    	jne    2d68 <parse_expression_precedence+0x4f8>
    2be4:	8b 9e 24 10 00 00    	mov    0x1024(%esi),%ebx
    2bea:	89 f0                	mov    %esi,%eax
    2bec:	c7 86 24 10 00 00 00 	movl   $0x0,0x1024(%esi)
    2bf3:	00 00 00 
    2bf6:	e8 a5 f3 ff ff       	call   1fa0 <next_token>
    2bfb:	8b 06                	mov    (%esi),%eax
    2bfd:	85 c0                	test   %eax,%eax
    2bff:	0f 85 6f 01 00 00    	jne    2d74 <parse_expression_precedence+0x504>
    2c05:	8d 45 d8             	lea    -0x28(%ebp),%eax
    2c08:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
    2c0f:	00 
    2c10:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    2c14:	89 04 24             	mov    %eax,(%esp)
    2c17:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
    2c1e:	e8 cd 7d 00 00       	call   a9f0 <bithenge_new_string_node>
    2c23:	85 c0                	test   %eax,%eax
    2c25:	0f 85 12 04 00 00    	jne    303d <parse_expression_precedence+0x7cd>
    2c2b:	8b 45 d8             	mov    -0x28(%ebp),%eax
    2c2e:	89 44 24 04          	mov    %eax,0x4(%esp)
    2c32:	8d 45 dc             	lea    -0x24(%ebp),%eax
    2c35:	89 04 24             	mov    %eax,(%esp)
    2c38:	e8 73 ab 00 00       	call   d7b0 <bithenge_const_expression>
    2c3d:	85 c0                	test   %eax,%eax
    2c3f:	0f 85 f8 03 00 00    	jne    303d <parse_expression_precedence+0x7cd>
    2c45:	8b 45 dc             	mov    -0x24(%ebp),%eax
    2c48:	c7 44 24 04 0e 00 00 	movl   $0xe,0x4(%esp)
    2c4f:	00 
    2c50:	89 44 24 0c          	mov    %eax,0xc(%esp)
    2c54:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    2c57:	89 44 24 08          	mov    %eax,0x8(%esp)
    2c5b:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    2c5e:	89 04 24             	mov    %eax,(%esp)
    2c61:	e8 fa a9 00 00       	call   d660 <bithenge_binary_expression>
    2c66:	85 c0                	test   %eax,%eax
    2c68:	0f 84 23 fd ff ff    	je     2991 <parse_expression_precedence+0x121>
    2c6e:	8b 16                	mov    (%esi),%edx
    2c70:	85 d2                	test   %edx,%edx
    2c72:	0f 84 7d fe ff ff    	je     2af5 <parse_expression_precedence+0x285>
    2c78:	31 c9                	xor    %ecx,%ecx
    2c7a:	e9 1f fd ff ff       	jmp    299e <parse_expression_precedence+0x12e>
    2c7f:	90                   	nop
    2c80:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    2c85:	89 f0                	mov    %esi,%eax
    2c87:	89 4d c0             	mov    %ecx,-0x40(%ebp)
    2c8a:	e8 11 f2 ff ff       	call   1ea0 <syntax_error.part.2>
    2c8f:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    2c92:	e9 1c fe ff ff       	jmp    2ab3 <parse_expression_precedence+0x243>
    2c97:	90                   	nop
    2c98:	83 f8 2b             	cmp    $0x2b,%eax
    2c9b:	0f 84 47 01 00 00    	je     2de8 <parse_expression_precedence+0x578>
    2ca1:	7f 75                	jg     2d18 <parse_expression_precedence+0x4a8>
    2ca3:	83 f8 25             	cmp    $0x25,%eax
    2ca6:	0f 84 34 01 00 00    	je     2de0 <parse_expression_precedence+0x570>
    2cac:	83 f8 2a             	cmp    $0x2a,%eax
    2caf:	0f 84 23 01 00 00    	je     2dd8 <parse_expression_precedence+0x568>
    2cb5:	83 f8 8c             	cmp    $0xffffff8c,%eax
    2cb8:	0f 85 24 fd ff ff    	jne    29e2 <parse_expression_precedence+0x172>
    2cbe:	b9 0d 00 00 00       	mov    $0xd,%ecx
    2cc3:	bf 01 00 00 00       	mov    $0x1,%edi
    2cc8:	39 7d c4             	cmp    %edi,-0x3c(%ebp)
    2ccb:	0f 83 11 fd ff ff    	jae    29e2 <parse_expression_precedence+0x172>
    2cd1:	89 f0                	mov    %esi,%eax
    2cd3:	89 4d c0             	mov    %ecx,-0x40(%ebp)
    2cd6:	e8 c5 f2 ff ff       	call   1fa0 <next_token>
    2cdb:	89 fa                	mov    %edi,%edx
    2cdd:	89 f0                	mov    %esi,%eax
    2cdf:	e8 8c fb ff ff       	call   2870 <parse_expression_precedence>
    2ce4:	8b 16                	mov    (%esi),%edx
    2ce6:	85 d2                	test   %edx,%edx
    2ce8:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    2ceb:	0f 85 73 02 00 00    	jne    2f64 <parse_expression_precedence+0x6f4>
    2cf1:	89 44 24 0c          	mov    %eax,0xc(%esp)
    2cf5:	8b 45 d0             	mov    -0x30(%ebp),%eax
    2cf8:	89 44 24 08          	mov    %eax,0x8(%esp)
    2cfc:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    2d00:	89 1c 24             	mov    %ebx,(%esp)
    2d03:	e8 58 a9 00 00       	call   d660 <bithenge_binary_expression>
    2d08:	85 c0                	test   %eax,%eax
    2d0a:	0f 85 fc 02 00 00    	jne    300c <parse_expression_precedence+0x79c>
    2d10:	8b 16                	mov    (%esi),%edx
    2d12:	e9 8d fc ff ff       	jmp    29a4 <parse_expression_precedence+0x134>
    2d17:	90                   	nop
    2d18:	83 f8 3c             	cmp    $0x3c,%eax
    2d1b:	0f 84 ff 00 00 00    	je     2e20 <parse_expression_precedence+0x5b0>
    2d21:	83 f8 3e             	cmp    $0x3e,%eax
    2d24:	0f 84 e6 00 00 00    	je     2e10 <parse_expression_precedence+0x5a0>
    2d2a:	83 f8 2d             	cmp    $0x2d,%eax
    2d2d:	0f 85 af fc ff ff    	jne    29e2 <parse_expression_precedence+0x172>
    2d33:	b9 02 00 00 00       	mov    $0x2,%ecx
    2d38:	bf 04 00 00 00       	mov    $0x4,%edi
    2d3d:	eb 89                	jmp    2cc8 <parse_expression_precedence+0x458>
    2d3f:	90                   	nop
    2d40:	83 f8 88             	cmp    $0xffffff88,%eax
    2d43:	74 73                	je     2db8 <parse_expression_precedence+0x548>
    2d45:	83 f8 8a             	cmp    $0xffffff8a,%eax
    2d48:	0f 84 b2 00 00 00    	je     2e00 <parse_expression_precedence+0x590>
    2d4e:	83 f8 85             	cmp    $0xffffff85,%eax
    2d51:	0f 85 8b fc ff ff    	jne    29e2 <parse_expression_precedence+0x172>
    2d57:	b9 09 00 00 00       	mov    $0x9,%ecx
    2d5c:	bf 03 00 00 00       	mov    $0x3,%edi
    2d61:	e9 62 ff ff ff       	jmp    2cc8 <parse_expression_precedence+0x458>
    2d66:	66 90                	xchg   %ax,%ax
    2d68:	8b 06                	mov    (%esi),%eax
    2d6a:	85 c0                	test   %eax,%eax
    2d6c:	0f 84 c6 01 00 00    	je     2f38 <parse_expression_precedence+0x6c8>
    2d72:	31 db                	xor    %ebx,%ebx
    2d74:	89 1c 24             	mov    %ebx,(%esp)
    2d77:	e8 64 d4 01 00       	call   201e0 <free>
    2d7c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    2d7f:	85 c0                	test   %eax,%eax
    2d81:	74 25                	je     2da8 <parse_expression_precedence+0x538>
    2d83:	8b 08                	mov    (%eax),%ecx
    2d85:	85 c9                	test   %ecx,%ecx
    2d87:	0f 84 0b 05 00 00    	je     3298 <parse_expression_precedence+0xa28>
    2d8d:	8b 50 04             	mov    0x4(%eax),%edx
    2d90:	85 d2                	test   %edx,%edx
    2d92:	0f 84 05 05 00 00    	je     329d <parse_expression_precedence+0xa2d>
    2d98:	4a                   	dec    %edx
    2d99:	89 50 04             	mov    %edx,0x4(%eax)
    2d9c:	85 d2                	test   %edx,%edx
    2d9e:	0f 84 62 03 00 00    	je     3106 <parse_expression_precedence+0x896>
    2da4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2da8:	8b 16                	mov    (%esi),%edx
    2daa:	31 c9                	xor    %ecx,%ecx
    2dac:	e9 ed fb ff ff       	jmp    299e <parse_expression_precedence+0x12e>
    2db1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    2db8:	b9 04 00 00 00       	mov    $0x4,%ecx
    2dbd:	bf 05 00 00 00       	mov    $0x5,%edi
    2dc2:	e9 01 ff ff ff       	jmp    2cc8 <parse_expression_precedence+0x458>
    2dc7:	90                   	nop
    2dc8:	b9 0a 00 00 00       	mov    $0xa,%ecx
    2dcd:	bf 02 00 00 00       	mov    $0x2,%edi
    2dd2:	e9 f1 fe ff ff       	jmp    2cc8 <parse_expression_precedence+0x458>
    2dd7:	90                   	nop
    2dd8:	b9 03 00 00 00       	mov    $0x3,%ecx
    2ddd:	eb de                	jmp    2dbd <parse_expression_precedence+0x54d>
    2ddf:	90                   	nop
    2de0:	b9 05 00 00 00       	mov    $0x5,%ecx
    2de5:	eb d6                	jmp    2dbd <parse_expression_precedence+0x54d>
    2de7:	90                   	nop
    2de8:	b9 01 00 00 00       	mov    $0x1,%ecx
    2ded:	e9 46 ff ff ff       	jmp    2d38 <parse_expression_precedence+0x4c8>
    2df2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2df8:	b9 0b 00 00 00       	mov    $0xb,%ecx
    2dfd:	eb ce                	jmp    2dcd <parse_expression_precedence+0x55d>
    2dff:	90                   	nop
    2e00:	b9 08 00 00 00       	mov    $0x8,%ecx
    2e05:	e9 52 ff ff ff       	jmp    2d5c <parse_expression_precedence+0x4ec>
    2e0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2e10:	b9 07 00 00 00       	mov    $0x7,%ecx
    2e15:	e9 42 ff ff ff       	jmp    2d5c <parse_expression_precedence+0x4ec>
    2e1a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2e20:	b9 06 00 00 00       	mov    $0x6,%ecx
    2e25:	e9 32 ff ff ff       	jmp    2d5c <parse_expression_precedence+0x4ec>
    2e2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2e30:	b9 0f 00 00 00       	mov    $0xf,%ecx
    2e35:	e9 fe fe ff ff       	jmp    2d38 <parse_expression_precedence+0x4c8>
    2e3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2e40:	b9 0c 00 00 00       	mov    $0xc,%ecx
    2e45:	e9 79 fe ff ff       	jmp    2cc3 <parse_expression_precedence+0x453>
    2e4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2e50:	8b 0e                	mov    (%esi),%ecx
    2e52:	85 c9                	test   %ecx,%ecx
    2e54:	75 12                	jne    2e68 <parse_expression_precedence+0x5f8>
    2e56:	ba 69 cf 02 00       	mov    $0x2cf69,%edx
    2e5b:	89 f0                	mov    %esi,%eax
    2e5d:	e8 3e f0 ff ff       	call   1ea0 <syntax_error.part.2>
    2e62:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    2e68:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    2e6b:	85 c0                	test   %eax,%eax
    2e6d:	74 21                	je     2e90 <parse_expression_precedence+0x620>
    2e6f:	8b 08                	mov    (%eax),%ecx
    2e71:	85 c9                	test   %ecx,%ecx
    2e73:	0f 84 1f 04 00 00    	je     3298 <parse_expression_precedence+0xa28>
    2e79:	8b 50 04             	mov    0x4(%eax),%edx
    2e7c:	85 d2                	test   %edx,%edx
    2e7e:	0f 84 19 04 00 00    	je     329d <parse_expression_precedence+0xa2d>
    2e84:	4a                   	dec    %edx
    2e85:	89 50 04             	mov    %edx,0x4(%eax)
    2e88:	85 d2                	test   %edx,%edx
    2e8a:	0f 84 c9 00 00 00    	je     2f59 <parse_expression_precedence+0x6e9>
    2e90:	85 ff                	test   %edi,%edi
    2e92:	0f 84 10 ff ff ff    	je     2da8 <parse_expression_precedence+0x538>
    2e98:	8b 17                	mov    (%edi),%edx
    2e9a:	85 d2                	test   %edx,%edx
    2e9c:	0f 84 f6 03 00 00    	je     3298 <parse_expression_precedence+0xa28>
    2ea2:	8b 47 04             	mov    0x4(%edi),%eax
    2ea5:	85 c0                	test   %eax,%eax
    2ea7:	0f 84 f0 03 00 00    	je     329d <parse_expression_precedence+0xa2d>
    2ead:	48                   	dec    %eax
    2eae:	89 47 04             	mov    %eax,0x4(%edi)
    2eb1:	85 c0                	test   %eax,%eax
    2eb3:	0f 85 ef fe ff ff    	jne    2da8 <parse_expression_precedence+0x538>
    2eb9:	89 3c 24             	mov    %edi,(%esp)
    2ebc:	ff 52 04             	call   *0x4(%edx)
    2ebf:	8b 16                	mov    (%esi),%edx
    2ec1:	e9 e4 fe ff ff       	jmp    2daa <parse_expression_precedence+0x53a>
    2ec6:	66 90                	xchg   %ax,%ax
    2ec8:	8b 86 30 10 00 00    	mov    0x1030(%esi),%eax
    2ece:	31 db                	xor    %ebx,%ebx
    2ed0:	85 c0                	test   %eax,%eax
    2ed2:	7f 0f                	jg     2ee3 <parse_expression_precedence+0x673>
    2ed4:	eb 32                	jmp    2f08 <parse_expression_precedence+0x698>
    2ed6:	66 90                	xchg   %ax,%ax
    2ed8:	43                   	inc    %ebx
    2ed9:	8b 86 30 10 00 00    	mov    0x1030(%esi),%eax
    2edf:	39 c3                	cmp    %eax,%ebx
    2ee1:	7d 25                	jge    2f08 <parse_expression_precedence+0x698>
    2ee3:	8b 86 24 10 00 00    	mov    0x1024(%esi),%eax
    2ee9:	89 44 24 04          	mov    %eax,0x4(%esp)
    2eed:	8b 86 2c 10 00 00    	mov    0x102c(%esi),%eax
    2ef3:	8b 04 98             	mov    (%eax,%ebx,4),%eax
    2ef6:	89 04 24             	mov    %eax,(%esp)
    2ef9:	e8 22 16 01 00       	call   14520 <str_cmp>
    2efe:	85 c0                	test   %eax,%eax
    2f00:	75 d6                	jne    2ed8 <parse_expression_precedence+0x668>
    2f02:	8b 86 30 10 00 00    	mov    0x1030(%esi),%eax
    2f08:	39 d8                	cmp    %ebx,%eax
    2f0a:	0f 84 41 02 00 00    	je     3151 <parse_expression_precedence+0x8e1>
    2f10:	89 f0                	mov    %esi,%eax
    2f12:	e8 89 f0 ff ff       	call   1fa0 <next_token>
    2f17:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    2f1a:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    2f1e:	89 04 24             	mov    %eax,(%esp)
    2f21:	e8 4a a8 00 00       	call   d770 <bithenge_param_expression>
    2f26:	85 c0                	test   %eax,%eax
    2f28:	0f 84 f8 fa ff ff    	je     2a26 <parse_expression_precedence+0x1b6>
    2f2e:	e9 2d fb ff ff       	jmp    2a60 <parse_expression_precedence+0x1f0>
    2f33:	90                   	nop
    2f34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2f38:	ba c0 cf 02 00       	mov    $0x2cfc0,%edx
    2f3d:	89 f0                	mov    %esi,%eax
    2f3f:	e8 5c ef ff ff       	call   1ea0 <syntax_error.part.2>
    2f44:	31 db                	xor    %ebx,%ebx
    2f46:	e9 b0 fc ff ff       	jmp    2bfb <parse_expression_precedence+0x38b>
    2f4b:	89 f0                	mov    %esi,%eax
    2f4d:	e8 4e f0 ff ff       	call   1fa0 <next_token>
    2f52:	8b 16                	mov    (%esi),%edx
    2f54:	e9 a7 f9 ff ff       	jmp    2900 <parse_expression_precedence+0x90>
    2f59:	89 04 24             	mov    %eax,(%esp)
    2f5c:	ff 51 04             	call   *0x4(%ecx)
    2f5f:	e9 2c ff ff ff       	jmp    2e90 <parse_expression_precedence+0x620>
    2f64:	85 c0                	test   %eax,%eax
    2f66:	74 2d                	je     2f95 <parse_expression_precedence+0x725>
    2f68:	8b 08                	mov    (%eax),%ecx
    2f6a:	85 c9                	test   %ecx,%ecx
    2f6c:	0f 84 26 03 00 00    	je     3298 <parse_expression_precedence+0xa28>
    2f72:	8b 50 04             	mov    0x4(%eax),%edx
    2f75:	85 d2                	test   %edx,%edx
    2f77:	0f 84 20 03 00 00    	je     329d <parse_expression_precedence+0xa2d>
    2f7d:	4a                   	dec    %edx
    2f7e:	89 50 04             	mov    %edx,0x4(%eax)
    2f81:	85 d2                	test   %edx,%edx
    2f83:	75 06                	jne    2f8b <parse_expression_precedence+0x71b>
    2f85:	89 04 24             	mov    %eax,(%esp)
    2f88:	ff 51 04             	call   *0x4(%ecx)
    2f8b:	8b 06                	mov    (%esi),%eax
    2f8d:	85 c0                	test   %eax,%eax
    2f8f:	0f 84 4d fa ff ff    	je     29e2 <parse_expression_precedence+0x172>
    2f95:	8b 45 d0             	mov    -0x30(%ebp),%eax
    2f98:	85 c0                	test   %eax,%eax
    2f9a:	74 21                	je     2fbd <parse_expression_precedence+0x74d>
    2f9c:	8b 08                	mov    (%eax),%ecx
    2f9e:	85 c9                	test   %ecx,%ecx
    2fa0:	0f 84 f2 02 00 00    	je     3298 <parse_expression_precedence+0xa28>
    2fa6:	8b 50 04             	mov    0x4(%eax),%edx
    2fa9:	85 d2                	test   %edx,%edx
    2fab:	0f 84 ec 02 00 00    	je     329d <parse_expression_precedence+0xa2d>
    2fb1:	4a                   	dec    %edx
    2fb2:	89 50 04             	mov    %edx,0x4(%eax)
    2fb5:	85 d2                	test   %edx,%edx
    2fb7:	0f 84 3c 01 00 00    	je     30f9 <parse_expression_precedence+0x889>
    2fbd:	31 c0                	xor    %eax,%eax
    2fbf:	83 c4 5c             	add    $0x5c,%esp
    2fc2:	5b                   	pop    %ebx
    2fc3:	5e                   	pop    %esi
    2fc4:	5f                   	pop    %edi
    2fc5:	5d                   	pop    %ebp
    2fc6:	c3                   	ret    
    2fc7:	89 f0                	mov    %esi,%eax
    2fc9:	e8 d2 ef ff ff       	call   1fa0 <next_token>
    2fce:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    2fd1:	c6 86 34 10 00 00 01 	movb   $0x1,0x1034(%esi)
    2fd8:	89 04 24             	mov    %eax,(%esp)
    2fdb:	e8 50 a7 00 00       	call   d730 <bithenge_in_node_expression>
    2fe0:	85 c0                	test   %eax,%eax
    2fe2:	0f 84 3e fa ff ff    	je     2a26 <parse_expression_precedence+0x1b6>
    2fe8:	e9 73 fa ff ff       	jmp    2a60 <parse_expression_precedence+0x1f0>
    2fed:	8b 16                	mov    (%esi),%edx
    2fef:	31 db                	xor    %ebx,%ebx
    2ff1:	85 d2                	test   %edx,%edx
    2ff3:	0f 85 07 f9 ff ff    	jne    2900 <parse_expression_precedence+0x90>
    2ff9:	ba 55 cf 02 00       	mov    $0x2cf55,%edx
    2ffe:	89 f0                	mov    %esi,%eax
    3000:	e8 9b ee ff ff       	call   1ea0 <syntax_error.part.2>
    3005:	8b 16                	mov    (%esi),%edx
    3007:	e9 f4 f8 ff ff       	jmp    2900 <parse_expression_precedence+0x90>
    300c:	8b 3e                	mov    (%esi),%edi
    300e:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    3015:	85 ff                	test   %edi,%edi
    3017:	0f 85 78 ff ff ff    	jne    2f95 <parse_expression_precedence+0x725>
    301d:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    3024:	0f 84 12 02 00 00    	je     323c <parse_expression_precedence+0x9cc>
    302a:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    3031:	ff ff ff 
    3034:	89 06                	mov    %eax,(%esi)
    3036:	89 c2                	mov    %eax,%edx
    3038:	e9 67 f9 ff ff       	jmp    29a4 <parse_expression_precedence+0x134>
    303d:	8b 16                	mov    (%esi),%edx
    303f:	85 d2                	test   %edx,%edx
    3041:	75 1b                	jne    305e <parse_expression_precedence+0x7ee>
    3043:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    304a:	0f 84 2f 02 00 00    	je     327f <parse_expression_precedence+0xa0f>
    3050:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    3057:	ff ff ff 
    305a:	89 06                	mov    %eax,(%esi)
    305c:	89 c2                	mov    %eax,%edx
    305e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3061:	85 c0                	test   %eax,%eax
    3063:	0f 85 1a fd ff ff    	jne    2d83 <parse_expression_precedence+0x513>
    3069:	31 c9                	xor    %ecx,%ecx
    306b:	e9 2e f9 ff ff       	jmp    299e <parse_expression_precedence+0x12e>
    3070:	89 f0                	mov    %esi,%eax
    3072:	e8 29 ef ff ff       	call   1fa0 <next_token>
    3077:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    307e:	0f 85 91 00 00 00    	jne    3115 <parse_expression_precedence+0x8a5>
    3084:	8b 9e 24 10 00 00    	mov    0x1024(%esi),%ebx
    308a:	89 f0                	mov    %esi,%eax
    308c:	c7 86 24 10 00 00 00 	movl   $0x0,0x1024(%esi)
    3093:	00 00 00 
    3096:	e8 05 ef ff ff       	call   1fa0 <next_token>
    309b:	8b 06                	mov    (%esi),%eax
    309d:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    30a4:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    30ab:	85 c0                	test   %eax,%eax
    30ad:	0f 84 bd 00 00 00    	je     3170 <parse_expression_precedence+0x900>
    30b3:	89 1c 24             	mov    %ebx,(%esp)
    30b6:	e8 25 d1 01 00       	call   201e0 <free>
    30bb:	8b 45 e0             	mov    -0x20(%ebp),%eax
    30be:	89 04 24             	mov    %eax,(%esp)
    30c1:	e8 fa 71 00 00       	call   a2c0 <bithenge_node_dec_ref>
    30c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    30c9:	85 c0                	test   %eax,%eax
    30cb:	74 23                	je     30f0 <parse_expression_precedence+0x880>
    30cd:	8b 10                	mov    (%eax),%edx
    30cf:	85 d2                	test   %edx,%edx
    30d1:	0f 84 c1 01 00 00    	je     3298 <parse_expression_precedence+0xa28>
    30d7:	8b 48 04             	mov    0x4(%eax),%ecx
    30da:	85 c9                	test   %ecx,%ecx
    30dc:	0f 84 bb 01 00 00    	je     329d <parse_expression_precedence+0xa2d>
    30e2:	49                   	dec    %ecx
    30e3:	89 48 04             	mov    %ecx,0x4(%eax)
    30e6:	85 c9                	test   %ecx,%ecx
    30e8:	75 06                	jne    30f0 <parse_expression_precedence+0x880>
    30ea:	89 04 24             	mov    %eax,(%esp)
    30ed:	ff 52 04             	call   *0x4(%edx)
    30f0:	8b 16                	mov    (%esi),%edx
    30f2:	31 db                	xor    %ebx,%ebx
    30f4:	e9 07 f8 ff ff       	jmp    2900 <parse_expression_precedence+0x90>
    30f9:	89 04 24             	mov    %eax,(%esp)
    30fc:	ff 51 04             	call   *0x4(%ecx)
    30ff:	31 c0                	xor    %eax,%eax
    3101:	e9 b9 fe ff ff       	jmp    2fbf <parse_expression_precedence+0x74f>
    3106:	89 04 24             	mov    %eax,(%esp)
    3109:	ff 51 04             	call   *0x4(%ecx)
    310c:	8b 16                	mov    (%esi),%edx
    310e:	31 c9                	xor    %ecx,%ecx
    3110:	e9 89 f8 ff ff       	jmp    299e <parse_expression_precedence+0x12e>
    3115:	8b 16                	mov    (%esi),%edx
    3117:	85 d2                	test   %edx,%edx
    3119:	0f 84 08 01 00 00    	je     3227 <parse_expression_precedence+0x9b7>
    311f:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    3126:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    312d:	31 db                	xor    %ebx,%ebx
    312f:	eb 82                	jmp    30b3 <parse_expression_precedence+0x843>
    3131:	8b 96 24 10 00 00    	mov    0x1024(%esi),%edx
    3137:	89 45 c0             	mov    %eax,-0x40(%ebp)
    313a:	89 14 24             	mov    %edx,(%esp)
    313d:	e8 9e d0 01 00       	call   201e0 <free>
    3142:	8b 45 c0             	mov    -0x40(%ebp),%eax
    3145:	e9 b8 f9 ff ff       	jmp    2b02 <parse_expression_precedence+0x292>
    314a:	8b 16                	mov    (%esi),%edx
    314c:	e9 4d f8 ff ff       	jmp    299e <parse_expression_precedence+0x12e>
    3151:	8b 16                	mov    (%esi),%edx
    3153:	31 db                	xor    %ebx,%ebx
    3155:	85 d2                	test   %edx,%edx
    3157:	0f 85 a3 f7 ff ff    	jne    2900 <parse_expression_precedence+0x90>
    315d:	ba 37 cf 02 00       	mov    $0x2cf37,%edx
    3162:	89 f0                	mov    %esi,%eax
    3164:	e8 37 ed ff ff       	call   1ea0 <syntax_error.part.2>
    3169:	8b 16                	mov    (%esi),%edx
    316b:	e9 90 f7 ff ff       	jmp    2900 <parse_expression_precedence+0x90>
    3170:	8d 45 e0             	lea    -0x20(%ebp),%eax
    3173:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    3177:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
    317e:	00 
    317f:	89 04 24             	mov    %eax,(%esp)
    3182:	e8 69 78 00 00       	call   a9f0 <bithenge_new_string_node>
    3187:	89 c3                	mov    %eax,%ebx
    3189:	8b 06                	mov    (%esi),%eax
    318b:	85 c0                	test   %eax,%eax
    318d:	0f 85 8d 00 00 00    	jne    3220 <parse_expression_precedence+0x9b0>
    3193:	85 db                	test   %ebx,%ebx
    3195:	0f 85 ba 00 00 00    	jne    3255 <parse_expression_precedence+0x9e5>
    319b:	8b 45 e0             	mov    -0x20(%ebp),%eax
    319e:	89 44 24 04          	mov    %eax,0x4(%esp)
    31a2:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    31a5:	89 04 24             	mov    %eax,(%esp)
    31a8:	e8 63 a6 00 00       	call   d810 <bithenge_scope_member_expression>
    31ad:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    31b4:	89 c7                	mov    %eax,%edi
    31b6:	85 c0                	test   %eax,%eax
    31b8:	75 29                	jne    31e3 <parse_expression_precedence+0x973>
    31ba:	8b 0e                	mov    (%esi),%ecx
    31bc:	85 c9                	test   %ecx,%ecx
    31be:	75 60                	jne    3220 <parse_expression_precedence+0x9b0>
    31c0:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    31c3:	31 d2                	xor    %edx,%edx
    31c5:	e9 36 f7 ff ff       	jmp    2900 <parse_expression_precedence+0x90>
    31ca:	8b 96 24 10 00 00    	mov    0x1024(%esi),%edx
    31d0:	89 45 c0             	mov    %eax,-0x40(%ebp)
    31d3:	89 14 24             	mov    %edx,(%esp)
    31d6:	e8 05 d0 01 00       	call   201e0 <free>
    31db:	8b 45 c0             	mov    -0x40(%ebp),%eax
    31de:	e9 96 f8 ff ff       	jmp    2a79 <parse_expression_precedence+0x209>
    31e3:	8b 06                	mov    (%esi),%eax
    31e5:	31 db                	xor    %ebx,%ebx
    31e7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    31ee:	85 c0                	test   %eax,%eax
    31f0:	0f 85 bd fe ff ff    	jne    30b3 <parse_expression_precedence+0x843>
    31f6:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    31fd:	75 0e                	jne    320d <parse_expression_precedence+0x99d>
    31ff:	8b 86 24 10 00 00    	mov    0x1024(%esi),%eax
    3205:	89 04 24             	mov    %eax,(%esp)
    3208:	e8 d3 cf 01 00       	call   201e0 <free>
    320d:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    3214:	ff ff ff 
    3217:	89 3e                	mov    %edi,(%esi)
    3219:	31 db                	xor    %ebx,%ebx
    321b:	e9 93 fe ff ff       	jmp    30b3 <parse_expression_precedence+0x843>
    3220:	31 db                	xor    %ebx,%ebx
    3222:	e9 8c fe ff ff       	jmp    30b3 <parse_expression_precedence+0x843>
    3227:	89 f0                	mov    %esi,%eax
    3229:	ba c0 cf 02 00       	mov    $0x2cfc0,%edx
    322e:	e8 6d ec ff ff       	call   1ea0 <syntax_error.part.2>
    3233:	31 db                	xor    %ebx,%ebx
    3235:	8b 06                	mov    (%esi),%eax
    3237:	e9 61 fe ff ff       	jmp    309d <parse_expression_precedence+0x82d>
    323c:	8b 96 24 10 00 00    	mov    0x1024(%esi),%edx
    3242:	89 45 c0             	mov    %eax,-0x40(%ebp)
    3245:	89 14 24             	mov    %edx,(%esp)
    3248:	e8 93 cf 01 00       	call   201e0 <free>
    324d:	8b 45 c0             	mov    -0x40(%ebp),%eax
    3250:	e9 d5 fd ff ff       	jmp    302a <parse_expression_precedence+0x7ba>
    3255:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    325c:	75 0e                	jne    326c <parse_expression_precedence+0x9fc>
    325e:	8b 86 24 10 00 00    	mov    0x1024(%esi),%eax
    3264:	89 04 24             	mov    %eax,(%esp)
    3267:	e8 74 cf 01 00       	call   201e0 <free>
    326c:	89 1e                	mov    %ebx,(%esi)
    326e:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    3275:	ff ff ff 
    3278:	31 db                	xor    %ebx,%ebx
    327a:	e9 34 fe ff ff       	jmp    30b3 <parse_expression_precedence+0x843>
    327f:	8b 96 24 10 00 00    	mov    0x1024(%esi),%edx
    3285:	89 45 c0             	mov    %eax,-0x40(%ebp)
    3288:	89 14 24             	mov    %edx,(%esp)
    328b:	e8 50 cf 01 00       	call   201e0 <free>
    3290:	8b 45 c0             	mov    -0x40(%ebp),%eax
    3293:	e9 b8 fd ff ff       	jmp    3050 <parse_expression_precedence+0x7e0>
    3298:	e8 3f 29 00 00       	call   5bdc <bithenge_expression_dec_ref.part.4>
    329d:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    32a4:	00 
    32a5:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    32ac:	00 
    32ad:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    32b4:	e8 f7 75 02 00       	call   2a8b0 <assert_abort>
    32b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000032c0 <parse_transform_no_compose>:
    32c0:	55                   	push   %ebp
    32c1:	89 e5                	mov    %esp,%ebp
    32c3:	57                   	push   %edi
    32c4:	56                   	push   %esi
    32c5:	53                   	push   %ebx
    32c6:	83 ec 6c             	sub    $0x6c,%esp
    32c9:	89 c6                	mov    %eax,%esi
    32cb:	8b 80 20 10 00 00    	mov    0x1020(%eax),%eax
    32d1:	83 f8 28             	cmp    $0x28,%eax
    32d4:	0f 84 6e 05 00 00    	je     3848 <parse_transform_no_compose+0x588>
    32da:	83 f8 8d             	cmp    $0xffffff8d,%eax
    32dd:	0f 84 2d 08 00 00    	je     3b10 <parse_transform_no_compose+0x850>
    32e3:	83 f8 86             	cmp    $0xffffff86,%eax
    32e6:	0f 84 f4 05 00 00    	je     38e0 <parse_transform_no_compose+0x620>
    32ec:	83 f8 90             	cmp    $0xffffff90,%eax
    32ef:	0f 84 93 06 00 00    	je     3988 <parse_transform_no_compose+0x6c8>
    32f5:	83 f8 92             	cmp    $0xffffff92,%eax
    32f8:	0f 84 b2 09 00 00    	je     3cb0 <parse_transform_no_compose+0x9f0>
    32fe:	83 f8 93             	cmp    $0xffffff93,%eax
    3301:	0f 84 39 0b 00 00    	je     3e40 <parse_transform_no_compose+0xb80>
    3307:	83 f8 94             	cmp    $0xffffff94,%eax
    330a:	0f 84 08 07 00 00    	je     3a18 <parse_transform_no_compose+0x758>
    3310:	83 f8 95             	cmp    $0xffffff95,%eax
    3313:	0f 85 8f 05 00 00    	jne    38a8 <parse_transform_no_compose+0x5e8>
    3319:	89 f0                	mov    %esi,%eax
    331b:	e8 80 ec ff ff       	call   1fa0 <next_token>
    3320:	83 be 20 10 00 00 28 	cmpl   $0x28,0x1020(%esi)
    3327:	0f 84 c3 02 00 00    	je     35f0 <parse_transform_no_compose+0x330>
    332d:	8b 0e                	mov    (%esi),%ecx
    332f:	85 c9                	test   %ecx,%ecx
    3331:	0f 84 a1 02 00 00    	je     35d8 <parse_transform_no_compose+0x318>
    3337:	31 d2                	xor    %edx,%edx
    3339:	89 f0                	mov    %esi,%eax
    333b:	e8 30 f5 ff ff       	call   2870 <parse_expression_precedence>
    3340:	89 45 b8             	mov    %eax,-0x48(%ebp)
    3343:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    3349:	83 f8 29             	cmp    $0x29,%eax
    334c:	0f 84 be 04 00 00    	je     3810 <parse_transform_no_compose+0x550>
    3352:	8b 16                	mov    (%esi),%edx
    3354:	85 d2                	test   %edx,%edx
    3356:	0f 84 64 02 00 00    	je     35c0 <parse_transform_no_compose+0x300>
    335c:	83 f8 7b             	cmp    $0x7b,%eax
    335f:	0f 84 c1 04 00 00    	je     3826 <parse_transform_no_compose+0x566>
    3365:	8b 3e                	mov    (%esi),%edi
    3367:	85 ff                	test   %edi,%edi
    3369:	0f 84 59 01 00 00    	je     34c8 <parse_transform_no_compose+0x208>
    336f:	31 db                	xor    %ebx,%ebx
    3371:	31 d2                	xor    %edx,%edx
    3373:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
    337a:	8b 45 b8             	mov    -0x48(%ebp),%eax
    337d:	85 c0                	test   %eax,%eax
    337f:	74 2e                	je     33af <parse_transform_no_compose+0xef>
    3381:	8b 45 b8             	mov    -0x48(%ebp),%eax
    3384:	8b 08                	mov    (%eax),%ecx
    3386:	85 c9                	test   %ecx,%ecx
    3388:	0f 84 f4 0e 00 00    	je     4282 <parse_transform_no_compose+0xfc2>
    338e:	89 c7                	mov    %eax,%edi
    3390:	8b 40 04             	mov    0x4(%eax),%eax
    3393:	85 c0                	test   %eax,%eax
    3395:	0f 84 cb 0e 00 00    	je     4266 <parse_transform_no_compose+0xfa6>
    339b:	48                   	dec    %eax
    339c:	89 47 04             	mov    %eax,0x4(%edi)
    339f:	85 c0                	test   %eax,%eax
    33a1:	75 0c                	jne    33af <parse_transform_no_compose+0xef>
    33a3:	89 55 b0             	mov    %edx,-0x50(%ebp)
    33a6:	89 3c 24             	mov    %edi,(%esp)
    33a9:	ff 51 04             	call   *0x4(%ecx)
    33ac:	8b 55 b0             	mov    -0x50(%ebp),%edx
    33af:	8b 3d 38 03 03 00    	mov    0x30338,%edi
    33b5:	c7 45 e4 34 03 03 00 	movl   $0x30334,-0x1c(%ebp)
    33bc:	47                   	inc    %edi
    33bd:	8b 06                	mov    (%esi),%eax
    33bf:	89 3d 38 03 03 00    	mov    %edi,0x30338
    33c5:	8d 7d e4             	lea    -0x1c(%ebp),%edi
    33c8:	85 c0                	test   %eax,%eax
    33ca:	75 44                	jne    3410 <parse_transform_no_compose+0x150>
    33cc:	85 db                	test   %ebx,%ebx
    33ce:	0f 84 aa 00 00 00    	je     347e <parse_transform_no_compose+0x1be>
    33d4:	4b                   	dec    %ebx
    33d5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    33d8:	89 44 24 0c          	mov    %eax,0xc(%esp)
    33dc:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
    33df:	8b 04 9a             	mov    (%edx,%ebx,4),%eax
    33e2:	89 44 24 08          	mov    %eax,0x8(%esp)
    33e6:	8b 04 99             	mov    (%ecx,%ebx,4),%eax
    33e9:	89 3c 24             	mov    %edi,(%esp)
    33ec:	89 44 24 04          	mov    %eax,0x4(%esp)
    33f0:	89 55 b0             	mov    %edx,-0x50(%ebp)
    33f3:	e8 f8 8d 00 00       	call   c1f0 <bithenge_if_transform>
    33f8:	8b 55 b0             	mov    -0x50(%ebp),%edx
    33fb:	85 c0                	test   %eax,%eax
    33fd:	0f 85 2d 03 00 00    	jne    3730 <parse_transform_no_compose+0x470>
    3403:	8b 06                	mov    (%esi),%eax
    3405:	85 c0                	test   %eax,%eax
    3407:	74 c3                	je     33cc <parse_transform_no_compose+0x10c>
    3409:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3410:	85 db                	test   %ebx,%ebx
    3412:	74 6a                	je     347e <parse_transform_no_compose+0x1be>
    3414:	89 75 c4             	mov    %esi,-0x3c(%ebp)
    3417:	89 d7                	mov    %edx,%edi
    3419:	8b 75 b4             	mov    -0x4c(%ebp),%esi
    341c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3420:	4b                   	dec    %ebx
    3421:	8b 04 9e             	mov    (%esi,%ebx,4),%eax
    3424:	85 c0                	test   %eax,%eax
    3426:	74 23                	je     344b <parse_transform_no_compose+0x18b>
    3428:	8b 08                	mov    (%eax),%ecx
    342a:	85 c9                	test   %ecx,%ecx
    342c:	0f 84 50 0e 00 00    	je     4282 <parse_transform_no_compose+0xfc2>
    3432:	8b 50 04             	mov    0x4(%eax),%edx
    3435:	85 d2                	test   %edx,%edx
    3437:	0f 84 29 0e 00 00    	je     4266 <parse_transform_no_compose+0xfa6>
    343d:	4a                   	dec    %edx
    343e:	89 50 04             	mov    %edx,0x4(%eax)
    3441:	85 d2                	test   %edx,%edx
    3443:	75 06                	jne    344b <parse_transform_no_compose+0x18b>
    3445:	89 04 24             	mov    %eax,(%esp)
    3448:	ff 51 04             	call   *0x4(%ecx)
    344b:	8b 04 9f             	mov    (%edi,%ebx,4),%eax
    344e:	85 c0                	test   %eax,%eax
    3450:	74 23                	je     3475 <parse_transform_no_compose+0x1b5>
    3452:	8b 08                	mov    (%eax),%ecx
    3454:	85 c9                	test   %ecx,%ecx
    3456:	0f 84 05 0e 00 00    	je     4261 <parse_transform_no_compose+0xfa1>
    345c:	8b 50 04             	mov    0x4(%eax),%edx
    345f:	85 d2                	test   %edx,%edx
    3461:	0f 84 c5 0d 00 00    	je     422c <parse_transform_no_compose+0xf6c>
    3467:	4a                   	dec    %edx
    3468:	89 50 04             	mov    %edx,0x4(%eax)
    346b:	85 d2                	test   %edx,%edx
    346d:	75 06                	jne    3475 <parse_transform_no_compose+0x1b5>
    346f:	89 04 24             	mov    %eax,(%esp)
    3472:	ff 51 0c             	call   *0xc(%ecx)
    3475:	85 db                	test   %ebx,%ebx
    3477:	75 a7                	jne    3420 <parse_transform_no_compose+0x160>
    3479:	89 fa                	mov    %edi,%edx
    347b:	8b 75 c4             	mov    -0x3c(%ebp),%esi
    347e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
    3481:	89 55 b0             	mov    %edx,-0x50(%ebp)
    3484:	89 04 24             	mov    %eax,(%esp)
    3487:	e8 54 cd 01 00       	call   201e0 <free>
    348c:	8b 55 b0             	mov    -0x50(%ebp),%edx
    348f:	89 14 24             	mov    %edx,(%esp)
    3492:	e8 49 cd 01 00       	call   201e0 <free>
    3497:	83 be 20 10 00 00 7d 	cmpl   $0x7d,0x1020(%esi)
    349e:	0f 84 94 03 00 00    	je     3838 <parse_transform_no_compose+0x578>
    34a4:	8b 3e                	mov    (%esi),%edi
    34a6:	85 ff                	test   %edi,%edi
    34a8:	75 0c                	jne    34b6 <parse_transform_no_compose+0x1f6>
    34aa:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    34af:	89 f0                	mov    %esi,%eax
    34b1:	e8 ea e9 ff ff       	call   1ea0 <syntax_error.part.2>
    34b6:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    34b9:	83 c4 6c             	add    $0x6c,%esp
    34bc:	89 c8                	mov    %ecx,%eax
    34be:	5b                   	pop    %ebx
    34bf:	5e                   	pop    %esi
    34c0:	5f                   	pop    %edi
    34c1:	5d                   	pop    %ebp
    34c2:	c3                   	ret    
    34c3:	90                   	nop
    34c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    34c8:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    34cd:	89 f0                	mov    %esi,%eax
    34cf:	e8 cc e9 ff ff       	call   1ea0 <syntax_error.part.2>
    34d4:	8b 1e                	mov    (%esi),%ebx
    34d6:	85 db                	test   %ebx,%ebx
    34d8:	0f 85 91 fe ff ff    	jne    336f <parse_transform_no_compose+0xaf>
    34de:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    34e4:	83 f8 7d             	cmp    $0x7d,%eax
    34e7:	0f 84 82 fe ff ff    	je     336f <parse_transform_no_compose+0xaf>
    34ed:	89 c1                	mov    %eax,%ecx
    34ef:	31 db                	xor    %ebx,%ebx
    34f1:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
    34f8:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
    34ff:	83 f9 8e             	cmp    $0xffffff8e,%ecx
    3502:	0f 84 95 01 00 00    	je     369d <parse_transform_no_compose+0x3dd>
    3508:	31 d2                	xor    %edx,%edx
    350a:	89 f0                	mov    %esi,%eax
    350c:	e8 5f f3 ff ff       	call   2870 <parse_expression_precedence>
    3511:	8b 16                	mov    (%esi),%edx
    3513:	89 45 e0             	mov    %eax,-0x20(%ebp)
    3516:	85 d2                	test   %edx,%edx
    3518:	0f 84 42 02 00 00    	je     3760 <parse_transform_no_compose+0x4a0>
    351e:	83 be 20 10 00 00 3a 	cmpl   $0x3a,0x1020(%esi)
    3525:	0f 84 dd 01 00 00    	je     3708 <parse_transform_no_compose+0x448>
    352b:	8b 06                	mov    (%esi),%eax
    352d:	85 c0                	test   %eax,%eax
    352f:	75 0c                	jne    353d <parse_transform_no_compose+0x27d>
    3531:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3536:	89 f0                	mov    %esi,%eax
    3538:	e8 63 e9 ff ff       	call   1ea0 <syntax_error.part.2>
    353d:	89 f0                	mov    %esi,%eax
    353f:	e8 6c 0e 00 00       	call   43b0 <parse_transform>
    3544:	83 be 20 10 00 00 3b 	cmpl   $0x3b,0x1020(%esi)
    354b:	89 c7                	mov    %eax,%edi
    354d:	0f 84 ad 00 00 00    	je     3600 <parse_transform_no_compose+0x340>
    3553:	8b 06                	mov    (%esi),%eax
    3555:	85 c0                	test   %eax,%eax
    3557:	0f 84 bb 01 00 00    	je     3718 <parse_transform_no_compose+0x458>
    355d:	8b 45 e0             	mov    -0x20(%ebp),%eax
    3560:	85 c0                	test   %eax,%eax
    3562:	74 23                	je     3587 <parse_transform_no_compose+0x2c7>
    3564:	8b 08                	mov    (%eax),%ecx
    3566:	85 c9                	test   %ecx,%ecx
    3568:	0f 84 14 0d 00 00    	je     4282 <parse_transform_no_compose+0xfc2>
    356e:	8b 50 04             	mov    0x4(%eax),%edx
    3571:	85 d2                	test   %edx,%edx
    3573:	0f 84 ed 0c 00 00    	je     4266 <parse_transform_no_compose+0xfa6>
    3579:	4a                   	dec    %edx
    357a:	89 50 04             	mov    %edx,0x4(%eax)
    357d:	85 d2                	test   %edx,%edx
    357f:	75 06                	jne    3587 <parse_transform_no_compose+0x2c7>
    3581:	89 04 24             	mov    %eax,(%esp)
    3584:	ff 51 04             	call   *0x4(%ecx)
    3587:	85 ff                	test   %edi,%edi
    3589:	0f 84 65 01 00 00    	je     36f4 <parse_transform_no_compose+0x434>
    358f:	8b 17                	mov    (%edi),%edx
    3591:	85 d2                	test   %edx,%edx
    3593:	0f 84 c8 0c 00 00    	je     4261 <parse_transform_no_compose+0xfa1>
    3599:	8b 47 04             	mov    0x4(%edi),%eax
    359c:	85 c0                	test   %eax,%eax
    359e:	0f 84 88 0c 00 00    	je     422c <parse_transform_no_compose+0xf6c>
    35a4:	48                   	dec    %eax
    35a5:	89 47 04             	mov    %eax,0x4(%edi)
    35a8:	85 c0                	test   %eax,%eax
    35aa:	0f 84 38 05 00 00    	je     3ae8 <parse_transform_no_compose+0x828>
    35b0:	8b 7d c0             	mov    -0x40(%ebp),%edi
    35b3:	8b 55 bc             	mov    -0x44(%ebp),%edx
    35b6:	89 7d b4             	mov    %edi,-0x4c(%ebp)
    35b9:	e9 bc fd ff ff       	jmp    337a <parse_transform_no_compose+0xba>
    35be:	66 90                	xchg   %ax,%ax
    35c0:	89 f0                	mov    %esi,%eax
    35c2:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    35c7:	e8 d4 e8 ff ff       	call   1ea0 <syntax_error.part.2>
    35cc:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    35d2:	e9 85 fd ff ff       	jmp    335c <parse_transform_no_compose+0x9c>
    35d7:	90                   	nop
    35d8:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    35dd:	89 f0                	mov    %esi,%eax
    35df:	e8 bc e8 ff ff       	call   1ea0 <syntax_error.part.2>
    35e4:	e9 4e fd ff ff       	jmp    3337 <parse_transform_no_compose+0x77>
    35e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    35f0:	89 f0                	mov    %esi,%eax
    35f2:	e8 a9 e9 ff ff       	call   1fa0 <next_token>
    35f7:	e9 3b fd ff ff       	jmp    3337 <parse_transform_no_compose+0x77>
    35fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3600:	89 f0                	mov    %esi,%eax
    3602:	e8 99 e9 ff ff       	call   1fa0 <next_token>
    3607:	8b 06                	mov    (%esi),%eax
    3609:	85 c0                	test   %eax,%eax
    360b:	0f 85 4c ff ff ff    	jne    355d <parse_transform_no_compose+0x29d>
    3611:	8d 53 01             	lea    0x1(%ebx),%edx
    3614:	8b 45 c0             	mov    -0x40(%ebp),%eax
    3617:	89 d1                	mov    %edx,%ecx
    3619:	89 04 24             	mov    %eax,(%esp)
    361c:	c1 e1 02             	shl    $0x2,%ecx
    361f:	89 55 a8             	mov    %edx,-0x58(%ebp)
    3622:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    3626:	89 4d b0             	mov    %ecx,-0x50(%ebp)
    3629:	e8 02 ce 01 00       	call   20430 <realloc>
    362e:	8b 4d b0             	mov    -0x50(%ebp),%ecx
    3631:	89 c2                	mov    %eax,%edx
    3633:	85 c0                	test   %eax,%eax
    3635:	0f 84 a5 01 00 00    	je     37e0 <parse_transform_no_compose+0x520>
    363b:	8b 06                	mov    (%esi),%eax
    363d:	85 c0                	test   %eax,%eax
    363f:	0f 85 0a 0d 00 00    	jne    434f <parse_transform_no_compose+0x108f>
    3645:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    3649:	8b 4d bc             	mov    -0x44(%ebp),%ecx
    364c:	89 0c 24             	mov    %ecx,(%esp)
    364f:	89 55 b0             	mov    %edx,-0x50(%ebp)
    3652:	e8 d9 cd 01 00       	call   20430 <realloc>
    3657:	8b 55 b0             	mov    -0x50(%ebp),%edx
    365a:	85 c0                	test   %eax,%eax
    365c:	0f 84 46 01 00 00    	je     37a8 <parse_transform_no_compose+0x4e8>
    3662:	8b 0e                	mov    (%esi),%ecx
    3664:	85 c9                	test   %ecx,%ecx
    3666:	0f 85 d8 0c 00 00    	jne    4344 <parse_transform_no_compose+0x1084>
    366c:	8d 0c 9d 00 00 00 00 	lea    0x0(,%ebx,4),%ecx
    3673:	8b 5d e0             	mov    -0x20(%ebp),%ebx
    3676:	89 1c 0a             	mov    %ebx,(%edx,%ecx,1)
    3679:	89 3c 08             	mov    %edi,(%eax,%ecx,1)
    367c:	8b 8e 20 10 00 00    	mov    0x1020(%esi),%ecx
    3682:	83 f9 7d             	cmp    $0x7d,%ecx
    3685:	0f 84 45 02 00 00    	je     38d0 <parse_transform_no_compose+0x610>
    368b:	89 45 bc             	mov    %eax,-0x44(%ebp)
    368e:	89 55 c0             	mov    %edx,-0x40(%ebp)
    3691:	8b 5d a8             	mov    -0x58(%ebp),%ebx
    3694:	83 f9 8e             	cmp    $0xffffff8e,%ecx
    3697:	0f 85 6b fe ff ff    	jne    3508 <parse_transform_no_compose+0x248>
    369d:	89 f0                	mov    %esi,%eax
    369f:	8d 7d e4             	lea    -0x1c(%ebp),%edi
    36a2:	e8 f9 e8 ff ff       	call   1fa0 <next_token>
    36a7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
    36ae:	00 
    36af:	89 3c 24             	mov    %edi,(%esp)
    36b2:	e8 79 72 00 00       	call   a930 <bithenge_new_boolean_node>
    36b7:	85 c0                	test   %eax,%eax
    36b9:	75 1a                	jne    36d5 <parse_transform_no_compose+0x415>
    36bb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    36be:	89 44 24 04          	mov    %eax,0x4(%esp)
    36c2:	8d 45 e0             	lea    -0x20(%ebp),%eax
    36c5:	89 04 24             	mov    %eax,(%esp)
    36c8:	e8 e3 a0 00 00       	call   d7b0 <bithenge_const_expression>
    36cd:	85 c0                	test   %eax,%eax
    36cf:	0f 84 49 fe ff ff    	je     351e <parse_transform_no_compose+0x25e>
    36d5:	8b 0e                	mov    (%esi),%ecx
    36d7:	85 c9                	test   %ecx,%ecx
    36d9:	75 19                	jne    36f4 <parse_transform_no_compose+0x434>
    36db:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    36e2:	0f 84 e0 0a 00 00    	je     41c8 <parse_transform_no_compose+0xf08>
    36e8:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    36ef:	ff ff ff 
    36f2:	89 06                	mov    %eax,(%esi)
    36f4:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    36f7:	8b 55 bc             	mov    -0x44(%ebp),%edx
    36fa:	89 4d b4             	mov    %ecx,-0x4c(%ebp)
    36fd:	e9 78 fc ff ff       	jmp    337a <parse_transform_no_compose+0xba>
    3702:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3708:	89 f0                	mov    %esi,%eax
    370a:	e8 91 e8 ff ff       	call   1fa0 <next_token>
    370f:	e9 29 fe ff ff       	jmp    353d <parse_transform_no_compose+0x27d>
    3714:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3718:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    371d:	89 f0                	mov    %esi,%eax
    371f:	e8 7c e7 ff ff       	call   1ea0 <syntax_error.part.2>
    3724:	e9 de fe ff ff       	jmp    3607 <parse_transform_no_compose+0x347>
    3729:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3730:	8b 0e                	mov    (%esi),%ecx
    3732:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    3739:	85 c9                	test   %ecx,%ecx
    373b:	0f 85 cf fc ff ff    	jne    3410 <parse_transform_no_compose+0x150>
    3741:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    3748:	0f 84 4a 02 00 00    	je     3998 <parse_transform_no_compose+0x6d8>
    374e:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    3755:	ff ff ff 
    3758:	89 06                	mov    %eax,(%esi)
    375a:	e9 69 fc ff ff       	jmp    33c8 <parse_transform_no_compose+0x108>
    375f:	90                   	nop
    3760:	8b 7d b8             	mov    -0x48(%ebp),%edi
    3763:	85 ff                	test   %edi,%edi
    3765:	0f 84 57 0b 00 00    	je     42c2 <parse_transform_no_compose+0x1002>
    376b:	8b 7d b8             	mov    -0x48(%ebp),%edi
    376e:	8b 4f 04             	mov    0x4(%edi),%ecx
    3771:	41                   	inc    %ecx
    3772:	89 4f 04             	mov    %ecx,0x4(%edi)
    3775:	89 44 24 0c          	mov    %eax,0xc(%esp)
    3779:	8d 45 e0             	lea    -0x20(%ebp),%eax
    377c:	89 7c 24 08          	mov    %edi,0x8(%esp)
    3780:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)
    3787:	00 
    3788:	89 04 24             	mov    %eax,(%esp)
    378b:	e8 d0 9e 00 00       	call   d660 <bithenge_binary_expression>
    3790:	85 c0                	test   %eax,%eax
    3792:	0f 84 86 fd ff ff    	je     351e <parse_transform_no_compose+0x25e>
    3798:	8b 16                	mov    (%esi),%edx
    379a:	85 d2                	test   %edx,%edx
    379c:	0f 84 39 ff ff ff    	je     36db <parse_transform_no_compose+0x41b>
    37a2:	e9 09 fe ff ff       	jmp    35b0 <parse_transform_no_compose+0x2f0>
    37a7:	90                   	nop
    37a8:	8b 06                	mov    (%esi),%eax
    37aa:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    37ad:	85 c0                	test   %eax,%eax
    37af:	75 1d                	jne    37ce <parse_transform_no_compose+0x50e>
    37b1:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    37b8:	0f 84 cb 04 00 00    	je     3c89 <parse_transform_no_compose+0x9c9>
    37be:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    37c5:	ff ff ff 
    37c8:	c7 06 fe ff ff ff    	movl   $0xfffffffe,(%esi)
    37ce:	8b 45 b4             	mov    -0x4c(%ebp),%eax
    37d1:	89 45 c0             	mov    %eax,-0x40(%ebp)
    37d4:	e9 84 fd ff ff       	jmp    355d <parse_transform_no_compose+0x29d>
    37d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    37e0:	8b 06                	mov    (%esi),%eax
    37e2:	85 c0                	test   %eax,%eax
    37e4:	0f 85 73 fd ff ff    	jne    355d <parse_transform_no_compose+0x29d>
    37ea:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    37f1:	0f 84 a5 04 00 00    	je     3c9c <parse_transform_no_compose+0x9dc>
    37f7:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    37fe:	ff ff ff 
    3801:	c7 06 fe ff ff ff    	movl   $0xfffffffe,(%esi)
    3807:	e9 51 fd ff ff       	jmp    355d <parse_transform_no_compose+0x29d>
    380c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3810:	89 f0                	mov    %esi,%eax
    3812:	e8 89 e7 ff ff       	call   1fa0 <next_token>
    3817:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    381d:	83 f8 7b             	cmp    $0x7b,%eax
    3820:	0f 85 3f fb ff ff    	jne    3365 <parse_transform_no_compose+0xa5>
    3826:	89 f0                	mov    %esi,%eax
    3828:	e8 73 e7 ff ff       	call   1fa0 <next_token>
    382d:	e9 a2 fc ff ff       	jmp    34d4 <parse_transform_no_compose+0x214>
    3832:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3838:	89 f0                	mov    %esi,%eax
    383a:	e8 61 e7 ff ff       	call   1fa0 <next_token>
    383f:	e9 72 fc ff ff       	jmp    34b6 <parse_transform_no_compose+0x1f6>
    3844:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3848:	89 f0                	mov    %esi,%eax
    384a:	e8 51 e7 ff ff       	call   1fa0 <next_token>
    384f:	31 d2                	xor    %edx,%edx
    3851:	c6 86 34 10 00 00 00 	movb   $0x0,0x1034(%esi)
    3858:	89 f0                	mov    %esi,%eax
    385a:	e8 11 f0 ff ff       	call   2870 <parse_expression_precedence>
    385f:	83 be 20 10 00 00 29 	cmpl   $0x29,0x1020(%esi)
    3866:	89 c3                	mov    %eax,%ebx
    3868:	0f 84 4a 01 00 00    	je     39b8 <parse_transform_no_compose+0x6f8>
    386e:	8b 16                	mov    (%esi),%edx
    3870:	85 d2                	test   %edx,%edx
    3872:	0f 84 84 02 00 00    	je     3afc <parse_transform_no_compose+0x83c>
    3878:	85 db                	test   %ebx,%ebx
    387a:	74 24                	je     38a0 <parse_transform_no_compose+0x5e0>
    387c:	8b 13                	mov    (%ebx),%edx
    387e:	85 d2                	test   %edx,%edx
    3880:	0f 84 fc 09 00 00    	je     4282 <parse_transform_no_compose+0xfc2>
    3886:	8b 43 04             	mov    0x4(%ebx),%eax
    3889:	85 c0                	test   %eax,%eax
    388b:	0f 84 d5 09 00 00    	je     4266 <parse_transform_no_compose+0xfa6>
    3891:	48                   	dec    %eax
    3892:	89 43 04             	mov    %eax,0x4(%ebx)
    3895:	85 c0                	test   %eax,%eax
    3897:	75 07                	jne    38a0 <parse_transform_no_compose+0x5e0>
    3899:	89 1c 24             	mov    %ebx,(%esp)
    389c:	ff 52 04             	call   *0x4(%edx)
    389f:	90                   	nop
    38a0:	31 c9                	xor    %ecx,%ecx
    38a2:	e9 12 fc ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    38a7:	90                   	nop
    38a8:	8b 1e                	mov    (%esi),%ebx
    38aa:	31 c9                	xor    %ecx,%ecx
    38ac:	85 db                	test   %ebx,%ebx
    38ae:	0f 85 05 fc ff ff    	jne    34b9 <parse_transform_no_compose+0x1f9>
    38b4:	ba 0c d0 02 00       	mov    $0x2d00c,%edx
    38b9:	89 f0                	mov    %esi,%eax
    38bb:	89 4d b0             	mov    %ecx,-0x50(%ebp)
    38be:	e8 dd e5 ff ff       	call   1ea0 <syntax_error.part.2>
    38c3:	8b 4d b0             	mov    -0x50(%ebp),%ecx
    38c6:	e9 ee fb ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    38cb:	90                   	nop
    38cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    38d0:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    38d3:	8b 5d a8             	mov    -0x58(%ebp),%ebx
    38d6:	89 c2                	mov    %eax,%edx
    38d8:	e9 9d fa ff ff       	jmp    337a <parse_transform_no_compose+0xba>
    38dd:	8d 76 00             	lea    0x0(%esi),%esi
    38e0:	8b 96 24 10 00 00    	mov    0x1024(%esi),%edx
    38e6:	8b 5e 04             	mov    0x4(%esi),%ebx
    38e9:	89 55 c4             	mov    %edx,-0x3c(%ebp)
    38ec:	89 d7                	mov    %edx,%edi
    38ee:	85 db                	test   %ebx,%ebx
    38f0:	75 11                	jne    3903 <parse_transform_no_compose+0x643>
    38f2:	e9 8b 01 00 00       	jmp    3a82 <parse_transform_no_compose+0x7c2>
    38f7:	90                   	nop
    38f8:	8b 5b 08             	mov    0x8(%ebx),%ebx
    38fb:	85 db                	test   %ebx,%ebx
    38fd:	0f 84 7f 01 00 00    	je     3a82 <parse_transform_no_compose+0x7c2>
    3903:	89 7c 24 04          	mov    %edi,0x4(%esp)
    3907:	8b 03                	mov    (%ebx),%eax
    3909:	89 04 24             	mov    %eax,(%esp)
    390c:	e8 0f 0c 01 00       	call   14520 <str_cmp>
    3911:	85 c0                	test   %eax,%eax
    3913:	75 e3                	jne    38f8 <parse_transform_no_compose+0x638>
    3915:	8b 43 04             	mov    0x4(%ebx),%eax
    3918:	85 c0                	test   %eax,%eax
    391a:	0f 84 c3 01 00 00    	je     3ae3 <parse_transform_no_compose+0x823>
    3920:	8b 50 04             	mov    0x4(%eax),%edx
    3923:	42                   	inc    %edx
    3924:	89 50 04             	mov    %edx,0x4(%eax)
    3927:	89 45 d0             	mov    %eax,-0x30(%ebp)
    392a:	89 f0                	mov    %esi,%eax
    392c:	e8 6f e6 ff ff       	call   1fa0 <next_token>
    3931:	83 be 20 10 00 00 28 	cmpl   $0x28,0x1020(%esi)
    3938:	0f 84 a2 06 00 00    	je     3fe0 <parse_transform_no_compose+0xd20>
    393e:	31 db                	xor    %ebx,%ebx
    3940:	31 ff                	xor    %edi,%edi
    3942:	8b 06                	mov    (%esi),%eax
    3944:	85 c0                	test   %eax,%eax
    3946:	0f 84 99 04 00 00    	je     3de5 <parse_transform_no_compose+0xb25>
    394c:	4b                   	dec    %ebx
    394d:	83 fb ff             	cmp    $0xffffffff,%ebx
    3950:	0f 84 bd 07 00 00    	je     4113 <parse_transform_no_compose+0xe53>
    3956:	8b 04 9f             	mov    (%edi,%ebx,4),%eax
    3959:	85 c0                	test   %eax,%eax
    395b:	74 ef                	je     394c <parse_transform_no_compose+0x68c>
    395d:	8b 08                	mov    (%eax),%ecx
    395f:	85 c9                	test   %ecx,%ecx
    3961:	0f 84 1b 09 00 00    	je     4282 <parse_transform_no_compose+0xfc2>
    3967:	8b 50 04             	mov    0x4(%eax),%edx
    396a:	85 d2                	test   %edx,%edx
    396c:	0f 84 f4 08 00 00    	je     4266 <parse_transform_no_compose+0xfa6>
    3972:	4a                   	dec    %edx
    3973:	89 50 04             	mov    %edx,0x4(%eax)
    3976:	85 d2                	test   %edx,%edx
    3978:	75 d2                	jne    394c <parse_transform_no_compose+0x68c>
    397a:	89 04 24             	mov    %eax,(%esp)
    397d:	ff 51 04             	call   *0x4(%ecx)
    3980:	eb ca                	jmp    394c <parse_transform_no_compose+0x68c>
    3982:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3988:	31 d2                	xor    %edx,%edx
    398a:	89 f0                	mov    %esi,%eax
    398c:	e8 3f 16 00 00       	call   4fd0 <parse_if>
    3991:	89 c1                	mov    %eax,%ecx
    3993:	e9 21 fb ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    3998:	8b 8e 24 10 00 00    	mov    0x1024(%esi),%ecx
    399e:	89 45 ac             	mov    %eax,-0x54(%ebp)
    39a1:	89 0c 24             	mov    %ecx,(%esp)
    39a4:	89 55 b0             	mov    %edx,-0x50(%ebp)
    39a7:	e8 34 c8 01 00       	call   201e0 <free>
    39ac:	8b 55 b0             	mov    -0x50(%ebp),%edx
    39af:	8b 45 ac             	mov    -0x54(%ebp),%eax
    39b2:	e9 97 fd ff ff       	jmp    374e <parse_transform_no_compose+0x48e>
    39b7:	90                   	nop
    39b8:	89 f0                	mov    %esi,%eax
    39ba:	e8 e1 e5 ff ff       	call   1fa0 <next_token>
    39bf:	8b 06                	mov    (%esi),%eax
    39c1:	85 c0                	test   %eax,%eax
    39c3:	0f 85 af fe ff ff    	jne    3878 <parse_transform_no_compose+0x5b8>
    39c9:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    39cc:	80 be 34 10 00 00 00 	cmpb   $0x0,0x1034(%esi)
    39d3:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    39d7:	89 04 24             	mov    %eax,(%esp)
    39da:	0f 85 98 00 00 00    	jne    3a78 <parse_transform_no_compose+0x7b8>
    39e0:	e8 bb a1 00 00       	call   dba0 <bithenge_inputless_transform>
    39e5:	85 c0                	test   %eax,%eax
    39e7:	0f 84 c9 fa ff ff    	je     34b6 <parse_transform_no_compose+0x1f6>
    39ed:	8b 16                	mov    (%esi),%edx
    39ef:	85 d2                	test   %edx,%edx
    39f1:	0f 85 a9 fe ff ff    	jne    38a0 <parse_transform_no_compose+0x5e0>
    39f7:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    39fe:	0f 84 44 08 00 00    	je     4248 <parse_transform_no_compose+0xf88>
    3a04:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    3a0b:	ff ff ff 
    3a0e:	89 06                	mov    %eax,(%esi)
    3a10:	31 c9                	xor    %ecx,%ecx
    3a12:	e9 a2 fa ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    3a17:	90                   	nop
    3a18:	89 f0                	mov    %esi,%eax
    3a1a:	e8 81 e5 ff ff       	call   1fa0 <next_token>
    3a1f:	83 be 20 10 00 00 7b 	cmpl   $0x7b,0x1020(%esi)
    3a26:	0f 84 f2 04 00 00    	je     3f1e <parse_transform_no_compose+0xc5e>
    3a2c:	8b 3e                	mov    (%esi),%edi
    3a2e:	85 ff                	test   %edi,%edi
    3a30:	75 0c                	jne    3a3e <parse_transform_no_compose+0x77e>
    3a32:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3a37:	89 f0                	mov    %esi,%eax
    3a39:	e8 62 e4 ff ff       	call   1ea0 <syntax_error.part.2>
    3a3e:	89 f0                	mov    %esi,%eax
    3a40:	e8 9b 0b 00 00       	call   45e0 <parse_struct>
    3a45:	83 be 20 10 00 00 7d 	cmpl   $0x7d,0x1020(%esi)
    3a4c:	89 c1                	mov    %eax,%ecx
    3a4e:	0f 84 b8 04 00 00    	je     3f0c <parse_transform_no_compose+0xc4c>
    3a54:	8b 1e                	mov    (%esi),%ebx
    3a56:	85 db                	test   %ebx,%ebx
    3a58:	0f 85 5b fa ff ff    	jne    34b9 <parse_transform_no_compose+0x1f9>
    3a5e:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3a63:	89 f0                	mov    %esi,%eax
    3a65:	89 4d b0             	mov    %ecx,-0x50(%ebp)
    3a68:	e8 33 e4 ff ff       	call   1ea0 <syntax_error.part.2>
    3a6d:	8b 4d b0             	mov    -0x50(%ebp),%ecx
    3a70:	e9 44 fa ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    3a75:	8d 76 00             	lea    0x0(%esi),%esi
    3a78:	e8 63 a0 00 00       	call   dae0 <bithenge_expression_transform>
    3a7d:	e9 63 ff ff ff       	jmp    39e5 <parse_transform_no_compose+0x725>
    3a82:	a1 a0 02 03 00       	mov    0x302a0,%eax
    3a87:	31 db                	xor    %ebx,%ebx
    3a89:	bf 08 00 00 00       	mov    $0x8,%edi
    3a8e:	8b 00                	mov    (%eax),%eax
    3a90:	85 c0                	test   %eax,%eax
    3a92:	0f 84 52 04 00 00    	je     3eea <parse_transform_no_compose+0xc2a>
    3a98:	89 75 c0             	mov    %esi,-0x40(%ebp)
    3a9b:	89 fe                	mov    %edi,%esi
    3a9d:	8b 7d c4             	mov    -0x3c(%ebp),%edi
    3aa0:	eb 1d                	jmp    3abf <parse_transform_no_compose+0x7ff>
    3aa2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    3aa8:	a1 a0 02 03 00       	mov    0x302a0,%eax
    3aad:	8d 4e 08             	lea    0x8(%esi),%ecx
    3ab0:	89 f3                	mov    %esi,%ebx
    3ab2:	8b 04 30             	mov    (%eax,%esi,1),%eax
    3ab5:	85 c0                	test   %eax,%eax
    3ab7:	0f 84 2a 04 00 00    	je     3ee7 <parse_transform_no_compose+0xc27>
    3abd:	89 ce                	mov    %ecx,%esi
    3abf:	89 7c 24 04          	mov    %edi,0x4(%esp)
    3ac3:	89 04 24             	mov    %eax,(%esp)
    3ac6:	e8 55 0a 01 00       	call   14520 <str_cmp>
    3acb:	85 c0                	test   %eax,%eax
    3acd:	75 d9                	jne    3aa8 <parse_transform_no_compose+0x7e8>
    3acf:	a1 a0 02 03 00       	mov    0x302a0,%eax
    3ad4:	8b 75 c0             	mov    -0x40(%ebp),%esi
    3ad7:	8b 44 18 04          	mov    0x4(%eax,%ebx,1),%eax
    3adb:	85 c0                	test   %eax,%eax
    3add:	0f 85 3d fe ff ff    	jne    3920 <parse_transform_no_compose+0x660>
    3ae3:	e8 16 21 00 00       	call   5bfe <bithenge_transform_inc_ref.part.5>
    3ae8:	89 3c 24             	mov    %edi,(%esp)
    3aeb:	ff 52 0c             	call   *0xc(%edx)
    3aee:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    3af1:	8b 55 bc             	mov    -0x44(%ebp),%edx
    3af4:	89 4d b4             	mov    %ecx,-0x4c(%ebp)
    3af7:	e9 7e f8 ff ff       	jmp    337a <parse_transform_no_compose+0xba>
    3afc:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3b01:	89 f0                	mov    %esi,%eax
    3b03:	e8 98 e3 ff ff       	call   1ea0 <syntax_error.part.2>
    3b08:	e9 b2 fe ff ff       	jmp    39bf <parse_transform_no_compose+0x6ff>
    3b0d:	8d 76 00             	lea    0x0(%esi),%esi
    3b10:	89 f0                	mov    %esi,%eax
    3b12:	e8 89 e4 ff ff       	call   1fa0 <next_token>
    3b17:	83 be 20 10 00 00 7b 	cmpl   $0x7b,0x1020(%esi)
    3b1e:	0f 84 59 01 00 00    	je     3c7d <parse_transform_no_compose+0x9bd>
    3b24:	8b 06                	mov    (%esi),%eax
    3b26:	85 c0                	test   %eax,%eax
    3b28:	75 0c                	jne    3b36 <parse_transform_no_compose+0x876>
    3b2a:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3b2f:	89 f0                	mov    %esi,%eax
    3b31:	e8 6a e3 ff ff       	call   1ea0 <syntax_error.part.2>
    3b36:	89 f0                	mov    %esi,%eax
    3b38:	e8 73 08 00 00       	call   43b0 <parse_transform>
    3b3d:	8b 96 20 10 00 00    	mov    0x1020(%esi),%edx
    3b43:	89 c3                	mov    %eax,%ebx
    3b45:	83 fa 7d             	cmp    $0x7d,%edx
    3b48:	0f 84 1d 01 00 00    	je     3c6b <parse_transform_no_compose+0x9ab>
    3b4e:	8b 06                	mov    (%esi),%eax
    3b50:	85 c0                	test   %eax,%eax
    3b52:	75 12                	jne    3b66 <parse_transform_no_compose+0x8a6>
    3b54:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3b59:	89 f0                	mov    %esi,%eax
    3b5b:	e8 40 e3 ff ff       	call   1ea0 <syntax_error.part.2>
    3b60:	8b 96 20 10 00 00    	mov    0x1020(%esi),%edx
    3b66:	83 fa 98             	cmp    $0xffffff98,%edx
    3b69:	0f 84 ea 00 00 00    	je     3c59 <parse_transform_no_compose+0x999>
    3b6f:	8b 06                	mov    (%esi),%eax
    3b71:	85 c0                	test   %eax,%eax
    3b73:	75 12                	jne    3b87 <parse_transform_no_compose+0x8c7>
    3b75:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3b7a:	89 f0                	mov    %esi,%eax
    3b7c:	e8 1f e3 ff ff       	call   1ea0 <syntax_error.part.2>
    3b81:	8b 96 20 10 00 00    	mov    0x1020(%esi),%edx
    3b87:	83 fa 28             	cmp    $0x28,%edx
    3b8a:	0f 84 bd 00 00 00    	je     3c4d <parse_transform_no_compose+0x98d>
    3b90:	8b 06                	mov    (%esi),%eax
    3b92:	85 c0                	test   %eax,%eax
    3b94:	75 0c                	jne    3ba2 <parse_transform_no_compose+0x8e2>
    3b96:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3b9b:	89 f0                	mov    %esi,%eax
    3b9d:	e8 fe e2 ff ff       	call   1ea0 <syntax_error.part.2>
    3ba2:	31 d2                	xor    %edx,%edx
    3ba4:	89 f0                	mov    %esi,%eax
    3ba6:	e8 c5 ec ff ff       	call   2870 <parse_expression_precedence>
    3bab:	83 be 20 10 00 00 29 	cmpl   $0x29,0x1020(%esi)
    3bb2:	89 c7                	mov    %eax,%edi
    3bb4:	74 67                	je     3c1d <parse_transform_no_compose+0x95d>
    3bb6:	8b 06                	mov    (%esi),%eax
    3bb8:	85 c0                	test   %eax,%eax
    3bba:	0f 84 16 03 00 00    	je     3ed6 <parse_transform_no_compose+0xc16>
    3bc0:	85 ff                	test   %edi,%edi
    3bc2:	74 23                	je     3be7 <parse_transform_no_compose+0x927>
    3bc4:	8b 07                	mov    (%edi),%eax
    3bc6:	85 c0                	test   %eax,%eax
    3bc8:	0f 84 b4 06 00 00    	je     4282 <parse_transform_no_compose+0xfc2>
    3bce:	8b 57 04             	mov    0x4(%edi),%edx
    3bd1:	85 d2                	test   %edx,%edx
    3bd3:	0f 84 8d 06 00 00    	je     4266 <parse_transform_no_compose+0xfa6>
    3bd9:	4a                   	dec    %edx
    3bda:	89 57 04             	mov    %edx,0x4(%edi)
    3bdd:	85 d2                	test   %edx,%edx
    3bdf:	75 06                	jne    3be7 <parse_transform_no_compose+0x927>
    3be1:	89 3c 24             	mov    %edi,(%esp)
    3be4:	ff 50 04             	call   *0x4(%eax)
    3be7:	85 db                	test   %ebx,%ebx
    3be9:	0f 84 b1 fc ff ff    	je     38a0 <parse_transform_no_compose+0x5e0>
    3bef:	8b 03                	mov    (%ebx),%eax
    3bf1:	85 c0                	test   %eax,%eax
    3bf3:	0f 84 68 06 00 00    	je     4261 <parse_transform_no_compose+0xfa1>
    3bf9:	8b 53 04             	mov    0x4(%ebx),%edx
    3bfc:	85 d2                	test   %edx,%edx
    3bfe:	0f 84 28 06 00 00    	je     422c <parse_transform_no_compose+0xf6c>
    3c04:	4a                   	dec    %edx
    3c05:	89 53 04             	mov    %edx,0x4(%ebx)
    3c08:	85 d2                	test   %edx,%edx
    3c0a:	0f 85 90 fc ff ff    	jne    38a0 <parse_transform_no_compose+0x5e0>
    3c10:	89 1c 24             	mov    %ebx,(%esp)
    3c13:	ff 50 0c             	call   *0xc(%eax)
    3c16:	31 c9                	xor    %ecx,%ecx
    3c18:	e9 9c f8 ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    3c1d:	89 f0                	mov    %esi,%eax
    3c1f:	e8 7c e3 ff ff       	call   1fa0 <next_token>
    3c24:	8b 0e                	mov    (%esi),%ecx
    3c26:	85 c9                	test   %ecx,%ecx
    3c28:	75 96                	jne    3bc0 <parse_transform_no_compose+0x900>
    3c2a:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    3c2d:	89 7c 24 08          	mov    %edi,0x8(%esp)
    3c31:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    3c35:	89 04 24             	mov    %eax,(%esp)
    3c38:	e8 33 3b 00 00       	call   7770 <bithenge_do_while_transform>
    3c3d:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    3c40:	85 c0                	test   %eax,%eax
    3c42:	0f 84 71 f8 ff ff    	je     34b9 <parse_transform_no_compose+0x1f9>
    3c48:	e9 a0 fd ff ff       	jmp    39ed <parse_transform_no_compose+0x72d>
    3c4d:	89 f0                	mov    %esi,%eax
    3c4f:	e8 4c e3 ff ff       	call   1fa0 <next_token>
    3c54:	e9 49 ff ff ff       	jmp    3ba2 <parse_transform_no_compose+0x8e2>
    3c59:	89 f0                	mov    %esi,%eax
    3c5b:	e8 40 e3 ff ff       	call   1fa0 <next_token>
    3c60:	8b 96 20 10 00 00    	mov    0x1020(%esi),%edx
    3c66:	e9 1c ff ff ff       	jmp    3b87 <parse_transform_no_compose+0x8c7>
    3c6b:	89 f0                	mov    %esi,%eax
    3c6d:	e8 2e e3 ff ff       	call   1fa0 <next_token>
    3c72:	8b 96 20 10 00 00    	mov    0x1020(%esi),%edx
    3c78:	e9 e9 fe ff ff       	jmp    3b66 <parse_transform_no_compose+0x8a6>
    3c7d:	89 f0                	mov    %esi,%eax
    3c7f:	e8 1c e3 ff ff       	call   1fa0 <next_token>
    3c84:	e9 ad fe ff ff       	jmp    3b36 <parse_transform_no_compose+0x876>
    3c89:	8b 86 24 10 00 00    	mov    0x1024(%esi),%eax
    3c8f:	89 04 24             	mov    %eax,(%esp)
    3c92:	e8 49 c5 01 00       	call   201e0 <free>
    3c97:	e9 22 fb ff ff       	jmp    37be <parse_transform_no_compose+0x4fe>
    3c9c:	8b 86 24 10 00 00    	mov    0x1024(%esi),%eax
    3ca2:	89 04 24             	mov    %eax,(%esp)
    3ca5:	e8 36 c5 01 00       	call   201e0 <free>
    3caa:	e9 48 fb ff ff       	jmp    37f7 <parse_transform_no_compose+0x537>
    3caf:	90                   	nop
    3cb0:	89 f0                	mov    %esi,%eax
    3cb2:	e8 e9 e2 ff ff       	call   1fa0 <next_token>
    3cb7:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    3cbd:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    3cc4:	83 f8 28             	cmp    $0x28,%eax
    3cc7:	0f 84 5d 02 00 00    	je     3f2a <parse_transform_no_compose+0xc6a>
    3ccd:	83 f8 7b             	cmp    $0x7b,%eax
    3cd0:	0f 84 03 01 00 00    	je     3dd9 <parse_transform_no_compose+0xb19>
    3cd6:	8b 3e                	mov    (%esi),%edi
    3cd8:	85 ff                	test   %edi,%edi
    3cda:	75 0c                	jne    3ce8 <parse_transform_no_compose+0xa28>
    3cdc:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3ce1:	89 f0                	mov    %esi,%eax
    3ce3:	e8 b8 e1 ff ff       	call   1ea0 <syntax_error.part.2>
    3ce8:	89 f0                	mov    %esi,%eax
    3cea:	e8 c1 06 00 00       	call   43b0 <parse_transform>
    3cef:	83 be 20 10 00 00 7d 	cmpl   $0x7d,0x1020(%esi)
    3cf6:	89 45 dc             	mov    %eax,-0x24(%ebp)
    3cf9:	74 6d                	je     3d68 <parse_transform_no_compose+0xaa8>
    3cfb:	8b 1e                	mov    (%esi),%ebx
    3cfd:	85 db                	test   %ebx,%ebx
    3cff:	0f 84 ca 02 00 00    	je     3fcf <parse_transform_no_compose+0xd0f>
    3d05:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    3d08:	85 c0                	test   %eax,%eax
    3d0a:	74 23                	je     3d2f <parse_transform_no_compose+0xa6f>
    3d0c:	8b 10                	mov    (%eax),%edx
    3d0e:	85 d2                	test   %edx,%edx
    3d10:	0f 84 4b 05 00 00    	je     4261 <parse_transform_no_compose+0xfa1>
    3d16:	8b 48 04             	mov    0x4(%eax),%ecx
    3d19:	85 c9                	test   %ecx,%ecx
    3d1b:	0f 84 0b 05 00 00    	je     422c <parse_transform_no_compose+0xf6c>
    3d21:	49                   	dec    %ecx
    3d22:	89 48 04             	mov    %ecx,0x4(%eax)
    3d25:	85 c9                	test   %ecx,%ecx
    3d27:	75 06                	jne    3d2f <parse_transform_no_compose+0xa6f>
    3d29:	89 04 24             	mov    %eax,(%esp)
    3d2c:	ff 52 0c             	call   *0xc(%edx)
    3d2f:	8b 45 dc             	mov    -0x24(%ebp),%eax
    3d32:	85 c0                	test   %eax,%eax
    3d34:	0f 84 66 fb ff ff    	je     38a0 <parse_transform_no_compose+0x5e0>
    3d3a:	8b 10                	mov    (%eax),%edx
    3d3c:	85 d2                	test   %edx,%edx
    3d3e:	0f 84 1d 05 00 00    	je     4261 <parse_transform_no_compose+0xfa1>
    3d44:	8b 48 04             	mov    0x4(%eax),%ecx
    3d47:	85 c9                	test   %ecx,%ecx
    3d49:	0f 84 dd 04 00 00    	je     422c <parse_transform_no_compose+0xf6c>
    3d4f:	49                   	dec    %ecx
    3d50:	89 48 04             	mov    %ecx,0x4(%eax)
    3d53:	85 c9                	test   %ecx,%ecx
    3d55:	0f 85 45 fb ff ff    	jne    38a0 <parse_transform_no_compose+0x5e0>
    3d5b:	89 04 24             	mov    %eax,(%esp)
    3d5e:	ff 52 0c             	call   *0xc(%edx)
    3d61:	31 c9                	xor    %ecx,%ecx
    3d63:	e9 51 f7 ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    3d68:	89 f0                	mov    %esi,%eax
    3d6a:	e8 31 e2 ff ff       	call   1fa0 <next_token>
    3d6f:	8b 0e                	mov    (%esi),%ecx
    3d71:	85 c9                	test   %ecx,%ecx
    3d73:	75 90                	jne    3d05 <parse_transform_no_compose+0xa45>
    3d75:	8b 45 dc             	mov    -0x24(%ebp),%eax
    3d78:	8d 5d dc             	lea    -0x24(%ebp),%ebx
    3d7b:	89 44 24 04          	mov    %eax,0x4(%esp)
    3d7f:	89 1c 24             	mov    %ebx,(%esp)
    3d82:	e8 e9 85 00 00       	call   c370 <bithenge_partial_transform>
    3d87:	85 c0                	test   %eax,%eax
    3d89:	0f 85 6c 04 00 00    	jne    41fb <parse_transform_no_compose+0xf3b>
    3d8f:	8b 7d d4             	mov    -0x2c(%ebp),%edi
    3d92:	85 ff                	test   %edi,%edi
    3d94:	74 3b                	je     3dd1 <parse_transform_no_compose+0xb11>
    3d96:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
    3d9d:	e8 2e c3 01 00       	call   200d0 <malloc>
    3da2:	85 c0                	test   %eax,%eax
    3da4:	0f 84 34 05 00 00    	je     42de <parse_transform_no_compose+0x101e>
    3daa:	8b 55 dc             	mov    -0x24(%ebp),%edx
    3dad:	89 10                	mov    %edx,(%eax)
    3daf:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    3db2:	89 50 04             	mov    %edx,0x4(%eax)
    3db5:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
    3dbc:	00 
    3dbd:	89 44 24 04          	mov    %eax,0x4(%esp)
    3dc1:	89 1c 24             	mov    %ebx,(%esp)
    3dc4:	e8 17 83 00 00       	call   c0e0 <bithenge_new_composed_transform>
    3dc9:	85 c0                	test   %eax,%eax
    3dcb:	0f 85 1c fc ff ff    	jne    39ed <parse_transform_no_compose+0x72d>
    3dd1:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    3dd4:	e9 e0 f6 ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    3dd9:	89 f0                	mov    %esi,%eax
    3ddb:	e8 c0 e1 ff ff       	call   1fa0 <next_token>
    3de0:	e9 03 ff ff ff       	jmp    3ce8 <parse_transform_no_compose+0xa28>
    3de5:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    3de8:	85 c9                	test   %ecx,%ecx
    3dea:	0f 84 a4 05 00 00    	je     4394 <parse_transform_no_compose+0x10d4>
    3df0:	3b 59 08             	cmp    0x8(%ecx),%ebx
    3df3:	74 19                	je     3e0e <parse_transform_no_compose+0xb4e>
    3df5:	89 f0                	mov    %esi,%eax
    3df7:	ba e4 cf 02 00       	mov    $0x2cfe4,%edx
    3dfc:	e8 9f e0 ff ff       	call   1ea0 <syntax_error.part.2>
    3e01:	8b 06                	mov    (%esi),%eax
    3e03:	85 c0                	test   %eax,%eax
    3e05:	0f 85 41 fb ff ff    	jne    394c <parse_transform_no_compose+0x68c>
    3e0b:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    3e0e:	85 db                	test   %ebx,%ebx
    3e10:	0f 84 a3 f6 ff ff    	je     34b9 <parse_transform_no_compose+0x1f9>
    3e16:	8d 45 d0             	lea    -0x30(%ebp),%eax
    3e19:	89 7c 24 08          	mov    %edi,0x8(%esp)
    3e1d:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    3e21:	89 04 24             	mov    %eax,(%esp)
    3e24:	e8 47 9b 00 00       	call   d970 <bithenge_param_wrapper>
    3e29:	85 c0                	test   %eax,%eax
    3e2b:	0f 85 76 02 00 00    	jne    40a7 <parse_transform_no_compose+0xde7>
    3e31:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    3e34:	e9 80 f6 ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    3e39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    3e40:	89 f0                	mov    %esi,%eax
    3e42:	31 ff                	xor    %edi,%edi
    3e44:	e8 57 e1 ff ff       	call   1fa0 <next_token>
    3e49:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    3e4f:	83 f8 28             	cmp    $0x28,%eax
    3e52:	0f 84 79 02 00 00    	je     40d1 <parse_transform_no_compose+0xe11>
    3e58:	83 f8 7b             	cmp    $0x7b,%eax
    3e5b:	74 67                	je     3ec4 <parse_transform_no_compose+0xc04>
    3e5d:	8b 06                	mov    (%esi),%eax
    3e5f:	85 c0                	test   %eax,%eax
    3e61:	75 0c                	jne    3e6f <parse_transform_no_compose+0xbaf>
    3e63:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3e68:	89 f0                	mov    %esi,%eax
    3e6a:	e8 31 e0 ff ff       	call   1ea0 <syntax_error.part.2>
    3e6f:	89 f0                	mov    %esi,%eax
    3e71:	e8 3a 05 00 00       	call   43b0 <parse_transform>
    3e76:	83 be 20 10 00 00 7d 	cmpl   $0x7d,0x1020(%esi)
    3e7d:	89 c3                	mov    %eax,%ebx
    3e7f:	74 4c                	je     3ecd <parse_transform_no_compose+0xc0d>
    3e81:	8b 06                	mov    (%esi),%eax
    3e83:	85 c0                	test   %eax,%eax
    3e85:	0f 85 35 fd ff ff    	jne    3bc0 <parse_transform_no_compose+0x900>
    3e8b:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3e90:	89 f0                	mov    %esi,%eax
    3e92:	e8 09 e0 ff ff       	call   1ea0 <syntax_error.part.2>
    3e97:	8b 0e                	mov    (%esi),%ecx
    3e99:	85 c9                	test   %ecx,%ecx
    3e9b:	0f 85 1f fd ff ff    	jne    3bc0 <parse_transform_no_compose+0x900>
    3ea1:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    3ea4:	89 7c 24 08          	mov    %edi,0x8(%esp)
    3ea8:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    3eac:	89 04 24             	mov    %eax,(%esp)
    3eaf:	e8 8c 37 00 00       	call   7640 <bithenge_repeat_transform>
    3eb4:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    3eb7:	85 c0                	test   %eax,%eax
    3eb9:	0f 84 fa f5 ff ff    	je     34b9 <parse_transform_no_compose+0x1f9>
    3ebf:	e9 29 fb ff ff       	jmp    39ed <parse_transform_no_compose+0x72d>
    3ec4:	89 f0                	mov    %esi,%eax
    3ec6:	e8 d5 e0 ff ff       	call   1fa0 <next_token>
    3ecb:	eb a2                	jmp    3e6f <parse_transform_no_compose+0xbaf>
    3ecd:	89 f0                	mov    %esi,%eax
    3ecf:	e8 cc e0 ff ff       	call   1fa0 <next_token>
    3ed4:	eb c1                	jmp    3e97 <parse_transform_no_compose+0xbd7>
    3ed6:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3edb:	89 f0                	mov    %esi,%eax
    3edd:	e8 be df ff ff       	call   1ea0 <syntax_error.part.2>
    3ee2:	e9 3d fd ff ff       	jmp    3c24 <parse_transform_no_compose+0x964>
    3ee7:	8b 75 c0             	mov    -0x40(%ebp),%esi
    3eea:	8b 0e                	mov    (%esi),%ecx
    3eec:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    3ef3:	85 c9                	test   %ecx,%ecx
    3ef5:	0f 85 2f fa ff ff    	jne    392a <parse_transform_no_compose+0x66a>
    3efb:	ba 83 cf 02 00       	mov    $0x2cf83,%edx
    3f00:	89 f0                	mov    %esi,%eax
    3f02:	e8 99 df ff ff       	call   1ea0 <syntax_error.part.2>
    3f07:	e9 1e fa ff ff       	jmp    392a <parse_transform_no_compose+0x66a>
    3f0c:	89 f0                	mov    %esi,%eax
    3f0e:	89 4d b0             	mov    %ecx,-0x50(%ebp)
    3f11:	e8 8a e0 ff ff       	call   1fa0 <next_token>
    3f16:	8b 4d b0             	mov    -0x50(%ebp),%ecx
    3f19:	e9 9b f5 ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    3f1e:	89 f0                	mov    %esi,%eax
    3f20:	e8 7b e0 ff ff       	call   1fa0 <next_token>
    3f25:	e9 14 fb ff ff       	jmp    3a3e <parse_transform_no_compose+0x77e>
    3f2a:	89 f0                	mov    %esi,%eax
    3f2c:	e8 6f e0 ff ff       	call   1fa0 <next_token>
    3f31:	31 d2                	xor    %edx,%edx
    3f33:	89 f0                	mov    %esi,%eax
    3f35:	e8 36 e9 ff ff       	call   2870 <parse_expression_precedence>
    3f3a:	83 be 20 10 00 00 29 	cmpl   $0x29,0x1020(%esi)
    3f41:	89 45 d8             	mov    %eax,-0x28(%ebp)
    3f44:	0f 84 e6 01 00 00    	je     4130 <parse_transform_no_compose+0xe70>
    3f4a:	8b 3e                	mov    (%esi),%edi
    3f4c:	85 ff                	test   %edi,%edi
    3f4e:	75 0c                	jne    3f5c <parse_transform_no_compose+0xc9c>
    3f50:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3f55:	89 f0                	mov    %esi,%eax
    3f57:	e8 44 df ff ff       	call   1ea0 <syntax_error.part.2>
    3f5c:	8d 45 dc             	lea    -0x24(%ebp),%eax
    3f5f:	89 04 24             	mov    %eax,(%esp)
    3f62:	e8 c9 97 00 00       	call   d730 <bithenge_in_node_expression>
    3f67:	85 c0                	test   %eax,%eax
    3f69:	0f 85 cd 01 00 00    	jne    413c <parse_transform_no_compose+0xe7c>
    3f6f:	8b 0e                	mov    (%esi),%ecx
    3f71:	85 c9                	test   %ecx,%ecx
    3f73:	0f 85 e2 01 00 00    	jne    415b <parse_transform_no_compose+0xe9b>
    3f79:	8b 45 d8             	mov    -0x28(%ebp),%eax
    3f7c:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
    3f83:	00 
    3f84:	89 44 24 08          	mov    %eax,0x8(%esp)
    3f88:	8b 45 dc             	mov    -0x24(%ebp),%eax
    3f8b:	89 44 24 04          	mov    %eax,0x4(%esp)
    3f8f:	8d 45 d8             	lea    -0x28(%ebp),%eax
    3f92:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    3f99:	00 
    3f9a:	89 04 24             	mov    %eax,(%esp)
    3f9d:	e8 ce 98 00 00       	call   d870 <bithenge_subblob_expression>
    3fa2:	85 c0                	test   %eax,%eax
    3fa4:	0f 85 fd 00 00 00    	jne    40a7 <parse_transform_no_compose+0xde7>
    3faa:	8b 45 d8             	mov    -0x28(%ebp),%eax
    3fad:	89 44 24 04          	mov    %eax,0x4(%esp)
    3fb1:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    3fb4:	89 04 24             	mov    %eax,(%esp)
    3fb7:	e8 24 9b 00 00       	call   dae0 <bithenge_expression_transform>
    3fbc:	85 c0                	test   %eax,%eax
    3fbe:	0f 85 e3 00 00 00    	jne    40a7 <parse_transform_no_compose+0xde7>
    3fc4:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    3fca:	e9 fe fc ff ff       	jmp    3ccd <parse_transform_no_compose+0xa0d>
    3fcf:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    3fd4:	89 f0                	mov    %esi,%eax
    3fd6:	e8 c5 de ff ff       	call   1ea0 <syntax_error.part.2>
    3fdb:	e9 8f fd ff ff       	jmp    3d6f <parse_transform_no_compose+0xaaf>
    3fe0:	89 f0                	mov    %esi,%eax
    3fe2:	e8 b9 df ff ff       	call   1fa0 <next_token>
    3fe7:	8b 06                	mov    (%esi),%eax
    3fe9:	85 c0                	test   %eax,%eax
    3feb:	0f 85 af 02 00 00    	jne    42a0 <parse_transform_no_compose+0xfe0>
    3ff1:	31 d2                	xor    %edx,%edx
    3ff3:	31 db                	xor    %ebx,%ebx
    3ff5:	31 ff                	xor    %edi,%edi
    3ff7:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
    3ffe:	83 be 20 10 00 00 29 	cmpl   $0x29,0x1020(%esi)
    4005:	74 7e                	je     4085 <parse_transform_no_compose+0xdc5>
    4007:	8d 4a 01             	lea    0x1(%edx),%ecx
    400a:	8b 5d c0             	mov    -0x40(%ebp),%ebx
    400d:	89 c8                	mov    %ecx,%eax
    400f:	89 1c 24             	mov    %ebx,(%esp)
    4012:	c1 e0 02             	shl    $0x2,%eax
    4015:	89 55 b0             	mov    %edx,-0x50(%ebp)
    4018:	89 44 24 04          	mov    %eax,0x4(%esp)
    401c:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
    401f:	e8 0c c4 01 00       	call   20430 <realloc>
    4024:	8b 55 b0             	mov    -0x50(%ebp),%edx
    4027:	89 c7                	mov    %eax,%edi
    4029:	85 c0                	test   %eax,%eax
    402b:	0f 84 63 01 00 00    	je     4194 <parse_transform_no_compose+0xed4>
    4031:	8b 06                	mov    (%esi),%eax
    4033:	85 c0                	test   %eax,%eax
    4035:	0f 85 51 03 00 00    	jne    438c <parse_transform_no_compose+0x10cc>
    403b:	8d 1c 97             	lea    (%edi,%edx,4),%ebx
    403e:	89 f0                	mov    %esi,%eax
    4040:	31 d2                	xor    %edx,%edx
    4042:	e8 29 e8 ff ff       	call   2870 <parse_expression_precedence>
    4047:	89 03                	mov    %eax,(%ebx)
    4049:	8b 06                	mov    (%esi),%eax
    404b:	85 c0                	test   %eax,%eax
    404d:	75 26                	jne    4075 <parse_transform_no_compose+0xdb5>
    404f:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    4055:	83 f8 29             	cmp    $0x29,%eax
    4058:	0f 84 83 01 00 00    	je     41e1 <parse_transform_no_compose+0xf21>
    405e:	83 f8 2c             	cmp    $0x2c,%eax
    4061:	74 39                	je     409c <parse_transform_no_compose+0xddc>
    4063:	89 f0                	mov    %esi,%eax
    4065:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    406a:	e8 31 de ff ff       	call   1ea0 <syntax_error.part.2>
    406f:	8b 06                	mov    (%esi),%eax
    4071:	85 c0                	test   %eax,%eax
    4073:	74 1c                	je     4091 <parse_transform_no_compose+0xdd1>
    4075:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
    4078:	83 be 20 10 00 00 29 	cmpl   $0x29,0x1020(%esi)
    407f:	0f 85 c7 f8 ff ff    	jne    394c <parse_transform_no_compose+0x68c>
    4085:	89 f0                	mov    %esi,%eax
    4087:	e8 14 df ff ff       	call   1fa0 <next_token>
    408c:	e9 b1 f8 ff ff       	jmp    3942 <parse_transform_no_compose+0x682>
    4091:	89 7d c0             	mov    %edi,-0x40(%ebp)
    4094:	8b 55 c4             	mov    -0x3c(%ebp),%edx
    4097:	e9 6b ff ff ff       	jmp    4007 <parse_transform_no_compose+0xd47>
    409c:	89 f0                	mov    %esi,%eax
    409e:	e8 fd de ff ff       	call   1fa0 <next_token>
    40a3:	8b 06                	mov    (%esi),%eax
    40a5:	eb ca                	jmp    4071 <parse_transform_no_compose+0xdb1>
    40a7:	8b 16                	mov    (%esi),%edx
    40a9:	85 d2                	test   %edx,%edx
    40ab:	0f 85 ef f7 ff ff    	jne    38a0 <parse_transform_no_compose+0x5e0>
    40b1:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    40b8:	0f 84 c9 01 00 00    	je     4287 <parse_transform_no_compose+0xfc7>
    40be:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    40c5:	ff ff ff 
    40c8:	89 06                	mov    %eax,(%esi)
    40ca:	31 c9                	xor    %ecx,%ecx
    40cc:	e9 e8 f3 ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    40d1:	89 f0                	mov    %esi,%eax
    40d3:	e8 c8 de ff ff       	call   1fa0 <next_token>
    40d8:	31 d2                	xor    %edx,%edx
    40da:	89 f0                	mov    %esi,%eax
    40dc:	e8 8f e7 ff ff       	call   2870 <parse_expression_precedence>
    40e1:	89 c7                	mov    %eax,%edi
    40e3:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    40e9:	83 f8 29             	cmp    $0x29,%eax
    40ec:	0f 84 f7 00 00 00    	je     41e9 <parse_transform_no_compose+0xf29>
    40f2:	8b 16                	mov    (%esi),%edx
    40f4:	85 d2                	test   %edx,%edx
    40f6:	0f 85 5c fd ff ff    	jne    3e58 <parse_transform_no_compose+0xb98>
    40fc:	89 f0                	mov    %esi,%eax
    40fe:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    4103:	e8 98 dd ff ff       	call   1ea0 <syntax_error.part.2>
    4108:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    410e:	e9 45 fd ff ff       	jmp    3e58 <parse_transform_no_compose+0xb98>
    4113:	89 3c 24             	mov    %edi,(%esp)
    4116:	e8 c5 c0 01 00       	call   201e0 <free>
    411b:	8b 45 d0             	mov    -0x30(%ebp),%eax
    411e:	85 c0                	test   %eax,%eax
    4120:	0f 85 14 fc ff ff    	jne    3d3a <parse_transform_no_compose+0xa7a>
    4126:	31 c9                	xor    %ecx,%ecx
    4128:	e9 8c f3 ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    412d:	8d 76 00             	lea    0x0(%esi),%esi
    4130:	89 f0                	mov    %esi,%eax
    4132:	e8 69 de ff ff       	call   1fa0 <next_token>
    4137:	e9 20 fe ff ff       	jmp    3f5c <parse_transform_no_compose+0xc9c>
    413c:	8b 1e                	mov    (%esi),%ebx
    413e:	85 db                	test   %ebx,%ebx
    4140:	75 19                	jne    415b <parse_transform_no_compose+0xe9b>
    4142:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    4149:	0f 84 0b 02 00 00    	je     435a <parse_transform_no_compose+0x109a>
    414f:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    4156:	ff ff ff 
    4159:	89 06                	mov    %eax,(%esi)
    415b:	8b 45 d8             	mov    -0x28(%ebp),%eax
    415e:	85 c0                	test   %eax,%eax
    4160:	0f 84 3a f7 ff ff    	je     38a0 <parse_transform_no_compose+0x5e0>
    4166:	8b 10                	mov    (%eax),%edx
    4168:	85 d2                	test   %edx,%edx
    416a:	0f 84 12 01 00 00    	je     4282 <parse_transform_no_compose+0xfc2>
    4170:	8b 48 04             	mov    0x4(%eax),%ecx
    4173:	85 c9                	test   %ecx,%ecx
    4175:	0f 84 eb 00 00 00    	je     4266 <parse_transform_no_compose+0xfa6>
    417b:	49                   	dec    %ecx
    417c:	89 48 04             	mov    %ecx,0x4(%eax)
    417f:	85 c9                	test   %ecx,%ecx
    4181:	0f 85 19 f7 ff ff    	jne    38a0 <parse_transform_no_compose+0x5e0>
    4187:	89 04 24             	mov    %eax,(%esp)
    418a:	ff 52 04             	call   *0x4(%edx)
    418d:	31 c9                	xor    %ecx,%ecx
    418f:	e9 25 f3 ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    4194:	8b 06                	mov    (%esi),%eax
    4196:	85 c0                	test   %eax,%eax
    4198:	75 1d                	jne    41b7 <parse_transform_no_compose+0xef7>
    419a:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    41a1:	0f 84 02 01 00 00    	je     42a9 <parse_transform_no_compose+0xfe9>
    41a7:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    41ae:	ff ff ff 
    41b1:	c7 06 fe ff ff ff    	movl   $0xfffffffe,(%esi)
    41b7:	89 d3                	mov    %edx,%ebx
    41b9:	8b 7d c0             	mov    -0x40(%ebp),%edi
    41bc:	e9 b7 fe ff ff       	jmp    4078 <parse_transform_no_compose+0xdb8>
    41c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    41c8:	8b 96 24 10 00 00    	mov    0x1024(%esi),%edx
    41ce:	89 45 ac             	mov    %eax,-0x54(%ebp)
    41d1:	89 14 24             	mov    %edx,(%esp)
    41d4:	e8 07 c0 01 00       	call   201e0 <free>
    41d9:	8b 45 ac             	mov    -0x54(%ebp),%eax
    41dc:	e9 07 f5 ff ff       	jmp    36e8 <parse_transform_no_compose+0x428>
    41e1:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
    41e4:	e9 9c fe ff ff       	jmp    4085 <parse_transform_no_compose+0xdc5>
    41e9:	89 f0                	mov    %esi,%eax
    41eb:	e8 b0 dd ff ff       	call   1fa0 <next_token>
    41f0:	8b 86 20 10 00 00    	mov    0x1020(%esi),%eax
    41f6:	e9 5d fc ff ff       	jmp    3e58 <parse_transform_no_compose+0xb98>
    41fb:	8b 16                	mov    (%esi),%edx
    41fd:	85 d2                	test   %edx,%edx
    41ff:	75 19                	jne    421a <parse_transform_no_compose+0xf5a>
    4201:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    4208:	0f 84 65 01 00 00    	je     4373 <parse_transform_no_compose+0x10b3>
    420e:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    4215:	ff ff ff 
    4218:	89 06                	mov    %eax,(%esi)
    421a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    421d:	85 c0                	test   %eax,%eax
    421f:	0f 85 15 fb ff ff    	jne    3d3a <parse_transform_no_compose+0xa7a>
    4225:	31 c9                	xor    %ecx,%ecx
    4227:	e9 8d f2 ff ff       	jmp    34b9 <parse_transform_no_compose+0x1f9>
    422c:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    4233:	00 
    4234:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    423b:	00 
    423c:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    4243:	e8 68 66 02 00       	call   2a8b0 <assert_abort>
    4248:	8b 96 24 10 00 00    	mov    0x1024(%esi),%edx
    424e:	89 45 ac             	mov    %eax,-0x54(%ebp)
    4251:	89 14 24             	mov    %edx,(%esp)
    4254:	e8 87 bf 01 00       	call   201e0 <free>
    4259:	8b 45 ac             	mov    -0x54(%ebp),%eax
    425c:	e9 a3 f7 ff ff       	jmp    3a04 <parse_transform_no_compose+0x744>
    4261:	e8 ba 19 00 00       	call   5c20 <bithenge_transform_dec_ref.part.8>
    4266:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    426d:	00 
    426e:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    4275:	00 
    4276:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    427d:	e8 2e 66 02 00       	call   2a8b0 <assert_abort>
    4282:	e8 55 19 00 00       	call   5bdc <bithenge_expression_dec_ref.part.4>
    4287:	8b 96 24 10 00 00    	mov    0x1024(%esi),%edx
    428d:	89 45 ac             	mov    %eax,-0x54(%ebp)
    4290:	89 14 24             	mov    %edx,(%esp)
    4293:	e8 48 bf 01 00       	call   201e0 <free>
    4298:	8b 45 ac             	mov    -0x54(%ebp),%eax
    429b:	e9 1e fe ff ff       	jmp    40be <parse_transform_no_compose+0xdfe>
    42a0:	31 db                	xor    %ebx,%ebx
    42a2:	31 ff                	xor    %edi,%edi
    42a4:	e9 cf fd ff ff       	jmp    4078 <parse_transform_no_compose+0xdb8>
    42a9:	8b 86 24 10 00 00    	mov    0x1024(%esi),%eax
    42af:	89 55 b0             	mov    %edx,-0x50(%ebp)
    42b2:	89 04 24             	mov    %eax,(%esp)
    42b5:	e8 26 bf 01 00       	call   201e0 <free>
    42ba:	8b 55 b0             	mov    -0x50(%ebp),%edx
    42bd:	e9 e5 fe ff ff       	jmp    41a7 <parse_transform_no_compose+0xee7>
    42c2:	c7 44 24 08 41 00 00 	movl   $0x41,0x8(%esp)
    42c9:	00 
    42ca:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    42d1:	00 
    42d2:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    42d9:	e8 d2 65 02 00       	call   2a8b0 <assert_abort>
    42de:	8b 0e                	mov    (%esi),%ecx
    42e0:	85 c9                	test   %ecx,%ecx
    42e2:	75 19                	jne    42fd <parse_transform_no_compose+0x103d>
    42e4:	83 be 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%esi)
    42eb:	74 47                	je     4334 <parse_transform_no_compose+0x1074>
    42ed:	c7 86 20 10 00 00 80 	movl   $0xffffff80,0x1020(%esi)
    42f4:	ff ff ff 
    42f7:	c7 06 fe ff ff ff    	movl   $0xfffffffe,(%esi)
    42fd:	8b 45 dc             	mov    -0x24(%ebp),%eax
    4300:	85 c0                	test   %eax,%eax
    4302:	0f 84 12 ff ff ff    	je     421a <parse_transform_no_compose+0xf5a>
    4308:	8b 10                	mov    (%eax),%edx
    430a:	85 d2                	test   %edx,%edx
    430c:	0f 84 4f ff ff ff    	je     4261 <parse_transform_no_compose+0xfa1>
    4312:	8b 48 04             	mov    0x4(%eax),%ecx
    4315:	85 c9                	test   %ecx,%ecx
    4317:	0f 84 0f ff ff ff    	je     422c <parse_transform_no_compose+0xf6c>
    431d:	49                   	dec    %ecx
    431e:	89 48 04             	mov    %ecx,0x4(%eax)
    4321:	85 c9                	test   %ecx,%ecx
    4323:	0f 85 f1 fe ff ff    	jne    421a <parse_transform_no_compose+0xf5a>
    4329:	89 04 24             	mov    %eax,(%esp)
    432c:	ff 52 0c             	call   *0xc(%edx)
    432f:	e9 e6 fe ff ff       	jmp    421a <parse_transform_no_compose+0xf5a>
    4334:	8b 86 24 10 00 00    	mov    0x1024(%esi),%eax
    433a:	89 04 24             	mov    %eax,(%esp)
    433d:	e8 9e be 01 00       	call   201e0 <free>
    4342:	eb a9                	jmp    42ed <parse_transform_no_compose+0x102d>
    4344:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4347:	89 45 bc             	mov    %eax,-0x44(%ebp)
    434a:	e9 7f f4 ff ff       	jmp    37ce <parse_transform_no_compose+0x50e>
    434f:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    4352:	89 55 c0             	mov    %edx,-0x40(%ebp)
    4355:	e9 03 f2 ff ff       	jmp    355d <parse_transform_no_compose+0x29d>
    435a:	8b 96 24 10 00 00    	mov    0x1024(%esi),%edx
    4360:	89 45 ac             	mov    %eax,-0x54(%ebp)
    4363:	89 14 24             	mov    %edx,(%esp)
    4366:	e8 75 be 01 00       	call   201e0 <free>
    436b:	8b 45 ac             	mov    -0x54(%ebp),%eax
    436e:	e9 dc fd ff ff       	jmp    414f <parse_transform_no_compose+0xe8f>
    4373:	8b 96 24 10 00 00    	mov    0x1024(%esi),%edx
    4379:	89 45 ac             	mov    %eax,-0x54(%ebp)
    437c:	89 14 24             	mov    %edx,(%esp)
    437f:	e8 5c be 01 00       	call   201e0 <free>
    4384:	8b 45 ac             	mov    -0x54(%ebp),%eax
    4387:	e9 82 fe ff ff       	jmp    420e <parse_transform_no_compose+0xf4e>
    438c:	89 7d c0             	mov    %edi,-0x40(%ebp)
    438f:	e9 23 fe ff ff       	jmp    41b7 <parse_transform_no_compose+0xef7>
    4394:	c7 44 24 08 62 00 00 	movl   $0x62,0x8(%esp)
    439b:	00 
    439c:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    43a3:	00 
    43a4:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    43ab:	e8 00 65 02 00       	call   2a8b0 <assert_abort>

000043b0 <parse_transform>:
    43b0:	55                   	push   %ebp
    43b1:	89 e5                	mov    %esp,%ebp
    43b3:	57                   	push   %edi
    43b4:	56                   	push   %esi
    43b5:	53                   	push   %ebx
    43b6:	83 ec 3c             	sub    $0x3c,%esp
    43b9:	89 c3                	mov    %eax,%ebx
    43bb:	e8 00 ef ff ff       	call   32c0 <parse_transform_no_compose>
    43c0:	83 bb 20 10 00 00 89 	cmpl   $0xffffff89,0x1020(%ebx)
    43c7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    43ca:	0f 85 7a 01 00 00    	jne    454a <parse_transform+0x19a>
    43d0:	be 04 00 00 00       	mov    $0x4,%esi
    43d5:	ba 01 00 00 00       	mov    $0x1,%edx
    43da:	31 c9                	xor    %ecx,%ecx
    43dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    43e0:	89 d8                	mov    %ebx,%eax
    43e2:	89 55 d0             	mov    %edx,-0x30(%ebp)
    43e5:	89 4d cc             	mov    %ecx,-0x34(%ebp)
    43e8:	e8 b3 db ff ff       	call   1fa0 <next_token>
    43ed:	8b 55 d0             	mov    -0x30(%ebp),%edx
    43f0:	8b 0b                	mov    (%ebx),%ecx
    43f2:	8d 42 01             	lea    0x1(%edx),%eax
    43f5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    43f8:	c1 e0 02             	shl    $0x2,%eax
    43fb:	85 c9                	test   %ecx,%ecx
    43fd:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    4400:	74 56                	je     4458 <parse_transform+0xa8>
    4402:	85 c9                	test   %ecx,%ecx
    4404:	0f 95 c3             	setne  %bl
    4407:	83 fa 01             	cmp    $0x1,%edx
    440a:	0f 86 c0 00 00 00    	jbe    44d0 <parse_transform+0x120>
    4410:	84 db                	test   %bl,%bl
    4412:	0f 84 b8 00 00 00    	je     44d0 <parse_transform+0x120>
    4418:	4a                   	dec    %edx
    4419:	8b 04 91             	mov    (%ecx,%edx,4),%eax
    441c:	85 c0                	test   %eax,%eax
    441e:	74 e7                	je     4407 <parse_transform+0x57>
    4420:	8b 38                	mov    (%eax),%edi
    4422:	85 ff                	test   %edi,%edi
    4424:	0f 84 f8 00 00 00    	je     4522 <parse_transform+0x172>
    442a:	8b 70 04             	mov    0x4(%eax),%esi
    442d:	85 f6                	test   %esi,%esi
    442f:	0f 84 f2 00 00 00    	je     4527 <parse_transform+0x177>
    4435:	4e                   	dec    %esi
    4436:	89 70 04             	mov    %esi,0x4(%eax)
    4439:	85 f6                	test   %esi,%esi
    443b:	75 ca                	jne    4407 <parse_transform+0x57>
    443d:	89 55 d0             	mov    %edx,-0x30(%ebp)
    4440:	89 4d cc             	mov    %ecx,-0x34(%ebp)
    4443:	89 04 24             	mov    %eax,(%esp)
    4446:	ff 57 0c             	call   *0xc(%edi)
    4449:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    444c:	8b 55 d0             	mov    -0x30(%ebp),%edx
    444f:	eb b6                	jmp    4407 <parse_transform+0x57>
    4451:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4458:	89 0c 24             	mov    %ecx,(%esp)
    445b:	89 44 24 04          	mov    %eax,0x4(%esp)
    445f:	e8 cc bf 01 00       	call   20430 <realloc>
    4464:	8b 55 d0             	mov    -0x30(%ebp),%edx
    4467:	89 c7                	mov    %eax,%edi
    4469:	85 c0                	test   %eax,%eax
    446b:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    446e:	74 38                	je     44a8 <parse_transform+0xf8>
    4470:	8b 03                	mov    (%ebx),%eax
    4472:	85 c0                	test   %eax,%eax
    4474:	0f 85 c9 00 00 00    	jne    4543 <parse_transform+0x193>
    447a:	8d 14 37             	lea    (%edi,%esi,1),%edx
    447d:	89 d8                	mov    %ebx,%eax
    447f:	89 55 d0             	mov    %edx,-0x30(%ebp)
    4482:	e8 39 ee ff ff       	call   32c0 <parse_transform_no_compose>
    4487:	8b 55 d0             	mov    -0x30(%ebp),%edx
    448a:	83 c6 04             	add    $0x4,%esi
    448d:	83 bb 20 10 00 00 89 	cmpl   $0xffffff89,0x1020(%ebx)
    4494:	89 02                	mov    %eax,(%edx)
    4496:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    4499:	0f 85 c1 00 00 00    	jne    4560 <parse_transform+0x1b0>
    449f:	89 f9                	mov    %edi,%ecx
    44a1:	e9 3a ff ff ff       	jmp    43e0 <parse_transform+0x30>
    44a6:	66 90                	xchg   %ax,%ax
    44a8:	8b 03                	mov    (%ebx),%eax
    44aa:	85 c0                	test   %eax,%eax
    44ac:	0f 85 50 ff ff ff    	jne    4402 <parse_transform+0x52>
    44b2:	83 bb 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%ebx)
    44b9:	74 43                	je     44fe <parse_transform+0x14e>
    44bb:	c7 83 20 10 00 00 80 	movl   $0xffffff80,0x1020(%ebx)
    44c2:	ff ff ff 
    44c5:	c7 03 fe ff ff ff    	movl   $0xfffffffe,(%ebx)
    44cb:	e9 32 ff ff ff       	jmp    4402 <parse_transform+0x52>
    44d0:	89 0c 24             	mov    %ecx,(%esp)
    44d3:	e8 08 bd 01 00       	call   201e0 <free>
    44d8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    44db:	85 c0                	test   %eax,%eax
    44dd:	74 15                	je     44f4 <parse_transform+0x144>
    44df:	8b 08                	mov    (%eax),%ecx
    44e1:	85 c9                	test   %ecx,%ecx
    44e3:	74 3d                	je     4522 <parse_transform+0x172>
    44e5:	8b 50 04             	mov    0x4(%eax),%edx
    44e8:	85 d2                	test   %edx,%edx
    44ea:	74 3b                	je     4527 <parse_transform+0x177>
    44ec:	4a                   	dec    %edx
    44ed:	89 50 04             	mov    %edx,0x4(%eax)
    44f0:	85 d2                	test   %edx,%edx
    44f2:	74 26                	je     451a <parse_transform+0x16a>
    44f4:	31 c0                	xor    %eax,%eax
    44f6:	83 c4 3c             	add    $0x3c,%esp
    44f9:	5b                   	pop    %ebx
    44fa:	5e                   	pop    %esi
    44fb:	5f                   	pop    %edi
    44fc:	5d                   	pop    %ebp
    44fd:	c3                   	ret    
    44fe:	8b 83 24 10 00 00    	mov    0x1024(%ebx),%eax
    4504:	89 55 d0             	mov    %edx,-0x30(%ebp)
    4507:	89 04 24             	mov    %eax,(%esp)
    450a:	89 4d cc             	mov    %ecx,-0x34(%ebp)
    450d:	e8 ce bc 01 00       	call   201e0 <free>
    4512:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    4515:	8b 55 d0             	mov    -0x30(%ebp),%edx
    4518:	eb a1                	jmp    44bb <parse_transform+0x10b>
    451a:	89 04 24             	mov    %eax,(%esp)
    451d:	ff 51 0c             	call   *0xc(%ecx)
    4520:	eb d2                	jmp    44f4 <parse_transform+0x144>
    4522:	e8 f9 16 00 00       	call   5c20 <bithenge_transform_dec_ref.part.8>
    4527:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    452e:	00 
    452f:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    4536:	00 
    4537:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    453e:	e8 6d 63 02 00       	call   2a8b0 <assert_abort>
    4543:	89 f9                	mov    %edi,%ecx
    4545:	e9 b8 fe ff ff       	jmp    4402 <parse_transform+0x52>
    454a:	8b 0b                	mov    (%ebx),%ecx
    454c:	85 c9                	test   %ecx,%ecx
    454e:	74 a6                	je     44f6 <parse_transform+0x146>
    4550:	31 db                	xor    %ebx,%ebx
    4552:	ba 01 00 00 00       	mov    $0x1,%edx
    4557:	31 c9                	xor    %ecx,%ecx
    4559:	e9 a9 fe ff ff       	jmp    4407 <parse_transform+0x57>
    455e:	66 90                	xchg   %ax,%ax
    4560:	8b 03                	mov    (%ebx),%eax
    4562:	85 c0                	test   %eax,%eax
    4564:	75 63                	jne    45c9 <parse_transform+0x219>
    4566:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4569:	89 07                	mov    %eax,(%edi)
    456b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    456e:	89 54 24 08          	mov    %edx,0x8(%esp)
    4572:	89 7c 24 04          	mov    %edi,0x4(%esp)
    4576:	89 04 24             	mov    %eax,(%esp)
    4579:	e8 62 7b 00 00       	call   c0e0 <bithenge_new_composed_transform>
    457e:	85 c0                	test   %eax,%eax
    4580:	75 0b                	jne    458d <parse_transform+0x1dd>
    4582:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4585:	83 c4 3c             	add    $0x3c,%esp
    4588:	5b                   	pop    %ebx
    4589:	5e                   	pop    %esi
    458a:	5f                   	pop    %edi
    458b:	5d                   	pop    %ebp
    458c:	c3                   	ret    
    458d:	8b 33                	mov    (%ebx),%esi
    458f:	85 f6                	test   %esi,%esi
    4591:	0f 85 5d ff ff ff    	jne    44f4 <parse_transform+0x144>
    4597:	83 bb 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%ebx)
    459e:	74 13                	je     45b3 <parse_transform+0x203>
    45a0:	89 03                	mov    %eax,(%ebx)
    45a2:	c7 83 20 10 00 00 80 	movl   $0xffffff80,0x1020(%ebx)
    45a9:	ff ff ff 
    45ac:	31 c0                	xor    %eax,%eax
    45ae:	e9 43 ff ff ff       	jmp    44f6 <parse_transform+0x146>
    45b3:	8b 93 24 10 00 00    	mov    0x1024(%ebx),%edx
    45b9:	89 45 d0             	mov    %eax,-0x30(%ebp)
    45bc:	89 14 24             	mov    %edx,(%esp)
    45bf:	e8 1c bc 01 00       	call   201e0 <free>
    45c4:	8b 45 d0             	mov    -0x30(%ebp),%eax
    45c7:	eb d7                	jmp    45a0 <parse_transform+0x1f0>
    45c9:	b3 01                	mov    $0x1,%bl
    45cb:	89 f9                	mov    %edi,%ecx
    45cd:	e9 35 fe ff ff       	jmp    4407 <parse_transform+0x57>
    45d2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    45d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000045e0 <parse_struct>:
    45e0:	55                   	push   %ebp
    45e1:	89 e5                	mov    %esp,%ebp
    45e3:	57                   	push   %edi
    45e4:	56                   	push   %esi
    45e5:	53                   	push   %ebx
    45e6:	83 ec 5c             	sub    $0x5c,%esp
    45e9:	89 c7                	mov    %eax,%edi
    45eb:	8b 10                	mov    (%eax),%edx
    45ed:	85 d2                	test   %edx,%edx
    45ef:	0f 85 33 08 00 00    	jne    4e28 <parse_struct+0x848>
    45f5:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)
    45fc:	e8 cf ba 01 00       	call   200d0 <malloc>
    4601:	8b 17                	mov    (%edi),%edx
    4603:	89 45 c0             	mov    %eax,-0x40(%ebp)
    4606:	85 c0                	test   %eax,%eax
    4608:	0f 84 99 08 00 00    	je     4ea7 <parse_struct+0x8c7>
    460e:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    4615:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
    461c:	eb 41                	jmp    465f <parse_struct+0x7f>
    461e:	66 90                	xchg   %ax,%ax
    4620:	8b 07                	mov    (%edi),%eax
    4622:	85 c0                	test   %eax,%eax
    4624:	75 0c                	jne    4632 <parse_struct+0x52>
    4626:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    462b:	89 f8                	mov    %edi,%eax
    462d:	e8 6e d8 ff ff       	call   1ea0 <syntax_error.part.2>
    4632:	89 f8                	mov    %edi,%eax
    4634:	e8 77 fd ff ff       	call   43b0 <parse_transform>
    4639:	83 bf 20 10 00 00 3b 	cmpl   $0x3b,0x1020(%edi)
    4640:	89 43 04             	mov    %eax,0x4(%ebx)
    4643:	74 73                	je     46b8 <parse_struct+0xd8>
    4645:	8b 17                	mov    (%edi),%edx
    4647:	85 d2                	test   %edx,%edx
    4649:	0f 84 a1 00 00 00    	je     46f0 <parse_struct+0x110>
    464f:	8b 45 cc             	mov    -0x34(%ebp),%eax
    4652:	40                   	inc    %eax
    4653:	89 45 cc             	mov    %eax,-0x34(%ebp)
    4656:	8b 45 d0             	mov    -0x30(%ebp),%eax
    4659:	83 c0 08             	add    $0x8,%eax
    465c:	89 45 d0             	mov    %eax,-0x30(%ebp)
    465f:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    4662:	49                   	dec    %ecx
    4663:	85 d2                	test   %edx,%edx
    4665:	0f 85 ad 02 00 00    	jne    4918 <parse_struct+0x338>
    466b:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    4671:	83 f8 7d             	cmp    $0x7d,%eax
    4674:	0f 84 d6 06 00 00    	je     4d50 <parse_struct+0x770>
    467a:	83 f8 90             	cmp    $0xffffff90,%eax
    467d:	0f 84 7d 00 00 00    	je     4700 <parse_struct+0x120>
    4683:	83 f8 95             	cmp    $0xffffff95,%eax
    4686:	0f 84 9c 00 00 00    	je     4728 <parse_struct+0x148>
    468c:	83 f8 2e             	cmp    $0x2e,%eax
    468f:	0f 84 3b 02 00 00    	je     48d0 <parse_struct+0x2f0>
    4695:	8b 5d c0             	mov    -0x40(%ebp),%ebx
    4698:	8b 55 d0             	mov    -0x30(%ebp),%edx
    469b:	01 d3                	add    %edx,%ebx
    469d:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    46a3:	83 f8 89             	cmp    $0xffffff89,%eax
    46a6:	0f 85 74 ff ff ff    	jne    4620 <parse_struct+0x40>
    46ac:	89 f8                	mov    %edi,%eax
    46ae:	e8 ed d8 ff ff       	call   1fa0 <next_token>
    46b3:	e9 7a ff ff ff       	jmp    4632 <parse_struct+0x52>
    46b8:	89 f8                	mov    %edi,%eax
    46ba:	e8 e1 d8 ff ff       	call   1fa0 <next_token>
    46bf:	8b 17                	mov    (%edi),%edx
    46c1:	85 d2                	test   %edx,%edx
    46c3:	75 8a                	jne    464f <parse_struct+0x6f>
    46c5:	8b 45 d0             	mov    -0x30(%ebp),%eax
    46c8:	83 c0 10             	add    $0x10,%eax
    46cb:	89 44 24 04          	mov    %eax,0x4(%esp)
    46cf:	8b 45 c0             	mov    -0x40(%ebp),%eax
    46d2:	89 04 24             	mov    %eax,(%esp)
    46d5:	e8 56 bd 01 00       	call   20430 <realloc>
    46da:	8b 17                	mov    (%edi),%edx
    46dc:	85 c0                	test   %eax,%eax
    46de:	0f 84 dc 06 00 00    	je     4dc0 <parse_struct+0x7e0>
    46e4:	89 45 c0             	mov    %eax,-0x40(%ebp)
    46e7:	e9 63 ff ff ff       	jmp    464f <parse_struct+0x6f>
    46ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    46f0:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    46f5:	89 f8                	mov    %edi,%eax
    46f7:	e8 a4 d7 ff ff       	call   1ea0 <syntax_error.part.2>
    46fc:	8b 17                	mov    (%edi),%edx
    46fe:	eb c1                	jmp    46c1 <parse_struct+0xe1>
    4700:	ba 01 00 00 00       	mov    $0x1,%edx
    4705:	89 f8                	mov    %edi,%eax
    4707:	8b 5d c0             	mov    -0x40(%ebp),%ebx
    470a:	8b 75 d0             	mov    -0x30(%ebp),%esi
    470d:	e8 be 08 00 00       	call   4fd0 <parse_if>
    4712:	01 f3                	add    %esi,%ebx
    4714:	8b 17                	mov    (%edi),%edx
    4716:	89 43 04             	mov    %eax,0x4(%ebx)
    4719:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    471f:	eb a0                	jmp    46c1 <parse_struct+0xe1>
    4721:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4728:	8b 45 c0             	mov    -0x40(%ebp),%eax
    472b:	8b 5d d0             	mov    -0x30(%ebp),%ebx
    472e:	01 d8                	add    %ebx,%eax
    4730:	89 45 b4             	mov    %eax,-0x4c(%ebp)
    4733:	89 f8                	mov    %edi,%eax
    4735:	e8 66 d8 ff ff       	call   1fa0 <next_token>
    473a:	83 bf 20 10 00 00 28 	cmpl   $0x28,0x1020(%edi)
    4741:	0f 84 59 06 00 00    	je     4da0 <parse_struct+0x7c0>
    4747:	8b 0f                	mov    (%edi),%ecx
    4749:	85 c9                	test   %ecx,%ecx
    474b:	0f 84 97 03 00 00    	je     4ae8 <parse_struct+0x508>
    4751:	31 d2                	xor    %edx,%edx
    4753:	89 f8                	mov    %edi,%eax
    4755:	e8 16 e1 ff ff       	call   2870 <parse_expression_precedence>
    475a:	89 45 bc             	mov    %eax,-0x44(%ebp)
    475d:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    4763:	83 f8 29             	cmp    $0x29,%eax
    4766:	0f 84 1c 06 00 00    	je     4d88 <parse_struct+0x7a8>
    476c:	8b 17                	mov    (%edi),%edx
    476e:	85 d2                	test   %edx,%edx
    4770:	0f 84 4a 03 00 00    	je     4ac0 <parse_struct+0x4e0>
    4776:	83 f8 7b             	cmp    $0x7b,%eax
    4779:	0f 84 5c 03 00 00    	je     4adb <parse_struct+0x4fb>
    477f:	8b 37                	mov    (%edi),%esi
    4781:	85 f6                	test   %esi,%esi
    4783:	0f 84 ff 01 00 00    	je     4988 <parse_struct+0x3a8>
    4789:	31 db                	xor    %ebx,%ebx
    478b:	31 f6                	xor    %esi,%esi
    478d:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
    4794:	8b 45 bc             	mov    -0x44(%ebp),%eax
    4797:	85 c0                	test   %eax,%eax
    4799:	74 28                	je     47c3 <parse_struct+0x1e3>
    479b:	8b 45 bc             	mov    -0x44(%ebp),%eax
    479e:	8b 10                	mov    (%eax),%edx
    47a0:	85 d2                	test   %edx,%edx
    47a2:	0f 84 a0 07 00 00    	je     4f48 <parse_struct+0x968>
    47a8:	89 c1                	mov    %eax,%ecx
    47aa:	8b 40 04             	mov    0x4(%eax),%eax
    47ad:	85 c0                	test   %eax,%eax
    47af:	0f 84 98 07 00 00    	je     4f4d <parse_struct+0x96d>
    47b5:	48                   	dec    %eax
    47b6:	89 41 04             	mov    %eax,0x4(%ecx)
    47b9:	85 c0                	test   %eax,%eax
    47bb:	75 06                	jne    47c3 <parse_struct+0x1e3>
    47bd:	89 0c 24             	mov    %ecx,(%esp)
    47c0:	ff 52 04             	call   *0x4(%edx)
    47c3:	8b 0d 38 03 03 00    	mov    0x30338,%ecx
    47c9:	c7 45 e4 34 03 03 00 	movl   $0x30334,-0x1c(%ebp)
    47d0:	41                   	inc    %ecx
    47d1:	8b 07                	mov    (%edi),%eax
    47d3:	89 0d 38 03 03 00    	mov    %ecx,0x30338
    47d9:	85 c0                	test   %eax,%eax
    47db:	75 3b                	jne    4818 <parse_struct+0x238>
    47dd:	85 db                	test   %ebx,%ebx
    47df:	0f 84 9f 00 00 00    	je     4884 <parse_struct+0x2a4>
    47e5:	4b                   	dec    %ebx
    47e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    47e9:	89 44 24 0c          	mov    %eax,0xc(%esp)
    47ed:	8b 55 b8             	mov    -0x48(%ebp),%edx
    47f0:	8b 04 9e             	mov    (%esi,%ebx,4),%eax
    47f3:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    47f6:	89 44 24 08          	mov    %eax,0x8(%esp)
    47fa:	8b 04 9a             	mov    (%edx,%ebx,4),%eax
    47fd:	89 0c 24             	mov    %ecx,(%esp)
    4800:	89 44 24 04          	mov    %eax,0x4(%esp)
    4804:	e8 e7 79 00 00       	call   c1f0 <bithenge_if_transform>
    4809:	85 c0                	test   %eax,%eax
    480b:	0f 85 3f 04 00 00    	jne    4c50 <parse_struct+0x670>
    4811:	8b 07                	mov    (%edi),%eax
    4813:	85 c0                	test   %eax,%eax
    4815:	74 c6                	je     47dd <parse_struct+0x1fd>
    4817:	90                   	nop
    4818:	85 db                	test   %ebx,%ebx
    481a:	74 68                	je     4884 <parse_struct+0x2a4>
    481c:	89 7d d4             	mov    %edi,-0x2c(%ebp)
    481f:	8b 7d b8             	mov    -0x48(%ebp),%edi
    4822:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4828:	4b                   	dec    %ebx
    4829:	8b 04 9f             	mov    (%edi,%ebx,4),%eax
    482c:	85 c0                	test   %eax,%eax
    482e:	74 23                	je     4853 <parse_struct+0x273>
    4830:	8b 08                	mov    (%eax),%ecx
    4832:	85 c9                	test   %ecx,%ecx
    4834:	0f 84 0e 07 00 00    	je     4f48 <parse_struct+0x968>
    483a:	8b 50 04             	mov    0x4(%eax),%edx
    483d:	85 d2                	test   %edx,%edx
    483f:	0f 84 08 07 00 00    	je     4f4d <parse_struct+0x96d>
    4845:	4a                   	dec    %edx
    4846:	89 50 04             	mov    %edx,0x4(%eax)
    4849:	85 d2                	test   %edx,%edx
    484b:	75 06                	jne    4853 <parse_struct+0x273>
    484d:	89 04 24             	mov    %eax,(%esp)
    4850:	ff 51 04             	call   *0x4(%ecx)
    4853:	8b 04 9e             	mov    (%esi,%ebx,4),%eax
    4856:	85 c0                	test   %eax,%eax
    4858:	74 23                	je     487d <parse_struct+0x29d>
    485a:	8b 08                	mov    (%eax),%ecx
    485c:	85 c9                	test   %ecx,%ecx
    485e:	0f 84 df 06 00 00    	je     4f43 <parse_struct+0x963>
    4864:	8b 50 04             	mov    0x4(%eax),%edx
    4867:	85 d2                	test   %edx,%edx
    4869:	0f 84 b8 06 00 00    	je     4f27 <parse_struct+0x947>
    486f:	4a                   	dec    %edx
    4870:	89 50 04             	mov    %edx,0x4(%eax)
    4873:	85 d2                	test   %edx,%edx
    4875:	75 06                	jne    487d <parse_struct+0x29d>
    4877:	89 04 24             	mov    %eax,(%esp)
    487a:	ff 51 0c             	call   *0xc(%ecx)
    487d:	85 db                	test   %ebx,%ebx
    487f:	75 a7                	jne    4828 <parse_struct+0x248>
    4881:	8b 7d d4             	mov    -0x2c(%ebp),%edi
    4884:	8b 45 b8             	mov    -0x48(%ebp),%eax
    4887:	89 04 24             	mov    %eax,(%esp)
    488a:	e8 51 b9 01 00       	call   201e0 <free>
    488f:	89 34 24             	mov    %esi,(%esp)
    4892:	e8 49 b9 01 00       	call   201e0 <free>
    4897:	83 bf 20 10 00 00 7d 	cmpl   $0x7d,0x1020(%edi)
    489e:	0f 84 0c 05 00 00    	je     4db0 <parse_struct+0x7d0>
    48a4:	8b 17                	mov    (%edi),%edx
    48a6:	85 d2                	test   %edx,%edx
    48a8:	75 0e                	jne    48b8 <parse_struct+0x2d8>
    48aa:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    48af:	89 f8                	mov    %edi,%eax
    48b1:	e8 ea d5 ff ff       	call   1ea0 <syntax_error.part.2>
    48b6:	8b 17                	mov    (%edi),%edx
    48b8:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
    48bb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    48be:	89 41 04             	mov    %eax,0x4(%ecx)
    48c1:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)
    48c7:	e9 f5 fd ff ff       	jmp    46c1 <parse_struct+0xe1>
    48cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    48d0:	89 f8                	mov    %edi,%eax
    48d2:	e8 c9 d6 ff ff       	call   1fa0 <next_token>
    48d7:	8b 5d c0             	mov    -0x40(%ebp),%ebx
    48da:	8b 75 d0             	mov    -0x30(%ebp),%esi
    48dd:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    48e3:	01 f3                	add    %esi,%ebx
    48e5:	83 f8 86             	cmp    $0xffffff86,%eax
    48e8:	0f 85 12 05 00 00    	jne    4e00 <parse_struct+0x820>
    48ee:	8b b7 24 10 00 00    	mov    0x1024(%edi),%esi
    48f4:	89 f8                	mov    %edi,%eax
    48f6:	c7 87 24 10 00 00 00 	movl   $0x0,0x1024(%edi)
    48fd:	00 00 00 
    4900:	e8 9b d6 ff ff       	call   1fa0 <next_token>
    4905:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    490b:	89 33                	mov    %esi,(%ebx)
    490d:	e9 91 fd ff ff       	jmp    46a3 <parse_struct+0xc3>
    4912:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4918:	8b 5d cc             	mov    -0x34(%ebp),%ebx
    491b:	8b 75 c0             	mov    -0x40(%ebp),%esi
    491e:	83 eb 02             	sub    $0x2,%ebx
    4921:	83 fb ff             	cmp    $0xffffffff,%ebx
    4924:	74 38                	je     495e <parse_struct+0x37e>
    4926:	66 90                	xchg   %ax,%ax
    4928:	8b 04 de             	mov    (%esi,%ebx,8),%eax
    492b:	89 04 24             	mov    %eax,(%esp)
    492e:	e8 ad b8 01 00       	call   201e0 <free>
    4933:	8b 44 de 04          	mov    0x4(%esi,%ebx,8),%eax
    4937:	85 c0                	test   %eax,%eax
    4939:	74 1d                	je     4958 <parse_struct+0x378>
    493b:	8b 08                	mov    (%eax),%ecx
    493d:	85 c9                	test   %ecx,%ecx
    493f:	0f 84 fe 05 00 00    	je     4f43 <parse_struct+0x963>
    4945:	8b 50 04             	mov    0x4(%eax),%edx
    4948:	85 d2                	test   %edx,%edx
    494a:	0f 84 d7 05 00 00    	je     4f27 <parse_struct+0x947>
    4950:	4a                   	dec    %edx
    4951:	89 50 04             	mov    %edx,0x4(%eax)
    4954:	85 d2                	test   %edx,%edx
    4956:	74 20                	je     4978 <parse_struct+0x398>
    4958:	4b                   	dec    %ebx
    4959:	83 fb ff             	cmp    $0xffffffff,%ebx
    495c:	75 ca                	jne    4928 <parse_struct+0x348>
    495e:	8b 45 c0             	mov    -0x40(%ebp),%eax
    4961:	89 04 24             	mov    %eax,(%esp)
    4964:	e8 77 b8 01 00       	call   201e0 <free>
    4969:	83 c4 5c             	add    $0x5c,%esp
    496c:	31 c0                	xor    %eax,%eax
    496e:	5b                   	pop    %ebx
    496f:	5e                   	pop    %esi
    4970:	5f                   	pop    %edi
    4971:	5d                   	pop    %ebp
    4972:	c3                   	ret    
    4973:	90                   	nop
    4974:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4978:	89 04 24             	mov    %eax,(%esp)
    497b:	4b                   	dec    %ebx
    497c:	ff 51 0c             	call   *0xc(%ecx)
    497f:	eb d8                	jmp    4959 <parse_struct+0x379>
    4981:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4988:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    498d:	89 f8                	mov    %edi,%eax
    498f:	e8 0c d5 ff ff       	call   1ea0 <syntax_error.part.2>
    4994:	8b 1f                	mov    (%edi),%ebx
    4996:	85 db                	test   %ebx,%ebx
    4998:	0f 85 eb fd ff ff    	jne    4789 <parse_struct+0x1a9>
    499e:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    49a4:	83 f8 7d             	cmp    $0x7d,%eax
    49a7:	0f 84 dc fd ff ff    	je     4789 <parse_struct+0x1a9>
    49ad:	89 c1                	mov    %eax,%ecx
    49af:	31 f6                	xor    %esi,%esi
    49b1:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
    49b8:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    49bf:	83 f9 8e             	cmp    $0xffffff8e,%ecx
    49c2:	0f 84 10 02 00 00    	je     4bd8 <parse_struct+0x5f8>
    49c8:	31 d2                	xor    %edx,%edx
    49ca:	89 f8                	mov    %edi,%eax
    49cc:	e8 9f de ff ff       	call   2870 <parse_expression_precedence>
    49d1:	8b 17                	mov    (%edi),%edx
    49d3:	89 45 e0             	mov    %eax,-0x20(%ebp)
    49d6:	85 d2                	test   %edx,%edx
    49d8:	0f 84 a2 02 00 00    	je     4c80 <parse_struct+0x6a0>
    49de:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    49e4:	83 f8 3a             	cmp    $0x3a,%eax
    49e7:	0f 84 23 01 00 00    	je     4b10 <parse_struct+0x530>
    49ed:	8b 1f                	mov    (%edi),%ebx
    49ef:	85 db                	test   %ebx,%ebx
    49f1:	75 12                	jne    4a05 <parse_struct+0x425>
    49f3:	89 f8                	mov    %edi,%eax
    49f5:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    49fa:	e8 a1 d4 ff ff       	call   1ea0 <syntax_error.part.2>
    49ff:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    4a05:	83 f8 7b             	cmp    $0x7b,%eax
    4a08:	0f 84 f2 00 00 00    	je     4b00 <parse_struct+0x520>
    4a0e:	8b 0f                	mov    (%edi),%ecx
    4a10:	85 c9                	test   %ecx,%ecx
    4a12:	75 0c                	jne    4a20 <parse_struct+0x440>
    4a14:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    4a19:	89 f8                	mov    %edi,%eax
    4a1b:	e8 80 d4 ff ff       	call   1ea0 <syntax_error.part.2>
    4a20:	89 f8                	mov    %edi,%eax
    4a22:	e8 b9 fb ff ff       	call   45e0 <parse_struct>
    4a27:	89 c3                	mov    %eax,%ebx
    4a29:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    4a2f:	83 f8 7d             	cmp    $0x7d,%eax
    4a32:	0f 84 f0 00 00 00    	je     4b28 <parse_struct+0x548>
    4a38:	8b 17                	mov    (%edi),%edx
    4a3a:	85 d2                	test   %edx,%edx
    4a3c:	75 12                	jne    4a50 <parse_struct+0x470>
    4a3e:	89 f8                	mov    %edi,%eax
    4a40:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    4a45:	e8 56 d4 ff ff       	call   1ea0 <syntax_error.part.2>
    4a4a:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    4a50:	83 f8 3b             	cmp    $0x3b,%eax
    4a53:	0f 84 e5 00 00 00    	je     4b3e <parse_struct+0x55e>
    4a59:	8b 07                	mov    (%edi),%eax
    4a5b:	85 c0                	test   %eax,%eax
    4a5d:	0f 84 d5 01 00 00    	je     4c38 <parse_struct+0x658>
    4a63:	8b 45 e0             	mov    -0x20(%ebp),%eax
    4a66:	85 c0                	test   %eax,%eax
    4a68:	74 21                	je     4a8b <parse_struct+0x4ab>
    4a6a:	8b 08                	mov    (%eax),%ecx
    4a6c:	85 c9                	test   %ecx,%ecx
    4a6e:	0f 84 d4 04 00 00    	je     4f48 <parse_struct+0x968>
    4a74:	8b 50 04             	mov    0x4(%eax),%edx
    4a77:	85 d2                	test   %edx,%edx
    4a79:	0f 84 ce 04 00 00    	je     4f4d <parse_struct+0x96d>
    4a7f:	4a                   	dec    %edx
    4a80:	89 50 04             	mov    %edx,0x4(%eax)
    4a83:	85 d2                	test   %edx,%edx
    4a85:	0f 84 ba 03 00 00    	je     4e45 <parse_struct+0x865>
    4a8b:	85 db                	test   %ebx,%ebx
    4a8d:	74 21                	je     4ab0 <parse_struct+0x4d0>
    4a8f:	8b 13                	mov    (%ebx),%edx
    4a91:	85 d2                	test   %edx,%edx
    4a93:	0f 84 aa 04 00 00    	je     4f43 <parse_struct+0x963>
    4a99:	8b 43 04             	mov    0x4(%ebx),%eax
    4a9c:	85 c0                	test   %eax,%eax
    4a9e:	0f 84 83 04 00 00    	je     4f27 <parse_struct+0x947>
    4aa4:	48                   	dec    %eax
    4aa5:	89 43 04             	mov    %eax,0x4(%ebx)
    4aa8:	85 c0                	test   %eax,%eax
    4aaa:	0f 84 84 03 00 00    	je     4e34 <parse_struct+0x854>
    4ab0:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    4ab3:	89 4d b8             	mov    %ecx,-0x48(%ebp)
    4ab6:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
    4ab9:	e9 d6 fc ff ff       	jmp    4794 <parse_struct+0x1b4>
    4abe:	66 90                	xchg   %ax,%ax
    4ac0:	89 f8                	mov    %edi,%eax
    4ac2:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    4ac7:	e8 d4 d3 ff ff       	call   1ea0 <syntax_error.part.2>
    4acc:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    4ad2:	83 f8 7b             	cmp    $0x7b,%eax
    4ad5:	0f 85 a4 fc ff ff    	jne    477f <parse_struct+0x19f>
    4adb:	89 f8                	mov    %edi,%eax
    4add:	e8 be d4 ff ff       	call   1fa0 <next_token>
    4ae2:	e9 ad fe ff ff       	jmp    4994 <parse_struct+0x3b4>
    4ae7:	90                   	nop
    4ae8:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    4aed:	89 f8                	mov    %edi,%eax
    4aef:	e8 ac d3 ff ff       	call   1ea0 <syntax_error.part.2>
    4af4:	e9 58 fc ff ff       	jmp    4751 <parse_struct+0x171>
    4af9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4b00:	89 f8                	mov    %edi,%eax
    4b02:	e8 99 d4 ff ff       	call   1fa0 <next_token>
    4b07:	e9 14 ff ff ff       	jmp    4a20 <parse_struct+0x440>
    4b0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4b10:	89 f8                	mov    %edi,%eax
    4b12:	e8 89 d4 ff ff       	call   1fa0 <next_token>
    4b17:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    4b1d:	e9 e3 fe ff ff       	jmp    4a05 <parse_struct+0x425>
    4b22:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4b28:	89 f8                	mov    %edi,%eax
    4b2a:	e8 71 d4 ff ff       	call   1fa0 <next_token>
    4b2f:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    4b35:	83 f8 3b             	cmp    $0x3b,%eax
    4b38:	0f 85 1b ff ff ff    	jne    4a59 <parse_struct+0x479>
    4b3e:	89 f8                	mov    %edi,%eax
    4b40:	e8 5b d4 ff ff       	call   1fa0 <next_token>
    4b45:	8b 07                	mov    (%edi),%eax
    4b47:	85 c0                	test   %eax,%eax
    4b49:	0f 85 14 ff ff ff    	jne    4a63 <parse_struct+0x483>
    4b4f:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    4b52:	8b 45 c8             	mov    -0x38(%ebp),%eax
    4b55:	41                   	inc    %ecx
    4b56:	89 04 24             	mov    %eax,(%esp)
    4b59:	89 4d ac             	mov    %ecx,-0x54(%ebp)
    4b5c:	c1 e1 02             	shl    $0x2,%ecx
    4b5f:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    4b63:	89 4d b0             	mov    %ecx,-0x50(%ebp)
    4b66:	e8 c5 b8 01 00       	call   20430 <realloc>
    4b6b:	8b 4d b0             	mov    -0x50(%ebp),%ecx
    4b6e:	89 c2                	mov    %eax,%edx
    4b70:	85 c0                	test   %eax,%eax
    4b72:	0f 84 a8 01 00 00    	je     4d20 <parse_struct+0x740>
    4b78:	8b 07                	mov    (%edi),%eax
    4b7a:	85 c0                	test   %eax,%eax
    4b7c:	0f 85 39 04 00 00    	jne    4fbb <parse_struct+0x9db>
    4b82:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    4b86:	89 34 24             	mov    %esi,(%esp)
    4b89:	89 55 b0             	mov    %edx,-0x50(%ebp)
    4b8c:	e8 9f b8 01 00       	call   20430 <realloc>
    4b91:	8b 55 b0             	mov    -0x50(%ebp),%edx
    4b94:	85 c0                	test   %eax,%eax
    4b96:	0f 84 4c 01 00 00    	je     4ce8 <parse_struct+0x708>
    4b9c:	8b 0f                	mov    (%edi),%ecx
    4b9e:	85 c9                	test   %ecx,%ecx
    4ba0:	0f 85 0b 04 00 00    	jne    4fb1 <parse_struct+0x9d1>
    4ba6:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    4ba9:	8b 75 e0             	mov    -0x20(%ebp),%esi
    4bac:	c1 e1 02             	shl    $0x2,%ecx
    4baf:	89 34 0a             	mov    %esi,(%edx,%ecx,1)
    4bb2:	89 1c 08             	mov    %ebx,(%eax,%ecx,1)
    4bb5:	8b 8f 20 10 00 00    	mov    0x1020(%edi),%ecx
    4bbb:	83 f9 7d             	cmp    $0x7d,%ecx
    4bbe:	0f 84 2c 02 00 00    	je     4df0 <parse_struct+0x810>
    4bc4:	89 55 c8             	mov    %edx,-0x38(%ebp)
    4bc7:	8b 55 ac             	mov    -0x54(%ebp),%edx
    4bca:	89 c6                	mov    %eax,%esi
    4bcc:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    4bcf:	83 f9 8e             	cmp    $0xffffff8e,%ecx
    4bd2:	0f 85 f0 fd ff ff    	jne    49c8 <parse_struct+0x3e8>
    4bd8:	89 f8                	mov    %edi,%eax
    4bda:	e8 c1 d3 ff ff       	call   1fa0 <next_token>
    4bdf:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    4be2:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
    4be9:	00 
    4bea:	89 0c 24             	mov    %ecx,(%esp)
    4bed:	e8 3e 5d 00 00       	call   a930 <bithenge_new_boolean_node>
    4bf2:	85 c0                	test   %eax,%eax
    4bf4:	75 1a                	jne    4c10 <parse_struct+0x630>
    4bf6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4bf9:	89 44 24 04          	mov    %eax,0x4(%esp)
    4bfd:	8d 45 e0             	lea    -0x20(%ebp),%eax
    4c00:	89 04 24             	mov    %eax,(%esp)
    4c03:	e8 a8 8b 00 00       	call   d7b0 <bithenge_const_expression>
    4c08:	85 c0                	test   %eax,%eax
    4c0a:	0f 84 ce fd ff ff    	je     49de <parse_struct+0x3fe>
    4c10:	8b 0f                	mov    (%edi),%ecx
    4c12:	85 c9                	test   %ecx,%ecx
    4c14:	0f 85 96 fe ff ff    	jne    4ab0 <parse_struct+0x4d0>
    4c1a:	83 bf 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%edi)
    4c21:	0f 84 ab 02 00 00    	je     4ed2 <parse_struct+0x8f2>
    4c27:	c7 87 20 10 00 00 80 	movl   $0xffffff80,0x1020(%edi)
    4c2e:	ff ff ff 
    4c31:	89 07                	mov    %eax,(%edi)
    4c33:	e9 78 fe ff ff       	jmp    4ab0 <parse_struct+0x4d0>
    4c38:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    4c3d:	89 f8                	mov    %edi,%eax
    4c3f:	e8 5c d2 ff ff       	call   1ea0 <syntax_error.part.2>
    4c44:	e9 fc fe ff ff       	jmp    4b45 <parse_struct+0x565>
    4c49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4c50:	8b 17                	mov    (%edi),%edx
    4c52:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    4c59:	85 d2                	test   %edx,%edx
    4c5b:	0f 85 b7 fb ff ff    	jne    4818 <parse_struct+0x238>
    4c61:	83 bf 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%edi)
    4c68:	0f 84 fa 01 00 00    	je     4e68 <parse_struct+0x888>
    4c6e:	c7 87 20 10 00 00 80 	movl   $0xffffff80,0x1020(%edi)
    4c75:	ff ff ff 
    4c78:	89 07                	mov    %eax,(%edi)
    4c7a:	e9 5a fb ff ff       	jmp    47d9 <parse_struct+0x1f9>
    4c7f:	90                   	nop
    4c80:	8b 5d bc             	mov    -0x44(%ebp),%ebx
    4c83:	85 db                	test   %ebx,%ebx
    4c85:	0f 84 f7 02 00 00    	je     4f82 <parse_struct+0x9a2>
    4c8b:	8b 55 bc             	mov    -0x44(%ebp),%edx
    4c8e:	8b 4a 04             	mov    0x4(%edx),%ecx
    4c91:	41                   	inc    %ecx
    4c92:	89 4a 04             	mov    %ecx,0x4(%edx)
    4c95:	8d 4d e0             	lea    -0x20(%ebp),%ecx
    4c98:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4c9c:	89 54 24 08          	mov    %edx,0x8(%esp)
    4ca0:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)
    4ca7:	00 
    4ca8:	89 0c 24             	mov    %ecx,(%esp)
    4cab:	e8 b0 89 00 00       	call   d660 <bithenge_binary_expression>
    4cb0:	85 c0                	test   %eax,%eax
    4cb2:	0f 84 26 fd ff ff    	je     49de <parse_struct+0x3fe>
    4cb8:	8b 17                	mov    (%edi),%edx
    4cba:	85 d2                	test   %edx,%edx
    4cbc:	0f 85 ee fd ff ff    	jne    4ab0 <parse_struct+0x4d0>
    4cc2:	83 bf 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%edi)
    4cc9:	0f 84 9a 02 00 00    	je     4f69 <parse_struct+0x989>
    4ccf:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    4cd2:	c7 87 20 10 00 00 80 	movl   $0xffffff80,0x1020(%edi)
    4cd9:	ff ff ff 
    4cdc:	89 07                	mov    %eax,(%edi)
    4cde:	89 4d b8             	mov    %ecx,-0x48(%ebp)
    4ce1:	e9 d0 fd ff ff       	jmp    4ab6 <parse_struct+0x4d6>
    4ce6:	66 90                	xchg   %ax,%ax
    4ce8:	8b 07                	mov    (%edi),%eax
    4cea:	89 55 b8             	mov    %edx,-0x48(%ebp)
    4ced:	85 c0                	test   %eax,%eax
    4cef:	75 1d                	jne    4d0e <parse_struct+0x72e>
    4cf1:	83 bf 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%edi)
    4cf8:	0f 84 96 01 00 00    	je     4e94 <parse_struct+0x8b4>
    4cfe:	c7 87 20 10 00 00 80 	movl   $0xffffff80,0x1020(%edi)
    4d05:	ff ff ff 
    4d08:	c7 07 fe ff ff ff    	movl   $0xfffffffe,(%edi)
    4d0e:	8b 45 b8             	mov    -0x48(%ebp),%eax
    4d11:	89 45 c8             	mov    %eax,-0x38(%ebp)
    4d14:	e9 4a fd ff ff       	jmp    4a63 <parse_struct+0x483>
    4d19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    4d20:	8b 07                	mov    (%edi),%eax
    4d22:	85 c0                	test   %eax,%eax
    4d24:	0f 85 39 fd ff ff    	jne    4a63 <parse_struct+0x483>
    4d2a:	83 bf 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%edi)
    4d31:	0f 84 4a 01 00 00    	je     4e81 <parse_struct+0x8a1>
    4d37:	c7 87 20 10 00 00 80 	movl   $0xffffff80,0x1020(%edi)
    4d3e:	ff ff ff 
    4d41:	c7 07 fe ff ff ff    	movl   $0xfffffffe,(%edi)
    4d47:	e9 17 fd ff ff       	jmp    4a63 <parse_struct+0x483>
    4d4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4d50:	8b 55 c0             	mov    -0x40(%ebp),%edx
    4d53:	8d 04 ca             	lea    (%edx,%ecx,8),%eax
    4d56:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    4d5c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    4d63:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    4d66:	89 54 24 04          	mov    %edx,0x4(%esp)
    4d6a:	89 04 24             	mov    %eax,(%esp)
    4d6d:	e8 9e 27 00 00       	call   7510 <bithenge_new_struct>
    4d72:	89 c3                	mov    %eax,%ebx
    4d74:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    4d77:	85 db                	test   %ebx,%ebx
    4d79:	0f 85 6c 01 00 00    	jne    4eeb <parse_struct+0x90b>
    4d7f:	83 c4 5c             	add    $0x5c,%esp
    4d82:	5b                   	pop    %ebx
    4d83:	5e                   	pop    %esi
    4d84:	5f                   	pop    %edi
    4d85:	5d                   	pop    %ebp
    4d86:	c3                   	ret    
    4d87:	90                   	nop
    4d88:	89 f8                	mov    %edi,%eax
    4d8a:	e8 11 d2 ff ff       	call   1fa0 <next_token>
    4d8f:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    4d95:	e9 dc f9 ff ff       	jmp    4776 <parse_struct+0x196>
    4d9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    4da0:	89 f8                	mov    %edi,%eax
    4da2:	e8 f9 d1 ff ff       	call   1fa0 <next_token>
    4da7:	e9 a5 f9 ff ff       	jmp    4751 <parse_struct+0x171>
    4dac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4db0:	89 f8                	mov    %edi,%eax
    4db2:	e8 e9 d1 ff ff       	call   1fa0 <next_token>
    4db7:	8b 17                	mov    (%edi),%edx
    4db9:	e9 fa fa ff ff       	jmp    48b8 <parse_struct+0x2d8>
    4dbe:	66 90                	xchg   %ax,%ax
    4dc0:	85 d2                	test   %edx,%edx
    4dc2:	0f 85 87 f8 ff ff    	jne    464f <parse_struct+0x6f>
    4dc8:	83 bf 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%edi)
    4dcf:	74 7f                	je     4e50 <parse_struct+0x870>
    4dd1:	c7 87 20 10 00 00 80 	movl   $0xffffff80,0x1020(%edi)
    4dd8:	ff ff ff 
    4ddb:	c7 07 fe ff ff ff    	movl   $0xfffffffe,(%edi)
    4de1:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
    4de6:	e9 64 f8 ff ff       	jmp    464f <parse_struct+0x6f>
    4deb:	90                   	nop
    4dec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4df0:	8b 5d ac             	mov    -0x54(%ebp),%ebx
    4df3:	89 c6                	mov    %eax,%esi
    4df5:	89 55 b8             	mov    %edx,-0x48(%ebp)
    4df8:	e9 97 f9 ff ff       	jmp    4794 <parse_struct+0x1b4>
    4dfd:	8d 76 00             	lea    0x0(%esi),%esi
    4e00:	8b 0f                	mov    (%edi),%ecx
    4e02:	31 f6                	xor    %esi,%esi
    4e04:	85 c9                	test   %ecx,%ecx
    4e06:	0f 85 ff fa ff ff    	jne    490b <parse_struct+0x32b>
    4e0c:	89 f8                	mov    %edi,%eax
    4e0e:	ba c0 cf 02 00       	mov    $0x2cfc0,%edx
    4e13:	31 f6                	xor    %esi,%esi
    4e15:	e8 86 d0 ff ff       	call   1ea0 <syntax_error.part.2>
    4e1a:	8b 87 20 10 00 00    	mov    0x1020(%edi),%eax
    4e20:	89 33                	mov    %esi,(%ebx)
    4e22:	e9 7c f8 ff ff       	jmp    46a3 <parse_struct+0xc3>
    4e27:	90                   	nop
    4e28:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
    4e2f:	e9 da f7 ff ff       	jmp    460e <parse_struct+0x2e>
    4e34:	89 1c 24             	mov    %ebx,(%esp)
    4e37:	ff 52 0c             	call   *0xc(%edx)
    4e3a:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    4e3d:	89 4d b8             	mov    %ecx,-0x48(%ebp)
    4e40:	e9 71 fc ff ff       	jmp    4ab6 <parse_struct+0x4d6>
    4e45:	89 04 24             	mov    %eax,(%esp)
    4e48:	ff 51 04             	call   *0x4(%ecx)
    4e4b:	e9 3b fc ff ff       	jmp    4a8b <parse_struct+0x4ab>
    4e50:	8b 87 24 10 00 00    	mov    0x1024(%edi),%eax
    4e56:	89 04 24             	mov    %eax,(%esp)
    4e59:	e8 82 b3 01 00       	call   201e0 <free>
    4e5e:	e9 6e ff ff ff       	jmp    4dd1 <parse_struct+0x7f1>
    4e63:	90                   	nop
    4e64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4e68:	8b 97 24 10 00 00    	mov    0x1024(%edi),%edx
    4e6e:	89 45 b0             	mov    %eax,-0x50(%ebp)
    4e71:	89 14 24             	mov    %edx,(%esp)
    4e74:	e8 67 b3 01 00       	call   201e0 <free>
    4e79:	8b 45 b0             	mov    -0x50(%ebp),%eax
    4e7c:	e9 ed fd ff ff       	jmp    4c6e <parse_struct+0x68e>
    4e81:	8b 87 24 10 00 00    	mov    0x1024(%edi),%eax
    4e87:	89 04 24             	mov    %eax,(%esp)
    4e8a:	e8 51 b3 01 00       	call   201e0 <free>
    4e8f:	e9 a3 fe ff ff       	jmp    4d37 <parse_struct+0x757>
    4e94:	8b 87 24 10 00 00    	mov    0x1024(%edi),%eax
    4e9a:	89 04 24             	mov    %eax,(%esp)
    4e9d:	e8 3e b3 01 00       	call   201e0 <free>
    4ea2:	e9 57 fe ff ff       	jmp    4cfe <parse_struct+0x71e>
    4ea7:	85 d2                	test   %edx,%edx
    4ea9:	0f 85 5f f7 ff ff    	jne    460e <parse_struct+0x2e>
    4eaf:	83 bf 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%edi)
    4eb6:	74 5f                	je     4f17 <parse_struct+0x937>
    4eb8:	c7 87 20 10 00 00 80 	movl   $0xffffff80,0x1020(%edi)
    4ebf:	ff ff ff 
    4ec2:	c7 07 fe ff ff ff    	movl   $0xfffffffe,(%edi)
    4ec8:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
    4ecd:	e9 3c f7 ff ff       	jmp    460e <parse_struct+0x2e>
    4ed2:	8b 97 24 10 00 00    	mov    0x1024(%edi),%edx
    4ed8:	89 45 b0             	mov    %eax,-0x50(%ebp)
    4edb:	89 14 24             	mov    %edx,(%esp)
    4ede:	e8 fd b2 01 00       	call   201e0 <free>
    4ee3:	8b 45 b0             	mov    -0x50(%ebp),%eax
    4ee6:	e9 3c fd ff ff       	jmp    4c27 <parse_struct+0x647>
    4eeb:	8b 37                	mov    (%edi),%esi
    4eed:	31 c0                	xor    %eax,%eax
    4eef:	85 f6                	test   %esi,%esi
    4ef1:	0f 85 88 fe ff ff    	jne    4d7f <parse_struct+0x79f>
    4ef7:	83 bf 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%edi)
    4efe:	0f 84 9a 00 00 00    	je     4f9e <parse_struct+0x9be>
    4f04:	c7 87 20 10 00 00 80 	movl   $0xffffff80,0x1020(%edi)
    4f0b:	ff ff ff 
    4f0e:	89 1f                	mov    %ebx,(%edi)
    4f10:	31 c0                	xor    %eax,%eax
    4f12:	e9 68 fe ff ff       	jmp    4d7f <parse_struct+0x79f>
    4f17:	8b 87 24 10 00 00    	mov    0x1024(%edi),%eax
    4f1d:	89 04 24             	mov    %eax,(%esp)
    4f20:	e8 bb b2 01 00       	call   201e0 <free>
    4f25:	eb 91                	jmp    4eb8 <parse_struct+0x8d8>
    4f27:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    4f2e:	00 
    4f2f:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    4f36:	00 
    4f37:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    4f3e:	e8 6d 59 02 00       	call   2a8b0 <assert_abort>
    4f43:	e8 d8 0c 00 00       	call   5c20 <bithenge_transform_dec_ref.part.8>
    4f48:	e8 8f 0c 00 00       	call   5bdc <bithenge_expression_dec_ref.part.4>
    4f4d:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    4f54:	00 
    4f55:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    4f5c:	00 
    4f5d:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    4f64:	e8 47 59 02 00       	call   2a8b0 <assert_abort>
    4f69:	8b 97 24 10 00 00    	mov    0x1024(%edi),%edx
    4f6f:	89 45 b0             	mov    %eax,-0x50(%ebp)
    4f72:	89 14 24             	mov    %edx,(%esp)
    4f75:	e8 66 b2 01 00       	call   201e0 <free>
    4f7a:	8b 45 b0             	mov    -0x50(%ebp),%eax
    4f7d:	e9 4d fd ff ff       	jmp    4ccf <parse_struct+0x6ef>
    4f82:	c7 44 24 08 41 00 00 	movl   $0x41,0x8(%esp)
    4f89:	00 
    4f8a:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    4f91:	00 
    4f92:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    4f99:	e8 12 59 02 00       	call   2a8b0 <assert_abort>
    4f9e:	8b 87 24 10 00 00    	mov    0x1024(%edi),%eax
    4fa4:	89 04 24             	mov    %eax,(%esp)
    4fa7:	e8 34 b2 01 00       	call   201e0 <free>
    4fac:	e9 53 ff ff ff       	jmp    4f04 <parse_struct+0x924>
    4fb1:	89 c6                	mov    %eax,%esi
    4fb3:	89 55 b8             	mov    %edx,-0x48(%ebp)
    4fb6:	e9 53 fd ff ff       	jmp    4d0e <parse_struct+0x72e>
    4fbb:	89 55 b8             	mov    %edx,-0x48(%ebp)
    4fbe:	89 55 c8             	mov    %edx,-0x38(%ebp)
    4fc1:	e9 9d fa ff ff       	jmp    4a63 <parse_struct+0x483>
    4fc6:	8d 76 00             	lea    0x0(%esi),%esi
    4fc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00004fd0 <parse_if>:
    4fd0:	55                   	push   %ebp
    4fd1:	89 e5                	mov    %esp,%ebp
    4fd3:	57                   	push   %edi
    4fd4:	56                   	push   %esi
    4fd5:	53                   	push   %ebx
    4fd6:	83 ec 3c             	sub    $0x3c,%esp
    4fd9:	89 c3                	mov    %eax,%ebx
    4fdb:	8b 80 20 10 00 00    	mov    0x1020(%eax),%eax
    4fe1:	89 d6                	mov    %edx,%esi
    4fe3:	83 f8 90             	cmp    $0xffffff90,%eax
    4fe6:	0f 84 d4 02 00 00    	je     52c0 <parse_if+0x2f0>
    4fec:	8b 3b                	mov    (%ebx),%edi
    4fee:	85 ff                	test   %edi,%edi
    4ff0:	0f 84 a2 02 00 00    	je     5298 <parse_if+0x2c8>
    4ff6:	83 f8 28             	cmp    $0x28,%eax
    4ff9:	0f 84 b4 02 00 00    	je     52b3 <parse_if+0x2e3>
    4fff:	8b 0b                	mov    (%ebx),%ecx
    5001:	85 c9                	test   %ecx,%ecx
    5003:	0f 84 77 02 00 00    	je     5280 <parse_if+0x2b0>
    5009:	31 d2                	xor    %edx,%edx
    500b:	89 d8                	mov    %ebx,%eax
    500d:	e8 5e d8 ff ff       	call   2870 <parse_expression_precedence>
    5012:	89 c7                	mov    %eax,%edi
    5014:	8b 83 20 10 00 00    	mov    0x1020(%ebx),%eax
    501a:	83 f8 29             	cmp    $0x29,%eax
    501d:	0f 84 b5 02 00 00    	je     52d8 <parse_if+0x308>
    5023:	8b 13                	mov    (%ebx),%edx
    5025:	85 d2                	test   %edx,%edx
    5027:	0f 84 2b 02 00 00    	je     5258 <parse_if+0x288>
    502d:	83 f8 7b             	cmp    $0x7b,%eax
    5030:	0f 84 3d 02 00 00    	je     5273 <parse_if+0x2a3>
    5036:	8b 0b                	mov    (%ebx),%ecx
    5038:	85 c9                	test   %ecx,%ecx
    503a:	0f 84 00 02 00 00    	je     5240 <parse_if+0x270>
    5040:	89 f0                	mov    %esi,%eax
    5042:	84 c0                	test   %al,%al
    5044:	89 d8                	mov    %ebx,%eax
    5046:	0f 84 bc 00 00 00    	je     5108 <parse_if+0x138>
    504c:	e8 8f f5 ff ff       	call   45e0 <parse_struct>
    5051:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    5054:	8b 83 20 10 00 00    	mov    0x1020(%ebx),%eax
    505a:	83 f8 7d             	cmp    $0x7d,%eax
    505d:	0f 84 bc 00 00 00    	je     511f <parse_if+0x14f>
    5063:	8b 13                	mov    (%ebx),%edx
    5065:	85 d2                	test   %edx,%edx
    5067:	0f 84 bb 01 00 00    	je     5228 <parse_if+0x258>
    506d:	83 f8 8e             	cmp    $0xffffff8e,%eax
    5070:	0f 84 bf 00 00 00    	je     5135 <parse_if+0x165>
    5076:	89 f0                	mov    %esi,%eax
    5078:	84 c0                	test   %al,%al
    507a:	0f 84 18 01 00 00    	je     5198 <parse_if+0x1c8>
    5080:	8d 45 dc             	lea    -0x24(%ebp),%eax
    5083:	89 04 24             	mov    %eax,(%esp)
    5086:	e8 05 57 00 00       	call   a790 <bithenge_new_empty_internal_node>
    508b:	85 c0                	test   %eax,%eax
    508d:	0f 85 75 02 00 00    	jne    5308 <parse_if+0x338>
    5093:	8b 45 dc             	mov    -0x24(%ebp),%eax
    5096:	89 44 24 04          	mov    %eax,0x4(%esp)
    509a:	8d 45 e0             	lea    -0x20(%ebp),%eax
    509d:	89 04 24             	mov    %eax,(%esp)
    50a0:	e8 0b 87 00 00       	call   d7b0 <bithenge_const_expression>
    50a5:	85 c0                	test   %eax,%eax
    50a7:	0f 85 5b 02 00 00    	jne    5308 <parse_if+0x338>
    50ad:	8b 45 e0             	mov    -0x20(%ebp),%eax
    50b0:	89 44 24 04          	mov    %eax,0x4(%esp)
    50b4:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    50b7:	89 04 24             	mov    %eax,(%esp)
    50ba:	e8 e1 8a 00 00       	call   dba0 <bithenge_inputless_transform>
    50bf:	85 c0                	test   %eax,%eax
    50c1:	0f 85 41 02 00 00    	jne    5308 <parse_if+0x338>
    50c7:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    50ca:	8b 13                	mov    (%ebx),%edx
    50cc:	85 d2                	test   %edx,%edx
    50ce:	0f 85 d0 00 00 00    	jne    51a4 <parse_if+0x1d4>
    50d4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    50d7:	89 74 24 0c          	mov    %esi,0xc(%esp)
    50db:	89 44 24 08          	mov    %eax,0x8(%esp)
    50df:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    50e2:	89 7c 24 04          	mov    %edi,0x4(%esp)
    50e6:	89 04 24             	mov    %eax,(%esp)
    50e9:	e8 02 71 00 00       	call   c1f0 <bithenge_if_transform>
    50ee:	89 c6                	mov    %eax,%esi
    50f0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    50f3:	85 f6                	test   %esi,%esi
    50f5:	0f 85 95 02 00 00    	jne    5390 <parse_if+0x3c0>
    50fb:	83 c4 3c             	add    $0x3c,%esp
    50fe:	5b                   	pop    %ebx
    50ff:	5e                   	pop    %esi
    5100:	5f                   	pop    %edi
    5101:	5d                   	pop    %ebp
    5102:	c3                   	ret    
    5103:	90                   	nop
    5104:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5108:	e8 a3 f2 ff ff       	call   43b0 <parse_transform>
    510d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    5110:	8b 83 20 10 00 00    	mov    0x1020(%ebx),%eax
    5116:	83 f8 7d             	cmp    $0x7d,%eax
    5119:	0f 85 44 ff ff ff    	jne    5063 <parse_if+0x93>
    511f:	89 d8                	mov    %ebx,%eax
    5121:	e8 7a ce ff ff       	call   1fa0 <next_token>
    5126:	8b 83 20 10 00 00    	mov    0x1020(%ebx),%eax
    512c:	83 f8 8e             	cmp    $0xffffff8e,%eax
    512f:	0f 85 41 ff ff ff    	jne    5076 <parse_if+0xa6>
    5135:	89 d8                	mov    %ebx,%eax
    5137:	e8 64 ce ff ff       	call   1fa0 <next_token>
    513c:	83 bb 20 10 00 00 7b 	cmpl   $0x7b,0x1020(%ebx)
    5143:	0f 84 ff 01 00 00    	je     5348 <parse_if+0x378>
    5149:	8b 03                	mov    (%ebx),%eax
    514b:	85 c0                	test   %eax,%eax
    514d:	75 0c                	jne    515b <parse_if+0x18b>
    514f:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    5154:	89 d8                	mov    %ebx,%eax
    5156:	e8 45 cd ff ff       	call   1ea0 <syntax_error.part.2>
    515b:	89 f1                	mov    %esi,%ecx
    515d:	89 d8                	mov    %ebx,%eax
    515f:	84 c9                	test   %cl,%cl
    5161:	0f 84 d1 01 00 00    	je     5338 <parse_if+0x368>
    5167:	e8 74 f4 ff ff       	call   45e0 <parse_struct>
    516c:	89 c6                	mov    %eax,%esi
    516e:	83 bb 20 10 00 00 7d 	cmpl   $0x7d,0x1020(%ebx)
    5175:	0f 84 dd 01 00 00    	je     5358 <parse_if+0x388>
    517b:	8b 03                	mov    (%ebx),%eax
    517d:	85 c0                	test   %eax,%eax
    517f:	75 23                	jne    51a4 <parse_if+0x1d4>
    5181:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    5186:	89 d8                	mov    %ebx,%eax
    5188:	e8 13 cd ff ff       	call   1ea0 <syntax_error.part.2>
    518d:	8b 13                	mov    (%ebx),%edx
    518f:	e9 38 ff ff ff       	jmp    50cc <parse_if+0xfc>
    5194:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5198:	8b 03                	mov    (%ebx),%eax
    519a:	31 f6                	xor    %esi,%esi
    519c:	85 c0                	test   %eax,%eax
    519e:	0f 84 4c 01 00 00    	je     52f0 <parse_if+0x320>
    51a4:	85 ff                	test   %edi,%edi
    51a6:	74 23                	je     51cb <parse_if+0x1fb>
    51a8:	8b 17                	mov    (%edi),%edx
    51aa:	85 d2                	test   %edx,%edx
    51ac:	0f 84 51 02 00 00    	je     5403 <parse_if+0x433>
    51b2:	8b 47 04             	mov    0x4(%edi),%eax
    51b5:	85 c0                	test   %eax,%eax
    51b7:	0f 84 2a 02 00 00    	je     53e7 <parse_if+0x417>
    51bd:	48                   	dec    %eax
    51be:	89 47 04             	mov    %eax,0x4(%edi)
    51c1:	85 c0                	test   %eax,%eax
    51c3:	75 06                	jne    51cb <parse_if+0x1fb>
    51c5:	89 3c 24             	mov    %edi,(%esp)
    51c8:	ff 52 04             	call   *0x4(%edx)
    51cb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    51ce:	85 c0                	test   %eax,%eax
    51d0:	74 28                	je     51fa <parse_if+0x22a>
    51d2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    51d5:	8b 10                	mov    (%eax),%edx
    51d7:	85 d2                	test   %edx,%edx
    51d9:	0f 84 03 02 00 00    	je     53e2 <parse_if+0x412>
    51df:	89 c1                	mov    %eax,%ecx
    51e1:	8b 40 04             	mov    0x4(%eax),%eax
    51e4:	85 c0                	test   %eax,%eax
    51e6:	0f 84 da 01 00 00    	je     53c6 <parse_if+0x3f6>
    51ec:	48                   	dec    %eax
    51ed:	89 41 04             	mov    %eax,0x4(%ecx)
    51f0:	85 c0                	test   %eax,%eax
    51f2:	75 06                	jne    51fa <parse_if+0x22a>
    51f4:	89 0c 24             	mov    %ecx,(%esp)
    51f7:	ff 52 0c             	call   *0xc(%edx)
    51fa:	85 f6                	test   %esi,%esi
    51fc:	74 21                	je     521f <parse_if+0x24f>
    51fe:	8b 16                	mov    (%esi),%edx
    5200:	85 d2                	test   %edx,%edx
    5202:	0f 84 da 01 00 00    	je     53e2 <parse_if+0x412>
    5208:	8b 46 04             	mov    0x4(%esi),%eax
    520b:	85 c0                	test   %eax,%eax
    520d:	0f 84 b3 01 00 00    	je     53c6 <parse_if+0x3f6>
    5213:	48                   	dec    %eax
    5214:	89 46 04             	mov    %eax,0x4(%esi)
    5217:	85 c0                	test   %eax,%eax
    5219:	0f 84 49 01 00 00    	je     5368 <parse_if+0x398>
    521f:	31 c0                	xor    %eax,%eax
    5221:	e9 d5 fe ff ff       	jmp    50fb <parse_if+0x12b>
    5226:	66 90                	xchg   %ax,%ax
    5228:	89 d8                	mov    %ebx,%eax
    522a:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    522f:	e8 6c cc ff ff       	call   1ea0 <syntax_error.part.2>
    5234:	8b 83 20 10 00 00    	mov    0x1020(%ebx),%eax
    523a:	e9 2e fe ff ff       	jmp    506d <parse_if+0x9d>
    523f:	90                   	nop
    5240:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    5245:	89 d8                	mov    %ebx,%eax
    5247:	e8 54 cc ff ff       	call   1ea0 <syntax_error.part.2>
    524c:	e9 ef fd ff ff       	jmp    5040 <parse_if+0x70>
    5251:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5258:	89 d8                	mov    %ebx,%eax
    525a:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    525f:	e8 3c cc ff ff       	call   1ea0 <syntax_error.part.2>
    5264:	8b 83 20 10 00 00    	mov    0x1020(%ebx),%eax
    526a:	83 f8 7b             	cmp    $0x7b,%eax
    526d:	0f 85 c3 fd ff ff    	jne    5036 <parse_if+0x66>
    5273:	89 d8                	mov    %ebx,%eax
    5275:	e8 26 cd ff ff       	call   1fa0 <next_token>
    527a:	e9 c1 fd ff ff       	jmp    5040 <parse_if+0x70>
    527f:	90                   	nop
    5280:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    5285:	89 d8                	mov    %ebx,%eax
    5287:	e8 14 cc ff ff       	call   1ea0 <syntax_error.part.2>
    528c:	e9 78 fd ff ff       	jmp    5009 <parse_if+0x39>
    5291:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5298:	89 d8                	mov    %ebx,%eax
    529a:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    529f:	e8 fc cb ff ff       	call   1ea0 <syntax_error.part.2>
    52a4:	8b 83 20 10 00 00    	mov    0x1020(%ebx),%eax
    52aa:	83 f8 28             	cmp    $0x28,%eax
    52ad:	0f 85 4c fd ff ff    	jne    4fff <parse_if+0x2f>
    52b3:	89 d8                	mov    %ebx,%eax
    52b5:	e8 e6 cc ff ff       	call   1fa0 <next_token>
    52ba:	e9 4a fd ff ff       	jmp    5009 <parse_if+0x39>
    52bf:	90                   	nop
    52c0:	89 d8                	mov    %ebx,%eax
    52c2:	e8 d9 cc ff ff       	call   1fa0 <next_token>
    52c7:	8b 83 20 10 00 00    	mov    0x1020(%ebx),%eax
    52cd:	e9 24 fd ff ff       	jmp    4ff6 <parse_if+0x26>
    52d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    52d8:	89 d8                	mov    %ebx,%eax
    52da:	e8 c1 cc ff ff       	call   1fa0 <next_token>
    52df:	8b 83 20 10 00 00    	mov    0x1020(%ebx),%eax
    52e5:	e9 43 fd ff ff       	jmp    502d <parse_if+0x5d>
    52ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    52f0:	ba 97 cf 02 00       	mov    $0x2cf97,%edx
    52f5:	89 d8                	mov    %ebx,%eax
    52f7:	e8 a4 cb ff ff       	call   1ea0 <syntax_error.part.2>
    52fc:	8b 13                	mov    (%ebx),%edx
    52fe:	e9 c9 fd ff ff       	jmp    50cc <parse_if+0xfc>
    5303:	90                   	nop
    5304:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5308:	8b 13                	mov    (%ebx),%edx
    530a:	31 f6                	xor    %esi,%esi
    530c:	85 d2                	test   %edx,%edx
    530e:	0f 85 b8 fd ff ff    	jne    50cc <parse_if+0xfc>
    5314:	83 bb 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%ebx)
    531b:	74 58                	je     5375 <parse_if+0x3a5>
    531d:	c7 83 20 10 00 00 80 	movl   $0xffffff80,0x1020(%ebx)
    5324:	ff ff ff 
    5327:	89 03                	mov    %eax,(%ebx)
    5329:	89 c2                	mov    %eax,%edx
    532b:	31 f6                	xor    %esi,%esi
    532d:	e9 9a fd ff ff       	jmp    50cc <parse_if+0xfc>
    5332:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5338:	e8 73 f0 ff ff       	call   43b0 <parse_transform>
    533d:	89 c6                	mov    %eax,%esi
    533f:	e9 2a fe ff ff       	jmp    516e <parse_if+0x19e>
    5344:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5348:	89 d8                	mov    %ebx,%eax
    534a:	e8 51 cc ff ff       	call   1fa0 <next_token>
    534f:	e9 07 fe ff ff       	jmp    515b <parse_if+0x18b>
    5354:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5358:	89 d8                	mov    %ebx,%eax
    535a:	e8 41 cc ff ff       	call   1fa0 <next_token>
    535f:	8b 13                	mov    (%ebx),%edx
    5361:	e9 66 fd ff ff       	jmp    50cc <parse_if+0xfc>
    5366:	66 90                	xchg   %ax,%ax
    5368:	89 34 24             	mov    %esi,(%esp)
    536b:	ff 52 0c             	call   *0xc(%edx)
    536e:	31 c0                	xor    %eax,%eax
    5370:	e9 86 fd ff ff       	jmp    50fb <parse_if+0x12b>
    5375:	8b 93 24 10 00 00    	mov    0x1024(%ebx),%edx
    537b:	89 45 d0             	mov    %eax,-0x30(%ebp)
    537e:	89 14 24             	mov    %edx,(%esp)
    5381:	e8 5a ae 01 00       	call   201e0 <free>
    5386:	8b 45 d0             	mov    -0x30(%ebp),%eax
    5389:	eb 92                	jmp    531d <parse_if+0x34d>
    538b:	90                   	nop
    538c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5390:	8b 3b                	mov    (%ebx),%edi
    5392:	85 ff                	test   %edi,%edi
    5394:	0f 85 85 fe ff ff    	jne    521f <parse_if+0x24f>
    539a:	83 bb 20 10 00 00 86 	cmpl   $0xffffff86,0x1020(%ebx)
    53a1:	74 13                	je     53b6 <parse_if+0x3e6>
    53a3:	c7 83 20 10 00 00 80 	movl   $0xffffff80,0x1020(%ebx)
    53aa:	ff ff ff 
    53ad:	89 33                	mov    %esi,(%ebx)
    53af:	31 c0                	xor    %eax,%eax
    53b1:	e9 45 fd ff ff       	jmp    50fb <parse_if+0x12b>
    53b6:	8b 83 24 10 00 00    	mov    0x1024(%ebx),%eax
    53bc:	89 04 24             	mov    %eax,(%esp)
    53bf:	e8 1c ae 01 00       	call   201e0 <free>
    53c4:	eb dd                	jmp    53a3 <parse_if+0x3d3>
    53c6:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    53cd:	00 
    53ce:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    53d5:	00 
    53d6:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    53dd:	e8 ce 54 02 00       	call   2a8b0 <assert_abort>
    53e2:	e8 39 08 00 00       	call   5c20 <bithenge_transform_dec_ref.part.8>
    53e7:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    53ee:	00 
    53ef:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    53f6:	00 
    53f7:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    53fe:	e8 ad 54 02 00       	call   2a8b0 <assert_abort>
    5403:	e8 d4 07 00 00       	call   5bdc <bithenge_expression_dec_ref.part.4>
    5408:	90                   	nop
    5409:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00005410 <bithenge_parse_script>:
    5410:	55                   	push   %ebp
    5411:	89 e5                	mov    %esp,%ebp
    5413:	57                   	push   %edi
    5414:	56                   	push   %esi
    5415:	53                   	push   %ebx
    5416:	81 ec 6c 10 00 00    	sub    $0x106c,%esp
    541c:	c7 85 b0 ef ff ff 00 	movl   $0x0,-0x1050(%ebp)
    5423:	00 00 00 
    5426:	8b 45 08             	mov    0x8(%ebp),%eax
    5429:	c7 85 b4 ef ff ff 00 	movl   $0x0,-0x104c(%ebp)
    5430:	00 00 00 
    5433:	c7 44 24 04 3f e8 02 	movl   $0x2e83f,0x4(%esp)
    543a:	00 
    543b:	89 04 24             	mov    %eax,(%esp)
    543e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    5445:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    544c:	c7 45 d0 80 ff ff ff 	movl   $0xffffff80,-0x30(%ebp)
    5453:	c7 45 c0 ff 0f 00 00 	movl   $0xfff,-0x40(%ebp)
    545a:	c7 45 c4 ff 0f 00 00 	movl   $0xfff,-0x3c(%ebp)
    5461:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)
    5468:	c7 45 cc 02 f0 ff ff 	movl   $0xfffff002,-0x34(%ebp)
    546f:	89 85 b8 ef ff ff    	mov    %eax,-0x1048(%ebp)
    5475:	e8 76 3e 01 00       	call   192f0 <fopen>
    547a:	89 85 bc ef ff ff    	mov    %eax,-0x1044(%ebp)
    5480:	85 c0                	test   %eax,%eax
    5482:	0f 84 a7 06 00 00    	je     5b2f <bithenge_parse_script+0x71f>
    5488:	8d 9d b0 ef ff ff    	lea    -0x1050(%ebp),%ebx
    548e:	89 d8                	mov    %ebx,%eax
    5490:	e8 0b cb ff ff       	call   1fa0 <next_token>
    5495:	8b 85 b0 ef ff ff    	mov    -0x1050(%ebp),%eax
    549b:	85 c0                	test   %eax,%eax
    549d:	0f 85 88 01 00 00    	jne    562b <bithenge_parse_script+0x21b>
    54a3:	8b 45 d0             	mov    -0x30(%ebp),%eax
    54a6:	8d 9d b0 ef ff ff    	lea    -0x1050(%ebp),%ebx
    54ac:	83 f8 84             	cmp    $0xffffff84,%eax
    54af:	0f 84 76 01 00 00    	je     562b <bithenge_parse_script+0x21b>
    54b5:	8d 76 00             	lea    0x0(%esi),%esi
    54b8:	83 f8 96             	cmp    $0xffffff96,%eax
    54bb:	0f 84 6f 03 00 00    	je     5830 <bithenge_parse_script+0x420>
    54c1:	89 d8                	mov    %ebx,%eax
    54c3:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    54c8:	e8 d3 c9 ff ff       	call   1ea0 <syntax_error.part.2>
    54cd:	8b 45 d0             	mov    -0x30(%ebp),%eax
    54d0:	83 f8 86             	cmp    $0xffffff86,%eax
    54d3:	0f 85 6a 03 00 00    	jne    5843 <bithenge_parse_script+0x433>
    54d9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    54dc:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    54e3:	89 85 a0 ef ff ff    	mov    %eax,-0x1060(%ebp)
    54e9:	89 d8                	mov    %ebx,%eax
    54eb:	e8 b0 ca ff ff       	call   1fa0 <next_token>
    54f0:	8b 45 d0             	mov    -0x30(%ebp),%eax
    54f3:	83 f8 28             	cmp    $0x28,%eax
    54f6:	0f 84 6c 03 00 00    	je     5868 <bithenge_parse_script+0x458>
    54fc:	8b 85 b0 ef ff ff    	mov    -0x1050(%ebp),%eax
    5502:	c7 85 ac ef ff ff 00 	movl   $0x0,-0x1054(%ebp)
    5509:	00 00 00 
    550c:	85 c0                	test   %eax,%eax
    550e:	0f 84 2c 02 00 00    	je     5740 <bithenge_parse_script+0x330>
    5514:	31 ff                	xor    %edi,%edi
    5516:	31 d2                	xor    %edx,%edx
    5518:	8b 85 a0 ef ff ff    	mov    -0x1060(%ebp),%eax
    551e:	89 95 9c ef ff ff    	mov    %edx,-0x1064(%ebp)
    5524:	89 04 24             	mov    %eax,(%esp)
    5527:	e8 b4 ac 01 00       	call   201e0 <free>
    552c:	85 ff                	test   %edi,%edi
    552e:	8b 95 9c ef ff ff    	mov    -0x1064(%ebp),%edx
    5534:	74 2f                	je     5565 <bithenge_parse_script+0x155>
    5536:	8b 0f                	mov    (%edi),%ecx
    5538:	85 c9                	test   %ecx,%ecx
    553a:	0f 84 5c 06 00 00    	je     5b9c <bithenge_parse_script+0x78c>
    5540:	8b 47 04             	mov    0x4(%edi),%eax
    5543:	85 c0                	test   %eax,%eax
    5545:	0f 84 56 06 00 00    	je     5ba1 <bithenge_parse_script+0x791>
    554b:	48                   	dec    %eax
    554c:	89 47 04             	mov    %eax,0x4(%edi)
    554f:	85 c0                	test   %eax,%eax
    5551:	75 12                	jne    5565 <bithenge_parse_script+0x155>
    5553:	89 95 9c ef ff ff    	mov    %edx,-0x1064(%ebp)
    5559:	89 3c 24             	mov    %edi,(%esp)
    555c:	ff 51 0c             	call   *0xc(%ecx)
    555f:	8b 95 9c ef ff ff    	mov    -0x1064(%ebp),%edx
    5565:	89 14 24             	mov    %edx,(%esp)
    5568:	e8 73 ac 01 00       	call   201e0 <free>
    556d:	83 7d d0 3d          	cmpl   $0x3d,-0x30(%ebp)
    5571:	0f 84 42 02 00 00    	je     57b9 <bithenge_parse_script+0x3a9>
    5577:	8b 85 b0 ef ff ff    	mov    -0x1050(%ebp),%eax
    557d:	85 c0                	test   %eax,%eax
    557f:	75 0c                	jne    558d <bithenge_parse_script+0x17d>
    5581:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    5586:	89 d8                	mov    %ebx,%eax
    5588:	e8 13 c9 ff ff       	call   1ea0 <syntax_error.part.2>
    558d:	89 d8                	mov    %ebx,%eax
    558f:	e8 1c ee ff ff       	call   43b0 <parse_transform>
    5594:	83 7d d0 3b          	cmpl   $0x3b,-0x30(%ebp)
    5598:	89 c6                	mov    %eax,%esi
    559a:	0f 84 33 02 00 00    	je     57d3 <bithenge_parse_script+0x3c3>
    55a0:	8b bd b0 ef ff ff    	mov    -0x1050(%ebp),%edi
    55a6:	85 ff                	test   %edi,%edi
    55a8:	0f 84 1a 03 00 00    	je     58c8 <bithenge_parse_script+0x4b8>
    55ae:	85 f6                	test   %esi,%esi
    55b0:	74 26                	je     55d8 <bithenge_parse_script+0x1c8>
    55b2:	8b 16                	mov    (%esi),%edx
    55b4:	85 d2                	test   %edx,%edx
    55b6:	0f 84 e0 05 00 00    	je     5b9c <bithenge_parse_script+0x78c>
    55bc:	8b 46 04             	mov    0x4(%esi),%eax
    55bf:	85 c0                	test   %eax,%eax
    55c1:	0f 84 da 05 00 00    	je     5ba1 <bithenge_parse_script+0x791>
    55c7:	48                   	dec    %eax
    55c8:	89 46 04             	mov    %eax,0x4(%esi)
    55cb:	85 c0                	test   %eax,%eax
    55cd:	75 09                	jne    55d8 <bithenge_parse_script+0x1c8>
    55cf:	89 34 24             	mov    %esi,(%esp)
    55d2:	ff 52 0c             	call   *0xc(%edx)
    55d5:	8d 76 00             	lea    0x0(%esi),%esi
    55d8:	8b 7d e0             	mov    -0x20(%ebp),%edi
    55db:	31 f6                	xor    %esi,%esi
    55dd:	85 ff                	test   %edi,%edi
    55df:	7e 1b                	jle    55fc <bithenge_parse_script+0x1ec>
    55e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    55e8:	8b 45 dc             	mov    -0x24(%ebp),%eax
    55eb:	8b 04 b0             	mov    (%eax,%esi,4),%eax
    55ee:	46                   	inc    %esi
    55ef:	89 04 24             	mov    %eax,(%esp)
    55f2:	e8 e9 ab 01 00       	call   201e0 <free>
    55f7:	3b 75 e0             	cmp    -0x20(%ebp),%esi
    55fa:	7c ec                	jl     55e8 <bithenge_parse_script+0x1d8>
    55fc:	8b 45 dc             	mov    -0x24(%ebp),%eax
    55ff:	89 04 24             	mov    %eax,(%esp)
    5602:	e8 d9 ab 01 00       	call   201e0 <free>
    5607:	8b 8d b0 ef ff ff    	mov    -0x1050(%ebp),%ecx
    560d:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    5614:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    561b:	85 c9                	test   %ecx,%ecx
    561d:	75 0c                	jne    562b <bithenge_parse_script+0x21b>
    561f:	8b 45 d0             	mov    -0x30(%ebp),%eax
    5622:	83 f8 84             	cmp    $0xffffff84,%eax
    5625:	0f 85 8d fe ff ff    	jne    54b8 <bithenge_parse_script+0xa8>
    562b:	8b 9d b4 ef ff ff    	mov    -0x104c(%ebp),%ebx
    5631:	85 db                	test   %ebx,%ebx
    5633:	75 16                	jne    564b <bithenge_parse_script+0x23b>
    5635:	e9 43 04 00 00       	jmp    5a7d <bithenge_parse_script+0x66d>
    563a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    5640:	8b 5b 08             	mov    0x8(%ebx),%ebx
    5643:	85 db                	test   %ebx,%ebx
    5645:	0f 84 32 04 00 00    	je     5a7d <bithenge_parse_script+0x66d>
    564b:	c7 44 24 04 a5 cf 02 	movl   $0x2cfa5,0x4(%esp)
    5652:	00 
    5653:	8b 03                	mov    (%ebx),%eax
    5655:	89 04 24             	mov    %eax,(%esp)
    5658:	e8 c3 ee 00 00       	call   14520 <str_cmp>
    565d:	85 c0                	test   %eax,%eax
    565f:	75 df                	jne    5640 <bithenge_parse_script+0x230>
    5661:	8b 43 04             	mov    0x4(%ebx),%eax
    5664:	85 c0                	test   %eax,%eax
    5666:	0f 84 5f 04 00 00    	je     5acb <bithenge_parse_script+0x6bb>
    566c:	8b 50 04             	mov    0x4(%eax),%edx
    566f:	42                   	inc    %edx
    5670:	89 50 04             	mov    %edx,0x4(%eax)
    5673:	8b 55 0c             	mov    0xc(%ebp),%edx
    5676:	8b bd b0 ef ff ff    	mov    -0x1050(%ebp),%edi
    567c:	83 7d d0 86          	cmpl   $0xffffff86,-0x30(%ebp)
    5680:	89 02                	mov    %eax,(%edx)
    5682:	0f 84 59 04 00 00    	je     5ae1 <bithenge_parse_script+0x6d1>
    5688:	8b 85 bc ef ff ff    	mov    -0x1044(%ebp),%eax
    568e:	c7 45 d0 80 ff ff ff 	movl   $0xffffff80,-0x30(%ebp)
    5695:	85 c0                	test   %eax,%eax
    5697:	74 08                	je     56a1 <bithenge_parse_script+0x291>
    5699:	89 04 24             	mov    %eax,(%esp)
    569c:	e8 3f 3f 01 00       	call   195e0 <fclose>
    56a1:	8b 9d b4 ef ff ff    	mov    -0x104c(%ebp),%ebx
    56a7:	85 db                	test   %ebx,%ebx
    56a9:	74 4a                	je     56f5 <bithenge_parse_script+0x2e5>
    56ab:	90                   	nop
    56ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    56b0:	8b 03                	mov    (%ebx),%eax
    56b2:	8b 73 08             	mov    0x8(%ebx),%esi
    56b5:	89 04 24             	mov    %eax,(%esp)
    56b8:	e8 23 ab 01 00       	call   201e0 <free>
    56bd:	8b 43 04             	mov    0x4(%ebx),%eax
    56c0:	85 c0                	test   %eax,%eax
    56c2:	74 23                	je     56e7 <bithenge_parse_script+0x2d7>
    56c4:	8b 08                	mov    (%eax),%ecx
    56c6:	85 c9                	test   %ecx,%ecx
    56c8:	0f 84 ce 04 00 00    	je     5b9c <bithenge_parse_script+0x78c>
    56ce:	8b 50 04             	mov    0x4(%eax),%edx
    56d1:	85 d2                	test   %edx,%edx
    56d3:	0f 84 c8 04 00 00    	je     5ba1 <bithenge_parse_script+0x791>
    56d9:	4a                   	dec    %edx
    56da:	89 50 04             	mov    %edx,0x4(%eax)
    56dd:	85 d2                	test   %edx,%edx
    56df:	75 06                	jne    56e7 <bithenge_parse_script+0x2d7>
    56e1:	89 04 24             	mov    %eax,(%esp)
    56e4:	ff 51 0c             	call   *0xc(%ecx)
    56e7:	89 1c 24             	mov    %ebx,(%esp)
    56ea:	89 f3                	mov    %esi,%ebx
    56ec:	e8 ef aa 01 00       	call   201e0 <free>
    56f1:	85 f6                	test   %esi,%esi
    56f3:	75 bb                	jne    56b0 <bithenge_parse_script+0x2a0>
    56f5:	8b 45 e0             	mov    -0x20(%ebp),%eax
    56f8:	31 db                	xor    %ebx,%ebx
    56fa:	85 c0                	test   %eax,%eax
    56fc:	7e 16                	jle    5714 <bithenge_parse_script+0x304>
    56fe:	66 90                	xchg   %ax,%ax
    5700:	8b 45 dc             	mov    -0x24(%ebp),%eax
    5703:	8b 04 98             	mov    (%eax,%ebx,4),%eax
    5706:	43                   	inc    %ebx
    5707:	89 04 24             	mov    %eax,(%esp)
    570a:	e8 d1 aa 01 00       	call   201e0 <free>
    570f:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
    5712:	7c ec                	jl     5700 <bithenge_parse_script+0x2f0>
    5714:	8b 45 dc             	mov    -0x24(%ebp),%eax
    5717:	89 04 24             	mov    %eax,(%esp)
    571a:	e8 c1 aa 01 00       	call   201e0 <free>
    571f:	85 ff                	test   %edi,%edi
    5721:	75 0d                	jne    5730 <bithenge_parse_script+0x320>
    5723:	8b 45 0c             	mov    0xc(%ebp),%eax
    5726:	8b 00                	mov    (%eax),%eax
    5728:	85 c0                	test   %eax,%eax
    572a:	0f 84 8d 04 00 00    	je     5bbd <bithenge_parse_script+0x7ad>
    5730:	81 c4 6c 10 00 00    	add    $0x106c,%esp
    5736:	89 f8                	mov    %edi,%eax
    5738:	5b                   	pop    %ebx
    5739:	5e                   	pop    %esi
    573a:	5f                   	pop    %edi
    573b:	5d                   	pop    %ebp
    573c:	c3                   	ret    
    573d:	8d 76 00             	lea    0x0(%esi),%esi
    5740:	8b 45 e0             	mov    -0x20(%ebp),%eax
    5743:	8d 95 ac ef ff ff    	lea    -0x1054(%ebp),%edx
    5749:	89 44 24 04          	mov    %eax,0x4(%esp)
    574d:	89 14 24             	mov    %edx,(%esp)
    5750:	e8 bb 45 00 00       	call   9d10 <bithenge_new_barrier_transform>
    5755:	85 c0                	test   %eax,%eax
    5757:	0f 85 88 02 00 00    	jne    59e5 <bithenge_parse_script+0x5d5>
    575d:	8b 85 b0 ef ff ff    	mov    -0x1050(%ebp),%eax
    5763:	8b bd ac ef ff ff    	mov    -0x1054(%ebp),%edi
    5769:	85 c0                	test   %eax,%eax
    576b:	0f 85 a5 fd ff ff    	jne    5516 <bithenge_parse_script+0x106>
    5771:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)
    5778:	e8 53 a9 01 00       	call   200d0 <malloc>
    577d:	89 c2                	mov    %eax,%edx
    577f:	85 c0                	test   %eax,%eax
    5781:	0f 84 c8 02 00 00    	je     5a4f <bithenge_parse_script+0x63f>
    5787:	8b 8d b0 ef ff ff    	mov    -0x1050(%ebp),%ecx
    578d:	85 c9                	test   %ecx,%ecx
    578f:	0f 85 83 fd ff ff    	jne    5518 <bithenge_parse_script+0x108>
    5795:	8b 95 a0 ef ff ff    	mov    -0x1060(%ebp),%edx
    579b:	89 78 04             	mov    %edi,0x4(%eax)
    579e:	89 10                	mov    %edx,(%eax)
    57a0:	8b 95 b4 ef ff ff    	mov    -0x104c(%ebp),%edx
    57a6:	89 50 08             	mov    %edx,0x8(%eax)
    57a9:	89 85 b4 ef ff ff    	mov    %eax,-0x104c(%ebp)
    57af:	83 7d d0 3d          	cmpl   $0x3d,-0x30(%ebp)
    57b3:	0f 85 be fd ff ff    	jne    5577 <bithenge_parse_script+0x167>
    57b9:	89 d8                	mov    %ebx,%eax
    57bb:	e8 e0 c7 ff ff       	call   1fa0 <next_token>
    57c0:	89 d8                	mov    %ebx,%eax
    57c2:	e8 e9 eb ff ff       	call   43b0 <parse_transform>
    57c7:	83 7d d0 3b          	cmpl   $0x3b,-0x30(%ebp)
    57cb:	89 c6                	mov    %eax,%esi
    57cd:	0f 85 cd fd ff ff    	jne    55a0 <bithenge_parse_script+0x190>
    57d3:	89 d8                	mov    %ebx,%eax
    57d5:	e8 c6 c7 ff ff       	call   1fa0 <next_token>
    57da:	8b 8d b0 ef ff ff    	mov    -0x1050(%ebp),%ecx
    57e0:	85 c9                	test   %ecx,%ecx
    57e2:	0f 85 c6 fd ff ff    	jne    55ae <bithenge_parse_script+0x19e>
    57e8:	8b 85 ac ef ff ff    	mov    -0x1054(%ebp),%eax
    57ee:	89 74 24 04          	mov    %esi,0x4(%esp)
    57f2:	89 04 24             	mov    %eax,(%esp)
    57f5:	e8 96 44 00 00       	call   9c90 <bithenge_barrier_transform_set_subtransform>
    57fa:	85 c0                	test   %eax,%eax
    57fc:	0f 84 d6 fd ff ff    	je     55d8 <bithenge_parse_script+0x1c8>
    5802:	8b 95 b0 ef ff ff    	mov    -0x1050(%ebp),%edx
    5808:	85 d2                	test   %edx,%edx
    580a:	0f 85 c8 fd ff ff    	jne    55d8 <bithenge_parse_script+0x1c8>
    5810:	83 7d d0 86          	cmpl   $0xffffff86,-0x30(%ebp)
    5814:	0f 84 f9 02 00 00    	je     5b13 <bithenge_parse_script+0x703>
    581a:	c7 45 d0 80 ff ff ff 	movl   $0xffffff80,-0x30(%ebp)
    5821:	89 85 b0 ef ff ff    	mov    %eax,-0x1050(%ebp)
    5827:	e9 ac fd ff ff       	jmp    55d8 <bithenge_parse_script+0x1c8>
    582c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5830:	89 d8                	mov    %ebx,%eax
    5832:	e8 69 c7 ff ff       	call   1fa0 <next_token>
    5837:	8b 45 d0             	mov    -0x30(%ebp),%eax
    583a:	83 f8 86             	cmp    $0xffffff86,%eax
    583d:	0f 84 96 fc ff ff    	je     54d9 <bithenge_parse_script+0xc9>
    5843:	8b bd b0 ef ff ff    	mov    -0x1050(%ebp),%edi
    5849:	85 ff                	test   %edi,%edi
    584b:	0f 84 76 01 00 00    	je     59c7 <bithenge_parse_script+0x5b7>
    5851:	c7 85 a0 ef ff ff 00 	movl   $0x0,-0x1060(%ebp)
    5858:	00 00 00 
    585b:	83 f8 28             	cmp    $0x28,%eax
    585e:	0f 85 98 fc ff ff    	jne    54fc <bithenge_parse_script+0xec>
    5864:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5868:	89 d8                	mov    %ebx,%eax
    586a:	e8 31 c7 ff ff       	call   1fa0 <next_token>
    586f:	8b b5 b0 ef ff ff    	mov    -0x1050(%ebp),%esi
    5875:	8b 55 d0             	mov    -0x30(%ebp),%edx
    5878:	85 f6                	test   %esi,%esi
    587a:	75 30                	jne    58ac <bithenge_parse_script+0x49c>
    587c:	83 fa 29             	cmp    $0x29,%edx
    587f:	0f 84 d6 00 00 00    	je     595b <bithenge_parse_script+0x54b>
    5885:	8b 45 e0             	mov    -0x20(%ebp),%eax
    5888:	89 9d a4 ef ff ff    	mov    %ebx,-0x105c(%ebp)
    588e:	89 c1                	mov    %eax,%ecx
    5890:	85 c9                	test   %ecx,%ecx
    5892:	0f 85 d0 00 00 00    	jne    5968 <bithenge_parse_script+0x558>
    5898:	31 c0                	xor    %eax,%eax
    589a:	31 d2                	xor    %edx,%edx
    589c:	8b 7d dc             	mov    -0x24(%ebp),%edi
    589f:	85 c0                	test   %eax,%eax
    58a1:	74 3d                	je     58e0 <bithenge_parse_script+0x4d0>
    58a3:	8b 9d a4 ef ff ff    	mov    -0x105c(%ebp),%ebx
    58a9:	8b 55 d0             	mov    -0x30(%ebp),%edx
    58ac:	83 fa 29             	cmp    $0x29,%edx
    58af:	0f 84 a6 00 00 00    	je     595b <bithenge_parse_script+0x54b>
    58b5:	c7 85 ac ef ff ff 00 	movl   $0x0,-0x1054(%ebp)
    58bc:	00 00 00 
    58bf:	31 ff                	xor    %edi,%edi
    58c1:	e9 50 fc ff ff       	jmp    5516 <bithenge_parse_script+0x106>
    58c6:	66 90                	xchg   %ax,%ax
    58c8:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    58cd:	89 d8                	mov    %ebx,%eax
    58cf:	e8 cc c5 ff ff       	call   1ea0 <syntax_error.part.2>
    58d4:	e9 01 ff ff ff       	jmp    57da <bithenge_parse_script+0x3ca>
    58d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    58e0:	8d 04 95 04 00 00 00 	lea    0x4(,%edx,4),%eax
    58e7:	89 3c 24             	mov    %edi,(%esp)
    58ea:	89 44 24 04          	mov    %eax,0x4(%esp)
    58ee:	e8 3d ab 01 00       	call   20430 <realloc>
    58f3:	8b 8d b0 ef ff ff    	mov    -0x1050(%ebp),%ecx
    58f9:	85 c0                	test   %eax,%eax
    58fb:	0f 84 1a 01 00 00    	je     5a1b <bithenge_parse_script+0x60b>
    5901:	8b 55 d0             	mov    -0x30(%ebp),%edx
    5904:	89 45 dc             	mov    %eax,-0x24(%ebp)
    5907:	85 c9                	test   %ecx,%ecx
    5909:	0f 85 75 02 00 00    	jne    5b84 <bithenge_parse_script+0x774>
    590f:	8b 75 e0             	mov    -0x20(%ebp),%esi
    5912:	83 fa 86             	cmp    $0xffffff86,%edx
    5915:	8d 3c b0             	lea    (%eax,%esi,4),%edi
    5918:	0f 85 92 00 00 00    	jne    59b0 <bithenge_parse_script+0x5a0>
    591e:	8b 85 a4 ef ff ff    	mov    -0x105c(%ebp),%eax
    5924:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
    5927:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    592e:	e8 6d c6 ff ff       	call   1fa0 <next_token>
    5933:	89 1f                	mov    %ebx,(%edi)
    5935:	8d 4e 01             	lea    0x1(%esi),%ecx
    5938:	8b 9d b0 ef ff ff    	mov    -0x1050(%ebp),%ebx
    593e:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    5941:	85 db                	test   %ebx,%ebx
    5943:	0f 85 5a ff ff ff    	jne    58a3 <bithenge_parse_script+0x493>
    5949:	8b 55 d0             	mov    -0x30(%ebp),%edx
    594c:	83 fa 29             	cmp    $0x29,%edx
    594f:	0f 85 3b ff ff ff    	jne    5890 <bithenge_parse_script+0x480>
    5955:	8b 9d a4 ef ff ff    	mov    -0x105c(%ebp),%ebx
    595b:	89 d8                	mov    %ebx,%eax
    595d:	e8 3e c6 ff ff       	call   1fa0 <next_token>
    5962:	e9 95 fb ff ff       	jmp    54fc <bithenge_parse_script+0xec>
    5967:	90                   	nop
    5968:	83 fa 2c             	cmp    $0x2c,%edx
    596b:	74 23                	je     5990 <bithenge_parse_script+0x580>
    596d:	ba 4a cf 02 00       	mov    $0x2cf4a,%edx
    5972:	8b 85 a4 ef ff ff    	mov    -0x105c(%ebp),%eax
    5978:	e8 23 c5 ff ff       	call   1ea0 <syntax_error.part.2>
    597d:	8b 55 e0             	mov    -0x20(%ebp),%edx
    5980:	8b 85 b0 ef ff ff    	mov    -0x1050(%ebp),%eax
    5986:	e9 11 ff ff ff       	jmp    589c <bithenge_parse_script+0x48c>
    598b:	90                   	nop
    598c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5990:	8b 85 a4 ef ff ff    	mov    -0x105c(%ebp),%eax
    5996:	e8 05 c6 ff ff       	call   1fa0 <next_token>
    599b:	8b 55 e0             	mov    -0x20(%ebp),%edx
    599e:	8b 85 b0 ef ff ff    	mov    -0x1050(%ebp),%eax
    59a4:	e9 f3 fe ff ff       	jmp    589c <bithenge_parse_script+0x48c>
    59a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    59b0:	ba c0 cf 02 00       	mov    $0x2cfc0,%edx
    59b5:	8b 85 a4 ef ff ff    	mov    -0x105c(%ebp),%eax
    59bb:	e8 e0 c4 ff ff       	call   1ea0 <syntax_error.part.2>
    59c0:	31 db                	xor    %ebx,%ebx
    59c2:	e9 6c ff ff ff       	jmp    5933 <bithenge_parse_script+0x523>
    59c7:	89 d8                	mov    %ebx,%eax
    59c9:	ba c0 cf 02 00       	mov    $0x2cfc0,%edx
    59ce:	e8 cd c4 ff ff       	call   1ea0 <syntax_error.part.2>
    59d3:	8b 45 d0             	mov    -0x30(%ebp),%eax
    59d6:	c7 85 a0 ef ff ff 00 	movl   $0x0,-0x1060(%ebp)
    59dd:	00 00 00 
    59e0:	e9 0e fb ff ff       	jmp    54f3 <bithenge_parse_script+0xe3>
    59e5:	8b 95 b0 ef ff ff    	mov    -0x1050(%ebp),%edx
    59eb:	c7 85 ac ef ff ff 00 	movl   $0x0,-0x1054(%ebp)
    59f2:	00 00 00 
    59f5:	85 d2                	test   %edx,%edx
    59f7:	0f 85 17 fb ff ff    	jne    5514 <bithenge_parse_script+0x104>
    59fd:	31 ff                	xor    %edi,%edi
    59ff:	83 7d d0 86          	cmpl   $0xffffff86,-0x30(%ebp)
    5a03:	0f 84 e8 00 00 00    	je     5af1 <bithenge_parse_script+0x6e1>
    5a09:	c7 45 d0 80 ff ff ff 	movl   $0xffffff80,-0x30(%ebp)
    5a10:	89 85 b0 ef ff ff    	mov    %eax,-0x1050(%ebp)
    5a16:	e9 fb fa ff ff       	jmp    5516 <bithenge_parse_script+0x106>
    5a1b:	85 c9                	test   %ecx,%ecx
    5a1d:	0f 85 ad 00 00 00    	jne    5ad0 <bithenge_parse_script+0x6c0>
    5a23:	83 7d d0 86          	cmpl   $0xffffff86,-0x30(%ebp)
    5a27:	0f 84 47 01 00 00    	je     5b74 <bithenge_parse_script+0x764>
    5a2d:	c7 45 d0 80 ff ff ff 	movl   $0xffffff80,-0x30(%ebp)
    5a34:	c7 85 b0 ef ff ff fe 	movl   $0xfffffffe,-0x1050(%ebp)
    5a3b:	ff ff ff 
    5a3e:	89 f8                	mov    %edi,%eax
    5a40:	ba 80 ff ff ff       	mov    $0xffffff80,%edx
    5a45:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
    5a4a:	e9 b5 fe ff ff       	jmp    5904 <bithenge_parse_script+0x4f4>
    5a4f:	8b b5 b0 ef ff ff    	mov    -0x1050(%ebp),%esi
    5a55:	85 f6                	test   %esi,%esi
    5a57:	0f 85 b9 fa ff ff    	jne    5516 <bithenge_parse_script+0x106>
    5a5d:	83 7d d0 86          	cmpl   $0xffffff86,-0x30(%ebp)
    5a61:	0f 84 fd 00 00 00    	je     5b64 <bithenge_parse_script+0x754>
    5a67:	c7 45 d0 80 ff ff ff 	movl   $0xffffff80,-0x30(%ebp)
    5a6e:	c7 85 b0 ef ff ff fe 	movl   $0xfffffffe,-0x1050(%ebp)
    5a75:	ff ff ff 
    5a78:	e9 99 fa ff ff       	jmp    5516 <bithenge_parse_script+0x106>
    5a7d:	a1 a0 02 03 00       	mov    0x302a0,%eax
    5a82:	31 f6                	xor    %esi,%esi
    5a84:	bb 08 00 00 00       	mov    $0x8,%ebx
    5a89:	8b 00                	mov    (%eax),%eax
    5a8b:	85 c0                	test   %eax,%eax
    5a8d:	75 17                	jne    5aa6 <bithenge_parse_script+0x696>
    5a8f:	eb 49                	jmp    5ada <bithenge_parse_script+0x6ca>
    5a91:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    5a98:	8b 04 18             	mov    (%eax,%ebx,1),%eax
    5a9b:	8d 53 08             	lea    0x8(%ebx),%edx
    5a9e:	89 de                	mov    %ebx,%esi
    5aa0:	85 c0                	test   %eax,%eax
    5aa2:	74 36                	je     5ada <bithenge_parse_script+0x6ca>
    5aa4:	89 d3                	mov    %edx,%ebx
    5aa6:	c7 44 24 04 a5 cf 02 	movl   $0x2cfa5,0x4(%esp)
    5aad:	00 
    5aae:	89 04 24             	mov    %eax,(%esp)
    5ab1:	e8 6a ea 00 00       	call   14520 <str_cmp>
    5ab6:	85 c0                	test   %eax,%eax
    5ab8:	a1 a0 02 03 00       	mov    0x302a0,%eax
    5abd:	75 d9                	jne    5a98 <bithenge_parse_script+0x688>
    5abf:	8b 44 30 04          	mov    0x4(%eax,%esi,1),%eax
    5ac3:	85 c0                	test   %eax,%eax
    5ac5:	0f 85 a1 fb ff ff    	jne    566c <bithenge_parse_script+0x25c>
    5acb:	e8 2e 01 00 00       	call   5bfe <bithenge_transform_inc_ref.part.5>
    5ad0:	8b 55 d0             	mov    -0x30(%ebp),%edx
    5ad3:	89 f8                	mov    %edi,%eax
    5ad5:	e9 2a fe ff ff       	jmp    5904 <bithenge_parse_script+0x4f4>
    5ada:	31 c0                	xor    %eax,%eax
    5adc:	e9 92 fb ff ff       	jmp    5673 <bithenge_parse_script+0x263>
    5ae1:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    5ae4:	89 04 24             	mov    %eax,(%esp)
    5ae7:	e8 f4 a6 01 00       	call   201e0 <free>
    5aec:	e9 97 fb ff ff       	jmp    5688 <bithenge_parse_script+0x278>
    5af1:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    5af4:	89 85 9c ef ff ff    	mov    %eax,-0x1064(%ebp)
    5afa:	89 14 24             	mov    %edx,(%esp)
    5afd:	e8 de a6 01 00       	call   201e0 <free>
    5b02:	8b bd ac ef ff ff    	mov    -0x1054(%ebp),%edi
    5b08:	8b 85 9c ef ff ff    	mov    -0x1064(%ebp),%eax
    5b0e:	e9 f6 fe ff ff       	jmp    5a09 <bithenge_parse_script+0x5f9>
    5b13:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    5b16:	89 85 9c ef ff ff    	mov    %eax,-0x1064(%ebp)
    5b1c:	89 14 24             	mov    %edx,(%esp)
    5b1f:	e8 bc a6 01 00       	call   201e0 <free>
    5b24:	8b 85 9c ef ff ff    	mov    -0x1064(%ebp),%eax
    5b2a:	e9 eb fc ff ff       	jmp    581a <bithenge_parse_script+0x40a>
    5b2f:	e8 ac ab 00 00       	call   106e0 <__errno>
    5b34:	8b 18                	mov    (%eax),%ebx
    5b36:	8b 85 b0 ef ff ff    	mov    -0x1050(%ebp),%eax
    5b3c:	85 c0                	test   %eax,%eax
    5b3e:	0f 85 e7 fa ff ff    	jne    562b <bithenge_parse_script+0x21b>
    5b44:	85 db                	test   %ebx,%ebx
    5b46:	0f 84 57 f9 ff ff    	je     54a3 <bithenge_parse_script+0x93>
    5b4c:	83 7d d0 86          	cmpl   $0xffffff86,-0x30(%ebp)
    5b50:	74 3d                	je     5b8f <bithenge_parse_script+0x77f>
    5b52:	c7 45 d0 80 ff ff ff 	movl   $0xffffff80,-0x30(%ebp)
    5b59:	89 9d b0 ef ff ff    	mov    %ebx,-0x1050(%ebp)
    5b5f:	e9 c7 fa ff ff       	jmp    562b <bithenge_parse_script+0x21b>
    5b64:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    5b67:	89 04 24             	mov    %eax,(%esp)
    5b6a:	e8 71 a6 01 00       	call   201e0 <free>
    5b6f:	e9 f3 fe ff ff       	jmp    5a67 <bithenge_parse_script+0x657>
    5b74:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    5b77:	89 04 24             	mov    %eax,(%esp)
    5b7a:	e8 61 a6 01 00       	call   201e0 <free>
    5b7f:	e9 a9 fe ff ff       	jmp    5a2d <bithenge_parse_script+0x61d>
    5b84:	8b 9d a4 ef ff ff    	mov    -0x105c(%ebp),%ebx
    5b8a:	e9 1d fd ff ff       	jmp    58ac <bithenge_parse_script+0x49c>
    5b8f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    5b92:	89 04 24             	mov    %eax,(%esp)
    5b95:	e8 46 a6 01 00       	call   201e0 <free>
    5b9a:	eb b6                	jmp    5b52 <bithenge_parse_script+0x742>
    5b9c:	e8 7f 00 00 00       	call   5c20 <bithenge_transform_dec_ref.part.8>
    5ba1:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    5ba8:	00 
    5ba9:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    5bb0:	00 
    5bb1:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    5bb8:	e8 f3 4c 02 00       	call   2a8b0 <assert_abort>
    5bbd:	a1 b8 06 03 00       	mov    0x306b8,%eax
    5bc2:	c7 44 24 04 aa cf 02 	movl   $0x2cfaa,0x4(%esp)
    5bc9:	00 
    5bca:	89 04 24             	mov    %eax,(%esp)
    5bcd:	bf f2 ff ff ff       	mov    $0xfffffff2,%edi
    5bd2:	e8 49 56 01 00       	call   1b220 <fprintf>
    5bd7:	e9 54 fb ff ff       	jmp    5730 <bithenge_parse_script+0x320>

00005bdc <bithenge_expression_dec_ref.part.4>:
    5bdc:	55                   	push   %ebp
    5bdd:	89 e5                	mov    %esp,%ebp
    5bdf:	83 ec 18             	sub    $0x18,%esp
    5be2:	c7 44 24 08 4b 00 00 	movl   $0x4b,0x8(%esp)
    5be9:	00 
    5bea:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    5bf1:	00 
    5bf2:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    5bf9:	e8 b2 4c 02 00       	call   2a8b0 <assert_abort>

00005bfe <bithenge_transform_inc_ref.part.5>:
    5bfe:	55                   	push   %ebp
    5bff:	89 e5                	mov    %esp,%ebp
    5c01:	83 ec 18             	sub    $0x18,%esp
    5c04:	c7 44 24 08 6a 00 00 	movl   $0x6a,0x8(%esp)
    5c0b:	00 
    5c0c:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    5c13:	00 
    5c14:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    5c1b:	e8 90 4c 02 00       	call   2a8b0 <assert_abort>

00005c20 <bithenge_transform_dec_ref.part.8>:
    5c20:	55                   	push   %ebp
    5c21:	89 e5                	mov    %esp,%ebp
    5c23:	83 ec 18             	sub    $0x18,%esp
    5c26:	c7 44 24 08 74 00 00 	movl   $0x74,0x8(%esp)
    5c2d:	00 
    5c2e:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    5c35:	00 
    5c36:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    5c3d:	e8 6e 4c 02 00       	call   2a8b0 <assert_abort>
    5c42:	66 90                	xchg   %ax,%ax
    5c44:	66 90                	xchg   %ax,%ax
    5c46:	66 90                	xchg   %ax,%ax
    5c48:	66 90                	xchg   %ax,%ax
    5c4a:	66 90                	xchg   %ax,%ax
    5c4c:	66 90                	xchg   %ax,%ax
    5c4e:	66 90                	xchg   %ax,%ax

00005c50 <for_each_noop>:
    5c50:	55                   	push   %ebp
    5c51:	89 e5                	mov    %esp,%ebp
    5c53:	83 ec 18             	sub    $0x18,%esp
    5c56:	8b 45 08             	mov    0x8(%ebp),%eax
    5c59:	89 04 24             	mov    %eax,(%esp)
    5c5c:	e8 5f 46 00 00       	call   a2c0 <bithenge_node_dec_ref>
    5c61:	8b 45 0c             	mov    0xc(%ebp),%eax
    5c64:	89 04 24             	mov    %eax,(%esp)
    5c67:	e8 54 46 00 00       	call   a2c0 <bithenge_node_dec_ref>
    5c6c:	31 c0                	xor    %eax,%eax
    5c6e:	c9                   	leave  
    5c6f:	c3                   	ret    

00005c70 <do_while_node_get_transform>:
    5c70:	55                   	push   %ebp
    5c71:	89 e5                	mov    %esp,%ebp
    5c73:	83 ec 08             	sub    $0x8,%esp
    5c76:	8b 45 08             	mov    0x8(%ebp),%eax
    5c79:	8b 55 0c             	mov    0xc(%ebp),%edx
    5c7c:	8b 40 34             	mov    0x34(%eax),%eax
    5c7f:	89 02                	mov    %eax,(%edx)
    5c81:	85 c0                	test   %eax,%eax
    5c83:	74 0b                	je     5c90 <do_while_node_get_transform+0x20>
    5c85:	8b 50 04             	mov    0x4(%eax),%edx
    5c88:	42                   	inc    %edx
    5c89:	89 50 04             	mov    %edx,0x4(%eax)
    5c8c:	31 c0                	xor    %eax,%eax
    5c8e:	c9                   	leave  
    5c8f:	c3                   	ret    
    5c90:	e8 65 1c 00 00       	call   78fa <bithenge_transform_inc_ref.part.9>
    5c95:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5c99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005ca0 <repeat_node_get_transform>:
    5ca0:	55                   	push   %ebp
    5ca1:	89 e5                	mov    %esp,%ebp
    5ca3:	83 ec 08             	sub    $0x8,%esp
    5ca6:	8b 45 08             	mov    0x8(%ebp),%eax
    5ca9:	8b 55 0c             	mov    0xc(%ebp),%edx
    5cac:	8b 40 3c             	mov    0x3c(%eax),%eax
    5caf:	89 02                	mov    %eax,(%edx)
    5cb1:	85 c0                	test   %eax,%eax
    5cb3:	74 0b                	je     5cc0 <repeat_node_get_transform+0x20>
    5cb5:	8b 50 04             	mov    0x4(%eax),%edx
    5cb8:	42                   	inc    %edx
    5cb9:	89 50 04             	mov    %edx,0x4(%eax)
    5cbc:	31 c0                	xor    %eax,%eax
    5cbe:	c9                   	leave  
    5cbf:	c3                   	ret    
    5cc0:	e8 35 1c 00 00       	call   78fa <bithenge_transform_inc_ref.part.9>
    5cc5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5cc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005cd0 <struct_node_get_transform>:
    5cd0:	55                   	push   %ebp
    5cd1:	89 e5                	mov    %esp,%ebp
    5cd3:	83 ec 08             	sub    $0x8,%esp
    5cd6:	8b 45 08             	mov    0x8(%ebp),%eax
    5cd9:	8b 55 10             	mov    0x10(%ebp),%edx
    5cdc:	8b 40 30             	mov    0x30(%eax),%eax
    5cdf:	8b 40 0c             	mov    0xc(%eax),%eax
    5ce2:	8b 44 d0 04          	mov    0x4(%eax,%edx,8),%eax
    5ce6:	8b 55 0c             	mov    0xc(%ebp),%edx
    5ce9:	85 c0                	test   %eax,%eax
    5ceb:	89 02                	mov    %eax,(%edx)
    5ced:	74 0b                	je     5cfa <struct_node_get_transform+0x2a>
    5cef:	8b 50 04             	mov    0x4(%eax),%edx
    5cf2:	42                   	inc    %edx
    5cf3:	89 50 04             	mov    %edx,0x4(%eax)
    5cf6:	31 c0                	xor    %eax,%eax
    5cf8:	c9                   	leave  
    5cf9:	c3                   	ret    
    5cfa:	e8 fb 1b 00 00       	call   78fa <bithenge_transform_inc_ref.part.9>
    5cff:	90                   	nop

00005d00 <struct_transform_make_node>:
    5d00:	55                   	push   %ebp
    5d01:	89 e5                	mov    %esp,%ebp
    5d03:	57                   	push   %edi
    5d04:	56                   	push   %esi
    5d05:	53                   	push   %ebx
    5d06:	83 ec 3c             	sub    $0x3c,%esp
    5d09:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    5d0c:	8a 45 0c             	mov    0xc(%ebp),%al
    5d0f:	89 55 d0             	mov    %edx,-0x30(%ebp)
    5d12:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
    5d19:	89 ce                	mov    %ecx,%esi
    5d1b:	88 45 cf             	mov    %al,-0x31(%ebp)
    5d1e:	e8 ad a3 01 00       	call   200d0 <malloc>
    5d23:	89 c7                	mov    %eax,%edi
    5d25:	85 c0                	test   %eax,%eax
    5d27:	0f 84 03 01 00 00    	je     5e30 <struct_transform_make_node+0x130>
    5d2d:	c7 44 24 04 a8 d0 02 	movl   $0x2d0a8,0x4(%esp)
    5d34:	00 
    5d35:	89 04 24             	mov    %eax,(%esp)
    5d38:	e8 33 4a 00 00       	call   a770 <bithenge_init_internal_node>
    5d3d:	89 c3                	mov    %eax,%ebx
    5d3f:	85 c0                	test   %eax,%eax
    5d41:	0f 85 c1 00 00 00    	jne    5e08 <struct_transform_make_node+0x108>
    5d47:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    5d4a:	89 74 24 04          	mov    %esi,0x4(%esp)
    5d4e:	89 04 24             	mov    %eax,(%esp)
    5d51:	e8 fa 3a 00 00       	call   9850 <bithenge_scope_new>
    5d56:	89 c3                	mov    %eax,%ebx
    5d58:	85 c0                	test   %eax,%eax
    5d5a:	0f 85 a8 00 00 00    	jne    5e08 <struct_transform_make_node+0x108>
    5d60:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    5d63:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    5d66:	8b 48 10             	mov    0x10(%eax),%ecx
    5d69:	c7 47 10 b4 d0 02 00 	movl   $0x2d0b4,0x10(%edi)
    5d70:	89 4d c8             	mov    %ecx,-0x38(%ebp)
    5d73:	8d 04 cd 00 00 00 00 	lea    0x0(,%ecx,8),%eax
    5d7a:	89 04 24             	mov    %eax,(%esp)
    5d7d:	e8 4e a3 01 00       	call   200d0 <malloc>
    5d82:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    5d85:	89 47 1c             	mov    %eax,0x1c(%edi)
    5d88:	85 c0                	test   %eax,%eax
    5d8a:	0f 84 8a 00 00 00    	je     5e1a <struct_transform_make_node+0x11a>
    5d90:	8b 45 08             	mov    0x8(%ebp),%eax
    5d93:	85 c0                	test   %eax,%eax
    5d95:	0f 84 9c 00 00 00    	je     5e37 <struct_transform_make_node+0x137>
    5d9b:	8b 45 08             	mov    0x8(%ebp),%eax
    5d9e:	8b 50 04             	mov    0x4(%eax),%edx
    5da1:	42                   	inc    %edx
    5da2:	85 f6                	test   %esi,%esi
    5da4:	89 50 04             	mov    %edx,0x4(%eax)
    5da7:	89 47 14             	mov    %eax,0x14(%edi)
    5daa:	89 4f 28             	mov    %ecx,0x28(%edi)
    5dad:	c7 47 2c 00 00 00 00 	movl   $0x0,0x2c(%edi)
    5db4:	c7 47 20 00 00 00 00 	movl   $0x0,0x20(%edi)
    5dbb:	c6 47 24 00          	movb   $0x0,0x24(%edi)
    5dbf:	89 77 18             	mov    %esi,0x18(%edi)
    5dc2:	74 05                	je     5dc9 <struct_transform_make_node+0xc9>
    5dc4:	8b 06                	mov    (%esi),%eax
    5dc6:	40                   	inc    %eax
    5dc7:	89 06                	mov    %eax,(%esi)
    5dc9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    5dcc:	8b 70 04             	mov    0x4(%eax),%esi
    5dcf:	46                   	inc    %esi
    5dd0:	89 70 04             	mov    %esi,0x4(%eax)
    5dd3:	89 47 30             	mov    %eax,0x30(%edi)
    5dd6:	8a 45 cf             	mov    -0x31(%ebp),%al
    5dd9:	89 7c 24 04          	mov    %edi,0x4(%esp)
    5ddd:	88 47 34             	mov    %al,0x34(%edi)
    5de0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    5de3:	89 04 24             	mov    %eax,(%esp)
    5de6:	e8 e5 3c 00 00       	call   9ad0 <bithenge_scope_set_current_node>
    5deb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    5dee:	89 04 24             	mov    %eax,(%esp)
    5df1:	e8 ca 3a 00 00       	call   98c0 <bithenge_scope_dec_ref>
    5df6:	8b 45 d0             	mov    -0x30(%ebp),%eax
    5df9:	89 38                	mov    %edi,(%eax)
    5dfb:	83 c4 3c             	add    $0x3c,%esp
    5dfe:	89 d8                	mov    %ebx,%eax
    5e00:	5b                   	pop    %ebx
    5e01:	5e                   	pop    %esi
    5e02:	5f                   	pop    %edi
    5e03:	5d                   	pop    %ebp
    5e04:	c3                   	ret    
    5e05:	8d 76 00             	lea    0x0(%esi),%esi
    5e08:	89 3c 24             	mov    %edi,(%esp)
    5e0b:	e8 d0 a3 01 00       	call   201e0 <free>
    5e10:	83 c4 3c             	add    $0x3c,%esp
    5e13:	89 d8                	mov    %ebx,%eax
    5e15:	5b                   	pop    %ebx
    5e16:	5e                   	pop    %esi
    5e17:	5f                   	pop    %edi
    5e18:	5d                   	pop    %ebp
    5e19:	c3                   	ret    
    5e1a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    5e1d:	89 04 24             	mov    %eax,(%esp)
    5e20:	e8 9b 3a 00 00       	call   98c0 <bithenge_scope_dec_ref>
    5e25:	89 3c 24             	mov    %edi,(%esp)
    5e28:	e8 b3 a3 01 00       	call   201e0 <free>
    5e2d:	8d 76 00             	lea    0x0(%esi),%esi
    5e30:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx
    5e35:	eb d9                	jmp    5e10 <struct_transform_make_node+0x110>
    5e37:	e8 9c 1a 00 00       	call   78d8 <bithenge_node_inc_ref.part.6>
    5e3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00005e40 <struct_transform_apply>:
    5e40:	55                   	push   %ebp
    5e41:	89 e5                	mov    %esp,%ebp
    5e43:	53                   	push   %ebx
    5e44:	8b 5d 10             	mov    0x10(%ebp),%ebx
    5e47:	8b 45 08             	mov    0x8(%ebp),%eax
    5e4a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    5e4d:	8b 55 14             	mov    0x14(%ebp),%edx
    5e50:	83 3b 05             	cmpl   $0x5,(%ebx)
    5e53:	75 13                	jne    5e68 <struct_transform_apply+0x28>
    5e55:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5e58:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
    5e5f:	5b                   	pop    %ebx
    5e60:	5d                   	pop    %ebp
    5e61:	e9 9a fe ff ff       	jmp    5d00 <struct_transform_make_node>
    5e66:	66 90                	xchg   %ax,%ax
    5e68:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    5e6d:	5b                   	pop    %ebx
    5e6e:	5d                   	pop    %ebp
    5e6f:	c3                   	ret    

00005e70 <repeat_node_destroy>:
    5e70:	55                   	push   %ebp
    5e71:	89 e5                	mov    %esp,%ebp
    5e73:	53                   	push   %ebx
    5e74:	83 ec 14             	sub    $0x14,%esp
    5e77:	8b 5d 08             	mov    0x8(%ebp),%ebx
    5e7a:	8b 43 18             	mov    0x18(%ebx),%eax
    5e7d:	89 04 24             	mov    %eax,(%esp)
    5e80:	e8 3b 3a 00 00       	call   98c0 <bithenge_scope_dec_ref>
    5e85:	8b 43 14             	mov    0x14(%ebx),%eax
    5e88:	85 c0                	test   %eax,%eax
    5e8a:	74 08                	je     5e94 <repeat_node_destroy+0x24>
    5e8c:	89 04 24             	mov    %eax,(%esp)
    5e8f:	e8 2c 44 00 00       	call   a2c0 <bithenge_node_dec_ref>
    5e94:	8b 43 1c             	mov    0x1c(%ebx),%eax
    5e97:	89 04 24             	mov    %eax,(%esp)
    5e9a:	e8 41 a3 01 00       	call   201e0 <free>
    5e9f:	8b 43 3c             	mov    0x3c(%ebx),%eax
    5ea2:	85 c0                	test   %eax,%eax
    5ea4:	74 1b                	je     5ec1 <repeat_node_destroy+0x51>
    5ea6:	8b 08                	mov    (%eax),%ecx
    5ea8:	85 c9                	test   %ecx,%ecx
    5eaa:	74 3e                	je     5eea <repeat_node_destroy+0x7a>
    5eac:	8b 50 04             	mov    0x4(%eax),%edx
    5eaf:	85 d2                	test   %edx,%edx
    5eb1:	74 1b                	je     5ece <repeat_node_destroy+0x5e>
    5eb3:	4a                   	dec    %edx
    5eb4:	89 50 04             	mov    %edx,0x4(%eax)
    5eb7:	85 d2                	test   %edx,%edx
    5eb9:	75 06                	jne    5ec1 <repeat_node_destroy+0x51>
    5ebb:	89 04 24             	mov    %eax,(%esp)
    5ebe:	ff 51 0c             	call   *0xc(%ecx)
    5ec1:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5ec4:	83 c4 14             	add    $0x14,%esp
    5ec7:	5b                   	pop    %ebx
    5ec8:	5d                   	pop    %ebp
    5ec9:	e9 12 a3 01 00       	jmp    201e0 <free>
    5ece:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    5ed5:	00 
    5ed6:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    5edd:	00 
    5ede:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    5ee5:	e8 c6 49 02 00       	call   2a8b0 <assert_abort>
    5eea:	e8 4f 1a 00 00       	call   793e <bithenge_transform_dec_ref.part.13>
    5eef:	90                   	nop

00005ef0 <do_while_node_destroy>:
    5ef0:	55                   	push   %ebp
    5ef1:	89 e5                	mov    %esp,%ebp
    5ef3:	53                   	push   %ebx
    5ef4:	83 ec 14             	sub    $0x14,%esp
    5ef7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    5efa:	8b 43 18             	mov    0x18(%ebx),%eax
    5efd:	89 04 24             	mov    %eax,(%esp)
    5f00:	e8 bb 39 00 00       	call   98c0 <bithenge_scope_dec_ref>
    5f05:	8b 43 14             	mov    0x14(%ebx),%eax
    5f08:	85 c0                	test   %eax,%eax
    5f0a:	74 08                	je     5f14 <do_while_node_destroy+0x24>
    5f0c:	89 04 24             	mov    %eax,(%esp)
    5f0f:	e8 ac 43 00 00       	call   a2c0 <bithenge_node_dec_ref>
    5f14:	8b 43 1c             	mov    0x1c(%ebx),%eax
    5f17:	89 04 24             	mov    %eax,(%esp)
    5f1a:	e8 c1 a2 01 00       	call   201e0 <free>
    5f1f:	8b 43 30             	mov    0x30(%ebx),%eax
    5f22:	85 c0                	test   %eax,%eax
    5f24:	74 1f                	je     5f45 <do_while_node_destroy+0x55>
    5f26:	8b 08                	mov    (%eax),%ecx
    5f28:	85 c9                	test   %ecx,%ecx
    5f2a:	0f 84 81 00 00 00    	je     5fb1 <do_while_node_destroy+0xc1>
    5f30:	8b 50 04             	mov    0x4(%eax),%edx
    5f33:	85 d2                	test   %edx,%edx
    5f35:	74 5e                	je     5f95 <do_while_node_destroy+0xa5>
    5f37:	4a                   	dec    %edx
    5f38:	89 50 04             	mov    %edx,0x4(%eax)
    5f3b:	85 d2                	test   %edx,%edx
    5f3d:	75 06                	jne    5f45 <do_while_node_destroy+0x55>
    5f3f:	89 04 24             	mov    %eax,(%esp)
    5f42:	ff 51 04             	call   *0x4(%ecx)
    5f45:	8b 43 34             	mov    0x34(%ebx),%eax
    5f48:	85 c0                	test   %eax,%eax
    5f4a:	74 1b                	je     5f67 <do_while_node_destroy+0x77>
    5f4c:	8b 08                	mov    (%eax),%ecx
    5f4e:	85 c9                	test   %ecx,%ecx
    5f50:	74 3e                	je     5f90 <do_while_node_destroy+0xa0>
    5f52:	8b 50 04             	mov    0x4(%eax),%edx
    5f55:	85 d2                	test   %edx,%edx
    5f57:	74 1b                	je     5f74 <do_while_node_destroy+0x84>
    5f59:	4a                   	dec    %edx
    5f5a:	89 50 04             	mov    %edx,0x4(%eax)
    5f5d:	85 d2                	test   %edx,%edx
    5f5f:	75 06                	jne    5f67 <do_while_node_destroy+0x77>
    5f61:	89 04 24             	mov    %eax,(%esp)
    5f64:	ff 51 0c             	call   *0xc(%ecx)
    5f67:	89 5d 08             	mov    %ebx,0x8(%ebp)
    5f6a:	83 c4 14             	add    $0x14,%esp
    5f6d:	5b                   	pop    %ebx
    5f6e:	5d                   	pop    %ebp
    5f6f:	e9 6c a2 01 00       	jmp    201e0 <free>
    5f74:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    5f7b:	00 
    5f7c:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    5f83:	00 
    5f84:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    5f8b:	e8 20 49 02 00       	call   2a8b0 <assert_abort>
    5f90:	e8 a9 19 00 00       	call   793e <bithenge_transform_dec_ref.part.13>
    5f95:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    5f9c:	00 
    5f9d:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    5fa4:	00 
    5fa5:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    5fac:	e8 ff 48 02 00       	call   2a8b0 <assert_abort>
    5fb1:	e8 66 19 00 00       	call   791c <bithenge_expression_dec_ref.part.12>
    5fb6:	8d 76 00             	lea    0x0(%esi),%esi
    5fb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00005fc0 <do_while_transform_destroy>:
    5fc0:	55                   	push   %ebp
    5fc1:	89 e5                	mov    %esp,%ebp
    5fc3:	53                   	push   %ebx
    5fc4:	83 ec 14             	sub    $0x14,%esp
    5fc7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    5fca:	8b 43 10             	mov    0x10(%ebx),%eax
    5fcd:	85 c0                	test   %eax,%eax
    5fcf:	74 1f                	je     5ff0 <do_while_transform_destroy+0x30>
    5fd1:	8b 08                	mov    (%eax),%ecx
    5fd3:	85 c9                	test   %ecx,%ecx
    5fd5:	0f 84 81 00 00 00    	je     605c <do_while_transform_destroy+0x9c>
    5fdb:	8b 50 04             	mov    0x4(%eax),%edx
    5fde:	85 d2                	test   %edx,%edx
    5fe0:	74 5e                	je     6040 <do_while_transform_destroy+0x80>
    5fe2:	4a                   	dec    %edx
    5fe3:	89 50 04             	mov    %edx,0x4(%eax)
    5fe6:	85 d2                	test   %edx,%edx
    5fe8:	75 06                	jne    5ff0 <do_while_transform_destroy+0x30>
    5fea:	89 04 24             	mov    %eax,(%esp)
    5fed:	ff 51 0c             	call   *0xc(%ecx)
    5ff0:	8b 43 0c             	mov    0xc(%ebx),%eax
    5ff3:	85 c0                	test   %eax,%eax
    5ff5:	74 1b                	je     6012 <do_while_transform_destroy+0x52>
    5ff7:	8b 08                	mov    (%eax),%ecx
    5ff9:	85 c9                	test   %ecx,%ecx
    5ffb:	74 3e                	je     603b <do_while_transform_destroy+0x7b>
    5ffd:	8b 50 04             	mov    0x4(%eax),%edx
    6000:	85 d2                	test   %edx,%edx
    6002:	74 1b                	je     601f <do_while_transform_destroy+0x5f>
    6004:	4a                   	dec    %edx
    6005:	89 50 04             	mov    %edx,0x4(%eax)
    6008:	85 d2                	test   %edx,%edx
    600a:	75 06                	jne    6012 <do_while_transform_destroy+0x52>
    600c:	89 04 24             	mov    %eax,(%esp)
    600f:	ff 51 04             	call   *0x4(%ecx)
    6012:	89 5d 08             	mov    %ebx,0x8(%ebp)
    6015:	83 c4 14             	add    $0x14,%esp
    6018:	5b                   	pop    %ebx
    6019:	5d                   	pop    %ebp
    601a:	e9 c1 a1 01 00       	jmp    201e0 <free>
    601f:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    6026:	00 
    6027:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    602e:	00 
    602f:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    6036:	e8 75 48 02 00       	call   2a8b0 <assert_abort>
    603b:	e8 dc 18 00 00       	call   791c <bithenge_expression_dec_ref.part.12>
    6040:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    6047:	00 
    6048:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    604f:	00 
    6050:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    6057:	e8 54 48 02 00       	call   2a8b0 <assert_abort>
    605c:	e8 dd 18 00 00       	call   793e <bithenge_transform_dec_ref.part.13>
    6061:	eb 0d                	jmp    6070 <repeat_transform_destroy>
    6063:	90                   	nop
    6064:	90                   	nop
    6065:	90                   	nop
    6066:	90                   	nop
    6067:	90                   	nop
    6068:	90                   	nop
    6069:	90                   	nop
    606a:	90                   	nop
    606b:	90                   	nop
    606c:	90                   	nop
    606d:	90                   	nop
    606e:	90                   	nop
    606f:	90                   	nop

00006070 <repeat_transform_destroy>:
    6070:	55                   	push   %ebp
    6071:	89 e5                	mov    %esp,%ebp
    6073:	53                   	push   %ebx
    6074:	83 ec 14             	sub    $0x14,%esp
    6077:	8b 5d 08             	mov    0x8(%ebp),%ebx
    607a:	8b 43 10             	mov    0x10(%ebx),%eax
    607d:	85 c0                	test   %eax,%eax
    607f:	74 1f                	je     60a0 <repeat_transform_destroy+0x30>
    6081:	8b 08                	mov    (%eax),%ecx
    6083:	85 c9                	test   %ecx,%ecx
    6085:	0f 84 81 00 00 00    	je     610c <repeat_transform_destroy+0x9c>
    608b:	8b 50 04             	mov    0x4(%eax),%edx
    608e:	85 d2                	test   %edx,%edx
    6090:	74 5e                	je     60f0 <repeat_transform_destroy+0x80>
    6092:	4a                   	dec    %edx
    6093:	89 50 04             	mov    %edx,0x4(%eax)
    6096:	85 d2                	test   %edx,%edx
    6098:	75 06                	jne    60a0 <repeat_transform_destroy+0x30>
    609a:	89 04 24             	mov    %eax,(%esp)
    609d:	ff 51 0c             	call   *0xc(%ecx)
    60a0:	8b 43 0c             	mov    0xc(%ebx),%eax
    60a3:	85 c0                	test   %eax,%eax
    60a5:	74 1b                	je     60c2 <repeat_transform_destroy+0x52>
    60a7:	8b 08                	mov    (%eax),%ecx
    60a9:	85 c9                	test   %ecx,%ecx
    60ab:	74 3e                	je     60eb <repeat_transform_destroy+0x7b>
    60ad:	8b 50 04             	mov    0x4(%eax),%edx
    60b0:	85 d2                	test   %edx,%edx
    60b2:	74 1b                	je     60cf <repeat_transform_destroy+0x5f>
    60b4:	4a                   	dec    %edx
    60b5:	89 50 04             	mov    %edx,0x4(%eax)
    60b8:	85 d2                	test   %edx,%edx
    60ba:	75 06                	jne    60c2 <repeat_transform_destroy+0x52>
    60bc:	89 04 24             	mov    %eax,(%esp)
    60bf:	ff 51 04             	call   *0x4(%ecx)
    60c2:	89 5d 08             	mov    %ebx,0x8(%ebp)
    60c5:	83 c4 14             	add    $0x14,%esp
    60c8:	5b                   	pop    %ebx
    60c9:	5d                   	pop    %ebp
    60ca:	e9 11 a1 01 00       	jmp    201e0 <free>
    60cf:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    60d6:	00 
    60d7:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    60de:	00 
    60df:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    60e6:	e8 c5 47 02 00       	call   2a8b0 <assert_abort>
    60eb:	e8 2c 18 00 00       	call   791c <bithenge_expression_dec_ref.part.12>
    60f0:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    60f7:	00 
    60f8:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    60ff:	00 
    6100:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    6107:	e8 a4 47 02 00       	call   2a8b0 <assert_abort>
    610c:	e8 2d 18 00 00       	call   793e <bithenge_transform_dec_ref.part.13>
    6111:	eb 0d                	jmp    6120 <repeat_transform_make_node.isra.17>
    6113:	90                   	nop
    6114:	90                   	nop
    6115:	90                   	nop
    6116:	90                   	nop
    6117:	90                   	nop
    6118:	90                   	nop
    6119:	90                   	nop
    611a:	90                   	nop
    611b:	90                   	nop
    611c:	90                   	nop
    611d:	90                   	nop
    611e:	90                   	nop
    611f:	90                   	nop

00006120 <repeat_transform_make_node.isra.17>:
    6120:	55                   	push   %ebp
    6121:	89 e5                	mov    %esp,%ebp
    6123:	57                   	push   %edi
    6124:	56                   	push   %esi
    6125:	53                   	push   %ebx
    6126:	83 ec 3c             	sub    $0x3c,%esp
    6129:	89 d3                	mov    %edx,%ebx
    612b:	8a 55 10             	mov    0x10(%ebp),%dl
    612e:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    6131:	88 55 d3             	mov    %dl,-0x2d(%ebp)
    6134:	85 c0                	test   %eax,%eax
    6136:	0f 84 44 01 00 00    	je     6280 <repeat_transform_make_node.isra.17+0x160>
    613c:	8b 10                	mov    (%eax),%edx
    613e:	85 d2                	test   %edx,%edx
    6140:	0f 84 74 01 00 00    	je     62ba <repeat_transform_make_node.isra.17+0x19a>
    6146:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    6149:	89 04 24             	mov    %eax,(%esp)
    614c:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    6150:	8b 4d 08             	mov    0x8(%ebp),%ecx
    6153:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    6157:	ff 12                	call   *(%edx)
    6159:	89 c2                	mov    %eax,%edx
    615b:	85 c0                	test   %eax,%eax
    615d:	75 15                	jne    6174 <repeat_transform_make_node.isra.17+0x54>
    615f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    6162:	83 38 03             	cmpl   $0x3,(%eax)
    6165:	74 19                	je     6180 <repeat_transform_make_node.isra.17+0x60>
    6167:	89 04 24             	mov    %eax,(%esp)
    616a:	e8 51 41 00 00       	call   a2c0 <bithenge_node_dec_ref>
    616f:	ba f2 ff ff ff       	mov    $0xfffffff2,%edx
    6174:	83 c4 3c             	add    $0x3c,%esp
    6177:	89 d0                	mov    %edx,%eax
    6179:	5b                   	pop    %ebx
    617a:	5e                   	pop    %esi
    617b:	5f                   	pop    %edi
    617c:	5d                   	pop    %ebp
    617d:	c3                   	ret    
    617e:	66 90                	xchg   %ax,%ax
    6180:	8b 78 0c             	mov    0xc(%eax),%edi
    6183:	8b 70 08             	mov    0x8(%eax),%esi
    6186:	89 04 24             	mov    %eax,(%esp)
    6189:	e8 32 41 00 00       	call   a2c0 <bithenge_node_dec_ref>
    618e:	ba f2 ff ff ff       	mov    $0xfffffff2,%edx
    6193:	85 ff                	test   %edi,%edi
    6195:	78 dd                	js     6174 <repeat_transform_make_node.isra.17+0x54>
    6197:	c7 04 24 40 00 00 00 	movl   $0x40,(%esp)
    619e:	e8 2d 9f 01 00       	call   200d0 <malloc>
    61a3:	85 c0                	test   %eax,%eax
    61a5:	0f 84 05 01 00 00    	je     62b0 <repeat_transform_make_node.isra.17+0x190>
    61ab:	c7 44 24 04 c8 d0 02 	movl   $0x2d0c8,0x4(%esp)
    61b2:	00 
    61b3:	89 04 24             	mov    %eax,(%esp)
    61b6:	89 45 cc             	mov    %eax,-0x34(%ebp)
    61b9:	e8 b2 45 00 00       	call   a770 <bithenge_init_internal_node>
    61be:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    61c1:	89 c2                	mov    %eax,%edx
    61c3:	85 c0                	test   %eax,%eax
    61c5:	0f 85 c5 00 00 00    	jne    6290 <repeat_transform_make_node.isra.17+0x170>
    61cb:	89 f0                	mov    %esi,%eax
    61cd:	c7 41 10 d4 d0 02 00 	movl   $0x2d0d4,0x10(%ecx)
    61d4:	21 f8                	and    %edi,%eax
    61d6:	40                   	inc    %eax
    61d7:	89 f0                	mov    %esi,%eax
    61d9:	0f 94 45 d2          	sete   -0x2e(%ebp)
    61dd:	21 f8                	and    %edi,%eax
    61df:	40                   	inc    %eax
    61e0:	0f 84 8a 00 00 00    	je     6270 <repeat_transform_make_node.isra.17+0x150>
    61e6:	8d 04 f5 00 00 00 00 	lea    0x0(,%esi,8),%eax
    61ed:	89 55 c8             	mov    %edx,-0x38(%ebp)
    61f0:	89 04 24             	mov    %eax,(%esp)
    61f3:	89 4d cc             	mov    %ecx,-0x34(%ebp)
    61f6:	e8 d5 9e 01 00       	call   200d0 <malloc>
    61fb:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    61fe:	85 c0                	test   %eax,%eax
    6200:	8b 55 c8             	mov    -0x38(%ebp),%edx
    6203:	89 41 1c             	mov    %eax,0x1c(%ecx)
    6206:	0f 84 9c 00 00 00    	je     62a8 <repeat_transform_make_node.isra.17+0x188>
    620c:	8b 45 0c             	mov    0xc(%ebp),%eax
    620f:	85 c0                	test   %eax,%eax
    6211:	0f 84 c4 00 00 00    	je     62db <repeat_transform_make_node.isra.17+0x1bb>
    6217:	8b 45 0c             	mov    0xc(%ebp),%eax
    621a:	ff 40 04             	incl   0x4(%eax)
    621d:	89 41 14             	mov    %eax,0x14(%ecx)
    6220:	8a 45 d2             	mov    -0x2e(%ebp),%al
    6223:	89 71 28             	mov    %esi,0x28(%ecx)
    6226:	88 41 24             	mov    %al,0x24(%ecx)
    6229:	8b 45 08             	mov    0x8(%ebp),%eax
    622c:	89 79 2c             	mov    %edi,0x2c(%ecx)
    622f:	c7 41 20 00 00 00 00 	movl   $0x0,0x20(%ecx)
    6236:	89 41 18             	mov    %eax,0x18(%ecx)
    6239:	85 c0                	test   %eax,%eax
    623b:	74 02                	je     623f <repeat_transform_make_node.isra.17+0x11f>
    623d:	ff 00                	incl   (%eax)
    623f:	8b 03                	mov    (%ebx),%eax
    6241:	85 c0                	test   %eax,%eax
    6243:	0f 84 8d 00 00 00    	je     62d6 <repeat_transform_make_node.isra.17+0x1b6>
    6249:	8b 58 04             	mov    0x4(%eax),%ebx
    624c:	43                   	inc    %ebx
    624d:	89 58 04             	mov    %ebx,0x4(%eax)
    6250:	89 41 3c             	mov    %eax,0x3c(%ecx)
    6253:	8a 45 d3             	mov    -0x2d(%ebp),%al
    6256:	89 71 34             	mov    %esi,0x34(%ecx)
    6259:	88 41 30             	mov    %al,0x30(%ecx)
    625c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    625f:	89 79 38             	mov    %edi,0x38(%ecx)
    6262:	89 08                	mov    %ecx,(%eax)
    6264:	83 c4 3c             	add    $0x3c,%esp
    6267:	89 d0                	mov    %edx,%eax
    6269:	5b                   	pop    %ebx
    626a:	5e                   	pop    %esi
    626b:	5f                   	pop    %edi
    626c:	5d                   	pop    %ebp
    626d:	c3                   	ret    
    626e:	66 90                	xchg   %ax,%ax
    6270:	c7 41 1c 00 00 00 00 	movl   $0x0,0x1c(%ecx)
    6277:	eb 93                	jmp    620c <repeat_transform_make_node.isra.17+0xec>
    6279:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6280:	83 ce ff             	or     $0xffffffff,%esi
    6283:	83 cf ff             	or     $0xffffffff,%edi
    6286:	e9 0c ff ff ff       	jmp    6197 <repeat_transform_make_node.isra.17+0x77>
    628b:	90                   	nop
    628c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6290:	89 0c 24             	mov    %ecx,(%esp)
    6293:	89 45 c8             	mov    %eax,-0x38(%ebp)
    6296:	e8 45 9f 01 00       	call   201e0 <free>
    629b:	8b 55 c8             	mov    -0x38(%ebp),%edx
    629e:	83 c4 3c             	add    $0x3c,%esp
    62a1:	89 d0                	mov    %edx,%eax
    62a3:	5b                   	pop    %ebx
    62a4:	5e                   	pop    %esi
    62a5:	5f                   	pop    %edi
    62a6:	5d                   	pop    %ebp
    62a7:	c3                   	ret    
    62a8:	89 0c 24             	mov    %ecx,(%esp)
    62ab:	e8 30 9f 01 00       	call   201e0 <free>
    62b0:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
    62b5:	e9 ba fe ff ff       	jmp    6174 <repeat_transform_make_node.isra.17+0x54>
    62ba:	c7 44 24 08 5b 00 00 	movl   $0x5b,0x8(%esp)
    62c1:	00 
    62c2:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    62c9:	00 
    62ca:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    62d1:	e8 da 45 02 00       	call   2a8b0 <assert_abort>
    62d6:	e8 1f 16 00 00       	call   78fa <bithenge_transform_inc_ref.part.9>
    62db:	e8 f8 15 00 00       	call   78d8 <bithenge_node_inc_ref.part.6>

000062e0 <repeat_transform_apply>:
    62e0:	55                   	push   %ebp
    62e1:	89 e5                	mov    %esp,%ebp
    62e3:	56                   	push   %esi
    62e4:	53                   	push   %ebx
    62e5:	8b 5d 10             	mov    0x10(%ebp),%ebx
    62e8:	8b 45 08             	mov    0x8(%ebp),%eax
    62eb:	8b 75 0c             	mov    0xc(%ebp),%esi
    62ee:	8b 4d 14             	mov    0x14(%ebp),%ecx
    62f1:	83 3b 05             	cmpl   $0x5,(%ebx)
    62f4:	75 22                	jne    6318 <repeat_transform_apply+0x38>
    62f6:	8d 50 10             	lea    0x10(%eax),%edx
    62f9:	8b 40 0c             	mov    0xc(%eax),%eax
    62fc:	89 5d 0c             	mov    %ebx,0xc(%ebp)
    62ff:	89 75 08             	mov    %esi,0x8(%ebp)
    6302:	5b                   	pop    %ebx
    6303:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%ebp)
    630a:	5e                   	pop    %esi
    630b:	5d                   	pop    %ebp
    630c:	e9 0f fe ff ff       	jmp    6120 <repeat_transform_make_node.isra.17>
    6311:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6318:	5b                   	pop    %ebx
    6319:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    631e:	5e                   	pop    %esi
    631f:	5d                   	pop    %ebp
    6320:	c3                   	ret    
    6321:	eb 0d                	jmp    6330 <struct_transform_destroy>
    6323:	90                   	nop
    6324:	90                   	nop
    6325:	90                   	nop
    6326:	90                   	nop
    6327:	90                   	nop
    6328:	90                   	nop
    6329:	90                   	nop
    632a:	90                   	nop
    632b:	90                   	nop
    632c:	90                   	nop
    632d:	90                   	nop
    632e:	90                   	nop
    632f:	90                   	nop

00006330 <struct_transform_destroy>:
    6330:	55                   	push   %ebp
    6331:	89 e5                	mov    %esp,%ebp
    6333:	57                   	push   %edi
    6334:	56                   	push   %esi
    6335:	53                   	push   %ebx
    6336:	83 ec 2c             	sub    $0x2c,%esp
    6339:	8b 45 08             	mov    0x8(%ebp),%eax
    633c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    633f:	8b 70 0c             	mov    0xc(%eax),%esi
    6342:	89 f7                	mov    %esi,%edi
    6344:	8b 4e 04             	mov    0x4(%esi),%ecx
    6347:	8d 5e 08             	lea    0x8(%esi),%ebx
    634a:	85 c9                	test   %ecx,%ecx
    634c:	74 3a                	je     6388 <struct_transform_destroy+0x58>
    634e:	66 90                	xchg   %ax,%ax
    6350:	8b 17                	mov    (%edi),%edx
    6352:	89 14 24             	mov    %edx,(%esp)
    6355:	e8 86 9e 01 00       	call   201e0 <free>
    635a:	8b 47 04             	mov    0x4(%edi),%eax
    635d:	85 c0                	test   %eax,%eax
    635f:	74 1b                	je     637c <struct_transform_destroy+0x4c>
    6361:	8b 08                	mov    (%eax),%ecx
    6363:	85 c9                	test   %ecx,%ecx
    6365:	74 3b                	je     63a2 <struct_transform_destroy+0x72>
    6367:	8b 50 04             	mov    0x4(%eax),%edx
    636a:	85 d2                	test   %edx,%edx
    636c:	74 39                	je     63a7 <struct_transform_destroy+0x77>
    636e:	4a                   	dec    %edx
    636f:	89 50 04             	mov    %edx,0x4(%eax)
    6372:	85 d2                	test   %edx,%edx
    6374:	75 06                	jne    637c <struct_transform_destroy+0x4c>
    6376:	89 04 24             	mov    %eax,(%esp)
    6379:	ff 51 0c             	call   *0xc(%ecx)
    637c:	89 df                	mov    %ebx,%edi
    637e:	83 c3 08             	add    $0x8,%ebx
    6381:	8b 53 fc             	mov    -0x4(%ebx),%edx
    6384:	85 d2                	test   %edx,%edx
    6386:	75 c8                	jne    6350 <struct_transform_destroy+0x20>
    6388:	89 34 24             	mov    %esi,(%esp)
    638b:	e8 50 9e 01 00       	call   201e0 <free>
    6390:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    6393:	89 45 08             	mov    %eax,0x8(%ebp)
    6396:	83 c4 2c             	add    $0x2c,%esp
    6399:	5b                   	pop    %ebx
    639a:	5e                   	pop    %esi
    639b:	5f                   	pop    %edi
    639c:	5d                   	pop    %ebp
    639d:	e9 3e 9e 01 00       	jmp    201e0 <free>
    63a2:	e8 97 15 00 00       	call   793e <bithenge_transform_dec_ref.part.13>
    63a7:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    63ae:	00 
    63af:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    63b6:	00 
    63b7:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    63be:	e8 ed 44 02 00       	call   2a8b0 <assert_abort>
    63c3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    63c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000063d0 <struct_node_destroy>:
    63d0:	55                   	push   %ebp
    63d1:	89 e5                	mov    %esp,%ebp
    63d3:	53                   	push   %ebx
    63d4:	83 ec 14             	sub    $0x14,%esp
    63d7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    63da:	8b 43 18             	mov    0x18(%ebx),%eax
    63dd:	83 38 01             	cmpl   $0x1,(%eax)
    63e0:	74 76                	je     6458 <struct_node_destroy+0x88>
    63e2:	76 14                	jbe    63f8 <struct_node_destroy+0x28>
    63e4:	8b 53 04             	mov    0x4(%ebx),%edx
    63e7:	42                   	inc    %edx
    63e8:	89 53 04             	mov    %edx,0x4(%ebx)
    63eb:	89 45 08             	mov    %eax,0x8(%ebp)
    63ee:	83 c4 14             	add    $0x14,%esp
    63f1:	5b                   	pop    %ebx
    63f2:	5d                   	pop    %ebp
    63f3:	e9 c8 34 00 00       	jmp    98c0 <bithenge_scope_dec_ref>
    63f8:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
    63ff:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    6406:	e8 b5 34 00 00       	call   98c0 <bithenge_scope_dec_ref>
    640b:	8b 43 14             	mov    0x14(%ebx),%eax
    640e:	85 c0                	test   %eax,%eax
    6410:	74 08                	je     641a <struct_node_destroy+0x4a>
    6412:	89 04 24             	mov    %eax,(%esp)
    6415:	e8 a6 3e 00 00       	call   a2c0 <bithenge_node_dec_ref>
    641a:	8b 43 1c             	mov    0x1c(%ebx),%eax
    641d:	89 04 24             	mov    %eax,(%esp)
    6420:	e8 bb 9d 01 00       	call   201e0 <free>
    6425:	8b 43 30             	mov    0x30(%ebx),%eax
    6428:	85 c0                	test   %eax,%eax
    642a:	74 1b                	je     6447 <struct_node_destroy+0x77>
    642c:	8b 08                	mov    (%eax),%ecx
    642e:	85 c9                	test   %ecx,%ecx
    6430:	74 5a                	je     648c <struct_node_destroy+0xbc>
    6432:	8b 50 04             	mov    0x4(%eax),%edx
    6435:	85 d2                	test   %edx,%edx
    6437:	74 37                	je     6470 <struct_node_destroy+0xa0>
    6439:	4a                   	dec    %edx
    643a:	89 50 04             	mov    %edx,0x4(%eax)
    643d:	85 d2                	test   %edx,%edx
    643f:	75 06                	jne    6447 <struct_node_destroy+0x77>
    6441:	89 04 24             	mov    %eax,(%esp)
    6444:	ff 51 0c             	call   *0xc(%ecx)
    6447:	89 5d 08             	mov    %ebx,0x8(%ebp)
    644a:	83 c4 14             	add    $0x14,%esp
    644d:	5b                   	pop    %ebx
    644e:	5d                   	pop    %ebp
    644f:	e9 8c 9d 01 00       	jmp    201e0 <free>
    6454:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6458:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
    645f:	89 04 24             	mov    %eax,(%esp)
    6462:	e8 59 34 00 00       	call   98c0 <bithenge_scope_dec_ref>
    6467:	8b 43 14             	mov    0x14(%ebx),%eax
    646a:	85 c0                	test   %eax,%eax
    646c:	75 a4                	jne    6412 <struct_node_destroy+0x42>
    646e:	eb aa                	jmp    641a <struct_node_destroy+0x4a>
    6470:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    6477:	00 
    6478:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    647f:	00 
    6480:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    6487:	e8 24 44 02 00       	call   2a8b0 <assert_abort>
    648c:	e8 ad 14 00 00       	call   793e <bithenge_transform_dec_ref.part.13>
    6491:	eb 0d                	jmp    64a0 <seq_node_field_offset.part.19>
    6493:	90                   	nop
    6494:	90                   	nop
    6495:	90                   	nop
    6496:	90                   	nop
    6497:	90                   	nop
    6498:	90                   	nop
    6499:	90                   	nop
    649a:	90                   	nop
    649b:	90                   	nop
    649c:	90                   	nop
    649d:	90                   	nop
    649e:	90                   	nop
    649f:	90                   	nop

000064a0 <seq_node_field_offset.part.19>:
    64a0:	55                   	push   %ebp
    64a1:	49                   	dec    %ecx
    64a2:	89 e5                	mov    %esp,%ebp
    64a4:	57                   	push   %edi
    64a5:	56                   	push   %esi
    64a6:	53                   	push   %ebx
    64a7:	83 ec 4c             	sub    $0x4c,%esp
    64aa:	89 55 c8             	mov    %edx,-0x38(%ebp)
    64ad:	8b 50 20             	mov    0x20(%eax),%edx
    64b0:	89 c3                	mov    %eax,%ebx
    64b2:	89 4d cc             	mov    %ecx,-0x34(%ebp)
    64b5:	85 d2                	test   %edx,%edx
    64b7:	0f 85 db 01 00 00    	jne    6698 <seq_node_field_offset.part.19+0x1f8>
    64bd:	8d 4d d8             	lea    -0x28(%ebp),%ecx
    64c0:	31 f6                	xor    %esi,%esi
    64c2:	31 ff                	xor    %edi,%edi
    64c4:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    64c7:	90                   	nop
    64c8:	8b 43 10             	mov    0x10(%ebx),%eax
    64cb:	89 54 24 08          	mov    %edx,0x8(%esp)
    64cf:	8b 55 d0             	mov    -0x30(%ebp),%edx
    64d2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    64d9:	00 
    64da:	89 54 24 04          	mov    %edx,0x4(%esp)
    64de:	89 1c 24             	mov    %ebx,(%esp)
    64e1:	ff 10                	call   *(%eax)
    64e3:	85 c0                	test   %eax,%eax
    64e5:	0f 85 c5 00 00 00    	jne    65b0 <seq_node_field_offset.part.19+0x110>
    64eb:	8b 43 14             	mov    0x14(%ebx),%eax
    64ee:	85 c0                	test   %eax,%eax
    64f0:	0f 84 06 02 00 00    	je     66fc <seq_node_field_offset.part.19+0x25c>
    64f6:	8b 50 04             	mov    0x4(%eax),%edx
    64f9:	8d 4d dc             	lea    -0x24(%ebp),%ecx
    64fc:	42                   	inc    %edx
    64fd:	89 50 04             	mov    %edx,0x4(%eax)
    6500:	89 74 24 08          	mov    %esi,0x8(%esp)
    6504:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    6508:	89 44 24 04          	mov    %eax,0x4(%esp)
    650c:	89 0c 24             	mov    %ecx,(%esp)
    650f:	e8 9c 54 00 00       	call   b9b0 <bithenge_new_offset_blob>
    6514:	85 c0                	test   %eax,%eax
    6516:	0f 85 9c 01 00 00    	jne    66b8 <seq_node_field_offset.part.19+0x218>
    651c:	80 7b 24 00          	cmpb   $0x0,0x24(%ebx)
    6520:	0f 84 92 00 00 00    	je     65b8 <seq_node_field_offset.part.19+0x118>
    6526:	8b 45 dc             	mov    -0x24(%ebp),%eax
    6529:	83 38 05             	cmpl   $0x5,(%eax)
    652c:	0f 85 c5 01 00 00    	jne    66f7 <seq_node_field_offset.part.19+0x257>
    6532:	8b 50 08             	mov    0x8(%eax),%edx
    6535:	85 d2                	test   %edx,%edx
    6537:	0f 84 e5 01 00 00    	je     6722 <seq_node_field_offset.part.19+0x282>
    653d:	8d 4d e0             	lea    -0x20(%ebp),%ecx
    6540:	89 04 24             	mov    %eax,(%esp)
    6543:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    6547:	ff 12                	call   *(%edx)
    6549:	8b 55 e0             	mov    -0x20(%ebp),%edx
    654c:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    654f:	85 c0                	test   %eax,%eax
    6551:	75 14                	jne    6567 <seq_node_field_offset.part.19+0xc7>
    6553:	09 d1                	or     %edx,%ecx
    6555:	75 61                	jne    65b8 <seq_node_field_offset.part.19+0x118>
    6557:	8b 43 20             	mov    0x20(%ebx),%eax
    655a:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
    6561:	89 43 28             	mov    %eax,0x28(%ebx)
    6564:	83 c8 ff             	or     $0xffffffff,%eax
    6567:	8b 55 d8             	mov    -0x28(%ebp),%edx
    656a:	85 d2                	test   %edx,%edx
    656c:	74 2a                	je     6598 <seq_node_field_offset.part.19+0xf8>
    656e:	8b 1a                	mov    (%edx),%ebx
    6570:	85 db                	test   %ebx,%ebx
    6572:	0f 84 a5 01 00 00    	je     671d <seq_node_field_offset.part.19+0x27d>
    6578:	8b 4a 04             	mov    0x4(%edx),%ecx
    657b:	85 c9                	test   %ecx,%ecx
    657d:	0f 84 7e 01 00 00    	je     6701 <seq_node_field_offset.part.19+0x261>
    6583:	49                   	dec    %ecx
    6584:	89 4a 04             	mov    %ecx,0x4(%edx)
    6587:	85 c9                	test   %ecx,%ecx
    6589:	75 0d                	jne    6598 <seq_node_field_offset.part.19+0xf8>
    658b:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    658e:	89 14 24             	mov    %edx,(%esp)
    6591:	ff 53 0c             	call   *0xc(%ebx)
    6594:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    6597:	90                   	nop
    6598:	8b 55 dc             	mov    -0x24(%ebp),%edx
    659b:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    659e:	89 14 24             	mov    %edx,(%esp)
    65a1:	e8 1a 3d 00 00       	call   a2c0 <bithenge_node_dec_ref>
    65a6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    65a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    65b0:	83 c4 4c             	add    $0x4c,%esp
    65b3:	5b                   	pop    %ebx
    65b4:	5e                   	pop    %esi
    65b5:	5f                   	pop    %edi
    65b6:	5d                   	pop    %ebp
    65b7:	c3                   	ret    
    65b8:	8b 45 dc             	mov    -0x24(%ebp),%eax
    65bb:	83 38 05             	cmpl   $0x5,(%eax)
    65be:	0f 85 33 01 00 00    	jne    66f7 <seq_node_field_offset.part.19+0x257>
    65c4:	8d 55 e0             	lea    -0x20(%ebp),%edx
    65c7:	89 44 24 08          	mov    %eax,0x8(%esp)
    65cb:	89 54 24 0c          	mov    %edx,0xc(%esp)
    65cf:	8b 43 18             	mov    0x18(%ebx),%eax
    65d2:	89 44 24 04          	mov    %eax,0x4(%esp)
    65d6:	8b 45 d8             	mov    -0x28(%ebp),%eax
    65d9:	89 04 24             	mov    %eax,(%esp)
    65dc:	e8 2f 30 00 00       	call   9610 <bithenge_transform_prefix_length>
    65e1:	8b 55 dc             	mov    -0x24(%ebp),%edx
    65e4:	89 14 24             	mov    %edx,(%esp)
    65e7:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    65ea:	e8 d1 3c 00 00       	call   a2c0 <bithenge_node_dec_ref>
    65ef:	8b 55 d8             	mov    -0x28(%ebp),%edx
    65f2:	85 d2                	test   %edx,%edx
    65f4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    65f7:	74 2c                	je     6625 <seq_node_field_offset.part.19+0x185>
    65f9:	8b 0a                	mov    (%edx),%ecx
    65fb:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    65fe:	85 c9                	test   %ecx,%ecx
    6600:	0f 84 17 01 00 00    	je     671d <seq_node_field_offset.part.19+0x27d>
    6606:	8b 4a 04             	mov    0x4(%edx),%ecx
    6609:	85 c9                	test   %ecx,%ecx
    660b:	0f 84 f0 00 00 00    	je     6701 <seq_node_field_offset.part.19+0x261>
    6611:	49                   	dec    %ecx
    6612:	89 4a 04             	mov    %ecx,0x4(%edx)
    6615:	85 c9                	test   %ecx,%ecx
    6617:	75 0c                	jne    6625 <seq_node_field_offset.part.19+0x185>
    6619:	89 14 24             	mov    %edx,(%esp)
    661c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    661f:	ff 52 0c             	call   *0xc(%edx)
    6622:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    6625:	85 c0                	test   %eax,%eax
    6627:	75 87                	jne    65b0 <seq_node_field_offset.part.19+0x110>
    6629:	8b 43 28             	mov    0x28(%ebx),%eax
    662c:	8b 4b 2c             	mov    0x2c(%ebx),%ecx
    662f:	21 c8                	and    %ecx,%eax
    6631:	40                   	inc    %eax
    6632:	74 3c                	je     6670 <seq_node_field_offset.part.19+0x1d0>
    6634:	8b 43 1c             	mov    0x1c(%ebx),%eax
    6637:	03 75 e0             	add    -0x20(%ebp),%esi
    663a:	8b 53 20             	mov    0x20(%ebx),%edx
    663d:	13 7d e4             	adc    -0x1c(%ebp),%edi
    6640:	89 34 d0             	mov    %esi,(%eax,%edx,8)
    6643:	89 7c d0 04          	mov    %edi,0x4(%eax,%edx,8)
    6647:	42                   	inc    %edx
    6648:	89 53 20             	mov    %edx,0x20(%ebx)
    664b:	39 55 cc             	cmp    %edx,-0x34(%ebp)
    664e:	0f 83 74 fe ff ff    	jae    64c8 <seq_node_field_offset.part.19+0x28>
    6654:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    6657:	8b 54 c8 04          	mov    0x4(%eax,%ecx,8),%edx
    665b:	8b 04 c8             	mov    (%eax,%ecx,8),%eax
    665e:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    6661:	89 01                	mov    %eax,(%ecx)
    6663:	89 51 04             	mov    %edx,0x4(%ecx)
    6666:	83 c4 4c             	add    $0x4c,%esp
    6669:	31 c0                	xor    %eax,%eax
    666b:	5b                   	pop    %ebx
    666c:	5e                   	pop    %esi
    666d:	5f                   	pop    %edi
    666e:	5d                   	pop    %ebp
    666f:	c3                   	ret    
    6670:	8b 43 20             	mov    0x20(%ebx),%eax
    6673:	8d 04 c5 08 00 00 00 	lea    0x8(,%eax,8),%eax
    667a:	89 44 24 04          	mov    %eax,0x4(%esp)
    667e:	8b 43 1c             	mov    0x1c(%ebx),%eax
    6681:	89 04 24             	mov    %eax,(%esp)
    6684:	e8 a7 9d 01 00       	call   20430 <realloc>
    6689:	85 c0                	test   %eax,%eax
    668b:	74 60                	je     66ed <seq_node_field_offset.part.19+0x24d>
    668d:	89 43 1c             	mov    %eax,0x1c(%ebx)
    6690:	eb a5                	jmp    6637 <seq_node_field_offset.part.19+0x197>
    6692:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6698:	8b 40 1c             	mov    0x1c(%eax),%eax
    669b:	8d 4d d8             	lea    -0x28(%ebp),%ecx
    669e:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    66a1:	39 55 cc             	cmp    %edx,-0x34(%ebp)
    66a4:	8b 74 d0 f8          	mov    -0x8(%eax,%edx,8),%esi
    66a8:	8b 7c d0 fc          	mov    -0x4(%eax,%edx,8),%edi
    66ac:	0f 83 16 fe ff ff    	jae    64c8 <seq_node_field_offset.part.19+0x28>
    66b2:	eb a0                	jmp    6654 <seq_node_field_offset.part.19+0x1b4>
    66b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    66b8:	8b 55 d8             	mov    -0x28(%ebp),%edx
    66bb:	85 d2                	test   %edx,%edx
    66bd:	0f 84 ed fe ff ff    	je     65b0 <seq_node_field_offset.part.19+0x110>
    66c3:	8b 1a                	mov    (%edx),%ebx
    66c5:	85 db                	test   %ebx,%ebx
    66c7:	74 54                	je     671d <seq_node_field_offset.part.19+0x27d>
    66c9:	8b 4a 04             	mov    0x4(%edx),%ecx
    66cc:	85 c9                	test   %ecx,%ecx
    66ce:	74 31                	je     6701 <seq_node_field_offset.part.19+0x261>
    66d0:	49                   	dec    %ecx
    66d1:	89 4a 04             	mov    %ecx,0x4(%edx)
    66d4:	85 c9                	test   %ecx,%ecx
    66d6:	0f 85 d4 fe ff ff    	jne    65b0 <seq_node_field_offset.part.19+0x110>
    66dc:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    66df:	89 14 24             	mov    %edx,(%esp)
    66e2:	ff 53 0c             	call   *0xc(%ebx)
    66e5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    66e8:	e9 c3 fe ff ff       	jmp    65b0 <seq_node_field_offset.part.19+0x110>
    66ed:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    66f2:	e9 b9 fe ff ff       	jmp    65b0 <seq_node_field_offset.part.19+0x110>
    66f7:	e8 ba 11 00 00       	call   78b6 <bithenge_node_as_blob.part.5>
    66fc:	e8 d7 11 00 00       	call   78d8 <bithenge_node_inc_ref.part.6>
    6701:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    6708:	00 
    6709:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    6710:	00 
    6711:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    6718:	e8 93 41 02 00       	call   2a8b0 <assert_abort>
    671d:	e8 1c 12 00 00       	call   793e <bithenge_transform_dec_ref.part.13>
    6722:	c7 44 24 08 c3 00 00 	movl   $0xc3,0x8(%esp)
    6729:	00 
    672a:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    6731:	00 
    6732:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    6739:	e8 72 41 02 00       	call   2a8b0 <assert_abort>
    673e:	66 90                	xchg   %ax,%ax

00006740 <do_while_transform_prefix_apply>:
    6740:	55                   	push   %ebp
    6741:	89 e5                	mov    %esp,%ebp
    6743:	57                   	push   %edi
    6744:	56                   	push   %esi
    6745:	53                   	push   %ebx
    6746:	83 ec 2c             	sub    $0x2c,%esp
    6749:	8b 75 0c             	mov    0xc(%ebp),%esi
    674c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    674f:	c7 04 24 40 00 00 00 	movl   $0x40,(%esp)
    6756:	e8 75 99 01 00       	call   200d0 <malloc>
    675b:	89 c7                	mov    %eax,%edi
    675d:	85 c0                	test   %eax,%eax
    675f:	0f 84 53 01 00 00    	je     68b8 <do_while_transform_prefix_apply+0x178>
    6765:	c7 44 24 04 e8 d0 02 	movl   $0x2d0e8,0x4(%esp)
    676c:	00 
    676d:	89 04 24             	mov    %eax,(%esp)
    6770:	e8 fb 3f 00 00       	call   a770 <bithenge_init_internal_node>
    6775:	85 c0                	test   %eax,%eax
    6777:	0f 85 eb 00 00 00    	jne    6868 <do_while_transform_prefix_apply+0x128>
    677d:	c7 47 10 f4 d0 02 00 	movl   $0x2d0f4,0x10(%edi)
    6784:	c7 47 1c 00 00 00 00 	movl   $0x0,0x1c(%edi)
    678b:	85 db                	test   %ebx,%ebx
    678d:	0f 84 48 01 00 00    	je     68db <do_while_transform_prefix_apply+0x19b>
    6793:	8b 4b 04             	mov    0x4(%ebx),%ecx
    6796:	41                   	inc    %ecx
    6797:	85 f6                	test   %esi,%esi
    6799:	89 4b 04             	mov    %ecx,0x4(%ebx)
    679c:	89 5f 14             	mov    %ebx,0x14(%edi)
    679f:	c7 47 28 ff ff ff ff 	movl   $0xffffffff,0x28(%edi)
    67a6:	c7 47 2c ff ff ff ff 	movl   $0xffffffff,0x2c(%edi)
    67ad:	c7 47 20 00 00 00 00 	movl   $0x0,0x20(%edi)
    67b4:	c6 47 24 00          	movb   $0x0,0x24(%edi)
    67b8:	89 77 18             	mov    %esi,0x18(%edi)
    67bb:	74 05                	je     67c2 <do_while_transform_prefix_apply+0x82>
    67bd:	8b 16                	mov    (%esi),%edx
    67bf:	42                   	inc    %edx
    67c0:	89 16                	mov    %edx,(%esi)
    67c2:	8b 55 08             	mov    0x8(%ebp),%edx
    67c5:	8b 4a 10             	mov    0x10(%edx),%ecx
    67c8:	85 c9                	test   %ecx,%ecx
    67ca:	0f 84 10 01 00 00    	je     68e0 <do_while_transform_prefix_apply+0x1a0>
    67d0:	8b 59 04             	mov    0x4(%ecx),%ebx
    67d3:	43                   	inc    %ebx
    67d4:	89 59 04             	mov    %ebx,0x4(%ecx)
    67d7:	89 4f 34             	mov    %ecx,0x34(%edi)
    67da:	8b 4a 0c             	mov    0xc(%edx),%ecx
    67dd:	85 c9                	test   %ecx,%ecx
    67df:	0f 84 b3 00 00 00    	je     6898 <do_while_transform_prefix_apply+0x158>
    67e5:	8b 59 04             	mov    0x4(%ecx),%ebx
    67e8:	8b 75 18             	mov    0x18(%ebp),%esi
    67eb:	43                   	inc    %ebx
    67ec:	85 f6                	test   %esi,%esi
    67ee:	89 59 04             	mov    %ebx,0x4(%ecx)
    67f1:	89 4f 30             	mov    %ecx,0x30(%edi)
    67f4:	8b 4d 14             	mov    0x14(%ebp),%ecx
    67f7:	c7 47 38 ff ff ff ff 	movl   $0xffffffff,0x38(%edi)
    67fe:	c7 47 3c ff ff ff ff 	movl   $0xffffffff,0x3c(%edi)
    6805:	89 39                	mov    %edi,(%ecx)
    6807:	74 52                	je     685b <do_while_transform_prefix_apply+0x11b>
    6809:	83 3f 01             	cmpl   $0x1,(%edi)
    680c:	0f 85 ad 00 00 00    	jne    68bf <do_while_transform_prefix_apply+0x17f>
    6812:	8b 47 08             	mov    0x8(%edi),%eax
    6815:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    681c:	00 
    681d:	c7 44 24 04 50 5c 00 	movl   $0x5c50,0x4(%esp)
    6824:	00 
    6825:	89 3c 24             	mov    %edi,(%esp)
    6828:	ff 10                	call   *(%eax)
    682a:	85 c0                	test   %eax,%eax
    682c:	75 1a                	jne    6848 <do_while_transform_prefix_apply+0x108>
    682e:	8b 55 14             	mov    0x14(%ebp),%edx
    6831:	8b 1a                	mov    (%edx),%ebx
    6833:	8b 4b 38             	mov    0x38(%ebx),%ecx
    6836:	85 c9                	test   %ecx,%ecx
    6838:	74 46                	je     6880 <do_while_transform_prefix_apply+0x140>
    683a:	8b 55 18             	mov    0x18(%ebp),%edx
    683d:	89 d8                	mov    %ebx,%eax
    683f:	e8 5c fc ff ff       	call   64a0 <seq_node_field_offset.part.19>
    6844:	85 c0                	test   %eax,%eax
    6846:	74 13                	je     685b <do_while_transform_prefix_apply+0x11b>
    6848:	8b 4d 14             	mov    0x14(%ebp),%ecx
    684b:	8b 11                	mov    (%ecx),%edx
    684d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    6850:	89 14 24             	mov    %edx,(%esp)
    6853:	e8 68 3a 00 00       	call   a2c0 <bithenge_node_dec_ref>
    6858:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    685b:	83 c4 2c             	add    $0x2c,%esp
    685e:	5b                   	pop    %ebx
    685f:	5e                   	pop    %esi
    6860:	5f                   	pop    %edi
    6861:	5d                   	pop    %ebp
    6862:	c3                   	ret    
    6863:	90                   	nop
    6864:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6868:	89 3c 24             	mov    %edi,(%esp)
    686b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    686e:	e8 6d 99 01 00       	call   201e0 <free>
    6873:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    6876:	83 c4 2c             	add    $0x2c,%esp
    6879:	5b                   	pop    %ebx
    687a:	5e                   	pop    %esi
    687b:	5f                   	pop    %edi
    687c:	5d                   	pop    %ebp
    687d:	c3                   	ret    
    687e:	66 90                	xchg   %ax,%ax
    6880:	8b 4d 18             	mov    0x18(%ebp),%ecx
    6883:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)
    6889:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)
    6890:	83 c4 2c             	add    $0x2c,%esp
    6893:	5b                   	pop    %ebx
    6894:	5e                   	pop    %esi
    6895:	5f                   	pop    %edi
    6896:	5d                   	pop    %ebp
    6897:	c3                   	ret    
    6898:	c7 44 24 08 41 00 00 	movl   $0x41,0x8(%esp)
    689f:	00 
    68a0:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    68a7:	00 
    68a8:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    68af:	e8 fc 3f 02 00       	call   2a8b0 <assert_abort>
    68b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    68b8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    68bd:	eb 9c                	jmp    685b <do_while_transform_prefix_apply+0x11b>
    68bf:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    68c6:	00 
    68c7:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    68ce:	00 
    68cf:	c7 04 24 24 ce 02 00 	movl   $0x2ce24,(%esp)
    68d6:	e8 d5 3f 02 00       	call   2a8b0 <assert_abort>
    68db:	e8 f8 0f 00 00       	call   78d8 <bithenge_node_inc_ref.part.6>
    68e0:	e8 15 10 00 00       	call   78fa <bithenge_transform_inc_ref.part.9>
    68e5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    68e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000068f0 <struct_transform_prefix_apply>:
    68f0:	55                   	push   %ebp
    68f1:	89 e5                	mov    %esp,%ebp
    68f3:	56                   	push   %esi
    68f4:	53                   	push   %ebx
    68f5:	83 ec 20             	sub    $0x20,%esp
    68f8:	8b 45 10             	mov    0x10(%ebp),%eax
    68fb:	8b 5d 14             	mov    0x14(%ebp),%ebx
    68fe:	89 04 24             	mov    %eax,(%esp)
    6901:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
    6908:	00 
    6909:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    690c:	89 da                	mov    %ebx,%edx
    690e:	8b 45 08             	mov    0x8(%ebp),%eax
    6911:	e8 ea f3 ff ff       	call   5d00 <struct_transform_make_node>
    6916:	85 c0                	test   %eax,%eax
    6918:	75 31                	jne    694b <struct_transform_prefix_apply+0x5b>
    691a:	8b 75 18             	mov    0x18(%ebp),%esi
    691d:	85 f6                	test   %esi,%esi
    691f:	74 2a                	je     694b <struct_transform_prefix_apply+0x5b>
    6921:	8b 55 08             	mov    0x8(%ebp),%edx
    6924:	8b 33                	mov    (%ebx),%esi
    6926:	8b 4a 10             	mov    0x10(%edx),%ecx
    6929:	8b 55 18             	mov    0x18(%ebp),%edx
    692c:	85 c9                	test   %ecx,%ecx
    692e:	74 28                	je     6958 <struct_transform_prefix_apply+0x68>
    6930:	89 f0                	mov    %esi,%eax
    6932:	e8 69 fb ff ff       	call   64a0 <seq_node_field_offset.part.19>
    6937:	85 c0                	test   %eax,%eax
    6939:	74 10                	je     694b <struct_transform_prefix_apply+0x5b>
    693b:	8b 13                	mov    (%ebx),%edx
    693d:	89 45 f4             	mov    %eax,-0xc(%ebp)
    6940:	89 14 24             	mov    %edx,(%esp)
    6943:	e8 78 39 00 00       	call   a2c0 <bithenge_node_dec_ref>
    6948:	8b 45 f4             	mov    -0xc(%ebp),%eax
    694b:	83 c4 20             	add    $0x20,%esp
    694e:	5b                   	pop    %ebx
    694f:	5e                   	pop    %esi
    6950:	5d                   	pop    %ebp
    6951:	c3                   	ret    
    6952:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6958:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    695e:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
    6965:	83 c4 20             	add    $0x20,%esp
    6968:	5b                   	pop    %ebx
    6969:	5e                   	pop    %esi
    696a:	5d                   	pop    %ebp
    696b:	c3                   	ret    
    696c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00006970 <struct_transform_prefix_length>:
    6970:	55                   	push   %ebp
    6971:	89 e5                	mov    %esp,%ebp
    6973:	53                   	push   %ebx
    6974:	83 ec 34             	sub    $0x34,%esp
    6977:	8b 45 10             	mov    0x10(%ebp),%eax
    697a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    697d:	89 04 24             	mov    %eax,(%esp)
    6980:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
    6987:	00 
    6988:	8d 55 f4             	lea    -0xc(%ebp),%edx
    698b:	8b 45 08             	mov    0x8(%ebp),%eax
    698e:	e8 6d f3 ff ff       	call   5d00 <struct_transform_make_node>
    6993:	85 c0                	test   %eax,%eax
    6995:	74 09                	je     69a0 <struct_transform_prefix_length+0x30>
    6997:	83 c4 34             	add    $0x34,%esp
    699a:	5b                   	pop    %ebx
    699b:	5d                   	pop    %ebp
    699c:	c3                   	ret    
    699d:	8d 76 00             	lea    0x0(%esi),%esi
    69a0:	8b 55 08             	mov    0x8(%ebp),%edx
    69a3:	8b 5d f4             	mov    -0xc(%ebp),%ebx
    69a6:	8b 4a 10             	mov    0x10(%edx),%ecx
    69a9:	8b 55 14             	mov    0x14(%ebp),%edx
    69ac:	85 c9                	test   %ecx,%ecx
    69ae:	74 20                	je     69d0 <struct_transform_prefix_length+0x60>
    69b0:	89 d8                	mov    %ebx,%eax
    69b2:	e8 e9 fa ff ff       	call   64a0 <seq_node_field_offset.part.19>
    69b7:	8b 5d f4             	mov    -0xc(%ebp),%ebx
    69ba:	89 1c 24             	mov    %ebx,(%esp)
    69bd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    69c0:	e8 fb 38 00 00       	call   a2c0 <bithenge_node_dec_ref>
    69c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    69c8:	83 c4 34             	add    $0x34,%esp
    69cb:	5b                   	pop    %ebx
    69cc:	5d                   	pop    %ebp
    69cd:	c3                   	ret    
    69ce:	66 90                	xchg   %ax,%ax
    69d0:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    69d6:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
    69dd:	eb db                	jmp    69ba <struct_transform_prefix_length+0x4a>
    69df:	90                   	nop

000069e0 <repeat_transform_prefix_apply>:
    69e0:	55                   	push   %ebp
    69e1:	89 e5                	mov    %esp,%ebp
    69e3:	57                   	push   %edi
    69e4:	56                   	push   %esi
    69e5:	53                   	push   %ebx
    69e6:	83 ec 3c             	sub    $0x3c,%esp
    69e9:	8b 45 08             	mov    0x8(%ebp),%eax
    69ec:	8b 4d 10             	mov    0x10(%ebp),%ecx
    69ef:	8b 75 18             	mov    0x18(%ebp),%esi
    69f2:	8d 50 10             	lea    0x10(%eax),%edx
    69f5:	8b 40 0c             	mov    0xc(%eax),%eax
    69f8:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    69fc:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    69ff:	89 0c 24             	mov    %ecx,(%esp)
    6a02:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
    6a09:	00 
    6a0a:	8b 4d 14             	mov    0x14(%ebp),%ecx
    6a0d:	e8 0e f7 ff ff       	call   6120 <repeat_transform_make_node.isra.17>
    6a12:	89 c7                	mov    %eax,%edi
    6a14:	85 c0                	test   %eax,%eax
    6a16:	75 28                	jne    6a40 <repeat_transform_prefix_apply+0x60>
    6a18:	85 f6                	test   %esi,%esi
    6a1a:	74 24                	je     6a40 <repeat_transform_prefix_apply+0x60>
    6a1c:	8b 55 14             	mov    0x14(%ebp),%edx
    6a1f:	8b 02                	mov    (%edx),%eax
    6a21:	8b 48 34             	mov    0x34(%eax),%ecx
    6a24:	8b 50 38             	mov    0x38(%eax),%edx
    6a27:	21 ca                	and    %ecx,%edx
    6a29:	42                   	inc    %edx
    6a2a:	74 24                	je     6a50 <repeat_transform_prefix_apply+0x70>
    6a2c:	85 c9                	test   %ecx,%ecx
    6a2e:	0f 84 9c 00 00 00    	je     6ad0 <repeat_transform_prefix_apply+0xf0>
    6a34:	89 f2                	mov    %esi,%edx
    6a36:	e8 65 fa ff ff       	call   64a0 <seq_node_field_offset.part.19>
    6a3b:	85 c0                	test   %eax,%eax
    6a3d:	75 71                	jne    6ab0 <repeat_transform_prefix_apply+0xd0>
    6a3f:	90                   	nop
    6a40:	83 c4 3c             	add    $0x3c,%esp
    6a43:	89 f8                	mov    %edi,%eax
    6a45:	5b                   	pop    %ebx
    6a46:	5e                   	pop    %esi
    6a47:	5f                   	pop    %edi
    6a48:	5d                   	pop    %ebp
    6a49:	c3                   	ret    
    6a4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6a50:	89 7d d4             	mov    %edi,-0x2c(%ebp)
    6a53:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
    6a59:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)
    6a60:	bb 01 00 00 00       	mov    $0x1,%ebx
    6a65:	8b 7d 14             	mov    0x14(%ebp),%edi
    6a68:	eb 2c                	jmp    6a96 <repeat_transform_prefix_apply+0xb6>
    6a6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    6a70:	89 d9                	mov    %ebx,%ecx
    6a72:	8d 55 e0             	lea    -0x20(%ebp),%edx
    6a75:	e8 26 fa ff ff       	call   64a0 <seq_node_field_offset.part.19>
    6a7a:	83 f8 ff             	cmp    $0xffffffff,%eax
    6a7d:	74 21                	je     6aa0 <repeat_transform_prefix_apply+0xc0>
    6a7f:	83 f8 f2             	cmp    $0xfffffff2,%eax
    6a82:	74 1c                	je     6aa0 <repeat_transform_prefix_apply+0xc0>
    6a84:	85 c0                	test   %eax,%eax
    6a86:	75 28                	jne    6ab0 <repeat_transform_prefix_apply+0xd0>
    6a88:	8b 55 e0             	mov    -0x20(%ebp),%edx
    6a8b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    6a8e:	8b 07                	mov    (%edi),%eax
    6a90:	89 16                	mov    %edx,(%esi)
    6a92:	89 4e 04             	mov    %ecx,0x4(%esi)
    6a95:	43                   	inc    %ebx
    6a96:	85 db                	test   %ebx,%ebx
    6a98:	75 d6                	jne    6a70 <repeat_transform_prefix_apply+0x90>
    6a9a:	31 d2                	xor    %edx,%edx
    6a9c:	31 c9                	xor    %ecx,%ecx
    6a9e:	eb f0                	jmp    6a90 <repeat_transform_prefix_apply+0xb0>
    6aa0:	8b 7d d4             	mov    -0x2c(%ebp),%edi
    6aa3:	83 c4 3c             	add    $0x3c,%esp
    6aa6:	89 f8                	mov    %edi,%eax
    6aa8:	5b                   	pop    %ebx
    6aa9:	5e                   	pop    %esi
    6aaa:	5f                   	pop    %edi
    6aab:	5d                   	pop    %ebp
    6aac:	c3                   	ret    
    6aad:	8d 76 00             	lea    0x0(%esi),%esi
    6ab0:	8b 4d 14             	mov    0x14(%ebp),%ecx
    6ab3:	8b 11                	mov    (%ecx),%edx
    6ab5:	89 45 d0             	mov    %eax,-0x30(%ebp)
    6ab8:	89 14 24             	mov    %edx,(%esp)
    6abb:	e8 00 38 00 00       	call   a2c0 <bithenge_node_dec_ref>
    6ac0:	8b 45 d0             	mov    -0x30(%ebp),%eax
    6ac3:	83 c4 3c             	add    $0x3c,%esp
    6ac6:	89 c7                	mov    %eax,%edi
    6ac8:	89 f8                	mov    %edi,%eax
    6aca:	5b                   	pop    %ebx
    6acb:	5e                   	pop    %esi
    6acc:	5f                   	pop    %edi
    6acd:	5d                   	pop    %ebp
    6ace:	c3                   	ret    
    6acf:	90                   	nop
    6ad0:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
    6ad6:	c7 46 04 00 00 00 00 	movl   $0x0,0x4(%esi)
    6add:	83 c4 3c             	add    $0x3c,%esp
    6ae0:	89 f8                	mov    %edi,%eax
    6ae2:	5b                   	pop    %ebx
    6ae3:	5e                   	pop    %esi
    6ae4:	5f                   	pop    %edi
    6ae5:	5d                   	pop    %ebp
    6ae6:	c3                   	ret    
    6ae7:	89 f6                	mov    %esi,%esi
    6ae9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00006af0 <seq_node_subtransform>:
    6af0:	55                   	push   %ebp
    6af1:	89 e5                	mov    %esp,%ebp
    6af3:	57                   	push   %edi
    6af4:	56                   	push   %esi
    6af5:	53                   	push   %ebx
    6af6:	83 ec 6c             	sub    $0x6c,%esp
    6af9:	89 c7                	mov    %eax,%edi
    6afb:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    6afe:	89 ce                	mov    %ecx,%esi
    6b00:	85 c9                	test   %ecx,%ecx
    6b02:	74 1c                	je     6b20 <seq_node_subtransform+0x30>
    6b04:	8d 55 d0             	lea    -0x30(%ebp),%edx
    6b07:	e8 94 f9 ff ff       	call   64a0 <seq_node_field_offset.part.19>
    6b0c:	89 c3                	mov    %eax,%ebx
    6b0e:	85 c0                	test   %eax,%eax
    6b10:	74 1c                	je     6b2e <seq_node_subtransform+0x3e>
    6b12:	83 c4 6c             	add    $0x6c,%esp
    6b15:	89 d8                	mov    %ebx,%eax
    6b17:	5b                   	pop    %ebx
    6b18:	5e                   	pop    %esi
    6b19:	5f                   	pop    %edi
    6b1a:	5d                   	pop    %ebp
    6b1b:	c3                   	ret    
    6b1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6b20:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    6b27:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    6b2e:	8d 55 c4             	lea    -0x3c(%ebp),%edx
    6b31:	8b 47 10             	mov    0x10(%edi),%eax
    6b34:	89 74 24 08          	mov    %esi,0x8(%esp)
    6b38:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    6b3f:	00 
    6b40:	89 54 24 04          	mov    %edx,0x4(%esp)
    6b44:	89 3c 24             	mov    %edi,(%esp)
    6b47:	ff 10                	call   *(%eax)
    6b49:	89 c3                	mov    %eax,%ebx
    6b4b:	85 c0                	test   %eax,%eax
    6b4d:	75 c3                	jne    6b12 <seq_node_subtransform+0x22>
    6b4f:	39 77 20             	cmp    %esi,0x20(%edi)
    6b52:	74 54                	je     6ba8 <seq_node_subtransform+0xb8>
    6b54:	89 f1                	mov    %esi,%ecx
    6b56:	41                   	inc    %ecx
    6b57:	0f 84 13 01 00 00    	je     6c70 <seq_node_subtransform+0x180>
    6b5d:	8d 55 e0             	lea    -0x20(%ebp),%edx
    6b60:	89 f8                	mov    %edi,%eax
    6b62:	e8 39 f9 ff ff       	call   64a0 <seq_node_field_offset.part.19>
    6b67:	85 c0                	test   %eax,%eax
    6b69:	0f 84 0f 01 00 00    	je     6c7e <seq_node_subtransform+0x18e>
    6b6f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
    6b72:	85 d2                	test   %edx,%edx
    6b74:	74 21                	je     6b97 <seq_node_subtransform+0xa7>
    6b76:	8b 1a                	mov    (%edx),%ebx
    6b78:	85 db                	test   %ebx,%ebx
    6b7a:	0f 84 0f 03 00 00    	je     6e8f <seq_node_subtransform+0x39f>
    6b80:	8b 4a 04             	mov    0x4(%edx),%ecx
    6b83:	85 c9                	test   %ecx,%ecx
    6b85:	0f 84 e8 02 00 00    	je     6e73 <seq_node_subtransform+0x383>
    6b8b:	49                   	dec    %ecx
    6b8c:	89 4a 04             	mov    %ecx,0x4(%edx)
    6b8f:	85 c9                	test   %ecx,%ecx
    6b91:	0f 84 a1 01 00 00    	je     6d38 <seq_node_subtransform+0x248>
    6b97:	89 c3                	mov    %eax,%ebx
    6b99:	83 c4 6c             	add    $0x6c,%esp
    6b9c:	89 d8                	mov    %ebx,%eax
    6b9e:	5b                   	pop    %ebx
    6b9f:	5e                   	pop    %esi
    6ba0:	5f                   	pop    %edi
    6ba1:	5d                   	pop    %ebp
    6ba2:	c3                   	ret    
    6ba3:	90                   	nop
    6ba4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6ba8:	8b 4f 14             	mov    0x14(%edi),%ecx
    6bab:	85 c9                	test   %ecx,%ecx
    6bad:	0f 84 e1 02 00 00    	je     6e94 <seq_node_subtransform+0x3a4>
    6bb3:	8b 59 04             	mov    0x4(%ecx),%ebx
    6bb6:	8b 45 d0             	mov    -0x30(%ebp),%eax
    6bb9:	43                   	inc    %ebx
    6bba:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    6bbd:	89 59 04             	mov    %ebx,0x4(%ecx)
    6bc0:	89 44 24 08          	mov    %eax,0x8(%esp)
    6bc4:	8d 45 c8             	lea    -0x38(%ebp),%eax
    6bc7:	89 54 24 0c          	mov    %edx,0xc(%esp)
    6bcb:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    6bcf:	89 04 24             	mov    %eax,(%esp)
    6bd2:	e8 d9 4d 00 00       	call   b9b0 <bithenge_new_offset_blob>
    6bd7:	89 c3                	mov    %eax,%ebx
    6bd9:	85 c0                	test   %eax,%eax
    6bdb:	0f 85 6f 01 00 00    	jne    6d50 <seq_node_subtransform+0x260>
    6be1:	80 7f 24 00          	cmpb   $0x0,0x24(%edi)
    6be5:	0f 84 9d 01 00 00    	je     6d88 <seq_node_subtransform+0x298>
    6beb:	8b 45 c8             	mov    -0x38(%ebp),%eax
    6bee:	83 38 05             	cmpl   $0x5,(%eax)
    6bf1:	0f 85 5b 02 00 00    	jne    6e52 <seq_node_subtransform+0x362>
    6bf7:	8b 50 08             	mov    0x8(%eax),%edx
    6bfa:	85 d2                	test   %edx,%edx
    6bfc:	0f 84 55 02 00 00    	je     6e57 <seq_node_subtransform+0x367>
    6c02:	8d 4d e0             	lea    -0x20(%ebp),%ecx
    6c05:	89 04 24             	mov    %eax,(%esp)
    6c08:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    6c0c:	ff 12                	call   *(%edx)
    6c0e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    6c11:	89 c3                	mov    %eax,%ebx
    6c13:	8b 45 e0             	mov    -0x20(%ebp),%eax
    6c16:	85 db                	test   %ebx,%ebx
    6c18:	75 18                	jne    6c32 <seq_node_subtransform+0x142>
    6c1a:	09 c2                	or     %eax,%edx
    6c1c:	0f 85 66 01 00 00    	jne    6d88 <seq_node_subtransform+0x298>
    6c22:	8b 47 20             	mov    0x20(%edi),%eax
    6c25:	c7 47 2c 00 00 00 00 	movl   $0x0,0x2c(%edi)
    6c2c:	89 47 28             	mov    %eax,0x28(%edi)
    6c2f:	83 cb ff             	or     $0xffffffff,%ebx
    6c32:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    6c35:	85 c0                	test   %eax,%eax
    6c37:	74 23                	je     6c5c <seq_node_subtransform+0x16c>
    6c39:	8b 08                	mov    (%eax),%ecx
    6c3b:	85 c9                	test   %ecx,%ecx
    6c3d:	0f 84 4c 02 00 00    	je     6e8f <seq_node_subtransform+0x39f>
    6c43:	8b 50 04             	mov    0x4(%eax),%edx
    6c46:	85 d2                	test   %edx,%edx
    6c48:	0f 84 25 02 00 00    	je     6e73 <seq_node_subtransform+0x383>
    6c4e:	4a                   	dec    %edx
    6c4f:	89 50 04             	mov    %edx,0x4(%eax)
    6c52:	85 d2                	test   %edx,%edx
    6c54:	75 06                	jne    6c5c <seq_node_subtransform+0x16c>
    6c56:	89 04 24             	mov    %eax,(%esp)
    6c59:	ff 51 0c             	call   *0xc(%ecx)
    6c5c:	8b 45 c8             	mov    -0x38(%ebp),%eax
    6c5f:	89 04 24             	mov    %eax,(%esp)
    6c62:	e8 59 36 00 00       	call   a2c0 <bithenge_node_dec_ref>
    6c67:	e9 a6 fe ff ff       	jmp    6b12 <seq_node_subtransform+0x22>
    6c6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6c70:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    6c77:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    6c7e:	8b 4f 14             	mov    0x14(%edi),%ecx
    6c81:	85 c9                	test   %ecx,%ecx
    6c83:	0f 84 0b 02 00 00    	je     6e94 <seq_node_subtransform+0x3a4>
    6c89:	8b 41 04             	mov    0x4(%ecx),%eax
    6c8c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    6c8f:	40                   	inc    %eax
    6c90:	89 41 04             	mov    %eax,0x4(%ecx)
    6c93:	8b 45 e0             	mov    -0x20(%ebp),%eax
    6c96:	2b 45 d0             	sub    -0x30(%ebp),%eax
    6c99:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    6c9d:	1b 55 d4             	sbb    -0x2c(%ebp),%edx
    6ca0:	89 44 24 10          	mov    %eax,0x10(%esp)
    6ca4:	8b 45 d0             	mov    -0x30(%ebp),%eax
    6ca7:	89 54 24 14          	mov    %edx,0x14(%esp)
    6cab:	89 44 24 08          	mov    %eax,0x8(%esp)
    6caf:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    6cb2:	8d 45 cc             	lea    -0x34(%ebp),%eax
    6cb5:	89 54 24 0c          	mov    %edx,0xc(%esp)
    6cb9:	89 04 24             	mov    %eax,(%esp)
    6cbc:	e8 2f 4d 00 00       	call   b9f0 <bithenge_new_subblob>
    6cc1:	85 c0                	test   %eax,%eax
    6cc3:	0f 85 a6 fe ff ff    	jne    6b6f <seq_node_subtransform+0x7f>
    6cc9:	8b 45 cc             	mov    -0x34(%ebp),%eax
    6ccc:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    6ccf:	89 44 24 08          	mov    %eax,0x8(%esp)
    6cd3:	8b 47 18             	mov    0x18(%edi),%eax
    6cd6:	89 44 24 04          	mov    %eax,0x4(%esp)
    6cda:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    6cdd:	89 54 24 0c          	mov    %edx,0xc(%esp)
    6ce1:	89 04 24             	mov    %eax,(%esp)
    6ce4:	e8 87 28 00 00       	call   9570 <bithenge_transform_apply>
    6ce9:	8b 55 cc             	mov    -0x34(%ebp),%edx
    6cec:	89 14 24             	mov    %edx,(%esp)
    6cef:	89 45 b0             	mov    %eax,-0x50(%ebp)
    6cf2:	e8 c9 35 00 00       	call   a2c0 <bithenge_node_dec_ref>
    6cf7:	8b 55 c4             	mov    -0x3c(%ebp),%edx
    6cfa:	85 d2                	test   %edx,%edx
    6cfc:	8b 45 b0             	mov    -0x50(%ebp),%eax
    6cff:	74 26                	je     6d27 <seq_node_subtransform+0x237>
    6d01:	8b 32                	mov    (%edx),%esi
    6d03:	85 f6                	test   %esi,%esi
    6d05:	0f 84 84 01 00 00    	je     6e8f <seq_node_subtransform+0x39f>
    6d0b:	8b 4a 04             	mov    0x4(%edx),%ecx
    6d0e:	85 c9                	test   %ecx,%ecx
    6d10:	0f 84 5d 01 00 00    	je     6e73 <seq_node_subtransform+0x383>
    6d16:	49                   	dec    %ecx
    6d17:	89 4a 04             	mov    %ecx,0x4(%edx)
    6d1a:	85 c9                	test   %ecx,%ecx
    6d1c:	75 09                	jne    6d27 <seq_node_subtransform+0x237>
    6d1e:	89 14 24             	mov    %edx,(%esp)
    6d21:	ff 56 0c             	call   *0xc(%esi)
    6d24:	8b 45 b0             	mov    -0x50(%ebp),%eax
    6d27:	85 c0                	test   %eax,%eax
    6d29:	0f 84 e3 fd ff ff    	je     6b12 <seq_node_subtransform+0x22>
    6d2f:	89 c3                	mov    %eax,%ebx
    6d31:	e9 63 fe ff ff       	jmp    6b99 <seq_node_subtransform+0xa9>
    6d36:	66 90                	xchg   %ax,%ax
    6d38:	89 45 b0             	mov    %eax,-0x50(%ebp)
    6d3b:	89 14 24             	mov    %edx,(%esp)
    6d3e:	ff 53 0c             	call   *0xc(%ebx)
    6d41:	8b 45 b0             	mov    -0x50(%ebp),%eax
    6d44:	89 c3                	mov    %eax,%ebx
    6d46:	e9 4e fe ff ff       	jmp    6b99 <seq_node_subtransform+0xa9>
    6d4b:	90                   	nop
    6d4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    6d50:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    6d53:	85 c0                	test   %eax,%eax
    6d55:	0f 84 b7 fd ff ff    	je     6b12 <seq_node_subtransform+0x22>
    6d5b:	8b 08                	mov    (%eax),%ecx
    6d5d:	85 c9                	test   %ecx,%ecx
    6d5f:	0f 84 2a 01 00 00    	je     6e8f <seq_node_subtransform+0x39f>
    6d65:	8b 50 04             	mov    0x4(%eax),%edx
    6d68:	85 d2                	test   %edx,%edx
    6d6a:	0f 84 03 01 00 00    	je     6e73 <seq_node_subtransform+0x383>
    6d70:	4a                   	dec    %edx
    6d71:	89 50 04             	mov    %edx,0x4(%eax)
    6d74:	85 d2                	test   %edx,%edx
    6d76:	0f 85 96 fd ff ff    	jne    6b12 <seq_node_subtransform+0x22>
    6d7c:	89 04 24             	mov    %eax,(%esp)
    6d7f:	ff 51 0c             	call   *0xc(%ecx)
    6d82:	e9 8b fd ff ff       	jmp    6b12 <seq_node_subtransform+0x22>
    6d87:	90                   	nop
    6d88:	8b 45 c8             	mov    -0x38(%ebp),%eax
    6d8b:	83 38 05             	cmpl   $0x5,(%eax)
    6d8e:	0f 85 be 00 00 00    	jne    6e52 <seq_node_subtransform+0x362>
    6d94:	8d 55 d8             	lea    -0x28(%ebp),%edx
    6d97:	89 44 24 08          	mov    %eax,0x8(%esp)
    6d9b:	8b 47 18             	mov    0x18(%edi),%eax
    6d9e:	89 54 24 10          	mov    %edx,0x10(%esp)
    6da2:	89 44 24 04          	mov    %eax,0x4(%esp)
    6da6:	8b 55 b4             	mov    -0x4c(%ebp),%edx
    6da9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    6dac:	89 54 24 0c          	mov    %edx,0xc(%esp)
    6db0:	89 04 24             	mov    %eax,(%esp)
    6db3:	e8 d8 29 00 00       	call   9790 <bithenge_transform_prefix_apply>
    6db8:	89 c3                	mov    %eax,%ebx
    6dba:	8b 45 c8             	mov    -0x38(%ebp),%eax
    6dbd:	89 04 24             	mov    %eax,(%esp)
    6dc0:	e8 fb 34 00 00       	call   a2c0 <bithenge_node_dec_ref>
    6dc5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    6dc8:	85 c0                	test   %eax,%eax
    6dca:	74 23                	je     6def <seq_node_subtransform+0x2ff>
    6dcc:	8b 08                	mov    (%eax),%ecx
    6dce:	85 c9                	test   %ecx,%ecx
    6dd0:	0f 84 b9 00 00 00    	je     6e8f <seq_node_subtransform+0x39f>
    6dd6:	8b 50 04             	mov    0x4(%eax),%edx
    6dd9:	85 d2                	test   %edx,%edx
    6ddb:	0f 84 92 00 00 00    	je     6e73 <seq_node_subtransform+0x383>
    6de1:	4a                   	dec    %edx
    6de2:	89 50 04             	mov    %edx,0x4(%eax)
    6de5:	85 d2                	test   %edx,%edx
    6de7:	75 06                	jne    6def <seq_node_subtransform+0x2ff>
    6de9:	89 04 24             	mov    %eax,(%esp)
    6dec:	ff 51 0c             	call   *0xc(%ecx)
    6def:	85 db                	test   %ebx,%ebx
    6df1:	0f 85 1b fd ff ff    	jne    6b12 <seq_node_subtransform+0x22>
    6df7:	8b 47 28             	mov    0x28(%edi),%eax
    6dfa:	8b 57 2c             	mov    0x2c(%edi),%edx
    6dfd:	21 d0                	and    %edx,%eax
    6dff:	40                   	inc    %eax
    6e00:	74 22                	je     6e24 <seq_node_subtransform+0x334>
    6e02:	8b 77 1c             	mov    0x1c(%edi),%esi
    6e05:	8b 45 d8             	mov    -0x28(%ebp),%eax
    6e08:	8b 55 dc             	mov    -0x24(%ebp),%edx
    6e0b:	03 45 d0             	add    -0x30(%ebp),%eax
    6e0e:	8b 4f 20             	mov    0x20(%edi),%ecx
    6e11:	13 55 d4             	adc    -0x2c(%ebp),%edx
    6e14:	89 04 ce             	mov    %eax,(%esi,%ecx,8)
    6e17:	89 54 ce 04          	mov    %edx,0x4(%esi,%ecx,8)
    6e1b:	41                   	inc    %ecx
    6e1c:	89 4f 20             	mov    %ecx,0x20(%edi)
    6e1f:	e9 ee fc ff ff       	jmp    6b12 <seq_node_subtransform+0x22>
    6e24:	8b 47 20             	mov    0x20(%edi),%eax
    6e27:	8d 04 c5 08 00 00 00 	lea    0x8(,%eax,8),%eax
    6e2e:	89 44 24 04          	mov    %eax,0x4(%esp)
    6e32:	8b 47 1c             	mov    0x1c(%edi),%eax
    6e35:	89 04 24             	mov    %eax,(%esp)
    6e38:	e8 f3 95 01 00       	call   20430 <realloc>
    6e3d:	89 c6                	mov    %eax,%esi
    6e3f:	85 c0                	test   %eax,%eax
    6e41:	74 05                	je     6e48 <seq_node_subtransform+0x358>
    6e43:	89 47 1c             	mov    %eax,0x1c(%edi)
    6e46:	eb bd                	jmp    6e05 <seq_node_subtransform+0x315>
    6e48:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx
    6e4d:	e9 c0 fc ff ff       	jmp    6b12 <seq_node_subtransform+0x22>
    6e52:	e8 5f 0a 00 00       	call   78b6 <bithenge_node_as_blob.part.5>
    6e57:	c7 44 24 08 c3 00 00 	movl   $0xc3,0x8(%esp)
    6e5e:	00 
    6e5f:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    6e66:	00 
    6e67:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    6e6e:	e8 3d 3a 02 00       	call   2a8b0 <assert_abort>
    6e73:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    6e7a:	00 
    6e7b:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    6e82:	00 
    6e83:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    6e8a:	e8 21 3a 02 00       	call   2a8b0 <assert_abort>
    6e8f:	e8 aa 0a 00 00       	call   793e <bithenge_transform_dec_ref.part.13>
    6e94:	e8 3f 0a 00 00       	call   78d8 <bithenge_node_inc_ref.part.6>
    6e99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00006ea0 <do_while_node_for_each>:
    6ea0:	55                   	push   %ebp
    6ea1:	89 e5                	mov    %esp,%ebp
    6ea3:	57                   	push   %edi
    6ea4:	56                   	push   %esi
    6ea5:	53                   	push   %ebx
    6ea6:	83 ec 3c             	sub    $0x3c,%esp
    6ea9:	31 f6                	xor    %esi,%esi
    6eab:	8b 5d 08             	mov    0x8(%ebp),%ebx
    6eae:	31 ff                	xor    %edi,%edi
    6eb0:	e9 e6 00 00 00       	jmp    6f9b <do_while_node_for_each+0xfb>
    6eb5:	8d 76 00             	lea    0x0(%esi),%esi
    6eb8:	8d 45 dc             	lea    -0x24(%ebp),%eax
    6ebb:	89 74 24 04          	mov    %esi,0x4(%esp)
    6ebf:	89 7c 24 08          	mov    %edi,0x8(%esp)
    6ec3:	89 04 24             	mov    %eax,(%esp)
    6ec6:	e8 b5 3a 00 00       	call   a980 <bithenge_new_integer_node>
    6ecb:	85 c0                	test   %eax,%eax
    6ecd:	0f 85 e5 00 00 00    	jne    6fb8 <do_while_node_for_each+0x118>
    6ed3:	8b 45 d8             	mov    -0x28(%ebp),%eax
    6ed6:	85 c0                	test   %eax,%eax
    6ed8:	0f 84 5e 01 00 00    	je     703c <do_while_node_for_each+0x19c>
    6ede:	8b 50 04             	mov    0x4(%eax),%edx
    6ee1:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    6ee4:	42                   	inc    %edx
    6ee5:	89 50 04             	mov    %edx,0x4(%eax)
    6ee8:	8b 55 10             	mov    0x10(%ebp),%edx
    6eeb:	89 44 24 04          	mov    %eax,0x4(%esp)
    6eef:	8b 45 dc             	mov    -0x24(%ebp),%eax
    6ef2:	89 54 24 08          	mov    %edx,0x8(%esp)
    6ef6:	89 04 24             	mov    %eax,(%esp)
    6ef9:	ff d1                	call   *%ecx
    6efb:	85 c0                	test   %eax,%eax
    6efd:	0f 85 b5 00 00 00    	jne    6fb8 <do_while_node_for_each+0x118>
    6f03:	8b 43 18             	mov    0x18(%ebx),%eax
    6f06:	89 44 24 04          	mov    %eax,0x4(%esp)
    6f0a:	8d 45 e0             	lea    -0x20(%ebp),%eax
    6f0d:	89 04 24             	mov    %eax,(%esp)
    6f10:	e8 3b 29 00 00       	call   9850 <bithenge_scope_new>
    6f15:	85 c0                	test   %eax,%eax
    6f17:	0f 85 9b 00 00 00    	jne    6fb8 <do_while_node_for_each+0x118>
    6f1d:	8b 45 d8             	mov    -0x28(%ebp),%eax
    6f20:	89 44 24 04          	mov    %eax,0x4(%esp)
    6f24:	8b 45 e0             	mov    -0x20(%ebp),%eax
    6f27:	89 04 24             	mov    %eax,(%esp)
    6f2a:	e8 a1 2b 00 00       	call   9ad0 <bithenge_scope_set_current_node>
    6f2f:	8b 55 e0             	mov    -0x20(%ebp),%edx
    6f32:	89 55 cc             	mov    %edx,-0x34(%ebp)
    6f35:	8b 53 30             	mov    0x30(%ebx),%edx
    6f38:	85 d2                	test   %edx,%edx
    6f3a:	0f 84 e0 00 00 00    	je     7020 <do_while_node_for_each+0x180>
    6f40:	8b 02                	mov    (%edx),%eax
    6f42:	85 c0                	test   %eax,%eax
    6f44:	0f 84 ba 00 00 00    	je     7004 <do_while_node_for_each+0x164>
    6f4a:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    6f4d:	89 14 24             	mov    %edx,(%esp)
    6f50:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    6f54:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    6f57:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    6f5b:	ff 10                	call   *(%eax)
    6f5d:	8b 55 e0             	mov    -0x20(%ebp),%edx
    6f60:	89 14 24             	mov    %edx,(%esp)
    6f63:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    6f66:	e8 55 29 00 00       	call   98c0 <bithenge_scope_dec_ref>
    6f6b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    6f6e:	85 c0                	test   %eax,%eax
    6f70:	75 3d                	jne    6faf <do_while_node_for_each+0x10f>
    6f72:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    6f75:	83 3a 02             	cmpl   $0x2,(%edx)
    6f78:	75 5e                	jne    6fd8 <do_while_node_for_each+0x138>
    6f7a:	8a 4a 08             	mov    0x8(%edx),%cl
    6f7d:	89 14 24             	mov    %edx,(%esp)
    6f80:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    6f83:	88 4d d0             	mov    %cl,-0x30(%ebp)
    6f86:	e8 35 33 00 00       	call   a2c0 <bithenge_node_dec_ref>
    6f8b:	83 c6 01             	add    $0x1,%esi
    6f8e:	8a 4d d0             	mov    -0x30(%ebp),%cl
    6f91:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    6f94:	83 d7 00             	adc    $0x0,%edi
    6f97:	84 c9                	test   %cl,%cl
    6f99:	74 55                	je     6ff0 <do_while_node_for_each+0x150>
    6f9b:	89 f1                	mov    %esi,%ecx
    6f9d:	8d 55 d8             	lea    -0x28(%ebp),%edx
    6fa0:	89 d8                	mov    %ebx,%eax
    6fa2:	e8 49 fb ff ff       	call   6af0 <seq_node_subtransform>
    6fa7:	85 c0                	test   %eax,%eax
    6fa9:	0f 84 09 ff ff ff    	je     6eb8 <do_while_node_for_each+0x18>
    6faf:	83 c4 3c             	add    $0x3c,%esp
    6fb2:	5b                   	pop    %ebx
    6fb3:	5e                   	pop    %esi
    6fb4:	5f                   	pop    %edi
    6fb5:	5d                   	pop    %ebp
    6fb6:	c3                   	ret    
    6fb7:	90                   	nop
    6fb8:	8b 55 d8             	mov    -0x28(%ebp),%edx
    6fbb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    6fbe:	89 14 24             	mov    %edx,(%esp)
    6fc1:	e8 fa 32 00 00       	call   a2c0 <bithenge_node_dec_ref>
    6fc6:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    6fc9:	83 c4 3c             	add    $0x3c,%esp
    6fcc:	5b                   	pop    %ebx
    6fcd:	5e                   	pop    %esi
    6fce:	5f                   	pop    %edi
    6fcf:	5d                   	pop    %ebp
    6fd0:	c3                   	ret    
    6fd1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    6fd8:	89 14 24             	mov    %edx,(%esp)
    6fdb:	e8 e0 32 00 00       	call   a2c0 <bithenge_node_dec_ref>
    6fe0:	83 c4 3c             	add    $0x3c,%esp
    6fe3:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    6fe8:	5b                   	pop    %ebx
    6fe9:	5e                   	pop    %esi
    6fea:	5f                   	pop    %edi
    6feb:	5d                   	pop    %ebp
    6fec:	c3                   	ret    
    6fed:	8d 76 00             	lea    0x0(%esi),%esi
    6ff0:	89 73 38             	mov    %esi,0x38(%ebx)
    6ff3:	89 7b 3c             	mov    %edi,0x3c(%ebx)
    6ff6:	89 73 28             	mov    %esi,0x28(%ebx)
    6ff9:	89 7b 2c             	mov    %edi,0x2c(%ebx)
    6ffc:	83 c4 3c             	add    $0x3c,%esp
    6fff:	5b                   	pop    %ebx
    7000:	5e                   	pop    %esi
    7001:	5f                   	pop    %edi
    7002:	5d                   	pop    %ebp
    7003:	c3                   	ret    
    7004:	c7 44 24 08 5b 00 00 	movl   $0x5b,0x8(%esp)
    700b:	00 
    700c:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    7013:	00 
    7014:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    701b:	e8 90 38 02 00       	call   2a8b0 <assert_abort>
    7020:	c7 44 24 08 5a 00 00 	movl   $0x5a,0x8(%esp)
    7027:	00 
    7028:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    702f:	00 
    7030:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    7037:	e8 74 38 02 00       	call   2a8b0 <assert_abort>
    703c:	e8 97 08 00 00       	call   78d8 <bithenge_node_inc_ref.part.6>
    7041:	eb 0d                	jmp    7050 <repeat_node_get>
    7043:	90                   	nop
    7044:	90                   	nop
    7045:	90                   	nop
    7046:	90                   	nop
    7047:	90                   	nop
    7048:	90                   	nop
    7049:	90                   	nop
    704a:	90                   	nop
    704b:	90                   	nop
    704c:	90                   	nop
    704d:	90                   	nop
    704e:	90                   	nop
    704f:	90                   	nop

00007050 <repeat_node_get>:
    7050:	55                   	push   %ebp
    7051:	89 e5                	mov    %esp,%ebp
    7053:	57                   	push   %edi
    7054:	56                   	push   %esi
    7055:	53                   	push   %ebx
    7056:	83 ec 2c             	sub    $0x2c,%esp
    7059:	8b 45 0c             	mov    0xc(%ebp),%eax
    705c:	8b 55 10             	mov    0x10(%ebp),%edx
    705f:	8b 5d 08             	mov    0x8(%ebp),%ebx
    7062:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    7065:	83 38 03             	cmpl   $0x3,(%eax)
    7068:	75 56                	jne    70c0 <repeat_node_get+0x70>
    706a:	8b 70 0c             	mov    0xc(%eax),%esi
    706d:	8b 78 08             	mov    0x8(%eax),%edi
    7070:	89 04 24             	mov    %eax,(%esp)
    7073:	e8 48 32 00 00       	call   a2c0 <bithenge_node_dec_ref>
    7078:	85 f6                	test   %esi,%esi
    707a:	78 1c                	js     7098 <repeat_node_get+0x48>
    707c:	8b 4b 34             	mov    0x34(%ebx),%ecx
    707f:	8b 43 38             	mov    0x38(%ebx),%eax
    7082:	89 ca                	mov    %ecx,%edx
    7084:	21 c2                	and    %eax,%edx
    7086:	42                   	inc    %edx
    7087:	74 1f                	je     70a8 <repeat_node_get+0x58>
    7089:	39 f0                	cmp    %esi,%eax
    708b:	7c 0b                	jl     7098 <repeat_node_get+0x48>
    708d:	7f 19                	jg     70a8 <repeat_node_get+0x58>
    708f:	39 f9                	cmp    %edi,%ecx
    7091:	77 15                	ja     70a8 <repeat_node_get+0x58>
    7093:	90                   	nop
    7094:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7098:	83 c4 2c             	add    $0x2c,%esp
    709b:	83 c8 ff             	or     $0xffffffff,%eax
    709e:	5b                   	pop    %ebx
    709f:	5e                   	pop    %esi
    70a0:	5f                   	pop    %edi
    70a1:	5d                   	pop    %ebp
    70a2:	c3                   	ret    
    70a3:	90                   	nop
    70a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    70a8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    70ab:	83 c4 2c             	add    $0x2c,%esp
    70ae:	89 f9                	mov    %edi,%ecx
    70b0:	89 d8                	mov    %ebx,%eax
    70b2:	5b                   	pop    %ebx
    70b3:	5e                   	pop    %esi
    70b4:	5f                   	pop    %edi
    70b5:	5d                   	pop    %ebp
    70b6:	e9 35 fa ff ff       	jmp    6af0 <seq_node_subtransform>
    70bb:	90                   	nop
    70bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    70c0:	89 04 24             	mov    %eax,(%esp)
    70c3:	e8 f8 31 00 00       	call   a2c0 <bithenge_node_dec_ref>
    70c8:	eb ce                	jmp    7098 <repeat_node_get+0x48>
    70ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000070d0 <struct_node_get>:
    70d0:	55                   	push   %ebp
    70d1:	89 e5                	mov    %esp,%ebp
    70d3:	57                   	push   %edi
    70d4:	56                   	push   %esi
    70d5:	53                   	push   %ebx
    70d6:	83 ec 3c             	sub    $0x3c,%esp
    70d9:	8b 45 0c             	mov    0xc(%ebp),%eax
    70dc:	83 38 04             	cmpl   $0x4,(%eax)
    70df:	0f 85 f3 00 00 00    	jne    71d8 <struct_node_get+0x108>
    70e5:	8b 50 08             	mov    0x8(%eax),%edx
    70e8:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    70eb:	8b 55 08             	mov    0x8(%ebp),%edx
    70ee:	8b 42 30             	mov    0x30(%edx),%eax
    70f1:	8b 58 0c             	mov    0xc(%eax),%ebx
    70f4:	8b 4b 04             	mov    0x4(%ebx),%ecx
    70f7:	85 c9                	test   %ecx,%ecx
    70f9:	0f 84 d9 00 00 00    	je     71d8 <struct_node_get+0x108>
    70ff:	8d 73 08             	lea    0x8(%ebx),%esi
    7102:	bf 01 00 00 00       	mov    $0x1,%edi
    7107:	89 f2                	mov    %esi,%edx
    7109:	31 c9                	xor    %ecx,%ecx
    710b:	89 d8                	mov    %ebx,%eax
    710d:	89 5d d0             	mov    %ebx,-0x30(%ebp)
    7110:	89 75 cc             	mov    %esi,-0x34(%ebp)
    7113:	89 cb                	mov    %ecx,%ebx
    7115:	89 fe                	mov    %edi,%esi
    7117:	89 d7                	mov    %edx,%edi
    7119:	eb 07                	jmp    7122 <struct_node_get+0x52>
    711b:	90                   	nop
    711c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7120:	89 ce                	mov    %ecx,%esi
    7122:	8b 00                	mov    (%eax),%eax
    7124:	85 c0                	test   %eax,%eax
    7126:	74 17                	je     713f <struct_node_get+0x6f>
    7128:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    712b:	89 44 24 04          	mov    %eax,0x4(%esp)
    712f:	89 14 24             	mov    %edx,(%esp)
    7132:	e8 e9 d3 00 00       	call   14520 <str_cmp>
    7137:	85 c0                	test   %eax,%eax
    7139:	0f 84 b9 00 00 00    	je     71f8 <struct_node_get+0x128>
    713f:	89 f8                	mov    %edi,%eax
    7141:	8d 4e 01             	lea    0x1(%esi),%ecx
    7144:	83 c7 08             	add    $0x8,%edi
    7147:	89 f3                	mov    %esi,%ebx
    7149:	8b 50 04             	mov    0x4(%eax),%edx
    714c:	85 d2                	test   %edx,%edx
    714e:	75 d0                	jne    7120 <struct_node_get+0x50>
    7150:	8b 5d d0             	mov    -0x30(%ebp),%ebx
    7153:	8b 75 cc             	mov    -0x34(%ebp),%esi
    7156:	8b 43 04             	mov    0x4(%ebx),%eax
    7159:	85 c0                	test   %eax,%eax
    715b:	74 7b                	je     71d8 <struct_node_get+0x108>
    715d:	89 d8                	mov    %ebx,%eax
    715f:	bf 01 00 00 00       	mov    $0x1,%edi
    7164:	31 c9                	xor    %ecx,%ecx
    7166:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    7169:	eb 18                	jmp    7183 <struct_node_get+0xb3>
    716b:	90                   	nop
    716c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7170:	89 f0                	mov    %esi,%eax
    7172:	8d 57 01             	lea    0x1(%edi),%edx
    7175:	89 f9                	mov    %edi,%ecx
    7177:	83 c6 08             	add    $0x8,%esi
    717a:	8b 78 04             	mov    0x4(%eax),%edi
    717d:	85 ff                	test   %edi,%edi
    717f:	74 57                	je     71d8 <struct_node_get+0x108>
    7181:	89 d7                	mov    %edx,%edi
    7183:	8b 00                	mov    (%eax),%eax
    7185:	85 c0                	test   %eax,%eax
    7187:	75 e7                	jne    7170 <struct_node_get+0xa0>
    7189:	8d 55 e4             	lea    -0x1c(%ebp),%edx
    718c:	8b 45 08             	mov    0x8(%ebp),%eax
    718f:	e8 5c f9 ff ff       	call   6af0 <seq_node_subtransform>
    7194:	85 c0                	test   %eax,%eax
    7196:	75 43                	jne    71db <struct_node_get+0x10b>
    7198:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    719b:	83 38 01             	cmpl   $0x1,(%eax)
    719e:	75 67                	jne    7207 <struct_node_get+0x137>
    71a0:	8b 53 04             	mov    0x4(%ebx),%edx
    71a3:	42                   	inc    %edx
    71a4:	89 53 04             	mov    %edx,0x4(%ebx)
    71a7:	8b 55 10             	mov    0x10(%ebp),%edx
    71aa:	89 54 24 08          	mov    %edx,0x8(%esp)
    71ae:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    71b2:	89 04 24             	mov    %eax,(%esp)
    71b5:	e8 b6 31 00 00       	call   a370 <bithenge_node_get>
    71ba:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    71bd:	89 14 24             	mov    %edx,(%esp)
    71c0:	89 45 c8             	mov    %eax,-0x38(%ebp)
    71c3:	e8 f8 30 00 00       	call   a2c0 <bithenge_node_dec_ref>
    71c8:	8b 45 c8             	mov    -0x38(%ebp),%eax
    71cb:	83 f8 ff             	cmp    $0xffffffff,%eax
    71ce:	74 a0                	je     7170 <struct_node_get+0xa0>
    71d0:	eb 09                	jmp    71db <struct_node_get+0x10b>
    71d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    71d8:	83 c8 ff             	or     $0xffffffff,%eax
    71db:	8b 55 0c             	mov    0xc(%ebp),%edx
    71de:	89 45 c8             	mov    %eax,-0x38(%ebp)
    71e1:	89 14 24             	mov    %edx,(%esp)
    71e4:	e8 d7 30 00 00       	call   a2c0 <bithenge_node_dec_ref>
    71e9:	8b 45 c8             	mov    -0x38(%ebp),%eax
    71ec:	83 c4 3c             	add    $0x3c,%esp
    71ef:	5b                   	pop    %ebx
    71f0:	5e                   	pop    %esi
    71f1:	5f                   	pop    %edi
    71f2:	5d                   	pop    %ebp
    71f3:	c3                   	ret    
    71f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    71f8:	89 d9                	mov    %ebx,%ecx
    71fa:	8b 55 10             	mov    0x10(%ebp),%edx
    71fd:	8b 45 08             	mov    0x8(%ebp),%eax
    7200:	e8 eb f8 ff ff       	call   6af0 <seq_node_subtransform>
    7205:	eb d4                	jmp    71db <struct_node_get+0x10b>
    7207:	89 04 24             	mov    %eax,(%esp)
    720a:	e8 b1 30 00 00       	call   a2c0 <bithenge_node_dec_ref>
    720f:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    7214:	eb c5                	jmp    71db <struct_node_get+0x10b>
    7216:	8d 76 00             	lea    0x0(%esi),%esi
    7219:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007220 <struct_node_for_each>:
    7220:	55                   	push   %ebp
    7221:	89 e5                	mov    %esp,%ebp
    7223:	57                   	push   %edi
    7224:	56                   	push   %esi
    7225:	53                   	push   %ebx
    7226:	83 ec 4c             	sub    $0x4c,%esp
    7229:	8b 55 08             	mov    0x8(%ebp),%edx
    722c:	8b 42 30             	mov    0x30(%edx),%eax
    722f:	8b 58 0c             	mov    0xc(%eax),%ebx
    7232:	8b 43 04             	mov    0x4(%ebx),%eax
    7235:	85 c0                	test   %eax,%eax
    7237:	0f 84 d3 00 00 00    	je     7310 <struct_node_for_each+0xf0>
    723d:	8d 73 08             	lea    0x8(%ebx),%esi
    7240:	bf 01 00 00 00       	mov    $0x1,%edi
    7245:	31 c9                	xor    %ecx,%ecx
    7247:	eb 4a                	jmp    7293 <struct_node_for_each+0x73>
    7249:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7250:	8d 4d d4             	lea    -0x2c(%ebp),%ecx
    7253:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    725a:	00 
    725b:	89 44 24 04          	mov    %eax,0x4(%esp)
    725f:	89 0c 24             	mov    %ecx,(%esp)
    7262:	e8 89 37 00 00       	call   a9f0 <bithenge_new_string_node>
    7267:	85 c0                	test   %eax,%eax
    7269:	74 5d                	je     72c8 <struct_node_for_each+0xa8>
    726b:	8b 55 d0             	mov    -0x30(%ebp),%edx
    726e:	89 14 24             	mov    %edx,(%esp)
    7271:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    7274:	e8 47 30 00 00       	call   a2c0 <bithenge_node_dec_ref>
    7279:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    727c:	85 c0                	test   %eax,%eax
    727e:	75 3d                	jne    72bd <struct_node_for_each+0x9d>
    7280:	89 f3                	mov    %esi,%ebx
    7282:	8d 47 01             	lea    0x1(%edi),%eax
    7285:	89 f9                	mov    %edi,%ecx
    7287:	83 c6 08             	add    $0x8,%esi
    728a:	8b 7b 04             	mov    0x4(%ebx),%edi
    728d:	85 ff                	test   %edi,%edi
    728f:	74 7f                	je     7310 <struct_node_for_each+0xf0>
    7291:	89 c7                	mov    %eax,%edi
    7293:	8d 55 d0             	lea    -0x30(%ebp),%edx
    7296:	8b 45 08             	mov    0x8(%ebp),%eax
    7299:	e8 52 f8 ff ff       	call   6af0 <seq_node_subtransform>
    729e:	85 c0                	test   %eax,%eax
    72a0:	75 1b                	jne    72bd <struct_node_for_each+0x9d>
    72a2:	8b 03                	mov    (%ebx),%eax
    72a4:	85 c0                	test   %eax,%eax
    72a6:	75 a8                	jne    7250 <struct_node_for_each+0x30>
    72a8:	8b 45 d0             	mov    -0x30(%ebp),%eax
    72ab:	83 38 01             	cmpl   $0x1,(%eax)
    72ae:	74 40                	je     72f0 <struct_node_for_each+0xd0>
    72b0:	89 04 24             	mov    %eax,(%esp)
    72b3:	e8 08 30 00 00       	call   a2c0 <bithenge_node_dec_ref>
    72b8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    72bd:	83 c4 4c             	add    $0x4c,%esp
    72c0:	5b                   	pop    %ebx
    72c1:	5e                   	pop    %esi
    72c2:	5f                   	pop    %edi
    72c3:	5d                   	pop    %ebp
    72c4:	c3                   	ret    
    72c5:	8d 76 00             	lea    0x0(%esi),%esi
    72c8:	8b 45 10             	mov    0x10(%ebp),%eax
    72cb:	8b 55 0c             	mov    0xc(%ebp),%edx
    72ce:	89 44 24 08          	mov    %eax,0x8(%esp)
    72d2:	8b 45 d0             	mov    -0x30(%ebp),%eax
    72d5:	89 44 24 04          	mov    %eax,0x4(%esp)
    72d9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    72dc:	89 04 24             	mov    %eax,(%esp)
    72df:	ff d2                	call   *%edx
    72e1:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    72e8:	31 d2                	xor    %edx,%edx
    72ea:	eb 82                	jmp    726e <struct_node_for_each+0x4e>
    72ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    72f0:	8b 4d 10             	mov    0x10(%ebp),%ecx
    72f3:	8b 50 08             	mov    0x8(%eax),%edx
    72f6:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    72fa:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    72fd:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    7301:	89 04 24             	mov    %eax,(%esp)
    7304:	ff 12                	call   *(%edx)
    7306:	e9 60 ff ff ff       	jmp    726b <struct_node_for_each+0x4b>
    730b:	90                   	nop
    730c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7310:	8b 45 08             	mov    0x8(%ebp),%eax
    7313:	80 78 34 00          	cmpb   $0x0,0x34(%eax)
    7317:	74 0a                	je     7323 <struct_node_for_each+0x103>
    7319:	31 c0                	xor    %eax,%eax
    731b:	83 c4 4c             	add    $0x4c,%esp
    731e:	5b                   	pop    %ebx
    731f:	5e                   	pop    %esi
    7320:	5f                   	pop    %edi
    7321:	5d                   	pop    %ebp
    7322:	c3                   	ret    
    7323:	8b 40 14             	mov    0x14(%eax),%eax
    7326:	85 c0                	test   %eax,%eax
    7328:	74 73                	je     739d <struct_node_for_each+0x17d>
    732a:	8b 50 08             	mov    0x8(%eax),%edx
    732d:	85 d2                	test   %edx,%edx
    732f:	74 50                	je     7381 <struct_node_for_each+0x161>
    7331:	8d 4d d8             	lea    -0x28(%ebp),%ecx
    7334:	89 04 24             	mov    %eax,(%esp)
    7337:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    733b:	ff 12                	call   *(%edx)
    733d:	85 c0                	test   %eax,%eax
    733f:	0f 85 78 ff ff ff    	jne    72bd <struct_node_for_each+0x9d>
    7345:	8b 45 08             	mov    0x8(%ebp),%eax
    7348:	8b 48 28             	mov    0x28(%eax),%ecx
    734b:	85 c9                	test   %ecx,%ecx
    734d:	74 2c                	je     737b <struct_node_for_each+0x15b>
    734f:	8d 55 e0             	lea    -0x20(%ebp),%edx
    7352:	e8 49 f1 ff ff       	call   64a0 <seq_node_field_offset.part.19>
    7357:	85 c0                	test   %eax,%eax
    7359:	0f 85 5e ff ff ff    	jne    72bd <struct_node_for_each+0x9d>
    735f:	8b 45 e0             	mov    -0x20(%ebp),%eax
    7362:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    7365:	8b 5d dc             	mov    -0x24(%ebp),%ebx
    7368:	8b 75 d8             	mov    -0x28(%ebp),%esi
    736b:	31 da                	xor    %ebx,%edx
    736d:	31 f0                	xor    %esi,%eax
    736f:	09 c2                	or     %eax,%edx
    7371:	0f 85 41 ff ff ff    	jne    72b8 <struct_node_for_each+0x98>
    7377:	31 c0                	xor    %eax,%eax
    7379:	eb a0                	jmp    731b <struct_node_for_each+0xfb>
    737b:	31 c0                	xor    %eax,%eax
    737d:	31 d2                	xor    %edx,%edx
    737f:	eb e4                	jmp    7365 <struct_node_for_each+0x145>
    7381:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    7388:	00 
    7389:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    7390:	00 
    7391:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    7398:	e8 13 35 02 00       	call   2a8b0 <assert_abort>
    739d:	e8 f2 04 00 00       	call   7894 <bithenge_blob_size.part.3>
    73a2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    73a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000073b0 <repeat_node_for_each>:
    73b0:	55                   	push   %ebp
    73b1:	89 e5                	mov    %esp,%ebp
    73b3:	57                   	push   %edi
    73b4:	56                   	push   %esi
    73b5:	53                   	push   %ebx
    73b6:	83 ec 4c             	sub    $0x4c,%esp
    73b9:	31 f6                	xor    %esi,%esi
    73bb:	8b 5d 08             	mov    0x8(%ebp),%ebx
    73be:	31 ff                	xor    %edi,%edi
    73c0:	8b 53 34             	mov    0x34(%ebx),%edx
    73c3:	8b 43 38             	mov    0x38(%ebx),%eax
    73c6:	89 d1                	mov    %edx,%ecx
    73c8:	21 c1                	and    %eax,%ecx
    73ca:	41                   	inc    %ecx
    73cb:	74 23                	je     73f0 <repeat_node_for_each+0x40>
    73cd:	39 c7                	cmp    %eax,%edi
    73cf:	7c 1f                	jl     73f0 <repeat_node_for_each+0x40>
    73d1:	7e 15                	jle    73e8 <repeat_node_for_each+0x38>
    73d3:	80 7b 30 00          	cmpb   $0x0,0x30(%ebx)
    73d7:	0f 84 94 00 00 00    	je     7471 <repeat_node_for_each+0xc1>
    73dd:	31 c0                	xor    %eax,%eax
    73df:	83 c4 4c             	add    $0x4c,%esp
    73e2:	5b                   	pop    %ebx
    73e3:	5e                   	pop    %esi
    73e4:	5f                   	pop    %edi
    73e5:	5d                   	pop    %ebp
    73e6:	c3                   	ret    
    73e7:	90                   	nop
    73e8:	39 d6                	cmp    %edx,%esi
    73ea:	73 e7                	jae    73d3 <repeat_node_for_each+0x23>
    73ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    73f0:	89 f1                	mov    %esi,%ecx
    73f2:	8d 55 d0             	lea    -0x30(%ebp),%edx
    73f5:	89 d8                	mov    %ebx,%eax
    73f7:	e8 f4 f6 ff ff       	call   6af0 <seq_node_subtransform>
    73fc:	83 f8 ff             	cmp    $0xffffffff,%eax
    73ff:	74 05                	je     7406 <repeat_node_for_each+0x56>
    7401:	83 f8 f2             	cmp    $0xfffffff2,%eax
    7404:	75 0f                	jne    7415 <repeat_node_for_each+0x65>
    7406:	8b 53 34             	mov    0x34(%ebx),%edx
    7409:	8b 4b 38             	mov    0x38(%ebx),%ecx
    740c:	21 ca                	and    %ecx,%edx
    740e:	42                   	inc    %edx
    740f:	0f 84 c3 00 00 00    	je     74d8 <repeat_node_for_each+0x128>
    7415:	85 c0                	test   %eax,%eax
    7417:	75 c6                	jne    73df <repeat_node_for_each+0x2f>
    7419:	8d 45 d4             	lea    -0x2c(%ebp),%eax
    741c:	89 74 24 04          	mov    %esi,0x4(%esp)
    7420:	89 7c 24 08          	mov    %edi,0x8(%esp)
    7424:	89 04 24             	mov    %eax,(%esp)
    7427:	e8 54 35 00 00       	call   a980 <bithenge_new_integer_node>
    742c:	85 c0                	test   %eax,%eax
    742e:	75 28                	jne    7458 <repeat_node_for_each+0xa8>
    7430:	8b 45 d0             	mov    -0x30(%ebp),%eax
    7433:	8b 55 10             	mov    0x10(%ebp),%edx
    7436:	89 44 24 04          	mov    %eax,0x4(%esp)
    743a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    743d:	89 54 24 08          	mov    %edx,0x8(%esp)
    7441:	89 04 24             	mov    %eax,(%esp)
    7444:	8b 55 0c             	mov    0xc(%ebp),%edx
    7447:	ff d2                	call   *%edx
    7449:	85 c0                	test   %eax,%eax
    744b:	75 92                	jne    73df <repeat_node_for_each+0x2f>
    744d:	83 c6 01             	add    $0x1,%esi
    7450:	83 d7 00             	adc    $0x0,%edi
    7453:	e9 68 ff ff ff       	jmp    73c0 <repeat_node_for_each+0x10>
    7458:	8b 55 d0             	mov    -0x30(%ebp),%edx
    745b:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    745e:	89 14 24             	mov    %edx,(%esp)
    7461:	e8 5a 2e 00 00       	call   a2c0 <bithenge_node_dec_ref>
    7466:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    7469:	83 c4 4c             	add    $0x4c,%esp
    746c:	5b                   	pop    %ebx
    746d:	5e                   	pop    %esi
    746e:	5f                   	pop    %edi
    746f:	5d                   	pop    %ebp
    7470:	c3                   	ret    
    7471:	8b 43 14             	mov    0x14(%ebx),%eax
    7474:	85 c0                	test   %eax,%eax
    7476:	0f 84 8f 00 00 00    	je     750b <repeat_node_for_each+0x15b>
    747c:	8b 50 08             	mov    0x8(%eax),%edx
    747f:	85 d2                	test   %edx,%edx
    7481:	74 6c                	je     74ef <repeat_node_for_each+0x13f>
    7483:	8d 4d d8             	lea    -0x28(%ebp),%ecx
    7486:	89 04 24             	mov    %eax,(%esp)
    7489:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    748d:	ff 12                	call   *(%edx)
    748f:	85 c0                	test   %eax,%eax
    7491:	0f 85 48 ff ff ff    	jne    73df <repeat_node_for_each+0x2f>
    7497:	8b 4b 28             	mov    0x28(%ebx),%ecx
    749a:	85 c9                	test   %ecx,%ecx
    749c:	74 4b                	je     74e9 <repeat_node_for_each+0x139>
    749e:	8d 55 e0             	lea    -0x20(%ebp),%edx
    74a1:	89 d8                	mov    %ebx,%eax
    74a3:	e8 f8 ef ff ff       	call   64a0 <seq_node_field_offset.part.19>
    74a8:	85 c0                	test   %eax,%eax
    74aa:	0f 85 2f ff ff ff    	jne    73df <repeat_node_for_each+0x2f>
    74b0:	8b 45 e0             	mov    -0x20(%ebp),%eax
    74b3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    74b6:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    74b9:	8b 5d d8             	mov    -0x28(%ebp),%ebx
    74bc:	31 ca                	xor    %ecx,%edx
    74be:	31 d8                	xor    %ebx,%eax
    74c0:	09 c2                	or     %eax,%edx
    74c2:	0f 84 15 ff ff ff    	je     73dd <repeat_node_for_each+0x2d>
    74c8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    74cd:	e9 0d ff ff ff       	jmp    73df <repeat_node_for_each+0x2f>
    74d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    74d8:	89 73 34             	mov    %esi,0x34(%ebx)
    74db:	89 7b 38             	mov    %edi,0x38(%ebx)
    74de:	89 73 28             	mov    %esi,0x28(%ebx)
    74e1:	89 7b 2c             	mov    %edi,0x2c(%ebx)
    74e4:	e9 ea fe ff ff       	jmp    73d3 <repeat_node_for_each+0x23>
    74e9:	31 c0                	xor    %eax,%eax
    74eb:	31 d2                	xor    %edx,%edx
    74ed:	eb c7                	jmp    74b6 <repeat_node_for_each+0x106>
    74ef:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    74f6:	00 
    74f7:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    74fe:	00 
    74ff:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    7506:	e8 a5 33 02 00       	call   2a8b0 <assert_abort>
    750b:	e8 84 03 00 00       	call   7894 <bithenge_blob_size.part.3>

00007510 <bithenge_new_struct>:
    7510:	55                   	push   %ebp
    7511:	89 e5                	mov    %esp,%ebp
    7513:	57                   	push   %edi
    7514:	56                   	push   %esi
    7515:	53                   	push   %ebx
    7516:	83 ec 2c             	sub    $0x2c,%esp
    7519:	8b 75 0c             	mov    0xc(%ebp),%esi
    751c:	c7 04 24 14 00 00 00 	movl   $0x14,(%esp)
    7523:	e8 a8 8b 01 00       	call   200d0 <malloc>
    7528:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    752b:	85 c0                	test   %eax,%eax
    752d:	0f 84 d5 00 00 00    	je     7608 <bithenge_new_struct+0xf8>
    7533:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    753a:	00 
    753b:	c7 44 24 04 80 02 03 	movl   $0x30280,0x4(%esp)
    7542:	00 
    7543:	89 04 24             	mov    %eax,(%esp)
    7546:	e8 95 1f 00 00       	call   94e0 <bithenge_init_transform>
    754b:	89 45 e0             	mov    %eax,-0x20(%ebp)
    754e:	85 c0                	test   %eax,%eax
    7550:	74 6e                	je     75c0 <bithenge_new_struct+0xb0>
    7552:	8b 46 04             	mov    0x4(%esi),%eax
    7555:	8d 5e 08             	lea    0x8(%esi),%ebx
    7558:	89 f7                	mov    %esi,%edi
    755a:	85 c0                	test   %eax,%eax
    755c:	74 42                	je     75a0 <bithenge_new_struct+0x90>
    755e:	66 90                	xchg   %ax,%ax
    7560:	8b 07                	mov    (%edi),%eax
    7562:	89 04 24             	mov    %eax,(%esp)
    7565:	e8 76 8c 01 00       	call   201e0 <free>
    756a:	8b 47 04             	mov    0x4(%edi),%eax
    756d:	85 c0                	test   %eax,%eax
    756f:	74 23                	je     7594 <bithenge_new_struct+0x84>
    7571:	8b 08                	mov    (%eax),%ecx
    7573:	85 c9                	test   %ecx,%ecx
    7575:	0f 84 99 00 00 00    	je     7614 <bithenge_new_struct+0x104>
    757b:	8b 50 04             	mov    0x4(%eax),%edx
    757e:	85 d2                	test   %edx,%edx
    7580:	0f 84 93 00 00 00    	je     7619 <bithenge_new_struct+0x109>
    7586:	4a                   	dec    %edx
    7587:	89 50 04             	mov    %edx,0x4(%eax)
    758a:	85 d2                	test   %edx,%edx
    758c:	75 06                	jne    7594 <bithenge_new_struct+0x84>
    758e:	89 04 24             	mov    %eax,(%esp)
    7591:	ff 51 0c             	call   *0xc(%ecx)
    7594:	89 df                	mov    %ebx,%edi
    7596:	83 c3 08             	add    $0x8,%ebx
    7599:	8b 43 fc             	mov    -0x4(%ebx),%eax
    759c:	85 c0                	test   %eax,%eax
    759e:	75 c0                	jne    7560 <bithenge_new_struct+0x50>
    75a0:	89 34 24             	mov    %esi,(%esp)
    75a3:	e8 38 8c 01 00       	call   201e0 <free>
    75a8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    75ab:	89 04 24             	mov    %eax,(%esp)
    75ae:	e8 2d 8c 01 00       	call   201e0 <free>
    75b3:	8b 45 e0             	mov    -0x20(%ebp),%eax
    75b6:	83 c4 2c             	add    $0x2c,%esp
    75b9:	5b                   	pop    %ebx
    75ba:	5e                   	pop    %esi
    75bb:	5f                   	pop    %edi
    75bc:	5d                   	pop    %ebp
    75bd:	c3                   	ret    
    75be:	66 90                	xchg   %ax,%ax
    75c0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    75c3:	8b 5e 04             	mov    0x4(%esi),%ebx
    75c6:	ba 01 00 00 00       	mov    $0x1,%edx
    75cb:	85 db                	test   %ebx,%ebx
    75cd:	89 70 0c             	mov    %esi,0xc(%eax)
    75d0:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
    75d7:	75 09                	jne    75e2 <bithenge_new_struct+0xd2>
    75d9:	eb 18                	jmp    75f3 <bithenge_new_struct+0xe3>
    75db:	90                   	nop
    75dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    75e0:	89 c2                	mov    %eax,%edx
    75e2:	8d 42 01             	lea    0x1(%edx),%eax
    75e5:	8b 4c c6 fc          	mov    -0x4(%esi,%eax,8),%ecx
    75e9:	85 c9                	test   %ecx,%ecx
    75eb:	75 f3                	jne    75e0 <bithenge_new_struct+0xd0>
    75ed:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    75f0:	89 50 10             	mov    %edx,0x10(%eax)
    75f3:	8b 45 08             	mov    0x8(%ebp),%eax
    75f6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    75f9:	89 10                	mov    %edx,(%eax)
    75fb:	8b 45 e0             	mov    -0x20(%ebp),%eax
    75fe:	83 c4 2c             	add    $0x2c,%esp
    7601:	5b                   	pop    %ebx
    7602:	5e                   	pop    %esi
    7603:	5f                   	pop    %edi
    7604:	5d                   	pop    %ebp
    7605:	c3                   	ret    
    7606:	66 90                	xchg   %ax,%ax
    7608:	c7 45 e0 fe ff ff ff 	movl   $0xfffffffe,-0x20(%ebp)
    760f:	e9 3e ff ff ff       	jmp    7552 <bithenge_new_struct+0x42>
    7614:	e8 25 03 00 00       	call   793e <bithenge_transform_dec_ref.part.13>
    7619:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    7620:	00 
    7621:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    7628:	00 
    7629:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    7630:	e8 7b 32 02 00       	call   2a8b0 <assert_abort>
    7635:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7639:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007640 <bithenge_repeat_transform>:
    7640:	55                   	push   %ebp
    7641:	89 e5                	mov    %esp,%ebp
    7643:	57                   	push   %edi
    7644:	56                   	push   %esi
    7645:	53                   	push   %ebx
    7646:	83 ec 2c             	sub    $0x2c,%esp
    7649:	8b 7d 0c             	mov    0xc(%ebp),%edi
    764c:	8b 75 10             	mov    0x10(%ebp),%esi
    764f:	c7 04 24 14 00 00 00 	movl   $0x14,(%esp)
    7656:	e8 75 8a 01 00       	call   200d0 <malloc>
    765b:	89 c3                	mov    %eax,%ebx
    765d:	85 c0                	test   %eax,%eax
    765f:	0f 84 b3 00 00 00    	je     7718 <bithenge_repeat_transform+0xd8>
    7665:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    766c:	00 
    766d:	c7 44 24 04 b8 d0 02 	movl   $0x2d0b8,0x4(%esp)
    7674:	00 
    7675:	89 04 24             	mov    %eax,(%esp)
    7678:	e8 63 1e 00 00       	call   94e0 <bithenge_init_transform>
    767d:	85 c0                	test   %eax,%eax
    767f:	74 7f                	je     7700 <bithenge_repeat_transform+0xc0>
    7681:	89 1c 24             	mov    %ebx,(%esp)
    7684:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    7687:	e8 54 8b 01 00       	call   201e0 <free>
    768c:	85 f6                	test   %esi,%esi
    768e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    7691:	74 1d                	je     76b0 <bithenge_repeat_transform+0x70>
    7693:	8b 0e                	mov    (%esi),%ecx
    7695:	85 c9                	test   %ecx,%ecx
    7697:	0f 84 8a 00 00 00    	je     7727 <bithenge_repeat_transform+0xe7>
    769d:	8b 56 04             	mov    0x4(%esi),%edx
    76a0:	85 d2                	test   %edx,%edx
    76a2:	0f 84 84 00 00 00    	je     772c <bithenge_repeat_transform+0xec>
    76a8:	4a                   	dec    %edx
    76a9:	89 56 04             	mov    %edx,0x4(%esi)
    76ac:	85 d2                	test   %edx,%edx
    76ae:	74 28                	je     76d8 <bithenge_repeat_transform+0x98>
    76b0:	85 ff                	test   %edi,%edi
    76b2:	74 19                	je     76cd <bithenge_repeat_transform+0x8d>
    76b4:	8b 0f                	mov    (%edi),%ecx
    76b6:	85 c9                	test   %ecx,%ecx
    76b8:	74 68                	je     7722 <bithenge_repeat_transform+0xe2>
    76ba:	8b 57 04             	mov    0x4(%edi),%edx
    76bd:	85 d2                	test   %edx,%edx
    76bf:	0f 84 83 00 00 00    	je     7748 <bithenge_repeat_transform+0x108>
    76c5:	4a                   	dec    %edx
    76c6:	89 57 04             	mov    %edx,0x4(%edi)
    76c9:	85 d2                	test   %edx,%edx
    76cb:	74 1b                	je     76e8 <bithenge_repeat_transform+0xa8>
    76cd:	83 c4 2c             	add    $0x2c,%esp
    76d0:	5b                   	pop    %ebx
    76d1:	5e                   	pop    %esi
    76d2:	5f                   	pop    %edi
    76d3:	5d                   	pop    %ebp
    76d4:	c3                   	ret    
    76d5:	8d 76 00             	lea    0x0(%esi),%esi
    76d8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    76db:	89 34 24             	mov    %esi,(%esp)
    76de:	ff 51 04             	call   *0x4(%ecx)
    76e1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    76e4:	eb ca                	jmp    76b0 <bithenge_repeat_transform+0x70>
    76e6:	66 90                	xchg   %ax,%ax
    76e8:	89 3c 24             	mov    %edi,(%esp)
    76eb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    76ee:	ff 51 0c             	call   *0xc(%ecx)
    76f1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    76f4:	83 c4 2c             	add    $0x2c,%esp
    76f7:	5b                   	pop    %ebx
    76f8:	5e                   	pop    %esi
    76f9:	5f                   	pop    %edi
    76fa:	5d                   	pop    %ebp
    76fb:	c3                   	ret    
    76fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7700:	8b 55 08             	mov    0x8(%ebp),%edx
    7703:	89 73 0c             	mov    %esi,0xc(%ebx)
    7706:	89 7b 10             	mov    %edi,0x10(%ebx)
    7709:	89 1a                	mov    %ebx,(%edx)
    770b:	83 c4 2c             	add    $0x2c,%esp
    770e:	5b                   	pop    %ebx
    770f:	5e                   	pop    %esi
    7710:	5f                   	pop    %edi
    7711:	5d                   	pop    %ebp
    7712:	c3                   	ret    
    7713:	90                   	nop
    7714:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7718:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    771d:	e9 5f ff ff ff       	jmp    7681 <bithenge_repeat_transform+0x41>
    7722:	e8 17 02 00 00       	call   793e <bithenge_transform_dec_ref.part.13>
    7727:	e8 f0 01 00 00       	call   791c <bithenge_expression_dec_ref.part.12>
    772c:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    7733:	00 
    7734:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    773b:	00 
    773c:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    7743:	e8 68 31 02 00       	call   2a8b0 <assert_abort>
    7748:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    774f:	00 
    7750:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    7757:	00 
    7758:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    775f:	e8 4c 31 02 00       	call   2a8b0 <assert_abort>
    7764:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    776a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00007770 <bithenge_do_while_transform>:
    7770:	55                   	push   %ebp
    7771:	89 e5                	mov    %esp,%ebp
    7773:	57                   	push   %edi
    7774:	56                   	push   %esi
    7775:	53                   	push   %ebx
    7776:	83 ec 2c             	sub    $0x2c,%esp
    7779:	8b 7d 0c             	mov    0xc(%ebp),%edi
    777c:	8b 75 10             	mov    0x10(%ebp),%esi
    777f:	c7 04 24 14 00 00 00 	movl   $0x14,(%esp)
    7786:	e8 45 89 01 00       	call   200d0 <malloc>
    778b:	89 c3                	mov    %eax,%ebx
    778d:	85 c0                	test   %eax,%eax
    778f:	0f 84 b3 00 00 00    	je     7848 <bithenge_do_while_transform+0xd8>
    7795:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    779c:	00 
    779d:	c7 44 24 04 d8 d0 02 	movl   $0x2d0d8,0x4(%esp)
    77a4:	00 
    77a5:	89 04 24             	mov    %eax,(%esp)
    77a8:	e8 33 1d 00 00       	call   94e0 <bithenge_init_transform>
    77ad:	85 c0                	test   %eax,%eax
    77af:	74 7f                	je     7830 <bithenge_do_while_transform+0xc0>
    77b1:	89 1c 24             	mov    %ebx,(%esp)
    77b4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    77b7:	e8 24 8a 01 00       	call   201e0 <free>
    77bc:	85 f6                	test   %esi,%esi
    77be:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    77c1:	74 1d                	je     77e0 <bithenge_do_while_transform+0x70>
    77c3:	8b 0e                	mov    (%esi),%ecx
    77c5:	85 c9                	test   %ecx,%ecx
    77c7:	0f 84 8a 00 00 00    	je     7857 <bithenge_do_while_transform+0xe7>
    77cd:	8b 56 04             	mov    0x4(%esi),%edx
    77d0:	85 d2                	test   %edx,%edx
    77d2:	0f 84 84 00 00 00    	je     785c <bithenge_do_while_transform+0xec>
    77d8:	4a                   	dec    %edx
    77d9:	89 56 04             	mov    %edx,0x4(%esi)
    77dc:	85 d2                	test   %edx,%edx
    77de:	74 28                	je     7808 <bithenge_do_while_transform+0x98>
    77e0:	85 ff                	test   %edi,%edi
    77e2:	74 19                	je     77fd <bithenge_do_while_transform+0x8d>
    77e4:	8b 0f                	mov    (%edi),%ecx
    77e6:	85 c9                	test   %ecx,%ecx
    77e8:	74 68                	je     7852 <bithenge_do_while_transform+0xe2>
    77ea:	8b 57 04             	mov    0x4(%edi),%edx
    77ed:	85 d2                	test   %edx,%edx
    77ef:	0f 84 83 00 00 00    	je     7878 <bithenge_do_while_transform+0x108>
    77f5:	4a                   	dec    %edx
    77f6:	89 57 04             	mov    %edx,0x4(%edi)
    77f9:	85 d2                	test   %edx,%edx
    77fb:	74 1b                	je     7818 <bithenge_do_while_transform+0xa8>
    77fd:	83 c4 2c             	add    $0x2c,%esp
    7800:	5b                   	pop    %ebx
    7801:	5e                   	pop    %esi
    7802:	5f                   	pop    %edi
    7803:	5d                   	pop    %ebp
    7804:	c3                   	ret    
    7805:	8d 76 00             	lea    0x0(%esi),%esi
    7808:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    780b:	89 34 24             	mov    %esi,(%esp)
    780e:	ff 51 04             	call   *0x4(%ecx)
    7811:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    7814:	eb ca                	jmp    77e0 <bithenge_do_while_transform+0x70>
    7816:	66 90                	xchg   %ax,%ax
    7818:	89 3c 24             	mov    %edi,(%esp)
    781b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    781e:	ff 51 0c             	call   *0xc(%ecx)
    7821:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    7824:	83 c4 2c             	add    $0x2c,%esp
    7827:	5b                   	pop    %ebx
    7828:	5e                   	pop    %esi
    7829:	5f                   	pop    %edi
    782a:	5d                   	pop    %ebp
    782b:	c3                   	ret    
    782c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7830:	8b 55 08             	mov    0x8(%ebp),%edx
    7833:	89 73 0c             	mov    %esi,0xc(%ebx)
    7836:	89 7b 10             	mov    %edi,0x10(%ebx)
    7839:	89 1a                	mov    %ebx,(%edx)
    783b:	83 c4 2c             	add    $0x2c,%esp
    783e:	5b                   	pop    %ebx
    783f:	5e                   	pop    %esi
    7840:	5f                   	pop    %edi
    7841:	5d                   	pop    %ebp
    7842:	c3                   	ret    
    7843:	90                   	nop
    7844:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7848:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    784d:	e9 5f ff ff ff       	jmp    77b1 <bithenge_do_while_transform+0x41>
    7852:	e8 e7 00 00 00       	call   793e <bithenge_transform_dec_ref.part.13>
    7857:	e8 c0 00 00 00       	call   791c <bithenge_expression_dec_ref.part.12>
    785c:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    7863:	00 
    7864:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    786b:	00 
    786c:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    7873:	e8 38 30 02 00       	call   2a8b0 <assert_abort>
    7878:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    787f:	00 
    7880:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    7887:	00 
    7888:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    788f:	e8 1c 30 02 00       	call   2a8b0 <assert_abort>

00007894 <bithenge_blob_size.part.3>:
    7894:	55                   	push   %ebp
    7895:	89 e5                	mov    %esp,%ebp
    7897:	83 ec 18             	sub    $0x18,%esp
    789a:	c7 44 24 08 7f 00 00 	movl   $0x7f,0x8(%esp)
    78a1:	00 
    78a2:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    78a9:	00 
    78aa:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    78b1:	e8 fa 2f 02 00       	call   2a8b0 <assert_abort>

000078b6 <bithenge_node_as_blob.part.5>:
    78b6:	55                   	push   %ebp
    78b7:	89 e5                	mov    %esp,%ebp
    78b9:	83 ec 18             	sub    $0x18,%esp
    78bc:	c7 44 24 08 d9 00 00 	movl   $0xd9,0x8(%esp)
    78c3:	00 
    78c4:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    78cb:	00 
    78cc:	c7 04 24 dc cd 02 00 	movl   $0x2cddc,(%esp)
    78d3:	e8 d8 2f 02 00       	call   2a8b0 <assert_abort>

000078d8 <bithenge_node_inc_ref.part.6>:
    78d8:	55                   	push   %ebp
    78d9:	89 e5                	mov    %esp,%ebp
    78db:	83 ec 18             	sub    $0x18,%esp
    78de:	c7 44 24 08 70 00 00 	movl   $0x70,0x8(%esp)
    78e5:	00 
    78e6:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    78ed:	00 
    78ee:	c7 04 24 a0 d0 02 00 	movl   $0x2d0a0,(%esp)
    78f5:	e8 b6 2f 02 00       	call   2a8b0 <assert_abort>

000078fa <bithenge_transform_inc_ref.part.9>:
    78fa:	55                   	push   %ebp
    78fb:	89 e5                	mov    %esp,%ebp
    78fd:	83 ec 18             	sub    $0x18,%esp
    7900:	c7 44 24 08 6a 00 00 	movl   $0x6a,0x8(%esp)
    7907:	00 
    7908:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    790f:	00 
    7910:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    7917:	e8 94 2f 02 00       	call   2a8b0 <assert_abort>

0000791c <bithenge_expression_dec_ref.part.12>:
    791c:	55                   	push   %ebp
    791d:	89 e5                	mov    %esp,%ebp
    791f:	83 ec 18             	sub    $0x18,%esp
    7922:	c7 44 24 08 4b 00 00 	movl   $0x4b,0x8(%esp)
    7929:	00 
    792a:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    7931:	00 
    7932:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    7939:	e8 72 2f 02 00       	call   2a8b0 <assert_abort>

0000793e <bithenge_transform_dec_ref.part.13>:
    793e:	55                   	push   %ebp
    793f:	89 e5                	mov    %esp,%ebp
    7941:	83 ec 18             	sub    $0x18,%esp
    7944:	c7 44 24 08 74 00 00 	movl   $0x74,0x8(%esp)
    794b:	00 
    794c:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    7953:	00 
    7954:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    795b:	e8 50 2f 02 00       	call   2a8b0 <assert_abort>

00007960 <bithenge_node_from_source>:
    7960:	55                   	push   %ebp
    7961:	89 e5                	mov    %esp,%ebp
    7963:	57                   	push   %edi
    7964:	56                   	push   %esi
    7965:	53                   	push   %ebx
    7966:	83 ec 3c             	sub    $0x3c,%esp
    7969:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    796c:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)
    7973:	00 
    7974:	89 1c 24             	mov    %ebx,(%esp)
    7977:	e8 14 e0 00 00       	call   15990 <str_chr>
    797c:	85 c0                	test   %eax,%eax
    797e:	0f 84 a4 01 00 00    	je     7b28 <bithenge_node_from_source+0x1c8>
    7984:	c7 44 24 08 05 00 00 	movl   $0x5,0x8(%esp)
    798b:	00 
    798c:	c7 44 24 04 f8 d0 02 	movl   $0x2d0f8,0x4(%esp)
    7993:	00 
    7994:	89 1c 24             	mov    %ebx,(%esp)
    7997:	e8 b4 cd 00 00       	call   14750 <str_lcmp>
    799c:	85 c0                	test   %eax,%eax
    799e:	0f 84 3c 01 00 00    	je     7ae0 <bithenge_node_from_source+0x180>
    79a4:	c7 44 24 08 06 00 00 	movl   $0x6,0x8(%esp)
    79ab:	00 
    79ac:	c7 44 24 04 fe d0 02 	movl   $0x2d0fe,0x4(%esp)
    79b3:	00 
    79b4:	89 1c 24             	mov    %ebx,(%esp)
    79b7:	e8 94 cd 00 00       	call   14750 <str_lcmp>
    79bc:	85 c0                	test   %eax,%eax
    79be:	0f 84 cc 00 00 00    	je     7a90 <bithenge_node_from_source+0x130>
    79c4:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)
    79cb:	00 
    79cc:	c7 44 24 04 05 d1 02 	movl   $0x2d105,0x4(%esp)
    79d3:	00 
    79d4:	89 1c 24             	mov    %ebx,(%esp)
    79d7:	e8 74 cd 00 00       	call   14750 <str_lcmp>
    79dc:	85 c0                	test   %eax,%eax
    79de:	0f 85 84 01 00 00    	jne    7b68 <bithenge_node_from_source+0x208>
    79e4:	8d 43 04             	lea    0x4(%ebx),%eax
    79e7:	89 04 24             	mov    %eax,(%esp)
    79ea:	e8 e1 c7 00 00       	call   141d0 <str_length>
    79ef:	a8 01                	test   $0x1,%al
    79f1:	0f 85 71 01 00 00    	jne    7b68 <bithenge_node_from_source+0x208>
    79f7:	d1 e8                	shr    %eax
    79f9:	89 04 24             	mov    %eax,(%esp)
    79fc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    79ff:	e8 cc 86 01 00       	call   200d0 <malloc>
    7a04:	85 c0                	test   %eax,%eax
    7a06:	0f 84 66 01 00 00    	je     7b72 <bithenge_node_from_source+0x212>
    7a0c:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    7a0f:	31 d2                	xor    %edx,%edx
    7a11:	85 c9                	test   %ecx,%ecx
    7a13:	0f 84 27 01 00 00    	je     7b40 <bithenge_node_from_source+0x1e0>
    7a19:	89 45 d0             	mov    %eax,-0x30(%ebp)
    7a1c:	eb 23                	jmp    7a41 <bithenge_node_from_source+0xe1>
    7a1e:	66 90                	xchg   %ax,%ax
    7a20:	83 e9 30             	sub    $0x30,%ecx
    7a23:	83 fe ff             	cmp    $0xffffffff,%esi
    7a26:	0f 84 95 00 00 00    	je     7ac1 <bithenge_node_from_source+0x161>
    7a2c:	c1 e6 04             	shl    $0x4,%esi
    7a2f:	8b 45 d0             	mov    -0x30(%ebp),%eax
    7a32:	09 f1                	or     %esi,%ecx
    7a34:	88 0c 10             	mov    %cl,(%eax,%edx,1)
    7a37:	42                   	inc    %edx
    7a38:	3b 55 d4             	cmp    -0x2c(%ebp),%edx
    7a3b:	0f 84 ff 00 00 00    	je     7b40 <bithenge_node_from_source+0x1e0>
    7a41:	0f be 4c 53 04       	movsbl 0x4(%ebx,%edx,2),%ecx
    7a46:	8d 71 d0             	lea    -0x30(%ecx),%esi
    7a49:	89 f0                	mov    %esi,%eax
    7a4b:	8d 71 d0             	lea    -0x30(%ecx),%esi
    7a4e:	3c 09                	cmp    $0x9,%al
    7a50:	76 1e                	jbe    7a70 <bithenge_node_from_source+0x110>
    7a52:	8d 71 9f             	lea    -0x61(%ecx),%esi
    7a55:	89 f0                	mov    %esi,%eax
    7a57:	8d 71 a9             	lea    -0x57(%ecx),%esi
    7a5a:	3c 05                	cmp    $0x5,%al
    7a5c:	76 12                	jbe    7a70 <bithenge_node_from_source+0x110>
    7a5e:	8d 79 bf             	lea    -0x41(%ecx),%edi
    7a61:	83 ce ff             	or     $0xffffffff,%esi
    7a64:	89 f8                	mov    %edi,%eax
    7a66:	3c 05                	cmp    $0x5,%al
    7a68:	77 06                	ja     7a70 <bithenge_node_from_source+0x110>
    7a6a:	8d 71 c9             	lea    -0x37(%ecx),%esi
    7a6d:	8d 76 00             	lea    0x0(%esi),%esi
    7a70:	0f be 4c 53 05       	movsbl 0x5(%ebx,%edx,2),%ecx
    7a75:	8d 79 d0             	lea    -0x30(%ecx),%edi
    7a78:	89 f8                	mov    %edi,%eax
    7a7a:	3c 09                	cmp    $0x9,%al
    7a7c:	76 a2                	jbe    7a20 <bithenge_node_from_source+0xc0>
    7a7e:	8d 79 9f             	lea    -0x61(%ecx),%edi
    7a81:	89 f8                	mov    %edi,%eax
    7a83:	3c 05                	cmp    $0x5,%al
    7a85:	77 31                	ja     7ab8 <bithenge_node_from_source+0x158>
    7a87:	83 e9 57             	sub    $0x57,%ecx
    7a8a:	eb 97                	jmp    7a23 <bithenge_node_from_source+0xc3>
    7a8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7a90:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    7a93:	83 c3 06             	add    $0x6,%ebx
    7a96:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    7a9d:	00 
    7a9e:	89 44 24 04          	mov    %eax,0x4(%esp)
    7aa2:	89 1c 24             	mov    %ebx,(%esp)
    7aa5:	e8 76 9d 00 00       	call   11820 <loc_service_get_id>
    7aaa:	85 c0                	test   %eax,%eax
    7aac:	74 5a                	je     7b08 <bithenge_node_from_source+0x1a8>
    7aae:	83 c4 3c             	add    $0x3c,%esp
    7ab1:	5b                   	pop    %ebx
    7ab2:	5e                   	pop    %esi
    7ab3:	5f                   	pop    %edi
    7ab4:	5d                   	pop    %ebp
    7ab5:	c3                   	ret    
    7ab6:	66 90                	xchg   %ax,%ax
    7ab8:	8d 79 bf             	lea    -0x41(%ecx),%edi
    7abb:	89 f8                	mov    %edi,%eax
    7abd:	3c 05                	cmp    $0x5,%al
    7abf:	76 3f                	jbe    7b00 <bithenge_node_from_source+0x1a0>
    7ac1:	8b 45 d0             	mov    -0x30(%ebp),%eax
    7ac4:	89 04 24             	mov    %eax,(%esp)
    7ac7:	e8 14 87 01 00       	call   201e0 <free>
    7acc:	83 c4 3c             	add    $0x3c,%esp
    7acf:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    7ad4:	5b                   	pop    %ebx
    7ad5:	5e                   	pop    %esi
    7ad6:	5f                   	pop    %edi
    7ad7:	5d                   	pop    %ebp
    7ad8:	c3                   	ret    
    7ad9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7ae0:	8b 45 08             	mov    0x8(%ebp),%eax
    7ae3:	83 c3 05             	add    $0x5,%ebx
    7ae6:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    7aea:	89 04 24             	mov    %eax,(%esp)
    7aed:	e8 fe 6b 00 00       	call   e6f0 <bithenge_new_file_blob>
    7af2:	83 c4 3c             	add    $0x3c,%esp
    7af5:	5b                   	pop    %ebx
    7af6:	5e                   	pop    %esi
    7af7:	5f                   	pop    %edi
    7af8:	5d                   	pop    %ebp
    7af9:	c3                   	ret    
    7afa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7b00:	83 e9 37             	sub    $0x37,%ecx
    7b03:	e9 1b ff ff ff       	jmp    7a23 <bithenge_node_from_source+0xc3>
    7b08:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    7b0b:	8b 55 08             	mov    0x8(%ebp),%edx
    7b0e:	89 44 24 04          	mov    %eax,0x4(%esp)
    7b12:	89 14 24             	mov    %edx,(%esp)
    7b15:	e8 76 31 00 00       	call   ac90 <bithenge_new_block_blob>
    7b1a:	83 c4 3c             	add    $0x3c,%esp
    7b1d:	5b                   	pop    %ebx
    7b1e:	5e                   	pop    %esi
    7b1f:	5f                   	pop    %edi
    7b20:	5d                   	pop    %ebp
    7b21:	c3                   	ret    
    7b22:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7b28:	8b 55 08             	mov    0x8(%ebp),%edx
    7b2b:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    7b2f:	89 14 24             	mov    %edx,(%esp)
    7b32:	e8 b9 6b 00 00       	call   e6f0 <bithenge_new_file_blob>
    7b37:	83 c4 3c             	add    $0x3c,%esp
    7b3a:	5b                   	pop    %ebx
    7b3b:	5e                   	pop    %esi
    7b3c:	5f                   	pop    %edi
    7b3d:	5d                   	pop    %ebp
    7b3e:	c3                   	ret    
    7b3f:	90                   	nop
    7b40:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    7b43:	89 44 24 04          	mov    %eax,0x4(%esp)
    7b47:	8b 45 08             	mov    0x8(%ebp),%eax
    7b4a:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
    7b51:	00 
    7b52:	89 54 24 08          	mov    %edx,0x8(%esp)
    7b56:	89 04 24             	mov    %eax,(%esp)
    7b59:	e8 52 3d 00 00       	call   b8b0 <bithenge_new_blob_from_buffer>
    7b5e:	83 c4 3c             	add    $0x3c,%esp
    7b61:	5b                   	pop    %ebx
    7b62:	5e                   	pop    %esi
    7b63:	5f                   	pop    %edi
    7b64:	5d                   	pop    %ebp
    7b65:	c3                   	ret    
    7b66:	66 90                	xchg   %ax,%ax
    7b68:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    7b6d:	e9 3c ff ff ff       	jmp    7aae <bithenge_node_from_source+0x14e>
    7b72:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    7b77:	e9 32 ff ff ff       	jmp    7aae <bithenge_node_from_source+0x14e>
    7b7c:	66 90                	xchg   %ax,%ax
    7b7e:	66 90                	xchg   %ax,%ax

00007b80 <invalid_apply>:
    7b80:	55                   	push   %ebp
    7b81:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    7b86:	89 e5                	mov    %esp,%ebp
    7b88:	5d                   	pop    %ebp
    7b89:	c3                   	ret    
    7b8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00007b90 <prefix_length_1>:
    7b90:	55                   	push   %ebp
    7b91:	89 e5                	mov    %esp,%ebp
    7b93:	8b 45 14             	mov    0x14(%ebp),%eax
    7b96:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
    7b9c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    7ba3:	5d                   	pop    %ebp
    7ba4:	31 c0                	xor    %eax,%eax
    7ba6:	c3                   	ret    
    7ba7:	89 f6                	mov    %esi,%esi
    7ba9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007bb0 <prefix_length_2>:
    7bb0:	55                   	push   %ebp
    7bb1:	89 e5                	mov    %esp,%ebp
    7bb3:	8b 45 14             	mov    0x14(%ebp),%eax
    7bb6:	c7 00 02 00 00 00    	movl   $0x2,(%eax)
    7bbc:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    7bc3:	5d                   	pop    %ebp
    7bc4:	31 c0                	xor    %eax,%eax
    7bc6:	c3                   	ret    
    7bc7:	89 f6                	mov    %esi,%esi
    7bc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007bd0 <prefix_length_4>:
    7bd0:	55                   	push   %ebp
    7bd1:	89 e5                	mov    %esp,%ebp
    7bd3:	8b 45 14             	mov    0x14(%ebp),%eax
    7bd6:	c7 00 04 00 00 00    	movl   $0x4,(%eax)
    7bdc:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    7be3:	5d                   	pop    %ebp
    7be4:	31 c0                	xor    %eax,%eax
    7be6:	c3                   	ret    
    7be7:	89 f6                	mov    %esi,%esi
    7be9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007bf0 <prefix_length_8>:
    7bf0:	55                   	push   %ebp
    7bf1:	89 e5                	mov    %esp,%ebp
    7bf3:	8b 45 14             	mov    0x14(%ebp),%eax
    7bf6:	c7 00 08 00 00 00    	movl   $0x8,(%eax)
    7bfc:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    7c03:	5d                   	pop    %ebp
    7c04:	31 c0                	xor    %eax,%eax
    7c06:	c3                   	ret    
    7c07:	89 f6                	mov    %esi,%esi
    7c09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007c10 <transform_indestructible>:
    7c10:	55                   	push   %ebp
    7c11:	89 e5                	mov    %esp,%ebp
    7c13:	83 ec 18             	sub    $0x18,%esp
    7c16:	c7 44 24 08 4b 00 00 	movl   $0x4b,0x8(%esp)
    7c1d:	00 
    7c1e:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    7c25:	00 
    7c26:	c7 04 24 c4 cd 02 00 	movl   $0x2cdc4,(%esp)
    7c2d:	e8 7e 2c 02 00       	call   2a8b0 <assert_abort>
    7c32:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7c39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007c40 <bits_xe_destroy>:
    7c40:	55                   	push   %ebp
    7c41:	89 e5                	mov    %esp,%ebp
    7c43:	53                   	push   %ebx
    7c44:	83 ec 14             	sub    $0x14,%esp
    7c47:	8b 5d 08             	mov    0x8(%ebp),%ebx
    7c4a:	8b 43 10             	mov    0x10(%ebx),%eax
    7c4d:	85 c0                	test   %eax,%eax
    7c4f:	74 08                	je     7c59 <bits_xe_destroy+0x19>
    7c51:	89 04 24             	mov    %eax,(%esp)
    7c54:	e8 67 26 00 00       	call   a2c0 <bithenge_node_dec_ref>
    7c59:	89 5d 08             	mov    %ebx,0x8(%ebp)
    7c5c:	83 c4 14             	add    $0x14,%esp
    7c5f:	5b                   	pop    %ebx
    7c60:	5d                   	pop    %ebp
    7c61:	e9 7a 85 01 00       	jmp    201e0 <free>
    7c66:	8d 76 00             	lea    0x0(%esi),%esi
    7c69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007c70 <nonzero_boolean_apply>:
    7c70:	55                   	push   %ebp
    7c71:	89 e5                	mov    %esp,%ebp
    7c73:	8b 45 10             	mov    0x10(%ebp),%eax
    7c76:	8b 55 14             	mov    0x14(%ebp),%edx
    7c79:	83 38 03             	cmpl   $0x3,(%eax)
    7c7c:	75 1a                	jne    7c98 <nonzero_boolean_apply+0x28>
    7c7e:	8b 48 08             	mov    0x8(%eax),%ecx
    7c81:	0b 48 0c             	or     0xc(%eax),%ecx
    7c84:	89 55 08             	mov    %edx,0x8(%ebp)
    7c87:	0f 95 c0             	setne  %al
    7c8a:	25 ff 00 00 00       	and    $0xff,%eax
    7c8f:	89 45 0c             	mov    %eax,0xc(%ebp)
    7c92:	5d                   	pop    %ebp
    7c93:	e9 98 2c 00 00       	jmp    a930 <bithenge_new_boolean_node>
    7c98:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    7c9d:	5d                   	pop    %ebp
    7c9e:	c3                   	ret    
    7c9f:	90                   	nop

00007ca0 <barrier_transform_destroy>:
    7ca0:	55                   	push   %ebp
    7ca1:	89 e5                	mov    %esp,%ebp
    7ca3:	53                   	push   %ebx
    7ca4:	83 ec 14             	sub    $0x14,%esp
    7ca7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    7caa:	8b 43 0c             	mov    0xc(%ebx),%eax
    7cad:	85 c0                	test   %eax,%eax
    7caf:	74 1b                	je     7ccc <barrier_transform_destroy+0x2c>
    7cb1:	8b 08                	mov    (%eax),%ecx
    7cb3:	85 c9                	test   %ecx,%ecx
    7cb5:	74 3e                	je     7cf5 <barrier_transform_destroy+0x55>
    7cb7:	8b 50 04             	mov    0x4(%eax),%edx
    7cba:	85 d2                	test   %edx,%edx
    7cbc:	74 1b                	je     7cd9 <barrier_transform_destroy+0x39>
    7cbe:	4a                   	dec    %edx
    7cbf:	89 50 04             	mov    %edx,0x4(%eax)
    7cc2:	85 d2                	test   %edx,%edx
    7cc4:	75 06                	jne    7ccc <barrier_transform_destroy+0x2c>
    7cc6:	89 04 24             	mov    %eax,(%esp)
    7cc9:	ff 51 0c             	call   *0xc(%ecx)
    7ccc:	89 5d 08             	mov    %ebx,0x8(%ebp)
    7ccf:	83 c4 14             	add    $0x14,%esp
    7cd2:	5b                   	pop    %ebx
    7cd3:	5d                   	pop    %ebp
    7cd4:	e9 07 85 01 00       	jmp    201e0 <free>
    7cd9:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    7ce0:	00 
    7ce1:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    7ce8:	00 
    7ce9:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    7cf0:	e8 bb 2b 02 00       	call   2a8b0 <assert_abort>
    7cf5:	c7 44 24 08 74 00 00 	movl   $0x74,0x8(%esp)
    7cfc:	00 
    7cfd:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    7d04:	00 
    7d05:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    7d0c:	e8 9f 2b 02 00       	call   2a8b0 <assert_abort>
    7d11:	eb 0d                	jmp    7d20 <zero_terminated_prefix_length>
    7d13:	90                   	nop
    7d14:	90                   	nop
    7d15:	90                   	nop
    7d16:	90                   	nop
    7d17:	90                   	nop
    7d18:	90                   	nop
    7d19:	90                   	nop
    7d1a:	90                   	nop
    7d1b:	90                   	nop
    7d1c:	90                   	nop
    7d1d:	90                   	nop
    7d1e:	90                   	nop
    7d1f:	90                   	nop

00007d20 <zero_terminated_prefix_length>:
    7d20:	55                   	push   %ebp
    7d21:	89 e5                	mov    %esp,%ebp
    7d23:	57                   	push   %edi
    7d24:	56                   	push   %esi
    7d25:	53                   	push   %ebx
    7d26:	81 ec 4c 10 00 00    	sub    $0x104c,%esp
    7d2c:	c7 85 e0 ef ff ff 00 	movl   $0x1000,-0x1020(%ebp)
    7d33:	10 00 00 
    7d36:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7d39:	c7 85 e4 ef ff ff 00 	movl   $0x0,-0x101c(%ebp)
    7d40:	00 00 00 
    7d43:	85 c9                	test   %ecx,%ecx
    7d45:	0f 84 43 01 00 00    	je     7e8e <zero_terminated_prefix_length+0x16e>
    7d4b:	8b 55 10             	mov    0x10(%ebp),%edx
    7d4e:	8b 42 08             	mov    0x8(%edx),%eax
    7d51:	85 c0                	test   %eax,%eax
    7d53:	0f 84 19 01 00 00    	je     7e72 <zero_terminated_prefix_length+0x152>
    7d59:	8b 40 04             	mov    0x4(%eax),%eax
    7d5c:	85 c0                	test   %eax,%eax
    7d5e:	0f 84 c3 00 00 00    	je     7e27 <zero_terminated_prefix_length+0x107>
    7d64:	8d 8d e8 ef ff ff    	lea    -0x1018(%ebp),%ecx
    7d6a:	c7 85 c8 ef ff ff 00 	movl   $0x0,-0x1038(%ebp)
    7d71:	00 00 00 
    7d74:	c7 85 cc ef ff ff 00 	movl   $0x0,-0x1034(%ebp)
    7d7b:	00 00 00 
    7d7e:	89 8d d4 ef ff ff    	mov    %ecx,-0x102c(%ebp)
    7d84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7d88:	8d 8d e8 ef ff ff    	lea    -0x1018(%ebp),%ecx
    7d8e:	8d 95 e0 ef ff ff    	lea    -0x1020(%ebp),%edx
    7d94:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    7d98:	8b 8d cc ef ff ff    	mov    -0x1034(%ebp),%ecx
    7d9e:	89 54 24 10          	mov    %edx,0x10(%esp)
    7da2:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    7da6:	8b 95 c8 ef ff ff    	mov    -0x1038(%ebp),%edx
    7dac:	8b 4d 10             	mov    0x10(%ebp),%ecx
    7daf:	89 54 24 04          	mov    %edx,0x4(%esp)
    7db3:	89 0c 24             	mov    %ecx,(%esp)
    7db6:	ff d0                	call   *%eax
    7db8:	85 c0                	test   %eax,%eax
    7dba:	0f 85 a1 00 00 00    	jne    7e61 <zero_terminated_prefix_length+0x141>
    7dc0:	8b 9d e0 ef ff ff    	mov    -0x1020(%ebp),%ebx
    7dc6:	8b b5 e4 ef ff ff    	mov    -0x101c(%ebp),%esi
    7dcc:	89 d9                	mov    %ebx,%ecx
    7dce:	85 db                	test   %ebx,%ebx
    7dd0:	74 2b                	je     7dfd <zero_terminated_prefix_length+0xdd>
    7dd2:	80 bd e8 ef ff ff 00 	cmpb   $0x0,-0x1018(%ebp)
    7dd9:	0f 84 8d 00 00 00    	je     7e6c <zero_terminated_prefix_length+0x14c>
    7ddf:	8d bd e8 ef ff ff    	lea    -0x1018(%ebp),%edi
    7de5:	8d 95 e9 ef ff ff    	lea    -0x1017(%ebp),%edx
    7deb:	01 f9                	add    %edi,%ecx
    7ded:	eb 0a                	jmp    7df9 <zero_terminated_prefix_length+0xd9>
    7def:	90                   	nop
    7df0:	89 d7                	mov    %edx,%edi
    7df2:	42                   	inc    %edx
    7df3:	80 7a ff 00          	cmpb   $0x0,-0x1(%edx)
    7df7:	74 3f                	je     7e38 <zero_terminated_prefix_length+0x118>
    7df9:	39 ca                	cmp    %ecx,%edx
    7dfb:	75 f3                	jne    7df0 <zero_terminated_prefix_length+0xd0>
    7dfd:	01 9d c8 ef ff ff    	add    %ebx,-0x1038(%ebp)
    7e03:	89 d8                	mov    %ebx,%eax
    7e05:	11 b5 cc ef ff ff    	adc    %esi,-0x1034(%ebp)
    7e0b:	80 f4 10             	xor    $0x10,%ah
    7e0e:	09 f0                	or     %esi,%eax
    7e10:	75 15                	jne    7e27 <zero_terminated_prefix_length+0x107>
    7e12:	8b 7d 10             	mov    0x10(%ebp),%edi
    7e15:	8b 47 08             	mov    0x8(%edi),%eax
    7e18:	85 c0                	test   %eax,%eax
    7e1a:	74 56                	je     7e72 <zero_terminated_prefix_length+0x152>
    7e1c:	8b 40 04             	mov    0x4(%eax),%eax
    7e1f:	85 c0                	test   %eax,%eax
    7e21:	0f 85 61 ff ff ff    	jne    7d88 <zero_terminated_prefix_length+0x68>
    7e27:	81 c4 4c 10 00 00    	add    $0x104c,%esp
    7e2d:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    7e32:	5b                   	pop    %ebx
    7e33:	5e                   	pop    %esi
    7e34:	5f                   	pop    %edi
    7e35:	5d                   	pop    %ebp
    7e36:	c3                   	ret    
    7e37:	90                   	nop
    7e38:	89 f9                	mov    %edi,%ecx
    7e3a:	8b 95 d4 ef ff ff    	mov    -0x102c(%ebp),%edx
    7e40:	29 d1                	sub    %edx,%ecx
    7e42:	89 cb                	mov    %ecx,%ebx
    7e44:	c1 fb 1f             	sar    $0x1f,%ebx
    7e47:	03 8d c8 ef ff ff    	add    -0x1038(%ebp),%ecx
    7e4d:	8b 55 14             	mov    0x14(%ebp),%edx
    7e50:	13 9d cc ef ff ff    	adc    -0x1034(%ebp),%ebx
    7e56:	83 c1 01             	add    $0x1,%ecx
    7e59:	83 d3 00             	adc    $0x0,%ebx
    7e5c:	89 0a                	mov    %ecx,(%edx)
    7e5e:	89 5a 04             	mov    %ebx,0x4(%edx)
    7e61:	81 c4 4c 10 00 00    	add    $0x104c,%esp
    7e67:	5b                   	pop    %ebx
    7e68:	5e                   	pop    %esi
    7e69:	5f                   	pop    %edi
    7e6a:	5d                   	pop    %ebp
    7e6b:	c3                   	ret    
    7e6c:	31 c9                	xor    %ecx,%ecx
    7e6e:	31 db                	xor    %ebx,%ebx
    7e70:	eb d5                	jmp    7e47 <zero_terminated_prefix_length+0x127>
    7e72:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    7e79:	00 
    7e7a:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    7e81:	00 
    7e82:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    7e89:	e8 22 2a 02 00       	call   2a8b0 <assert_abort>
    7e8e:	e8 d0 1e 00 00       	call   9d63 <bithenge_blob_read.part.1>
    7e93:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7e99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007ea0 <bits_xe_apply>:
    7ea0:	55                   	push   %ebp
    7ea1:	89 e5                	mov    %esp,%ebp
    7ea3:	56                   	push   %esi
    7ea4:	53                   	push   %ebx
    7ea5:	83 ec 20             	sub    $0x20,%esp
    7ea8:	8b 75 10             	mov    0x10(%ebp),%esi
    7eab:	83 3e 05             	cmpl   $0x5,(%esi)
    7eae:	75 68                	jne    7f18 <bits_xe_apply+0x78>
    7eb0:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
    7eb7:	e8 14 82 01 00       	call   200d0 <malloc>
    7ebc:	89 c3                	mov    %eax,%ebx
    7ebe:	85 c0                	test   %eax,%eax
    7ec0:	74 66                	je     7f28 <bits_xe_apply+0x88>
    7ec2:	c7 44 24 04 68 d2 02 	movl   $0x2d268,0x4(%esp)
    7ec9:	00 
    7eca:	89 04 24             	mov    %eax,(%esp)
    7ecd:	e8 1e 38 00 00       	call   b6f0 <bithenge_init_random_access_blob>
    7ed2:	85 c0                	test   %eax,%eax
    7ed4:	75 2a                	jne    7f00 <bits_xe_apply+0x60>
    7ed6:	8b 56 04             	mov    0x4(%esi),%edx
    7ed9:	42                   	inc    %edx
    7eda:	83 3e 05             	cmpl   $0x5,(%esi)
    7edd:	89 56 04             	mov    %edx,0x4(%esi)
    7ee0:	75 4d                	jne    7f2f <bits_xe_apply+0x8f>
    7ee2:	8b 55 14             	mov    0x14(%ebp),%edx
    7ee5:	89 73 10             	mov    %esi,0x10(%ebx)
    7ee8:	81 7d 08 40 03 03 00 	cmpl   $0x30340,0x8(%ebp)
    7eef:	0f 94 43 14          	sete   0x14(%ebx)
    7ef3:	89 1a                	mov    %ebx,(%edx)
    7ef5:	83 c4 20             	add    $0x20,%esp
    7ef8:	5b                   	pop    %ebx
    7ef9:	5e                   	pop    %esi
    7efa:	5d                   	pop    %ebp
    7efb:	c3                   	ret    
    7efc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7f00:	89 1c 24             	mov    %ebx,(%esp)
    7f03:	89 45 f4             	mov    %eax,-0xc(%ebp)
    7f06:	e8 d5 82 01 00       	call   201e0 <free>
    7f0b:	8b 45 f4             	mov    -0xc(%ebp),%eax
    7f0e:	83 c4 20             	add    $0x20,%esp
    7f11:	5b                   	pop    %ebx
    7f12:	5e                   	pop    %esi
    7f13:	5d                   	pop    %ebp
    7f14:	c3                   	ret    
    7f15:	8d 76 00             	lea    0x0(%esi),%esi
    7f18:	83 c4 20             	add    $0x20,%esp
    7f1b:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    7f20:	5b                   	pop    %ebx
    7f21:	5e                   	pop    %esi
    7f22:	5d                   	pop    %ebp
    7f23:	c3                   	ret    
    7f24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    7f28:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    7f2d:	eb c6                	jmp    7ef5 <bits_xe_apply+0x55>
    7f2f:	e8 51 1e 00 00       	call   9d85 <bithenge_node_as_blob.part.2>
    7f34:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7f3a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00007f40 <known_length_prefix_length>:
    7f40:	55                   	push   %ebp
    7f41:	89 e5                	mov    %esp,%ebp
    7f43:	57                   	push   %edi
    7f44:	56                   	push   %esi
    7f45:	83 ec 10             	sub    $0x10,%esp
    7f48:	8b 45 0c             	mov    0xc(%ebp),%eax
    7f4b:	85 c0                	test   %eax,%eax
    7f4d:	75 10                	jne    7f5f <known_length_prefix_length+0x1f>
    7f4f:	eb 5c                	jmp    7fad <known_length_prefix_length+0x6d>
    7f51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    7f58:	8b 40 04             	mov    0x4(%eax),%eax
    7f5b:	85 c0                	test   %eax,%eax
    7f5d:	74 4e                	je     7fad <known_length_prefix_length+0x6d>
    7f5f:	8b 50 10             	mov    0x10(%eax),%edx
    7f62:	85 d2                	test   %edx,%edx
    7f64:	74 f2                	je     7f58 <known_length_prefix_length+0x18>
    7f66:	85 d2                	test   %edx,%edx
    7f68:	7e 64                	jle    7fce <known_length_prefix_length+0x8e>
    7f6a:	8b 40 14             	mov    0x14(%eax),%eax
    7f6d:	8b 00                	mov    (%eax),%eax
    7f6f:	85 c0                	test   %eax,%eax
    7f71:	74 56                	je     7fc9 <known_length_prefix_length+0x89>
    7f73:	8b 48 04             	mov    0x4(%eax),%ecx
    7f76:	41                   	inc    %ecx
    7f77:	83 38 03             	cmpl   $0x3,(%eax)
    7f7a:	89 48 04             	mov    %ecx,0x4(%eax)
    7f7d:	75 1f                	jne    7f9e <known_length_prefix_length+0x5e>
    7f7f:	8b 70 08             	mov    0x8(%eax),%esi
    7f82:	8b 78 0c             	mov    0xc(%eax),%edi
    7f85:	89 04 24             	mov    %eax,(%esp)
    7f88:	e8 33 23 00 00       	call   a2c0 <bithenge_node_dec_ref>
    7f8d:	8b 45 14             	mov    0x14(%ebp),%eax
    7f90:	89 30                	mov    %esi,(%eax)
    7f92:	89 78 04             	mov    %edi,0x4(%eax)
    7f95:	31 c0                	xor    %eax,%eax
    7f97:	83 c4 10             	add    $0x10,%esp
    7f9a:	5e                   	pop    %esi
    7f9b:	5f                   	pop    %edi
    7f9c:	5d                   	pop    %ebp
    7f9d:	c3                   	ret    
    7f9e:	89 04 24             	mov    %eax,(%esp)
    7fa1:	e8 1a 23 00 00       	call   a2c0 <bithenge_node_dec_ref>
    7fa6:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    7fab:	eb ea                	jmp    7f97 <known_length_prefix_length+0x57>
    7fad:	c7 44 24 08 96 01 00 	movl   $0x196,0x8(%esp)
    7fb4:	00 
    7fb5:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    7fbc:	00 
    7fbd:	c7 04 24 1a d1 02 00 	movl   $0x2d11a,(%esp)
    7fc4:	e8 e7 28 02 00       	call   2a8b0 <assert_abort>
    7fc9:	e8 fb 1d 00 00       	call   9dc9 <bithenge_node_inc_ref.part.4>
    7fce:	e8 3a 1e 00 00       	call   9e0d <bithenge_scope_get_param.part.13>
    7fd3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    7fd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00007fe0 <bits_xe_size>:
    7fe0:	55                   	push   %ebp
    7fe1:	89 e5                	mov    %esp,%ebp
    7fe3:	56                   	push   %esi
    7fe4:	53                   	push   %ebx
    7fe5:	83 ec 10             	sub    $0x10,%esp
    7fe8:	8b 45 08             	mov    0x8(%ebp),%eax
    7feb:	8b 75 0c             	mov    0xc(%ebp),%esi
    7fee:	8b 40 10             	mov    0x10(%eax),%eax
    7ff1:	85 c0                	test   %eax,%eax
    7ff3:	74 28                	je     801d <bits_xe_size+0x3d>
    7ff5:	8b 50 08             	mov    0x8(%eax),%edx
    7ff8:	85 d2                	test   %edx,%edx
    7ffa:	74 26                	je     8022 <bits_xe_size+0x42>
    7ffc:	89 74 24 04          	mov    %esi,0x4(%esp)
    8000:	89 04 24             	mov    %eax,(%esp)
    8003:	ff 12                	call   *(%edx)
    8005:	8b 0e                	mov    (%esi),%ecx
    8007:	8b 5e 04             	mov    0x4(%esi),%ebx
    800a:	0f a4 cb 03          	shld   $0x3,%ecx,%ebx
    800e:	c1 e1 03             	shl    $0x3,%ecx
    8011:	89 5e 04             	mov    %ebx,0x4(%esi)
    8014:	89 0e                	mov    %ecx,(%esi)
    8016:	83 c4 10             	add    $0x10,%esp
    8019:	5b                   	pop    %ebx
    801a:	5e                   	pop    %esi
    801b:	5d                   	pop    %ebp
    801c:	c3                   	ret    
    801d:	e8 85 1d 00 00       	call   9da7 <bithenge_blob_size.part.3>
    8022:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    8029:	00 
    802a:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    8031:	00 
    8032:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    8039:	e8 72 28 02 00       	call   2a8b0 <assert_abort>
    803e:	66 90                	xchg   %ax,%ax

00008040 <bit_prefix_apply>:
    8040:	55                   	push   %ebp
    8041:	89 e5                	mov    %esp,%ebp
    8043:	53                   	push   %ebx
    8044:	83 ec 34             	sub    $0x34,%esp
    8047:	8b 45 10             	mov    0x10(%ebp),%eax
    804a:	8b 5d 18             	mov    0x18(%ebp),%ebx
    804d:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
    8054:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    805b:	85 c0                	test   %eax,%eax
    805d:	0f 84 84 00 00 00    	je     80e7 <bit_prefix_apply+0xa7>
    8063:	8b 50 08             	mov    0x8(%eax),%edx
    8066:	85 d2                	test   %edx,%edx
    8068:	0f 84 95 00 00 00    	je     8103 <bit_prefix_apply+0xc3>
    806e:	8b 52 08             	mov    0x8(%edx),%edx
    8071:	85 d2                	test   %edx,%edx
    8073:	74 6b                	je     80e0 <bit_prefix_apply+0xa0>
    8075:	8d 4d f0             	lea    -0x10(%ebp),%ecx
    8078:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
    807f:	00 
    8080:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    8084:	8d 4d ec             	lea    -0x14(%ebp),%ecx
    8087:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    808b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    8092:	00 
    8093:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    809a:	00 
    809b:	89 04 24             	mov    %eax,(%esp)
    809e:	ff d2                	call   *%edx
    80a0:	85 c0                	test   %eax,%eax
    80a2:	75 31                	jne    80d5 <bit_prefix_apply+0x95>
    80a4:	8b 45 f0             	mov    -0x10(%ebp),%eax
    80a7:	83 f0 01             	xor    $0x1,%eax
    80aa:	0b 45 f4             	or     -0xc(%ebp),%eax
    80ad:	75 31                	jne    80e0 <bit_prefix_apply+0xa0>
    80af:	85 db                	test   %ebx,%ebx
    80b1:	74 0d                	je     80c0 <bit_prefix_apply+0x80>
    80b3:	c7 03 01 00 00 00    	movl   $0x1,(%ebx)
    80b9:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    80c0:	8a 45 ec             	mov    -0x14(%ebp),%al
    80c3:	83 e0 01             	and    $0x1,%eax
    80c6:	89 44 24 04          	mov    %eax,0x4(%esp)
    80ca:	8b 45 14             	mov    0x14(%ebp),%eax
    80cd:	89 04 24             	mov    %eax,(%esp)
    80d0:	e8 5b 28 00 00       	call   a930 <bithenge_new_boolean_node>
    80d5:	83 c4 34             	add    $0x34,%esp
    80d8:	5b                   	pop    %ebx
    80d9:	5d                   	pop    %ebp
    80da:	c3                   	ret    
    80db:	90                   	nop
    80dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    80e0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    80e5:	eb ee                	jmp    80d5 <bit_prefix_apply+0x95>
    80e7:	c7 44 24 08 b2 00 00 	movl   $0xb2,0x8(%esp)
    80ee:	00 
    80ef:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    80f6:	00 
    80f7:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    80fe:	e8 ad 27 02 00       	call   2a8b0 <assert_abort>
    8103:	c7 44 24 08 b3 00 00 	movl   $0xb3,0x8(%esp)
    810a:	00 
    810b:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    8112:	00 
    8113:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    811a:	e8 91 27 02 00       	call   2a8b0 <assert_abort>
    811f:	90                   	nop

00008120 <bits_xe_read_bits>:
    8120:	55                   	push   %ebp
    8121:	89 e5                	mov    %esp,%ebp
    8123:	57                   	push   %edi
    8124:	56                   	push   %esi
    8125:	53                   	push   %ebx
    8126:	83 ec 6c             	sub    $0x6c,%esp
    8129:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    8130:	8b 45 0c             	mov    0xc(%ebp),%eax
    8133:	8b 55 10             	mov    0x10(%ebp),%edx
    8136:	8a 4d 1c             	mov    0x1c(%ebp),%cl
    8139:	89 d3                	mov    %edx,%ebx
    813b:	88 4d ca             	mov    %cl,-0x36(%ebp)
    813e:	89 c1                	mov    %eax,%ecx
    8140:	0f ac d9 03          	shrd   $0x3,%ebx,%ecx
    8144:	c1 eb 03             	shr    $0x3,%ebx
    8147:	8b 7d 18             	mov    0x18(%ebp),%edi
    814a:	89 5d bc             	mov    %ebx,-0x44(%ebp)
    814d:	89 c3                	mov    %eax,%ebx
    814f:	83 e3 07             	and    $0x7,%ebx
    8152:	8b 17                	mov    (%edi),%edx
    8154:	89 5d d0             	mov    %ebx,-0x30(%ebp)
    8157:	89 55 c0             	mov    %edx,-0x40(%ebp)
    815a:	8b 45 d0             	mov    -0x30(%ebp),%eax
    815d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    8160:	83 c0 07             	add    $0x7,%eax
    8163:	89 4d b8             	mov    %ecx,-0x48(%ebp)
    8166:	83 d2 00             	adc    $0x0,%edx
    8169:	8b 4f 04             	mov    0x4(%edi),%ecx
    816c:	03 45 c0             	add    -0x40(%ebp),%eax
    816f:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
    8172:	13 55 c4             	adc    -0x3c(%ebp),%edx
    8175:	0f ac d0 03          	shrd   $0x3,%edx,%eax
    8179:	c1 ea 03             	shr    $0x3,%edx
    817c:	89 45 e0             	mov    %eax,-0x20(%ebp)
    817f:	85 db                	test   %ebx,%ebx
    8181:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    8184:	0f 95 45 cb          	setne  -0x35(%ebp)
    8188:	0f 84 62 01 00 00    	je     82f0 <bits_xe_read_bits+0x1d0>
    818e:	40                   	inc    %eax
    818f:	89 04 24             	mov    %eax,(%esp)
    8192:	e8 39 7f 01 00       	call   200d0 <malloc>
    8197:	89 c6                	mov    %eax,%esi
    8199:	85 c0                	test   %eax,%eax
    819b:	0f 84 ac 01 00 00    	je     834d <bits_xe_read_bits+0x22d>
    81a1:	8b 4d 08             	mov    0x8(%ebp),%ecx
    81a4:	8b 41 10             	mov    0x10(%ecx),%eax
    81a7:	85 c0                	test   %eax,%eax
    81a9:	0f 84 a7 01 00 00    	je     8356 <bits_xe_read_bits+0x236>
    81af:	8b 50 08             	mov    0x8(%eax),%edx
    81b2:	85 d2                	test   %edx,%edx
    81b4:	0f 84 a1 01 00 00    	je     835b <bits_xe_read_bits+0x23b>
    81ba:	8b 52 04             	mov    0x4(%edx),%edx
    81bd:	85 d2                	test   %edx,%edx
    81bf:	0f 84 33 01 00 00    	je     82f8 <bits_xe_read_bits+0x1d8>
    81c5:	8d 4d e0             	lea    -0x20(%ebp),%ecx
    81c8:	8b 5d bc             	mov    -0x44(%ebp),%ebx
    81cb:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    81cf:	8b 4d b8             	mov    -0x48(%ebp),%ecx
    81d2:	89 74 24 0c          	mov    %esi,0xc(%esp)
    81d6:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    81da:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    81de:	89 04 24             	mov    %eax,(%esp)
    81e1:	ff d2                	call   *%edx
    81e3:	89 45 b8             	mov    %eax,-0x48(%ebp)
    81e6:	85 c0                	test   %eax,%eax
    81e8:	0f 85 12 01 00 00    	jne    8300 <bits_xe_read_bits+0x1e0>
    81ee:	8b 45 e0             	mov    -0x20(%ebp),%eax
    81f1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    81f4:	89 45 b0             	mov    %eax,-0x50(%ebp)
    81f7:	89 55 b4             	mov    %edx,-0x4c(%ebp)
    81fa:	0f a4 c2 03          	shld   $0x3,%eax,%edx
    81fe:	c1 e0 03             	shl    $0x3,%eax
    8201:	8b 4f 04             	mov    0x4(%edi),%ecx
    8204:	2b 45 d0             	sub    -0x30(%ebp),%eax
    8207:	8b 1f                	mov    (%edi),%ebx
    8209:	1b 55 d4             	sbb    -0x2c(%ebp),%edx
    820c:	39 d1                	cmp    %edx,%ecx
    820e:	72 0a                	jb     821a <bits_xe_read_bits+0xfa>
    8210:	0f 86 2a 01 00 00    	jbe    8340 <bits_xe_read_bits+0x220>
    8216:	89 c3                	mov    %eax,%ebx
    8218:	89 d1                	mov    %edx,%ecx
    821a:	89 4f 04             	mov    %ecx,0x4(%edi)
    821d:	8b 4d 08             	mov    0x8(%ebp),%ecx
    8220:	8a 55 ca             	mov    -0x36(%ebp),%dl
    8223:	89 1f                	mov    %ebx,(%edi)
    8225:	38 51 14             	cmp    %dl,0x14(%ecx)
    8228:	74 46                	je     8270 <bits_xe_read_bits+0x150>
    822a:	8b 5d b4             	mov    -0x4c(%ebp),%ebx
    822d:	0b 5d b0             	or     -0x50(%ebp),%ebx
    8230:	74 3e                	je     8270 <bits_xe_read_bits+0x150>
    8232:	8b 5d b0             	mov    -0x50(%ebp),%ebx
    8235:	89 f0                	mov    %esi,%eax
    8237:	01 f3                	add    %esi,%ebx
    8239:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8240:	8a 10                	mov    (%eax),%dl
    8242:	c0 c2 04             	rol    $0x4,%dl
    8245:	89 d1                	mov    %edx,%ecx
    8247:	83 e2 33             	and    $0x33,%edx
    824a:	c1 e2 02             	shl    $0x2,%edx
    824d:	81 e1 cc 00 00 00    	and    $0xcc,%ecx
    8253:	c1 f9 02             	sar    $0x2,%ecx
    8256:	31 ca                	xor    %ecx,%edx
    8258:	89 d1                	mov    %edx,%ecx
    825a:	83 e2 55             	and    $0x55,%edx
    825d:	81 e1 aa 00 00 00    	and    $0xaa,%ecx
    8263:	01 d2                	add    %edx,%edx
    8265:	d1 f9                	sar    %ecx
    8267:	31 d1                	xor    %edx,%ecx
    8269:	88 08                	mov    %cl,(%eax)
    826b:	40                   	inc    %eax
    826c:	39 d8                	cmp    %ebx,%eax
    826e:	75 d0                	jne    8240 <bits_xe_read_bits+0x120>
    8270:	80 7d cb 00          	cmpb   $0x0,-0x35(%ebp)
    8274:	0f 84 8c 00 00 00    	je     8306 <bits_xe_read_bits+0x1e6>
    827a:	8b 45 c0             	mov    -0x40(%ebp),%eax
    827d:	8b 55 c4             	mov    -0x3c(%ebp),%edx
    8280:	83 c0 07             	add    $0x7,%eax
    8283:	83 d2 00             	adc    $0x0,%edx
    8286:	0f ac d0 03          	shrd   $0x3,%edx,%eax
    828a:	c1 ea 03             	shr    $0x3,%edx
    828d:	89 d1                	mov    %edx,%ecx
    828f:	09 c1                	or     %eax,%ecx
    8291:	74 45                	je     82d8 <bits_xe_read_bits+0x1b8>
    8293:	c7 45 cc 08 00 00 00 	movl   $0x8,-0x34(%ebp)
    829a:	8b 5d d0             	mov    -0x30(%ebp),%ebx
    829d:	8b 7d cc             	mov    -0x34(%ebp),%edi
    82a0:	29 df                	sub    %ebx,%edi
    82a2:	89 c3                	mov    %eax,%ebx
    82a4:	89 7d cc             	mov    %edi,-0x34(%ebp)
    82a7:	31 c0                	xor    %eax,%eax
    82a9:	89 5d c0             	mov    %ebx,-0x40(%ebp)
    82ac:	8b 7d 14             	mov    0x14(%ebp),%edi
    82af:	80 7d ca 00          	cmpb   $0x0,-0x36(%ebp)
    82b3:	75 63                	jne    8318 <bits_xe_read_bits+0x1f8>
    82b5:	8d 76 00             	lea    0x0(%esi),%esi
    82b8:	31 db                	xor    %ebx,%ebx
    82ba:	8a 4d cc             	mov    -0x34(%ebp),%cl
    82bd:	8a 5c 06 01          	mov    0x1(%esi,%eax,1),%bl
    82c1:	31 d2                	xor    %edx,%edx
    82c3:	d3 fb                	sar    %cl,%ebx
    82c5:	8a 14 06             	mov    (%esi,%eax,1),%dl
    82c8:	8a 4d d0             	mov    -0x30(%ebp),%cl
    82cb:	d3 e2                	shl    %cl,%edx
    82cd:	31 da                	xor    %ebx,%edx
    82cf:	88 14 07             	mov    %dl,(%edi,%eax,1)
    82d2:	40                   	inc    %eax
    82d3:	3b 45 c0             	cmp    -0x40(%ebp),%eax
    82d6:	75 e0                	jne    82b8 <bits_xe_read_bits+0x198>
    82d8:	89 34 24             	mov    %esi,(%esp)
    82db:	e8 00 7f 01 00       	call   201e0 <free>
    82e0:	8b 45 b8             	mov    -0x48(%ebp),%eax
    82e3:	83 c4 6c             	add    $0x6c,%esp
    82e6:	5b                   	pop    %ebx
    82e7:	5e                   	pop    %esi
    82e8:	5f                   	pop    %edi
    82e9:	5d                   	pop    %ebp
    82ea:	c3                   	ret    
    82eb:	90                   	nop
    82ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    82f0:	8b 75 14             	mov    0x14(%ebp),%esi
    82f3:	e9 a9 fe ff ff       	jmp    81a1 <bits_xe_read_bits+0x81>
    82f8:	c7 45 b8 f2 ff ff ff 	movl   $0xfffffff2,-0x48(%ebp)
    82ff:	90                   	nop
    8300:	80 7d cb 00          	cmpb   $0x0,-0x35(%ebp)
    8304:	75 d2                	jne    82d8 <bits_xe_read_bits+0x1b8>
    8306:	8b 45 b8             	mov    -0x48(%ebp),%eax
    8309:	83 c4 6c             	add    $0x6c,%esp
    830c:	5b                   	pop    %ebx
    830d:	5e                   	pop    %esi
    830e:	5f                   	pop    %edi
    830f:	5d                   	pop    %ebp
    8310:	c3                   	ret    
    8311:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8318:	31 db                	xor    %ebx,%ebx
    831a:	8a 4d cc             	mov    -0x34(%ebp),%cl
    831d:	8a 5c 06 01          	mov    0x1(%esi,%eax,1),%bl
    8321:	31 d2                	xor    %edx,%edx
    8323:	d3 e3                	shl    %cl,%ebx
    8325:	8a 14 06             	mov    (%esi,%eax,1),%dl
    8328:	8a 4d d0             	mov    -0x30(%ebp),%cl
    832b:	d3 fa                	sar    %cl,%edx
    832d:	31 da                	xor    %ebx,%edx
    832f:	88 14 07             	mov    %dl,(%edi,%eax,1)
    8332:	40                   	inc    %eax
    8333:	3b 45 c0             	cmp    -0x40(%ebp),%eax
    8336:	75 e0                	jne    8318 <bits_xe_read_bits+0x1f8>
    8338:	eb 9e                	jmp    82d8 <bits_xe_read_bits+0x1b8>
    833a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8340:	39 c3                	cmp    %eax,%ebx
    8342:	0f 86 d2 fe ff ff    	jbe    821a <bits_xe_read_bits+0xfa>
    8348:	e9 c9 fe ff ff       	jmp    8216 <bits_xe_read_bits+0xf6>
    834d:	c7 45 b8 fe ff ff ff 	movl   $0xfffffffe,-0x48(%ebp)
    8354:	eb b0                	jmp    8306 <bits_xe_read_bits+0x1e6>
    8356:	e8 08 1a 00 00       	call   9d63 <bithenge_blob_read.part.1>
    835b:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    8362:	00 
    8363:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    836a:	00 
    836b:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    8372:	e8 39 25 02 00       	call   2a8b0 <assert_abort>
    8377:	89 f6                	mov    %esi,%esi
    8379:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00008380 <ascii_apply>:
    8380:	55                   	push   %ebp
    8381:	89 e5                	mov    %esp,%ebp
    8383:	56                   	push   %esi
    8384:	53                   	push   %ebx
    8385:	83 ec 40             	sub    $0x40,%esp
    8388:	8b 5d 10             	mov    0x10(%ebp),%ebx
    838b:	83 3b 05             	cmpl   $0x5,(%ebx)
    838e:	0f 85 b4 00 00 00    	jne    8448 <ascii_apply+0xc8>
    8394:	8b 43 08             	mov    0x8(%ebx),%eax
    8397:	85 c0                	test   %eax,%eax
    8399:	0f 84 f5 00 00 00    	je     8494 <ascii_apply+0x114>
    839f:	8d 55 e8             	lea    -0x18(%ebp),%edx
    83a2:	89 1c 24             	mov    %ebx,(%esp)
    83a5:	89 54 24 04          	mov    %edx,0x4(%esp)
    83a9:	ff 10                	call   *(%eax)
    83ab:	85 c0                	test   %eax,%eax
    83ad:	74 09                	je     83b8 <ascii_apply+0x38>
    83af:	83 c4 40             	add    $0x40,%esp
    83b2:	5b                   	pop    %ebx
    83b3:	5e                   	pop    %esi
    83b4:	5d                   	pop    %ebp
    83b5:	c3                   	ret    
    83b6:	66 90                	xchg   %ax,%ax
    83b8:	8b 45 e8             	mov    -0x18(%ebp),%eax
    83bb:	40                   	inc    %eax
    83bc:	89 04 24             	mov    %eax,(%esp)
    83bf:	e8 0c 7d 01 00       	call   200d0 <malloc>
    83c4:	89 c6                	mov    %eax,%esi
    83c6:	85 c0                	test   %eax,%eax
    83c8:	0f 84 bc 00 00 00    	je     848a <ascii_apply+0x10a>
    83ce:	8b 45 e8             	mov    -0x18(%ebp),%eax
    83d1:	8b 55 ec             	mov    -0x14(%ebp),%edx
    83d4:	89 45 f0             	mov    %eax,-0x10(%ebp)
    83d7:	8b 43 08             	mov    0x8(%ebx),%eax
    83da:	89 55 f4             	mov    %edx,-0xc(%ebp)
    83dd:	85 c0                	test   %eax,%eax
    83df:	0f 84 cb 00 00 00    	je     84b0 <ascii_apply+0x130>
    83e5:	8b 40 04             	mov    0x4(%eax),%eax
    83e8:	85 c0                	test   %eax,%eax
    83ea:	74 68                	je     8454 <ascii_apply+0xd4>
    83ec:	8d 55 f0             	lea    -0x10(%ebp),%edx
    83ef:	89 74 24 0c          	mov    %esi,0xc(%esp)
    83f3:	89 54 24 10          	mov    %edx,0x10(%esp)
    83f7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    83fe:	00 
    83ff:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8406:	00 
    8407:	89 1c 24             	mov    %ebx,(%esp)
    840a:	ff d0                	call   *%eax
    840c:	85 c0                	test   %eax,%eax
    840e:	75 50                	jne    8460 <ascii_apply+0xe0>
    8410:	8b 4d ec             	mov    -0x14(%ebp),%ecx
    8413:	8b 45 f4             	mov    -0xc(%ebp),%eax
    8416:	31 c8                	xor    %ecx,%eax
    8418:	8b 55 f0             	mov    -0x10(%ebp),%edx
    841b:	8b 4d e8             	mov    -0x18(%ebp),%ecx
    841e:	31 d1                	xor    %edx,%ecx
    8420:	09 c8                	or     %ecx,%eax
    8422:	75 54                	jne    8478 <ascii_apply+0xf8>
    8424:	8b 45 14             	mov    0x14(%ebp),%eax
    8427:	89 74 24 04          	mov    %esi,0x4(%esp)
    842b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
    8432:	00 
    8433:	89 04 24             	mov    %eax,(%esp)
    8436:	c6 04 16 00          	movb   $0x0,(%esi,%edx,1)
    843a:	e8 b1 25 00 00       	call   a9f0 <bithenge_new_string_node>
    843f:	83 c4 40             	add    $0x40,%esp
    8442:	5b                   	pop    %ebx
    8443:	5e                   	pop    %esi
    8444:	5d                   	pop    %ebp
    8445:	c3                   	ret    
    8446:	66 90                	xchg   %ax,%ax
    8448:	83 c4 40             	add    $0x40,%esp
    844b:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    8450:	5b                   	pop    %ebx
    8451:	5e                   	pop    %esi
    8452:	5d                   	pop    %ebp
    8453:	c3                   	ret    
    8454:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    8459:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8460:	89 34 24             	mov    %esi,(%esp)
    8463:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    8466:	e8 75 7d 01 00       	call   201e0 <free>
    846b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    846e:	e9 3c ff ff ff       	jmp    83af <ascii_apply+0x2f>
    8473:	90                   	nop
    8474:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8478:	89 34 24             	mov    %esi,(%esp)
    847b:	e8 60 7d 01 00       	call   201e0 <free>
    8480:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    8485:	e9 25 ff ff ff       	jmp    83af <ascii_apply+0x2f>
    848a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    848f:	e9 1b ff ff ff       	jmp    83af <ascii_apply+0x2f>
    8494:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    849b:	00 
    849c:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    84a3:	00 
    84a4:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    84ab:	e8 00 24 02 00       	call   2a8b0 <assert_abort>
    84b0:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    84b7:	00 
    84b8:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    84bf:	00 
    84c0:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    84c7:	e8 e4 23 02 00       	call   2a8b0 <assert_abort>
    84cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000084d0 <uint8_apply>:
    84d0:	55                   	push   %ebp
    84d1:	89 e5                	mov    %esp,%ebp
    84d3:	83 ec 38             	sub    $0x38,%esp
    84d6:	8b 45 10             	mov    0x10(%ebp),%eax
    84d9:	83 38 05             	cmpl   $0x5,(%eax)
    84dc:	75 72                	jne    8550 <uint8_apply+0x80>
    84de:	8b 50 08             	mov    0x8(%eax),%edx
    84e1:	c7 45 f0 02 00 00 00 	movl   $0x2,-0x10(%ebp)
    84e8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    84ef:	85 d2                	test   %edx,%edx
    84f1:	74 64                	je     8557 <uint8_apply+0x87>
    84f3:	8b 52 04             	mov    0x4(%edx),%edx
    84f6:	85 d2                	test   %edx,%edx
    84f8:	74 56                	je     8550 <uint8_apply+0x80>
    84fa:	8d 4d f0             	lea    -0x10(%ebp),%ecx
    84fd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    8504:	00 
    8505:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    8509:	8d 4d ec             	lea    -0x14(%ebp),%ecx
    850c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    8510:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8517:	00 
    8518:	89 04 24             	mov    %eax,(%esp)
    851b:	ff d2                	call   *%edx
    851d:	85 c0                	test   %eax,%eax
    851f:	75 27                	jne    8548 <uint8_apply+0x78>
    8521:	8b 45 f0             	mov    -0x10(%ebp),%eax
    8524:	83 f0 01             	xor    $0x1,%eax
    8527:	0b 45 f4             	or     -0xc(%ebp),%eax
    852a:	75 24                	jne    8550 <uint8_apply+0x80>
    852c:	31 c0                	xor    %eax,%eax
    852e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8535:	00 
    8536:	8a 45 ec             	mov    -0x14(%ebp),%al
    8539:	89 44 24 04          	mov    %eax,0x4(%esp)
    853d:	8b 45 14             	mov    0x14(%ebp),%eax
    8540:	89 04 24             	mov    %eax,(%esp)
    8543:	e8 38 24 00 00       	call   a980 <bithenge_new_integer_node>
    8548:	c9                   	leave  
    8549:	c3                   	ret    
    854a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8550:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    8555:	c9                   	leave  
    8556:	c3                   	ret    
    8557:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    855e:	00 
    855f:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    8566:	00 
    8567:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    856e:	e8 3d 23 02 00       	call   2a8b0 <assert_abort>
    8573:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8579:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00008580 <uint16be_apply>:
    8580:	55                   	push   %ebp
    8581:	89 e5                	mov    %esp,%ebp
    8583:	83 ec 38             	sub    $0x38,%esp
    8586:	8b 45 10             	mov    0x10(%ebp),%eax
    8589:	83 38 05             	cmpl   $0x5,(%eax)
    858c:	75 7a                	jne    8608 <uint16be_apply+0x88>
    858e:	8b 50 08             	mov    0x8(%eax),%edx
    8591:	c7 45 f0 03 00 00 00 	movl   $0x3,-0x10(%ebp)
    8598:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    859f:	85 d2                	test   %edx,%edx
    85a1:	74 6c                	je     860f <uint16be_apply+0x8f>
    85a3:	8b 52 04             	mov    0x4(%edx),%edx
    85a6:	85 d2                	test   %edx,%edx
    85a8:	74 5e                	je     8608 <uint16be_apply+0x88>
    85aa:	8d 4d f0             	lea    -0x10(%ebp),%ecx
    85ad:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    85b4:	00 
    85b5:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    85b9:	8d 4d ec             	lea    -0x14(%ebp),%ecx
    85bc:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    85c0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    85c7:	00 
    85c8:	89 04 24             	mov    %eax,(%esp)
    85cb:	ff d2                	call   *%edx
    85cd:	85 c0                	test   %eax,%eax
    85cf:	75 2e                	jne    85ff <uint16be_apply+0x7f>
    85d1:	8b 45 f0             	mov    -0x10(%ebp),%eax
    85d4:	83 f0 02             	xor    $0x2,%eax
    85d7:	0b 45 f4             	or     -0xc(%ebp),%eax
    85da:	75 2c                	jne    8608 <uint16be_apply+0x88>
    85dc:	8b 45 ec             	mov    -0x14(%ebp),%eax
    85df:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    85e6:	00 
    85e7:	66 c1 c0 08          	rol    $0x8,%ax
    85eb:	25 ff ff 00 00       	and    $0xffff,%eax
    85f0:	89 44 24 04          	mov    %eax,0x4(%esp)
    85f4:	8b 45 14             	mov    0x14(%ebp),%eax
    85f7:	89 04 24             	mov    %eax,(%esp)
    85fa:	e8 81 23 00 00       	call   a980 <bithenge_new_integer_node>
    85ff:	c9                   	leave  
    8600:	c3                   	ret    
    8601:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    8608:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    860d:	c9                   	leave  
    860e:	c3                   	ret    
    860f:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    8616:	00 
    8617:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    861e:	00 
    861f:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    8626:	e8 85 22 02 00       	call   2a8b0 <assert_abort>
    862b:	90                   	nop
    862c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00008630 <uint16le_apply>:
    8630:	55                   	push   %ebp
    8631:	89 e5                	mov    %esp,%ebp
    8633:	83 ec 38             	sub    $0x38,%esp
    8636:	8b 45 10             	mov    0x10(%ebp),%eax
    8639:	83 38 05             	cmpl   $0x5,(%eax)
    863c:	75 72                	jne    86b0 <uint16le_apply+0x80>
    863e:	8b 50 08             	mov    0x8(%eax),%edx
    8641:	c7 45 f0 03 00 00 00 	movl   $0x3,-0x10(%ebp)
    8648:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    864f:	85 d2                	test   %edx,%edx
    8651:	74 64                	je     86b7 <uint16le_apply+0x87>
    8653:	8b 52 04             	mov    0x4(%edx),%edx
    8656:	85 d2                	test   %edx,%edx
    8658:	74 56                	je     86b0 <uint16le_apply+0x80>
    865a:	8d 4d f0             	lea    -0x10(%ebp),%ecx
    865d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    8664:	00 
    8665:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    8669:	8d 4d ec             	lea    -0x14(%ebp),%ecx
    866c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    8670:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8677:	00 
    8678:	89 04 24             	mov    %eax,(%esp)
    867b:	ff d2                	call   *%edx
    867d:	85 c0                	test   %eax,%eax
    867f:	75 2a                	jne    86ab <uint16le_apply+0x7b>
    8681:	8b 45 f0             	mov    -0x10(%ebp),%eax
    8684:	83 f0 02             	xor    $0x2,%eax
    8687:	0b 45 f4             	or     -0xc(%ebp),%eax
    868a:	75 24                	jne    86b0 <uint16le_apply+0x80>
    868c:	8b 45 ec             	mov    -0x14(%ebp),%eax
    868f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8696:	00 
    8697:	25 ff ff 00 00       	and    $0xffff,%eax
    869c:	89 44 24 04          	mov    %eax,0x4(%esp)
    86a0:	8b 45 14             	mov    0x14(%ebp),%eax
    86a3:	89 04 24             	mov    %eax,(%esp)
    86a6:	e8 d5 22 00 00       	call   a980 <bithenge_new_integer_node>
    86ab:	c9                   	leave  
    86ac:	c3                   	ret    
    86ad:	8d 76 00             	lea    0x0(%esi),%esi
    86b0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    86b5:	c9                   	leave  
    86b6:	c3                   	ret    
    86b7:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    86be:	00 
    86bf:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    86c6:	00 
    86c7:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    86ce:	e8 dd 21 02 00       	call   2a8b0 <assert_abort>
    86d3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    86d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000086e0 <uint64be_apply>:
    86e0:	55                   	push   %ebp
    86e1:	89 e5                	mov    %esp,%ebp
    86e3:	83 ec 48             	sub    $0x48,%esp
    86e6:	8b 45 10             	mov    0x10(%ebp),%eax
    86e9:	83 38 05             	cmpl   $0x5,(%eax)
    86ec:	75 72                	jne    8760 <uint64be_apply+0x80>
    86ee:	8b 50 08             	mov    0x8(%eax),%edx
    86f1:	c7 45 e0 09 00 00 00 	movl   $0x9,-0x20(%ebp)
    86f8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    86ff:	85 d2                	test   %edx,%edx
    8701:	74 64                	je     8767 <uint64be_apply+0x87>
    8703:	8b 52 04             	mov    0x4(%edx),%edx
    8706:	85 d2                	test   %edx,%edx
    8708:	74 56                	je     8760 <uint64be_apply+0x80>
    870a:	8d 4d e0             	lea    -0x20(%ebp),%ecx
    870d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    8714:	00 
    8715:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    8719:	8d 4d e8             	lea    -0x18(%ebp),%ecx
    871c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    8720:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8727:	00 
    8728:	89 04 24             	mov    %eax,(%esp)
    872b:	ff d2                	call   *%edx
    872d:	85 c0                	test   %eax,%eax
    872f:	75 28                	jne    8759 <uint64be_apply+0x79>
    8731:	8b 45 e0             	mov    -0x20(%ebp),%eax
    8734:	83 f0 08             	xor    $0x8,%eax
    8737:	0b 45 e4             	or     -0x1c(%ebp),%eax
    873a:	75 24                	jne    8760 <uint64be_apply+0x80>
    873c:	8b 45 e8             	mov    -0x18(%ebp),%eax
    873f:	8b 55 ec             	mov    -0x14(%ebp),%edx
    8742:	0f c8                	bswap  %eax
    8744:	0f ca                	bswap  %edx
    8746:	89 44 24 08          	mov    %eax,0x8(%esp)
    874a:	8b 45 14             	mov    0x14(%ebp),%eax
    874d:	89 54 24 04          	mov    %edx,0x4(%esp)
    8751:	89 04 24             	mov    %eax,(%esp)
    8754:	e8 27 22 00 00       	call   a980 <bithenge_new_integer_node>
    8759:	c9                   	leave  
    875a:	c3                   	ret    
    875b:	90                   	nop
    875c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8760:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    8765:	c9                   	leave  
    8766:	c3                   	ret    
    8767:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    876e:	00 
    876f:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    8776:	00 
    8777:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    877e:	e8 2d 21 02 00       	call   2a8b0 <assert_abort>
    8783:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8789:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00008790 <uint64le_apply>:
    8790:	55                   	push   %ebp
    8791:	89 e5                	mov    %esp,%ebp
    8793:	83 ec 48             	sub    $0x48,%esp
    8796:	8b 45 10             	mov    0x10(%ebp),%eax
    8799:	83 38 05             	cmpl   $0x5,(%eax)
    879c:	75 6a                	jne    8808 <uint64le_apply+0x78>
    879e:	8b 50 08             	mov    0x8(%eax),%edx
    87a1:	c7 45 e0 09 00 00 00 	movl   $0x9,-0x20(%ebp)
    87a8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    87af:	85 d2                	test   %edx,%edx
    87b1:	74 5c                	je     880f <uint64le_apply+0x7f>
    87b3:	8b 52 04             	mov    0x4(%edx),%edx
    87b6:	85 d2                	test   %edx,%edx
    87b8:	74 4e                	je     8808 <uint64le_apply+0x78>
    87ba:	8d 4d e0             	lea    -0x20(%ebp),%ecx
    87bd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    87c4:	00 
    87c5:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    87c9:	8d 4d e8             	lea    -0x18(%ebp),%ecx
    87cc:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    87d0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    87d7:	00 
    87d8:	89 04 24             	mov    %eax,(%esp)
    87db:	ff d2                	call   *%edx
    87dd:	85 c0                	test   %eax,%eax
    87df:	75 24                	jne    8805 <uint64le_apply+0x75>
    87e1:	8b 45 e0             	mov    -0x20(%ebp),%eax
    87e4:	83 f0 08             	xor    $0x8,%eax
    87e7:	0b 45 e4             	or     -0x1c(%ebp),%eax
    87ea:	75 1c                	jne    8808 <uint64le_apply+0x78>
    87ec:	8b 45 e8             	mov    -0x18(%ebp),%eax
    87ef:	8b 55 ec             	mov    -0x14(%ebp),%edx
    87f2:	89 44 24 04          	mov    %eax,0x4(%esp)
    87f6:	8b 45 14             	mov    0x14(%ebp),%eax
    87f9:	89 54 24 08          	mov    %edx,0x8(%esp)
    87fd:	89 04 24             	mov    %eax,(%esp)
    8800:	e8 7b 21 00 00       	call   a980 <bithenge_new_integer_node>
    8805:	c9                   	leave  
    8806:	c3                   	ret    
    8807:	90                   	nop
    8808:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    880d:	c9                   	leave  
    880e:	c3                   	ret    
    880f:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    8816:	00 
    8817:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    881e:	00 
    881f:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    8826:	e8 85 20 02 00       	call   2a8b0 <assert_abort>
    882b:	90                   	nop
    882c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00008830 <uint32be_apply>:
    8830:	55                   	push   %ebp
    8831:	89 e5                	mov    %esp,%ebp
    8833:	83 ec 38             	sub    $0x38,%esp
    8836:	8b 45 10             	mov    0x10(%ebp),%eax
    8839:	83 38 05             	cmpl   $0x5,(%eax)
    883c:	75 72                	jne    88b0 <uint32be_apply+0x80>
    883e:	8b 50 08             	mov    0x8(%eax),%edx
    8841:	c7 45 e8 05 00 00 00 	movl   $0x5,-0x18(%ebp)
    8848:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    884f:	85 d2                	test   %edx,%edx
    8851:	74 64                	je     88b7 <uint32be_apply+0x87>
    8853:	8b 52 04             	mov    0x4(%edx),%edx
    8856:	85 d2                	test   %edx,%edx
    8858:	74 56                	je     88b0 <uint32be_apply+0x80>
    885a:	8d 4d e8             	lea    -0x18(%ebp),%ecx
    885d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    8864:	00 
    8865:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    8869:	8d 4d f0             	lea    -0x10(%ebp),%ecx
    886c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    8870:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8877:	00 
    8878:	89 04 24             	mov    %eax,(%esp)
    887b:	ff d2                	call   *%edx
    887d:	85 c0                	test   %eax,%eax
    887f:	75 27                	jne    88a8 <uint32be_apply+0x78>
    8881:	8b 45 e8             	mov    -0x18(%ebp),%eax
    8884:	83 f0 04             	xor    $0x4,%eax
    8887:	0b 45 ec             	or     -0x14(%ebp),%eax
    888a:	75 24                	jne    88b0 <uint32be_apply+0x80>
    888c:	8b 45 f0             	mov    -0x10(%ebp),%eax
    888f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8896:	00 
    8897:	0f c8                	bswap  %eax
    8899:	89 44 24 04          	mov    %eax,0x4(%esp)
    889d:	8b 45 14             	mov    0x14(%ebp),%eax
    88a0:	89 04 24             	mov    %eax,(%esp)
    88a3:	e8 d8 20 00 00       	call   a980 <bithenge_new_integer_node>
    88a8:	c9                   	leave  
    88a9:	c3                   	ret    
    88aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    88b0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    88b5:	c9                   	leave  
    88b6:	c3                   	ret    
    88b7:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    88be:	00 
    88bf:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    88c6:	00 
    88c7:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    88ce:	e8 dd 1f 02 00       	call   2a8b0 <assert_abort>
    88d3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    88d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000088e0 <uint32le_apply>:
    88e0:	55                   	push   %ebp
    88e1:	89 e5                	mov    %esp,%ebp
    88e3:	83 ec 38             	sub    $0x38,%esp
    88e6:	8b 45 10             	mov    0x10(%ebp),%eax
    88e9:	83 38 05             	cmpl   $0x5,(%eax)
    88ec:	75 6a                	jne    8958 <uint32le_apply+0x78>
    88ee:	8b 50 08             	mov    0x8(%eax),%edx
    88f1:	c7 45 e8 05 00 00 00 	movl   $0x5,-0x18(%ebp)
    88f8:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    88ff:	85 d2                	test   %edx,%edx
    8901:	74 5c                	je     895f <uint32le_apply+0x7f>
    8903:	8b 52 04             	mov    0x4(%edx),%edx
    8906:	85 d2                	test   %edx,%edx
    8908:	74 4e                	je     8958 <uint32le_apply+0x78>
    890a:	8d 4d e8             	lea    -0x18(%ebp),%ecx
    890d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    8914:	00 
    8915:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    8919:	8d 4d f0             	lea    -0x10(%ebp),%ecx
    891c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    8920:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8927:	00 
    8928:	89 04 24             	mov    %eax,(%esp)
    892b:	ff d2                	call   *%edx
    892d:	85 c0                	test   %eax,%eax
    892f:	75 25                	jne    8956 <uint32le_apply+0x76>
    8931:	8b 45 e8             	mov    -0x18(%ebp),%eax
    8934:	83 f0 04             	xor    $0x4,%eax
    8937:	0b 45 ec             	or     -0x14(%ebp),%eax
    893a:	75 1c                	jne    8958 <uint32le_apply+0x78>
    893c:	8b 45 f0             	mov    -0x10(%ebp),%eax
    893f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8946:	00 
    8947:	89 44 24 04          	mov    %eax,0x4(%esp)
    894b:	8b 45 14             	mov    0x14(%ebp),%eax
    894e:	89 04 24             	mov    %eax,(%esp)
    8951:	e8 2a 20 00 00       	call   a980 <bithenge_new_integer_node>
    8956:	c9                   	leave  
    8957:	c3                   	ret    
    8958:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    895d:	c9                   	leave  
    895e:	c3                   	ret    
    895f:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    8966:	00 
    8967:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    896e:	00 
    896f:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    8976:	e8 35 1f 02 00       	call   2a8b0 <assert_abort>
    897b:	90                   	nop
    897c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00008980 <uint_xe_prefix_apply>:
    8980:	55                   	push   %ebp
    8981:	89 e5                	mov    %esp,%ebp
    8983:	57                   	push   %edi
    8984:	56                   	push   %esi
    8985:	53                   	push   %ebx
    8986:	83 ec 5c             	sub    $0x5c,%esp
    8989:	8b 45 0c             	mov    0xc(%ebp),%eax
    898c:	85 c0                	test   %eax,%eax
    898e:	75 13                	jne    89a3 <uint_xe_prefix_apply+0x23>
    8990:	e9 3a 02 00 00       	jmp    8bcf <uint_xe_prefix_apply+0x24f>
    8995:	8d 76 00             	lea    0x0(%esi),%esi
    8998:	8b 40 04             	mov    0x4(%eax),%eax
    899b:	85 c0                	test   %eax,%eax
    899d:	0f 84 2c 02 00 00    	je     8bcf <uint_xe_prefix_apply+0x24f>
    89a3:	8b 50 10             	mov    0x10(%eax),%edx
    89a6:	85 d2                	test   %edx,%edx
    89a8:	74 ee                	je     8998 <uint_xe_prefix_apply+0x18>
    89aa:	85 d2                	test   %edx,%edx
    89ac:	0f 8e 39 02 00 00    	jle    8beb <uint_xe_prefix_apply+0x26b>
    89b2:	8b 40 14             	mov    0x14(%eax),%eax
    89b5:	8b 00                	mov    (%eax),%eax
    89b7:	85 c0                	test   %eax,%eax
    89b9:	0f 84 69 02 00 00    	je     8c28 <uint_xe_prefix_apply+0x2a8>
    89bf:	8b 50 04             	mov    0x4(%eax),%edx
    89c2:	42                   	inc    %edx
    89c3:	83 38 03             	cmpl   $0x3,(%eax)
    89c6:	89 50 04             	mov    %edx,0x4(%eax)
    89c9:	0f 85 df 01 00 00    	jne    8bae <uint_xe_prefix_apply+0x22e>
    89cf:	8b 50 08             	mov    0x8(%eax),%edx
    89d2:	8b 48 0c             	mov    0xc(%eax),%ecx
    89d5:	89 04 24             	mov    %eax,(%esp)
    89d8:	89 55 c8             	mov    %edx,-0x38(%ebp)
    89db:	89 4d cc             	mov    %ecx,-0x34(%ebp)
    89de:	e8 dd 18 00 00       	call   a2c0 <bithenge_node_dec_ref>
    89e3:	8b 45 cc             	mov    -0x34(%ebp),%eax
    89e6:	85 c0                	test   %eax,%eax
    89e8:	0f 88 b3 01 00 00    	js     8ba1 <uint_xe_prefix_apply+0x221>
    89ee:	8b 5d c8             	mov    -0x38(%ebp),%ebx
    89f1:	83 fb 3f             	cmp    $0x3f,%ebx
    89f4:	0f 87 a7 01 00 00    	ja     8ba1 <uint_xe_prefix_apply+0x221>
    89fa:	8b 75 cc             	mov    -0x34(%ebp),%esi
    89fd:	8b 45 10             	mov    0x10(%ebp),%eax
    8a00:	89 5d b8             	mov    %ebx,-0x48(%ebp)
    8a03:	89 5d d8             	mov    %ebx,-0x28(%ebp)
    8a06:	89 75 dc             	mov    %esi,-0x24(%ebp)
    8a09:	85 c0                	test   %eax,%eax
    8a0b:	0f 84 df 01 00 00    	je     8bf0 <uint_xe_prefix_apply+0x270>
    8a11:	8b 55 10             	mov    0x10(%ebp),%edx
    8a14:	8b 42 08             	mov    0x8(%edx),%eax
    8a17:	85 c0                	test   %eax,%eax
    8a19:	0f 84 ed 01 00 00    	je     8c0c <uint_xe_prefix_apply+0x28c>
    8a1f:	8b 40 08             	mov    0x8(%eax),%eax
    8a22:	85 c0                	test   %eax,%eax
    8a24:	0f 84 77 01 00 00    	je     8ba1 <uint_xe_prefix_apply+0x221>
    8a2a:	81 7d 08 b0 02 03 00 	cmpl   $0x302b0,0x8(%ebp)
    8a31:	0f 94 45 c3          	sete   -0x3d(%ebp)
    8a35:	31 c9                	xor    %ecx,%ecx
    8a37:	8d 7d e0             	lea    -0x20(%ebp),%edi
    8a3a:	8a 4d c3             	mov    -0x3d(%ebp),%cl
    8a3d:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    8a41:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    8a45:	8d 4d d8             	lea    -0x28(%ebp),%ecx
    8a48:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    8a4c:	8b 4d 10             	mov    0x10(%ebp),%ecx
    8a4f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    8a56:	00 
    8a57:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8a5e:	00 
    8a5f:	89 0c 24             	mov    %ecx,(%esp)
    8a62:	ff d0                	call   *%eax
    8a64:	85 c0                	test   %eax,%eax
    8a66:	0f 85 bf 00 00 00    	jne    8b2b <uint_xe_prefix_apply+0x1ab>
    8a6c:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    8a6f:	8b 45 d8             	mov    -0x28(%ebp),%eax
    8a72:	31 f1                	xor    %esi,%ecx
    8a74:	31 d8                	xor    %ebx,%eax
    8a76:	09 c1                	or     %eax,%ecx
    8a78:	0f 85 23 01 00 00    	jne    8ba1 <uint_xe_prefix_apply+0x221>
    8a7e:	8b 45 18             	mov    0x18(%ebp),%eax
    8a81:	85 c0                	test   %eax,%eax
    8a83:	74 0b                	je     8a90 <uint_xe_prefix_apply+0x110>
    8a85:	8b 45 18             	mov    0x18(%ebp),%eax
    8a88:	8b 55 b8             	mov    -0x48(%ebp),%edx
    8a8b:	89 10                	mov    %edx,(%eax)
    8a8d:	89 70 04             	mov    %esi,0x4(%eax)
    8a90:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    8a93:	8b 55 c8             	mov    -0x38(%ebp),%edx
    8a96:	0f ac ca 03          	shrd   $0x3,%ecx,%edx
    8a9a:	c1 f9 03             	sar    $0x3,%ecx
    8a9d:	89 55 b8             	mov    %edx,-0x48(%ebp)
    8aa0:	89 4d bc             	mov    %ecx,-0x44(%ebp)
    8aa3:	80 7d c3 00          	cmpb   $0x0,-0x3d(%ebp)
    8aa7:	0f 84 86 00 00 00    	je     8b33 <uint_xe_prefix_apply+0x1b3>
    8aad:	8b 4d bc             	mov    -0x44(%ebp),%ecx
    8ab0:	0b 4d b8             	or     -0x48(%ebp),%ecx
    8ab3:	0f 84 07 01 00 00    	je     8bc0 <uint_xe_prefix_apply+0x240>
    8ab9:	31 c0                	xor    %eax,%eax
    8abb:	31 d2                	xor    %edx,%edx
    8abd:	8b 5d b8             	mov    -0x48(%ebp),%ebx
    8ac0:	31 f6                	xor    %esi,%esi
    8ac2:	89 45 d0             	mov    %eax,-0x30(%ebp)
    8ac5:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    8ac8:	31 c0                	xor    %eax,%eax
    8aca:	8d 0c f5 00 00 00 00 	lea    0x0(,%esi,8),%ecx
    8ad1:	8a 04 37             	mov    (%edi,%esi,1),%al
    8ad4:	d3 e0                	shl    %cl,%eax
    8ad6:	89 c2                	mov    %eax,%edx
    8ad8:	c1 fa 1f             	sar    $0x1f,%edx
    8adb:	01 45 d0             	add    %eax,-0x30(%ebp)
    8ade:	11 55 d4             	adc    %edx,-0x2c(%ebp)
    8ae1:	46                   	inc    %esi
    8ae2:	39 de                	cmp    %ebx,%esi
    8ae4:	75 e2                	jne    8ac8 <uint_xe_prefix_apply+0x148>
    8ae6:	8b 45 d0             	mov    -0x30(%ebp),%eax
    8ae9:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    8aec:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    8aef:	83 e1 07             	and    $0x7,%ecx
    8af2:	74 24                	je     8b18 <uint_xe_prefix_apply+0x198>
    8af4:	8b 75 b8             	mov    -0x48(%ebp),%esi
    8af7:	bb 01 00 00 00       	mov    $0x1,%ebx
    8afc:	01 f7                	add    %esi,%edi
    8afe:	d3 e3                	shl    %cl,%ebx
    8b00:	31 c9                	xor    %ecx,%ecx
    8b02:	4b                   	dec    %ebx
    8b03:	8a 0f                	mov    (%edi),%cl
    8b05:	21 cb                	and    %ecx,%ebx
    8b07:	8b 4d b8             	mov    -0x48(%ebp),%ecx
    8b0a:	c1 e1 03             	shl    $0x3,%ecx
    8b0d:	d3 e3                	shl    %cl,%ebx
    8b0f:	89 d9                	mov    %ebx,%ecx
    8b11:	c1 fb 1f             	sar    $0x1f,%ebx
    8b14:	01 c8                	add    %ecx,%eax
    8b16:	11 da                	adc    %ebx,%edx
    8b18:	89 44 24 04          	mov    %eax,0x4(%esp)
    8b1c:	8b 45 14             	mov    0x14(%ebp),%eax
    8b1f:	89 54 24 08          	mov    %edx,0x8(%esp)
    8b23:	89 04 24             	mov    %eax,(%esp)
    8b26:	e8 55 1e 00 00       	call   a980 <bithenge_new_integer_node>
    8b2b:	83 c4 5c             	add    $0x5c,%esp
    8b2e:	5b                   	pop    %ebx
    8b2f:	5e                   	pop    %esi
    8b30:	5f                   	pop    %edi
    8b31:	5d                   	pop    %ebp
    8b32:	c3                   	ret    
    8b33:	09 d1                	or     %edx,%ecx
    8b35:	0f 84 8e 00 00 00    	je     8bc9 <uint_xe_prefix_apply+0x249>
    8b3b:	8b 45 b8             	mov    -0x48(%ebp),%eax
    8b3e:	31 d2                	xor    %edx,%edx
    8b40:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    8b43:	31 c0                	xor    %eax,%eax
    8b45:	31 f6                	xor    %esi,%esi
    8b47:	83 eb 08             	sub    $0x8,%ebx
    8b4a:	89 45 d0             	mov    %eax,-0x30(%ebp)
    8b4d:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    8b50:	8d 14 f5 00 00 00 00 	lea    0x0(,%esi,8),%edx
    8b57:	31 c0                	xor    %eax,%eax
    8b59:	89 d9                	mov    %ebx,%ecx
    8b5b:	8a 04 37             	mov    (%edi,%esi,1),%al
    8b5e:	29 d1                	sub    %edx,%ecx
    8b60:	d3 e0                	shl    %cl,%eax
    8b62:	89 c2                	mov    %eax,%edx
    8b64:	c1 fa 1f             	sar    $0x1f,%edx
    8b67:	01 45 d0             	add    %eax,-0x30(%ebp)
    8b6a:	11 55 d4             	adc    %edx,-0x2c(%ebp)
    8b6d:	46                   	inc    %esi
    8b6e:	3b 75 c4             	cmp    -0x3c(%ebp),%esi
    8b71:	75 dd                	jne    8b50 <uint_xe_prefix_apply+0x1d0>
    8b73:	8b 45 d0             	mov    -0x30(%ebp),%eax
    8b76:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    8b79:	8b 75 c8             	mov    -0x38(%ebp),%esi
    8b7c:	83 e6 07             	and    $0x7,%esi
    8b7f:	74 97                	je     8b18 <uint_xe_prefix_apply+0x198>
    8b81:	8b 5d b8             	mov    -0x48(%ebp),%ebx
    8b84:	b9 08 00 00 00       	mov    $0x8,%ecx
    8b89:	01 df                	add    %ebx,%edi
    8b8b:	31 db                	xor    %ebx,%ebx
    8b8d:	29 f1                	sub    %esi,%ecx
    8b8f:	8a 1f                	mov    (%edi),%bl
    8b91:	d3 fb                	sar    %cl,%ebx
    8b93:	89 d9                	mov    %ebx,%ecx
    8b95:	c1 fb 1f             	sar    $0x1f,%ebx
    8b98:	01 c8                	add    %ecx,%eax
    8b9a:	11 da                	adc    %ebx,%edx
    8b9c:	e9 77 ff ff ff       	jmp    8b18 <uint_xe_prefix_apply+0x198>
    8ba1:	83 c4 5c             	add    $0x5c,%esp
    8ba4:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    8ba9:	5b                   	pop    %ebx
    8baa:	5e                   	pop    %esi
    8bab:	5f                   	pop    %edi
    8bac:	5d                   	pop    %ebp
    8bad:	c3                   	ret    
    8bae:	89 04 24             	mov    %eax,(%esp)
    8bb1:	e8 0a 17 00 00       	call   a2c0 <bithenge_node_dec_ref>
    8bb6:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    8bbb:	e9 6b ff ff ff       	jmp    8b2b <uint_xe_prefix_apply+0x1ab>
    8bc0:	31 c0                	xor    %eax,%eax
    8bc2:	31 d2                	xor    %edx,%edx
    8bc4:	e9 23 ff ff ff       	jmp    8aec <uint_xe_prefix_apply+0x16c>
    8bc9:	31 c0                	xor    %eax,%eax
    8bcb:	31 d2                	xor    %edx,%edx
    8bcd:	eb aa                	jmp    8b79 <uint_xe_prefix_apply+0x1f9>
    8bcf:	c7 44 24 08 96 01 00 	movl   $0x196,0x8(%esp)
    8bd6:	00 
    8bd7:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    8bde:	00 
    8bdf:	c7 04 24 1a d1 02 00 	movl   $0x2d11a,(%esp)
    8be6:	e8 c5 1c 02 00       	call   2a8b0 <assert_abort>
    8beb:	e8 1d 12 00 00       	call   9e0d <bithenge_scope_get_param.part.13>
    8bf0:	c7 44 24 08 b2 00 00 	movl   $0xb2,0x8(%esp)
    8bf7:	00 
    8bf8:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    8bff:	00 
    8c00:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    8c07:	e8 a4 1c 02 00       	call   2a8b0 <assert_abort>
    8c0c:	c7 44 24 08 b3 00 00 	movl   $0xb3,0x8(%esp)
    8c13:	00 
    8c14:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    8c1b:	00 
    8c1c:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    8c23:	e8 88 1c 02 00       	call   2a8b0 <assert_abort>
    8c28:	e8 9c 11 00 00       	call   9dc9 <bithenge_node_inc_ref.part.4>
    8c2d:	8d 76 00             	lea    0x0(%esi),%esi

00008c30 <known_length_apply>:
    8c30:	55                   	push   %ebp
    8c31:	89 e5                	mov    %esp,%ebp
    8c33:	57                   	push   %edi
    8c34:	56                   	push   %esi
    8c35:	53                   	push   %ebx
    8c36:	83 ec 2c             	sub    $0x2c,%esp
    8c39:	8b 45 0c             	mov    0xc(%ebp),%eax
    8c3c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    8c3f:	85 c0                	test   %eax,%eax
    8c41:	75 10                	jne    8c53 <known_length_apply+0x23>
    8c43:	e9 9b 00 00 00       	jmp    8ce3 <known_length_apply+0xb3>
    8c48:	8b 40 04             	mov    0x4(%eax),%eax
    8c4b:	85 c0                	test   %eax,%eax
    8c4d:	0f 84 90 00 00 00    	je     8ce3 <known_length_apply+0xb3>
    8c53:	8b 50 10             	mov    0x10(%eax),%edx
    8c56:	85 d2                	test   %edx,%edx
    8c58:	74 ee                	je     8c48 <known_length_apply+0x18>
    8c5a:	85 d2                	test   %edx,%edx
    8c5c:	0f 8e be 00 00 00    	jle    8d20 <known_length_apply+0xf0>
    8c62:	8b 40 14             	mov    0x14(%eax),%eax
    8c65:	8b 00                	mov    (%eax),%eax
    8c67:	85 c0                	test   %eax,%eax
    8c69:	0f 84 ac 00 00 00    	je     8d1b <known_length_apply+0xeb>
    8c6f:	8b 70 04             	mov    0x4(%eax),%esi
    8c72:	46                   	inc    %esi
    8c73:	83 38 03             	cmpl   $0x3,(%eax)
    8c76:	89 70 04             	mov    %esi,0x4(%eax)
    8c79:	75 59                	jne    8cd4 <known_length_apply+0xa4>
    8c7b:	8b 70 08             	mov    0x8(%eax),%esi
    8c7e:	8b 78 0c             	mov    0xc(%eax),%edi
    8c81:	89 04 24             	mov    %eax,(%esp)
    8c84:	e8 37 16 00 00       	call   a2c0 <bithenge_node_dec_ref>
    8c89:	83 3b 05             	cmpl   $0x5,(%ebx)
    8c8c:	75 39                	jne    8cc7 <known_length_apply+0x97>
    8c8e:	8b 43 08             	mov    0x8(%ebx),%eax
    8c91:	85 c0                	test   %eax,%eax
    8c93:	74 6a                	je     8cff <known_length_apply+0xcf>
    8c95:	8d 55 e0             	lea    -0x20(%ebp),%edx
    8c98:	89 1c 24             	mov    %ebx,(%esp)
    8c9b:	89 54 24 04          	mov    %edx,0x4(%esp)
    8c9f:	ff 10                	call   *(%eax)
    8ca1:	85 c0                	test   %eax,%eax
    8ca3:	75 1a                	jne    8cbf <known_length_apply+0x8f>
    8ca5:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    8ca8:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    8cab:	31 d7                	xor    %edx,%edi
    8cad:	31 ce                	xor    %ecx,%esi
    8caf:	09 f7                	or     %esi,%edi
    8cb1:	75 14                	jne    8cc7 <known_length_apply+0x97>
    8cb3:	8b 4b 04             	mov    0x4(%ebx),%ecx
    8cb6:	8b 55 14             	mov    0x14(%ebp),%edx
    8cb9:	41                   	inc    %ecx
    8cba:	89 4b 04             	mov    %ecx,0x4(%ebx)
    8cbd:	89 1a                	mov    %ebx,(%edx)
    8cbf:	83 c4 2c             	add    $0x2c,%esp
    8cc2:	5b                   	pop    %ebx
    8cc3:	5e                   	pop    %esi
    8cc4:	5f                   	pop    %edi
    8cc5:	5d                   	pop    %ebp
    8cc6:	c3                   	ret    
    8cc7:	83 c4 2c             	add    $0x2c,%esp
    8cca:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    8ccf:	5b                   	pop    %ebx
    8cd0:	5e                   	pop    %esi
    8cd1:	5f                   	pop    %edi
    8cd2:	5d                   	pop    %ebp
    8cd3:	c3                   	ret    
    8cd4:	89 04 24             	mov    %eax,(%esp)
    8cd7:	e8 e4 15 00 00       	call   a2c0 <bithenge_node_dec_ref>
    8cdc:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    8ce1:	eb dc                	jmp    8cbf <known_length_apply+0x8f>
    8ce3:	c7 44 24 08 96 01 00 	movl   $0x196,0x8(%esp)
    8cea:	00 
    8ceb:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    8cf2:	00 
    8cf3:	c7 04 24 1a d1 02 00 	movl   $0x2d11a,(%esp)
    8cfa:	e8 b1 1b 02 00       	call   2a8b0 <assert_abort>
    8cff:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    8d06:	00 
    8d07:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    8d0e:	00 
    8d0f:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    8d16:	e8 95 1b 02 00       	call   2a8b0 <assert_abort>
    8d1b:	e8 a9 10 00 00       	call   9dc9 <bithenge_node_inc_ref.part.4>
    8d20:	e8 e8 10 00 00       	call   9e0d <bithenge_scope_get_param.part.13>
    8d25:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    8d29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00008d30 <zero_terminated_apply>:
    8d30:	55                   	push   %ebp
    8d31:	89 e5                	mov    %esp,%ebp
    8d33:	56                   	push   %esi
    8d34:	53                   	push   %ebx
    8d35:	83 ec 40             	sub    $0x40,%esp
    8d38:	8b 5d 10             	mov    0x10(%ebp),%ebx
    8d3b:	83 3b 05             	cmpl   $0x5,(%ebx)
    8d3e:	0f 85 cc 00 00 00    	jne    8e10 <zero_terminated_apply+0xe0>
    8d44:	8b 43 08             	mov    0x8(%ebx),%eax
    8d47:	85 c0                	test   %eax,%eax
    8d49:	0f 84 cd 00 00 00    	je     8e1c <zero_terminated_apply+0xec>
    8d4f:	8d 55 e8             	lea    -0x18(%ebp),%edx
    8d52:	89 1c 24             	mov    %ebx,(%esp)
    8d55:	89 54 24 04          	mov    %edx,0x4(%esp)
    8d59:	ff 10                	call   *(%eax)
    8d5b:	85 c0                	test   %eax,%eax
    8d5d:	0f 85 a0 00 00 00    	jne    8e03 <zero_terminated_apply+0xd3>
    8d63:	8b 55 ec             	mov    -0x14(%ebp),%edx
    8d66:	8b 45 e8             	mov    -0x18(%ebp),%eax
    8d69:	89 d1                	mov    %edx,%ecx
    8d6b:	09 c1                	or     %eax,%ecx
    8d6d:	0f 84 9d 00 00 00    	je     8e10 <zero_terminated_apply+0xe0>
    8d73:	83 c0 ff             	add    $0xffffffff,%eax
    8d76:	8b 4b 08             	mov    0x8(%ebx),%ecx
    8d79:	83 d2 ff             	adc    $0xffffffff,%edx
    8d7c:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
    8d83:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
    8d8a:	85 c9                	test   %ecx,%ecx
    8d8c:	0f 84 a6 00 00 00    	je     8e38 <zero_terminated_apply+0x108>
    8d92:	8b 49 04             	mov    0x4(%ecx),%ecx
    8d95:	85 c9                	test   %ecx,%ecx
    8d97:	74 77                	je     8e10 <zero_terminated_apply+0xe0>
    8d99:	8d 75 f0             	lea    -0x10(%ebp),%esi
    8d9c:	89 44 24 04          	mov    %eax,0x4(%esp)
    8da0:	89 74 24 10          	mov    %esi,0x10(%esp)
    8da4:	8d 75 e4             	lea    -0x1c(%ebp),%esi
    8da7:	89 74 24 0c          	mov    %esi,0xc(%esp)
    8dab:	89 54 24 08          	mov    %edx,0x8(%esp)
    8daf:	89 1c 24             	mov    %ebx,(%esp)
    8db2:	ff d1                	call   *%ecx
    8db4:	85 c0                	test   %eax,%eax
    8db6:	75 4b                	jne    8e03 <zero_terminated_apply+0xd3>
    8db8:	8b 45 f0             	mov    -0x10(%ebp),%eax
    8dbb:	83 f0 01             	xor    $0x1,%eax
    8dbe:	0b 45 f4             	or     -0xc(%ebp),%eax
    8dc1:	75 4d                	jne    8e10 <zero_terminated_apply+0xe0>
    8dc3:	80 7d e4 00          	cmpb   $0x0,-0x1c(%ebp)
    8dc7:	75 47                	jne    8e10 <zero_terminated_apply+0xe0>
    8dc9:	8b 43 04             	mov    0x4(%ebx),%eax
    8dcc:	8b 55 ec             	mov    -0x14(%ebp),%edx
    8dcf:	40                   	inc    %eax
    8dd0:	89 43 04             	mov    %eax,0x4(%ebx)
    8dd3:	8b 45 e8             	mov    -0x18(%ebp),%eax
    8dd6:	83 c0 ff             	add    $0xffffffff,%eax
    8dd9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8de0:	00 
    8de1:	83 d2 ff             	adc    $0xffffffff,%edx
    8de4:	89 44 24 10          	mov    %eax,0x10(%esp)
    8de8:	8b 45 14             	mov    0x14(%ebp),%eax
    8deb:	89 54 24 14          	mov    %edx,0x14(%esp)
    8def:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    8df6:	00 
    8df7:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    8dfb:	89 04 24             	mov    %eax,(%esp)
    8dfe:	e8 ed 2b 00 00       	call   b9f0 <bithenge_new_subblob>
    8e03:	83 c4 40             	add    $0x40,%esp
    8e06:	5b                   	pop    %ebx
    8e07:	5e                   	pop    %esi
    8e08:	5d                   	pop    %ebp
    8e09:	c3                   	ret    
    8e0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8e10:	83 c4 40             	add    $0x40,%esp
    8e13:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    8e18:	5b                   	pop    %ebx
    8e19:	5e                   	pop    %esi
    8e1a:	5d                   	pop    %ebp
    8e1b:	c3                   	ret    
    8e1c:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    8e23:	00 
    8e24:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    8e2b:	00 
    8e2c:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    8e33:	e8 78 1a 02 00       	call   2a8b0 <assert_abort>
    8e38:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    8e3f:	00 
    8e40:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    8e47:	00 
    8e48:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    8e4f:	e8 5c 1a 02 00       	call   2a8b0 <assert_abort>
    8e54:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    8e5a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00008e60 <bithenge_transform_prefix_apply.part.9>:
    8e60:	55                   	push   %ebp
    8e61:	89 e5                	mov    %esp,%ebp
    8e63:	57                   	push   %edi
    8e64:	56                   	push   %esi
    8e65:	53                   	push   %ebx
    8e66:	83 ec 4c             	sub    $0x4c,%esp
    8e69:	89 c3                	mov    %eax,%ebx
    8e6b:	85 c0                	test   %eax,%eax
    8e6d:	0f 84 2f 01 00 00    	je     8fa2 <bithenge_transform_prefix_apply.part.9+0x142>
    8e73:	8b 00                	mov    (%eax),%eax
    8e75:	85 c0                	test   %eax,%eax
    8e77:	0f 84 41 01 00 00    	je     8fbe <bithenge_transform_prefix_apply.part.9+0x15e>
    8e7d:	89 d6                	mov    %edx,%esi
    8e7f:	8b 50 04             	mov    0x4(%eax),%edx
    8e82:	89 cf                	mov    %ecx,%edi
    8e84:	85 d2                	test   %edx,%edx
    8e86:	74 20                	je     8ea8 <bithenge_transform_prefix_apply.part.9+0x48>
    8e88:	8d 45 e0             	lea    -0x20(%ebp),%eax
    8e8b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    8e8f:	89 44 24 0c          	mov    %eax,0xc(%esp)
    8e93:	89 74 24 04          	mov    %esi,0x4(%esp)
    8e97:	89 1c 24             	mov    %ebx,(%esp)
    8e9a:	ff d2                	call   *%edx
    8e9c:	85 c0                	test   %eax,%eax
    8e9e:	74 3d                	je     8edd <bithenge_transform_prefix_apply.part.9+0x7d>
    8ea0:	83 c4 4c             	add    $0x4c,%esp
    8ea3:	5b                   	pop    %ebx
    8ea4:	5e                   	pop    %esi
    8ea5:	5f                   	pop    %edi
    8ea6:	5d                   	pop    %ebp
    8ea7:	c3                   	ret    
    8ea8:	8b 40 08             	mov    0x8(%eax),%eax
    8eab:	85 c0                	test   %eax,%eax
    8ead:	0f 84 e5 00 00 00    	je     8f98 <bithenge_transform_prefix_apply.part.9+0x138>
    8eb3:	8d 55 e0             	lea    -0x20(%ebp),%edx
    8eb6:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    8eba:	89 54 24 10          	mov    %edx,0x10(%esp)
    8ebe:	8d 55 dc             	lea    -0x24(%ebp),%edx
    8ec1:	89 54 24 0c          	mov    %edx,0xc(%esp)
    8ec5:	89 74 24 04          	mov    %esi,0x4(%esp)
    8ec9:	89 1c 24             	mov    %ebx,(%esp)
    8ecc:	ff d0                	call   *%eax
    8ece:	85 c0                	test   %eax,%eax
    8ed0:	75 ce                	jne    8ea0 <bithenge_transform_prefix_apply.part.9+0x40>
    8ed2:	8b 45 dc             	mov    -0x24(%ebp),%eax
    8ed5:	89 04 24             	mov    %eax,(%esp)
    8ed8:	e8 e3 13 00 00       	call   a2c0 <bithenge_node_dec_ref>
    8edd:	85 ff                	test   %edi,%edi
    8edf:	0f 84 f5 00 00 00    	je     8fda <bithenge_transform_prefix_apply.part.9+0x17a>
    8ee5:	8b 47 04             	mov    0x4(%edi),%eax
    8ee8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    8eeb:	40                   	inc    %eax
    8eec:	89 47 04             	mov    %eax,0x4(%edi)
    8eef:	8b 45 e0             	mov    -0x20(%ebp),%eax
    8ef2:	89 44 24 10          	mov    %eax,0x10(%esp)
    8ef6:	8d 45 dc             	lea    -0x24(%ebp),%eax
    8ef9:	89 54 24 14          	mov    %edx,0x14(%esp)
    8efd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    8f04:	00 
    8f05:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    8f0c:	00 
    8f0d:	89 7c 24 04          	mov    %edi,0x4(%esp)
    8f11:	89 04 24             	mov    %eax,(%esp)
    8f14:	e8 d7 2a 00 00       	call   b9f0 <bithenge_new_subblob>
    8f19:	85 c0                	test   %eax,%eax
    8f1b:	75 83                	jne    8ea0 <bithenge_transform_prefix_apply.part.9+0x40>
    8f1d:	8b 03                	mov    (%ebx),%eax
    8f1f:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    8f22:	85 c0                	test   %eax,%eax
    8f24:	0f 84 b5 00 00 00    	je     8fdf <bithenge_transform_prefix_apply.part.9+0x17f>
    8f2a:	8b 00                	mov    (%eax),%eax
    8f2c:	85 c0                	test   %eax,%eax
    8f2e:	74 48                	je     8f78 <bithenge_transform_prefix_apply.part.9+0x118>
    8f30:	8b 55 08             	mov    0x8(%ebp),%edx
    8f33:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    8f37:	89 54 24 0c          	mov    %edx,0xc(%esp)
    8f3b:	89 74 24 04          	mov    %esi,0x4(%esp)
    8f3f:	89 1c 24             	mov    %ebx,(%esp)
    8f42:	ff d0                	call   *%eax
    8f44:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    8f47:	89 0c 24             	mov    %ecx,(%esp)
    8f4a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    8f4d:	e8 6e 13 00 00       	call   a2c0 <bithenge_node_dec_ref>
    8f52:	8b 45 0c             	mov    0xc(%ebp),%eax
    8f55:	85 c0                	test   %eax,%eax
    8f57:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    8f5a:	0f 84 40 ff ff ff    	je     8ea0 <bithenge_transform_prefix_apply.part.9+0x40>
    8f60:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    8f63:	8b 55 e0             	mov    -0x20(%ebp),%edx
    8f66:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    8f69:	89 13                	mov    %edx,(%ebx)
    8f6b:	89 4b 04             	mov    %ecx,0x4(%ebx)
    8f6e:	83 c4 4c             	add    $0x4c,%esp
    8f71:	5b                   	pop    %ebx
    8f72:	5e                   	pop    %esi
    8f73:	5f                   	pop    %edi
    8f74:	5d                   	pop    %ebp
    8f75:	c3                   	ret    
    8f76:	66 90                	xchg   %ax,%ax
    8f78:	83 39 05             	cmpl   $0x5,(%ecx)
    8f7b:	75 14                	jne    8f91 <bithenge_transform_prefix_apply.part.9+0x131>
    8f7d:	8b 45 08             	mov    0x8(%ebp),%eax
    8f80:	89 f2                	mov    %esi,%edx
    8f82:	89 04 24             	mov    %eax,(%esp)
    8f85:	89 d8                	mov    %ebx,%eax
    8f87:	e8 74 00 00 00       	call   9000 <bithenge_transform_apply.part.11>
    8f8c:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    8f8f:	eb b6                	jmp    8f47 <bithenge_transform_prefix_apply.part.9+0xe7>
    8f91:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    8f96:	eb af                	jmp    8f47 <bithenge_transform_prefix_apply.part.9+0xe7>
    8f98:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    8f9d:	e9 fe fe ff ff       	jmp    8ea0 <bithenge_transform_prefix_apply.part.9+0x40>
    8fa2:	c7 44 24 08 7c 00 00 	movl   $0x7c,0x8(%esp)
    8fa9:	00 
    8faa:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    8fb1:	00 
    8fb2:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    8fb9:	e8 f2 18 02 00       	call   2a8b0 <assert_abort>
    8fbe:	c7 44 24 08 7d 00 00 	movl   $0x7d,0x8(%esp)
    8fc5:	00 
    8fc6:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    8fcd:	00 
    8fce:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    8fd5:	e8 d6 18 02 00       	call   2a8b0 <assert_abort>
    8fda:	e8 ea 0d 00 00       	call   9dc9 <bithenge_node_inc_ref.part.4>
    8fdf:	c7 44 24 08 59 00 00 	movl   $0x59,0x8(%esp)
    8fe6:	00 
    8fe7:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    8fee:	00 
    8fef:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    8ff6:	e8 b5 18 02 00       	call   2a8b0 <assert_abort>
    8ffb:	90                   	nop
    8ffc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009000 <bithenge_transform_apply.part.11>:
    9000:	55                   	push   %ebp
    9001:	89 e5                	mov    %esp,%ebp
    9003:	57                   	push   %edi
    9004:	56                   	push   %esi
    9005:	53                   	push   %ebx
    9006:	83 ec 4c             	sub    $0x4c,%esp
    9009:	89 cb                	mov    %ecx,%ebx
    900b:	8b 75 08             	mov    0x8(%ebp),%esi
    900e:	83 39 05             	cmpl   $0x5,(%ecx)
    9011:	0f 85 b5 00 00 00    	jne    90cc <bithenge_transform_apply.part.11+0xcc>
    9017:	85 c0                	test   %eax,%eax
    9019:	0f 84 ce 00 00 00    	je     90ed <bithenge_transform_apply.part.11+0xed>
    901f:	8b 08                	mov    (%eax),%ecx
    9021:	85 c9                	test   %ecx,%ecx
    9023:	0f 84 a8 00 00 00    	je     90d1 <bithenge_transform_apply.part.11+0xd1>
    9029:	8b 79 08             	mov    0x8(%ecx),%edi
    902c:	85 ff                	test   %edi,%edi
    902e:	74 28                	je     9058 <bithenge_transform_apply.part.11+0x58>
    9030:	8d 4d d8             	lea    -0x28(%ebp),%ecx
    9033:	89 74 24 0c          	mov    %esi,0xc(%esp)
    9037:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    903b:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    903f:	89 54 24 04          	mov    %edx,0x4(%esp)
    9043:	89 04 24             	mov    %eax,(%esp)
    9046:	ff d7                	call   *%edi
    9048:	85 c0                	test   %eax,%eax
    904a:	74 28                	je     9074 <bithenge_transform_apply.part.11+0x74>
    904c:	83 c4 4c             	add    $0x4c,%esp
    904f:	5b                   	pop    %ebx
    9050:	5e                   	pop    %esi
    9051:	5f                   	pop    %edi
    9052:	5d                   	pop    %ebp
    9053:	c3                   	ret    
    9054:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9058:	8b 49 04             	mov    0x4(%ecx),%ecx
    905b:	85 c9                	test   %ecx,%ecx
    905d:	74 66                	je     90c5 <bithenge_transform_apply.part.11+0xc5>
    905f:	8d 4d d8             	lea    -0x28(%ebp),%ecx
    9062:	89 34 24             	mov    %esi,(%esp)
    9065:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    9069:	89 d9                	mov    %ebx,%ecx
    906b:	e8 f0 fd ff ff       	call   8e60 <bithenge_transform_prefix_apply.part.9>
    9070:	85 c0                	test   %eax,%eax
    9072:	75 d8                	jne    904c <bithenge_transform_apply.part.11+0x4c>
    9074:	83 3b 05             	cmpl   $0x5,(%ebx)
    9077:	75 53                	jne    90cc <bithenge_transform_apply.part.11+0xcc>
    9079:	8b 43 08             	mov    0x8(%ebx),%eax
    907c:	85 c0                	test   %eax,%eax
    907e:	0f 84 85 00 00 00    	je     9109 <bithenge_transform_apply.part.11+0x109>
    9084:	8d 55 e0             	lea    -0x20(%ebp),%edx
    9087:	89 1c 24             	mov    %ebx,(%esp)
    908a:	89 54 24 04          	mov    %edx,0x4(%esp)
    908e:	ff 10                	call   *(%eax)
    9090:	85 c0                	test   %eax,%eax
    9092:	75 19                	jne    90ad <bithenge_transform_apply.part.11+0xad>
    9094:	8b 55 e0             	mov    -0x20(%ebp),%edx
    9097:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    909a:	8b 5d dc             	mov    -0x24(%ebp),%ebx
    909d:	8b 7d d8             	mov    -0x28(%ebp),%edi
    90a0:	31 d9                	xor    %ebx,%ecx
    90a2:	31 fa                	xor    %edi,%edx
    90a4:	09 d1                	or     %edx,%ecx
    90a6:	74 a4                	je     904c <bithenge_transform_apply.part.11+0x4c>
    90a8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    90ad:	8b 16                	mov    (%esi),%edx
    90af:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    90b2:	89 14 24             	mov    %edx,(%esp)
    90b5:	e8 06 12 00 00       	call   a2c0 <bithenge_node_dec_ref>
    90ba:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    90bd:	83 c4 4c             	add    $0x4c,%esp
    90c0:	5b                   	pop    %ebx
    90c1:	5e                   	pop    %esi
    90c2:	5f                   	pop    %edi
    90c3:	5d                   	pop    %ebp
    90c4:	c3                   	ret    
    90c5:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    90ca:	eb 80                	jmp    904c <bithenge_transform_apply.part.11+0x4c>
    90cc:	e8 b4 0c 00 00       	call   9d85 <bithenge_node_as_blob.part.2>
    90d1:	c7 44 24 08 9d 00 00 	movl   $0x9d,0x8(%esp)
    90d8:	00 
    90d9:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    90e0:	00 
    90e1:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    90e8:	e8 c3 17 02 00       	call   2a8b0 <assert_abort>
    90ed:	c7 44 24 08 9c 00 00 	movl   $0x9c,0x8(%esp)
    90f4:	00 
    90f5:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    90fc:	00 
    90fd:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    9104:	e8 a7 17 02 00       	call   2a8b0 <assert_abort>
    9109:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    9110:	00 
    9111:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    9118:	00 
    9119:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    9120:	e8 8b 17 02 00       	call   2a8b0 <assert_abort>
    9125:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9129:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009130 <bithenge_scope_dec_ref.part.12>:
    9130:	55                   	push   %ebp
    9131:	89 e5                	mov    %esp,%ebp
    9133:	57                   	push   %edi
    9134:	56                   	push   %esi
    9135:	53                   	push   %ebx
    9136:	83 ec 2c             	sub    $0x2c,%esp
    9139:	89 c6                	mov    %eax,%esi
    913b:	8b 40 18             	mov    0x18(%eax),%eax
    913e:	31 db                	xor    %ebx,%ebx
    9140:	89 04 24             	mov    %eax,(%esp)
    9143:	e8 78 11 00 00       	call   a2c0 <bithenge_node_dec_ref>
    9148:	8b 46 10             	mov    0x10(%esi),%eax
    914b:	85 c0                	test   %eax,%eax
    914d:	7e 15                	jle    9164 <bithenge_scope_dec_ref.part.12+0x34>
    914f:	90                   	nop
    9150:	8b 46 14             	mov    0x14(%esi),%eax
    9153:	8b 04 98             	mov    (%eax,%ebx,4),%eax
    9156:	43                   	inc    %ebx
    9157:	89 04 24             	mov    %eax,(%esp)
    915a:	e8 61 11 00 00       	call   a2c0 <bithenge_node_dec_ref>
    915f:	3b 5e 10             	cmp    0x10(%esi),%ebx
    9162:	7c ec                	jl     9150 <bithenge_scope_dec_ref.part.12+0x20>
    9164:	8b 7e 04             	mov    0x4(%esi),%edi
    9167:	85 ff                	test   %edi,%edi
    9169:	74 09                	je     9174 <bithenge_scope_dec_ref.part.12+0x44>
    916b:	8b 07                	mov    (%edi),%eax
    916d:	48                   	dec    %eax
    916e:	89 07                	mov    %eax,(%edi)
    9170:	85 c0                	test   %eax,%eax
    9172:	74 2c                	je     91a0 <bithenge_scope_dec_ref.part.12+0x70>
    9174:	8b 46 14             	mov    0x14(%esi),%eax
    9177:	89 04 24             	mov    %eax,(%esp)
    917a:	e8 61 70 01 00       	call   201e0 <free>
    917f:	8b 46 08             	mov    0x8(%esi),%eax
    9182:	89 04 24             	mov    %eax,(%esp)
    9185:	e8 56 70 01 00       	call   201e0 <free>
    918a:	89 34 24             	mov    %esi,(%esp)
    918d:	e8 4e 70 01 00       	call   201e0 <free>
    9192:	83 c4 2c             	add    $0x2c,%esp
    9195:	5b                   	pop    %ebx
    9196:	5e                   	pop    %esi
    9197:	5f                   	pop    %edi
    9198:	5d                   	pop    %ebp
    9199:	c3                   	ret    
    919a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    91a0:	8b 47 18             	mov    0x18(%edi),%eax
    91a3:	31 db                	xor    %ebx,%ebx
    91a5:	89 04 24             	mov    %eax,(%esp)
    91a8:	e8 13 11 00 00       	call   a2c0 <bithenge_node_dec_ref>
    91ad:	8b 47 10             	mov    0x10(%edi),%eax
    91b0:	85 c0                	test   %eax,%eax
    91b2:	7e 18                	jle    91cc <bithenge_scope_dec_ref.part.12+0x9c>
    91b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    91b8:	8b 47 14             	mov    0x14(%edi),%eax
    91bb:	8b 04 98             	mov    (%eax,%ebx,4),%eax
    91be:	43                   	inc    %ebx
    91bf:	89 04 24             	mov    %eax,(%esp)
    91c2:	e8 f9 10 00 00       	call   a2c0 <bithenge_node_dec_ref>
    91c7:	3b 5f 10             	cmp    0x10(%edi),%ebx
    91ca:	7c ec                	jl     91b8 <bithenge_scope_dec_ref.part.12+0x88>
    91cc:	8b 57 04             	mov    0x4(%edi),%edx
    91cf:	85 d2                	test   %edx,%edx
    91d1:	74 09                	je     91dc <bithenge_scope_dec_ref.part.12+0xac>
    91d3:	8b 02                	mov    (%edx),%eax
    91d5:	48                   	dec    %eax
    91d6:	89 02                	mov    %eax,(%edx)
    91d8:	85 c0                	test   %eax,%eax
    91da:	74 24                	je     9200 <bithenge_scope_dec_ref.part.12+0xd0>
    91dc:	8b 47 14             	mov    0x14(%edi),%eax
    91df:	89 04 24             	mov    %eax,(%esp)
    91e2:	e8 f9 6f 01 00       	call   201e0 <free>
    91e7:	8b 47 08             	mov    0x8(%edi),%eax
    91ea:	89 04 24             	mov    %eax,(%esp)
    91ed:	e8 ee 6f 01 00       	call   201e0 <free>
    91f2:	89 3c 24             	mov    %edi,(%esp)
    91f5:	e8 e6 6f 01 00       	call   201e0 <free>
    91fa:	e9 75 ff ff ff       	jmp    9174 <bithenge_scope_dec_ref.part.12+0x44>
    91ff:	90                   	nop
    9200:	8b 42 18             	mov    0x18(%edx),%eax
    9203:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    9206:	89 04 24             	mov    %eax,(%esp)
    9209:	31 db                	xor    %ebx,%ebx
    920b:	e8 b0 10 00 00       	call   a2c0 <bithenge_node_dec_ref>
    9210:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    9213:	8b 42 10             	mov    0x10(%edx),%eax
    9216:	85 c0                	test   %eax,%eax
    9218:	7e 20                	jle    923a <bithenge_scope_dec_ref.part.12+0x10a>
    921a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9220:	8b 42 14             	mov    0x14(%edx),%eax
    9223:	8b 04 98             	mov    (%eax,%ebx,4),%eax
    9226:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    9229:	89 04 24             	mov    %eax,(%esp)
    922c:	43                   	inc    %ebx
    922d:	e8 8e 10 00 00       	call   a2c0 <bithenge_node_dec_ref>
    9232:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    9235:	3b 5a 10             	cmp    0x10(%edx),%ebx
    9238:	7c e6                	jl     9220 <bithenge_scope_dec_ref.part.12+0xf0>
    923a:	8b 42 04             	mov    0x4(%edx),%eax
    923d:	85 c0                	test   %eax,%eax
    923f:	74 14                	je     9255 <bithenge_scope_dec_ref.part.12+0x125>
    9241:	8b 08                	mov    (%eax),%ecx
    9243:	49                   	dec    %ecx
    9244:	89 08                	mov    %ecx,(%eax)
    9246:	85 c9                	test   %ecx,%ecx
    9248:	75 0b                	jne    9255 <bithenge_scope_dec_ref.part.12+0x125>
    924a:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    924d:	e8 de fe ff ff       	call   9130 <bithenge_scope_dec_ref.part.12>
    9252:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    9255:	8b 42 14             	mov    0x14(%edx),%eax
    9258:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    925b:	89 04 24             	mov    %eax,(%esp)
    925e:	e8 7d 6f 01 00       	call   201e0 <free>
    9263:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    9266:	8b 42 08             	mov    0x8(%edx),%eax
    9269:	89 04 24             	mov    %eax,(%esp)
    926c:	e8 6f 6f 01 00       	call   201e0 <free>
    9271:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    9274:	89 14 24             	mov    %edx,(%esp)
    9277:	e8 64 6f 01 00       	call   201e0 <free>
    927c:	e9 5b ff ff ff       	jmp    91dc <bithenge_scope_dec_ref.part.12+0xac>
    9281:	eb 0d                	jmp    9290 <barrier_transform_apply>
    9283:	90                   	nop
    9284:	90                   	nop
    9285:	90                   	nop
    9286:	90                   	nop
    9287:	90                   	nop
    9288:	90                   	nop
    9289:	90                   	nop
    928a:	90                   	nop
    928b:	90                   	nop
    928c:	90                   	nop
    928d:	90                   	nop
    928e:	90                   	nop
    928f:	90                   	nop

00009290 <barrier_transform_apply>:
    9290:	55                   	push   %ebp
    9291:	89 e5                	mov    %esp,%ebp
    9293:	57                   	push   %edi
    9294:	56                   	push   %esi
    9295:	53                   	push   %ebx
    9296:	83 ec 1c             	sub    $0x1c,%esp
    9299:	8b 75 0c             	mov    0xc(%ebp),%esi
    929c:	8b 7d 10             	mov    0x10(%ebp),%edi
    929f:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
    92a6:	e8 25 6e 01 00       	call   200d0 <malloc>
    92ab:	89 c3                	mov    %eax,%ebx
    92ad:	85 c0                	test   %eax,%eax
    92af:	0f 84 d2 00 00 00    	je     9387 <barrier_transform_apply+0xf7>
    92b5:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
    92bb:	85 f6                	test   %esi,%esi
    92bd:	74 05                	je     92c4 <barrier_transform_apply+0x34>
    92bf:	8b 06                	mov    (%esi),%eax
    92c1:	40                   	inc    %eax
    92c2:	89 06                	mov    %eax,(%esi)
    92c4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    92cb:	89 73 04             	mov    %esi,0x4(%ebx)
    92ce:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
    92d5:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
    92dc:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)
    92e3:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
    92ea:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
    92f1:	c6 43 0c 01          	movb   $0x1,0xc(%ebx)
    92f5:	e8 c6 0f 00 00       	call   a2c0 <bithenge_node_dec_ref>
    92fa:	8b 45 08             	mov    0x8(%ebp),%eax
    92fd:	8b 40 0c             	mov    0xc(%eax),%eax
    9300:	89 7b 1c             	mov    %edi,0x1c(%ebx)
    9303:	85 c0                	test   %eax,%eax
    9305:	0f 84 83 00 00 00    	je     938e <barrier_transform_apply+0xfe>
    930b:	8b 10                	mov    (%eax),%edx
    930d:	85 d2                	test   %edx,%edx
    930f:	74 4f                	je     9360 <barrier_transform_apply+0xd0>
    9311:	8b 12                	mov    (%edx),%edx
    9313:	85 d2                	test   %edx,%edx
    9315:	74 31                	je     9348 <barrier_transform_apply+0xb8>
    9317:	8b 4d 14             	mov    0x14(%ebp),%ecx
    931a:	89 7c 24 08          	mov    %edi,0x8(%esp)
    931e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    9322:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    9326:	89 04 24             	mov    %eax,(%esp)
    9329:	ff d2                	call   *%edx
    932b:	89 c6                	mov    %eax,%esi
    932d:	8b 03                	mov    (%ebx),%eax
    932f:	48                   	dec    %eax
    9330:	89 03                	mov    %eax,(%ebx)
    9332:	85 c0                	test   %eax,%eax
    9334:	75 07                	jne    933d <barrier_transform_apply+0xad>
    9336:	89 d8                	mov    %ebx,%eax
    9338:	e8 f3 fd ff ff       	call   9130 <bithenge_scope_dec_ref.part.12>
    933d:	83 c4 1c             	add    $0x1c,%esp
    9340:	89 f0                	mov    %esi,%eax
    9342:	5b                   	pop    %ebx
    9343:	5e                   	pop    %esi
    9344:	5f                   	pop    %edi
    9345:	5d                   	pop    %ebp
    9346:	c3                   	ret    
    9347:	90                   	nop
    9348:	83 3f 05             	cmpl   $0x5,(%edi)
    934b:	75 33                	jne    9380 <barrier_transform_apply+0xf0>
    934d:	8b 55 14             	mov    0x14(%ebp),%edx
    9350:	89 f9                	mov    %edi,%ecx
    9352:	89 14 24             	mov    %edx,(%esp)
    9355:	89 da                	mov    %ebx,%edx
    9357:	e8 a4 fc ff ff       	call   9000 <bithenge_transform_apply.part.11>
    935c:	89 c6                	mov    %eax,%esi
    935e:	eb cd                	jmp    932d <barrier_transform_apply+0x9d>
    9360:	c7 44 24 08 59 00 00 	movl   $0x59,0x8(%esp)
    9367:	00 
    9368:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    936f:	00 
    9370:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    9377:	e8 34 15 02 00       	call   2a8b0 <assert_abort>
    937c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9380:	be f2 ff ff ff       	mov    $0xfffffff2,%esi
    9385:	eb a6                	jmp    932d <barrier_transform_apply+0x9d>
    9387:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    938c:	eb af                	jmp    933d <barrier_transform_apply+0xad>
    938e:	c7 44 24 08 58 00 00 	movl   $0x58,0x8(%esp)
    9395:	00 
    9396:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    939d:	00 
    939e:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    93a5:	e8 06 15 02 00       	call   2a8b0 <assert_abort>
    93aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000093b0 <barrier_transform_prefix_apply>:
    93b0:	55                   	push   %ebp
    93b1:	89 e5                	mov    %esp,%ebp
    93b3:	57                   	push   %edi
    93b4:	56                   	push   %esi
    93b5:	53                   	push   %ebx
    93b6:	83 ec 2c             	sub    $0x2c,%esp
    93b9:	8b 75 0c             	mov    0xc(%ebp),%esi
    93bc:	8b 7d 10             	mov    0x10(%ebp),%edi
    93bf:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
    93c6:	e8 05 6d 01 00       	call   200d0 <malloc>
    93cb:	89 c3                	mov    %eax,%ebx
    93cd:	85 c0                	test   %eax,%eax
    93cf:	0f 84 db 00 00 00    	je     94b0 <barrier_transform_prefix_apply+0x100>
    93d5:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
    93db:	85 f6                	test   %esi,%esi
    93dd:	74 05                	je     93e4 <barrier_transform_prefix_apply+0x34>
    93df:	8b 0e                	mov    (%esi),%ecx
    93e1:	41                   	inc    %ecx
    93e2:	89 0e                	mov    %ecx,(%esi)
    93e4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    93eb:	89 73 04             	mov    %esi,0x4(%ebx)
    93ee:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
    93f5:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
    93fc:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)
    9403:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
    940a:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
    9411:	c6 43 0c 01          	movb   $0x1,0xc(%ebx)
    9415:	e8 a6 0e 00 00       	call   a2c0 <bithenge_node_dec_ref>
    941a:	8b 45 08             	mov    0x8(%ebp),%eax
    941d:	8b 40 0c             	mov    0xc(%eax),%eax
    9420:	89 7b 1c             	mov    %edi,0x1c(%ebx)
    9423:	85 c0                	test   %eax,%eax
    9425:	0f 84 93 00 00 00    	je     94be <barrier_transform_prefix_apply+0x10e>
    942b:	8b 10                	mov    (%eax),%edx
    942d:	85 d2                	test   %edx,%edx
    942f:	74 60                	je     9491 <barrier_transform_prefix_apply+0xe1>
    9431:	8b 4a 08             	mov    0x8(%edx),%ecx
    9434:	85 c9                	test   %ecx,%ecx
    9436:	74 38                	je     9470 <barrier_transform_prefix_apply+0xc0>
    9438:	8b 55 18             	mov    0x18(%ebp),%edx
    943b:	89 7c 24 08          	mov    %edi,0x8(%esp)
    943f:	89 54 24 10          	mov    %edx,0x10(%esp)
    9443:	8b 55 14             	mov    0x14(%ebp),%edx
    9446:	89 54 24 0c          	mov    %edx,0xc(%esp)
    944a:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    944e:	89 04 24             	mov    %eax,(%esp)
    9451:	ff d1                	call   *%ecx
    9453:	89 c6                	mov    %eax,%esi
    9455:	8b 03                	mov    (%ebx),%eax
    9457:	48                   	dec    %eax
    9458:	89 03                	mov    %eax,(%ebx)
    945a:	85 c0                	test   %eax,%eax
    945c:	75 07                	jne    9465 <barrier_transform_prefix_apply+0xb5>
    945e:	89 d8                	mov    %ebx,%eax
    9460:	e8 cb fc ff ff       	call   9130 <bithenge_scope_dec_ref.part.12>
    9465:	83 c4 2c             	add    $0x2c,%esp
    9468:	89 f0                	mov    %esi,%eax
    946a:	5b                   	pop    %ebx
    946b:	5e                   	pop    %esi
    946c:	5f                   	pop    %edi
    946d:	5d                   	pop    %ebp
    946e:	c3                   	ret    
    946f:	90                   	nop
    9470:	8b 52 04             	mov    0x4(%edx),%edx
    9473:	85 d2                	test   %edx,%edx
    9475:	74 40                	je     94b7 <barrier_transform_prefix_apply+0x107>
    9477:	8b 55 18             	mov    0x18(%ebp),%edx
    947a:	89 f9                	mov    %edi,%ecx
    947c:	89 54 24 04          	mov    %edx,0x4(%esp)
    9480:	8b 55 14             	mov    0x14(%ebp),%edx
    9483:	89 14 24             	mov    %edx,(%esp)
    9486:	89 da                	mov    %ebx,%edx
    9488:	e8 d3 f9 ff ff       	call   8e60 <bithenge_transform_prefix_apply.part.9>
    948d:	89 c6                	mov    %eax,%esi
    948f:	eb c4                	jmp    9455 <barrier_transform_prefix_apply+0xa5>
    9491:	c7 44 24 08 9d 00 00 	movl   $0x9d,0x8(%esp)
    9498:	00 
    9499:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    94a0:	00 
    94a1:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    94a8:	e8 03 14 02 00       	call   2a8b0 <assert_abort>
    94ad:	8d 76 00             	lea    0x0(%esi),%esi
    94b0:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    94b5:	eb ae                	jmp    9465 <barrier_transform_prefix_apply+0xb5>
    94b7:	be f5 ff ff ff       	mov    $0xfffffff5,%esi
    94bc:	eb 97                	jmp    9455 <barrier_transform_prefix_apply+0xa5>
    94be:	c7 44 24 08 9c 00 00 	movl   $0x9c,0x8(%esp)
    94c5:	00 
    94c6:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    94cd:	00 
    94ce:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    94d5:	e8 d6 13 02 00       	call   2a8b0 <assert_abort>
    94da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000094e0 <bithenge_init_transform>:
    94e0:	55                   	push   %ebp
    94e1:	89 e5                	mov    %esp,%ebp
    94e3:	83 ec 18             	sub    $0x18,%esp
    94e6:	8b 45 0c             	mov    0xc(%ebp),%eax
    94e9:	8b 55 08             	mov    0x8(%ebp),%edx
    94ec:	85 c0                	test   %eax,%eax
    94ee:	74 43                	je     9533 <bithenge_init_transform+0x53>
    94f0:	8b 08                	mov    (%eax),%ecx
    94f2:	85 c9                	test   %ecx,%ecx
    94f4:	74 1a                	je     9510 <bithenge_init_transform+0x30>
    94f6:	8b 48 0c             	mov    0xc(%eax),%ecx
    94f9:	85 c9                	test   %ecx,%ecx
    94fb:	74 52                	je     954f <bithenge_init_transform+0x6f>
    94fd:	89 02                	mov    %eax,(%edx)
    94ff:	8b 45 10             	mov    0x10(%ebp),%eax
    9502:	89 42 08             	mov    %eax,0x8(%edx)
    9505:	c7 42 04 01 00 00 00 	movl   $0x1,0x4(%edx)
    950c:	31 c0                	xor    %eax,%eax
    950e:	c9                   	leave  
    950f:	c3                   	ret    
    9510:	8b 48 08             	mov    0x8(%eax),%ecx
    9513:	85 c9                	test   %ecx,%ecx
    9515:	75 df                	jne    94f6 <bithenge_init_transform+0x16>
    9517:	c7 44 24 08 3f 00 00 	movl   $0x3f,0x8(%esp)
    951e:	00 
    951f:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    9526:	00 
    9527:	c7 04 24 18 d2 02 00 	movl   $0x2d218,(%esp)
    952e:	e8 7d 13 02 00       	call   2a8b0 <assert_abort>
    9533:	c7 44 24 08 3e 00 00 	movl   $0x3e,0x8(%esp)
    953a:	00 
    953b:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    9542:	00 
    9543:	c7 04 24 bf cc 02 00 	movl   $0x2ccbf,(%esp)
    954a:	e8 61 13 02 00       	call   2a8b0 <assert_abort>
    954f:	c7 44 24 08 40 00 00 	movl   $0x40,0x8(%esp)
    9556:	00 
    9557:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    955e:	00 
    955f:	c7 04 24 20 d1 02 00 	movl   $0x2d120,(%esp)
    9566:	e8 45 13 02 00       	call   2a8b0 <assert_abort>
    956b:	90                   	nop
    956c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009570 <bithenge_transform_apply>:
    9570:	55                   	push   %ebp
    9571:	89 e5                	mov    %esp,%ebp
    9573:	56                   	push   %esi
    9574:	53                   	push   %ebx
    9575:	83 ec 10             	sub    $0x10,%esp
    9578:	8b 45 08             	mov    0x8(%ebp),%eax
    957b:	8b 55 0c             	mov    0xc(%ebp),%edx
    957e:	8b 4d 10             	mov    0x10(%ebp),%ecx
    9581:	8b 75 14             	mov    0x14(%ebp),%esi
    9584:	85 c0                	test   %eax,%eax
    9586:	74 4c                	je     95d4 <bithenge_transform_apply+0x64>
    9588:	8b 18                	mov    (%eax),%ebx
    958a:	85 db                	test   %ebx,%ebx
    958c:	74 62                	je     95f0 <bithenge_transform_apply+0x80>
    958e:	8b 1b                	mov    (%ebx),%ebx
    9590:	85 db                	test   %ebx,%ebx
    9592:	74 1c                	je     95b0 <bithenge_transform_apply+0x40>
    9594:	89 75 14             	mov    %esi,0x14(%ebp)
    9597:	89 55 0c             	mov    %edx,0xc(%ebp)
    959a:	89 4d 10             	mov    %ecx,0x10(%ebp)
    959d:	89 45 08             	mov    %eax,0x8(%ebp)
    95a0:	83 c4 10             	add    $0x10,%esp
    95a3:	89 da                	mov    %ebx,%edx
    95a5:	5b                   	pop    %ebx
    95a6:	5e                   	pop    %esi
    95a7:	5d                   	pop    %ebp
    95a8:	ff e2                	jmp    *%edx
    95aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    95b0:	83 39 05             	cmpl   $0x5,(%ecx)
    95b3:	75 13                	jne    95c8 <bithenge_transform_apply+0x58>
    95b5:	89 75 08             	mov    %esi,0x8(%ebp)
    95b8:	83 c4 10             	add    $0x10,%esp
    95bb:	5b                   	pop    %ebx
    95bc:	5e                   	pop    %esi
    95bd:	5d                   	pop    %ebp
    95be:	e9 3d fa ff ff       	jmp    9000 <bithenge_transform_apply.part.11>
    95c3:	90                   	nop
    95c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    95c8:	83 c4 10             	add    $0x10,%esp
    95cb:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    95d0:	5b                   	pop    %ebx
    95d1:	5e                   	pop    %esi
    95d2:	5d                   	pop    %ebp
    95d3:	c3                   	ret    
    95d4:	c7 44 24 08 58 00 00 	movl   $0x58,0x8(%esp)
    95db:	00 
    95dc:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    95e3:	00 
    95e4:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    95eb:	e8 c0 12 02 00       	call   2a8b0 <assert_abort>
    95f0:	c7 44 24 08 59 00 00 	movl   $0x59,0x8(%esp)
    95f7:	00 
    95f8:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    95ff:	00 
    9600:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    9607:	e8 a4 12 02 00       	call   2a8b0 <assert_abort>
    960c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009610 <bithenge_transform_prefix_length>:
    9610:	55                   	push   %ebp
    9611:	89 e5                	mov    %esp,%ebp
    9613:	83 ec 48             	sub    $0x48,%esp
    9616:	8b 45 08             	mov    0x8(%ebp),%eax
    9619:	85 c0                	test   %eax,%eax
    961b:	0f 84 91 00 00 00    	je     96b2 <bithenge_transform_prefix_length+0xa2>
    9621:	8b 10                	mov    (%eax),%edx
    9623:	85 d2                	test   %edx,%edx
    9625:	74 6f                	je     9696 <bithenge_transform_prefix_length+0x86>
    9627:	8b 4a 04             	mov    0x4(%edx),%ecx
    962a:	85 c9                	test   %ecx,%ecx
    962c:	74 22                	je     9650 <bithenge_transform_prefix_length+0x40>
    962e:	8b 55 14             	mov    0x14(%ebp),%edx
    9631:	89 04 24             	mov    %eax,(%esp)
    9634:	89 54 24 0c          	mov    %edx,0xc(%esp)
    9638:	8b 55 10             	mov    0x10(%ebp),%edx
    963b:	89 54 24 08          	mov    %edx,0x8(%esp)
    963f:	8b 55 0c             	mov    0xc(%ebp),%edx
    9642:	89 54 24 04          	mov    %edx,0x4(%esp)
    9646:	ff d1                	call   *%ecx
    9648:	c9                   	leave  
    9649:	c3                   	ret    
    964a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9650:	8b 52 08             	mov    0x8(%edx),%edx
    9653:	85 d2                	test   %edx,%edx
    9655:	74 38                	je     968f <bithenge_transform_prefix_length+0x7f>
    9657:	8b 4d 14             	mov    0x14(%ebp),%ecx
    965a:	89 04 24             	mov    %eax,(%esp)
    965d:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    9661:	8d 4d f4             	lea    -0xc(%ebp),%ecx
    9664:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    9668:	8b 4d 10             	mov    0x10(%ebp),%ecx
    966b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    966f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    9672:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    9676:	ff d2                	call   *%edx
    9678:	85 c0                	test   %eax,%eax
    967a:	75 cc                	jne    9648 <bithenge_transform_prefix_length+0x38>
    967c:	8b 55 f4             	mov    -0xc(%ebp),%edx
    967f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    9682:	89 14 24             	mov    %edx,(%esp)
    9685:	e8 36 0c 00 00       	call   a2c0 <bithenge_node_dec_ref>
    968a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    968d:	c9                   	leave  
    968e:	c3                   	ret    
    968f:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    9694:	c9                   	leave  
    9695:	c3                   	ret    
    9696:	c7 44 24 08 7d 00 00 	movl   $0x7d,0x8(%esp)
    969d:	00 
    969e:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    96a5:	00 
    96a6:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    96ad:	e8 fe 11 02 00       	call   2a8b0 <assert_abort>
    96b2:	c7 44 24 08 7c 00 00 	movl   $0x7c,0x8(%esp)
    96b9:	00 
    96ba:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    96c1:	00 
    96c2:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    96c9:	e8 e2 11 02 00       	call   2a8b0 <assert_abort>
    96ce:	66 90                	xchg   %ax,%ax

000096d0 <barrier_transform_prefix_length>:
    96d0:	55                   	push   %ebp
    96d1:	89 e5                	mov    %esp,%ebp
    96d3:	57                   	push   %edi
    96d4:	56                   	push   %esi
    96d5:	53                   	push   %ebx
    96d6:	83 ec 1c             	sub    $0x1c,%esp
    96d9:	8b 75 0c             	mov    0xc(%ebp),%esi
    96dc:	8b 7d 10             	mov    0x10(%ebp),%edi
    96df:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
    96e6:	e8 e5 69 01 00       	call   200d0 <malloc>
    96eb:	89 c3                	mov    %eax,%ebx
    96ed:	85 c0                	test   %eax,%eax
    96ef:	0f 84 8c 00 00 00    	je     9781 <barrier_transform_prefix_length+0xb1>
    96f5:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
    96fb:	85 f6                	test   %esi,%esi
    96fd:	74 05                	je     9704 <barrier_transform_prefix_length+0x34>
    96ff:	8b 06                	mov    (%esi),%eax
    9701:	40                   	inc    %eax
    9702:	89 06                	mov    %eax,(%esi)
    9704:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    970b:	89 73 04             	mov    %esi,0x4(%ebx)
    970e:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
    9715:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
    971c:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)
    9723:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
    972a:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
    9731:	c6 43 0c 01          	movb   $0x1,0xc(%ebx)
    9735:	e8 86 0b 00 00       	call   a2c0 <bithenge_node_dec_ref>
    973a:	8b 45 14             	mov    0x14(%ebp),%eax
    973d:	89 44 24 0c          	mov    %eax,0xc(%esp)
    9741:	8b 45 08             	mov    0x8(%ebp),%eax
    9744:	89 7c 24 08          	mov    %edi,0x8(%esp)
    9748:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    974c:	8b 40 0c             	mov    0xc(%eax),%eax
    974f:	89 7b 1c             	mov    %edi,0x1c(%ebx)
    9752:	89 04 24             	mov    %eax,(%esp)
    9755:	e8 b6 fe ff ff       	call   9610 <bithenge_transform_prefix_length>
    975a:	8b 13                	mov    (%ebx),%edx
    975c:	4a                   	dec    %edx
    975d:	89 c6                	mov    %eax,%esi
    975f:	89 13                	mov    %edx,(%ebx)
    9761:	85 d2                	test   %edx,%edx
    9763:	74 0b                	je     9770 <barrier_transform_prefix_length+0xa0>
    9765:	83 c4 1c             	add    $0x1c,%esp
    9768:	89 f0                	mov    %esi,%eax
    976a:	5b                   	pop    %ebx
    976b:	5e                   	pop    %esi
    976c:	5f                   	pop    %edi
    976d:	5d                   	pop    %ebp
    976e:	c3                   	ret    
    976f:	90                   	nop
    9770:	89 d8                	mov    %ebx,%eax
    9772:	e8 b9 f9 ff ff       	call   9130 <bithenge_scope_dec_ref.part.12>
    9777:	83 c4 1c             	add    $0x1c,%esp
    977a:	89 f0                	mov    %esi,%eax
    977c:	5b                   	pop    %ebx
    977d:	5e                   	pop    %esi
    977e:	5f                   	pop    %edi
    977f:	5d                   	pop    %ebp
    9780:	c3                   	ret    
    9781:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    9786:	eb dd                	jmp    9765 <barrier_transform_prefix_length+0x95>
    9788:	90                   	nop
    9789:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009790 <bithenge_transform_prefix_apply>:
    9790:	55                   	push   %ebp
    9791:	89 e5                	mov    %esp,%ebp
    9793:	57                   	push   %edi
    9794:	56                   	push   %esi
    9795:	53                   	push   %ebx
    9796:	83 ec 2c             	sub    $0x2c,%esp
    9799:	8b 45 08             	mov    0x8(%ebp),%eax
    979c:	8b 5d 14             	mov    0x14(%ebp),%ebx
    979f:	8b 55 0c             	mov    0xc(%ebp),%edx
    97a2:	8b 4d 10             	mov    0x10(%ebp),%ecx
    97a5:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
    97a8:	8b 7d 18             	mov    0x18(%ebp),%edi
    97ab:	85 c0                	test   %eax,%eax
    97ad:	74 76                	je     9825 <bithenge_transform_prefix_apply+0x95>
    97af:	8b 18                	mov    (%eax),%ebx
    97b1:	85 db                	test   %ebx,%ebx
    97b3:	74 54                	je     9809 <bithenge_transform_prefix_apply+0x79>
    97b5:	8b 73 08             	mov    0x8(%ebx),%esi
    97b8:	85 f6                	test   %esi,%esi
    97ba:	74 24                	je     97e0 <bithenge_transform_prefix_apply+0x50>
    97bc:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    97bf:	89 7d 18             	mov    %edi,0x18(%ebp)
    97c2:	89 5d 14             	mov    %ebx,0x14(%ebp)
    97c5:	89 55 0c             	mov    %edx,0xc(%ebp)
    97c8:	89 4d 10             	mov    %ecx,0x10(%ebp)
    97cb:	89 45 08             	mov    %eax,0x8(%ebp)
    97ce:	83 c4 2c             	add    $0x2c,%esp
    97d1:	89 f2                	mov    %esi,%edx
    97d3:	5b                   	pop    %ebx
    97d4:	5e                   	pop    %esi
    97d5:	5f                   	pop    %edi
    97d6:	5d                   	pop    %ebp
    97d7:	ff e2                	jmp    *%edx
    97d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    97e0:	8b 5b 04             	mov    0x4(%ebx),%ebx
    97e3:	85 db                	test   %ebx,%ebx
    97e5:	74 15                	je     97fc <bithenge_transform_prefix_apply+0x6c>
    97e7:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    97ea:	89 7d 0c             	mov    %edi,0xc(%ebp)
    97ed:	89 5d 08             	mov    %ebx,0x8(%ebp)
    97f0:	83 c4 2c             	add    $0x2c,%esp
    97f3:	5b                   	pop    %ebx
    97f4:	5e                   	pop    %esi
    97f5:	5f                   	pop    %edi
    97f6:	5d                   	pop    %ebp
    97f7:	e9 64 f6 ff ff       	jmp    8e60 <bithenge_transform_prefix_apply.part.9>
    97fc:	83 c4 2c             	add    $0x2c,%esp
    97ff:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    9804:	5b                   	pop    %ebx
    9805:	5e                   	pop    %esi
    9806:	5f                   	pop    %edi
    9807:	5d                   	pop    %ebp
    9808:	c3                   	ret    
    9809:	c7 44 24 08 9d 00 00 	movl   $0x9d,0x8(%esp)
    9810:	00 
    9811:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    9818:	00 
    9819:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    9820:	e8 8b 10 02 00       	call   2a8b0 <assert_abort>
    9825:	c7 44 24 08 9c 00 00 	movl   $0x9c,0x8(%esp)
    982c:	00 
    982d:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    9834:	00 
    9835:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    983c:	e8 6f 10 02 00       	call   2a8b0 <assert_abort>
    9841:	eb 0d                	jmp    9850 <bithenge_scope_new>
    9843:	90                   	nop
    9844:	90                   	nop
    9845:	90                   	nop
    9846:	90                   	nop
    9847:	90                   	nop
    9848:	90                   	nop
    9849:	90                   	nop
    984a:	90                   	nop
    984b:	90                   	nop
    984c:	90                   	nop
    984d:	90                   	nop
    984e:	90                   	nop
    984f:	90                   	nop

00009850 <bithenge_scope_new>:
    9850:	55                   	push   %ebp
    9851:	89 e5                	mov    %esp,%ebp
    9853:	53                   	push   %ebx
    9854:	83 ec 14             	sub    $0x14,%esp
    9857:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    985a:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
    9861:	e8 6a 68 01 00       	call   200d0 <malloc>
    9866:	85 c0                	test   %eax,%eax
    9868:	74 46                	je     98b0 <bithenge_scope_new+0x60>
    986a:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
    9870:	85 db                	test   %ebx,%ebx
    9872:	74 05                	je     9879 <bithenge_scope_new+0x29>
    9874:	8b 13                	mov    (%ebx),%edx
    9876:	42                   	inc    %edx
    9877:	89 13                	mov    %edx,(%ebx)
    9879:	8b 55 08             	mov    0x8(%ebp),%edx
    987c:	89 58 04             	mov    %ebx,0x4(%eax)
    987f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
    9886:	c6 40 0c 00          	movb   $0x0,0xc(%eax)
    988a:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
    9891:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
    9898:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
    989f:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
    98a6:	89 02                	mov    %eax,(%edx)
    98a8:	31 c0                	xor    %eax,%eax
    98aa:	83 c4 14             	add    $0x14,%esp
    98ad:	5b                   	pop    %ebx
    98ae:	5d                   	pop    %ebp
    98af:	c3                   	ret    
    98b0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    98b5:	eb f3                	jmp    98aa <bithenge_scope_new+0x5a>
    98b7:	89 f6                	mov    %esi,%esi
    98b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000098c0 <bithenge_scope_dec_ref>:
    98c0:	55                   	push   %ebp
    98c1:	89 e5                	mov    %esp,%ebp
    98c3:	56                   	push   %esi
    98c4:	53                   	push   %ebx
    98c5:	83 ec 10             	sub    $0x10,%esp
    98c8:	8b 75 08             	mov    0x8(%ebp),%esi
    98cb:	85 f6                	test   %esi,%esi
    98cd:	74 09                	je     98d8 <bithenge_scope_dec_ref+0x18>
    98cf:	8b 06                	mov    (%esi),%eax
    98d1:	48                   	dec    %eax
    98d2:	89 06                	mov    %eax,(%esi)
    98d4:	85 c0                	test   %eax,%eax
    98d6:	74 08                	je     98e0 <bithenge_scope_dec_ref+0x20>
    98d8:	83 c4 10             	add    $0x10,%esp
    98db:	5b                   	pop    %ebx
    98dc:	5e                   	pop    %esi
    98dd:	5d                   	pop    %ebp
    98de:	c3                   	ret    
    98df:	90                   	nop
    98e0:	8b 46 18             	mov    0x18(%esi),%eax
    98e3:	31 db                	xor    %ebx,%ebx
    98e5:	89 04 24             	mov    %eax,(%esp)
    98e8:	e8 d3 09 00 00       	call   a2c0 <bithenge_node_dec_ref>
    98ed:	8b 4e 10             	mov    0x10(%esi),%ecx
    98f0:	85 c9                	test   %ecx,%ecx
    98f2:	7e 18                	jle    990c <bithenge_scope_dec_ref+0x4c>
    98f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    98f8:	8b 46 14             	mov    0x14(%esi),%eax
    98fb:	8b 04 98             	mov    (%eax,%ebx,4),%eax
    98fe:	43                   	inc    %ebx
    98ff:	89 04 24             	mov    %eax,(%esp)
    9902:	e8 b9 09 00 00       	call   a2c0 <bithenge_node_dec_ref>
    9907:	3b 5e 10             	cmp    0x10(%esi),%ebx
    990a:	7c ec                	jl     98f8 <bithenge_scope_dec_ref+0x38>
    990c:	8b 46 04             	mov    0x4(%esi),%eax
    990f:	85 c0                	test   %eax,%eax
    9911:	74 09                	je     991c <bithenge_scope_dec_ref+0x5c>
    9913:	8b 10                	mov    (%eax),%edx
    9915:	4a                   	dec    %edx
    9916:	89 10                	mov    %edx,(%eax)
    9918:	85 d2                	test   %edx,%edx
    991a:	74 24                	je     9940 <bithenge_scope_dec_ref+0x80>
    991c:	8b 46 14             	mov    0x14(%esi),%eax
    991f:	89 04 24             	mov    %eax,(%esp)
    9922:	e8 b9 68 01 00       	call   201e0 <free>
    9927:	8b 46 08             	mov    0x8(%esi),%eax
    992a:	89 04 24             	mov    %eax,(%esp)
    992d:	e8 ae 68 01 00       	call   201e0 <free>
    9932:	89 75 08             	mov    %esi,0x8(%ebp)
    9935:	83 c4 10             	add    $0x10,%esp
    9938:	5b                   	pop    %ebx
    9939:	5e                   	pop    %esi
    993a:	5d                   	pop    %ebp
    993b:	e9 a0 68 01 00       	jmp    201e0 <free>
    9940:	e8 eb f7 ff ff       	call   9130 <bithenge_scope_dec_ref.part.12>
    9945:	eb d5                	jmp    991c <bithenge_scope_dec_ref+0x5c>
    9947:	89 f6                	mov    %esi,%esi
    9949:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009950 <bithenge_scope_outer>:
    9950:	55                   	push   %ebp
    9951:	89 e5                	mov    %esp,%ebp
    9953:	8b 45 08             	mov    0x8(%ebp),%eax
    9956:	5d                   	pop    %ebp
    9957:	8b 40 04             	mov    0x4(%eax),%eax
    995a:	c3                   	ret    
    995b:	90                   	nop
    995c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009960 <bithenge_scope_get_error>:
    9960:	55                   	push   %ebp
    9961:	89 e5                	mov    %esp,%ebp
    9963:	8b 45 08             	mov    0x8(%ebp),%eax
    9966:	5d                   	pop    %ebp
    9967:	8b 40 08             	mov    0x8(%eax),%eax
    996a:	c3                   	ret    
    996b:	90                   	nop
    996c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009970 <bithenge_scope_error>:
    9970:	55                   	push   %ebp
    9971:	89 e5                	mov    %esp,%ebp
    9973:	57                   	push   %edi
    9974:	56                   	push   %esi
    9975:	53                   	push   %ebx
    9976:	83 ec 3c             	sub    $0x3c,%esp
    9979:	8b 75 08             	mov    0x8(%ebp),%esi
    997c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    997f:	8b 7e 08             	mov    0x8(%esi),%edi
    9982:	85 ff                	test   %edi,%edi
    9984:	75 12                	jne    9998 <bithenge_scope_error+0x28>
    9986:	66 90                	xchg   %ax,%ax
    9988:	8b 46 04             	mov    0x4(%esi),%eax
    998b:	85 c0                	test   %eax,%eax
    998d:	74 19                	je     99a8 <bithenge_scope_error+0x38>
    998f:	8b 48 08             	mov    0x8(%eax),%ecx
    9992:	89 c6                	mov    %eax,%esi
    9994:	85 c9                	test   %ecx,%ecx
    9996:	74 f0                	je     9988 <bithenge_scope_error+0x18>
    9998:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    999d:	83 c4 3c             	add    $0x3c,%esp
    99a0:	5b                   	pop    %ebx
    99a1:	5e                   	pop    %esi
    99a2:	5f                   	pop    %edi
    99a3:	5d                   	pop    %ebp
    99a4:	c3                   	ret    
    99a5:	8d 76 00             	lea    0x0(%esi),%esi
    99a8:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)
    99af:	c7 45 e0 00 01 00 00 	movl   $0x100,-0x20(%ebp)
    99b6:	e8 15 67 01 00       	call   200d0 <malloc>
    99bb:	89 46 08             	mov    %eax,0x8(%esi)
    99be:	85 c0                	test   %eax,%eax
    99c0:	0f 84 da 00 00 00    	je     9aa0 <bithenge_scope_error+0x130>
    99c6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    99c9:	8d 45 10             	lea    0x10(%ebp),%eax
    99cc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    99cf:	eb 54                	jmp    9a25 <bithenge_scope_error+0xb5>
    99d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    99d8:	c7 44 24 04 25 00 00 	movl   $0x25,0x4(%esp)
    99df:	00 
    99e0:	89 1c 24             	mov    %ebx,(%esp)
    99e3:	e8 a8 bf 00 00       	call   15990 <str_chr>
    99e8:	89 c7                	mov    %eax,%edi
    99ea:	85 c0                	test   %eax,%eax
    99ec:	0f 84 9e 00 00 00    	je     9a90 <bithenge_scope_error+0x120>
    99f2:	8b 45 e0             	mov    -0x20(%ebp),%eax
    99f5:	89 fe                	mov    %edi,%esi
    99f7:	48                   	dec    %eax
    99f8:	29 de                	sub    %ebx,%esi
    99fa:	39 c6                	cmp    %eax,%esi
    99fc:	76 02                	jbe    9a00 <bithenge_scope_error+0x90>
    99fe:	89 c6                	mov    %eax,%esi
    9a00:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9a03:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    9a07:	89 74 24 08          	mov    %esi,0x8(%esp)
    9a0b:	89 04 24             	mov    %eax,(%esp)
    9a0e:	e8 cd 97 00 00       	call   131e0 <memcpy>
    9a13:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    9a16:	8b 45 e0             	mov    -0x20(%ebp),%eax
    9a19:	01 f3                	add    %esi,%ebx
    9a1b:	29 f0                	sub    %esi,%eax
    9a1d:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
    9a20:	89 45 e0             	mov    %eax,-0x20(%ebp)
    9a23:	89 fb                	mov    %edi,%ebx
    9a25:	8a 03                	mov    (%ebx),%al
    9a27:	84 c0                	test   %al,%al
    9a29:	74 4d                	je     9a78 <bithenge_scope_error+0x108>
    9a2b:	3c 25                	cmp    $0x25,%al
    9a2d:	75 a9                	jne    99d8 <bithenge_scope_error+0x68>
    9a2f:	80 7b 01 74          	cmpb   $0x74,0x1(%ebx)
    9a33:	75 a3                	jne    99d8 <bithenge_scope_error+0x68>
    9a35:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    9a38:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    9a3b:	83 c2 04             	add    $0x4,%edx
    9a3e:	83 c3 02             	add    $0x2,%ebx
    9a41:	8b 00                	mov    (%eax),%eax
    9a43:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    9a4a:	00 
    9a4b:	89 44 24 0c          	mov    %eax,0xc(%esp)
    9a4f:	8d 45 e0             	lea    -0x20(%ebp),%eax
    9a52:	89 44 24 04          	mov    %eax,0x4(%esp)
    9a56:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    9a59:	89 04 24             	mov    %eax,(%esp)
    9a5c:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    9a5f:	e8 1c 82 ff ff       	call   1c80 <bithenge_print_node_to_string>
    9a64:	85 c0                	test   %eax,%eax
    9a66:	0f 85 31 ff ff ff    	jne    999d <bithenge_scope_error+0x2d>
    9a6c:	8a 03                	mov    (%ebx),%al
    9a6e:	84 c0                	test   %al,%al
    9a70:	75 b9                	jne    9a2b <bithenge_scope_error+0xbb>
    9a72:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9a78:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    9a7b:	c6 00 00             	movb   $0x0,(%eax)
    9a7e:	83 c4 3c             	add    $0x3c,%esp
    9a81:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    9a86:	5b                   	pop    %ebx
    9a87:	5e                   	pop    %esi
    9a88:	5f                   	pop    %edi
    9a89:	5d                   	pop    %ebp
    9a8a:	c3                   	ret    
    9a8b:	90                   	nop
    9a8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9a90:	89 1c 24             	mov    %ebx,(%esp)
    9a93:	e8 38 a7 00 00       	call   141d0 <str_length>
    9a98:	8d 3c 03             	lea    (%ebx,%eax,1),%edi
    9a9b:	e9 52 ff ff ff       	jmp    99f2 <bithenge_scope_error+0x82>
    9aa0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    9aa5:	e9 f3 fe ff ff       	jmp    999d <bithenge_scope_error+0x2d>
    9aaa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00009ab0 <bithenge_scope_get_current_node>:
    9ab0:	55                   	push   %ebp
    9ab1:	89 e5                	mov    %esp,%ebp
    9ab3:	8b 45 08             	mov    0x8(%ebp),%eax
    9ab6:	8b 40 18             	mov    0x18(%eax),%eax
    9ab9:	85 c0                	test   %eax,%eax
    9abb:	74 07                	je     9ac4 <bithenge_scope_get_current_node+0x14>
    9abd:	8b 50 04             	mov    0x4(%eax),%edx
    9ac0:	42                   	inc    %edx
    9ac1:	89 50 04             	mov    %edx,0x4(%eax)
    9ac4:	5d                   	pop    %ebp
    9ac5:	c3                   	ret    
    9ac6:	8d 76 00             	lea    0x0(%esi),%esi
    9ac9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009ad0 <bithenge_scope_set_current_node>:
    9ad0:	55                   	push   %ebp
    9ad1:	89 e5                	mov    %esp,%ebp
    9ad3:	53                   	push   %ebx
    9ad4:	83 ec 14             	sub    $0x14,%esp
    9ad7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    9ada:	8b 43 18             	mov    0x18(%ebx),%eax
    9add:	89 04 24             	mov    %eax,(%esp)
    9ae0:	e8 db 07 00 00       	call   a2c0 <bithenge_node_dec_ref>
    9ae5:	8b 45 0c             	mov    0xc(%ebp),%eax
    9ae8:	89 43 18             	mov    %eax,0x18(%ebx)
    9aeb:	83 c4 14             	add    $0x14,%esp
    9aee:	5b                   	pop    %ebx
    9aef:	5d                   	pop    %ebp
    9af0:	c3                   	ret    
    9af1:	eb 0d                	jmp    9b00 <bithenge_scope_in_node>
    9af3:	90                   	nop
    9af4:	90                   	nop
    9af5:	90                   	nop
    9af6:	90                   	nop
    9af7:	90                   	nop
    9af8:	90                   	nop
    9af9:	90                   	nop
    9afa:	90                   	nop
    9afb:	90                   	nop
    9afc:	90                   	nop
    9afd:	90                   	nop
    9afe:	90                   	nop
    9aff:	90                   	nop

00009b00 <bithenge_scope_in_node>:
    9b00:	55                   	push   %ebp
    9b01:	89 e5                	mov    %esp,%ebp
    9b03:	8b 45 08             	mov    0x8(%ebp),%eax
    9b06:	8b 40 1c             	mov    0x1c(%eax),%eax
    9b09:	85 c0                	test   %eax,%eax
    9b0b:	74 07                	je     9b14 <bithenge_scope_in_node+0x14>
    9b0d:	8b 48 04             	mov    0x4(%eax),%ecx
    9b10:	41                   	inc    %ecx
    9b11:	89 48 04             	mov    %ecx,0x4(%eax)
    9b14:	5d                   	pop    %ebp
    9b15:	c3                   	ret    
    9b16:	8d 76 00             	lea    0x0(%esi),%esi
    9b19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009b20 <bithenge_scope_set_in_node>:
    9b20:	55                   	push   %ebp
    9b21:	89 e5                	mov    %esp,%ebp
    9b23:	53                   	push   %ebx
    9b24:	83 ec 14             	sub    $0x14,%esp
    9b27:	8b 5d 08             	mov    0x8(%ebp),%ebx
    9b2a:	8b 43 1c             	mov    0x1c(%ebx),%eax
    9b2d:	89 04 24             	mov    %eax,(%esp)
    9b30:	e8 8b 07 00 00       	call   a2c0 <bithenge_node_dec_ref>
    9b35:	8b 45 0c             	mov    0xc(%ebp),%eax
    9b38:	89 43 1c             	mov    %eax,0x1c(%ebx)
    9b3b:	83 c4 14             	add    $0x14,%esp
    9b3e:	5b                   	pop    %ebx
    9b3f:	5d                   	pop    %ebp
    9b40:	c3                   	ret    
    9b41:	eb 0d                	jmp    9b50 <bithenge_scope_set_barrier>
    9b43:	90                   	nop
    9b44:	90                   	nop
    9b45:	90                   	nop
    9b46:	90                   	nop
    9b47:	90                   	nop
    9b48:	90                   	nop
    9b49:	90                   	nop
    9b4a:	90                   	nop
    9b4b:	90                   	nop
    9b4c:	90                   	nop
    9b4d:	90                   	nop
    9b4e:	90                   	nop
    9b4f:	90                   	nop

00009b50 <bithenge_scope_set_barrier>:
    9b50:	55                   	push   %ebp
    9b51:	89 e5                	mov    %esp,%ebp
    9b53:	8b 45 08             	mov    0x8(%ebp),%eax
    9b56:	c6 40 0c 01          	movb   $0x1,0xc(%eax)
    9b5a:	5d                   	pop    %ebp
    9b5b:	c3                   	ret    
    9b5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009b60 <bithenge_scope_is_barrier>:
    9b60:	55                   	push   %ebp
    9b61:	89 e5                	mov    %esp,%ebp
    9b63:	8b 45 08             	mov    0x8(%ebp),%eax
    9b66:	5d                   	pop    %ebp
    9b67:	8a 40 0c             	mov    0xc(%eax),%al
    9b6a:	c3                   	ret    
    9b6b:	90                   	nop
    9b6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00009b70 <bithenge_scope_alloc_params>:
    9b70:	55                   	push   %ebp
    9b71:	89 e5                	mov    %esp,%ebp
    9b73:	56                   	push   %esi
    9b74:	53                   	push   %ebx
    9b75:	83 ec 10             	sub    $0x10,%esp
    9b78:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    9b7b:	8b 75 08             	mov    0x8(%ebp),%esi
    9b7e:	8d 04 9d 00 00 00 00 	lea    0x0(,%ebx,4),%eax
    9b85:	89 04 24             	mov    %eax,(%esp)
    9b88:	e8 43 65 01 00       	call   200d0 <malloc>
    9b8d:	89 46 14             	mov    %eax,0x14(%esi)
    9b90:	85 c0                	test   %eax,%eax
    9b92:	74 24                	je     9bb8 <bithenge_scope_alloc_params+0x48>
    9b94:	31 d2                	xor    %edx,%edx
    9b96:	89 5e 10             	mov    %ebx,0x10(%esi)
    9b99:	85 db                	test   %ebx,%ebx
    9b9b:	7f 06                	jg     9ba3 <bithenge_scope_alloc_params+0x33>
    9b9d:	eb 10                	jmp    9baf <bithenge_scope_alloc_params+0x3f>
    9b9f:	90                   	nop
    9ba0:	8b 46 14             	mov    0x14(%esi),%eax
    9ba3:	c7 04 90 00 00 00 00 	movl   $0x0,(%eax,%edx,4)
    9baa:	42                   	inc    %edx
    9bab:	39 da                	cmp    %ebx,%edx
    9bad:	75 f1                	jne    9ba0 <bithenge_scope_alloc_params+0x30>
    9baf:	31 c0                	xor    %eax,%eax
    9bb1:	83 c4 10             	add    $0x10,%esp
    9bb4:	5b                   	pop    %ebx
    9bb5:	5e                   	pop    %esi
    9bb6:	5d                   	pop    %ebp
    9bb7:	c3                   	ret    
    9bb8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    9bbd:	eb f2                	jmp    9bb1 <bithenge_scope_alloc_params+0x41>
    9bbf:	90                   	nop

00009bc0 <bithenge_scope_set_param>:
    9bc0:	55                   	push   %ebp
    9bc1:	89 e5                	mov    %esp,%ebp
    9bc3:	83 ec 18             	sub    $0x18,%esp
    9bc6:	8b 45 08             	mov    0x8(%ebp),%eax
    9bc9:	8b 55 0c             	mov    0xc(%ebp),%edx
    9bcc:	85 c0                	test   %eax,%eax
    9bce:	74 32                	je     9c02 <bithenge_scope_set_param+0x42>
    9bd0:	85 d2                	test   %edx,%edx
    9bd2:	78 12                	js     9be6 <bithenge_scope_set_param+0x26>
    9bd4:	3b 50 10             	cmp    0x10(%eax),%edx
    9bd7:	7d 0d                	jge    9be6 <bithenge_scope_set_param+0x26>
    9bd9:	8b 40 14             	mov    0x14(%eax),%eax
    9bdc:	8b 4d 10             	mov    0x10(%ebp),%ecx
    9bdf:	89 0c 90             	mov    %ecx,(%eax,%edx,4)
    9be2:	31 c0                	xor    %eax,%eax
    9be4:	c9                   	leave  
    9be5:	c3                   	ret    
    9be6:	c7 44 24 08 84 01 00 	movl   $0x184,0x8(%esp)
    9bed:	00 
    9bee:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    9bf5:	00 
    9bf6:	c7 04 24 f8 d1 02 00 	movl   $0x2d1f8,(%esp)
    9bfd:	e8 ae 0c 02 00       	call   2a8b0 <assert_abort>
    9c02:	c7 44 24 08 83 01 00 	movl   $0x183,0x8(%esp)
    9c09:	00 
    9c0a:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    9c11:	00 
    9c12:	c7 04 24 1a d1 02 00 	movl   $0x2d11a,(%esp)
    9c19:	e8 92 0c 02 00       	call   2a8b0 <assert_abort>
    9c1e:	66 90                	xchg   %ax,%ax

00009c20 <bithenge_scope_get_param>:
    9c20:	55                   	push   %ebp
    9c21:	89 e5                	mov    %esp,%ebp
    9c23:	83 ec 18             	sub    $0x18,%esp
    9c26:	8b 45 08             	mov    0x8(%ebp),%eax
    9c29:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    9c2c:	85 c0                	test   %eax,%eax
    9c2e:	75 0f                	jne    9c3f <bithenge_scope_get_param+0x1f>
    9c30:	eb 36                	jmp    9c68 <bithenge_scope_get_param+0x48>
    9c32:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    9c38:	8b 40 04             	mov    0x4(%eax),%eax
    9c3b:	85 c0                	test   %eax,%eax
    9c3d:	74 29                	je     9c68 <bithenge_scope_get_param+0x48>
    9c3f:	8b 50 10             	mov    0x10(%eax),%edx
    9c42:	85 d2                	test   %edx,%edx
    9c44:	74 f2                	je     9c38 <bithenge_scope_get_param+0x18>
    9c46:	85 c9                	test   %ecx,%ecx
    9c48:	78 3f                	js     9c89 <bithenge_scope_get_param+0x69>
    9c4a:	39 ca                	cmp    %ecx,%edx
    9c4c:	7e 3b                	jle    9c89 <bithenge_scope_get_param+0x69>
    9c4e:	8b 40 14             	mov    0x14(%eax),%eax
    9c51:	8b 55 10             	mov    0x10(%ebp),%edx
    9c54:	8b 04 88             	mov    (%eax,%ecx,4),%eax
    9c57:	89 02                	mov    %eax,(%edx)
    9c59:	85 c0                	test   %eax,%eax
    9c5b:	74 27                	je     9c84 <bithenge_scope_get_param+0x64>
    9c5d:	8b 50 04             	mov    0x4(%eax),%edx
    9c60:	42                   	inc    %edx
    9c61:	89 50 04             	mov    %edx,0x4(%eax)
    9c64:	31 c0                	xor    %eax,%eax
    9c66:	c9                   	leave  
    9c67:	c3                   	ret    
    9c68:	c7 44 24 08 96 01 00 	movl   $0x196,0x8(%esp)
    9c6f:	00 
    9c70:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    9c77:	00 
    9c78:	c7 04 24 1a d1 02 00 	movl   $0x2d11a,(%esp)
    9c7f:	e8 2c 0c 02 00       	call   2a8b0 <assert_abort>
    9c84:	e8 40 01 00 00       	call   9dc9 <bithenge_node_inc_ref.part.4>
    9c89:	e8 7f 01 00 00       	call   9e0d <bithenge_scope_get_param.part.13>
    9c8e:	66 90                	xchg   %ax,%ax

00009c90 <bithenge_barrier_transform_set_subtransform>:
    9c90:	55                   	push   %ebp
    9c91:	89 e5                	mov    %esp,%ebp
    9c93:	83 ec 18             	sub    $0x18,%esp
    9c96:	8b 45 0c             	mov    0xc(%ebp),%eax
    9c99:	8b 55 08             	mov    0x8(%ebp),%edx
    9c9c:	85 c0                	test   %eax,%eax
    9c9e:	74 15                	je     9cb5 <bithenge_barrier_transform_set_subtransform+0x25>
    9ca0:	8b 48 08             	mov    0x8(%eax),%ecx
    9ca3:	85 c9                	test   %ecx,%ecx
    9ca5:	75 46                	jne    9ced <bithenge_barrier_transform_set_subtransform+0x5d>
    9ca7:	8b 4a 0c             	mov    0xc(%edx),%ecx
    9caa:	85 c9                	test   %ecx,%ecx
    9cac:	75 23                	jne    9cd1 <bithenge_barrier_transform_set_subtransform+0x41>
    9cae:	89 42 0c             	mov    %eax,0xc(%edx)
    9cb1:	31 c0                	xor    %eax,%eax
    9cb3:	c9                   	leave  
    9cb4:	c3                   	ret    
    9cb5:	c7 44 24 08 fc 01 00 	movl   $0x1fc,0x8(%esp)
    9cbc:	00 
    9cbd:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    9cc4:	00 
    9cc5:	c7 04 24 34 d1 02 00 	movl   $0x2d134,(%esp)
    9ccc:	e8 df 0b 02 00       	call   2a8b0 <assert_abort>
    9cd1:	c7 44 24 08 05 02 00 	movl   $0x205,0x8(%esp)
    9cd8:	00 
    9cd9:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    9ce0:	00 
    9ce1:	c7 04 24 2d d1 02 00 	movl   $0x2d12d,(%esp)
    9ce8:	e8 c3 0b 02 00       	call   2a8b0 <assert_abort>
    9ced:	c7 44 24 08 fd 01 00 	movl   $0x1fd,0x8(%esp)
    9cf4:	00 
    9cf5:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    9cfc:	00 
    9cfd:	c7 04 24 38 d2 02 00 	movl   $0x2d238,(%esp)
    9d04:	e8 a7 0b 02 00       	call   2a8b0 <assert_abort>
    9d09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009d10 <bithenge_new_barrier_transform>:
    9d10:	55                   	push   %ebp
    9d11:	89 e5                	mov    %esp,%ebp
    9d13:	83 ec 18             	sub    $0x18,%esp
    9d16:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
    9d1d:	e8 ae 63 01 00       	call   200d0 <malloc>
    9d22:	85 c0                	test   %eax,%eax
    9d24:	74 2a                	je     9d50 <bithenge_new_barrier_transform+0x40>
    9d26:	8b 55 0c             	mov    0xc(%ebp),%edx
    9d29:	c7 00 78 d2 02 00    	movl   $0x2d278,(%eax)
    9d2f:	89 50 08             	mov    %edx,0x8(%eax)
    9d32:	8b 55 08             	mov    0x8(%ebp),%edx
    9d35:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    9d3c:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
    9d43:	89 02                	mov    %eax,(%edx)
    9d45:	31 c0                	xor    %eax,%eax
    9d47:	c9                   	leave  
    9d48:	c3                   	ret    
    9d49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    9d50:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    9d57:	e8 84 64 01 00       	call   201e0 <free>
    9d5c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    9d61:	c9                   	leave  
    9d62:	c3                   	ret    

00009d63 <bithenge_blob_read.part.1>:
    9d63:	55                   	push   %ebp
    9d64:	89 e5                	mov    %esp,%ebp
    9d66:	83 ec 18             	sub    $0x18,%esp
    9d69:	c7 44 24 08 96 00 00 	movl   $0x96,0x8(%esp)
    9d70:	00 
    9d71:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    9d78:	00 
    9d79:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    9d80:	e8 2b 0b 02 00       	call   2a8b0 <assert_abort>

00009d85 <bithenge_node_as_blob.part.2>:
    9d85:	55                   	push   %ebp
    9d86:	89 e5                	mov    %esp,%ebp
    9d88:	83 ec 18             	sub    $0x18,%esp
    9d8b:	c7 44 24 08 d9 00 00 	movl   $0xd9,0x8(%esp)
    9d92:	00 
    9d93:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    9d9a:	00 
    9d9b:	c7 04 24 dc cd 02 00 	movl   $0x2cddc,(%esp)
    9da2:	e8 09 0b 02 00       	call   2a8b0 <assert_abort>

00009da7 <bithenge_blob_size.part.3>:
    9da7:	55                   	push   %ebp
    9da8:	89 e5                	mov    %esp,%ebp
    9daa:	83 ec 18             	sub    $0x18,%esp
    9dad:	c7 44 24 08 7f 00 00 	movl   $0x7f,0x8(%esp)
    9db4:	00 
    9db5:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    9dbc:	00 
    9dbd:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    9dc4:	e8 e7 0a 02 00       	call   2a8b0 <assert_abort>

00009dc9 <bithenge_node_inc_ref.part.4>:
    9dc9:	55                   	push   %ebp
    9dca:	89 e5                	mov    %esp,%ebp
    9dcc:	83 ec 18             	sub    $0x18,%esp
    9dcf:	c7 44 24 08 70 00 00 	movl   $0x70,0x8(%esp)
    9dd6:	00 
    9dd7:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    9dde:	00 
    9ddf:	c7 04 24 a0 d0 02 00 	movl   $0x2d0a0,(%esp)
    9de6:	e8 c5 0a 02 00       	call   2a8b0 <assert_abort>

00009deb <bithenge_integer_node_value.isra.5.part.6>:
    9deb:	55                   	push   %ebp
    9dec:	89 e5                	mov    %esp,%ebp
    9dee:	83 ec 18             	sub    $0x18,%esp
    9df1:	c7 44 24 08 98 00 00 	movl   $0x98,0x8(%esp)
    9df8:	00 
    9df9:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    9e00:	00 
    9e01:	c7 04 24 d4 d1 02 00 	movl   $0x2d1d4,(%esp)
    9e08:	e8 a3 0a 02 00       	call   2a8b0 <assert_abort>

00009e0d <bithenge_scope_get_param.part.13>:
    9e0d:	55                   	push   %ebp
    9e0e:	89 e5                	mov    %esp,%ebp
    9e10:	83 ec 18             	sub    $0x18,%esp
    9e13:	c7 44 24 08 98 01 00 	movl   $0x198,0x8(%esp)
    9e1a:	00 
    9e1b:	c7 44 24 04 0a d1 02 	movl   $0x2d10a,0x4(%esp)
    9e22:	00 
    9e23:	c7 04 24 f8 d1 02 00 	movl   $0x2d1f8,(%esp)
    9e2a:	e8 81 0a 02 00       	call   2a8b0 <assert_abort>
    9e2f:	90                   	nop

00009e30 <empty_internal_node_for_each>:
    9e30:	55                   	push   %ebp
    9e31:	31 c0                	xor    %eax,%eax
    9e33:	89 e5                	mov    %esp,%ebp
    9e35:	5d                   	pop    %ebp
    9e36:	c3                   	ret    
    9e37:	89 f6                	mov    %esi,%esi
    9e39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009e40 <empty_internal_node_get>:
    9e40:	55                   	push   %ebp
    9e41:	83 c8 ff             	or     $0xffffffff,%eax
    9e44:	89 e5                	mov    %esp,%ebp
    9e46:	5d                   	pop    %ebp
    9e47:	c3                   	ret    
    9e48:	90                   	nop
    9e49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00009e50 <internal_node_indestructible>:
    9e50:	55                   	push   %ebp
    9e51:	89 e5                	mov    %esp,%ebp
    9e53:	83 ec 18             	sub    $0x18,%esp
    9e56:	c7 44 24 08 a8 00 00 	movl   $0xa8,0x8(%esp)
    9e5d:	00 
    9e5e:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    9e65:	00 
    9e66:	c7 04 24 c4 cd 02 00 	movl   $0x2cdc4,(%esp)
    9e6d:	e8 3e 0a 02 00       	call   2a8b0 <assert_abort>
    9e72:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    9e79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009e80 <simple_internal_node_for_each>:
    9e80:	55                   	push   %ebp
    9e81:	89 e5                	mov    %esp,%ebp
    9e83:	57                   	push   %edi
    9e84:	56                   	push   %esi
    9e85:	53                   	push   %ebx
    9e86:	83 ec 2c             	sub    $0x2c,%esp
    9e89:	8b 55 08             	mov    0x8(%ebp),%edx
    9e8c:	83 7a 18 00          	cmpl   $0x0,0x18(%edx)
    9e90:	0f 8e 92 00 00 00    	jle    9f28 <simple_internal_node_for_each+0xa8>
    9e96:	8b 4a 10             	mov    0x10(%edx),%ecx
    9e99:	8b 01                	mov    (%ecx),%eax
    9e9b:	85 c0                	test   %eax,%eax
    9e9d:	74 7d                	je     9f1c <simple_internal_node_for_each+0x9c>
    9e9f:	8b 58 04             	mov    0x4(%eax),%ebx
    9ea2:	8b 49 04             	mov    0x4(%ecx),%ecx
    9ea5:	43                   	inc    %ebx
    9ea6:	85 c9                	test   %ecx,%ecx
    9ea8:	89 58 04             	mov    %ebx,0x4(%eax)
    9eab:	74 6f                	je     9f1c <simple_internal_node_for_each+0x9c>
    9ead:	bb 0c 00 00 00       	mov    $0xc,%ebx
    9eb2:	31 f6                	xor    %esi,%esi
    9eb4:	31 ff                	xor    %edi,%edi
    9eb6:	89 55 e0             	mov    %edx,-0x20(%ebp)
    9eb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    9ec0:	8b 51 04             	mov    0x4(%ecx),%edx
    9ec3:	42                   	inc    %edx
    9ec4:	89 51 04             	mov    %edx,0x4(%ecx)
    9ec7:	8b 55 10             	mov    0x10(%ebp),%edx
    9eca:	89 54 24 08          	mov    %edx,0x8(%esp)
    9ece:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    9ed2:	89 04 24             	mov    %eax,(%esp)
    9ed5:	8b 55 0c             	mov    0xc(%ebp),%edx
    9ed8:	ff d2                	call   *%edx
    9eda:	85 c0                	test   %eax,%eax
    9edc:	75 12                	jne    9ef0 <simple_internal_node_for_each+0x70>
    9ede:	83 c6 01             	add    $0x1,%esi
    9ee1:	8b 55 e0             	mov    -0x20(%ebp),%edx
    9ee4:	83 d7 00             	adc    $0x0,%edi
    9ee7:	39 7a 18             	cmp    %edi,0x18(%edx)
    9eea:	7f 11                	jg     9efd <simple_internal_node_for_each+0x7d>
    9eec:	7d 0a                	jge    9ef8 <simple_internal_node_for_each+0x78>
    9eee:	31 c0                	xor    %eax,%eax
    9ef0:	83 c4 2c             	add    $0x2c,%esp
    9ef3:	5b                   	pop    %ebx
    9ef4:	5e                   	pop    %esi
    9ef5:	5f                   	pop    %edi
    9ef6:	5d                   	pop    %ebp
    9ef7:	c3                   	ret    
    9ef8:	39 72 14             	cmp    %esi,0x14(%edx)
    9efb:	76 f1                	jbe    9eee <simple_internal_node_for_each+0x6e>
    9efd:	8b 55 e0             	mov    -0x20(%ebp),%edx
    9f00:	8b 4a 10             	mov    0x10(%edx),%ecx
    9f03:	8b 44 19 fc          	mov    -0x4(%ecx,%ebx,1),%eax
    9f07:	85 c0                	test   %eax,%eax
    9f09:	74 11                	je     9f1c <simple_internal_node_for_each+0x9c>
    9f0b:	8b 50 04             	mov    0x4(%eax),%edx
    9f0e:	8b 0c 19             	mov    (%ecx,%ebx,1),%ecx
    9f11:	42                   	inc    %edx
    9f12:	83 c3 08             	add    $0x8,%ebx
    9f15:	89 50 04             	mov    %edx,0x4(%eax)
    9f18:	85 c9                	test   %ecx,%ecx
    9f1a:	75 a4                	jne    9ec0 <simple_internal_node_for_each+0x40>
    9f1c:	e8 29 0c 00 00       	call   ab4a <bithenge_node_inc_ref.part.2>
    9f21:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    9f28:	7c c4                	jl     9eee <simple_internal_node_for_each+0x6e>
    9f2a:	83 7a 14 00          	cmpl   $0x0,0x14(%edx)
    9f2e:	0f 87 62 ff ff ff    	ja     9e96 <simple_internal_node_for_each+0x16>
    9f34:	eb b8                	jmp    9eee <simple_internal_node_for_each+0x6e>
    9f36:	8d 76 00             	lea    0x0(%esi),%esi
    9f39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00009f40 <simple_internal_node_destroy>:
    9f40:	55                   	push   %ebp
    9f41:	89 e5                	mov    %esp,%ebp
    9f43:	57                   	push   %edi
    9f44:	56                   	push   %esi
    9f45:	53                   	push   %ebx
    9f46:	83 ec 2c             	sub    $0x2c,%esp
    9f49:	8b 4d 08             	mov    0x8(%ebp),%ecx
    9f4c:	8b 51 18             	mov    0x18(%ecx),%edx
    9f4f:	8b 41 14             	mov    0x14(%ecx),%eax
    9f52:	89 45 e0             	mov    %eax,-0x20(%ebp)
    9f55:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    9f58:	83 fa 00             	cmp    $0x0,%edx
    9f5b:	0f 8e ef 00 00 00    	jle    a050 <simple_internal_node_destroy+0x110>
    9f61:	31 f6                	xor    %esi,%esi
    9f63:	31 ff                	xor    %edi,%edi
    9f65:	8d 76 00             	lea    0x0(%esi),%esi
    9f68:	8b 41 10             	mov    0x10(%ecx),%eax
    9f6b:	8b 1c b0             	mov    (%eax,%esi,4),%ebx
    9f6e:	85 db                	test   %ebx,%ebx
    9f70:	74 13                	je     9f85 <simple_internal_node_destroy+0x45>
    9f72:	8b 43 04             	mov    0x4(%ebx),%eax
    9f75:	85 c0                	test   %eax,%eax
    9f77:	0f 84 e7 00 00 00    	je     a064 <simple_internal_node_destroy+0x124>
    9f7d:	48                   	dec    %eax
    9f7e:	89 43 04             	mov    %eax,0x4(%ebx)
    9f81:	85 c0                	test   %eax,%eax
    9f83:	74 43                	je     9fc8 <simple_internal_node_destroy+0x88>
    9f85:	83 c6 01             	add    $0x1,%esi
    9f88:	8b 45 e0             	mov    -0x20(%ebp),%eax
    9f8b:	83 d7 00             	adc    $0x0,%edi
    9f8e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    9f91:	0f a4 c2 01          	shld   $0x1,%eax,%edx
    9f95:	01 c0                	add    %eax,%eax
    9f97:	39 fa                	cmp    %edi,%edx
    9f99:	7f cd                	jg     9f68 <simple_internal_node_destroy+0x28>
    9f9b:	7d 53                	jge    9ff0 <simple_internal_node_destroy+0xb0>
    9f9d:	80 79 1c 00          	cmpb   $0x0,0x1c(%ecx)
    9fa1:	74 11                	je     9fb4 <simple_internal_node_destroy+0x74>
    9fa3:	8b 41 10             	mov    0x10(%ecx),%eax
    9fa6:	89 4d dc             	mov    %ecx,-0x24(%ebp)
    9fa9:	89 04 24             	mov    %eax,(%esp)
    9fac:	e8 2f 62 01 00       	call   201e0 <free>
    9fb1:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    9fb4:	89 4d 08             	mov    %ecx,0x8(%ebp)
    9fb7:	83 c4 2c             	add    $0x2c,%esp
    9fba:	5b                   	pop    %ebx
    9fbb:	5e                   	pop    %esi
    9fbc:	5f                   	pop    %edi
    9fbd:	5d                   	pop    %ebp
    9fbe:	e9 1d 62 01 00       	jmp    201e0 <free>
    9fc3:	90                   	nop
    9fc4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    9fc8:	8b 03                	mov    (%ebx),%eax
    9fca:	83 f8 02             	cmp    $0x2,%eax
    9fcd:	74 b6                	je     9f85 <simple_internal_node_destroy+0x45>
    9fcf:	77 2f                	ja     a000 <simple_internal_node_destroy+0xc0>
    9fd1:	48                   	dec    %eax
    9fd2:	74 6c                	je     a040 <simple_internal_node_destroy+0x100>
    9fd4:	89 1c 24             	mov    %ebx,(%esp)
    9fd7:	89 4d dc             	mov    %ecx,-0x24(%ebp)
    9fda:	e8 01 62 01 00       	call   201e0 <free>
    9fdf:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    9fe2:	8b 41 14             	mov    0x14(%ecx),%eax
    9fe5:	8b 51 18             	mov    0x18(%ecx),%edx
    9fe8:	89 45 e0             	mov    %eax,-0x20(%ebp)
    9feb:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    9fee:	eb 95                	jmp    9f85 <simple_internal_node_destroy+0x45>
    9ff0:	39 f0                	cmp    %esi,%eax
    9ff2:	0f 87 70 ff ff ff    	ja     9f68 <simple_internal_node_destroy+0x28>
    9ff8:	eb a3                	jmp    9f9d <simple_internal_node_destroy+0x5d>
    9ffa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    a000:	83 f8 04             	cmp    $0x4,%eax
    a003:	74 1b                	je     a020 <simple_internal_node_destroy+0xe0>
    a005:	83 f8 05             	cmp    $0x5,%eax
    a008:	75 ca                	jne    9fd4 <simple_internal_node_destroy+0x94>
    a00a:	8b 43 08             	mov    0x8(%ebx),%eax
    a00d:	85 c0                	test   %eax,%eax
    a00f:	74 58                	je     a069 <simple_internal_node_destroy+0x129>
    a011:	89 1c 24             	mov    %ebx,(%esp)
    a014:	89 4d dc             	mov    %ecx,-0x24(%ebp)
    a017:	ff 50 0c             	call   *0xc(%eax)
    a01a:	eb c3                	jmp    9fdf <simple_internal_node_destroy+0x9f>
    a01c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a020:	80 7b 0c 00          	cmpb   $0x0,0xc(%ebx)
    a024:	74 ae                	je     9fd4 <simple_internal_node_destroy+0x94>
    a026:	8b 43 08             	mov    0x8(%ebx),%eax
    a029:	89 4d dc             	mov    %ecx,-0x24(%ebp)
    a02c:	89 04 24             	mov    %eax,(%esp)
    a02f:	e8 ac 61 01 00       	call   201e0 <free>
    a034:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    a037:	eb 9b                	jmp    9fd4 <simple_internal_node_destroy+0x94>
    a039:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a040:	8b 43 08             	mov    0x8(%ebx),%eax
    a043:	89 1c 24             	mov    %ebx,(%esp)
    a046:	89 4d dc             	mov    %ecx,-0x24(%ebp)
    a049:	ff 50 08             	call   *0x8(%eax)
    a04c:	eb 91                	jmp    9fdf <simple_internal_node_destroy+0x9f>
    a04e:	66 90                	xchg   %ax,%ax
    a050:	0f 8c 47 ff ff ff    	jl     9f9d <simple_internal_node_destroy+0x5d>
    a056:	83 f8 00             	cmp    $0x0,%eax
    a059:	0f 87 02 ff ff ff    	ja     9f61 <simple_internal_node_destroy+0x21>
    a05f:	e9 39 ff ff ff       	jmp    9f9d <simple_internal_node_destroy+0x5d>
    a064:	e8 03 0b 00 00       	call   ab6c <bithenge_node_dec_ref.part.4>
    a069:	c7 44 24 08 2e 00 00 	movl   $0x2e,0x8(%esp)
    a070:	00 
    a071:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    a078:	00 
    a079:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    a080:	e8 2b 08 02 00       	call   2a8b0 <assert_abort>
    a085:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a089:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000a090 <get_for_each_func>:
    a090:	55                   	push   %ebp
    a091:	89 e5                	mov    %esp,%ebp
    a093:	57                   	push   %edi
    a094:	56                   	push   %esi
    a095:	53                   	push   %ebx
    a096:	83 ec 3c             	sub    $0x3c,%esp
    a099:	8b 7d 10             	mov    0x10(%ebp),%edi
    a09c:	8b 5d 08             	mov    0x8(%ebp),%ebx
    a09f:	8b 75 0c             	mov    0xc(%ebp),%esi
    a0a2:	8b 17                	mov    (%edi),%edx
    a0a4:	8b 03                	mov    (%ebx),%eax
    a0a6:	3b 02                	cmp    (%edx),%eax
    a0a8:	74 46                	je     a0f0 <get_for_each_func+0x60>
    a0aa:	c6 45 e4 00          	movb   $0x0,-0x1c(%ebp)
    a0ae:	31 c0                	xor    %eax,%eax
    a0b0:	8b 53 04             	mov    0x4(%ebx),%edx
    a0b3:	85 d2                	test   %edx,%edx
    a0b5:	0f 84 d9 01 00 00    	je     a294 <get_for_each_func+0x204>
    a0bb:	4a                   	dec    %edx
    a0bc:	89 53 04             	mov    %edx,0x4(%ebx)
    a0bf:	85 d2                	test   %edx,%edx
    a0c1:	74 3d                	je     a100 <get_for_each_func+0x70>
    a0c3:	85 c0                	test   %eax,%eax
    a0c5:	75 21                	jne    a0e8 <get_for_each_func+0x58>
    a0c7:	80 7d e4 00          	cmpb   $0x0,-0x1c(%ebp)
    a0cb:	0f 85 7f 01 00 00    	jne    a250 <get_for_each_func+0x1c0>
    a0d1:	85 f6                	test   %esi,%esi
    a0d3:	74 13                	je     a0e8 <get_for_each_func+0x58>
    a0d5:	8b 56 04             	mov    0x4(%esi),%edx
    a0d8:	85 d2                	test   %edx,%edx
    a0da:	0f 84 b4 01 00 00    	je     a294 <get_for_each_func+0x204>
    a0e0:	4a                   	dec    %edx
    a0e1:	89 56 04             	mov    %edx,0x4(%esi)
    a0e4:	85 d2                	test   %edx,%edx
    a0e6:	74 48                	je     a130 <get_for_each_func+0xa0>
    a0e8:	83 c4 3c             	add    $0x3c,%esp
    a0eb:	5b                   	pop    %ebx
    a0ec:	5e                   	pop    %esi
    a0ed:	5f                   	pop    %edi
    a0ee:	5d                   	pop    %ebp
    a0ef:	c3                   	ret    
    a0f0:	83 f8 05             	cmp    $0x5,%eax
    a0f3:	76 63                	jbe    a158 <get_for_each_func+0xc8>
    a0f5:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    a0fa:	eb b4                	jmp    a0b0 <get_for_each_func+0x20>
    a0fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a100:	8b 13                	mov    (%ebx),%edx
    a102:	83 fa 02             	cmp    $0x2,%edx
    a105:	74 bc                	je     a0c3 <get_for_each_func+0x33>
    a107:	76 57                	jbe    a160 <get_for_each_func+0xd0>
    a109:	83 fa 04             	cmp    $0x4,%edx
    a10c:	0f 84 de 00 00 00    	je     a1f0 <get_for_each_func+0x160>
    a112:	83 fa 05             	cmp    $0x5,%edx
    a115:	75 50                	jne    a167 <get_for_each_func+0xd7>
    a117:	8b 53 08             	mov    0x8(%ebx),%edx
    a11a:	85 d2                	test   %edx,%edx
    a11c:	0f 84 77 01 00 00    	je     a299 <get_for_each_func+0x209>
    a122:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a125:	89 1c 24             	mov    %ebx,(%esp)
    a128:	ff 52 0c             	call   *0xc(%edx)
    a12b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a12e:	eb 93                	jmp    a0c3 <get_for_each_func+0x33>
    a130:	8b 16                	mov    (%esi),%edx
    a132:	83 fa 02             	cmp    $0x2,%edx
    a135:	74 b1                	je     a0e8 <get_for_each_func+0x58>
    a137:	0f 87 eb 00 00 00    	ja     a228 <get_for_each_func+0x198>
    a13d:	4a                   	dec    %edx
    a13e:	0f 84 3c 01 00 00    	je     a280 <get_for_each_func+0x1f0>
    a144:	89 34 24             	mov    %esi,(%esp)
    a147:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a14a:	e8 91 60 01 00       	call   201e0 <free>
    a14f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a152:	eb 94                	jmp    a0e8 <get_for_each_func+0x58>
    a154:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a158:	ff 24 85 98 d3 02 00 	jmp    *0x2d398(,%eax,4)
    a15f:	90                   	nop
    a160:	4a                   	dec    %edx
    a161:	0f 84 a9 00 00 00    	je     a210 <get_for_each_func+0x180>
    a167:	89 1c 24             	mov    %ebx,(%esp)
    a16a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a16d:	e8 6e 60 01 00       	call   201e0 <free>
    a172:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a175:	e9 49 ff ff ff       	jmp    a0c3 <get_for_each_func+0x33>
    a17a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    a180:	8b 42 08             	mov    0x8(%edx),%eax
    a183:	8b 4b 08             	mov    0x8(%ebx),%ecx
    a186:	31 c1                	xor    %eax,%ecx
    a188:	8b 43 0c             	mov    0xc(%ebx),%eax
    a18b:	33 42 0c             	xor    0xc(%edx),%eax
    a18e:	09 c1                	or     %eax,%ecx
    a190:	0f 94 45 e4          	sete   -0x1c(%ebp)
    a194:	31 c0                	xor    %eax,%eax
    a196:	e9 15 ff ff ff       	jmp    a0b0 <get_for_each_func+0x20>
    a19b:	90                   	nop
    a19c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a1a0:	8a 42 08             	mov    0x8(%edx),%al
    a1a3:	38 43 08             	cmp    %al,0x8(%ebx)
    a1a6:	0f 94 45 e4          	sete   -0x1c(%ebp)
    a1aa:	31 c0                	xor    %eax,%eax
    a1ac:	e9 ff fe ff ff       	jmp    a0b0 <get_for_each_func+0x20>
    a1b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    a1b8:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    a1bb:	89 54 24 08          	mov    %edx,0x8(%esp)
    a1bf:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    a1c3:	89 04 24             	mov    %eax,(%esp)
    a1c6:	e8 55 18 00 00       	call   ba20 <bithenge_blob_equal>
    a1cb:	e9 e0 fe ff ff       	jmp    a0b0 <get_for_each_func+0x20>
    a1d0:	8b 42 08             	mov    0x8(%edx),%eax
    a1d3:	89 44 24 04          	mov    %eax,0x4(%esp)
    a1d7:	8b 43 08             	mov    0x8(%ebx),%eax
    a1da:	89 04 24             	mov    %eax,(%esp)
    a1dd:	e8 3e a3 00 00       	call   14520 <str_cmp>
    a1e2:	85 c0                	test   %eax,%eax
    a1e4:	0f 94 45 e4          	sete   -0x1c(%ebp)
    a1e8:	31 c0                	xor    %eax,%eax
    a1ea:	e9 c1 fe ff ff       	jmp    a0b0 <get_for_each_func+0x20>
    a1ef:	90                   	nop
    a1f0:	80 7b 0c 00          	cmpb   $0x0,0xc(%ebx)
    a1f4:	0f 84 6d ff ff ff    	je     a167 <get_for_each_func+0xd7>
    a1fa:	8b 53 08             	mov    0x8(%ebx),%edx
    a1fd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a200:	89 14 24             	mov    %edx,(%esp)
    a203:	e8 d8 5f 01 00       	call   201e0 <free>
    a208:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a20b:	e9 57 ff ff ff       	jmp    a167 <get_for_each_func+0xd7>
    a210:	8b 53 08             	mov    0x8(%ebx),%edx
    a213:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a216:	89 1c 24             	mov    %ebx,(%esp)
    a219:	ff 52 08             	call   *0x8(%edx)
    a21c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a21f:	e9 9f fe ff ff       	jmp    a0c3 <get_for_each_func+0x33>
    a224:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a228:	83 fa 04             	cmp    $0x4,%edx
    a22b:	74 33                	je     a260 <get_for_each_func+0x1d0>
    a22d:	83 fa 05             	cmp    $0x5,%edx
    a230:	0f 85 0e ff ff ff    	jne    a144 <get_for_each_func+0xb4>
    a236:	8b 56 08             	mov    0x8(%esi),%edx
    a239:	85 d2                	test   %edx,%edx
    a23b:	74 5c                	je     a299 <get_for_each_func+0x209>
    a23d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a240:	89 34 24             	mov    %esi,(%esp)
    a243:	ff 52 0c             	call   *0xc(%edx)
    a246:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a249:	e9 9a fe ff ff       	jmp    a0e8 <get_for_each_func+0x58>
    a24e:	66 90                	xchg   %ax,%ax
    a250:	8b 47 04             	mov    0x4(%edi),%eax
    a253:	89 30                	mov    %esi,(%eax)
    a255:	b8 fc fe ff ff       	mov    $0xfffffefc,%eax
    a25a:	e9 89 fe ff ff       	jmp    a0e8 <get_for_each_func+0x58>
    a25f:	90                   	nop
    a260:	80 7e 0c 00          	cmpb   $0x0,0xc(%esi)
    a264:	0f 84 da fe ff ff    	je     a144 <get_for_each_func+0xb4>
    a26a:	8b 56 08             	mov    0x8(%esi),%edx
    a26d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a270:	89 14 24             	mov    %edx,(%esp)
    a273:	e8 68 5f 01 00       	call   201e0 <free>
    a278:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a27b:	e9 c4 fe ff ff       	jmp    a144 <get_for_each_func+0xb4>
    a280:	8b 56 08             	mov    0x8(%esi),%edx
    a283:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    a286:	89 34 24             	mov    %esi,(%esp)
    a289:	ff 52 08             	call   *0x8(%edx)
    a28c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    a28f:	e9 54 fe ff ff       	jmp    a0e8 <get_for_each_func+0x58>
    a294:	e8 d3 08 00 00       	call   ab6c <bithenge_node_dec_ref.part.4>
    a299:	c7 44 24 08 2e 00 00 	movl   $0x2e,0x8(%esp)
    a2a0:	00 
    a2a1:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    a2a8:	00 
    a2a9:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    a2b0:	e8 fb 05 02 00       	call   2a8b0 <assert_abort>
    a2b5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a2b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000a2c0 <bithenge_node_dec_ref>:
    a2c0:	55                   	push   %ebp
    a2c1:	89 e5                	mov    %esp,%ebp
    a2c3:	53                   	push   %ebx
    a2c4:	83 ec 14             	sub    $0x14,%esp
    a2c7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    a2ca:	85 db                	test   %ebx,%ebx
    a2cc:	74 0f                	je     a2dd <bithenge_node_dec_ref+0x1d>
    a2ce:	8b 43 04             	mov    0x4(%ebx),%eax
    a2d1:	85 c0                	test   %eax,%eax
    a2d3:	74 73                	je     a348 <bithenge_node_dec_ref+0x88>
    a2d5:	48                   	dec    %eax
    a2d6:	89 43 04             	mov    %eax,0x4(%ebx)
    a2d9:	85 c0                	test   %eax,%eax
    a2db:	74 0b                	je     a2e8 <bithenge_node_dec_ref+0x28>
    a2dd:	83 c4 14             	add    $0x14,%esp
    a2e0:	5b                   	pop    %ebx
    a2e1:	5d                   	pop    %ebp
    a2e2:	c3                   	ret    
    a2e3:	90                   	nop
    a2e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a2e8:	8b 03                	mov    (%ebx),%eax
    a2ea:	83 f8 02             	cmp    $0x2,%eax
    a2ed:	74 ee                	je     a2dd <bithenge_node_dec_ref+0x1d>
    a2ef:	76 1f                	jbe    a310 <bithenge_node_dec_ref+0x50>
    a2f1:	83 f8 04             	cmp    $0x4,%eax
    a2f4:	74 2a                	je     a320 <bithenge_node_dec_ref+0x60>
    a2f6:	83 f8 05             	cmp    $0x5,%eax
    a2f9:	75 18                	jne    a313 <bithenge_node_dec_ref+0x53>
    a2fb:	8b 43 08             	mov    0x8(%ebx),%eax
    a2fe:	85 c0                	test   %eax,%eax
    a300:	74 4b                	je     a34d <bithenge_node_dec_ref+0x8d>
    a302:	89 5d 08             	mov    %ebx,0x8(%ebp)
    a305:	8b 40 0c             	mov    0xc(%eax),%eax
    a308:	83 c4 14             	add    $0x14,%esp
    a30b:	5b                   	pop    %ebx
    a30c:	5d                   	pop    %ebp
    a30d:	ff e0                	jmp    *%eax
    a30f:	90                   	nop
    a310:	48                   	dec    %eax
    a311:	74 25                	je     a338 <bithenge_node_dec_ref+0x78>
    a313:	89 5d 08             	mov    %ebx,0x8(%ebp)
    a316:	83 c4 14             	add    $0x14,%esp
    a319:	5b                   	pop    %ebx
    a31a:	5d                   	pop    %ebp
    a31b:	e9 c0 5e 01 00       	jmp    201e0 <free>
    a320:	80 7b 0c 00          	cmpb   $0x0,0xc(%ebx)
    a324:	74 ed                	je     a313 <bithenge_node_dec_ref+0x53>
    a326:	8b 43 08             	mov    0x8(%ebx),%eax
    a329:	89 04 24             	mov    %eax,(%esp)
    a32c:	e8 af 5e 01 00       	call   201e0 <free>
    a331:	eb e0                	jmp    a313 <bithenge_node_dec_ref+0x53>
    a333:	90                   	nop
    a334:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a338:	8b 43 08             	mov    0x8(%ebx),%eax
    a33b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    a33e:	8b 40 08             	mov    0x8(%eax),%eax
    a341:	83 c4 14             	add    $0x14,%esp
    a344:	5b                   	pop    %ebx
    a345:	5d                   	pop    %ebp
    a346:	ff e0                	jmp    *%eax
    a348:	e8 1f 08 00 00       	call   ab6c <bithenge_node_dec_ref.part.4>
    a34d:	c7 44 24 08 2e 00 00 	movl   $0x2e,0x8(%esp)
    a354:	00 
    a355:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    a35c:	00 
    a35d:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    a364:	e8 47 05 02 00       	call   2a8b0 <assert_abort>
    a369:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000a370 <bithenge_node_get>:
    a370:	55                   	push   %ebp
    a371:	89 e5                	mov    %esp,%ebp
    a373:	57                   	push   %edi
    a374:	56                   	push   %esi
    a375:	53                   	push   %ebx
    a376:	83 ec 5c             	sub    $0x5c,%esp
    a379:	8b 45 08             	mov    0x8(%ebp),%eax
    a37c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    a37f:	8b 08                	mov    (%eax),%ecx
    a381:	83 f9 05             	cmp    $0x5,%ecx
    a384:	74 32                	je     a3b8 <bithenge_node_get+0x48>
    a386:	49                   	dec    %ecx
    a387:	0f 85 64 03 00 00    	jne    a6f1 <bithenge_node_get+0x381>
    a38d:	8b 48 08             	mov    0x8(%eax),%ecx
    a390:	8b 55 10             	mov    0x10(%ebp),%edx
    a393:	8b 49 04             	mov    0x4(%ecx),%ecx
    a396:	85 c9                	test   %ecx,%ecx
    a398:	74 4e                	je     a3e8 <bithenge_node_get+0x78>
    a39a:	89 54 24 08          	mov    %edx,0x8(%esp)
    a39e:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    a3a2:	89 04 24             	mov    %eax,(%esp)
    a3a5:	ff d1                	call   *%ecx
    a3a7:	89 c6                	mov    %eax,%esi
    a3a9:	83 c4 5c             	add    $0x5c,%esp
    a3ac:	89 f0                	mov    %esi,%eax
    a3ae:	5b                   	pop    %ebx
    a3af:	5e                   	pop    %esi
    a3b0:	5f                   	pop    %edi
    a3b1:	5d                   	pop    %ebp
    a3b2:	c3                   	ret    
    a3b3:	90                   	nop
    a3b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a3b8:	8b 0b                	mov    (%ebx),%ecx
    a3ba:	83 f9 03             	cmp    $0x3,%ecx
    a3bd:	0f 84 cd 00 00 00    	je     a490 <bithenge_node_get+0x120>
    a3c3:	8b 43 04             	mov    0x4(%ebx),%eax
    a3c6:	85 c0                	test   %eax,%eax
    a3c8:	0f 84 1d 02 00 00    	je     a5eb <bithenge_node_get+0x27b>
    a3ce:	48                   	dec    %eax
    a3cf:	89 43 04             	mov    %eax,0x4(%ebx)
    a3d2:	85 c0                	test   %eax,%eax
    a3d4:	0f 84 76 01 00 00    	je     a550 <bithenge_node_get+0x1e0>
    a3da:	83 c4 5c             	add    $0x5c,%esp
    a3dd:	83 ce ff             	or     $0xffffffff,%esi
    a3e0:	89 f0                	mov    %esi,%eax
    a3e2:	5b                   	pop    %ebx
    a3e3:	5e                   	pop    %esi
    a3e4:	5f                   	pop    %edi
    a3e5:	5d                   	pop    %ebp
    a3e6:	c3                   	ret    
    a3e7:	90                   	nop
    a3e8:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    a3ee:	8d 75 e0             	lea    -0x20(%ebp),%esi
    a3f1:	8b 48 08             	mov    0x8(%eax),%ecx
    a3f4:	89 5d e0             	mov    %ebx,-0x20(%ebp)
    a3f7:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    a3fa:	89 74 24 08          	mov    %esi,0x8(%esp)
    a3fe:	c7 44 24 04 90 a0 00 	movl   $0xa090,0x4(%esp)
    a405:	00 
    a406:	89 04 24             	mov    %eax,(%esp)
    a409:	ff 11                	call   *(%ecx)
    a40b:	85 db                	test   %ebx,%ebx
    a40d:	74 17                	je     a426 <bithenge_node_get+0xb6>
    a40f:	8b 4b 04             	mov    0x4(%ebx),%ecx
    a412:	85 c9                	test   %ecx,%ecx
    a414:	0f 84 d1 01 00 00    	je     a5eb <bithenge_node_get+0x27b>
    a41a:	49                   	dec    %ecx
    a41b:	89 4b 04             	mov    %ecx,0x4(%ebx)
    a41e:	85 c9                	test   %ecx,%ecx
    a420:	0f 84 5a 01 00 00    	je     a580 <bithenge_node_get+0x210>
    a426:	3d fc fe ff ff       	cmp    $0xfffffefc,%eax
    a42b:	0f 84 bf 01 00 00    	je     a5f0 <bithenge_node_get+0x280>
    a431:	8b 55 10             	mov    0x10(%ebp),%edx
    a434:	85 c0                	test   %eax,%eax
    a436:	8b 1a                	mov    (%edx),%ebx
    a438:	75 03                	jne    a43d <bithenge_node_get+0xcd>
    a43a:	83 c8 ff             	or     $0xffffffff,%eax
    a43d:	85 db                	test   %ebx,%ebx
    a43f:	0f 84 ba 01 00 00    	je     a5ff <bithenge_node_get+0x28f>
    a445:	8b 53 04             	mov    0x4(%ebx),%edx
    a448:	85 d2                	test   %edx,%edx
    a44a:	0f 84 9b 01 00 00    	je     a5eb <bithenge_node_get+0x27b>
    a450:	4a                   	dec    %edx
    a451:	89 c6                	mov    %eax,%esi
    a453:	89 53 04             	mov    %edx,0x4(%ebx)
    a456:	85 d2                	test   %edx,%edx
    a458:	0f 85 4b ff ff ff    	jne    a3a9 <bithenge_node_get+0x39>
    a45e:	8b 13                	mov    (%ebx),%edx
    a460:	83 fa 02             	cmp    $0x2,%edx
    a463:	0f 84 40 ff ff ff    	je     a3a9 <bithenge_node_get+0x39>
    a469:	0f 87 c3 01 00 00    	ja     a632 <bithenge_node_get+0x2c2>
    a46f:	4a                   	dec    %edx
    a470:	0f 84 43 02 00 00    	je     a6b9 <bithenge_node_get+0x349>
    a476:	89 1c 24             	mov    %ebx,(%esp)
    a479:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    a47c:	e8 5f 5d 01 00       	call   201e0 <free>
    a481:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    a484:	89 c6                	mov    %eax,%esi
    a486:	e9 1e ff ff ff       	jmp    a3a9 <bithenge_node_get+0x39>
    a48b:	90                   	nop
    a48c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    a490:	8b 4b 04             	mov    0x4(%ebx),%ecx
    a493:	8b 73 08             	mov    0x8(%ebx),%esi
    a496:	8b 7b 0c             	mov    0xc(%ebx),%edi
    a499:	85 c9                	test   %ecx,%ecx
    a49b:	0f 84 4a 01 00 00    	je     a5eb <bithenge_node_get+0x27b>
    a4a1:	49                   	dec    %ecx
    a4a2:	89 4b 04             	mov    %ecx,0x4(%ebx)
    a4a5:	85 c9                	test   %ecx,%ecx
    a4a7:	0f 84 fb 00 00 00    	je     a5a8 <bithenge_node_get+0x238>
    a4ad:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
    a4b4:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    a4bb:	8b 50 08             	mov    0x8(%eax),%edx
    a4be:	85 d2                	test   %edx,%edx
    a4c0:	0f 84 6d 02 00 00    	je     a733 <bithenge_node_get+0x3c3>
    a4c6:	8b 52 04             	mov    0x4(%edx),%edx
    a4c9:	85 d2                	test   %edx,%edx
    a4cb:	0f 84 16 02 00 00    	je     a6e7 <bithenge_node_get+0x377>
    a4d1:	8d 4d d8             	lea    -0x28(%ebp),%ecx
    a4d4:	89 74 24 04          	mov    %esi,0x4(%esp)
    a4d8:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    a4dc:	8d 4d d4             	lea    -0x2c(%ebp),%ecx
    a4df:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    a4e3:	89 7c 24 08          	mov    %edi,0x8(%esp)
    a4e7:	89 04 24             	mov    %eax,(%esp)
    a4ea:	ff d2                	call   *%edx
    a4ec:	89 c6                	mov    %eax,%esi
    a4ee:	85 c0                	test   %eax,%eax
    a4f0:	0f 85 b3 fe ff ff    	jne    a3a9 <bithenge_node_get+0x39>
    a4f6:	8b 45 d8             	mov    -0x28(%ebp),%eax
    a4f9:	83 f0 01             	xor    $0x1,%eax
    a4fc:	0b 45 dc             	or     -0x24(%ebp),%eax
    a4ff:	0f 85 d5 fe ff ff    	jne    a3da <bithenge_node_get+0x6a>
    a505:	8a 45 d4             	mov    -0x2c(%ebp),%al
    a508:	8b 4d 10             	mov    0x10(%ebp),%ecx
    a50b:	25 ff 00 00 00       	and    $0xff,%eax
    a510:	85 c9                	test   %ecx,%ecx
    a512:	89 c7                	mov    %eax,%edi
    a514:	0f 84 fd 01 00 00    	je     a717 <bithenge_node_get+0x3a7>
    a51a:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
    a521:	e8 aa 5b 01 00       	call   200d0 <malloc>
    a526:	85 c0                	test   %eax,%eax
    a528:	0f 84 df 01 00 00    	je     a70d <bithenge_node_get+0x39d>
    a52e:	8b 55 10             	mov    0x10(%ebp),%edx
    a531:	c7 00 03 00 00 00    	movl   $0x3,(%eax)
    a537:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    a53e:	89 78 08             	mov    %edi,0x8(%eax)
    a541:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
    a548:	89 02                	mov    %eax,(%edx)
    a54a:	e9 5a fe ff ff       	jmp    a3a9 <bithenge_node_get+0x39>
    a54f:	90                   	nop
    a550:	83 f9 02             	cmp    $0x2,%ecx
    a553:	0f 84 81 fe ff ff    	je     a3da <bithenge_node_get+0x6a>
    a559:	76 7d                	jbe    a5d8 <bithenge_node_get+0x268>
    a55b:	83 f9 04             	cmp    $0x4,%ecx
    a55e:	0f 84 07 01 00 00    	je     a66b <bithenge_node_get+0x2fb>
    a564:	83 f9 05             	cmp    $0x5,%ecx
    a567:	75 72                	jne    a5db <bithenge_node_get+0x26b>
    a569:	8b 43 08             	mov    0x8(%ebx),%eax
    a56c:	85 c0                	test   %eax,%eax
    a56e:	0f 84 db 01 00 00    	je     a74f <bithenge_node_get+0x3df>
    a574:	89 1c 24             	mov    %ebx,(%esp)
    a577:	ff 50 0c             	call   *0xc(%eax)
    a57a:	e9 5b fe ff ff       	jmp    a3da <bithenge_node_get+0x6a>
    a57f:	90                   	nop
    a580:	8b 0b                	mov    (%ebx),%ecx
    a582:	83 f9 02             	cmp    $0x2,%ecx
    a585:	0f 84 9b fe ff ff    	je     a426 <bithenge_node_get+0xb6>
    a58b:	77 7b                	ja     a608 <bithenge_node_get+0x298>
    a58d:	49                   	dec    %ecx
    a58e:	0f 84 11 01 00 00    	je     a6a5 <bithenge_node_get+0x335>
    a594:	89 1c 24             	mov    %ebx,(%esp)
    a597:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    a59a:	e8 41 5c 01 00       	call   201e0 <free>
    a59f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    a5a2:	e9 7f fe ff ff       	jmp    a426 <bithenge_node_get+0xb6>
    a5a7:	90                   	nop
    a5a8:	89 1c 24             	mov    %ebx,(%esp)
    a5ab:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    a5ae:	e8 2d 5c 01 00       	call   201e0 <free>
    a5b3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    a5b6:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
    a5bd:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    a5c4:	83 38 05             	cmpl   $0x5,(%eax)
    a5c7:	0f 84 ee fe ff ff    	je     a4bb <bithenge_node_get+0x14b>
    a5cd:	e8 56 05 00 00       	call   ab28 <bithenge_node_as_blob.part.1>
    a5d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    a5d8:	49                   	dec    %ecx
    a5d9:	74 7f                	je     a65a <bithenge_node_get+0x2ea>
    a5db:	89 1c 24             	mov    %ebx,(%esp)
    a5de:	83 ce ff             	or     $0xffffffff,%esi
    a5e1:	e8 fa 5b 01 00       	call   201e0 <free>
    a5e6:	e9 be fd ff ff       	jmp    a3a9 <bithenge_node_get+0x39>
    a5eb:	e8 7c 05 00 00       	call   ab6c <bithenge_node_dec_ref.part.4>
    a5f0:	8b 55 10             	mov    0x10(%ebp),%edx
    a5f3:	31 f6                	xor    %esi,%esi
    a5f5:	8b 12                	mov    (%edx),%edx
    a5f7:	85 d2                	test   %edx,%edx
    a5f9:	0f 85 aa fd ff ff    	jne    a3a9 <bithenge_node_get+0x39>
    a5ff:	89 c6                	mov    %eax,%esi
    a601:	e9 a3 fd ff ff       	jmp    a3a9 <bithenge_node_get+0x39>
    a606:	66 90                	xchg   %ax,%ax
    a608:	83 f9 04             	cmp    $0x4,%ecx
    a60b:	74 78                	je     a685 <bithenge_node_get+0x315>
    a60d:	83 f9 05             	cmp    $0x5,%ecx
    a610:	0f 85 7e ff ff ff    	jne    a594 <bithenge_node_get+0x224>
    a616:	8b 4b 08             	mov    0x8(%ebx),%ecx
    a619:	85 c9                	test   %ecx,%ecx
    a61b:	0f 84 2e 01 00 00    	je     a74f <bithenge_node_get+0x3df>
    a621:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    a624:	89 1c 24             	mov    %ebx,(%esp)
    a627:	ff 51 0c             	call   *0xc(%ecx)
    a62a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    a62d:	e9 f4 fd ff ff       	jmp    a426 <bithenge_node_get+0xb6>
    a632:	83 fa 04             	cmp    $0x4,%edx
    a635:	0f 84 8c 00 00 00    	je     a6c7 <bithenge_node_get+0x357>
    a63b:	83 fa 05             	cmp    $0x5,%edx
    a63e:	0f 85 32 fe ff ff    	jne    a476 <bithenge_node_get+0x106>
    a644:	8b 43 08             	mov    0x8(%ebx),%eax
    a647:	85 c0                	test   %eax,%eax
    a649:	0f 84 00 01 00 00    	je     a74f <bithenge_node_get+0x3df>
    a64f:	89 1c 24             	mov    %ebx,(%esp)
    a652:	ff 50 0c             	call   *0xc(%eax)
    a655:	e9 4f fd ff ff       	jmp    a3a9 <bithenge_node_get+0x39>
    a65a:	8b 43 08             	mov    0x8(%ebx),%eax
    a65d:	89 1c 24             	mov    %ebx,(%esp)
    a660:	83 ce ff             	or     $0xffffffff,%esi
    a663:	ff 50 08             	call   *0x8(%eax)
    a666:	e9 3e fd ff ff       	jmp    a3a9 <bithenge_node_get+0x39>
    a66b:	80 7b 0c 00          	cmpb   $0x0,0xc(%ebx)
    a66f:	0f 84 66 ff ff ff    	je     a5db <bithenge_node_get+0x26b>
    a675:	8b 43 08             	mov    0x8(%ebx),%eax
    a678:	89 04 24             	mov    %eax,(%esp)
    a67b:	e8 60 5b 01 00       	call   201e0 <free>
    a680:	e9 56 ff ff ff       	jmp    a5db <bithenge_node_get+0x26b>
    a685:	80 7b 0c 00          	cmpb   $0x0,0xc(%ebx)
    a689:	0f 84 05 ff ff ff    	je     a594 <bithenge_node_get+0x224>
    a68f:	8b 4b 08             	mov    0x8(%ebx),%ecx
    a692:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    a695:	89 0c 24             	mov    %ecx,(%esp)
    a698:	e8 43 5b 01 00       	call   201e0 <free>
    a69d:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    a6a0:	e9 ef fe ff ff       	jmp    a594 <bithenge_node_get+0x224>
    a6a5:	8b 4b 08             	mov    0x8(%ebx),%ecx
    a6a8:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    a6ab:	89 1c 24             	mov    %ebx,(%esp)
    a6ae:	ff 51 08             	call   *0x8(%ecx)
    a6b1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    a6b4:	e9 6d fd ff ff       	jmp    a426 <bithenge_node_get+0xb6>
    a6b9:	8b 43 08             	mov    0x8(%ebx),%eax
    a6bc:	89 1c 24             	mov    %ebx,(%esp)
    a6bf:	ff 50 08             	call   *0x8(%eax)
    a6c2:	e9 e2 fc ff ff       	jmp    a3a9 <bithenge_node_get+0x39>
    a6c7:	80 7b 0c 00          	cmpb   $0x0,0xc(%ebx)
    a6cb:	0f 84 a5 fd ff ff    	je     a476 <bithenge_node_get+0x106>
    a6d1:	8b 53 08             	mov    0x8(%ebx),%edx
    a6d4:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    a6d7:	89 14 24             	mov    %edx,(%esp)
    a6da:	e8 01 5b 01 00       	call   201e0 <free>
    a6df:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    a6e2:	e9 8f fd ff ff       	jmp    a476 <bithenge_node_get+0x106>
    a6e7:	be f2 ff ff ff       	mov    $0xfffffff2,%esi
    a6ec:	e9 b8 fc ff ff       	jmp    a3a9 <bithenge_node_get+0x39>
    a6f1:	c7 44 24 08 89 00 00 	movl   $0x89,0x8(%esp)
    a6f8:	00 
    a6f9:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    a700:	00 
    a701:	c7 04 24 24 ce 02 00 	movl   $0x2ce24,(%esp)
    a708:	e8 a3 01 02 00       	call   2a8b0 <assert_abort>
    a70d:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    a712:	e9 92 fc ff ff       	jmp    a3a9 <bithenge_node_get+0x39>
    a717:	c7 44 24 08 3f 01 00 	movl   $0x13f,0x8(%esp)
    a71e:	00 
    a71f:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    a726:	00 
    a727:	c7 04 24 92 d3 02 00 	movl   $0x2d392,(%esp)
    a72e:	e8 7d 01 02 00       	call   2a8b0 <assert_abort>
    a733:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    a73a:	00 
    a73b:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    a742:	00 
    a743:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    a74a:	e8 61 01 02 00       	call   2a8b0 <assert_abort>
    a74f:	c7 44 24 08 2e 00 00 	movl   $0x2e,0x8(%esp)
    a756:	00 
    a757:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    a75e:	00 
    a75f:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    a766:	e8 45 01 02 00       	call   2a8b0 <assert_abort>
    a76b:	90                   	nop
    a76c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000a770 <bithenge_init_internal_node>:
    a770:	55                   	push   %ebp
    a771:	89 e5                	mov    %esp,%ebp
    a773:	8b 45 08             	mov    0x8(%ebp),%eax
    a776:	8b 55 0c             	mov    0xc(%ebp),%edx
    a779:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
    a77f:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    a786:	89 50 08             	mov    %edx,0x8(%eax)
    a789:	31 c0                	xor    %eax,%eax
    a78b:	5d                   	pop    %ebp
    a78c:	c3                   	ret    
    a78d:	8d 76 00             	lea    0x0(%esi),%esi

0000a790 <bithenge_new_empty_internal_node>:
    a790:	55                   	push   %ebp
    a791:	a1 0c 04 03 00       	mov    0x3040c,%eax
    a796:	89 e5                	mov    %esp,%ebp
    a798:	40                   	inc    %eax
    a799:	a3 0c 04 03 00       	mov    %eax,0x3040c
    a79e:	8b 45 08             	mov    0x8(%ebp),%eax
    a7a1:	c7 00 08 04 03 00    	movl   $0x30408,(%eax)
    a7a7:	31 c0                	xor    %eax,%eax
    a7a9:	5d                   	pop    %ebp
    a7aa:	c3                   	ret    
    a7ab:	90                   	nop
    a7ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000a7b0 <bithenge_new_simple_internal_node>:
    a7b0:	55                   	push   %ebp
    a7b1:	89 e5                	mov    %esp,%ebp
    a7b3:	57                   	push   %edi
    a7b4:	56                   	push   %esi
    a7b5:	53                   	push   %ebx
    a7b6:	83 ec 2c             	sub    $0x2c,%esp
    a7b9:	8b 5d 18             	mov    0x18(%ebp),%ebx
    a7bc:	8b 45 08             	mov    0x8(%ebp),%eax
    a7bf:	8b 75 10             	mov    0x10(%ebp),%esi
    a7c2:	8b 7d 14             	mov    0x14(%ebp),%edi
    a7c5:	88 5d df             	mov    %bl,-0x21(%ebp)
    a7c8:	85 c0                	test   %eax,%eax
    a7ca:	0f 84 1e 01 00 00    	je     a8ee <bithenge_new_simple_internal_node+0x13e>
    a7d0:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
    a7d7:	e8 f4 58 01 00       	call   200d0 <malloc>
    a7dc:	85 c0                	test   %eax,%eax
    a7de:	74 32                	je     a812 <bithenge_new_simple_internal_node+0x62>
    a7e0:	8b 55 0c             	mov    0xc(%ebp),%edx
    a7e3:	c7 00 01 00 00 00    	movl   $0x1,(%eax)
    a7e9:	89 50 10             	mov    %edx,0x10(%eax)
    a7ec:	8b 55 08             	mov    0x8(%ebp),%edx
    a7ef:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    a7f6:	c7 40 08 18 04 03 00 	movl   $0x30418,0x8(%eax)
    a7fd:	89 70 14             	mov    %esi,0x14(%eax)
    a800:	89 78 18             	mov    %edi,0x18(%eax)
    a803:	88 58 1c             	mov    %bl,0x1c(%eax)
    a806:	89 02                	mov    %eax,(%edx)
    a808:	31 c0                	xor    %eax,%eax
    a80a:	83 c4 2c             	add    $0x2c,%esp
    a80d:	5b                   	pop    %ebx
    a80e:	5e                   	pop    %esi
    a80f:	5f                   	pop    %edi
    a810:	5d                   	pop    %ebp
    a811:	c3                   	ret    
    a812:	89 f0                	mov    %esi,%eax
    a814:	89 fa                	mov    %edi,%edx
    a816:	0f a4 c2 01          	shld   $0x1,%eax,%edx
    a81a:	01 c0                	add    %eax,%eax
    a81c:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    a81f:	89 45 e0             	mov    %eax,-0x20(%ebp)
    a822:	83 fa 00             	cmp    $0x0,%edx
    a825:	7e 70                	jle    a897 <bithenge_new_simple_internal_node+0xe7>
    a827:	8b 45 0c             	mov    0xc(%ebp),%eax
    a82a:	31 f6                	xor    %esi,%esi
    a82c:	31 ff                	xor    %edi,%edi
    a82e:	89 c3                	mov    %eax,%ebx
    a830:	eb 1d                	jmp    a84f <bithenge_new_simple_internal_node+0x9f>
    a832:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    a838:	83 c6 01             	add    $0x1,%esi
    a83b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    a83e:	83 d7 00             	adc    $0x0,%edi
    a841:	8b 55 e0             	mov    -0x20(%ebp),%edx
    a844:	31 f8                	xor    %edi,%eax
    a846:	31 f2                	xor    %esi,%edx
    a848:	83 c3 04             	add    $0x4,%ebx
    a84b:	09 d0                	or     %edx,%eax
    a84d:	74 4f                	je     a89e <bithenge_new_simple_internal_node+0xee>
    a84f:	8b 13                	mov    (%ebx),%edx
    a851:	85 d2                	test   %edx,%edx
    a853:	74 e3                	je     a838 <bithenge_new_simple_internal_node+0x88>
    a855:	8b 42 04             	mov    0x4(%edx),%eax
    a858:	85 c0                	test   %eax,%eax
    a85a:	0f 84 c6 00 00 00    	je     a926 <bithenge_new_simple_internal_node+0x176>
    a860:	48                   	dec    %eax
    a861:	89 42 04             	mov    %eax,0x4(%edx)
    a864:	85 c0                	test   %eax,%eax
    a866:	75 d0                	jne    a838 <bithenge_new_simple_internal_node+0x88>
    a868:	8b 02                	mov    (%edx),%eax
    a86a:	83 f8 02             	cmp    $0x2,%eax
    a86d:	74 c9                	je     a838 <bithenge_new_simple_internal_node+0x88>
    a86f:	77 0d                	ja     a87e <bithenge_new_simple_internal_node+0xce>
    a871:	48                   	dec    %eax
    a872:	74 46                	je     a8ba <bithenge_new_simple_internal_node+0x10a>
    a874:	89 14 24             	mov    %edx,(%esp)
    a877:	e8 64 59 01 00       	call   201e0 <free>
    a87c:	eb ba                	jmp    a838 <bithenge_new_simple_internal_node+0x88>
    a87e:	83 f8 04             	cmp    $0x4,%eax
    a881:	74 45                	je     a8c8 <bithenge_new_simple_internal_node+0x118>
    a883:	83 f8 05             	cmp    $0x5,%eax
    a886:	75 ec                	jne    a874 <bithenge_new_simple_internal_node+0xc4>
    a888:	8b 42 08             	mov    0x8(%edx),%eax
    a88b:	85 c0                	test   %eax,%eax
    a88d:	74 7b                	je     a90a <bithenge_new_simple_internal_node+0x15a>
    a88f:	89 14 24             	mov    %edx,(%esp)
    a892:	ff 50 0c             	call   *0xc(%eax)
    a895:	eb a1                	jmp    a838 <bithenge_new_simple_internal_node+0x88>
    a897:	7c 05                	jl     a89e <bithenge_new_simple_internal_node+0xee>
    a899:	83 f8 00             	cmp    $0x0,%eax
    a89c:	77 89                	ja     a827 <bithenge_new_simple_internal_node+0x77>
    a89e:	80 7d df 00          	cmpb   $0x0,-0x21(%ebp)
    a8a2:	75 3d                	jne    a8e1 <bithenge_new_simple_internal_node+0x131>
    a8a4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    a8ab:	e8 30 59 01 00       	call   201e0 <free>
    a8b0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    a8b5:	e9 50 ff ff ff       	jmp    a80a <bithenge_new_simple_internal_node+0x5a>
    a8ba:	8b 42 08             	mov    0x8(%edx),%eax
    a8bd:	89 14 24             	mov    %edx,(%esp)
    a8c0:	ff 50 08             	call   *0x8(%eax)
    a8c3:	e9 70 ff ff ff       	jmp    a838 <bithenge_new_simple_internal_node+0x88>
    a8c8:	80 7a 0c 00          	cmpb   $0x0,0xc(%edx)
    a8cc:	74 a6                	je     a874 <bithenge_new_simple_internal_node+0xc4>
    a8ce:	8b 42 08             	mov    0x8(%edx),%eax
    a8d1:	89 55 d8             	mov    %edx,-0x28(%ebp)
    a8d4:	89 04 24             	mov    %eax,(%esp)
    a8d7:	e8 04 59 01 00       	call   201e0 <free>
    a8dc:	8b 55 d8             	mov    -0x28(%ebp),%edx
    a8df:	eb 93                	jmp    a874 <bithenge_new_simple_internal_node+0xc4>
    a8e1:	8b 45 0c             	mov    0xc(%ebp),%eax
    a8e4:	89 04 24             	mov    %eax,(%esp)
    a8e7:	e8 f4 58 01 00       	call   201e0 <free>
    a8ec:	eb b6                	jmp    a8a4 <bithenge_new_simple_internal_node+0xf4>
    a8ee:	c7 44 24 08 0e 01 00 	movl   $0x10e,0x8(%esp)
    a8f5:	00 
    a8f6:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    a8fd:	00 
    a8fe:	c7 04 24 92 d3 02 00 	movl   $0x2d392,(%esp)
    a905:	e8 a6 ff 01 00       	call   2a8b0 <assert_abort>
    a90a:	c7 44 24 08 2e 00 00 	movl   $0x2e,0x8(%esp)
    a911:	00 
    a912:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    a919:	00 
    a91a:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    a921:	e8 8a ff 01 00       	call   2a8b0 <assert_abort>
    a926:	e8 41 02 00 00       	call   ab6c <bithenge_node_dec_ref.part.4>
    a92b:	90                   	nop
    a92c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000a930 <bithenge_new_boolean_node>:
    a930:	55                   	push   %ebp
    a931:	89 e5                	mov    %esp,%ebp
    a933:	83 ec 18             	sub    $0x18,%esp
    a936:	8b 55 08             	mov    0x8(%ebp),%edx
    a939:	8a 4d 0c             	mov    0xc(%ebp),%cl
    a93c:	85 d2                	test   %edx,%edx
    a93e:	74 1b                	je     a95b <bithenge_new_boolean_node+0x2b>
    a940:	b8 34 04 03 00       	mov    $0x30434,%eax
    a945:	84 c9                	test   %cl,%cl
    a947:	74 05                	je     a94e <bithenge_new_boolean_node+0x1e>
    a949:	b8 24 04 03 00       	mov    $0x30424,%eax
    a94e:	89 02                	mov    %eax,(%edx)
    a950:	8b 50 04             	mov    0x4(%eax),%edx
    a953:	42                   	inc    %edx
    a954:	89 50 04             	mov    %edx,0x4(%eax)
    a957:	31 c0                	xor    %eax,%eax
    a959:	c9                   	leave  
    a95a:	c3                   	ret    
    a95b:	c7 44 24 08 30 01 00 	movl   $0x130,0x8(%esp)
    a962:	00 
    a963:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    a96a:	00 
    a96b:	c7 04 24 92 d3 02 00 	movl   $0x2d392,(%esp)
    a972:	e8 39 ff 01 00       	call   2a8b0 <assert_abort>
    a977:	89 f6                	mov    %esi,%esi
    a979:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000a980 <bithenge_new_integer_node>:
    a980:	55                   	push   %ebp
    a981:	89 e5                	mov    %esp,%ebp
    a983:	57                   	push   %edi
    a984:	56                   	push   %esi
    a985:	53                   	push   %ebx
    a986:	83 ec 1c             	sub    $0x1c,%esp
    a989:	8b 5d 08             	mov    0x8(%ebp),%ebx
    a98c:	8b 75 0c             	mov    0xc(%ebp),%esi
    a98f:	8b 7d 10             	mov    0x10(%ebp),%edi
    a992:	85 db                	test   %ebx,%ebx
    a994:	74 36                	je     a9cc <bithenge_new_integer_node+0x4c>
    a996:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
    a99d:	e8 2e 57 01 00       	call   200d0 <malloc>
    a9a2:	85 c0                	test   %eax,%eax
    a9a4:	74 1f                	je     a9c5 <bithenge_new_integer_node+0x45>
    a9a6:	c7 00 03 00 00 00    	movl   $0x3,(%eax)
    a9ac:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    a9b3:	89 70 08             	mov    %esi,0x8(%eax)
    a9b6:	89 78 0c             	mov    %edi,0xc(%eax)
    a9b9:	89 03                	mov    %eax,(%ebx)
    a9bb:	31 c0                	xor    %eax,%eax
    a9bd:	83 c4 1c             	add    $0x1c,%esp
    a9c0:	5b                   	pop    %ebx
    a9c1:	5e                   	pop    %esi
    a9c2:	5f                   	pop    %edi
    a9c3:	5d                   	pop    %ebp
    a9c4:	c3                   	ret    
    a9c5:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    a9ca:	eb f1                	jmp    a9bd <bithenge_new_integer_node+0x3d>
    a9cc:	c7 44 24 08 3f 01 00 	movl   $0x13f,0x8(%esp)
    a9d3:	00 
    a9d4:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    a9db:	00 
    a9dc:	c7 04 24 92 d3 02 00 	movl   $0x2d392,(%esp)
    a9e3:	e8 c8 fe 01 00       	call   2a8b0 <assert_abort>
    a9e8:	90                   	nop
    a9e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000a9f0 <bithenge_new_string_node>:
    a9f0:	55                   	push   %ebp
    a9f1:	89 e5                	mov    %esp,%ebp
    a9f3:	57                   	push   %edi
    a9f4:	56                   	push   %esi
    a9f5:	53                   	push   %ebx
    a9f6:	83 ec 2c             	sub    $0x2c,%esp
    a9f9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    a9fc:	8b 7d 10             	mov    0x10(%ebp),%edi
    a9ff:	85 db                	test   %ebx,%ebx
    aa01:	74 53                	je     aa56 <bithenge_new_string_node+0x66>
    aa03:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
    aa0a:	e8 c1 56 01 00       	call   200d0 <malloc>
    aa0f:	85 c0                	test   %eax,%eax
    aa11:	74 25                	je     aa38 <bithenge_new_string_node+0x48>
    aa13:	8b 55 0c             	mov    0xc(%ebp),%edx
    aa16:	c7 00 04 00 00 00    	movl   $0x4,(%eax)
    aa1c:	89 50 08             	mov    %edx,0x8(%eax)
    aa1f:	89 fa                	mov    %edi,%edx
    aa21:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    aa28:	88 50 0c             	mov    %dl,0xc(%eax)
    aa2b:	89 03                	mov    %eax,(%ebx)
    aa2d:	31 c0                	xor    %eax,%eax
    aa2f:	83 c4 2c             	add    $0x2c,%esp
    aa32:	5b                   	pop    %ebx
    aa33:	5e                   	pop    %esi
    aa34:	5f                   	pop    %edi
    aa35:	5d                   	pop    %ebp
    aa36:	c3                   	ret    
    aa37:	90                   	nop
    aa38:	89 fa                	mov    %edi,%edx
    aa3a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    aa3f:	84 d2                	test   %dl,%dl
    aa41:	74 ec                	je     aa2f <bithenge_new_string_node+0x3f>
    aa43:	8b 55 0c             	mov    0xc(%ebp),%edx
    aa46:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    aa49:	89 14 24             	mov    %edx,(%esp)
    aa4c:	e8 8f 57 01 00       	call   201e0 <free>
    aa51:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    aa54:	eb d9                	jmp    aa2f <bithenge_new_string_node+0x3f>
    aa56:	c7 44 24 08 53 01 00 	movl   $0x153,0x8(%esp)
    aa5d:	00 
    aa5e:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    aa65:	00 
    aa66:	c7 04 24 92 d3 02 00 	movl   $0x2d392,(%esp)
    aa6d:	e8 3e fe 01 00       	call   2a8b0 <assert_abort>
    aa72:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    aa79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000aa80 <bithenge_node_equal>:
    aa80:	55                   	push   %ebp
    aa81:	89 e5                	mov    %esp,%ebp
    aa83:	56                   	push   %esi
    aa84:	53                   	push   %ebx
    aa85:	83 ec 10             	sub    $0x10,%esp
    aa88:	8b 55 0c             	mov    0xc(%ebp),%edx
    aa8b:	8b 4d 10             	mov    0x10(%ebp),%ecx
    aa8e:	8b 5d 08             	mov    0x8(%ebp),%ebx
    aa91:	8b 02                	mov    (%edx),%eax
    aa93:	3b 01                	cmp    (%ecx),%eax
    aa95:	74 11                	je     aaa8 <bithenge_node_equal+0x28>
    aa97:	c6 03 00             	movb   $0x0,(%ebx)
    aa9a:	31 c0                	xor    %eax,%eax
    aa9c:	83 c4 10             	add    $0x10,%esp
    aa9f:	5b                   	pop    %ebx
    aaa0:	5e                   	pop    %esi
    aaa1:	5d                   	pop    %ebp
    aaa2:	c3                   	ret    
    aaa3:	90                   	nop
    aaa4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    aaa8:	83 f8 05             	cmp    $0x5,%eax
    aaab:	76 0b                	jbe    aab8 <bithenge_node_equal+0x38>
    aaad:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    aab2:	eb e8                	jmp    aa9c <bithenge_node_equal+0x1c>
    aab4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    aab8:	ff 24 85 b0 d3 02 00 	jmp    *0x2d3b0(,%eax,4)
    aabf:	90                   	nop
    aac0:	89 5d 08             	mov    %ebx,0x8(%ebp)
    aac3:	89 4d 10             	mov    %ecx,0x10(%ebp)
    aac6:	89 55 0c             	mov    %edx,0xc(%ebp)
    aac9:	83 c4 10             	add    $0x10,%esp
    aacc:	5b                   	pop    %ebx
    aacd:	5e                   	pop    %esi
    aace:	5d                   	pop    %ebp
    aacf:	e9 4c 0f 00 00       	jmp    ba20 <bithenge_blob_equal>
    aad4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    aad8:	8b 41 08             	mov    0x8(%ecx),%eax
    aadb:	89 44 24 04          	mov    %eax,0x4(%esp)
    aadf:	8b 42 08             	mov    0x8(%edx),%eax
    aae2:	89 04 24             	mov    %eax,(%esp)
    aae5:	e8 36 9a 00 00       	call   14520 <str_cmp>
    aaea:	85 c0                	test   %eax,%eax
    aaec:	0f 94 03             	sete   (%ebx)
    aaef:	31 c0                	xor    %eax,%eax
    aaf1:	eb a9                	jmp    aa9c <bithenge_node_equal+0x1c>
    aaf3:	90                   	nop
    aaf4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    aaf8:	8b 72 08             	mov    0x8(%edx),%esi
    aafb:	8b 41 08             	mov    0x8(%ecx),%eax
    aafe:	31 c6                	xor    %eax,%esi
    ab00:	8b 42 0c             	mov    0xc(%edx),%eax
    ab03:	8b 51 0c             	mov    0xc(%ecx),%edx
    ab06:	31 d0                	xor    %edx,%eax
    ab08:	09 c6                	or     %eax,%esi
    ab0a:	0f 94 03             	sete   (%ebx)
    ab0d:	31 c0                	xor    %eax,%eax
    ab0f:	eb 8b                	jmp    aa9c <bithenge_node_equal+0x1c>
    ab11:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ab18:	8a 41 08             	mov    0x8(%ecx),%al
    ab1b:	38 42 08             	cmp    %al,0x8(%edx)
    ab1e:	0f 94 03             	sete   (%ebx)
    ab21:	31 c0                	xor    %eax,%eax
    ab23:	e9 74 ff ff ff       	jmp    aa9c <bithenge_node_equal+0x1c>

0000ab28 <bithenge_node_as_blob.part.1>:
    ab28:	55                   	push   %ebp
    ab29:	89 e5                	mov    %esp,%ebp
    ab2b:	83 ec 18             	sub    $0x18,%esp
    ab2e:	c7 44 24 08 d9 00 00 	movl   $0xd9,0x8(%esp)
    ab35:	00 
    ab36:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    ab3d:	00 
    ab3e:	c7 04 24 dc cd 02 00 	movl   $0x2cddc,(%esp)
    ab45:	e8 66 fd 01 00       	call   2a8b0 <assert_abort>

0000ab4a <bithenge_node_inc_ref.part.2>:
    ab4a:	55                   	push   %ebp
    ab4b:	89 e5                	mov    %esp,%ebp
    ab4d:	83 ec 18             	sub    $0x18,%esp
    ab50:	c7 44 24 08 70 00 00 	movl   $0x70,0x8(%esp)
    ab57:	00 
    ab58:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    ab5f:	00 
    ab60:	c7 04 24 a0 d0 02 00 	movl   $0x2d0a0,(%esp)
    ab67:	e8 44 fd 01 00       	call   2a8b0 <assert_abort>

0000ab6c <bithenge_node_dec_ref.part.4>:
    ab6c:	55                   	push   %ebp
    ab6d:	89 e5                	mov    %esp,%ebp
    ab6f:	83 ec 18             	sub    $0x18,%esp
    ab72:	c7 44 24 08 4e 00 00 	movl   $0x4e,0x8(%esp)
    ab79:	00 
    ab7a:	c7 44 24 04 78 d3 02 	movl   $0x2d378,0x4(%esp)
    ab81:	00 
    ab82:	c7 04 24 83 d3 02 00 	movl   $0x2d383,(%esp)
    ab89:	e8 22 fd 01 00       	call   2a8b0 <assert_abort>
    ab8e:	66 90                	xchg   %ax,%ax

0000ab90 <block_size>:
    ab90:	55                   	push   %ebp
    ab91:	89 e5                	mov    %esp,%ebp
    ab93:	8b 45 08             	mov    0x8(%ebp),%eax
    ab96:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    ab99:	8b 50 18             	mov    0x18(%eax),%edx
    ab9c:	8b 40 14             	mov    0x14(%eax),%eax
    ab9f:	89 01                	mov    %eax,(%ecx)
    aba1:	89 51 04             	mov    %edx,0x4(%ecx)
    aba4:	31 c0                	xor    %eax,%eax
    aba6:	5d                   	pop    %ebp
    aba7:	c3                   	ret    
    aba8:	90                   	nop
    aba9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000abb0 <block_destroy>:
    abb0:	55                   	push   %ebp
    abb1:	89 e5                	mov    %esp,%ebp
    abb3:	53                   	push   %ebx
    abb4:	83 ec 14             	sub    $0x14,%esp
    abb7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    abba:	8b 43 10             	mov    0x10(%ebx),%eax
    abbd:	89 04 24             	mov    %eax,(%esp)
    abc0:	e8 2b 44 00 00       	call   eff0 <block_fini>
    abc5:	89 5d 08             	mov    %ebx,0x8(%ebp)
    abc8:	83 c4 14             	add    $0x14,%esp
    abcb:	5b                   	pop    %ebx
    abcc:	5d                   	pop    %ebp
    abcd:	e9 0e 56 01 00       	jmp    201e0 <free>
    abd2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    abd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000abe0 <block_read>:
    abe0:	55                   	push   %ebp
    abe1:	89 e5                	mov    %esp,%ebp
    abe3:	57                   	push   %edi
    abe4:	56                   	push   %esi
    abe5:	53                   	push   %ebx
    abe6:	83 ec 1c             	sub    $0x1c,%esp
    abe9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    abec:	8b 45 14             	mov    0x14(%ebp),%eax
    abef:	8b 7d 10             	mov    0x10(%ebp),%edi
    abf2:	89 45 dc             	mov    %eax,-0x24(%ebp)
    abf5:	8b 53 18             	mov    0x18(%ebx),%edx
    abf8:	8b 43 14             	mov    0x14(%ebx),%eax
    abfb:	8b 75 0c             	mov    0xc(%ebp),%esi
    abfe:	8b 4d 18             	mov    0x18(%ebp),%ecx
    ac01:	89 45 e0             	mov    %eax,-0x20(%ebp)
    ac04:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    ac07:	39 fa                	cmp    %edi,%edx
    ac09:	73 0d                	jae    ac18 <block_read+0x38>
    ac0b:	83 c4 1c             	add    $0x1c,%esp
    ac0e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    ac13:	5b                   	pop    %ebx
    ac14:	5e                   	pop    %esi
    ac15:	5f                   	pop    %edi
    ac16:	5d                   	pop    %ebp
    ac17:	c3                   	ret    
    ac18:	76 4e                	jbe    ac68 <block_read+0x88>
    ac1a:	8b 45 e0             	mov    -0x20(%ebp),%eax
    ac1d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    ac20:	29 f0                	sub    %esi,%eax
    ac22:	19 fa                	sbb    %edi,%edx
    ac24:	89 45 e0             	mov    %eax,-0x20(%ebp)
    ac27:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    ac2a:	8b 51 04             	mov    0x4(%ecx),%edx
    ac2d:	8b 01                	mov    (%ecx),%eax
    ac2f:	3b 55 e4             	cmp    -0x1c(%ebp),%edx
    ac32:	72 0c                	jb     ac40 <block_read+0x60>
    ac34:	77 4a                	ja     ac80 <block_read+0xa0>
    ac36:	3b 45 e0             	cmp    -0x20(%ebp),%eax
    ac39:	77 45                	ja     ac80 <block_read+0xa0>
    ac3b:	90                   	nop
    ac3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ac40:	89 51 04             	mov    %edx,0x4(%ecx)
    ac43:	8b 55 dc             	mov    -0x24(%ebp),%edx
    ac46:	89 01                	mov    %eax,(%ecx)
    ac48:	89 75 0c             	mov    %esi,0xc(%ebp)
    ac4b:	89 7d 10             	mov    %edi,0x10(%ebp)
    ac4e:	89 55 18             	mov    %edx,0x18(%ebp)
    ac51:	89 45 14             	mov    %eax,0x14(%ebp)
    ac54:	8b 43 10             	mov    0x10(%ebx),%eax
    ac57:	89 45 08             	mov    %eax,0x8(%ebp)
    ac5a:	83 c4 1c             	add    $0x1c,%esp
    ac5d:	5b                   	pop    %ebx
    ac5e:	5e                   	pop    %esi
    ac5f:	5f                   	pop    %edi
    ac60:	5d                   	pop    %ebp
    ac61:	e9 0a 51 00 00       	jmp    fd70 <block_read_bytes_direct>
    ac66:	66 90                	xchg   %ax,%ax
    ac68:	39 f0                	cmp    %esi,%eax
    ac6a:	73 ae                	jae    ac1a <block_read+0x3a>
    ac6c:	83 c4 1c             	add    $0x1c,%esp
    ac6f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    ac74:	5b                   	pop    %ebx
    ac75:	5e                   	pop    %esi
    ac76:	5f                   	pop    %edi
    ac77:	5d                   	pop    %ebp
    ac78:	c3                   	ret    
    ac79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ac80:	8b 45 e0             	mov    -0x20(%ebp),%eax
    ac83:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    ac86:	eb b8                	jmp    ac40 <block_read+0x60>
    ac88:	90                   	nop
    ac89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000ac90 <bithenge_new_block_blob>:
    ac90:	55                   	push   %ebp
    ac91:	89 e5                	mov    %esp,%ebp
    ac93:	57                   	push   %edi
    ac94:	56                   	push   %esi
    ac95:	53                   	push   %ebx
    ac96:	83 ec 3c             	sub    $0x3c,%esp
    ac99:	8b 75 08             	mov    0x8(%ebp),%esi
    ac9c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    ac9f:	85 f6                	test   %esi,%esi
    aca1:	0f 84 ee 00 00 00    	je     ad95 <bithenge_new_block_blob+0x105>
    aca7:	c7 44 24 08 00 08 00 	movl   $0x800,0x8(%esp)
    acae:	00 
    acaf:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    acb3:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
    acba:	e8 01 3d 00 00       	call   e9c0 <block_init>
    acbf:	85 c0                	test   %eax,%eax
    acc1:	74 0d                	je     acd0 <bithenge_new_block_blob+0x40>
    acc3:	83 c4 3c             	add    $0x3c,%esp
    acc6:	5b                   	pop    %ebx
    acc7:	5e                   	pop    %esi
    acc8:	5f                   	pop    %edi
    acc9:	5d                   	pop    %ebp
    acca:	c3                   	ret    
    accb:	90                   	nop
    accc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    acd0:	8d 45 dc             	lea    -0x24(%ebp),%eax
    acd3:	89 1c 24             	mov    %ebx,(%esp)
    acd6:	89 44 24 04          	mov    %eax,0x4(%esp)
    acda:	e8 71 4f 00 00       	call   fc50 <block_get_bsize>
    acdf:	85 c0                	test   %eax,%eax
    ace1:	75 6d                	jne    ad50 <bithenge_new_block_blob+0xc0>
    ace3:	8d 45 e0             	lea    -0x20(%ebp),%eax
    ace6:	89 1c 24             	mov    %ebx,(%esp)
    ace9:	89 44 24 04          	mov    %eax,0x4(%esp)
    aced:	e8 ee 4f 00 00       	call   fce0 <block_get_nblocks>
    acf2:	85 c0                	test   %eax,%eax
    acf4:	75 5a                	jne    ad50 <bithenge_new_block_blob+0xc0>
    acf6:	8b 45 dc             	mov    -0x24(%ebp),%eax
    acf9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    acfc:	89 45 d0             	mov    %eax,-0x30(%ebp)
    acff:	c7 04 24 1c 00 00 00 	movl   $0x1c,(%esp)
    ad06:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    ad09:	0f af ca             	imul   %edx,%ecx
    ad0c:	f7 65 e0             	mull   -0x20(%ebp)
    ad0f:	01 ca                	add    %ecx,%edx
    ad11:	89 45 d0             	mov    %eax,-0x30(%ebp)
    ad14:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    ad17:	e8 b4 53 01 00       	call   200d0 <malloc>
    ad1c:	89 c7                	mov    %eax,%edi
    ad1e:	85 c0                	test   %eax,%eax
    ad20:	74 61                	je     ad83 <bithenge_new_block_blob+0xf3>
    ad22:	c7 44 24 04 e8 d3 02 	movl   $0x2d3e8,0x4(%esp)
    ad29:	00 
    ad2a:	89 04 24             	mov    %eax,(%esp)
    ad2d:	e8 be 09 00 00       	call   b6f0 <bithenge_init_random_access_blob>
    ad32:	85 c0                	test   %eax,%eax
    ad34:	75 32                	jne    ad68 <bithenge_new_block_blob+0xd8>
    ad36:	8b 55 d0             	mov    -0x30(%ebp),%edx
    ad39:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    ad3c:	89 5f 10             	mov    %ebx,0x10(%edi)
    ad3f:	89 57 14             	mov    %edx,0x14(%edi)
    ad42:	89 4f 18             	mov    %ecx,0x18(%edi)
    ad45:	89 3e                	mov    %edi,(%esi)
    ad47:	83 c4 3c             	add    $0x3c,%esp
    ad4a:	5b                   	pop    %ebx
    ad4b:	5e                   	pop    %esi
    ad4c:	5f                   	pop    %edi
    ad4d:	5d                   	pop    %ebp
    ad4e:	c3                   	ret    
    ad4f:	90                   	nop
    ad50:	89 1c 24             	mov    %ebx,(%esp)
    ad53:	89 45 cc             	mov    %eax,-0x34(%ebp)
    ad56:	e8 95 42 00 00       	call   eff0 <block_fini>
    ad5b:	8b 45 cc             	mov    -0x34(%ebp),%eax
    ad5e:	83 c4 3c             	add    $0x3c,%esp
    ad61:	5b                   	pop    %ebx
    ad62:	5e                   	pop    %esi
    ad63:	5f                   	pop    %edi
    ad64:	5d                   	pop    %ebp
    ad65:	c3                   	ret    
    ad66:	66 90                	xchg   %ax,%ax
    ad68:	89 3c 24             	mov    %edi,(%esp)
    ad6b:	89 45 cc             	mov    %eax,-0x34(%ebp)
    ad6e:	e8 6d 54 01 00       	call   201e0 <free>
    ad73:	89 1c 24             	mov    %ebx,(%esp)
    ad76:	e8 75 42 00 00       	call   eff0 <block_fini>
    ad7b:	8b 45 cc             	mov    -0x34(%ebp),%eax
    ad7e:	e9 40 ff ff ff       	jmp    acc3 <bithenge_new_block_blob+0x33>
    ad83:	89 1c 24             	mov    %ebx,(%esp)
    ad86:	e8 65 42 00 00       	call   eff0 <block_fini>
    ad8b:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    ad90:	e9 2e ff ff ff       	jmp    acc3 <bithenge_new_block_blob+0x33>
    ad95:	c7 44 24 08 64 00 00 	movl   $0x64,0x8(%esp)
    ad9c:	00 
    ad9d:	c7 44 24 04 d4 d3 02 	movl   $0x2d3d4,0x4(%esp)
    ada4:	00 
    ada5:	c7 04 24 92 d3 02 00 	movl   $0x2d392,(%esp)
    adac:	e8 ff fa 01 00       	call   2a8b0 <assert_abort>
    adb1:	66 90                	xchg   %ax,%ax
    adb3:	66 90                	xchg   %ax,%ax
    adb5:	66 90                	xchg   %ax,%ax
    adb7:	66 90                	xchg   %ax,%ax
    adb9:	66 90                	xchg   %ax,%ax
    adbb:	66 90                	xchg   %ax,%ax
    adbd:	66 90                	xchg   %ax,%ax
    adbf:	90                   	nop

0000adc0 <memory_size>:
    adc0:	55                   	push   %ebp
    adc1:	89 e5                	mov    %esp,%ebp
    adc3:	8b 55 08             	mov    0x8(%ebp),%edx
    adc6:	8b 45 0c             	mov    0xc(%ebp),%eax
    adc9:	8b 4a 14             	mov    0x14(%edx),%ecx
    adcc:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    add3:	89 08                	mov    %ecx,(%eax)
    add5:	31 c0                	xor    %eax,%eax
    add7:	5d                   	pop    %ebp
    add8:	c3                   	ret    
    add9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000ade0 <subblob_read_bits>:
    ade0:	55                   	push   %ebp
    ade1:	89 e5                	mov    %esp,%ebp
    ade3:	57                   	push   %edi
    ade4:	56                   	push   %esi
    ade5:	53                   	push   %ebx
    ade6:	83 ec 2c             	sub    $0x2c,%esp
    ade9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    adec:	8b 45 14             	mov    0x14(%ebp),%eax
    adef:	8a 55 1c             	mov    0x1c(%ebp),%dl
    adf2:	8b 75 0c             	mov    0xc(%ebp),%esi
    adf5:	8b 7d 10             	mov    0x10(%ebp),%edi
    adf8:	89 45 dc             	mov    %eax,-0x24(%ebp)
    adfb:	8b 4d 18             	mov    0x18(%ebp),%ecx
    adfe:	88 55 db             	mov    %dl,-0x25(%ebp)
    ae01:	80 7b 24 00          	cmpb   $0x0,0x24(%ebx)
    ae05:	74 4e                	je     ae55 <subblob_read_bits+0x75>
    ae07:	8b 53 20             	mov    0x20(%ebx),%edx
    ae0a:	8b 43 1c             	mov    0x1c(%ebx),%eax
    ae0d:	89 45 e0             	mov    %eax,-0x20(%ebp)
    ae10:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    ae13:	39 fa                	cmp    %edi,%edx
    ae15:	73 11                	jae    ae28 <subblob_read_bits+0x48>
    ae17:	83 c4 2c             	add    $0x2c,%esp
    ae1a:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    ae1f:	5b                   	pop    %ebx
    ae20:	5e                   	pop    %esi
    ae21:	5f                   	pop    %edi
    ae22:	5d                   	pop    %ebp
    ae23:	c3                   	ret    
    ae24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ae28:	77 04                	ja     ae2e <subblob_read_bits+0x4e>
    ae2a:	39 f0                	cmp    %esi,%eax
    ae2c:	72 e9                	jb     ae17 <subblob_read_bits+0x37>
    ae2e:	8b 45 e0             	mov    -0x20(%ebp),%eax
    ae31:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    ae34:	29 f0                	sub    %esi,%eax
    ae36:	19 fa                	sbb    %edi,%edx
    ae38:	89 45 e0             	mov    %eax,-0x20(%ebp)
    ae3b:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    ae3e:	8b 41 04             	mov    0x4(%ecx),%eax
    ae41:	8b 11                	mov    (%ecx),%edx
    ae43:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
    ae46:	72 08                	jb     ae50 <subblob_read_bits+0x70>
    ae48:	76 66                	jbe    aeb0 <subblob_read_bits+0xd0>
    ae4a:	8b 55 e0             	mov    -0x20(%ebp),%edx
    ae4d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    ae50:	89 11                	mov    %edx,(%ecx)
    ae52:	89 41 04             	mov    %eax,0x4(%ecx)
    ae55:	89 f0                	mov    %esi,%eax
    ae57:	89 fa                	mov    %edi,%edx
    ae59:	03 43 14             	add    0x14(%ebx),%eax
    ae5c:	13 53 18             	adc    0x18(%ebx),%edx
    ae5f:	8b 5b 10             	mov    0x10(%ebx),%ebx
    ae62:	89 45 e0             	mov    %eax,-0x20(%ebp)
    ae65:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    ae68:	85 db                	test   %ebx,%ebx
    ae6a:	74 4b                	je     aeb7 <subblob_read_bits+0xd7>
    ae6c:	8b 7b 08             	mov    0x8(%ebx),%edi
    ae6f:	85 ff                	test   %edi,%edi
    ae71:	74 60                	je     aed3 <subblob_read_bits+0xf3>
    ae73:	8b 7f 08             	mov    0x8(%edi),%edi
    ae76:	85 ff                	test   %edi,%edi
    ae78:	74 9d                	je     ae17 <subblob_read_bits+0x37>
    ae7a:	8a 55 db             	mov    -0x25(%ebp),%dl
    ae7d:	8b 45 dc             	mov    -0x24(%ebp),%eax
    ae80:	81 e2 ff 00 00 00    	and    $0xff,%edx
    ae86:	89 45 14             	mov    %eax,0x14(%ebp)
    ae89:	89 55 1c             	mov    %edx,0x1c(%ebp)
    ae8c:	8b 45 e0             	mov    -0x20(%ebp),%eax
    ae8f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    ae92:	89 5d 08             	mov    %ebx,0x8(%ebp)
    ae95:	89 55 10             	mov    %edx,0x10(%ebp)
    ae98:	89 4d 18             	mov    %ecx,0x18(%ebp)
    ae9b:	89 45 0c             	mov    %eax,0xc(%ebp)
    ae9e:	83 c4 2c             	add    $0x2c,%esp
    aea1:	89 fa                	mov    %edi,%edx
    aea3:	5b                   	pop    %ebx
    aea4:	5e                   	pop    %esi
    aea5:	5f                   	pop    %edi
    aea6:	5d                   	pop    %ebp
    aea7:	ff e2                	jmp    *%edx
    aea9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    aeb0:	3b 55 e0             	cmp    -0x20(%ebp),%edx
    aeb3:	76 9b                	jbe    ae50 <subblob_read_bits+0x70>
    aeb5:	eb 93                	jmp    ae4a <subblob_read_bits+0x6a>
    aeb7:	c7 44 24 08 b2 00 00 	movl   $0xb2,0x8(%esp)
    aebe:	00 
    aebf:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    aec6:	00 
    aec7:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    aece:	e8 dd f9 01 00       	call   2a8b0 <assert_abort>
    aed3:	c7 44 24 08 b3 00 00 	movl   $0xb3,0x8(%esp)
    aeda:	00 
    aedb:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    aee2:	00 
    aee3:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    aeea:	e8 c1 f9 01 00       	call   2a8b0 <assert_abort>
    aeef:	90                   	nop

0000aef0 <memory_destroy>:
    aef0:	55                   	push   %ebp
    aef1:	89 e5                	mov    %esp,%ebp
    aef3:	53                   	push   %ebx
    aef4:	83 ec 14             	sub    $0x14,%esp
    aef7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    aefa:	80 7b 18 00          	cmpb   $0x0,0x18(%ebx)
    aefe:	74 0b                	je     af0b <memory_destroy+0x1b>
    af00:	8b 43 10             	mov    0x10(%ebx),%eax
    af03:	89 04 24             	mov    %eax,(%esp)
    af06:	e8 d5 52 01 00       	call   201e0 <free>
    af0b:	89 5d 08             	mov    %ebx,0x8(%ebp)
    af0e:	83 c4 14             	add    $0x14,%esp
    af11:	5b                   	pop    %ebx
    af12:	5d                   	pop    %ebp
    af13:	e9 c8 52 01 00       	jmp    201e0 <free>
    af18:	90                   	nop
    af19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000af20 <sequential_destroy>:
    af20:	55                   	push   %ebp
    af21:	89 e5                	mov    %esp,%ebp
    af23:	53                   	push   %ebx
    af24:	83 ec 14             	sub    $0x14,%esp
    af27:	8b 5d 08             	mov    0x8(%ebp),%ebx
    af2a:	8b 43 14             	mov    0x14(%ebx),%eax
    af2d:	89 04 24             	mov    %eax,(%esp)
    af30:	e8 ab 52 01 00       	call   201e0 <free>
    af35:	8b 43 10             	mov    0x10(%ebx),%eax
    af38:	89 5d 08             	mov    %ebx,0x8(%ebp)
    af3b:	8b 40 08             	mov    0x8(%eax),%eax
    af3e:	83 c4 14             	add    $0x14,%esp
    af41:	5b                   	pop    %ebx
    af42:	5d                   	pop    %ebp
    af43:	ff e0                	jmp    *%eax
    af45:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    af49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000af50 <memory_read>:
    af50:	55                   	push   %ebp
    af51:	89 e5                	mov    %esp,%ebp
    af53:	57                   	push   %edi
    af54:	56                   	push   %esi
    af55:	53                   	push   %ebx
    af56:	83 ec 2c             	sub    $0x2c,%esp
    af59:	31 db                	xor    %ebx,%ebx
    af5b:	8b 7d 08             	mov    0x8(%ebp),%edi
    af5e:	8b 55 10             	mov    0x10(%ebp),%edx
    af61:	8b 45 0c             	mov    0xc(%ebp),%eax
    af64:	8b 75 18             	mov    0x18(%ebp),%esi
    af67:	8b 4f 14             	mov    0x14(%edi),%ecx
    af6a:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
    af6d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    af70:	39 d3                	cmp    %edx,%ebx
    af72:	73 14                	jae    af88 <memory_read+0x38>
    af74:	83 c4 2c             	add    $0x2c,%esp
    af77:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    af7c:	5b                   	pop    %ebx
    af7d:	5e                   	pop    %esi
    af7e:	5f                   	pop    %edi
    af7f:	5d                   	pop    %ebp
    af80:	c3                   	ret    
    af81:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    af88:	76 4e                	jbe    afd8 <memory_read+0x88>
    af8a:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    af8d:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    af90:	29 c1                	sub    %eax,%ecx
    af92:	19 d3                	sbb    %edx,%ebx
    af94:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    af97:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
    af9a:	8b 5e 04             	mov    0x4(%esi),%ebx
    af9d:	8b 0e                	mov    (%esi),%ecx
    af9f:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx
    afa2:	72 0c                	jb     afb0 <memory_read+0x60>
    afa4:	77 3a                	ja     afe0 <memory_read+0x90>
    afa6:	3b 4d e0             	cmp    -0x20(%ebp),%ecx
    afa9:	77 35                	ja     afe0 <memory_read+0x90>
    afab:	90                   	nop
    afac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    afb0:	89 5e 04             	mov    %ebx,0x4(%esi)
    afb3:	89 0e                	mov    %ecx,(%esi)
    afb5:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    afb9:	8b 57 10             	mov    0x10(%edi),%edx
    afbc:	01 d0                	add    %edx,%eax
    afbe:	89 44 24 04          	mov    %eax,0x4(%esp)
    afc2:	8b 45 14             	mov    0x14(%ebp),%eax
    afc5:	89 04 24             	mov    %eax,(%esp)
    afc8:	e8 13 82 00 00       	call   131e0 <memcpy>
    afcd:	83 c4 2c             	add    $0x2c,%esp
    afd0:	31 c0                	xor    %eax,%eax
    afd2:	5b                   	pop    %ebx
    afd3:	5e                   	pop    %esi
    afd4:	5f                   	pop    %edi
    afd5:	5d                   	pop    %ebp
    afd6:	c3                   	ret    
    afd7:	90                   	nop
    afd8:	39 c1                	cmp    %eax,%ecx
    afda:	72 98                	jb     af74 <memory_read+0x24>
    afdc:	eb ac                	jmp    af8a <memory_read+0x3a>
    afde:	66 90                	xchg   %ax,%ax
    afe0:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    afe3:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    afe6:	eb c8                	jmp    afb0 <memory_read+0x60>
    afe8:	90                   	nop
    afe9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000aff0 <sequential_read>:
    aff0:	55                   	push   %ebp
    aff1:	89 e5                	mov    %esp,%ebp
    aff3:	57                   	push   %edi
    aff4:	56                   	push   %esi
    aff5:	53                   	push   %ebx
    aff6:	83 ec 4c             	sub    $0x4c,%esp
    aff9:	8b 4d 10             	mov    0x10(%ebp),%ecx
    affc:	8b 55 0c             	mov    0xc(%ebp),%edx
    afff:	89 cf                	mov    %ecx,%edi
    b001:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    b004:	8b 4d 18             	mov    0x18(%ebp),%ecx
    b007:	89 d6                	mov    %edx,%esi
    b009:	89 55 d0             	mov    %edx,-0x30(%ebp)
    b00c:	8b 55 08             	mov    0x8(%ebp),%edx
    b00f:	03 31                	add    (%ecx),%esi
    b011:	13 79 04             	adc    0x4(%ecx),%edi
    b014:	8b 5a 24             	mov    0x24(%edx),%ebx
    b017:	8b 4a 20             	mov    0x20(%edx),%ecx
    b01a:	39 df                	cmp    %ebx,%edi
    b01c:	0f 82 b6 00 00 00    	jb     b0d8 <sequential_read+0xe8>
    b022:	0f 86 08 01 00 00    	jbe    b130 <sequential_read+0x140>
    b028:	8b 55 08             	mov    0x8(%ebp),%edx
    b02b:	8b 42 18             	mov    0x18(%edx),%eax
    b02e:	8b 52 1c             	mov    0x1c(%edx),%edx
    b031:	89 45 c0             	mov    %eax,-0x40(%ebp)
    b034:	89 55 c4             	mov    %edx,-0x3c(%ebp)
    b037:	39 d7                	cmp    %edx,%edi
    b039:	0f 86 21 01 00 00    	jbe    b160 <sequential_read+0x170>
    b03f:	90                   	nop
    b040:	0f a4 c2 01          	shld   $0x1,%eax,%edx
    b044:	01 c0                	add    %eax,%eax
    b046:	83 fa 00             	cmp    $0x0,%edx
    b049:	77 0e                	ja     b059 <sequential_read+0x69>
    b04b:	3d 00 10 00 00       	cmp    $0x1000,%eax
    b050:	73 07                	jae    b059 <sequential_read+0x69>
    b052:	b8 00 10 00 00       	mov    $0x1000,%eax
    b057:	31 d2                	xor    %edx,%edx
    b059:	39 d7                	cmp    %edx,%edi
    b05b:	77 e3                	ja     b040 <sequential_read+0x50>
    b05d:	0f 83 e5 00 00 00    	jae    b148 <sequential_read+0x158>
    b063:	8b 4d 08             	mov    0x8(%ebp),%ecx
    b066:	89 41 18             	mov    %eax,0x18(%ecx)
    b069:	89 51 1c             	mov    %edx,0x1c(%ecx)
    b06c:	89 44 24 04          	mov    %eax,0x4(%esp)
    b070:	8b 41 14             	mov    0x14(%ecx),%eax
    b073:	89 04 24             	mov    %eax,(%esp)
    b076:	e8 b5 53 01 00       	call   20430 <realloc>
    b07b:	89 45 cc             	mov    %eax,-0x34(%ebp)
    b07e:	85 c0                	test   %eax,%eax
    b080:	0f 84 f9 00 00 00    	je     b17f <sequential_read+0x18f>
    b086:	8b 55 08             	mov    0x8(%ebp),%edx
    b089:	89 42 14             	mov    %eax,0x14(%edx)
    b08c:	8b 4a 20             	mov    0x20(%edx),%ecx
    b08f:	8b 5a 24             	mov    0x24(%edx),%ebx
    b092:	89 f0                	mov    %esi,%eax
    b094:	89 fa                	mov    %edi,%edx
    b096:	29 c8                	sub    %ecx,%eax
    b098:	19 da                	sbb    %ebx,%edx
    b09a:	89 45 e0             	mov    %eax,-0x20(%ebp)
    b09d:	8b 45 08             	mov    0x8(%ebp),%eax
    b0a0:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    b0a3:	8b 50 10             	mov    0x10(%eax),%edx
    b0a6:	8d 45 e0             	lea    -0x20(%ebp),%eax
    b0a9:	89 44 24 08          	mov    %eax,0x8(%esp)
    b0ad:	8b 45 cc             	mov    -0x34(%ebp),%eax
    b0b0:	01 c1                	add    %eax,%ecx
    b0b2:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    b0b6:	8b 4d 08             	mov    0x8(%ebp),%ecx
    b0b9:	89 0c 24             	mov    %ecx,(%esp)
    b0bc:	ff 52 04             	call   *0x4(%edx)
    b0bf:	85 c0                	test   %eax,%eax
    b0c1:	75 65                	jne    b128 <sequential_read+0x138>
    b0c3:	8b 55 08             	mov    0x8(%ebp),%edx
    b0c6:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    b0c9:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    b0cc:	03 4a 20             	add    0x20(%edx),%ecx
    b0cf:	13 5a 24             	adc    0x24(%edx),%ebx
    b0d2:	89 4a 20             	mov    %ecx,0x20(%edx)
    b0d5:	89 5a 24             	mov    %ebx,0x24(%edx)
    b0d8:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)
    b0db:	77 7b                	ja     b158 <sequential_read+0x168>
    b0dd:	72 05                	jb     b0e4 <sequential_read+0xf4>
    b0df:	39 4d d0             	cmp    %ecx,-0x30(%ebp)
    b0e2:	77 74                	ja     b158 <sequential_read+0x168>
    b0e4:	29 f1                	sub    %esi,%ecx
    b0e6:	8b 75 18             	mov    0x18(%ebp),%esi
    b0e9:	19 fb                	sbb    %edi,%ebx
    b0eb:	8b 46 04             	mov    0x4(%esi),%eax
    b0ee:	8b 16                	mov    (%esi),%edx
    b0f0:	39 c3                	cmp    %eax,%ebx
    b0f2:	72 0c                	jb     b100 <sequential_read+0x110>
    b0f4:	77 4a                	ja     b140 <sequential_read+0x150>
    b0f6:	39 d1                	cmp    %edx,%ecx
    b0f8:	77 46                	ja     b140 <sequential_read+0x150>
    b0fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b100:	8b 55 18             	mov    0x18(%ebp),%edx
    b103:	8b 45 d0             	mov    -0x30(%ebp),%eax
    b106:	89 0a                	mov    %ecx,(%edx)
    b108:	89 5a 04             	mov    %ebx,0x4(%edx)
    b10b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    b10f:	8b 4d 08             	mov    0x8(%ebp),%ecx
    b112:	8b 59 14             	mov    0x14(%ecx),%ebx
    b115:	01 d8                	add    %ebx,%eax
    b117:	89 44 24 04          	mov    %eax,0x4(%esp)
    b11b:	8b 45 14             	mov    0x14(%ebp),%eax
    b11e:	89 04 24             	mov    %eax,(%esp)
    b121:	e8 ba 80 00 00       	call   131e0 <memcpy>
    b126:	31 c0                	xor    %eax,%eax
    b128:	83 c4 4c             	add    $0x4c,%esp
    b12b:	5b                   	pop    %ebx
    b12c:	5e                   	pop    %esi
    b12d:	5f                   	pop    %edi
    b12e:	5d                   	pop    %ebp
    b12f:	c3                   	ret    
    b130:	39 ce                	cmp    %ecx,%esi
    b132:	0f 87 f0 fe ff ff    	ja     b028 <sequential_read+0x38>
    b138:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)
    b13b:	77 1b                	ja     b158 <sequential_read+0x168>
    b13d:	eb 9e                	jmp    b0dd <sequential_read+0xed>
    b13f:	90                   	nop
    b140:	89 d1                	mov    %edx,%ecx
    b142:	89 c3                	mov    %eax,%ebx
    b144:	eb ba                	jmp    b100 <sequential_read+0x110>
    b146:	66 90                	xchg   %ax,%ax
    b148:	39 c6                	cmp    %eax,%esi
    b14a:	0f 87 f0 fe ff ff    	ja     b040 <sequential_read+0x50>
    b150:	e9 0e ff ff ff       	jmp    b063 <sequential_read+0x73>
    b155:	8d 76 00             	lea    0x0(%esi),%esi
    b158:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    b15d:	eb c9                	jmp    b128 <sequential_read+0x138>
    b15f:	90                   	nop
    b160:	73 0e                	jae    b170 <sequential_read+0x180>
    b162:	8b 55 08             	mov    0x8(%ebp),%edx
    b165:	8b 52 14             	mov    0x14(%edx),%edx
    b168:	89 55 cc             	mov    %edx,-0x34(%ebp)
    b16b:	e9 22 ff ff ff       	jmp    b092 <sequential_read+0xa2>
    b170:	39 c6                	cmp    %eax,%esi
    b172:	76 ee                	jbe    b162 <sequential_read+0x172>
    b174:	8b 45 c0             	mov    -0x40(%ebp),%eax
    b177:	8b 55 c4             	mov    -0x3c(%ebp),%edx
    b17a:	e9 c1 fe ff ff       	jmp    b040 <sequential_read+0x50>
    b17f:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b184:	eb a2                	jmp    b128 <sequential_read+0x138>
    b186:	8d 76 00             	lea    0x0(%esi),%esi
    b189:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b190 <subblob_read>:
    b190:	55                   	push   %ebp
    b191:	89 e5                	mov    %esp,%ebp
    b193:	57                   	push   %edi
    b194:	56                   	push   %esi
    b195:	53                   	push   %ebx
    b196:	83 ec 2c             	sub    $0x2c,%esp
    b199:	8b 5d 08             	mov    0x8(%ebp),%ebx
    b19c:	8b 45 14             	mov    0x14(%ebp),%eax
    b19f:	8b 75 0c             	mov    0xc(%ebp),%esi
    b1a2:	8b 7d 10             	mov    0x10(%ebp),%edi
    b1a5:	89 45 dc             	mov    %eax,-0x24(%ebp)
    b1a8:	8b 4d 18             	mov    0x18(%ebp),%ecx
    b1ab:	80 7b 24 00          	cmpb   $0x0,0x24(%ebx)
    b1af:	74 4c                	je     b1fd <subblob_read+0x6d>
    b1b1:	8b 53 20             	mov    0x20(%ebx),%edx
    b1b4:	8b 43 1c             	mov    0x1c(%ebx),%eax
    b1b7:	89 45 e0             	mov    %eax,-0x20(%ebp)
    b1ba:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    b1bd:	39 fa                	cmp    %edi,%edx
    b1bf:	73 0f                	jae    b1d0 <subblob_read+0x40>
    b1c1:	83 c4 2c             	add    $0x2c,%esp
    b1c4:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    b1c9:	5b                   	pop    %ebx
    b1ca:	5e                   	pop    %esi
    b1cb:	5f                   	pop    %edi
    b1cc:	5d                   	pop    %ebp
    b1cd:	c3                   	ret    
    b1ce:	66 90                	xchg   %ax,%ax
    b1d0:	77 04                	ja     b1d6 <subblob_read+0x46>
    b1d2:	39 f0                	cmp    %esi,%eax
    b1d4:	72 eb                	jb     b1c1 <subblob_read+0x31>
    b1d6:	8b 45 e0             	mov    -0x20(%ebp),%eax
    b1d9:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    b1dc:	29 f0                	sub    %esi,%eax
    b1de:	19 fa                	sbb    %edi,%edx
    b1e0:	89 45 e0             	mov    %eax,-0x20(%ebp)
    b1e3:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    b1e6:	8b 41 04             	mov    0x4(%ecx),%eax
    b1e9:	8b 11                	mov    (%ecx),%edx
    b1eb:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
    b1ee:	72 08                	jb     b1f8 <subblob_read+0x68>
    b1f0:	76 4e                	jbe    b240 <subblob_read+0xb0>
    b1f2:	8b 55 e0             	mov    -0x20(%ebp),%edx
    b1f5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    b1f8:	89 11                	mov    %edx,(%ecx)
    b1fa:	89 41 04             	mov    %eax,0x4(%ecx)
    b1fd:	89 f0                	mov    %esi,%eax
    b1ff:	89 fa                	mov    %edi,%edx
    b201:	03 43 14             	add    0x14(%ebx),%eax
    b204:	13 53 18             	adc    0x18(%ebx),%edx
    b207:	8b 5b 10             	mov    0x10(%ebx),%ebx
    b20a:	85 db                	test   %ebx,%ebx
    b20c:	74 39                	je     b247 <subblob_read+0xb7>
    b20e:	8b 7b 08             	mov    0x8(%ebx),%edi
    b211:	85 ff                	test   %edi,%edi
    b213:	74 37                	je     b24c <subblob_read+0xbc>
    b215:	8b 7f 04             	mov    0x4(%edi),%edi
    b218:	85 ff                	test   %edi,%edi
    b21a:	74 a5                	je     b1c1 <subblob_read+0x31>
    b21c:	89 4d 18             	mov    %ecx,0x18(%ebp)
    b21f:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    b222:	89 55 10             	mov    %edx,0x10(%ebp)
    b225:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b228:	89 4d 14             	mov    %ecx,0x14(%ebp)
    b22b:	89 45 0c             	mov    %eax,0xc(%ebp)
    b22e:	83 c4 2c             	add    $0x2c,%esp
    b231:	89 fa                	mov    %edi,%edx
    b233:	5b                   	pop    %ebx
    b234:	5e                   	pop    %esi
    b235:	5f                   	pop    %edi
    b236:	5d                   	pop    %ebp
    b237:	ff e2                	jmp    *%edx
    b239:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b240:	3b 55 e0             	cmp    -0x20(%ebp),%edx
    b243:	76 b3                	jbe    b1f8 <subblob_read+0x68>
    b245:	eb ab                	jmp    b1f2 <subblob_read+0x62>
    b247:	e8 0e 0a 00 00       	call   bc5a <bithenge_blob_read.part.1>
    b24c:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    b253:	00 
    b254:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    b25b:	00 
    b25c:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    b263:	e8 48 f6 01 00       	call   2a8b0 <assert_abort>
    b268:	90                   	nop
    b269:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b270 <subblob_size>:
    b270:	55                   	push   %ebp
    b271:	89 e5                	mov    %esp,%ebp
    b273:	57                   	push   %edi
    b274:	56                   	push   %esi
    b275:	53                   	push   %ebx
    b276:	83 ec 1c             	sub    $0x1c,%esp
    b279:	8b 75 08             	mov    0x8(%ebp),%esi
    b27c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    b27f:	80 7e 24 00          	cmpb   $0x0,0x24(%esi)
    b283:	74 1b                	je     b2a0 <subblob_size+0x30>
    b285:	8b 46 1c             	mov    0x1c(%esi),%eax
    b288:	8b 56 20             	mov    0x20(%esi),%edx
    b28b:	89 53 04             	mov    %edx,0x4(%ebx)
    b28e:	89 03                	mov    %eax,(%ebx)
    b290:	83 c4 1c             	add    $0x1c,%esp
    b293:	31 c0                	xor    %eax,%eax
    b295:	5b                   	pop    %ebx
    b296:	5e                   	pop    %esi
    b297:	5f                   	pop    %edi
    b298:	5d                   	pop    %ebp
    b299:	c3                   	ret    
    b29a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b2a0:	8b 46 10             	mov    0x10(%esi),%eax
    b2a3:	85 c0                	test   %eax,%eax
    b2a5:	74 23                	je     b2ca <subblob_size+0x5a>
    b2a7:	8b 50 08             	mov    0x8(%eax),%edx
    b2aa:	85 d2                	test   %edx,%edx
    b2ac:	74 38                	je     b2e6 <subblob_size+0x76>
    b2ae:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    b2b2:	89 04 24             	mov    %eax,(%esp)
    b2b5:	ff 12                	call   *(%edx)
    b2b7:	8b 7e 18             	mov    0x18(%esi),%edi
    b2ba:	8b 76 14             	mov    0x14(%esi),%esi
    b2bd:	29 33                	sub    %esi,(%ebx)
    b2bf:	19 7b 04             	sbb    %edi,0x4(%ebx)
    b2c2:	83 c4 1c             	add    $0x1c,%esp
    b2c5:	5b                   	pop    %ebx
    b2c6:	5e                   	pop    %esi
    b2c7:	5f                   	pop    %edi
    b2c8:	5d                   	pop    %ebp
    b2c9:	c3                   	ret    
    b2ca:	c7 44 24 08 7f 00 00 	movl   $0x7f,0x8(%esp)
    b2d1:	00 
    b2d2:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    b2d9:	00 
    b2da:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    b2e1:	e8 ca f5 01 00       	call   2a8b0 <assert_abort>
    b2e6:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    b2ed:	00 
    b2ee:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    b2f5:	00 
    b2f6:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    b2fd:	e8 ae f5 01 00       	call   2a8b0 <assert_abort>
    b302:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b309:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b310 <subblob_destroy>:
    b310:	55                   	push   %ebp
    b311:	89 e5                	mov    %esp,%ebp
    b313:	53                   	push   %ebx
    b314:	83 ec 14             	sub    $0x14,%esp
    b317:	8b 5d 08             	mov    0x8(%ebp),%ebx
    b31a:	8b 43 10             	mov    0x10(%ebx),%eax
    b31d:	85 c0                	test   %eax,%eax
    b31f:	74 08                	je     b329 <subblob_destroy+0x19>
    b321:	89 04 24             	mov    %eax,(%esp)
    b324:	e8 97 ef ff ff       	call   a2c0 <bithenge_node_dec_ref>
    b329:	89 5d 08             	mov    %ebx,0x8(%ebp)
    b32c:	83 c4 14             	add    $0x14,%esp
    b32f:	5b                   	pop    %ebx
    b330:	5d                   	pop    %ebp
    b331:	e9 aa 4e 01 00       	jmp    201e0 <free>
    b336:	8d 76 00             	lea    0x0(%esi),%esi
    b339:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b340 <new_subblob>:
    b340:	55                   	push   %ebp
    b341:	89 e5                	mov    %esp,%ebp
    b343:	57                   	push   %edi
    b344:	56                   	push   %esi
    b345:	53                   	push   %ebx
    b346:	83 ec 3c             	sub    $0x3c,%esp
    b349:	89 d6                	mov    %edx,%esi
    b34b:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    b34e:	8b 55 08             	mov    0x8(%ebp),%edx
    b351:	89 55 e0             	mov    %edx,-0x20(%ebp)
    b354:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    b357:	8b 55 10             	mov    0x10(%ebp),%edx
    b35a:	8b 4d 14             	mov    0x14(%ebp),%ecx
    b35d:	89 c7                	mov    %eax,%edi
    b35f:	89 55 d8             	mov    %edx,-0x28(%ebp)
    b362:	89 4d dc             	mov    %ecx,-0x24(%ebp)
    b365:	8a 5d 18             	mov    0x18(%ebp),%bl
    b368:	85 c0                	test   %eax,%eax
    b36a:	0f 84 9b 01 00 00    	je     b50b <new_subblob+0x1cb>
    b370:	85 f6                	test   %esi,%esi
    b372:	0f 84 77 01 00 00    	je     b4ef <new_subblob+0x1af>
    b378:	81 7e 08 90 d4 02 00 	cmpl   $0x2d490,0x8(%esi)
    b37f:	74 57                	je     b3d8 <new_subblob+0x98>
    b381:	c7 04 24 28 00 00 00 	movl   $0x28,(%esp)
    b388:	e8 43 4d 01 00       	call   200d0 <malloc>
    b38d:	85 c0                	test   %eax,%eax
    b38f:	0f 84 d3 00 00 00    	je     b468 <new_subblob+0x128>
    b395:	8b 55 e0             	mov    -0x20(%ebp),%edx
    b398:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    b39b:	89 50 14             	mov    %edx,0x14(%eax)
    b39e:	89 48 18             	mov    %ecx,0x18(%eax)
    b3a1:	8b 55 d8             	mov    -0x28(%ebp),%edx
    b3a4:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    b3a7:	c7 00 05 00 00 00    	movl   $0x5,(%eax)
    b3ad:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    b3b4:	c7 40 08 90 d4 02 00 	movl   $0x2d490,0x8(%eax)
    b3bb:	89 70 10             	mov    %esi,0x10(%eax)
    b3be:	89 50 1c             	mov    %edx,0x1c(%eax)
    b3c1:	89 48 20             	mov    %ecx,0x20(%eax)
    b3c4:	88 58 24             	mov    %bl,0x24(%eax)
    b3c7:	89 07                	mov    %eax,(%edi)
    b3c9:	31 c0                	xor    %eax,%eax
    b3cb:	83 c4 3c             	add    $0x3c,%esp
    b3ce:	5b                   	pop    %ebx
    b3cf:	5e                   	pop    %esi
    b3d0:	5f                   	pop    %edi
    b3d1:	5d                   	pop    %ebp
    b3d2:	c3                   	ret    
    b3d3:	90                   	nop
    b3d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b3d8:	84 db                	test   %bl,%bl
    b3da:	75 0e                	jne    b3ea <new_subblob+0xaa>
    b3dc:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
    b3e3:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    b3ea:	8a 46 24             	mov    0x24(%esi),%al
    b3ed:	84 c0                	test   %al,%al
    b3ef:	74 1f                	je     b410 <new_subblob+0xd0>
    b3f1:	8b 55 d8             	mov    -0x28(%ebp),%edx
    b3f4:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    b3f7:	03 55 e0             	add    -0x20(%ebp),%edx
    b3fa:	13 4d e4             	adc    -0x1c(%ebp),%ecx
    b3fd:	3b 4e 20             	cmp    0x20(%esi),%ecx
    b400:	0f 87 c3 00 00 00    	ja     b4c9 <new_subblob+0x189>
    b406:	0f 83 b4 00 00 00    	jae    b4c0 <new_subblob+0x180>
    b40c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b410:	83 7e 04 01          	cmpl   $0x1,0x4(%esi)
    b414:	74 7a                	je     b490 <new_subblob+0x150>
    b416:	84 db                	test   %bl,%bl
    b418:	75 08                	jne    b422 <new_subblob+0xe2>
    b41a:	84 c0                	test   %al,%al
    b41c:	0f 85 ae 00 00 00    	jne    b4d0 <new_subblob+0x190>
    b422:	8b 46 14             	mov    0x14(%esi),%eax
    b425:	8b 56 18             	mov    0x18(%esi),%edx
    b428:	01 45 e0             	add    %eax,-0x20(%ebp)
    b42b:	8b 46 10             	mov    0x10(%esi),%eax
    b42e:	11 55 e4             	adc    %edx,-0x1c(%ebp)
    b431:	85 c0                	test   %eax,%eax
    b433:	0f 84 ee 00 00 00    	je     b527 <new_subblob+0x1e7>
    b439:	8b 50 04             	mov    0x4(%eax),%edx
    b43c:	42                   	inc    %edx
    b43d:	89 50 04             	mov    %edx,0x4(%eax)
    b440:	89 34 24             	mov    %esi,(%esp)
    b443:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    b446:	e8 75 ee ff ff       	call   a2c0 <bithenge_node_dec_ref>
    b44b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    b44e:	c7 04 24 28 00 00 00 	movl   $0x28,(%esp)
    b455:	89 c6                	mov    %eax,%esi
    b457:	e8 74 4c 01 00       	call   200d0 <malloc>
    b45c:	85 c0                	test   %eax,%eax
    b45e:	0f 85 31 ff ff ff    	jne    b395 <new_subblob+0x55>
    b464:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b468:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b46d:	89 34 24             	mov    %esi,(%esp)
    b470:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    b473:	e8 48 ee ff ff       	call   a2c0 <bithenge_node_dec_ref>
    b478:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    b47f:	e8 5c 4d 01 00       	call   201e0 <free>
    b484:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    b487:	83 c4 3c             	add    $0x3c,%esp
    b48a:	5b                   	pop    %ebx
    b48b:	5e                   	pop    %esi
    b48c:	5f                   	pop    %edi
    b48d:	5d                   	pop    %ebp
    b48e:	c3                   	ret    
    b48f:	90                   	nop
    b490:	8b 55 e0             	mov    -0x20(%ebp),%edx
    b493:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    b496:	01 56 14             	add    %edx,0x14(%esi)
    b499:	11 4e 18             	adc    %ecx,0x18(%esi)
    b49c:	29 56 1c             	sub    %edx,0x1c(%esi)
    b49f:	19 4e 20             	sbb    %ecx,0x20(%esi)
    b4a2:	84 db                	test   %bl,%bl
    b4a4:	74 10                	je     b4b6 <new_subblob+0x176>
    b4a6:	8b 55 d8             	mov    -0x28(%ebp),%edx
    b4a9:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    b4ac:	c6 46 24 01          	movb   $0x1,0x24(%esi)
    b4b0:	89 56 1c             	mov    %edx,0x1c(%esi)
    b4b3:	89 4e 20             	mov    %ecx,0x20(%esi)
    b4b6:	89 37                	mov    %esi,(%edi)
    b4b8:	31 c0                	xor    %eax,%eax
    b4ba:	e9 0c ff ff ff       	jmp    b3cb <new_subblob+0x8b>
    b4bf:	90                   	nop
    b4c0:	3b 56 1c             	cmp    0x1c(%esi),%edx
    b4c3:	0f 86 47 ff ff ff    	jbe    b410 <new_subblob+0xd0>
    b4c9:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    b4ce:	eb 9d                	jmp    b46d <new_subblob+0x12d>
    b4d0:	8b 56 1c             	mov    0x1c(%esi),%edx
    b4d3:	8b 4e 20             	mov    0x20(%esi),%ecx
    b4d6:	89 55 d8             	mov    %edx,-0x28(%ebp)
    b4d9:	8b 55 e0             	mov    -0x20(%ebp),%edx
    b4dc:	29 55 d8             	sub    %edx,-0x28(%ebp)
    b4df:	89 4d dc             	mov    %ecx,-0x24(%ebp)
    b4e2:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    b4e5:	b3 01                	mov    $0x1,%bl
    b4e7:	19 4d dc             	sbb    %ecx,-0x24(%ebp)
    b4ea:	e9 33 ff ff ff       	jmp    b422 <new_subblob+0xe2>
    b4ef:	c7 44 24 08 76 01 00 	movl   $0x176,0x8(%esp)
    b4f6:	00 
    b4f7:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    b4fe:	00 
    b4ff:	c7 04 24 03 d4 02 00 	movl   $0x2d403,(%esp)
    b506:	e8 a5 f3 01 00       	call   2a8b0 <assert_abort>
    b50b:	c7 44 24 08 75 01 00 	movl   $0x175,0x8(%esp)
    b512:	00 
    b513:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    b51a:	00 
    b51b:	c7 04 24 92 d3 02 00 	movl   $0x2d392,(%esp)
    b522:	e8 89 f3 01 00       	call   2a8b0 <assert_abort>
    b527:	c7 44 24 08 70 00 00 	movl   $0x70,0x8(%esp)
    b52e:	00 
    b52f:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    b536:	00 
    b537:	c7 04 24 a0 d0 02 00 	movl   $0x2d0a0,(%esp)
    b53e:	e8 6d f3 01 00       	call   2a8b0 <assert_abort>
    b543:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b549:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b550 <sequential_size>:
    b550:	55                   	push   %ebp
    b551:	89 e5                	mov    %esp,%ebp
    b553:	57                   	push   %edi
    b554:	56                   	push   %esi
    b555:	53                   	push   %ebx
    b556:	83 ec 3c             	sub    $0x3c,%esp
    b559:	8b 5d 08             	mov    0x8(%ebp),%ebx
    b55c:	8b 4b 10             	mov    0x10(%ebx),%ecx
    b55f:	8b 01                	mov    (%ecx),%eax
    b561:	85 c0                	test   %eax,%eax
    b563:	0f 84 64 01 00 00    	je     b6cd <sequential_size+0x17d>
    b569:	8b 55 0c             	mov    0xc(%ebp),%edx
    b56c:	89 1c 24             	mov    %ebx,(%esp)
    b56f:	89 54 24 04          	mov    %edx,0x4(%esp)
    b573:	ff d0                	call   *%eax
    b575:	85 c0                	test   %eax,%eax
    b577:	74 7f                	je     b5f8 <sequential_size+0xa8>
    b579:	8b 43 18             	mov    0x18(%ebx),%eax
    b57c:	8b 53 1c             	mov    0x1c(%ebx),%edx
    b57f:	8b 4b 10             	mov    0x10(%ebx),%ecx
    b582:	8b 73 20             	mov    0x20(%ebx),%esi
    b585:	8b 7b 24             	mov    0x24(%ebx),%edi
    b588:	29 f0                	sub    %esi,%eax
    b58a:	19 fa                	sbb    %edi,%edx
    b58c:	89 45 e0             	mov    %eax,-0x20(%ebp)
    b58f:	8d 45 e0             	lea    -0x20(%ebp),%eax
    b592:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    b595:	89 44 24 08          	mov    %eax,0x8(%esp)
    b599:	8b 7b 14             	mov    0x14(%ebx),%edi
    b59c:	89 1c 24             	mov    %ebx,(%esp)
    b59f:	01 fe                	add    %edi,%esi
    b5a1:	89 74 24 04          	mov    %esi,0x4(%esp)
    b5a5:	ff 51 04             	call   *0x4(%ecx)
    b5a8:	85 c0                	test   %eax,%eax
    b5aa:	75 4c                	jne    b5f8 <sequential_size+0xa8>
    b5ac:	8b 75 e0             	mov    -0x20(%ebp),%esi
    b5af:	8b 7d e4             	mov    -0x1c(%ebp),%edi
    b5b2:	03 73 20             	add    0x20(%ebx),%esi
    b5b5:	8b 53 1c             	mov    0x1c(%ebx),%edx
    b5b8:	13 7b 24             	adc    0x24(%ebx),%edi
    b5bb:	8b 43 18             	mov    0x18(%ebx),%eax
    b5be:	31 fa                	xor    %edi,%edx
    b5c0:	31 f0                	xor    %esi,%eax
    b5c2:	89 73 20             	mov    %esi,0x20(%ebx)
    b5c5:	89 7b 24             	mov    %edi,0x24(%ebx)
    b5c8:	09 c2                	or     %eax,%edx
    b5ca:	75 1f                	jne    b5eb <sequential_size+0x9b>
    b5cc:	89 75 d0             	mov    %esi,-0x30(%ebp)
    b5cf:	89 7d d4             	mov    %edi,-0x2c(%ebp)
    b5d2:	89 f0                	mov    %esi,%eax
    b5d4:	89 fa                	mov    %edi,%edx
    b5d6:	0f a4 f7 01          	shld   $0x1,%esi,%edi
    b5da:	01 f6                	add    %esi,%esi
    b5dc:	39 d7                	cmp    %edx,%edi
    b5de:	77 28                	ja     b608 <sequential_size+0xb8>
    b5e0:	0f 83 da 00 00 00    	jae    b6c0 <sequential_size+0x170>
    b5e6:	8b 43 14             	mov    0x14(%ebx),%eax
    b5e9:	eb 68                	jmp    b653 <sequential_size+0x103>
    b5eb:	8b 55 0c             	mov    0xc(%ebp),%edx
    b5ee:	31 c0                	xor    %eax,%eax
    b5f0:	89 32                	mov    %esi,(%edx)
    b5f2:	89 7a 04             	mov    %edi,0x4(%edx)
    b5f5:	8d 76 00             	lea    0x0(%esi),%esi
    b5f8:	83 c4 3c             	add    $0x3c,%esp
    b5fb:	5b                   	pop    %ebx
    b5fc:	5e                   	pop    %esi
    b5fd:	5f                   	pop    %edi
    b5fe:	5d                   	pop    %ebp
    b5ff:	c3                   	ret    
    b600:	39 c6                	cmp    %eax,%esi
    b602:	76 23                	jbe    b627 <sequential_size+0xd7>
    b604:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b608:	0f a4 c2 01          	shld   $0x1,%eax,%edx
    b60c:	01 c0                	add    %eax,%eax
    b60e:	83 fa 00             	cmp    $0x0,%edx
    b611:	77 0e                	ja     b621 <sequential_size+0xd1>
    b613:	3d 00 10 00 00       	cmp    $0x1000,%eax
    b618:	73 07                	jae    b621 <sequential_size+0xd1>
    b61a:	b8 00 10 00 00       	mov    $0x1000,%eax
    b61f:	31 d2                	xor    %edx,%edx
    b621:	39 d7                	cmp    %edx,%edi
    b623:	77 e3                	ja     b608 <sequential_size+0xb8>
    b625:	73 d9                	jae    b600 <sequential_size+0xb0>
    b627:	89 43 18             	mov    %eax,0x18(%ebx)
    b62a:	89 53 1c             	mov    %edx,0x1c(%ebx)
    b62d:	89 44 24 04          	mov    %eax,0x4(%esp)
    b631:	8b 43 14             	mov    0x14(%ebx),%eax
    b634:	89 04 24             	mov    %eax,(%esp)
    b637:	e8 f4 4d 01 00       	call   20430 <realloc>
    b63c:	85 c0                	test   %eax,%eax
    b63e:	0f 84 94 00 00 00    	je     b6d8 <sequential_size+0x188>
    b644:	8b 53 20             	mov    0x20(%ebx),%edx
    b647:	8b 4b 24             	mov    0x24(%ebx),%ecx
    b64a:	89 43 14             	mov    %eax,0x14(%ebx)
    b64d:	89 55 d0             	mov    %edx,-0x30(%ebp)
    b650:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    b653:	2b 75 d0             	sub    -0x30(%ebp),%esi
    b656:	8d 4d e0             	lea    -0x20(%ebp),%ecx
    b659:	1b 7d d4             	sbb    -0x2c(%ebp),%edi
    b65c:	8b 53 10             	mov    0x10(%ebx),%edx
    b65f:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    b663:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    b666:	01 c8                	add    %ecx,%eax
    b668:	89 75 e0             	mov    %esi,-0x20(%ebp)
    b66b:	89 7d e4             	mov    %edi,-0x1c(%ebp)
    b66e:	89 44 24 04          	mov    %eax,0x4(%esp)
    b672:	89 1c 24             	mov    %ebx,(%esp)
    b675:	ff 52 04             	call   *0x4(%edx)
    b678:	85 c0                	test   %eax,%eax
    b67a:	0f 85 78 ff ff ff    	jne    b5f8 <sequential_size+0xa8>
    b680:	8b 75 e0             	mov    -0x20(%ebp),%esi
    b683:	8b 43 18             	mov    0x18(%ebx),%eax
    b686:	03 73 20             	add    0x20(%ebx),%esi
    b689:	8b 53 1c             	mov    0x1c(%ebx),%edx
    b68c:	8b 7d e4             	mov    -0x1c(%ebp),%edi
    b68f:	89 45 d0             	mov    %eax,-0x30(%ebp)
    b692:	13 7b 24             	adc    0x24(%ebx),%edi
    b695:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    b698:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    b69b:	8b 45 d0             	mov    -0x30(%ebp),%eax
    b69e:	31 fa                	xor    %edi,%edx
    b6a0:	31 f0                	xor    %esi,%eax
    b6a2:	89 73 20             	mov    %esi,0x20(%ebx)
    b6a5:	89 7b 24             	mov    %edi,0x24(%ebx)
    b6a8:	09 c2                	or     %eax,%edx
    b6aa:	0f 85 3b ff ff ff    	jne    b5eb <sequential_size+0x9b>
    b6b0:	8b 45 d0             	mov    -0x30(%ebp),%eax
    b6b3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    b6b6:	89 c6                	mov    %eax,%esi
    b6b8:	89 d7                	mov    %edx,%edi
    b6ba:	e9 17 ff ff ff       	jmp    b5d6 <sequential_size+0x86>
    b6bf:	90                   	nop
    b6c0:	39 c6                	cmp    %eax,%esi
    b6c2:	0f 87 40 ff ff ff    	ja     b608 <sequential_size+0xb8>
    b6c8:	e9 19 ff ff ff       	jmp    b5e6 <sequential_size+0x96>
    b6cd:	8b 43 18             	mov    0x18(%ebx),%eax
    b6d0:	8b 53 1c             	mov    0x1c(%ebx),%edx
    b6d3:	e9 aa fe ff ff       	jmp    b582 <sequential_size+0x32>
    b6d8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b6dd:	e9 16 ff ff ff       	jmp    b5f8 <sequential_size+0xa8>
    b6e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    b6e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b6f0 <bithenge_init_random_access_blob>:
    b6f0:	55                   	push   %ebp
    b6f1:	89 e5                	mov    %esp,%ebp
    b6f3:	83 ec 18             	sub    $0x18,%esp
    b6f6:	8b 55 08             	mov    0x8(%ebp),%edx
    b6f9:	8b 45 0c             	mov    0xc(%ebp),%eax
    b6fc:	85 d2                	test   %edx,%edx
    b6fe:	0f 84 8f 00 00 00    	je     b793 <bithenge_init_random_access_blob+0xa3>
    b704:	85 c0                	test   %eax,%eax
    b706:	74 6f                	je     b777 <bithenge_init_random_access_blob+0x87>
    b708:	8b 48 0c             	mov    0xc(%eax),%ecx
    b70b:	85 c9                	test   %ecx,%ecx
    b70d:	74 4c                	je     b75b <bithenge_init_random_access_blob+0x6b>
    b70f:	8b 48 04             	mov    0x4(%eax),%ecx
    b712:	85 c9                	test   %ecx,%ecx
    b714:	74 22                	je     b738 <bithenge_init_random_access_blob+0x48>
    b716:	8b 08                	mov    (%eax),%ecx
    b718:	85 c9                	test   %ecx,%ecx
    b71a:	0f 84 8f 00 00 00    	je     b7af <bithenge_init_random_access_blob+0xbf>
    b720:	89 42 08             	mov    %eax,0x8(%edx)
    b723:	c7 02 05 00 00 00    	movl   $0x5,(%edx)
    b729:	c7 42 04 01 00 00 00 	movl   $0x1,0x4(%edx)
    b730:	31 c0                	xor    %eax,%eax
    b732:	c9                   	leave  
    b733:	c3                   	ret    
    b734:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b738:	8b 48 08             	mov    0x8(%eax),%ecx
    b73b:	85 c9                	test   %ecx,%ecx
    b73d:	75 d7                	jne    b716 <bithenge_init_random_access_blob+0x26>
    b73f:	c7 44 24 08 39 00 00 	movl   $0x39,0x8(%esp)
    b746:	00 
    b747:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    b74e:	00 
    b74f:	c7 04 24 0f d4 02 00 	movl   $0x2d40f,(%esp)
    b756:	e8 55 f1 01 00       	call   2a8b0 <assert_abort>
    b75b:	c7 44 24 08 38 00 00 	movl   $0x38,0x8(%esp)
    b762:	00 
    b763:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    b76a:	00 
    b76b:	c7 04 24 20 d1 02 00 	movl   $0x2d120,(%esp)
    b772:	e8 39 f1 01 00       	call   2a8b0 <assert_abort>
    b777:	c7 44 24 08 37 00 00 	movl   $0x37,0x8(%esp)
    b77e:	00 
    b77f:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    b786:	00 
    b787:	c7 04 24 bf cc 02 00 	movl   $0x2ccbf,(%esp)
    b78e:	e8 1d f1 01 00       	call   2a8b0 <assert_abort>
    b793:	c7 44 24 08 36 00 00 	movl   $0x36,0x8(%esp)
    b79a:	00 
    b79b:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    b7a2:	00 
    b7a3:	c7 04 24 0a d4 02 00 	movl   $0x2d40a,(%esp)
    b7aa:	e8 01 f1 01 00       	call   2a8b0 <assert_abort>
    b7af:	c7 44 24 08 3a 00 00 	movl   $0x3a,0x8(%esp)
    b7b6:	00 
    b7b7:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    b7be:	00 
    b7bf:	c7 04 24 2b d4 02 00 	movl   $0x2d42b,(%esp)
    b7c6:	e8 e5 f0 01 00       	call   2a8b0 <assert_abort>
    b7cb:	90                   	nop
    b7cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000b7d0 <bithenge_init_sequential_blob>:
    b7d0:	55                   	push   %ebp
    b7d1:	89 e5                	mov    %esp,%ebp
    b7d3:	83 ec 18             	sub    $0x18,%esp
    b7d6:	8b 45 08             	mov    0x8(%ebp),%eax
    b7d9:	8b 55 0c             	mov    0xc(%ebp),%edx
    b7dc:	85 c0                	test   %eax,%eax
    b7de:	74 54                	je     b834 <bithenge_init_sequential_blob+0x64>
    b7e0:	85 d2                	test   %edx,%edx
    b7e2:	0f 84 a0 00 00 00    	je     b888 <bithenge_init_sequential_blob+0xb8>
    b7e8:	8b 4a 08             	mov    0x8(%edx),%ecx
    b7eb:	85 c9                	test   %ecx,%ecx
    b7ed:	74 7d                	je     b86c <bithenge_init_sequential_blob+0x9c>
    b7ef:	8b 4a 04             	mov    0x4(%edx),%ecx
    b7f2:	85 c9                	test   %ecx,%ecx
    b7f4:	74 5a                	je     b850 <bithenge_init_sequential_blob+0x80>
    b7f6:	c7 00 05 00 00 00    	movl   $0x5,(%eax)
    b7fc:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    b803:	c7 40 08 70 d4 02 00 	movl   $0x2d470,0x8(%eax)
    b80a:	89 50 10             	mov    %edx,0x10(%eax)
    b80d:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
    b814:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
    b81b:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
    b822:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%eax)
    b829:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
    b830:	31 c0                	xor    %eax,%eax
    b832:	c9                   	leave  
    b833:	c3                   	ret    
    b834:	c7 44 24 08 a3 00 00 	movl   $0xa3,0x8(%esp)
    b83b:	00 
    b83c:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    b843:	00 
    b844:	c7 04 24 0a d4 02 00 	movl   $0x2d40a,(%esp)
    b84b:	e8 60 f0 01 00       	call   2a8b0 <assert_abort>
    b850:	c7 44 24 08 a6 00 00 	movl   $0xa6,0x8(%esp)
    b857:	00 
    b858:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    b85f:	00 
    b860:	c7 04 24 35 d4 02 00 	movl   $0x2d435,(%esp)
    b867:	e8 44 f0 01 00       	call   2a8b0 <assert_abort>
    b86c:	c7 44 24 08 a5 00 00 	movl   $0xa5,0x8(%esp)
    b873:	00 
    b874:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    b87b:	00 
    b87c:	c7 04 24 20 d1 02 00 	movl   $0x2d120,(%esp)
    b883:	e8 28 f0 01 00       	call   2a8b0 <assert_abort>
    b888:	c7 44 24 08 a4 00 00 	movl   $0xa4,0x8(%esp)
    b88f:	00 
    b890:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    b897:	00 
    b898:	c7 04 24 bf cc 02 00 	movl   $0x2ccbf,(%esp)
    b89f:	e8 0c f0 01 00       	call   2a8b0 <assert_abort>
    b8a4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    b8aa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000b8b0 <bithenge_new_blob_from_buffer>:
    b8b0:	55                   	push   %ebp
    b8b1:	89 e5                	mov    %esp,%ebp
    b8b3:	56                   	push   %esi
    b8b4:	53                   	push   %ebx
    b8b5:	83 ec 10             	sub    $0x10,%esp
    b8b8:	8b 75 10             	mov    0x10(%ebp),%esi
    b8bb:	8a 5d 14             	mov    0x14(%ebp),%bl
    b8be:	85 f6                	test   %esi,%esi
    b8c0:	75 6b                	jne    b92d <bithenge_new_blob_from_buffer+0x7d>
    b8c2:	c7 04 24 1c 00 00 00 	movl   $0x1c,(%esp)
    b8c9:	e8 02 48 01 00       	call   200d0 <malloc>
    b8ce:	85 c0                	test   %eax,%eax
    b8d0:	74 2e                	je     b900 <bithenge_new_blob_from_buffer+0x50>
    b8d2:	8b 55 0c             	mov    0xc(%ebp),%edx
    b8d5:	c7 00 05 00 00 00    	movl   $0x5,(%eax)
    b8db:	89 50 10             	mov    %edx,0x10(%eax)
    b8de:	8b 55 08             	mov    0x8(%ebp),%edx
    b8e1:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    b8e8:	c7 40 08 80 d4 02 00 	movl   $0x2d480,0x8(%eax)
    b8ef:	89 70 14             	mov    %esi,0x14(%eax)
    b8f2:	88 58 18             	mov    %bl,0x18(%eax)
    b8f5:	89 02                	mov    %eax,(%edx)
    b8f7:	83 c4 10             	add    $0x10,%esp
    b8fa:	31 c0                	xor    %eax,%eax
    b8fc:	5b                   	pop    %ebx
    b8fd:	5e                   	pop    %esi
    b8fe:	5d                   	pop    %ebp
    b8ff:	c3                   	ret    
    b900:	84 db                	test   %bl,%bl
    b902:	75 1c                	jne    b920 <bithenge_new_blob_from_buffer+0x70>
    b904:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    b90b:	e8 d0 48 01 00       	call   201e0 <free>
    b910:	83 c4 10             	add    $0x10,%esp
    b913:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b918:	5b                   	pop    %ebx
    b919:	5e                   	pop    %esi
    b91a:	5d                   	pop    %ebp
    b91b:	c3                   	ret    
    b91c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    b920:	8b 45 0c             	mov    0xc(%ebp),%eax
    b923:	89 04 24             	mov    %eax,(%esp)
    b926:	e8 b5 48 01 00       	call   201e0 <free>
    b92b:	eb d7                	jmp    b904 <bithenge_new_blob_from_buffer+0x54>
    b92d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
    b931:	75 8f                	jne    b8c2 <bithenge_new_blob_from_buffer+0x12>
    b933:	c7 44 24 08 f6 00 00 	movl   $0xf6,0x8(%esp)
    b93a:	00 
    b93b:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    b942:	00 
    b943:	c7 04 24 3f d4 02 00 	movl   $0x2d43f,(%esp)
    b94a:	e8 61 ef 01 00       	call   2a8b0 <assert_abort>
    b94f:	90                   	nop

0000b950 <bithenge_new_blob_from_data>:
    b950:	55                   	push   %ebp
    b951:	89 e5                	mov    %esp,%ebp
    b953:	56                   	push   %esi
    b954:	53                   	push   %ebx
    b955:	83 ec 10             	sub    $0x10,%esp
    b958:	8b 5d 10             	mov    0x10(%ebp),%ebx
    b95b:	89 1c 24             	mov    %ebx,(%esp)
    b95e:	e8 6d 47 01 00       	call   200d0 <malloc>
    b963:	89 c6                	mov    %eax,%esi
    b965:	85 c0                	test   %eax,%eax
    b967:	74 37                	je     b9a0 <bithenge_new_blob_from_data+0x50>
    b969:	8b 45 0c             	mov    0xc(%ebp),%eax
    b96c:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    b970:	89 44 24 04          	mov    %eax,0x4(%esp)
    b974:	89 34 24             	mov    %esi,(%esp)
    b977:	e8 64 78 00 00       	call   131e0 <memcpy>
    b97c:	8b 45 08             	mov    0x8(%ebp),%eax
    b97f:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
    b986:	00 
    b987:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    b98b:	89 74 24 04          	mov    %esi,0x4(%esp)
    b98f:	89 04 24             	mov    %eax,(%esp)
    b992:	e8 19 ff ff ff       	call   b8b0 <bithenge_new_blob_from_buffer>
    b997:	83 c4 10             	add    $0x10,%esp
    b99a:	5b                   	pop    %ebx
    b99b:	5e                   	pop    %esi
    b99c:	5d                   	pop    %ebp
    b99d:	c3                   	ret    
    b99e:	66 90                	xchg   %ax,%ax
    b9a0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    b9a5:	eb f0                	jmp    b997 <bithenge_new_blob_from_data+0x47>
    b9a7:	89 f6                	mov    %esi,%esi
    b9a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000b9b0 <bithenge_new_offset_blob>:
    b9b0:	55                   	push   %ebp
    b9b1:	89 e5                	mov    %esp,%ebp
    b9b3:	83 ec 28             	sub    $0x28,%esp
    b9b6:	8b 45 10             	mov    0x10(%ebp),%eax
    b9b9:	8b 55 14             	mov    0x14(%ebp),%edx
    b9bc:	89 04 24             	mov    %eax,(%esp)
    b9bf:	89 54 24 04          	mov    %edx,0x4(%esp)
    b9c3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
    b9ca:	00 
    b9cb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    b9d2:	00 
    b9d3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    b9da:	00 
    b9db:	8b 55 0c             	mov    0xc(%ebp),%edx
    b9de:	8b 45 08             	mov    0x8(%ebp),%eax
    b9e1:	e8 5a f9 ff ff       	call   b340 <new_subblob>
    b9e6:	c9                   	leave  
    b9e7:	c3                   	ret    
    b9e8:	90                   	nop
    b9e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000b9f0 <bithenge_new_subblob>:
    b9f0:	55                   	push   %ebp
    b9f1:	89 e5                	mov    %esp,%ebp
    b9f3:	53                   	push   %ebx
    b9f4:	8b 4d 10             	mov    0x10(%ebp),%ecx
    b9f7:	8b 5d 14             	mov    0x14(%ebp),%ebx
    b9fa:	8b 45 08             	mov    0x8(%ebp),%eax
    b9fd:	8b 55 0c             	mov    0xc(%ebp),%edx
    ba00:	89 4d 08             	mov    %ecx,0x8(%ebp)
    ba03:	89 5d 0c             	mov    %ebx,0xc(%ebp)
    ba06:	8b 4d 18             	mov    0x18(%ebp),%ecx
    ba09:	8b 5d 1c             	mov    0x1c(%ebp),%ebx
    ba0c:	89 5d 14             	mov    %ebx,0x14(%ebp)
    ba0f:	89 4d 10             	mov    %ecx,0x10(%ebp)
    ba12:	c7 45 18 01 00 00 00 	movl   $0x1,0x18(%ebp)
    ba19:	5b                   	pop    %ebx
    ba1a:	5d                   	pop    %ebp
    ba1b:	e9 20 f9 ff ff       	jmp    b340 <new_subblob>

0000ba20 <bithenge_blob_equal>:
    ba20:	55                   	push   %ebp
    ba21:	89 e5                	mov    %esp,%ebp
    ba23:	57                   	push   %edi
    ba24:	56                   	push   %esi
    ba25:	53                   	push   %ebx
    ba26:	81 ec 4c 20 00 00    	sub    $0x204c,%esp
    ba2c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    ba2f:	85 db                	test   %ebx,%ebx
    ba31:	0f 84 b3 01 00 00    	je     bbea <bithenge_blob_equal+0x1ca>
    ba37:	8b 55 0c             	mov    0xc(%ebp),%edx
    ba3a:	8b 42 08             	mov    0x8(%edx),%eax
    ba3d:	85 c0                	test   %eax,%eax
    ba3f:	0f 84 f9 01 00 00    	je     bc3e <bithenge_blob_equal+0x21e>
    ba45:	8b 4d 10             	mov    0x10(%ebp),%ecx
    ba48:	85 c9                	test   %ecx,%ecx
    ba4a:	0f 84 d2 01 00 00    	je     bc22 <bithenge_blob_equal+0x202>
    ba50:	8b 55 10             	mov    0x10(%ebp),%edx
    ba53:	8b 52 08             	mov    0x8(%edx),%edx
    ba56:	85 d2                	test   %edx,%edx
    ba58:	0f 84 a8 01 00 00    	je     bc06 <bithenge_blob_equal+0x1e6>
    ba5e:	c7 85 d8 df ff ff 00 	movl   $0x1000,-0x2028(%ebp)
    ba65:	10 00 00 
    ba68:	c7 85 dc df ff ff 00 	movl   $0x0,-0x2024(%ebp)
    ba6f:	00 00 00 
    ba72:	c7 85 e0 df ff ff 00 	movl   $0x1000,-0x2020(%ebp)
    ba79:	10 00 00 
    ba7c:	c7 85 e4 df ff ff 00 	movl   $0x0,-0x201c(%ebp)
    ba83:	00 00 00 
    ba86:	31 f6                	xor    %esi,%esi
    ba88:	31 ff                	xor    %edi,%edi
    ba8a:	8b 40 04             	mov    0x4(%eax),%eax
    ba8d:	85 c0                	test   %eax,%eax
    ba8f:	0f 84 43 01 00 00    	je     bbd8 <bithenge_blob_equal+0x1b8>
    ba95:	8d 95 d8 df ff ff    	lea    -0x2028(%ebp),%edx
    ba9b:	89 74 24 04          	mov    %esi,0x4(%esp)
    ba9f:	89 54 24 10          	mov    %edx,0x10(%esp)
    baa3:	8d 95 e8 df ff ff    	lea    -0x2018(%ebp),%edx
    baa9:	89 54 24 0c          	mov    %edx,0xc(%esp)
    baad:	8b 55 0c             	mov    0xc(%ebp),%edx
    bab0:	89 7c 24 08          	mov    %edi,0x8(%esp)
    bab4:	89 14 24             	mov    %edx,(%esp)
    bab7:	ff d0                	call   *%eax
    bab9:	89 c1                	mov    %eax,%ecx
    babb:	85 c0                	test   %eax,%eax
    babd:	0f 85 eb 00 00 00    	jne    bbae <bithenge_blob_equal+0x18e>
    bac3:	8b 55 10             	mov    0x10(%ebp),%edx
    bac6:	8b 42 08             	mov    0x8(%edx),%eax
    bac9:	85 c0                	test   %eax,%eax
    bacb:	0f 84 b8 00 00 00    	je     bb89 <bithenge_blob_equal+0x169>
    bad1:	8b 40 04             	mov    0x4(%eax),%eax
    bad4:	85 c0                	test   %eax,%eax
    bad6:	0f 84 fc 00 00 00    	je     bbd8 <bithenge_blob_equal+0x1b8>
    badc:	8d 95 e0 df ff ff    	lea    -0x2020(%ebp),%edx
    bae2:	8d 9d e8 ef ff ff    	lea    -0x1018(%ebp),%ebx
    bae8:	89 54 24 10          	mov    %edx,0x10(%esp)
    baec:	8b 55 10             	mov    0x10(%ebp),%edx
    baef:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    baf3:	89 74 24 04          	mov    %esi,0x4(%esp)
    baf7:	89 7c 24 08          	mov    %edi,0x8(%esp)
    bafb:	89 14 24             	mov    %edx,(%esp)
    bafe:	ff d0                	call   *%eax
    bb00:	89 c1                	mov    %eax,%ecx
    bb02:	85 c0                	test   %eax,%eax
    bb04:	0f 85 a4 00 00 00    	jne    bbae <bithenge_blob_equal+0x18e>
    bb0a:	8b 85 d8 df ff ff    	mov    -0x2028(%ebp),%eax
    bb10:	8b 95 e4 df ff ff    	mov    -0x201c(%ebp),%edx
    bb16:	89 85 cc df ff ff    	mov    %eax,-0x2034(%ebp)
    bb1c:	8b 85 dc df ff ff    	mov    -0x2024(%ebp),%eax
    bb22:	31 d0                	xor    %edx,%eax
    bb24:	8b 95 cc df ff ff    	mov    -0x2034(%ebp),%edx
    bb2a:	33 95 e0 df ff ff    	xor    -0x2020(%ebp),%edx
    bb30:	09 d0                	or     %edx,%eax
    bb32:	0f 85 88 00 00 00    	jne    bbc0 <bithenge_blob_equal+0x1a0>
    bb38:	8b 95 cc df ff ff    	mov    -0x2034(%ebp),%edx
    bb3e:	8d 85 e8 df ff ff    	lea    -0x2018(%ebp),%eax
    bb44:	89 54 24 08          	mov    %edx,0x8(%esp)
    bb48:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    bb4c:	89 04 24             	mov    %eax,(%esp)
    bb4f:	89 8d d0 df ff ff    	mov    %ecx,-0x2030(%ebp)
    bb55:	e8 a6 7b 00 00       	call   13700 <bcmp>
    bb5a:	8b 8d d0 df ff ff    	mov    -0x2030(%ebp),%ecx
    bb60:	85 c0                	test   %eax,%eax
    bb62:	75 5c                	jne    bbc0 <bithenge_blob_equal+0x1a0>
    bb64:	8b 85 d8 df ff ff    	mov    -0x2028(%ebp),%eax
    bb6a:	8b 95 dc df ff ff    	mov    -0x2024(%ebp),%edx
    bb70:	01 c6                	add    %eax,%esi
    bb72:	11 d7                	adc    %edx,%edi
    bb74:	80 f4 10             	xor    $0x10,%ah
    bb77:	09 d0                	or     %edx,%eax
    bb79:	75 2d                	jne    bba8 <bithenge_blob_equal+0x188>
    bb7b:	8b 55 0c             	mov    0xc(%ebp),%edx
    bb7e:	8b 42 08             	mov    0x8(%edx),%eax
    bb81:	85 c0                	test   %eax,%eax
    bb83:	0f 85 01 ff ff ff    	jne    ba8a <bithenge_blob_equal+0x6a>
    bb89:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    bb90:	00 
    bb91:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    bb98:	00 
    bb99:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    bba0:	e8 0b ed 01 00       	call   2a8b0 <assert_abort>
    bba5:	8d 76 00             	lea    0x0(%esi),%esi
    bba8:	8b 45 08             	mov    0x8(%ebp),%eax
    bbab:	c6 00 01             	movb   $0x1,(%eax)
    bbae:	81 c4 4c 20 00 00    	add    $0x204c,%esp
    bbb4:	89 c8                	mov    %ecx,%eax
    bbb6:	5b                   	pop    %ebx
    bbb7:	5e                   	pop    %esi
    bbb8:	5f                   	pop    %edi
    bbb9:	5d                   	pop    %ebp
    bbba:	c3                   	ret    
    bbbb:	90                   	nop
    bbbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    bbc0:	8b 45 08             	mov    0x8(%ebp),%eax
    bbc3:	c6 00 00             	movb   $0x0,(%eax)
    bbc6:	81 c4 4c 20 00 00    	add    $0x204c,%esp
    bbcc:	89 c8                	mov    %ecx,%eax
    bbce:	5b                   	pop    %ebx
    bbcf:	5e                   	pop    %esi
    bbd0:	5f                   	pop    %edi
    bbd1:	5d                   	pop    %ebp
    bbd2:	c3                   	ret    
    bbd3:	90                   	nop
    bbd4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    bbd8:	81 c4 4c 20 00 00    	add    $0x204c,%esp
    bbde:	b9 f2 ff ff ff       	mov    $0xfffffff2,%ecx
    bbe3:	89 c8                	mov    %ecx,%eax
    bbe5:	5b                   	pop    %ebx
    bbe6:	5e                   	pop    %esi
    bbe7:	5f                   	pop    %edi
    bbe8:	5d                   	pop    %ebp
    bbe9:	c3                   	ret    
    bbea:	c7 44 24 08 d1 01 00 	movl   $0x1d1,0x8(%esp)
    bbf1:	00 
    bbf2:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    bbf9:	00 
    bbfa:	c7 04 24 81 e2 02 00 	movl   $0x2e281,(%esp)
    bc01:	e8 aa ec 01 00       	call   2a8b0 <assert_abort>
    bc06:	c7 44 24 08 d4 01 00 	movl   $0x1d4,0x8(%esp)
    bc0d:	00 
    bc0e:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    bc15:	00 
    bc16:	c7 04 24 5f d4 02 00 	movl   $0x2d45f,(%esp)
    bc1d:	e8 8e ec 01 00       	call   2a8b0 <assert_abort>
    bc22:	c7 44 24 08 d3 01 00 	movl   $0x1d3,0x8(%esp)
    bc29:	00 
    bc2a:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    bc31:	00 
    bc32:	c7 04 24 7c e7 02 00 	movl   $0x2e77c,(%esp)
    bc39:	e8 72 ec 01 00       	call   2a8b0 <assert_abort>
    bc3e:	c7 44 24 08 d2 01 00 	movl   $0x1d2,0x8(%esp)
    bc45:	00 
    bc46:	c7 44 24 04 f8 d3 02 	movl   $0x2d3f8,0x4(%esp)
    bc4d:	00 
    bc4e:	c7 04 24 4e d4 02 00 	movl   $0x2d44e,(%esp)
    bc55:	e8 56 ec 01 00       	call   2a8b0 <assert_abort>

0000bc5a <bithenge_blob_read.part.1>:
    bc5a:	55                   	push   %ebp
    bc5b:	89 e5                	mov    %esp,%ebp
    bc5d:	83 ec 18             	sub    $0x18,%esp
    bc60:	c7 44 24 08 96 00 00 	movl   $0x96,0x8(%esp)
    bc67:	00 
    bc68:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    bc6f:	00 
    bc70:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    bc77:	e8 34 ec 01 00       	call   2a8b0 <assert_abort>
    bc7c:	66 90                	xchg   %ax,%ax
    bc7e:	66 90                	xchg   %ax,%ax

0000bc80 <partial_transform_apply>:
    bc80:	55                   	push   %ebp
    bc81:	89 e5                	mov    %esp,%ebp
    bc83:	83 ec 28             	sub    $0x28,%esp
    bc86:	8b 45 10             	mov    0x10(%ebp),%eax
    bc89:	83 38 05             	cmpl   $0x5,(%eax)
    bc8c:	75 2a                	jne    bcb8 <partial_transform_apply+0x38>
    bc8e:	89 44 24 08          	mov    %eax,0x8(%esp)
    bc92:	8b 45 0c             	mov    0xc(%ebp),%eax
    bc95:	89 44 24 04          	mov    %eax,0x4(%esp)
    bc99:	8b 55 14             	mov    0x14(%ebp),%edx
    bc9c:	8b 45 08             	mov    0x8(%ebp),%eax
    bc9f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
    bca6:	00 
    bca7:	89 54 24 0c          	mov    %edx,0xc(%esp)
    bcab:	8b 40 0c             	mov    0xc(%eax),%eax
    bcae:	89 04 24             	mov    %eax,(%esp)
    bcb1:	e8 da da ff ff       	call   9790 <bithenge_transform_prefix_apply>
    bcb6:	c9                   	leave  
    bcb7:	c3                   	ret    
    bcb8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    bcbd:	c9                   	leave  
    bcbe:	c3                   	ret    
    bcbf:	90                   	nop

0000bcc0 <compose_prefix_length>:
    bcc0:	55                   	push   %ebp
    bcc1:	89 e5                	mov    %esp,%ebp
    bcc3:	8b 45 08             	mov    0x8(%ebp),%eax
    bcc6:	8b 50 10             	mov    0x10(%eax),%edx
    bcc9:	8b 40 0c             	mov    0xc(%eax),%eax
    bccc:	8b 44 90 fc          	mov    -0x4(%eax,%edx,4),%eax
    bcd0:	89 45 08             	mov    %eax,0x8(%ebp)
    bcd3:	5d                   	pop    %ebp
    bcd4:	e9 37 d9 ff ff       	jmp    9610 <bithenge_transform_prefix_length>
    bcd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000bce0 <compose_apply>:
    bce0:	55                   	push   %ebp
    bce1:	89 e5                	mov    %esp,%ebp
    bce3:	57                   	push   %edi
    bce4:	56                   	push   %esi
    bce5:	53                   	push   %ebx
    bce6:	83 ec 3c             	sub    $0x3c,%esp
    bce9:	8b 5d 10             	mov    0x10(%ebp),%ebx
    bcec:	8b 75 08             	mov    0x8(%ebp),%esi
    bcef:	85 db                	test   %ebx,%ebx
    bcf1:	74 7c                	je     bd6f <compose_apply+0x8f>
    bcf3:	8b 43 04             	mov    0x4(%ebx),%eax
    bcf6:	40                   	inc    %eax
    bcf7:	89 43 04             	mov    %eax,0x4(%ebx)
    bcfa:	8b 46 10             	mov    0x10(%esi),%eax
    bcfd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    bd00:	85 c0                	test   %eax,%eax
    bd02:	74 5c                	je     bd60 <compose_apply+0x80>
    bd04:	8d 3c 85 fc ff ff ff 	lea    -0x4(,%eax,4),%edi
    bd0b:	89 f0                	mov    %esi,%eax
    bd0d:	89 fe                	mov    %edi,%esi
    bd0f:	89 c7                	mov    %eax,%edi
    bd11:	eb 10                	jmp    bd23 <compose_apply+0x43>
    bd13:	90                   	nop
    bd14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    bd18:	83 ee 04             	sub    $0x4,%esi
    bd1b:	ff 4d d4             	decl   -0x2c(%ebp)
    bd1e:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    bd21:	74 3d                	je     bd60 <compose_apply+0x80>
    bd23:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    bd26:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    bd2a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    bd2e:	8b 45 0c             	mov    0xc(%ebp),%eax
    bd31:	89 44 24 04          	mov    %eax,0x4(%esp)
    bd35:	8b 47 0c             	mov    0xc(%edi),%eax
    bd38:	8b 04 30             	mov    (%eax,%esi,1),%eax
    bd3b:	89 04 24             	mov    %eax,(%esp)
    bd3e:	e8 2d d8 ff ff       	call   9570 <bithenge_transform_apply>
    bd43:	89 1c 24             	mov    %ebx,(%esp)
    bd46:	89 45 d0             	mov    %eax,-0x30(%ebp)
    bd49:	e8 72 e5 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    bd4e:	8b 45 d0             	mov    -0x30(%ebp),%eax
    bd51:	85 c0                	test   %eax,%eax
    bd53:	74 c3                	je     bd18 <compose_apply+0x38>
    bd55:	83 c4 3c             	add    $0x3c,%esp
    bd58:	5b                   	pop    %ebx
    bd59:	5e                   	pop    %esi
    bd5a:	5f                   	pop    %edi
    bd5b:	5d                   	pop    %ebp
    bd5c:	c3                   	ret    
    bd5d:	8d 76 00             	lea    0x0(%esi),%esi
    bd60:	8b 45 14             	mov    0x14(%ebp),%eax
    bd63:	89 18                	mov    %ebx,(%eax)
    bd65:	83 c4 3c             	add    $0x3c,%esp
    bd68:	31 c0                	xor    %eax,%eax
    bd6a:	5b                   	pop    %ebx
    bd6b:	5e                   	pop    %esi
    bd6c:	5f                   	pop    %edi
    bd6d:	5d                   	pop    %ebp
    bd6e:	c3                   	ret    
    bd6f:	c7 44 24 08 70 00 00 	movl   $0x70,0x8(%esp)
    bd76:	00 
    bd77:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    bd7e:	00 
    bd7f:	c7 04 24 a0 d0 02 00 	movl   $0x2d0a0,(%esp)
    bd86:	e8 25 eb 01 00       	call   2a8b0 <assert_abort>
    bd8b:	90                   	nop
    bd8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000bd90 <if_transform_prefix_length>:
    bd90:	55                   	push   %ebp
    bd91:	89 e5                	mov    %esp,%ebp
    bd93:	57                   	push   %edi
    bd94:	56                   	push   %esi
    bd95:	53                   	push   %ebx
    bd96:	83 ec 2c             	sub    $0x2c,%esp
    bd99:	8b 75 08             	mov    0x8(%ebp),%esi
    bd9c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    bd9f:	8b 46 0c             	mov    0xc(%esi),%eax
    bda2:	85 c0                	test   %eax,%eax
    bda4:	74 71                	je     be17 <if_transform_prefix_length+0x87>
    bda6:	8b 10                	mov    (%eax),%edx
    bda8:	85 d2                	test   %edx,%edx
    bdaa:	0f 84 83 00 00 00    	je     be33 <if_transform_prefix_length+0xa3>
    bdb0:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    bdb3:	89 7c 24 04          	mov    %edi,0x4(%esp)
    bdb7:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    bdbb:	89 04 24             	mov    %eax,(%esp)
    bdbe:	ff 12                	call   *(%edx)
    bdc0:	85 c0                	test   %eax,%eax
    bdc2:	75 34                	jne    bdf8 <if_transform_prefix_length+0x68>
    bdc4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    bdc7:	83 38 02             	cmpl   $0x2,(%eax)
    bdca:	75 3c                	jne    be08 <if_transform_prefix_length+0x78>
    bdcc:	8a 58 08             	mov    0x8(%eax),%bl
    bdcf:	89 04 24             	mov    %eax,(%esp)
    bdd2:	e8 e9 e4 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    bdd7:	84 db                	test   %bl,%bl
    bdd9:	75 25                	jne    be00 <if_transform_prefix_length+0x70>
    bddb:	8b 56 14             	mov    0x14(%esi),%edx
    bdde:	8b 45 14             	mov    0x14(%ebp),%eax
    bde1:	89 7c 24 04          	mov    %edi,0x4(%esp)
    bde5:	89 44 24 0c          	mov    %eax,0xc(%esp)
    bde9:	8b 45 10             	mov    0x10(%ebp),%eax
    bdec:	89 44 24 08          	mov    %eax,0x8(%esp)
    bdf0:	89 14 24             	mov    %edx,(%esp)
    bdf3:	e8 18 d8 ff ff       	call   9610 <bithenge_transform_prefix_length>
    bdf8:	83 c4 2c             	add    $0x2c,%esp
    bdfb:	5b                   	pop    %ebx
    bdfc:	5e                   	pop    %esi
    bdfd:	5f                   	pop    %edi
    bdfe:	5d                   	pop    %ebp
    bdff:	c3                   	ret    
    be00:	8b 56 10             	mov    0x10(%esi),%edx
    be03:	eb d9                	jmp    bdde <if_transform_prefix_length+0x4e>
    be05:	8d 76 00             	lea    0x0(%esi),%esi
    be08:	89 04 24             	mov    %eax,(%esp)
    be0b:	e8 b0 e4 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    be10:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    be15:	eb e1                	jmp    bdf8 <if_transform_prefix_length+0x68>
    be17:	c7 44 24 08 5a 00 00 	movl   $0x5a,0x8(%esp)
    be1e:	00 
    be1f:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    be26:	00 
    be27:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    be2e:	e8 7d ea 01 00       	call   2a8b0 <assert_abort>
    be33:	c7 44 24 08 5b 00 00 	movl   $0x5b,0x8(%esp)
    be3a:	00 
    be3b:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    be42:	00 
    be43:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    be4a:	e8 61 ea 01 00       	call   2a8b0 <assert_abort>
    be4f:	90                   	nop

0000be50 <compose_destroy>:
    be50:	55                   	push   %ebp
    be51:	89 e5                	mov    %esp,%ebp
    be53:	57                   	push   %edi
    be54:	56                   	push   %esi
    be55:	53                   	push   %ebx
    be56:	83 ec 2c             	sub    $0x2c,%esp
    be59:	31 db                	xor    %ebx,%ebx
    be5b:	8b 7d 08             	mov    0x8(%ebp),%edi
    be5e:	8b 47 10             	mov    0x10(%edi),%eax
    be61:	8b 77 0c             	mov    0xc(%edi),%esi
    be64:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    be67:	85 c0                	test   %eax,%eax
    be69:	74 36                	je     bea1 <compose_destroy+0x51>
    be6b:	90                   	nop
    be6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    be70:	8b 04 9e             	mov    (%esi,%ebx,4),%eax
    be73:	85 c0                	test   %eax,%eax
    be75:	74 24                	je     be9b <compose_destroy+0x4b>
    be77:	8b 08                	mov    (%eax),%ecx
    be79:	85 c9                	test   %ecx,%ecx
    be7b:	74 3b                	je     beb8 <compose_destroy+0x68>
    be7d:	8b 50 04             	mov    0x4(%eax),%edx
    be80:	85 d2                	test   %edx,%edx
    be82:	74 39                	je     bebd <compose_destroy+0x6d>
    be84:	4a                   	dec    %edx
    be85:	89 50 04             	mov    %edx,0x4(%eax)
    be88:	85 d2                	test   %edx,%edx
    be8a:	75 0f                	jne    be9b <compose_destroy+0x4b>
    be8c:	89 04 24             	mov    %eax,(%esp)
    be8f:	ff 51 0c             	call   *0xc(%ecx)
    be92:	8b 47 10             	mov    0x10(%edi),%eax
    be95:	8b 77 0c             	mov    0xc(%edi),%esi
    be98:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    be9b:	43                   	inc    %ebx
    be9c:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx
    be9f:	72 cf                	jb     be70 <compose_destroy+0x20>
    bea1:	89 34 24             	mov    %esi,(%esp)
    bea4:	e8 37 43 01 00       	call   201e0 <free>
    bea9:	89 7d 08             	mov    %edi,0x8(%ebp)
    beac:	83 c4 2c             	add    $0x2c,%esp
    beaf:	5b                   	pop    %ebx
    beb0:	5e                   	pop    %esi
    beb1:	5f                   	pop    %edi
    beb2:	5d                   	pop    %ebp
    beb3:	e9 28 43 01 00       	jmp    201e0 <free>
    beb8:	e8 6b 05 00 00       	call   c428 <bithenge_transform_dec_ref.part.1>
    bebd:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    bec4:	00 
    bec5:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    becc:	00 
    becd:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    bed4:	e8 d7 e9 01 00       	call   2a8b0 <assert_abort>
    bed9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000bee0 <partial_transform_destroy>:
    bee0:	55                   	push   %ebp
    bee1:	89 e5                	mov    %esp,%ebp
    bee3:	53                   	push   %ebx
    bee4:	83 ec 14             	sub    $0x14,%esp
    bee7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    beea:	8b 43 0c             	mov    0xc(%ebx),%eax
    beed:	85 c0                	test   %eax,%eax
    beef:	74 1b                	je     bf0c <partial_transform_destroy+0x2c>
    bef1:	8b 08                	mov    (%eax),%ecx
    bef3:	85 c9                	test   %ecx,%ecx
    bef5:	74 3e                	je     bf35 <partial_transform_destroy+0x55>
    bef7:	8b 50 04             	mov    0x4(%eax),%edx
    befa:	85 d2                	test   %edx,%edx
    befc:	74 1b                	je     bf19 <partial_transform_destroy+0x39>
    befe:	4a                   	dec    %edx
    beff:	89 50 04             	mov    %edx,0x4(%eax)
    bf02:	85 d2                	test   %edx,%edx
    bf04:	75 06                	jne    bf0c <partial_transform_destroy+0x2c>
    bf06:	89 04 24             	mov    %eax,(%esp)
    bf09:	ff 51 0c             	call   *0xc(%ecx)
    bf0c:	89 5d 08             	mov    %ebx,0x8(%ebp)
    bf0f:	83 c4 14             	add    $0x14,%esp
    bf12:	5b                   	pop    %ebx
    bf13:	5d                   	pop    %ebp
    bf14:	e9 c7 42 01 00       	jmp    201e0 <free>
    bf19:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    bf20:	00 
    bf21:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    bf28:	00 
    bf29:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    bf30:	e8 7b e9 01 00       	call   2a8b0 <assert_abort>
    bf35:	e8 ee 04 00 00       	call   c428 <bithenge_transform_dec_ref.part.1>
    bf3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000bf40 <if_transform_destroy>:
    bf40:	55                   	push   %ebp
    bf41:	89 e5                	mov    %esp,%ebp
    bf43:	53                   	push   %ebx
    bf44:	83 ec 14             	sub    $0x14,%esp
    bf47:	8b 5d 08             	mov    0x8(%ebp),%ebx
    bf4a:	8b 43 0c             	mov    0xc(%ebx),%eax
    bf4d:	85 c0                	test   %eax,%eax
    bf4f:	74 23                	je     bf74 <if_transform_destroy+0x34>
    bf51:	8b 08                	mov    (%eax),%ecx
    bf53:	85 c9                	test   %ecx,%ecx
    bf55:	0f 84 a7 00 00 00    	je     c002 <if_transform_destroy+0xc2>
    bf5b:	8b 50 04             	mov    0x4(%eax),%edx
    bf5e:	85 d2                	test   %edx,%edx
    bf60:	0f 84 80 00 00 00    	je     bfe6 <if_transform_destroy+0xa6>
    bf66:	4a                   	dec    %edx
    bf67:	89 50 04             	mov    %edx,0x4(%eax)
    bf6a:	85 d2                	test   %edx,%edx
    bf6c:	75 06                	jne    bf74 <if_transform_destroy+0x34>
    bf6e:	89 04 24             	mov    %eax,(%esp)
    bf71:	ff 51 04             	call   *0x4(%ecx)
    bf74:	8b 43 10             	mov    0x10(%ebx),%eax
    bf77:	85 c0                	test   %eax,%eax
    bf79:	74 1b                	je     bf96 <if_transform_destroy+0x56>
    bf7b:	8b 08                	mov    (%eax),%ecx
    bf7d:	85 c9                	test   %ecx,%ecx
    bf7f:	74 60                	je     bfe1 <if_transform_destroy+0xa1>
    bf81:	8b 50 04             	mov    0x4(%eax),%edx
    bf84:	85 d2                	test   %edx,%edx
    bf86:	74 3d                	je     bfc5 <if_transform_destroy+0x85>
    bf88:	4a                   	dec    %edx
    bf89:	89 50 04             	mov    %edx,0x4(%eax)
    bf8c:	85 d2                	test   %edx,%edx
    bf8e:	75 06                	jne    bf96 <if_transform_destroy+0x56>
    bf90:	89 04 24             	mov    %eax,(%esp)
    bf93:	ff 51 0c             	call   *0xc(%ecx)
    bf96:	8b 43 14             	mov    0x14(%ebx),%eax
    bf99:	85 c0                	test   %eax,%eax
    bf9b:	74 1b                	je     bfb8 <if_transform_destroy+0x78>
    bf9d:	8b 08                	mov    (%eax),%ecx
    bf9f:	85 c9                	test   %ecx,%ecx
    bfa1:	74 3e                	je     bfe1 <if_transform_destroy+0xa1>
    bfa3:	8b 50 04             	mov    0x4(%eax),%edx
    bfa6:	85 d2                	test   %edx,%edx
    bfa8:	74 1b                	je     bfc5 <if_transform_destroy+0x85>
    bfaa:	4a                   	dec    %edx
    bfab:	89 50 04             	mov    %edx,0x4(%eax)
    bfae:	85 d2                	test   %edx,%edx
    bfb0:	75 06                	jne    bfb8 <if_transform_destroy+0x78>
    bfb2:	89 04 24             	mov    %eax,(%esp)
    bfb5:	ff 51 0c             	call   *0xc(%ecx)
    bfb8:	89 5d 08             	mov    %ebx,0x8(%ebp)
    bfbb:	83 c4 14             	add    $0x14,%esp
    bfbe:	5b                   	pop    %ebx
    bfbf:	5d                   	pop    %ebp
    bfc0:	e9 1b 42 01 00       	jmp    201e0 <free>
    bfc5:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    bfcc:	00 
    bfcd:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    bfd4:	00 
    bfd5:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    bfdc:	e8 cf e8 01 00       	call   2a8b0 <assert_abort>
    bfe1:	e8 42 04 00 00       	call   c428 <bithenge_transform_dec_ref.part.1>
    bfe6:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    bfed:	00 
    bfee:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    bff5:	00 
    bff6:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    bffd:	e8 ae e8 01 00       	call   2a8b0 <assert_abort>
    c002:	c7 44 24 08 4b 00 00 	movl   $0x4b,0x8(%esp)
    c009:	00 
    c00a:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    c011:	00 
    c012:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    c019:	e8 92 e8 01 00       	call   2a8b0 <assert_abort>
    c01e:	66 90                	xchg   %ax,%ax

0000c020 <if_transform_apply>:
    c020:	55                   	push   %ebp
    c021:	89 e5                	mov    %esp,%ebp
    c023:	57                   	push   %edi
    c024:	56                   	push   %esi
    c025:	53                   	push   %ebx
    c026:	83 ec 2c             	sub    $0x2c,%esp
    c029:	8b 75 08             	mov    0x8(%ebp),%esi
    c02c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    c02f:	8b 46 0c             	mov    0xc(%esi),%eax
    c032:	85 c0                	test   %eax,%eax
    c034:	74 71                	je     c0a7 <if_transform_apply+0x87>
    c036:	8b 10                	mov    (%eax),%edx
    c038:	85 d2                	test   %edx,%edx
    c03a:	0f 84 83 00 00 00    	je     c0c3 <if_transform_apply+0xa3>
    c040:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    c043:	89 7c 24 04          	mov    %edi,0x4(%esp)
    c047:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    c04b:	89 04 24             	mov    %eax,(%esp)
    c04e:	ff 12                	call   *(%edx)
    c050:	85 c0                	test   %eax,%eax
    c052:	75 34                	jne    c088 <if_transform_apply+0x68>
    c054:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c057:	83 38 02             	cmpl   $0x2,(%eax)
    c05a:	75 3c                	jne    c098 <if_transform_apply+0x78>
    c05c:	8a 58 08             	mov    0x8(%eax),%bl
    c05f:	89 04 24             	mov    %eax,(%esp)
    c062:	e8 59 e2 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    c067:	84 db                	test   %bl,%bl
    c069:	75 25                	jne    c090 <if_transform_apply+0x70>
    c06b:	8b 56 14             	mov    0x14(%esi),%edx
    c06e:	8b 45 14             	mov    0x14(%ebp),%eax
    c071:	89 7c 24 04          	mov    %edi,0x4(%esp)
    c075:	89 44 24 0c          	mov    %eax,0xc(%esp)
    c079:	8b 45 10             	mov    0x10(%ebp),%eax
    c07c:	89 44 24 08          	mov    %eax,0x8(%esp)
    c080:	89 14 24             	mov    %edx,(%esp)
    c083:	e8 e8 d4 ff ff       	call   9570 <bithenge_transform_apply>
    c088:	83 c4 2c             	add    $0x2c,%esp
    c08b:	5b                   	pop    %ebx
    c08c:	5e                   	pop    %esi
    c08d:	5f                   	pop    %edi
    c08e:	5d                   	pop    %ebp
    c08f:	c3                   	ret    
    c090:	8b 56 10             	mov    0x10(%esi),%edx
    c093:	eb d9                	jmp    c06e <if_transform_apply+0x4e>
    c095:	8d 76 00             	lea    0x0(%esi),%esi
    c098:	89 04 24             	mov    %eax,(%esp)
    c09b:	e8 20 e2 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    c0a0:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    c0a5:	eb e1                	jmp    c088 <if_transform_apply+0x68>
    c0a7:	c7 44 24 08 5a 00 00 	movl   $0x5a,0x8(%esp)
    c0ae:	00 
    c0af:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    c0b6:	00 
    c0b7:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    c0be:	e8 ed e7 01 00       	call   2a8b0 <assert_abort>
    c0c3:	c7 44 24 08 5b 00 00 	movl   $0x5b,0x8(%esp)
    c0ca:	00 
    c0cb:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    c0d2:	00 
    c0d3:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    c0da:	e8 d1 e7 01 00       	call   2a8b0 <assert_abort>
    c0df:	90                   	nop

0000c0e0 <bithenge_new_composed_transform>:
    c0e0:	55                   	push   %ebp
    c0e1:	89 e5                	mov    %esp,%ebp
    c0e3:	57                   	push   %edi
    c0e4:	56                   	push   %esi
    c0e5:	53                   	push   %ebx
    c0e6:	83 ec 2c             	sub    $0x2c,%esp
    c0e9:	8b 5d 10             	mov    0x10(%ebp),%ebx
    c0ec:	8b 75 0c             	mov    0xc(%ebp),%esi
    c0ef:	85 db                	test   %ebx,%ebx
    c0f1:	74 09                	je     c0fc <bithenge_new_composed_transform+0x1c>
    c0f3:	83 fb 01             	cmp    $0x1,%ebx
    c0f6:	0f 84 ad 00 00 00    	je     c1a9 <bithenge_new_composed_transform+0xc9>
    c0fc:	c7 04 24 14 00 00 00 	movl   $0x14,(%esp)
    c103:	e8 c8 3f 01 00       	call   200d0 <malloc>
    c108:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    c10b:	85 c0                	test   %eax,%eax
    c10d:	0f 84 8d 00 00 00    	je     c1a0 <bithenge_new_composed_transform+0xc0>
    c113:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    c11a:	00 
    c11b:	c7 44 24 04 a0 d4 02 	movl   $0x2d4a0,0x4(%esp)
    c122:	00 
    c123:	89 04 24             	mov    %eax,(%esp)
    c126:	e8 b5 d3 ff ff       	call   94e0 <bithenge_init_transform>
    c12b:	89 45 e0             	mov    %eax,-0x20(%ebp)
    c12e:	85 c0                	test   %eax,%eax
    c130:	74 4e                	je     c180 <bithenge_new_composed_transform+0xa0>
    c132:	31 ff                	xor    %edi,%edi
    c134:	85 db                	test   %ebx,%ebx
    c136:	74 27                	je     c15f <bithenge_new_composed_transform+0x7f>
    c138:	8b 04 be             	mov    (%esi,%edi,4),%eax
    c13b:	85 c0                	test   %eax,%eax
    c13d:	74 1b                	je     c15a <bithenge_new_composed_transform+0x7a>
    c13f:	8b 08                	mov    (%eax),%ecx
    c141:	85 c9                	test   %ecx,%ecx
    c143:	74 7c                	je     c1c1 <bithenge_new_composed_transform+0xe1>
    c145:	8b 50 04             	mov    0x4(%eax),%edx
    c148:	85 d2                	test   %edx,%edx
    c14a:	74 7a                	je     c1c6 <bithenge_new_composed_transform+0xe6>
    c14c:	4a                   	dec    %edx
    c14d:	89 50 04             	mov    %edx,0x4(%eax)
    c150:	85 d2                	test   %edx,%edx
    c152:	75 06                	jne    c15a <bithenge_new_composed_transform+0x7a>
    c154:	89 04 24             	mov    %eax,(%esp)
    c157:	ff 51 0c             	call   *0xc(%ecx)
    c15a:	47                   	inc    %edi
    c15b:	39 df                	cmp    %ebx,%edi
    c15d:	75 d9                	jne    c138 <bithenge_new_composed_transform+0x58>
    c15f:	89 34 24             	mov    %esi,(%esp)
    c162:	e8 79 40 01 00       	call   201e0 <free>
    c167:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c16a:	89 04 24             	mov    %eax,(%esp)
    c16d:	e8 6e 40 01 00       	call   201e0 <free>
    c172:	8b 45 e0             	mov    -0x20(%ebp),%eax
    c175:	83 c4 2c             	add    $0x2c,%esp
    c178:	5b                   	pop    %ebx
    c179:	5e                   	pop    %esi
    c17a:	5f                   	pop    %edi
    c17b:	5d                   	pop    %ebp
    c17c:	c3                   	ret    
    c17d:	8d 76 00             	lea    0x0(%esi),%esi
    c180:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c183:	8b 55 08             	mov    0x8(%ebp),%edx
    c186:	89 70 0c             	mov    %esi,0xc(%eax)
    c189:	89 58 10             	mov    %ebx,0x10(%eax)
    c18c:	89 02                	mov    %eax,(%edx)
    c18e:	8b 45 e0             	mov    -0x20(%ebp),%eax
    c191:	83 c4 2c             	add    $0x2c,%esp
    c194:	5b                   	pop    %ebx
    c195:	5e                   	pop    %esi
    c196:	5f                   	pop    %edi
    c197:	5d                   	pop    %ebp
    c198:	c3                   	ret    
    c199:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c1a0:	c7 45 e0 fe ff ff ff 	movl   $0xfffffffe,-0x20(%ebp)
    c1a7:	eb 89                	jmp    c132 <bithenge_new_composed_transform+0x52>
    c1a9:	8b 55 08             	mov    0x8(%ebp),%edx
    c1ac:	8b 06                	mov    (%esi),%eax
    c1ae:	89 02                	mov    %eax,(%edx)
    c1b0:	89 34 24             	mov    %esi,(%esp)
    c1b3:	e8 28 40 01 00       	call   201e0 <free>
    c1b8:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    c1bf:	eb b1                	jmp    c172 <bithenge_new_composed_transform+0x92>
    c1c1:	e8 62 02 00 00       	call   c428 <bithenge_transform_dec_ref.part.1>
    c1c6:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    c1cd:	00 
    c1ce:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    c1d5:	00 
    c1d6:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    c1dd:	e8 ce e6 01 00       	call   2a8b0 <assert_abort>
    c1e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c1e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000c1f0 <bithenge_if_transform>:
    c1f0:	55                   	push   %ebp
    c1f1:	89 e5                	mov    %esp,%ebp
    c1f3:	57                   	push   %edi
    c1f4:	56                   	push   %esi
    c1f5:	53                   	push   %ebx
    c1f6:	83 ec 2c             	sub    $0x2c,%esp
    c1f9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c1fc:	8b 75 10             	mov    0x10(%ebp),%esi
    c1ff:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
    c206:	8b 7d 14             	mov    0x14(%ebp),%edi
    c209:	e8 c2 3e 01 00       	call   200d0 <malloc>
    c20e:	89 c2                	mov    %eax,%edx
    c210:	85 c0                	test   %eax,%eax
    c212:	0f 84 e8 00 00 00    	je     c300 <bithenge_if_transform+0x110>
    c218:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    c21f:	00 
    c220:	c7 44 24 04 b0 d4 02 	movl   $0x2d4b0,0x4(%esp)
    c227:	00 
    c228:	89 04 24             	mov    %eax,(%esp)
    c22b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    c22e:	e8 ad d2 ff ff       	call   94e0 <bithenge_init_transform>
    c233:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    c236:	85 c0                	test   %eax,%eax
    c238:	0f 84 aa 00 00 00    	je     c2e8 <bithenge_if_transform+0xf8>
    c23e:	89 14 24             	mov    %edx,(%esp)
    c241:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    c244:	e8 97 3f 01 00       	call   201e0 <free>
    c249:	85 db                	test   %ebx,%ebx
    c24b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c24e:	74 1d                	je     c26d <bithenge_if_transform+0x7d>
    c250:	8b 0b                	mov    (%ebx),%ecx
    c252:	85 c9                	test   %ecx,%ecx
    c254:	0f 84 ed 00 00 00    	je     c347 <bithenge_if_transform+0x157>
    c25a:	8b 53 04             	mov    0x4(%ebx),%edx
    c25d:	85 d2                	test   %edx,%edx
    c25f:	0f 84 c6 00 00 00    	je     c32b <bithenge_if_transform+0x13b>
    c265:	4a                   	dec    %edx
    c266:	89 53 04             	mov    %edx,0x4(%ebx)
    c269:	85 d2                	test   %edx,%edx
    c26b:	74 43                	je     c2b0 <bithenge_if_transform+0xc0>
    c26d:	85 f6                	test   %esi,%esi
    c26f:	74 1d                	je     c28e <bithenge_if_transform+0x9e>
    c271:	8b 0e                	mov    (%esi),%ecx
    c273:	85 c9                	test   %ecx,%ecx
    c275:	0f 84 8f 00 00 00    	je     c30a <bithenge_if_transform+0x11a>
    c27b:	8b 56 04             	mov    0x4(%esi),%edx
    c27e:	85 d2                	test   %edx,%edx
    c280:	0f 84 89 00 00 00    	je     c30f <bithenge_if_transform+0x11f>
    c286:	4a                   	dec    %edx
    c287:	89 56 04             	mov    %edx,0x4(%esi)
    c28a:	85 d2                	test   %edx,%edx
    c28c:	74 32                	je     c2c0 <bithenge_if_transform+0xd0>
    c28e:	85 ff                	test   %edi,%edi
    c290:	74 15                	je     c2a7 <bithenge_if_transform+0xb7>
    c292:	8b 0f                	mov    (%edi),%ecx
    c294:	85 c9                	test   %ecx,%ecx
    c296:	74 72                	je     c30a <bithenge_if_transform+0x11a>
    c298:	8b 57 04             	mov    0x4(%edi),%edx
    c29b:	85 d2                	test   %edx,%edx
    c29d:	74 70                	je     c30f <bithenge_if_transform+0x11f>
    c29f:	4a                   	dec    %edx
    c2a0:	89 57 04             	mov    %edx,0x4(%edi)
    c2a3:	85 d2                	test   %edx,%edx
    c2a5:	74 29                	je     c2d0 <bithenge_if_transform+0xe0>
    c2a7:	83 c4 2c             	add    $0x2c,%esp
    c2aa:	5b                   	pop    %ebx
    c2ab:	5e                   	pop    %esi
    c2ac:	5f                   	pop    %edi
    c2ad:	5d                   	pop    %ebp
    c2ae:	c3                   	ret    
    c2af:	90                   	nop
    c2b0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    c2b3:	89 1c 24             	mov    %ebx,(%esp)
    c2b6:	ff 51 04             	call   *0x4(%ecx)
    c2b9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c2bc:	eb af                	jmp    c26d <bithenge_if_transform+0x7d>
    c2be:	66 90                	xchg   %ax,%ax
    c2c0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    c2c3:	89 34 24             	mov    %esi,(%esp)
    c2c6:	ff 51 0c             	call   *0xc(%ecx)
    c2c9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c2cc:	eb c0                	jmp    c28e <bithenge_if_transform+0x9e>
    c2ce:	66 90                	xchg   %ax,%ax
    c2d0:	89 3c 24             	mov    %edi,(%esp)
    c2d3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    c2d6:	ff 51 0c             	call   *0xc(%ecx)
    c2d9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c2dc:	83 c4 2c             	add    $0x2c,%esp
    c2df:	5b                   	pop    %ebx
    c2e0:	5e                   	pop    %esi
    c2e1:	5f                   	pop    %edi
    c2e2:	5d                   	pop    %ebp
    c2e3:	c3                   	ret    
    c2e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c2e8:	8b 4d 08             	mov    0x8(%ebp),%ecx
    c2eb:	89 5a 0c             	mov    %ebx,0xc(%edx)
    c2ee:	89 72 10             	mov    %esi,0x10(%edx)
    c2f1:	89 7a 14             	mov    %edi,0x14(%edx)
    c2f4:	89 11                	mov    %edx,(%ecx)
    c2f6:	83 c4 2c             	add    $0x2c,%esp
    c2f9:	5b                   	pop    %ebx
    c2fa:	5e                   	pop    %esi
    c2fb:	5f                   	pop    %edi
    c2fc:	5d                   	pop    %ebp
    c2fd:	c3                   	ret    
    c2fe:	66 90                	xchg   %ax,%ax
    c300:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c305:	e9 34 ff ff ff       	jmp    c23e <bithenge_if_transform+0x4e>
    c30a:	e8 19 01 00 00       	call   c428 <bithenge_transform_dec_ref.part.1>
    c30f:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    c316:	00 
    c317:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    c31e:	00 
    c31f:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    c326:	e8 85 e5 01 00       	call   2a8b0 <assert_abort>
    c32b:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    c332:	00 
    c333:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    c33a:	00 
    c33b:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    c342:	e8 69 e5 01 00       	call   2a8b0 <assert_abort>
    c347:	c7 44 24 08 4b 00 00 	movl   $0x4b,0x8(%esp)
    c34e:	00 
    c34f:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    c356:	00 
    c357:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    c35e:	e8 4d e5 01 00       	call   2a8b0 <assert_abort>
    c363:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    c369:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000c370 <bithenge_partial_transform>:
    c370:	55                   	push   %ebp
    c371:	89 e5                	mov    %esp,%ebp
    c373:	56                   	push   %esi
    c374:	53                   	push   %ebx
    c375:	83 ec 20             	sub    $0x20,%esp
    c378:	8b 75 0c             	mov    0xc(%ebp),%esi
    c37b:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
    c382:	e8 49 3d 01 00       	call   200d0 <malloc>
    c387:	89 c3                	mov    %eax,%ebx
    c389:	85 c0                	test   %eax,%eax
    c38b:	74 73                	je     c400 <bithenge_partial_transform+0x90>
    c38d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    c394:	00 
    c395:	c7 44 24 04 c0 d4 02 	movl   $0x2d4c0,0x4(%esp)
    c39c:	00 
    c39d:	89 04 24             	mov    %eax,(%esp)
    c3a0:	e8 3b d1 ff ff       	call   94e0 <bithenge_init_transform>
    c3a5:	85 c0                	test   %eax,%eax
    c3a7:	74 47                	je     c3f0 <bithenge_partial_transform+0x80>
    c3a9:	89 1c 24             	mov    %ebx,(%esp)
    c3ac:	89 45 f4             	mov    %eax,-0xc(%ebp)
    c3af:	e8 2c 3e 01 00       	call   201e0 <free>
    c3b4:	85 f6                	test   %esi,%esi
    c3b6:	8b 45 f4             	mov    -0xc(%ebp),%eax
    c3b9:	74 15                	je     c3d0 <bithenge_partial_transform+0x60>
    c3bb:	8b 0e                	mov    (%esi),%ecx
    c3bd:	85 c9                	test   %ecx,%ecx
    c3bf:	74 46                	je     c407 <bithenge_partial_transform+0x97>
    c3c1:	8b 56 04             	mov    0x4(%esi),%edx
    c3c4:	85 d2                	test   %edx,%edx
    c3c6:	74 44                	je     c40c <bithenge_partial_transform+0x9c>
    c3c8:	4a                   	dec    %edx
    c3c9:	89 56 04             	mov    %edx,0x4(%esi)
    c3cc:	85 d2                	test   %edx,%edx
    c3ce:	74 08                	je     c3d8 <bithenge_partial_transform+0x68>
    c3d0:	83 c4 20             	add    $0x20,%esp
    c3d3:	5b                   	pop    %ebx
    c3d4:	5e                   	pop    %esi
    c3d5:	5d                   	pop    %ebp
    c3d6:	c3                   	ret    
    c3d7:	90                   	nop
    c3d8:	89 34 24             	mov    %esi,(%esp)
    c3db:	89 45 f4             	mov    %eax,-0xc(%ebp)
    c3de:	ff 51 0c             	call   *0xc(%ecx)
    c3e1:	8b 45 f4             	mov    -0xc(%ebp),%eax
    c3e4:	83 c4 20             	add    $0x20,%esp
    c3e7:	5b                   	pop    %ebx
    c3e8:	5e                   	pop    %esi
    c3e9:	5d                   	pop    %ebp
    c3ea:	c3                   	ret    
    c3eb:	90                   	nop
    c3ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c3f0:	8b 55 08             	mov    0x8(%ebp),%edx
    c3f3:	89 73 0c             	mov    %esi,0xc(%ebx)
    c3f6:	89 1a                	mov    %ebx,(%edx)
    c3f8:	83 c4 20             	add    $0x20,%esp
    c3fb:	5b                   	pop    %ebx
    c3fc:	5e                   	pop    %esi
    c3fd:	5d                   	pop    %ebp
    c3fe:	c3                   	ret    
    c3ff:	90                   	nop
    c400:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    c405:	eb a2                	jmp    c3a9 <bithenge_partial_transform+0x39>
    c407:	e8 1c 00 00 00       	call   c428 <bithenge_transform_dec_ref.part.1>
    c40c:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    c413:	00 
    c414:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    c41b:	00 
    c41c:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    c423:	e8 88 e4 01 00       	call   2a8b0 <assert_abort>

0000c428 <bithenge_transform_dec_ref.part.1>:
    c428:	55                   	push   %ebp
    c429:	89 e5                	mov    %esp,%ebp
    c42b:	83 ec 18             	sub    $0x18,%esp
    c42e:	c7 44 24 08 74 00 00 	movl   $0x74,0x8(%esp)
    c435:	00 
    c436:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    c43d:	00 
    c43e:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    c445:	e8 66 e4 01 00       	call   2a8b0 <assert_abort>
    c44a:	66 90                	xchg   %ax,%ax
    c44c:	66 90                	xchg   %ax,%ax
    c44e:	66 90                	xchg   %ax,%ax

0000c450 <inputless_transform_prefix_length>:
    c450:	55                   	push   %ebp
    c451:	89 e5                	mov    %esp,%ebp
    c453:	8b 45 14             	mov    0x14(%ebp),%eax
    c456:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    c45c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    c463:	5d                   	pop    %ebp
    c464:	31 c0                	xor    %eax,%eax
    c466:	c3                   	ret    
    c467:	89 f6                	mov    %esi,%esi
    c469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000c470 <expression_indestructible>:
    c470:	55                   	push   %ebp
    c471:	89 e5                	mov    %esp,%ebp
    c473:	83 ec 18             	sub    $0x18,%esp
    c476:	c7 44 24 08 41 00 00 	movl   $0x41,0x8(%esp)
    c47d:	00 
    c47e:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    c485:	00 
    c486:	c7 04 24 c4 cd 02 00 	movl   $0x2cdc4,(%esp)
    c48d:	e8 1e e4 01 00       	call   2a8b0 <assert_abort>
    c492:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c499:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000c4a0 <param_expression_destroy>:
    c4a0:	55                   	push   %ebp
    c4a1:	89 e5                	mov    %esp,%ebp
    c4a3:	5d                   	pop    %ebp
    c4a4:	e9 37 3d 01 00       	jmp    201e0 <free>
    c4a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000c4b0 <scope_member_expression_destroy>:
    c4b0:	55                   	push   %ebp
    c4b1:	89 e5                	mov    %esp,%ebp
    c4b3:	53                   	push   %ebx
    c4b4:	83 ec 14             	sub    $0x14,%esp
    c4b7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    c4ba:	8b 43 08             	mov    0x8(%ebx),%eax
    c4bd:	89 04 24             	mov    %eax,(%esp)
    c4c0:	e8 fb dd ff ff       	call   a2c0 <bithenge_node_dec_ref>
    c4c5:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c4c8:	83 c4 14             	add    $0x14,%esp
    c4cb:	5b                   	pop    %ebx
    c4cc:	5d                   	pop    %ebp
    c4cd:	e9 0e 3d 01 00       	jmp    201e0 <free>
    c4d2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c4d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000c4e0 <const_expression_destroy>:
    c4e0:	55                   	push   %ebp
    c4e1:	89 e5                	mov    %esp,%ebp
    c4e3:	53                   	push   %ebx
    c4e4:	83 ec 14             	sub    $0x14,%esp
    c4e7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    c4ea:	8b 43 08             	mov    0x8(%ebx),%eax
    c4ed:	89 04 24             	mov    %eax,(%esp)
    c4f0:	e8 cb dd ff ff       	call   a2c0 <bithenge_node_dec_ref>
    c4f5:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c4f8:	83 c4 14             	add    $0x14,%esp
    c4fb:	5b                   	pop    %ebx
    c4fc:	5d                   	pop    %ebp
    c4fd:	e9 de 3c 01 00       	jmp    201e0 <free>
    c502:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    c509:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000c510 <current_node_evaluate>:
    c510:	55                   	push   %ebp
    c511:	89 e5                	mov    %esp,%ebp
    c513:	83 ec 18             	sub    $0x18,%esp
    c516:	8b 45 0c             	mov    0xc(%ebp),%eax
    c519:	89 04 24             	mov    %eax,(%esp)
    c51c:	e8 8f d5 ff ff       	call   9ab0 <bithenge_scope_get_current_node>
    c521:	8b 55 10             	mov    0x10(%ebp),%edx
    c524:	83 f8 01             	cmp    $0x1,%eax
    c527:	89 02                	mov    %eax,(%edx)
    c529:	19 c0                	sbb    %eax,%eax
    c52b:	c9                   	leave  
    c52c:	83 e0 f2             	and    $0xfffffff2,%eax
    c52f:	c3                   	ret    

0000c530 <param_expression_evaluate>:
    c530:	55                   	push   %ebp
    c531:	89 e5                	mov    %esp,%ebp
    c533:	8b 55 08             	mov    0x8(%ebp),%edx
    c536:	8b 45 0c             	mov    0xc(%ebp),%eax
    c539:	8b 52 08             	mov    0x8(%edx),%edx
    c53c:	89 45 08             	mov    %eax,0x8(%ebp)
    c53f:	89 55 0c             	mov    %edx,0xc(%ebp)
    c542:	5d                   	pop    %ebp
    c543:	e9 d8 d6 ff ff       	jmp    9c20 <bithenge_scope_get_param>
    c548:	90                   	nop
    c549:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000c550 <in_node_evaluate>:
    c550:	55                   	push   %ebp
    c551:	89 e5                	mov    %esp,%ebp
    c553:	56                   	push   %esi
    c554:	53                   	push   %ebx
    c555:	83 ec 10             	sub    $0x10,%esp
    c558:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c55b:	8b 75 10             	mov    0x10(%ebp),%esi
    c55e:	85 db                	test   %ebx,%ebx
    c560:	75 14                	jne    c576 <in_node_evaluate+0x26>
    c562:	eb 2c                	jmp    c590 <in_node_evaluate+0x40>
    c564:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c568:	89 1c 24             	mov    %ebx,(%esp)
    c56b:	e8 e0 d3 ff ff       	call   9950 <bithenge_scope_outer>
    c570:	89 c3                	mov    %eax,%ebx
    c572:	85 c0                	test   %eax,%eax
    c574:	74 1a                	je     c590 <in_node_evaluate+0x40>
    c576:	89 1c 24             	mov    %ebx,(%esp)
    c579:	e8 82 d5 ff ff       	call   9b00 <bithenge_scope_in_node>
    c57e:	89 06                	mov    %eax,(%esi)
    c580:	85 c0                	test   %eax,%eax
    c582:	74 e4                	je     c568 <in_node_evaluate+0x18>
    c584:	83 c4 10             	add    $0x10,%esp
    c587:	31 c0                	xor    %eax,%eax
    c589:	5b                   	pop    %ebx
    c58a:	5e                   	pop    %esi
    c58b:	5d                   	pop    %ebp
    c58c:	c3                   	ret    
    c58d:	8d 76 00             	lea    0x0(%esi),%esi
    c590:	83 c4 10             	add    $0x10,%esp
    c593:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    c598:	5b                   	pop    %ebx
    c599:	5e                   	pop    %esi
    c59a:	5d                   	pop    %ebp
    c59b:	c3                   	ret    
    c59c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000c5a0 <scope_member_expression_evaluate>:
    c5a0:	55                   	push   %ebp
    c5a1:	89 e5                	mov    %esp,%ebp
    c5a3:	57                   	push   %edi
    c5a4:	56                   	push   %esi
    c5a5:	53                   	push   %ebx
    c5a6:	83 ec 2c             	sub    $0x2c,%esp
    c5a9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    c5ac:	8b 45 10             	mov    0x10(%ebp),%eax
    c5af:	8b 75 08             	mov    0x8(%ebp),%esi
    c5b2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    c5b5:	85 db                	test   %ebx,%ebx
    c5b7:	75 57                	jne    c610 <scope_member_expression_evaluate+0x70>
    c5b9:	eb 7d                	jmp    c638 <scope_member_expression_evaluate+0x98>
    c5bb:	90                   	nop
    c5bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c5c0:	89 1c 24             	mov    %ebx,(%esp)
    c5c3:	e8 e8 d4 ff ff       	call   9ab0 <bithenge_scope_get_current_node>
    c5c8:	89 c7                	mov    %eax,%edi
    c5ca:	85 c0                	test   %eax,%eax
    c5cc:	74 34                	je     c602 <scope_member_expression_evaluate+0x62>
    c5ce:	8b 56 08             	mov    0x8(%esi),%edx
    c5d1:	85 d2                	test   %edx,%edx
    c5d3:	74 73                	je     c648 <scope_member_expression_evaluate+0xa8>
    c5d5:	8b 42 04             	mov    0x4(%edx),%eax
    c5d8:	40                   	inc    %eax
    c5d9:	89 42 04             	mov    %eax,0x4(%edx)
    c5dc:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c5df:	89 54 24 04          	mov    %edx,0x4(%esp)
    c5e3:	89 44 24 08          	mov    %eax,0x8(%esp)
    c5e7:	89 3c 24             	mov    %edi,(%esp)
    c5ea:	e8 81 dd ff ff       	call   a370 <bithenge_node_get>
    c5ef:	89 3c 24             	mov    %edi,(%esp)
    c5f2:	89 45 e0             	mov    %eax,-0x20(%ebp)
    c5f5:	e8 c6 dc ff ff       	call   a2c0 <bithenge_node_dec_ref>
    c5fa:	8b 45 e0             	mov    -0x20(%ebp),%eax
    c5fd:	83 f8 ff             	cmp    $0xffffffff,%eax
    c600:	75 3e                	jne    c640 <scope_member_expression_evaluate+0xa0>
    c602:	89 1c 24             	mov    %ebx,(%esp)
    c605:	e8 46 d3 ff ff       	call   9950 <bithenge_scope_outer>
    c60a:	89 c3                	mov    %eax,%ebx
    c60c:	85 c0                	test   %eax,%eax
    c60e:	74 28                	je     c638 <scope_member_expression_evaluate+0x98>
    c610:	89 1c 24             	mov    %ebx,(%esp)
    c613:	e8 48 d5 ff ff       	call   9b60 <bithenge_scope_is_barrier>
    c618:	84 c0                	test   %al,%al
    c61a:	74 a4                	je     c5c0 <scope_member_expression_evaluate+0x20>
    c61c:	8b 46 08             	mov    0x8(%esi),%eax
    c61f:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c622:	89 45 10             	mov    %eax,0x10(%ebp)
    c625:	c7 45 0c e1 d4 02 00 	movl   $0x2d4e1,0xc(%ebp)
    c62c:	83 c4 2c             	add    $0x2c,%esp
    c62f:	5b                   	pop    %ebx
    c630:	5e                   	pop    %esi
    c631:	5f                   	pop    %edi
    c632:	5d                   	pop    %ebp
    c633:	e9 38 d3 ff ff       	jmp    9970 <bithenge_scope_error>
    c638:	31 db                	xor    %ebx,%ebx
    c63a:	eb e0                	jmp    c61c <scope_member_expression_evaluate+0x7c>
    c63c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    c640:	83 c4 2c             	add    $0x2c,%esp
    c643:	5b                   	pop    %ebx
    c644:	5e                   	pop    %esi
    c645:	5f                   	pop    %edi
    c646:	5d                   	pop    %ebp
    c647:	c3                   	ret    
    c648:	c7 44 24 08 70 00 00 	movl   $0x70,0x8(%esp)
    c64f:	00 
    c650:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    c657:	00 
    c658:	c7 04 24 a0 d0 02 00 	movl   $0x2d0a0,(%esp)
    c65f:	e8 4c e2 01 00       	call   2a8b0 <assert_abort>
    c664:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    c66a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000c670 <param_wrapper_prefix_length>:
    c670:	55                   	push   %ebp
    c671:	89 e5                	mov    %esp,%ebp
    c673:	57                   	push   %edi
    c674:	56                   	push   %esi
    c675:	53                   	push   %ebx
    c676:	83 ec 3c             	sub    $0x3c,%esp
    c679:	8d 45 e0             	lea    -0x20(%ebp),%eax
    c67c:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    c67f:	8b 75 08             	mov    0x8(%ebp),%esi
    c682:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    c686:	89 04 24             	mov    %eax,(%esp)
    c689:	e8 c2 d1 ff ff       	call   9850 <bithenge_scope_new>
    c68e:	85 c0                	test   %eax,%eax
    c690:	74 0e                	je     c6a0 <param_wrapper_prefix_length+0x30>
    c692:	83 c4 3c             	add    $0x3c,%esp
    c695:	5b                   	pop    %ebx
    c696:	5e                   	pop    %esi
    c697:	5f                   	pop    %edi
    c698:	5d                   	pop    %ebp
    c699:	c3                   	ret    
    c69a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    c6a0:	8b 46 0c             	mov    0xc(%esi),%eax
    c6a3:	8b 7d e0             	mov    -0x20(%ebp),%edi
    c6a6:	85 c0                	test   %eax,%eax
    c6a8:	0f 84 dd 00 00 00    	je     c78b <param_wrapper_prefix_length+0x11b>
    c6ae:	8b 40 08             	mov    0x8(%eax),%eax
    c6b1:	89 3c 24             	mov    %edi,(%esp)
    c6b4:	89 44 24 04          	mov    %eax,0x4(%esp)
    c6b8:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    c6bb:	e8 b0 d4 ff ff       	call   9b70 <bithenge_scope_alloc_params>
    c6c0:	85 c0                	test   %eax,%eax
    c6c2:	75 68                	jne    c72c <param_wrapper_prefix_length+0xbc>
    c6c4:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    c6c7:	85 d2                	test   %edx,%edx
    c6c9:	7e 7d                	jle    c748 <param_wrapper_prefix_length+0xd8>
    c6cb:	8b 46 10             	mov    0x10(%esi),%eax
    c6ce:	8b 00                	mov    (%eax),%eax
    c6d0:	85 c0                	test   %eax,%eax
    c6d2:	0f 84 ae 00 00 00    	je     c786 <param_wrapper_prefix_length+0x116>
    c6d8:	8b 10                	mov    (%eax),%edx
    c6da:	85 d2                	test   %edx,%edx
    c6dc:	0f 84 88 00 00 00    	je     c76a <param_wrapper_prefix_length+0xfa>
    c6e2:	31 db                	xor    %ebx,%ebx
    c6e4:	eb 2f                	jmp    c715 <param_wrapper_prefix_length+0xa5>
    c6e6:	66 90                	xchg   %ax,%ax
    c6e8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c6eb:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    c6ef:	89 44 24 08          	mov    %eax,0x8(%esp)
    c6f3:	89 3c 24             	mov    %edi,(%esp)
    c6f6:	e8 c5 d4 ff ff       	call   9bc0 <bithenge_scope_set_param>
    c6fb:	85 c0                	test   %eax,%eax
    c6fd:	75 2d                	jne    c72c <param_wrapper_prefix_length+0xbc>
    c6ff:	43                   	inc    %ebx
    c700:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx
    c703:	74 43                	je     c748 <param_wrapper_prefix_length+0xd8>
    c705:	8b 46 10             	mov    0x10(%esi),%eax
    c708:	8b 04 98             	mov    (%eax,%ebx,4),%eax
    c70b:	85 c0                	test   %eax,%eax
    c70d:	74 77                	je     c786 <param_wrapper_prefix_length+0x116>
    c70f:	8b 10                	mov    (%eax),%edx
    c711:	85 d2                	test   %edx,%edx
    c713:	74 55                	je     c76a <param_wrapper_prefix_length+0xfa>
    c715:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    c718:	89 04 24             	mov    %eax,(%esp)
    c71b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    c71f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    c722:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    c726:	ff 12                	call   *(%edx)
    c728:	85 c0                	test   %eax,%eax
    c72a:	74 bc                	je     c6e8 <param_wrapper_prefix_length+0x78>
    c72c:	8b 55 e0             	mov    -0x20(%ebp),%edx
    c72f:	89 45 d0             	mov    %eax,-0x30(%ebp)
    c732:	89 14 24             	mov    %edx,(%esp)
    c735:	e8 86 d1 ff ff       	call   98c0 <bithenge_scope_dec_ref>
    c73a:	8b 45 d0             	mov    -0x30(%ebp),%eax
    c73d:	83 c4 3c             	add    $0x3c,%esp
    c740:	5b                   	pop    %ebx
    c741:	5e                   	pop    %esi
    c742:	5f                   	pop    %edi
    c743:	5d                   	pop    %ebp
    c744:	c3                   	ret    
    c745:	8d 76 00             	lea    0x0(%esi),%esi
    c748:	8b 45 14             	mov    0x14(%ebp),%eax
    c74b:	89 44 24 0c          	mov    %eax,0xc(%esp)
    c74f:	8b 45 10             	mov    0x10(%ebp),%eax
    c752:	89 44 24 08          	mov    %eax,0x8(%esp)
    c756:	8b 45 e0             	mov    -0x20(%ebp),%eax
    c759:	89 44 24 04          	mov    %eax,0x4(%esp)
    c75d:	8b 46 0c             	mov    0xc(%esi),%eax
    c760:	89 04 24             	mov    %eax,(%esp)
    c763:	e8 a8 ce ff ff       	call   9610 <bithenge_transform_prefix_length>
    c768:	eb c2                	jmp    c72c <param_wrapper_prefix_length+0xbc>
    c76a:	c7 44 24 08 5b 00 00 	movl   $0x5b,0x8(%esp)
    c771:	00 
    c772:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    c779:	00 
    c77a:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    c781:	e8 2a e1 01 00       	call   2a8b0 <assert_abort>
    c786:	e8 0a 1d 00 00       	call   e495 <bithenge_expression_evaluate.part.1>
    c78b:	e8 8d 1d 00 00       	call   e51d <bithenge_transform_num_params.part.7>

0000c790 <inputless_transform_prefix_apply>:
    c790:	55                   	push   %ebp
    c791:	89 e5                	mov    %esp,%ebp
    c793:	53                   	push   %ebx
    c794:	83 ec 14             	sub    $0x14,%esp
    c797:	8b 45 18             	mov    0x18(%ebp),%eax
    c79a:	8b 55 08             	mov    0x8(%ebp),%edx
    c79d:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    c7a0:	8b 5d 14             	mov    0x14(%ebp),%ebx
    c7a3:	85 c0                	test   %eax,%eax
    c7a5:	74 0d                	je     c7b4 <inputless_transform_prefix_apply+0x24>
    c7a7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    c7ad:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    c7b4:	8b 42 0c             	mov    0xc(%edx),%eax
    c7b7:	85 c0                	test   %eax,%eax
    c7b9:	74 18                	je     c7d3 <inputless_transform_prefix_apply+0x43>
    c7bb:	8b 10                	mov    (%eax),%edx
    c7bd:	85 d2                	test   %edx,%edx
    c7bf:	74 17                	je     c7d8 <inputless_transform_prefix_apply+0x48>
    c7c1:	89 5d 10             	mov    %ebx,0x10(%ebp)
    c7c4:	89 4d 0c             	mov    %ecx,0xc(%ebp)
    c7c7:	89 45 08             	mov    %eax,0x8(%ebp)
    c7ca:	8b 02                	mov    (%edx),%eax
    c7cc:	83 c4 14             	add    $0x14,%esp
    c7cf:	5b                   	pop    %ebx
    c7d0:	5d                   	pop    %ebp
    c7d1:	ff e0                	jmp    *%eax
    c7d3:	e8 bd 1c 00 00       	call   e495 <bithenge_expression_evaluate.part.1>
    c7d8:	c7 44 24 08 5b 00 00 	movl   $0x5b,0x8(%esp)
    c7df:	00 
    c7e0:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    c7e7:	00 
    c7e8:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    c7ef:	e8 bc e0 01 00       	call   2a8b0 <assert_abort>
    c7f4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    c7fa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000c800 <concat_blob_evaluate_b.part.15>:
    c800:	55                   	push   %ebp
    c801:	89 e5                	mov    %esp,%ebp
    c803:	56                   	push   %esi
    c804:	53                   	push   %ebx
    c805:	89 c3                	mov    %eax,%ebx
    c807:	83 ec 30             	sub    $0x30,%esp
    c80a:	8b 48 24             	mov    0x24(%eax),%ecx
    c80d:	8b 40 20             	mov    0x20(%eax),%eax
    c810:	85 c0                	test   %eax,%eax
    c812:	0f 84 9e 00 00 00    	je     c8b6 <concat_blob_evaluate_b.part.15+0xb6>
    c818:	8b 10                	mov    (%eax),%edx
    c81a:	85 d2                	test   %edx,%edx
    c81c:	0f 84 99 00 00 00    	je     c8bb <concat_blob_evaluate_b.part.15+0xbb>
    c822:	8d 75 f4             	lea    -0xc(%ebp),%esi
    c825:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    c829:	89 74 24 08          	mov    %esi,0x8(%esp)
    c82d:	89 04 24             	mov    %eax,(%esp)
    c830:	ff 12                	call   *(%edx)
    c832:	85 c0                	test   %eax,%eax
    c834:	75 23                	jne    c859 <concat_blob_evaluate_b.part.15+0x59>
    c836:	8b 55 f4             	mov    -0xc(%ebp),%edx
    c839:	83 3a 05             	cmpl   $0x5,(%edx)
    c83c:	74 22                	je     c860 <concat_blob_evaluate_b.part.15+0x60>
    c83e:	89 14 24             	mov    %edx,(%esp)
    c841:	e8 7a da ff ff       	call   a2c0 <bithenge_node_dec_ref>
    c846:	8b 43 24             	mov    0x24(%ebx),%eax
    c849:	c7 44 24 04 34 d5 02 	movl   $0x2d534,0x4(%esp)
    c850:	00 
    c851:	89 04 24             	mov    %eax,(%esp)
    c854:	e8 17 d1 ff ff       	call   9970 <bithenge_scope_error>
    c859:	83 c4 30             	add    $0x30,%esp
    c85c:	5b                   	pop    %ebx
    c85d:	5e                   	pop    %esi
    c85e:	5d                   	pop    %ebp
    c85f:	c3                   	ret    
    c860:	89 53 14             	mov    %edx,0x14(%ebx)
    c863:	8b 53 20             	mov    0x20(%ebx),%edx
    c866:	85 d2                	test   %edx,%edx
    c868:	74 15                	je     c87f <concat_blob_evaluate_b.part.15+0x7f>
    c86a:	8b 32                	mov    (%edx),%esi
    c86c:	85 f6                	test   %esi,%esi
    c86e:	74 67                	je     c8d7 <concat_blob_evaluate_b.part.15+0xd7>
    c870:	8b 4a 04             	mov    0x4(%edx),%ecx
    c873:	85 c9                	test   %ecx,%ecx
    c875:	74 65                	je     c8dc <concat_blob_evaluate_b.part.15+0xdc>
    c877:	49                   	dec    %ecx
    c878:	89 4a 04             	mov    %ecx,0x4(%edx)
    c87b:	85 c9                	test   %ecx,%ecx
    c87d:	74 29                	je     c8a8 <concat_blob_evaluate_b.part.15+0xa8>
    c87f:	8b 53 24             	mov    0x24(%ebx),%edx
    c882:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    c885:	89 14 24             	mov    %edx,(%esp)
    c888:	e8 33 d0 ff ff       	call   98c0 <bithenge_scope_dec_ref>
    c88d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c890:	c7 43 20 00 00 00 00 	movl   $0x0,0x20(%ebx)
    c897:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
    c89e:	83 c4 30             	add    $0x30,%esp
    c8a1:	5b                   	pop    %ebx
    c8a2:	5e                   	pop    %esi
    c8a3:	5d                   	pop    %ebp
    c8a4:	c3                   	ret    
    c8a5:	8d 76 00             	lea    0x0(%esi),%esi
    c8a8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    c8ab:	89 14 24             	mov    %edx,(%esp)
    c8ae:	ff 56 04             	call   *0x4(%esi)
    c8b1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    c8b4:	eb c9                	jmp    c87f <concat_blob_evaluate_b.part.15+0x7f>
    c8b6:	e8 da 1b 00 00       	call   e495 <bithenge_expression_evaluate.part.1>
    c8bb:	c7 44 24 08 5b 00 00 	movl   $0x5b,0x8(%esp)
    c8c2:	00 
    c8c3:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    c8ca:	00 
    c8cb:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    c8d2:	e8 d9 df 01 00       	call   2a8b0 <assert_abort>
    c8d7:	e8 1f 1c 00 00       	call   e4fb <bithenge_expression_dec_ref.part.6>
    c8dc:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    c8e3:	00 
    c8e4:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    c8eb:	00 
    c8ec:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    c8f3:	e8 b8 df 01 00       	call   2a8b0 <assert_abort>
    c8f8:	90                   	nop
    c8f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000c900 <concat_blob_size>:
    c900:	55                   	push   %ebp
    c901:	89 e5                	mov    %esp,%ebp
    c903:	56                   	push   %esi
    c904:	53                   	push   %ebx
    c905:	83 ec 10             	sub    $0x10,%esp
    c908:	8b 5d 08             	mov    0x8(%ebp),%ebx
    c90b:	8b 75 0c             	mov    0xc(%ebp),%esi
    c90e:	8b 53 14             	mov    0x14(%ebx),%edx
    c911:	85 d2                	test   %edx,%edx
    c913:	74 23                	je     c938 <concat_blob_size+0x38>
    c915:	8b 42 08             	mov    0x8(%edx),%eax
    c918:	85 c0                	test   %eax,%eax
    c91a:	74 33                	je     c94f <concat_blob_size+0x4f>
    c91c:	89 74 24 04          	mov    %esi,0x4(%esp)
    c920:	89 14 24             	mov    %edx,(%esp)
    c923:	ff 10                	call   *(%eax)
    c925:	8b 4b 18             	mov    0x18(%ebx),%ecx
    c928:	8b 5b 1c             	mov    0x1c(%ebx),%ebx
    c92b:	01 0e                	add    %ecx,(%esi)
    c92d:	11 5e 04             	adc    %ebx,0x4(%esi)
    c930:	83 c4 10             	add    $0x10,%esp
    c933:	5b                   	pop    %ebx
    c934:	5e                   	pop    %esi
    c935:	5d                   	pop    %ebp
    c936:	c3                   	ret    
    c937:	90                   	nop
    c938:	89 d8                	mov    %ebx,%eax
    c93a:	e8 c1 fe ff ff       	call   c800 <concat_blob_evaluate_b.part.15>
    c93f:	85 c0                	test   %eax,%eax
    c941:	75 ed                	jne    c930 <concat_blob_size+0x30>
    c943:	8b 53 14             	mov    0x14(%ebx),%edx
    c946:	85 d2                	test   %edx,%edx
    c948:	75 cb                	jne    c915 <concat_blob_size+0x15>
    c94a:	e8 8a 1b 00 00       	call   e4d9 <bithenge_blob_size.part.5>
    c94f:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    c956:	00 
    c957:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    c95e:	00 
    c95f:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    c966:	e8 45 df 01 00       	call   2a8b0 <assert_abort>
    c96b:	90                   	nop
    c96c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000c970 <subblob_expression_destroy>:
    c970:	55                   	push   %ebp
    c971:	89 e5                	mov    %esp,%ebp
    c973:	53                   	push   %ebx
    c974:	83 ec 14             	sub    $0x14,%esp
    c977:	8b 5d 08             	mov    0x8(%ebp),%ebx
    c97a:	8b 43 08             	mov    0x8(%ebx),%eax
    c97d:	85 c0                	test   %eax,%eax
    c97f:	74 1f                	je     c9a0 <subblob_expression_destroy+0x30>
    c981:	8b 08                	mov    (%eax),%ecx
    c983:	85 c9                	test   %ecx,%ecx
    c985:	0f 84 82 00 00 00    	je     ca0d <subblob_expression_destroy+0x9d>
    c98b:	8b 50 04             	mov    0x4(%eax),%edx
    c98e:	85 d2                	test   %edx,%edx
    c990:	74 5f                	je     c9f1 <subblob_expression_destroy+0x81>
    c992:	4a                   	dec    %edx
    c993:	89 50 04             	mov    %edx,0x4(%eax)
    c996:	85 d2                	test   %edx,%edx
    c998:	75 06                	jne    c9a0 <subblob_expression_destroy+0x30>
    c99a:	89 04 24             	mov    %eax,(%esp)
    c99d:	ff 51 04             	call   *0x4(%ecx)
    c9a0:	8b 43 0c             	mov    0xc(%ebx),%eax
    c9a3:	85 c0                	test   %eax,%eax
    c9a5:	74 1b                	je     c9c2 <subblob_expression_destroy+0x52>
    c9a7:	8b 08                	mov    (%eax),%ecx
    c9a9:	85 c9                	test   %ecx,%ecx
    c9ab:	74 60                	je     ca0d <subblob_expression_destroy+0x9d>
    c9ad:	8b 50 04             	mov    0x4(%eax),%edx
    c9b0:	85 d2                	test   %edx,%edx
    c9b2:	74 3d                	je     c9f1 <subblob_expression_destroy+0x81>
    c9b4:	4a                   	dec    %edx
    c9b5:	89 50 04             	mov    %edx,0x4(%eax)
    c9b8:	85 d2                	test   %edx,%edx
    c9ba:	75 06                	jne    c9c2 <subblob_expression_destroy+0x52>
    c9bc:	89 04 24             	mov    %eax,(%esp)
    c9bf:	ff 51 04             	call   *0x4(%ecx)
    c9c2:	8b 43 10             	mov    0x10(%ebx),%eax
    c9c5:	85 c0                	test   %eax,%eax
    c9c7:	74 1b                	je     c9e4 <subblob_expression_destroy+0x74>
    c9c9:	8b 08                	mov    (%eax),%ecx
    c9cb:	85 c9                	test   %ecx,%ecx
    c9cd:	74 3e                	je     ca0d <subblob_expression_destroy+0x9d>
    c9cf:	8b 50 04             	mov    0x4(%eax),%edx
    c9d2:	85 d2                	test   %edx,%edx
    c9d4:	74 1b                	je     c9f1 <subblob_expression_destroy+0x81>
    c9d6:	4a                   	dec    %edx
    c9d7:	89 50 04             	mov    %edx,0x4(%eax)
    c9da:	85 d2                	test   %edx,%edx
    c9dc:	75 06                	jne    c9e4 <subblob_expression_destroy+0x74>
    c9de:	89 04 24             	mov    %eax,(%esp)
    c9e1:	ff 51 04             	call   *0x4(%ecx)
    c9e4:	89 5d 08             	mov    %ebx,0x8(%ebp)
    c9e7:	83 c4 14             	add    $0x14,%esp
    c9ea:	5b                   	pop    %ebx
    c9eb:	5d                   	pop    %ebp
    c9ec:	e9 ef 37 01 00       	jmp    201e0 <free>
    c9f1:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    c9f8:	00 
    c9f9:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    ca00:	00 
    ca01:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    ca08:	e8 a3 de 01 00       	call   2a8b0 <assert_abort>
    ca0d:	e8 e9 1a 00 00       	call   e4fb <bithenge_expression_dec_ref.part.6>
    ca12:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ca19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000ca20 <param_wrapper_destroy>:
    ca20:	55                   	push   %ebp
    ca21:	89 e5                	mov    %esp,%ebp
    ca23:	57                   	push   %edi
    ca24:	56                   	push   %esi
    ca25:	53                   	push   %ebx
    ca26:	83 ec 2c             	sub    $0x2c,%esp
    ca29:	8b 75 08             	mov    0x8(%ebp),%esi
    ca2c:	8b 46 0c             	mov    0xc(%esi),%eax
    ca2f:	85 c0                	test   %eax,%eax
    ca31:	0f 84 cc 00 00 00    	je     cb03 <param_wrapper_destroy+0xe3>
    ca37:	8b 50 08             	mov    0x8(%eax),%edx
    ca3a:	8b 08                	mov    (%eax),%ecx
    ca3c:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    ca3f:	85 c9                	test   %ecx,%ecx
    ca41:	0f 84 a0 00 00 00    	je     cae7 <param_wrapper_destroy+0xc7>
    ca47:	8b 50 04             	mov    0x4(%eax),%edx
    ca4a:	85 d2                	test   %edx,%edx
    ca4c:	74 7d                	je     cacb <param_wrapper_destroy+0xab>
    ca4e:	4a                   	dec    %edx
    ca4f:	89 50 04             	mov    %edx,0x4(%eax)
    ca52:	85 d2                	test   %edx,%edx
    ca54:	75 06                	jne    ca5c <param_wrapper_destroy+0x3c>
    ca56:	89 04 24             	mov    %eax,(%esp)
    ca59:	ff 51 0c             	call   *0xc(%ecx)
    ca5c:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    ca5f:	31 db                	xor    %ebx,%ebx
    ca61:	8b 7e 10             	mov    0x10(%esi),%edi
    ca64:	85 c9                	test   %ecx,%ecx
    ca66:	7e 2b                	jle    ca93 <param_wrapper_destroy+0x73>
    ca68:	8b 04 9f             	mov    (%edi,%ebx,4),%eax
    ca6b:	85 c0                	test   %eax,%eax
    ca6d:	74 1e                	je     ca8d <param_wrapper_destroy+0x6d>
    ca6f:	8b 08                	mov    (%eax),%ecx
    ca71:	85 c9                	test   %ecx,%ecx
    ca73:	74 35                	je     caaa <param_wrapper_destroy+0x8a>
    ca75:	8b 50 04             	mov    0x4(%eax),%edx
    ca78:	85 d2                	test   %edx,%edx
    ca7a:	74 33                	je     caaf <param_wrapper_destroy+0x8f>
    ca7c:	4a                   	dec    %edx
    ca7d:	89 50 04             	mov    %edx,0x4(%eax)
    ca80:	85 d2                	test   %edx,%edx
    ca82:	75 09                	jne    ca8d <param_wrapper_destroy+0x6d>
    ca84:	89 04 24             	mov    %eax,(%esp)
    ca87:	ff 51 04             	call   *0x4(%ecx)
    ca8a:	8b 7e 10             	mov    0x10(%esi),%edi
    ca8d:	43                   	inc    %ebx
    ca8e:	3b 5d e4             	cmp    -0x1c(%ebp),%ebx
    ca91:	75 d5                	jne    ca68 <param_wrapper_destroy+0x48>
    ca93:	89 3c 24             	mov    %edi,(%esp)
    ca96:	e8 45 37 01 00       	call   201e0 <free>
    ca9b:	89 75 08             	mov    %esi,0x8(%ebp)
    ca9e:	83 c4 2c             	add    $0x2c,%esp
    caa1:	5b                   	pop    %ebx
    caa2:	5e                   	pop    %esi
    caa3:	5f                   	pop    %edi
    caa4:	5d                   	pop    %ebp
    caa5:	e9 36 37 01 00       	jmp    201e0 <free>
    caaa:	e8 4c 1a 00 00       	call   e4fb <bithenge_expression_dec_ref.part.6>
    caaf:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    cab6:	00 
    cab7:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    cabe:	00 
    cabf:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    cac6:	e8 e5 dd 01 00       	call   2a8b0 <assert_abort>
    cacb:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    cad2:	00 
    cad3:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    cada:	00 
    cadb:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    cae2:	e8 c9 dd 01 00       	call   2a8b0 <assert_abort>
    cae7:	c7 44 24 08 74 00 00 	movl   $0x74,0x8(%esp)
    caee:	00 
    caef:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    caf6:	00 
    caf7:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    cafe:	e8 ad dd 01 00       	call   2a8b0 <assert_abort>
    cb03:	e8 15 1a 00 00       	call   e51d <bithenge_transform_num_params.part.7>
    cb08:	90                   	nop
    cb09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000cb10 <expression_transform_destroy>:
    cb10:	55                   	push   %ebp
    cb11:	89 e5                	mov    %esp,%ebp
    cb13:	53                   	push   %ebx
    cb14:	83 ec 14             	sub    $0x14,%esp
    cb17:	8b 5d 08             	mov    0x8(%ebp),%ebx
    cb1a:	8b 43 0c             	mov    0xc(%ebx),%eax
    cb1d:	85 c0                	test   %eax,%eax
    cb1f:	74 1b                	je     cb3c <expression_transform_destroy+0x2c>
    cb21:	8b 08                	mov    (%eax),%ecx
    cb23:	85 c9                	test   %ecx,%ecx
    cb25:	74 3e                	je     cb65 <expression_transform_destroy+0x55>
    cb27:	8b 50 04             	mov    0x4(%eax),%edx
    cb2a:	85 d2                	test   %edx,%edx
    cb2c:	74 1b                	je     cb49 <expression_transform_destroy+0x39>
    cb2e:	4a                   	dec    %edx
    cb2f:	89 50 04             	mov    %edx,0x4(%eax)
    cb32:	85 d2                	test   %edx,%edx
    cb34:	75 06                	jne    cb3c <expression_transform_destroy+0x2c>
    cb36:	89 04 24             	mov    %eax,(%esp)
    cb39:	ff 51 04             	call   *0x4(%ecx)
    cb3c:	89 5d 08             	mov    %ebx,0x8(%ebp)
    cb3f:	83 c4 14             	add    $0x14,%esp
    cb42:	5b                   	pop    %ebx
    cb43:	5d                   	pop    %ebp
    cb44:	e9 97 36 01 00       	jmp    201e0 <free>
    cb49:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    cb50:	00 
    cb51:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    cb58:	00 
    cb59:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    cb60:	e8 4b dd 01 00       	call   2a8b0 <assert_abort>
    cb65:	e8 91 19 00 00       	call   e4fb <bithenge_expression_dec_ref.part.6>
    cb6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000cb70 <binary_expression_destroy>:
    cb70:	55                   	push   %ebp
    cb71:	89 e5                	mov    %esp,%ebp
    cb73:	53                   	push   %ebx
    cb74:	83 ec 14             	sub    $0x14,%esp
    cb77:	8b 5d 08             	mov    0x8(%ebp),%ebx
    cb7a:	8b 43 0c             	mov    0xc(%ebx),%eax
    cb7d:	85 c0                	test   %eax,%eax
    cb7f:	74 1b                	je     cb9c <binary_expression_destroy+0x2c>
    cb81:	8b 08                	mov    (%eax),%ecx
    cb83:	85 c9                	test   %ecx,%ecx
    cb85:	74 60                	je     cbe7 <binary_expression_destroy+0x77>
    cb87:	8b 50 04             	mov    0x4(%eax),%edx
    cb8a:	85 d2                	test   %edx,%edx
    cb8c:	74 3d                	je     cbcb <binary_expression_destroy+0x5b>
    cb8e:	4a                   	dec    %edx
    cb8f:	89 50 04             	mov    %edx,0x4(%eax)
    cb92:	85 d2                	test   %edx,%edx
    cb94:	75 06                	jne    cb9c <binary_expression_destroy+0x2c>
    cb96:	89 04 24             	mov    %eax,(%esp)
    cb99:	ff 51 04             	call   *0x4(%ecx)
    cb9c:	8b 43 10             	mov    0x10(%ebx),%eax
    cb9f:	85 c0                	test   %eax,%eax
    cba1:	74 1b                	je     cbbe <binary_expression_destroy+0x4e>
    cba3:	8b 08                	mov    (%eax),%ecx
    cba5:	85 c9                	test   %ecx,%ecx
    cba7:	74 3e                	je     cbe7 <binary_expression_destroy+0x77>
    cba9:	8b 50 04             	mov    0x4(%eax),%edx
    cbac:	85 d2                	test   %edx,%edx
    cbae:	74 1b                	je     cbcb <binary_expression_destroy+0x5b>
    cbb0:	4a                   	dec    %edx
    cbb1:	89 50 04             	mov    %edx,0x4(%eax)
    cbb4:	85 d2                	test   %edx,%edx
    cbb6:	75 06                	jne    cbbe <binary_expression_destroy+0x4e>
    cbb8:	89 04 24             	mov    %eax,(%esp)
    cbbb:	ff 51 04             	call   *0x4(%ecx)
    cbbe:	89 5d 08             	mov    %ebx,0x8(%ebp)
    cbc1:	83 c4 14             	add    $0x14,%esp
    cbc4:	5b                   	pop    %ebx
    cbc5:	5d                   	pop    %ebp
    cbc6:	e9 15 36 01 00       	jmp    201e0 <free>
    cbcb:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    cbd2:	00 
    cbd3:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    cbda:	00 
    cbdb:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    cbe2:	e8 c9 dc 01 00       	call   2a8b0 <assert_abort>
    cbe7:	e8 0f 19 00 00       	call   e4fb <bithenge_expression_dec_ref.part.6>
    cbec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000cbf0 <concat_blob_destroy>:
    cbf0:	55                   	push   %ebp
    cbf1:	89 e5                	mov    %esp,%ebp
    cbf3:	53                   	push   %ebx
    cbf4:	83 ec 14             	sub    $0x14,%esp
    cbf7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    cbfa:	8b 43 10             	mov    0x10(%ebx),%eax
    cbfd:	85 c0                	test   %eax,%eax
    cbff:	74 08                	je     cc09 <concat_blob_destroy+0x19>
    cc01:	89 04 24             	mov    %eax,(%esp)
    cc04:	e8 b7 d6 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    cc09:	8b 43 14             	mov    0x14(%ebx),%eax
    cc0c:	85 c0                	test   %eax,%eax
    cc0e:	74 08                	je     cc18 <concat_blob_destroy+0x28>
    cc10:	89 04 24             	mov    %eax,(%esp)
    cc13:	e8 a8 d6 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    cc18:	8b 43 20             	mov    0x20(%ebx),%eax
    cc1b:	85 c0                	test   %eax,%eax
    cc1d:	74 1b                	je     cc3a <concat_blob_destroy+0x4a>
    cc1f:	8b 08                	mov    (%eax),%ecx
    cc21:	85 c9                	test   %ecx,%ecx
    cc23:	74 49                	je     cc6e <concat_blob_destroy+0x7e>
    cc25:	8b 50 04             	mov    0x4(%eax),%edx
    cc28:	85 d2                	test   %edx,%edx
    cc2a:	74 26                	je     cc52 <concat_blob_destroy+0x62>
    cc2c:	4a                   	dec    %edx
    cc2d:	89 50 04             	mov    %edx,0x4(%eax)
    cc30:	85 d2                	test   %edx,%edx
    cc32:	75 06                	jne    cc3a <concat_blob_destroy+0x4a>
    cc34:	89 04 24             	mov    %eax,(%esp)
    cc37:	ff 51 04             	call   *0x4(%ecx)
    cc3a:	8b 43 24             	mov    0x24(%ebx),%eax
    cc3d:	89 04 24             	mov    %eax,(%esp)
    cc40:	e8 7b cc ff ff       	call   98c0 <bithenge_scope_dec_ref>
    cc45:	89 5d 08             	mov    %ebx,0x8(%ebp)
    cc48:	83 c4 14             	add    $0x14,%esp
    cc4b:	5b                   	pop    %ebx
    cc4c:	5d                   	pop    %ebp
    cc4d:	e9 8e 35 01 00       	jmp    201e0 <free>
    cc52:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    cc59:	00 
    cc5a:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    cc61:	00 
    cc62:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    cc69:	e8 42 dc 01 00       	call   2a8b0 <assert_abort>
    cc6e:	e8 88 18 00 00       	call   e4fb <bithenge_expression_dec_ref.part.6>
    cc73:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    cc79:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000cc80 <const_expression_evaluate>:
    cc80:	55                   	push   %ebp
    cc81:	89 e5                	mov    %esp,%ebp
    cc83:	83 ec 18             	sub    $0x18,%esp
    cc86:	8b 45 08             	mov    0x8(%ebp),%eax
    cc89:	8b 40 08             	mov    0x8(%eax),%eax
    cc8c:	85 c0                	test   %eax,%eax
    cc8e:	74 10                	je     cca0 <const_expression_evaluate+0x20>
    cc90:	8b 50 04             	mov    0x4(%eax),%edx
    cc93:	42                   	inc    %edx
    cc94:	89 50 04             	mov    %edx,0x4(%eax)
    cc97:	8b 55 10             	mov    0x10(%ebp),%edx
    cc9a:	89 02                	mov    %eax,(%edx)
    cc9c:	31 c0                	xor    %eax,%eax
    cc9e:	c9                   	leave  
    cc9f:	c3                   	ret    
    cca0:	c7 44 24 08 70 00 00 	movl   $0x70,0x8(%esp)
    cca7:	00 
    cca8:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    ccaf:	00 
    ccb0:	c7 04 24 a0 d0 02 00 	movl   $0x2d0a0,(%esp)
    ccb7:	e8 f4 db 01 00       	call   2a8b0 <assert_abort>
    ccbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000ccc0 <subblob_expression_evaluate>:
    ccc0:	55                   	push   %ebp
    ccc1:	89 e5                	mov    %esp,%ebp
    ccc3:	57                   	push   %edi
    ccc4:	56                   	push   %esi
    ccc5:	53                   	push   %ebx
    ccc6:	83 ec 4c             	sub    $0x4c,%esp
    ccc9:	8b 5d 08             	mov    0x8(%ebp),%ebx
    cccc:	8b 43 0c             	mov    0xc(%ebx),%eax
    cccf:	85 c0                	test   %eax,%eax
    ccd1:	0f 84 83 01 00 00    	je     ce5a <subblob_expression_evaluate+0x19a>
    ccd7:	8b 10                	mov    (%eax),%edx
    ccd9:	85 d2                	test   %edx,%edx
    ccdb:	0f 84 5d 01 00 00    	je     ce3e <subblob_expression_evaluate+0x17e>
    cce1:	8d 4d e0             	lea    -0x20(%ebp),%ecx
    cce4:	89 04 24             	mov    %eax,(%esp)
    cce7:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    cceb:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    ccee:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    ccf2:	ff 12                	call   *(%edx)
    ccf4:	85 c0                	test   %eax,%eax
    ccf6:	75 58                	jne    cd50 <subblob_expression_evaluate+0x90>
    ccf8:	8b 45 e0             	mov    -0x20(%ebp),%eax
    ccfb:	83 38 03             	cmpl   $0x3,(%eax)
    ccfe:	75 42                	jne    cd42 <subblob_expression_evaluate+0x82>
    cd00:	8b 70 08             	mov    0x8(%eax),%esi
    cd03:	8b 78 0c             	mov    0xc(%eax),%edi
    cd06:	89 04 24             	mov    %eax,(%esp)
    cd09:	e8 b2 d5 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    cd0e:	8b 43 10             	mov    0x10(%ebx),%eax
    cd11:	85 c0                	test   %eax,%eax
    cd13:	74 43                	je     cd58 <subblob_expression_evaluate+0x98>
    cd15:	8b 10                	mov    (%eax),%edx
    cd17:	85 d2                	test   %edx,%edx
    cd19:	0f 84 1f 01 00 00    	je     ce3e <subblob_expression_evaluate+0x17e>
    cd1f:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    cd22:	89 04 24             	mov    %eax,(%esp)
    cd25:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    cd29:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    cd2c:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    cd30:	ff 12                	call   *(%edx)
    cd32:	85 c0                	test   %eax,%eax
    cd34:	75 1a                	jne    cd50 <subblob_expression_evaluate+0x90>
    cd36:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    cd39:	83 38 03             	cmpl   $0x3,(%eax)
    cd3c:	0f 84 a6 00 00 00    	je     cde8 <subblob_expression_evaluate+0x128>
    cd42:	89 04 24             	mov    %eax,(%esp)
    cd45:	e8 76 d5 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    cd4a:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    cd4f:	90                   	nop
    cd50:	83 c4 4c             	add    $0x4c,%esp
    cd53:	5b                   	pop    %ebx
    cd54:	5e                   	pop    %esi
    cd55:	5f                   	pop    %edi
    cd56:	5d                   	pop    %ebp
    cd57:	c3                   	ret    
    cd58:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)
    cd5f:	c7 45 d4 ff ff ff ff 	movl   $0xffffffff,-0x2c(%ebp)
    cd66:	85 ff                	test   %edi,%edi
    cd68:	0f 88 c6 00 00 00    	js     ce34 <subblob_expression_evaluate+0x174>
    cd6e:	8b 43 10             	mov    0x10(%ebx),%eax
    cd71:	85 c0                	test   %eax,%eax
    cd73:	74 0b                	je     cd80 <subblob_expression_evaluate+0xc0>
    cd75:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    cd78:	85 c0                	test   %eax,%eax
    cd7a:	0f 88 b4 00 00 00    	js     ce34 <subblob_expression_evaluate+0x174>
    cd80:	8b 43 08             	mov    0x8(%ebx),%eax
    cd83:	85 c0                	test   %eax,%eax
    cd85:	0f 84 cf 00 00 00    	je     ce5a <subblob_expression_evaluate+0x19a>
    cd8b:	8b 10                	mov    (%eax),%edx
    cd8d:	85 d2                	test   %edx,%edx
    cd8f:	0f 84 a9 00 00 00    	je     ce3e <subblob_expression_evaluate+0x17e>
    cd95:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    cd98:	89 04 24             	mov    %eax,(%esp)
    cd9b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    cd9f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    cda2:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    cda6:	ff 12                	call   *(%edx)
    cda8:	85 c0                	test   %eax,%eax
    cdaa:	75 a4                	jne    cd50 <subblob_expression_evaluate+0x90>
    cdac:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    cdaf:	83 38 05             	cmpl   $0x5,(%eax)
    cdb2:	75 8e                	jne    cd42 <subblob_expression_evaluate+0x82>
    cdb4:	8b 4b 10             	mov    0x10(%ebx),%ecx
    cdb7:	85 c9                	test   %ecx,%ecx
    cdb9:	74 5d                	je     ce18 <subblob_expression_evaluate+0x158>
    cdbb:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    cdbe:	8b 55 d0             	mov    -0x30(%ebp),%edx
    cdc1:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    cdc5:	8b 4d 10             	mov    0x10(%ebp),%ecx
    cdc8:	89 74 24 08          	mov    %esi,0x8(%esp)
    cdcc:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    cdd0:	89 54 24 10          	mov    %edx,0x10(%esp)
    cdd4:	89 44 24 04          	mov    %eax,0x4(%esp)
    cdd8:	89 0c 24             	mov    %ecx,(%esp)
    cddb:	e8 10 ec ff ff       	call   b9f0 <bithenge_new_subblob>
    cde0:	83 c4 4c             	add    $0x4c,%esp
    cde3:	5b                   	pop    %ebx
    cde4:	5e                   	pop    %esi
    cde5:	5f                   	pop    %edi
    cde6:	5d                   	pop    %ebp
    cde7:	c3                   	ret    
    cde8:	8b 50 08             	mov    0x8(%eax),%edx
    cdeb:	8b 48 0c             	mov    0xc(%eax),%ecx
    cdee:	89 04 24             	mov    %eax,(%esp)
    cdf1:	89 55 d0             	mov    %edx,-0x30(%ebp)
    cdf4:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    cdf7:	e8 c4 d4 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    cdfc:	80 7b 14 00          	cmpb   $0x0,0x14(%ebx)
    ce00:	0f 84 60 ff ff ff    	je     cd66 <subblob_expression_evaluate+0xa6>
    ce06:	29 75 d0             	sub    %esi,-0x30(%ebp)
    ce09:	19 7d d4             	sbb    %edi,-0x2c(%ebp)
    ce0c:	e9 55 ff ff ff       	jmp    cd66 <subblob_expression_evaluate+0xa6>
    ce11:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ce18:	89 44 24 04          	mov    %eax,0x4(%esp)
    ce1c:	8b 45 10             	mov    0x10(%ebp),%eax
    ce1f:	89 74 24 08          	mov    %esi,0x8(%esp)
    ce23:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    ce27:	89 04 24             	mov    %eax,(%esp)
    ce2a:	e8 81 eb ff ff       	call   b9b0 <bithenge_new_offset_blob>
    ce2f:	e9 1c ff ff ff       	jmp    cd50 <subblob_expression_evaluate+0x90>
    ce34:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    ce39:	e9 12 ff ff ff       	jmp    cd50 <subblob_expression_evaluate+0x90>
    ce3e:	c7 44 24 08 5b 00 00 	movl   $0x5b,0x8(%esp)
    ce45:	00 
    ce46:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    ce4d:	00 
    ce4e:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    ce55:	e8 56 da 01 00       	call   2a8b0 <assert_abort>
    ce5a:	e8 36 16 00 00       	call   e495 <bithenge_expression_evaluate.part.1>
    ce5f:	90                   	nop

0000ce60 <expression_transform_apply>:
    ce60:	55                   	push   %ebp
    ce61:	89 e5                	mov    %esp,%ebp
    ce63:	53                   	push   %ebx
    ce64:	83 ec 34             	sub    $0x34,%esp
    ce67:	8b 45 0c             	mov    0xc(%ebp),%eax
    ce6a:	89 44 24 04          	mov    %eax,0x4(%esp)
    ce6e:	8d 45 f4             	lea    -0xc(%ebp),%eax
    ce71:	89 04 24             	mov    %eax,(%esp)
    ce74:	e8 d7 c9 ff ff       	call   9850 <bithenge_scope_new>
    ce79:	85 c0                	test   %eax,%eax
    ce7b:	74 0b                	je     ce88 <expression_transform_apply+0x28>
    ce7d:	83 c4 34             	add    $0x34,%esp
    ce80:	5b                   	pop    %ebx
    ce81:	5d                   	pop    %ebp
    ce82:	c3                   	ret    
    ce83:	90                   	nop
    ce84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ce88:	8b 45 10             	mov    0x10(%ebp),%eax
    ce8b:	89 44 24 04          	mov    %eax,0x4(%esp)
    ce8f:	8b 45 f4             	mov    -0xc(%ebp),%eax
    ce92:	89 04 24             	mov    %eax,(%esp)
    ce95:	e8 86 cc ff ff       	call   9b20 <bithenge_scope_set_in_node>
    ce9a:	8b 45 08             	mov    0x8(%ebp),%eax
    ce9d:	8b 40 0c             	mov    0xc(%eax),%eax
    cea0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
    cea3:	85 c0                	test   %eax,%eax
    cea5:	74 2d                	je     ced4 <expression_transform_apply+0x74>
    cea7:	8b 10                	mov    (%eax),%edx
    cea9:	85 d2                	test   %edx,%edx
    ceab:	74 2c                	je     ced9 <expression_transform_apply+0x79>
    cead:	8b 5d 14             	mov    0x14(%ebp),%ebx
    ceb0:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    ceb4:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    ceb8:	89 04 24             	mov    %eax,(%esp)
    cebb:	ff 12                	call   *(%edx)
    cebd:	8b 55 f4             	mov    -0xc(%ebp),%edx
    cec0:	89 14 24             	mov    %edx,(%esp)
    cec3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    cec6:	e8 f5 c9 ff ff       	call   98c0 <bithenge_scope_dec_ref>
    cecb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    cece:	83 c4 34             	add    $0x34,%esp
    ced1:	5b                   	pop    %ebx
    ced2:	5d                   	pop    %ebp
    ced3:	c3                   	ret    
    ced4:	e8 bc 15 00 00       	call   e495 <bithenge_expression_evaluate.part.1>
    ced9:	c7 44 24 08 5b 00 00 	movl   $0x5b,0x8(%esp)
    cee0:	00 
    cee1:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    cee8:	00 
    cee9:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    cef0:	e8 bb d9 01 00       	call   2a8b0 <assert_abort>
    cef5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    cef9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000cf00 <concat_blob_read_bits>:
    cf00:	55                   	push   %ebp
    cf01:	89 e5                	mov    %esp,%ebp
    cf03:	57                   	push   %edi
    cf04:	56                   	push   %esi
    cf05:	53                   	push   %ebx
    cf06:	83 ec 5c             	sub    $0x5c,%esp
    cf09:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
    cf10:	8a 55 1c             	mov    0x1c(%ebp),%dl
    cf13:	8b 4d 08             	mov    0x8(%ebp),%ecx
    cf16:	88 55 cf             	mov    %dl,-0x31(%ebp)
    cf19:	8b 55 08             	mov    0x8(%ebp),%edx
    cf1c:	8b 7d 10             	mov    0x10(%ebp),%edi
    cf1f:	8b 49 18             	mov    0x18(%ecx),%ecx
    cf22:	8b 52 1c             	mov    0x1c(%edx),%edx
    cf25:	8b 75 0c             	mov    0xc(%ebp),%esi
    cf28:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    cf2f:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    cf36:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    cf3d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    cf40:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    cf43:	39 fa                	cmp    %edi,%edx
    cf45:	72 76                	jb     cfbd <concat_blob_read_bits+0xbd>
    cf47:	0f 86 83 01 00 00    	jbe    d0d0 <concat_blob_read_bits+0x1d0>
    cf4d:	8b 4d 18             	mov    0x18(%ebp),%ecx
    cf50:	8b 51 04             	mov    0x4(%ecx),%edx
    cf53:	8b 01                	mov    (%ecx),%eax
    cf55:	89 55 dc             	mov    %edx,-0x24(%ebp)
    cf58:	8b 55 08             	mov    0x8(%ebp),%edx
    cf5b:	89 45 d8             	mov    %eax,-0x28(%ebp)
    cf5e:	8b 42 10             	mov    0x10(%edx),%eax
    cf61:	85 c0                	test   %eax,%eax
    cf63:	0f 84 b9 01 00 00    	je     d122 <concat_blob_read_bits+0x222>
    cf69:	8b 50 08             	mov    0x8(%eax),%edx
    cf6c:	85 d2                	test   %edx,%edx
    cf6e:	0f 84 ca 01 00 00    	je     d13e <concat_blob_read_bits+0x23e>
    cf74:	8b 52 08             	mov    0x8(%edx),%edx
    cf77:	85 d2                	test   %edx,%edx
    cf79:	0f 84 99 01 00 00    	je     d118 <concat_blob_read_bits+0x218>
    cf7f:	31 c9                	xor    %ecx,%ecx
    cf81:	89 74 24 04          	mov    %esi,0x4(%esp)
    cf85:	8a 4d cf             	mov    -0x31(%ebp),%cl
    cf88:	89 7c 24 08          	mov    %edi,0x8(%esp)
    cf8c:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    cf90:	8d 4d d8             	lea    -0x28(%ebp),%ecx
    cf93:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    cf97:	8b 4d 14             	mov    0x14(%ebp),%ecx
    cf9a:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    cf9e:	89 04 24             	mov    %eax,(%esp)
    cfa1:	ff d2                	call   *%edx
    cfa3:	85 c0                	test   %eax,%eax
    cfa5:	0f 85 ef 00 00 00    	jne    d09a <concat_blob_read_bits+0x19a>
    cfab:	8b 55 08             	mov    0x8(%ebp),%edx
    cfae:	8b 4d 08             	mov    0x8(%ebp),%ecx
    cfb1:	8b 52 18             	mov    0x18(%edx),%edx
    cfb4:	8b 49 1c             	mov    0x1c(%ecx),%ecx
    cfb7:	89 55 d0             	mov    %edx,-0x30(%ebp)
    cfba:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    cfbd:	8b 4d 18             	mov    0x18(%ebp),%ecx
    cfc0:	8b 01                	mov    (%ecx),%eax
    cfc2:	8b 51 04             	mov    0x4(%ecx),%edx
    cfc5:	89 c1                	mov    %eax,%ecx
    cfc7:	89 d3                	mov    %edx,%ebx
    cfc9:	01 f1                	add    %esi,%ecx
    cfcb:	11 fb                	adc    %edi,%ebx
    cfcd:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx
    cfd0:	0f 82 aa 00 00 00    	jb     d080 <concat_blob_read_bits+0x180>
    cfd6:	77 09                	ja     cfe1 <concat_blob_read_bits+0xe1>
    cfd8:	3b 4d d0             	cmp    -0x30(%ebp),%ecx
    cfdb:	0f 86 9f 00 00 00    	jbe    d080 <concat_blob_read_bits+0x180>
    cfe1:	8b 4d 08             	mov    0x8(%ebp),%ecx
    cfe4:	8b 59 14             	mov    0x14(%ecx),%ebx
    cfe7:	85 db                	test   %ebx,%ebx
    cfe9:	0f 84 11 01 00 00    	je     d100 <concat_blob_read_bits+0x200>
    cfef:	8b 4d d8             	mov    -0x28(%ebp),%ecx
    cff2:	8b 5d dc             	mov    -0x24(%ebp),%ebx
    cff5:	29 c8                	sub    %ecx,%eax
    cff7:	19 da                	sbb    %ebx,%edx
    cff9:	89 45 e0             	mov    %eax,-0x20(%ebp)
    cffc:	89 c8                	mov    %ecx,%eax
    cffe:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    d001:	83 e0 07             	and    $0x7,%eax
    d004:	85 c0                	test   %eax,%eax
    d006:	0f 85 d1 00 00 00    	jne    d0dd <concat_blob_read_bits+0x1dd>
    d00c:	89 da                	mov    %ebx,%edx
    d00e:	89 c8                	mov    %ecx,%eax
    d010:	0f ac d0 03          	shrd   $0x3,%edx,%eax
    d014:	8b 55 14             	mov    0x14(%ebp),%edx
    d017:	01 c2                	add    %eax,%edx
    d019:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    d01c:	8b 55 08             	mov    0x8(%ebp),%edx
    d01f:	2b 4a 18             	sub    0x18(%edx),%ecx
    d022:	8b 42 14             	mov    0x14(%edx),%eax
    d025:	1b 5a 1c             	sbb    0x1c(%edx),%ebx
    d028:	01 f1                	add    %esi,%ecx
    d02a:	11 fb                	adc    %edi,%ebx
    d02c:	85 c0                	test   %eax,%eax
    d02e:	0f 84 ee 00 00 00    	je     d122 <concat_blob_read_bits+0x222>
    d034:	8b 50 08             	mov    0x8(%eax),%edx
    d037:	85 d2                	test   %edx,%edx
    d039:	0f 84 ff 00 00 00    	je     d13e <concat_blob_read_bits+0x23e>
    d03f:	8b 7a 08             	mov    0x8(%edx),%edi
    d042:	85 ff                	test   %edi,%edi
    d044:	0f 84 ce 00 00 00    	je     d118 <concat_blob_read_bits+0x218>
    d04a:	8a 55 cf             	mov    -0x31(%ebp),%dl
    d04d:	8d 75 e0             	lea    -0x20(%ebp),%esi
    d050:	81 e2 ff 00 00 00    	and    $0xff,%edx
    d056:	89 74 24 10          	mov    %esi,0x10(%esp)
    d05a:	89 54 24 14          	mov    %edx,0x14(%esp)
    d05e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    d061:	89 54 24 0c          	mov    %edx,0xc(%esp)
    d065:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    d069:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    d06d:	89 04 24             	mov    %eax,(%esp)
    d070:	ff d7                	call   *%edi
    d072:	85 c0                	test   %eax,%eax
    d074:	75 24                	jne    d09a <concat_blob_read_bits+0x19a>
    d076:	8b 4d 18             	mov    0x18(%ebp),%ecx
    d079:	8b 01                	mov    (%ecx),%eax
    d07b:	8b 51 04             	mov    0x4(%ecx),%edx
    d07e:	66 90                	xchg   %ax,%ax
    d080:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    d083:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
    d086:	03 4d d8             	add    -0x28(%ebp),%ecx
    d089:	13 5d dc             	adc    -0x24(%ebp),%ebx
    d08c:	39 da                	cmp    %ebx,%edx
    d08e:	76 18                	jbe    d0a8 <concat_blob_read_bits+0x1a8>
    d090:	8b 55 18             	mov    0x18(%ebp),%edx
    d093:	31 c0                	xor    %eax,%eax
    d095:	89 0a                	mov    %ecx,(%edx)
    d097:	89 5a 04             	mov    %ebx,0x4(%edx)
    d09a:	83 c4 5c             	add    $0x5c,%esp
    d09d:	5b                   	pop    %ebx
    d09e:	5e                   	pop    %esi
    d09f:	5f                   	pop    %edi
    d0a0:	5d                   	pop    %ebp
    d0a1:	c3                   	ret    
    d0a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    d0a8:	72 04                	jb     d0ae <concat_blob_read_bits+0x1ae>
    d0aa:	39 c8                	cmp    %ecx,%eax
    d0ac:	73 e2                	jae    d090 <concat_blob_read_bits+0x190>
    d0ae:	c7 44 24 08 45 04 00 	movl   $0x445,0x8(%esp)
    d0b5:	00 
    d0b6:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    d0bd:	00 
    d0be:	c7 04 24 04 d5 02 00 	movl   $0x2d504,(%esp)
    d0c5:	e8 e6 d7 01 00       	call   2a8b0 <assert_abort>
    d0ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    d0d0:	39 f1                	cmp    %esi,%ecx
    d0d2:	0f 86 e5 fe ff ff    	jbe    cfbd <concat_blob_read_bits+0xbd>
    d0d8:	e9 70 fe ff ff       	jmp    cf4d <concat_blob_read_bits+0x4d>
    d0dd:	c7 44 24 08 3e 04 00 	movl   $0x43e,0x8(%esp)
    d0e4:	00 
    d0e5:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    d0ec:	00 
    d0ed:	c7 04 24 f4 d4 02 00 	movl   $0x2d4f4,(%esp)
    d0f4:	e8 b7 d7 01 00       	call   2a8b0 <assert_abort>
    d0f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    d100:	89 c8                	mov    %ecx,%eax
    d102:	e8 f9 f6 ff ff       	call   c800 <concat_blob_evaluate_b.part.15>
    d107:	85 c0                	test   %eax,%eax
    d109:	75 8f                	jne    d09a <concat_blob_read_bits+0x19a>
    d10b:	8b 4d 18             	mov    0x18(%ebp),%ecx
    d10e:	8b 01                	mov    (%ecx),%eax
    d110:	8b 51 04             	mov    0x4(%ecx),%edx
    d113:	e9 d7 fe ff ff       	jmp    cfef <concat_blob_read_bits+0xef>
    d118:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    d11d:	e9 78 ff ff ff       	jmp    d09a <concat_blob_read_bits+0x19a>
    d122:	c7 44 24 08 b2 00 00 	movl   $0xb2,0x8(%esp)
    d129:	00 
    d12a:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    d131:	00 
    d132:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    d139:	e8 72 d7 01 00       	call   2a8b0 <assert_abort>
    d13e:	c7 44 24 08 b3 00 00 	movl   $0xb3,0x8(%esp)
    d145:	00 
    d146:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    d14d:	00 
    d14e:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    d155:	e8 56 d7 01 00       	call   2a8b0 <assert_abort>
    d15a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000d160 <concat_blob_read>:
    d160:	55                   	push   %ebp
    d161:	89 e5                	mov    %esp,%ebp
    d163:	57                   	push   %edi
    d164:	56                   	push   %esi
    d165:	53                   	push   %ebx
    d166:	83 ec 4c             	sub    $0x4c,%esp
    d169:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
    d170:	8b 55 08             	mov    0x8(%ebp),%edx
    d173:	8b 7d 10             	mov    0x10(%ebp),%edi
    d176:	8b 75 0c             	mov    0xc(%ebp),%esi
    d179:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    d180:	8b 42 18             	mov    0x18(%edx),%eax
    d183:	8b 52 1c             	mov    0x1c(%edx),%edx
    d186:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    d18d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    d194:	89 45 c8             	mov    %eax,-0x38(%ebp)
    d197:	89 55 cc             	mov    %edx,-0x34(%ebp)
    d19a:	39 fa                	cmp    %edi,%edx
    d19c:	72 6a                	jb     d208 <concat_blob_read+0xa8>
    d19e:	0f 86 4c 01 00 00    	jbe    d2f0 <concat_blob_read+0x190>
    d1a4:	8b 55 18             	mov    0x18(%ebp),%edx
    d1a7:	8b 0a                	mov    (%edx),%ecx
    d1a9:	8b 5a 04             	mov    0x4(%edx),%ebx
    d1ac:	89 4d d8             	mov    %ecx,-0x28(%ebp)
    d1af:	8b 4d 08             	mov    0x8(%ebp),%ecx
    d1b2:	89 5d dc             	mov    %ebx,-0x24(%ebp)
    d1b5:	8b 41 10             	mov    0x10(%ecx),%eax
    d1b8:	85 c0                	test   %eax,%eax
    d1ba:	0f 84 94 01 00 00    	je     d354 <concat_blob_read+0x1f4>
    d1c0:	8b 48 08             	mov    0x8(%eax),%ecx
    d1c3:	85 c9                	test   %ecx,%ecx
    d1c5:	0f 84 af 01 00 00    	je     d37a <concat_blob_read+0x21a>
    d1cb:	8b 49 04             	mov    0x4(%ecx),%ecx
    d1ce:	85 c9                	test   %ecx,%ecx
    d1d0:	0f 84 9a 01 00 00    	je     d370 <concat_blob_read+0x210>
    d1d6:	8b 55 14             	mov    0x14(%ebp),%edx
    d1d9:	8d 5d d8             	lea    -0x28(%ebp),%ebx
    d1dc:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    d1e0:	89 54 24 0c          	mov    %edx,0xc(%esp)
    d1e4:	89 74 24 04          	mov    %esi,0x4(%esp)
    d1e8:	89 7c 24 08          	mov    %edi,0x8(%esp)
    d1ec:	89 04 24             	mov    %eax,(%esp)
    d1ef:	ff d1                	call   *%ecx
    d1f1:	85 c0                	test   %eax,%eax
    d1f3:	0f 85 c1 00 00 00    	jne    d2ba <concat_blob_read+0x15a>
    d1f9:	8b 55 08             	mov    0x8(%ebp),%edx
    d1fc:	8b 42 18             	mov    0x18(%edx),%eax
    d1ff:	8b 52 1c             	mov    0x1c(%edx),%edx
    d202:	89 45 c8             	mov    %eax,-0x38(%ebp)
    d205:	89 55 cc             	mov    %edx,-0x34(%ebp)
    d208:	8b 55 18             	mov    0x18(%ebp),%edx
    d20b:	8b 0a                	mov    (%edx),%ecx
    d20d:	8b 5a 04             	mov    0x4(%edx),%ebx
    d210:	89 c8                	mov    %ecx,%eax
    d212:	89 da                	mov    %ebx,%edx
    d214:	01 f0                	add    %esi,%eax
    d216:	11 fa                	adc    %edi,%edx
    d218:	89 45 d0             	mov    %eax,-0x30(%ebp)
    d21b:	8b 45 cc             	mov    -0x34(%ebp),%eax
    d21e:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    d221:	39 c2                	cmp    %eax,%edx
    d223:	72 7b                	jb     d2a0 <concat_blob_read+0x140>
    d225:	77 08                	ja     d22f <concat_blob_read+0xcf>
    d227:	8b 55 c8             	mov    -0x38(%ebp),%edx
    d22a:	39 55 d0             	cmp    %edx,-0x30(%ebp)
    d22d:	76 71                	jbe    d2a0 <concat_blob_read+0x140>
    d22f:	8b 55 08             	mov    0x8(%ebp),%edx
    d232:	8b 52 14             	mov    0x14(%edx),%edx
    d235:	89 55 d0             	mov    %edx,-0x30(%ebp)
    d238:	85 d2                	test   %edx,%edx
    d23a:	0f 84 c0 00 00 00    	je     d300 <concat_blob_read+0x1a0>
    d240:	2b 4d d8             	sub    -0x28(%ebp),%ecx
    d243:	8b 45 d8             	mov    -0x28(%ebp),%eax
    d246:	1b 5d dc             	sbb    -0x24(%ebp),%ebx
    d249:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    d24c:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
    d24f:	8b 5d 14             	mov    0x14(%ebp),%ebx
    d252:	01 c3                	add    %eax,%ebx
    d254:	03 75 d8             	add    -0x28(%ebp),%esi
    d257:	13 7d dc             	adc    -0x24(%ebp),%edi
    d25a:	2b 75 c8             	sub    -0x38(%ebp),%esi
    d25d:	1b 7d cc             	sbb    -0x34(%ebp),%edi
    d260:	8b 45 d0             	mov    -0x30(%ebp),%eax
    d263:	8b 48 08             	mov    0x8(%eax),%ecx
    d266:	85 c9                	test   %ecx,%ecx
    d268:	0f 84 0c 01 00 00    	je     d37a <concat_blob_read+0x21a>
    d26e:	8b 49 04             	mov    0x4(%ecx),%ecx
    d271:	85 c9                	test   %ecx,%ecx
    d273:	0f 84 f7 00 00 00    	je     d370 <concat_blob_read+0x210>
    d279:	8d 45 e0             	lea    -0x20(%ebp),%eax
    d27c:	8b 55 d0             	mov    -0x30(%ebp),%edx
    d27f:	89 44 24 10          	mov    %eax,0x10(%esp)
    d283:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    d287:	89 74 24 04          	mov    %esi,0x4(%esp)
    d28b:	89 7c 24 08          	mov    %edi,0x8(%esp)
    d28f:	89 14 24             	mov    %edx,(%esp)
    d292:	ff d1                	call   *%ecx
    d294:	85 c0                	test   %eax,%eax
    d296:	75 22                	jne    d2ba <concat_blob_read+0x15a>
    d298:	8b 55 18             	mov    0x18(%ebp),%edx
    d29b:	8b 0a                	mov    (%edx),%ecx
    d29d:	8b 5a 04             	mov    0x4(%edx),%ebx
    d2a0:	8b 45 e0             	mov    -0x20(%ebp),%eax
    d2a3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    d2a6:	03 45 d8             	add    -0x28(%ebp),%eax
    d2a9:	13 55 dc             	adc    -0x24(%ebp),%edx
    d2ac:	39 da                	cmp    %ebx,%edx
    d2ae:	73 18                	jae    d2c8 <concat_blob_read+0x168>
    d2b0:	8b 4d 18             	mov    0x18(%ebp),%ecx
    d2b3:	89 01                	mov    %eax,(%ecx)
    d2b5:	89 51 04             	mov    %edx,0x4(%ecx)
    d2b8:	31 c0                	xor    %eax,%eax
    d2ba:	83 c4 4c             	add    $0x4c,%esp
    d2bd:	5b                   	pop    %ebx
    d2be:	5e                   	pop    %esi
    d2bf:	5f                   	pop    %edi
    d2c0:	5d                   	pop    %ebp
    d2c1:	c3                   	ret    
    d2c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    d2c8:	77 04                	ja     d2ce <concat_blob_read+0x16e>
    d2ca:	39 c8                	cmp    %ecx,%eax
    d2cc:	76 e2                	jbe    d2b0 <concat_blob_read+0x150>
    d2ce:	c7 44 24 08 26 04 00 	movl   $0x426,0x8(%esp)
    d2d5:	00 
    d2d6:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    d2dd:	00 
    d2de:	c7 04 24 04 d5 02 00 	movl   $0x2d504,(%esp)
    d2e5:	e8 c6 d5 01 00       	call   2a8b0 <assert_abort>
    d2ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    d2f0:	39 f0                	cmp    %esi,%eax
    d2f2:	0f 86 10 ff ff ff    	jbe    d208 <concat_blob_read+0xa8>
    d2f8:	e9 a7 fe ff ff       	jmp    d1a4 <concat_blob_read+0x44>
    d2fd:	8d 76 00             	lea    0x0(%esi),%esi
    d300:	8b 45 08             	mov    0x8(%ebp),%eax
    d303:	e8 f8 f4 ff ff       	call   c800 <concat_blob_evaluate_b.part.15>
    d308:	85 c0                	test   %eax,%eax
    d30a:	75 ae                	jne    d2ba <concat_blob_read+0x15a>
    d30c:	8b 4d 08             	mov    0x8(%ebp),%ecx
    d30f:	8b 55 08             	mov    0x8(%ebp),%edx
    d312:	8b 5d 14             	mov    0x14(%ebp),%ebx
    d315:	8b 49 14             	mov    0x14(%ecx),%ecx
    d318:	8b 42 18             	mov    0x18(%edx),%eax
    d31b:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    d31e:	8b 4d 18             	mov    0x18(%ebp),%ecx
    d321:	89 45 c8             	mov    %eax,-0x38(%ebp)
    d324:	8b 52 1c             	mov    0x1c(%edx),%edx
    d327:	8b 01                	mov    (%ecx),%eax
    d329:	89 55 cc             	mov    %edx,-0x34(%ebp)
    d32c:	2b 45 d8             	sub    -0x28(%ebp),%eax
    d32f:	8b 51 04             	mov    0x4(%ecx),%edx
    d332:	1b 55 dc             	sbb    -0x24(%ebp),%edx
    d335:	03 5d d8             	add    -0x28(%ebp),%ebx
    d338:	03 75 d8             	add    -0x28(%ebp),%esi
    d33b:	89 45 e0             	mov    %eax,-0x20(%ebp)
    d33e:	13 7d dc             	adc    -0x24(%ebp),%edi
    d341:	2b 75 c8             	sub    -0x38(%ebp),%esi
    d344:	1b 7d cc             	sbb    -0x34(%ebp),%edi
    d347:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    d34a:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)
    d34e:	0f 85 0c ff ff ff    	jne    d260 <concat_blob_read+0x100>
    d354:	c7 44 24 08 96 00 00 	movl   $0x96,0x8(%esp)
    d35b:	00 
    d35c:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    d363:	00 
    d364:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    d36b:	e8 40 d5 01 00       	call   2a8b0 <assert_abort>
    d370:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    d375:	e9 40 ff ff ff       	jmp    d2ba <concat_blob_read+0x15a>
    d37a:	c7 44 24 08 97 00 00 	movl   $0x97,0x8(%esp)
    d381:	00 
    d382:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    d389:	00 
    d38a:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    d391:	e8 1a d5 01 00       	call   2a8b0 <assert_abort>
    d396:	8d 76 00             	lea    0x0(%esi),%esi
    d399:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d3a0 <param_wrapper_apply>:
    d3a0:	55                   	push   %ebp
    d3a1:	89 e5                	mov    %esp,%ebp
    d3a3:	57                   	push   %edi
    d3a4:	56                   	push   %esi
    d3a5:	53                   	push   %ebx
    d3a6:	83 ec 3c             	sub    $0x3c,%esp
    d3a9:	8d 45 e0             	lea    -0x20(%ebp),%eax
    d3ac:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    d3af:	8b 75 08             	mov    0x8(%ebp),%esi
    d3b2:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    d3b6:	89 04 24             	mov    %eax,(%esp)
    d3b9:	e8 92 c4 ff ff       	call   9850 <bithenge_scope_new>
    d3be:	85 c0                	test   %eax,%eax
    d3c0:	74 0e                	je     d3d0 <param_wrapper_apply+0x30>
    d3c2:	83 c4 3c             	add    $0x3c,%esp
    d3c5:	5b                   	pop    %ebx
    d3c6:	5e                   	pop    %esi
    d3c7:	5f                   	pop    %edi
    d3c8:	5d                   	pop    %ebp
    d3c9:	c3                   	ret    
    d3ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    d3d0:	8b 46 0c             	mov    0xc(%esi),%eax
    d3d3:	8b 7d e0             	mov    -0x20(%ebp),%edi
    d3d6:	85 c0                	test   %eax,%eax
    d3d8:	0f 84 dd 00 00 00    	je     d4bb <param_wrapper_apply+0x11b>
    d3de:	8b 40 08             	mov    0x8(%eax),%eax
    d3e1:	89 3c 24             	mov    %edi,(%esp)
    d3e4:	89 44 24 04          	mov    %eax,0x4(%esp)
    d3e8:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    d3eb:	e8 80 c7 ff ff       	call   9b70 <bithenge_scope_alloc_params>
    d3f0:	85 c0                	test   %eax,%eax
    d3f2:	75 68                	jne    d45c <param_wrapper_apply+0xbc>
    d3f4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    d3f7:	85 c0                	test   %eax,%eax
    d3f9:	7e 7d                	jle    d478 <param_wrapper_apply+0xd8>
    d3fb:	8b 46 10             	mov    0x10(%esi),%eax
    d3fe:	8b 00                	mov    (%eax),%eax
    d400:	85 c0                	test   %eax,%eax
    d402:	0f 84 ae 00 00 00    	je     d4b6 <param_wrapper_apply+0x116>
    d408:	8b 10                	mov    (%eax),%edx
    d40a:	85 d2                	test   %edx,%edx
    d40c:	0f 84 88 00 00 00    	je     d49a <param_wrapper_apply+0xfa>
    d412:	31 db                	xor    %ebx,%ebx
    d414:	eb 2f                	jmp    d445 <param_wrapper_apply+0xa5>
    d416:	66 90                	xchg   %ax,%ax
    d418:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    d41b:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    d41f:	89 44 24 08          	mov    %eax,0x8(%esp)
    d423:	89 3c 24             	mov    %edi,(%esp)
    d426:	e8 95 c7 ff ff       	call   9bc0 <bithenge_scope_set_param>
    d42b:	85 c0                	test   %eax,%eax
    d42d:	75 2d                	jne    d45c <param_wrapper_apply+0xbc>
    d42f:	43                   	inc    %ebx
    d430:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx
    d433:	74 43                	je     d478 <param_wrapper_apply+0xd8>
    d435:	8b 46 10             	mov    0x10(%esi),%eax
    d438:	8b 04 98             	mov    (%eax,%ebx,4),%eax
    d43b:	85 c0                	test   %eax,%eax
    d43d:	74 77                	je     d4b6 <param_wrapper_apply+0x116>
    d43f:	8b 10                	mov    (%eax),%edx
    d441:	85 d2                	test   %edx,%edx
    d443:	74 55                	je     d49a <param_wrapper_apply+0xfa>
    d445:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    d448:	89 04 24             	mov    %eax,(%esp)
    d44b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    d44f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    d452:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    d456:	ff 12                	call   *(%edx)
    d458:	85 c0                	test   %eax,%eax
    d45a:	74 bc                	je     d418 <param_wrapper_apply+0x78>
    d45c:	8b 55 e0             	mov    -0x20(%ebp),%edx
    d45f:	89 45 d0             	mov    %eax,-0x30(%ebp)
    d462:	89 14 24             	mov    %edx,(%esp)
    d465:	e8 56 c4 ff ff       	call   98c0 <bithenge_scope_dec_ref>
    d46a:	8b 45 d0             	mov    -0x30(%ebp),%eax
    d46d:	83 c4 3c             	add    $0x3c,%esp
    d470:	5b                   	pop    %ebx
    d471:	5e                   	pop    %esi
    d472:	5f                   	pop    %edi
    d473:	5d                   	pop    %ebp
    d474:	c3                   	ret    
    d475:	8d 76 00             	lea    0x0(%esi),%esi
    d478:	8b 45 14             	mov    0x14(%ebp),%eax
    d47b:	89 44 24 0c          	mov    %eax,0xc(%esp)
    d47f:	8b 45 10             	mov    0x10(%ebp),%eax
    d482:	89 44 24 08          	mov    %eax,0x8(%esp)
    d486:	8b 45 e0             	mov    -0x20(%ebp),%eax
    d489:	89 44 24 04          	mov    %eax,0x4(%esp)
    d48d:	8b 46 0c             	mov    0xc(%esi),%eax
    d490:	89 04 24             	mov    %eax,(%esp)
    d493:	e8 d8 c0 ff ff       	call   9570 <bithenge_transform_apply>
    d498:	eb c2                	jmp    d45c <param_wrapper_apply+0xbc>
    d49a:	c7 44 24 08 5b 00 00 	movl   $0x5b,0x8(%esp)
    d4a1:	00 
    d4a2:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    d4a9:	00 
    d4aa:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    d4b1:	e8 fa d3 01 00       	call   2a8b0 <assert_abort>
    d4b6:	e8 da 0f 00 00       	call   e495 <bithenge_expression_evaluate.part.1>
    d4bb:	e8 5d 10 00 00       	call   e51d <bithenge_transform_num_params.part.7>

0000d4c0 <param_wrapper_prefix_apply>:
    d4c0:	55                   	push   %ebp
    d4c1:	89 e5                	mov    %esp,%ebp
    d4c3:	57                   	push   %edi
    d4c4:	56                   	push   %esi
    d4c5:	53                   	push   %ebx
    d4c6:	83 ec 4c             	sub    $0x4c,%esp
    d4c9:	8d 45 e0             	lea    -0x20(%ebp),%eax
    d4cc:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    d4cf:	8b 75 08             	mov    0x8(%ebp),%esi
    d4d2:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    d4d6:	89 04 24             	mov    %eax,(%esp)
    d4d9:	e8 72 c3 ff ff       	call   9850 <bithenge_scope_new>
    d4de:	85 c0                	test   %eax,%eax
    d4e0:	74 0e                	je     d4f0 <param_wrapper_prefix_apply+0x30>
    d4e2:	83 c4 4c             	add    $0x4c,%esp
    d4e5:	5b                   	pop    %ebx
    d4e6:	5e                   	pop    %esi
    d4e7:	5f                   	pop    %edi
    d4e8:	5d                   	pop    %ebp
    d4e9:	c3                   	ret    
    d4ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    d4f0:	8b 46 0c             	mov    0xc(%esi),%eax
    d4f3:	8b 7d e0             	mov    -0x20(%ebp),%edi
    d4f6:	85 c0                	test   %eax,%eax
    d4f8:	0f 84 e4 00 00 00    	je     d5e2 <param_wrapper_prefix_apply+0x122>
    d4fe:	8b 40 08             	mov    0x8(%eax),%eax
    d501:	89 3c 24             	mov    %edi,(%esp)
    d504:	89 44 24 04          	mov    %eax,0x4(%esp)
    d508:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    d50b:	e8 60 c6 ff ff       	call   9b70 <bithenge_scope_alloc_params>
    d510:	85 c0                	test   %eax,%eax
    d512:	75 68                	jne    d57c <param_wrapper_prefix_apply+0xbc>
    d514:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    d517:	85 c0                	test   %eax,%eax
    d519:	7e 7d                	jle    d598 <param_wrapper_prefix_apply+0xd8>
    d51b:	8b 46 10             	mov    0x10(%esi),%eax
    d51e:	8b 00                	mov    (%eax),%eax
    d520:	85 c0                	test   %eax,%eax
    d522:	0f 84 b5 00 00 00    	je     d5dd <param_wrapper_prefix_apply+0x11d>
    d528:	8b 10                	mov    (%eax),%edx
    d52a:	85 d2                	test   %edx,%edx
    d52c:	0f 84 8f 00 00 00    	je     d5c1 <param_wrapper_prefix_apply+0x101>
    d532:	31 db                	xor    %ebx,%ebx
    d534:	eb 2f                	jmp    d565 <param_wrapper_prefix_apply+0xa5>
    d536:	66 90                	xchg   %ax,%ax
    d538:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    d53b:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    d53f:	89 44 24 08          	mov    %eax,0x8(%esp)
    d543:	89 3c 24             	mov    %edi,(%esp)
    d546:	e8 75 c6 ff ff       	call   9bc0 <bithenge_scope_set_param>
    d54b:	85 c0                	test   %eax,%eax
    d54d:	75 2d                	jne    d57c <param_wrapper_prefix_apply+0xbc>
    d54f:	43                   	inc    %ebx
    d550:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx
    d553:	74 43                	je     d598 <param_wrapper_prefix_apply+0xd8>
    d555:	8b 46 10             	mov    0x10(%esi),%eax
    d558:	8b 04 98             	mov    (%eax,%ebx,4),%eax
    d55b:	85 c0                	test   %eax,%eax
    d55d:	74 7e                	je     d5dd <param_wrapper_prefix_apply+0x11d>
    d55f:	8b 10                	mov    (%eax),%edx
    d561:	85 d2                	test   %edx,%edx
    d563:	74 5c                	je     d5c1 <param_wrapper_prefix_apply+0x101>
    d565:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    d568:	89 04 24             	mov    %eax,(%esp)
    d56b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    d56f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    d572:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    d576:	ff 12                	call   *(%edx)
    d578:	85 c0                	test   %eax,%eax
    d57a:	74 bc                	je     d538 <param_wrapper_prefix_apply+0x78>
    d57c:	8b 55 e0             	mov    -0x20(%ebp),%edx
    d57f:	89 45 d0             	mov    %eax,-0x30(%ebp)
    d582:	89 14 24             	mov    %edx,(%esp)
    d585:	e8 36 c3 ff ff       	call   98c0 <bithenge_scope_dec_ref>
    d58a:	8b 45 d0             	mov    -0x30(%ebp),%eax
    d58d:	83 c4 4c             	add    $0x4c,%esp
    d590:	5b                   	pop    %ebx
    d591:	5e                   	pop    %esi
    d592:	5f                   	pop    %edi
    d593:	5d                   	pop    %ebp
    d594:	c3                   	ret    
    d595:	8d 76 00             	lea    0x0(%esi),%esi
    d598:	8b 45 18             	mov    0x18(%ebp),%eax
    d59b:	89 44 24 10          	mov    %eax,0x10(%esp)
    d59f:	8b 45 14             	mov    0x14(%ebp),%eax
    d5a2:	89 44 24 0c          	mov    %eax,0xc(%esp)
    d5a6:	8b 45 10             	mov    0x10(%ebp),%eax
    d5a9:	89 44 24 08          	mov    %eax,0x8(%esp)
    d5ad:	8b 45 e0             	mov    -0x20(%ebp),%eax
    d5b0:	89 44 24 04          	mov    %eax,0x4(%esp)
    d5b4:	8b 46 0c             	mov    0xc(%esi),%eax
    d5b7:	89 04 24             	mov    %eax,(%esp)
    d5ba:	e8 d1 c1 ff ff       	call   9790 <bithenge_transform_prefix_apply>
    d5bf:	eb bb                	jmp    d57c <param_wrapper_prefix_apply+0xbc>
    d5c1:	c7 44 24 08 5b 00 00 	movl   $0x5b,0x8(%esp)
    d5c8:	00 
    d5c9:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    d5d0:	00 
    d5d1:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    d5d8:	e8 d3 d2 01 00       	call   2a8b0 <assert_abort>
    d5dd:	e8 b3 0e 00 00       	call   e495 <bithenge_expression_evaluate.part.1>
    d5e2:	e8 36 0f 00 00       	call   e51d <bithenge_transform_num_params.part.7>
    d5e7:	89 f6                	mov    %esi,%esi
    d5e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d5f0 <bithenge_init_expression>:
    d5f0:	55                   	push   %ebp
    d5f1:	89 e5                	mov    %esp,%ebp
    d5f3:	83 ec 18             	sub    $0x18,%esp
    d5f6:	8b 45 0c             	mov    0xc(%ebp),%eax
    d5f9:	8b 55 08             	mov    0x8(%ebp),%edx
    d5fc:	85 c0                	test   %eax,%eax
    d5fe:	74 1a                	je     d61a <bithenge_init_expression+0x2a>
    d600:	8b 08                	mov    (%eax),%ecx
    d602:	85 c9                	test   %ecx,%ecx
    d604:	74 35                	je     d63b <bithenge_init_expression+0x4b>
    d606:	8b 48 04             	mov    0x4(%eax),%ecx
    d609:	85 c9                	test   %ecx,%ecx
    d60b:	74 12                	je     d61f <bithenge_init_expression+0x2f>
    d60d:	89 02                	mov    %eax,(%edx)
    d60f:	c7 42 04 01 00 00 00 	movl   $0x1,0x4(%edx)
    d616:	31 c0                	xor    %eax,%eax
    d618:	c9                   	leave  
    d619:	c3                   	ret    
    d61a:	e8 64 0f 00 00       	call   e583 <bithenge_init_expression.part.18>
    d61f:	c7 44 24 08 37 00 00 	movl   $0x37,0x8(%esp)
    d626:	00 
    d627:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    d62e:	00 
    d62f:	c7 04 24 20 d1 02 00 	movl   $0x2d120,(%esp)
    d636:	e8 75 d2 01 00       	call   2a8b0 <assert_abort>
    d63b:	c7 44 24 08 36 00 00 	movl   $0x36,0x8(%esp)
    d642:	00 
    d643:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    d64a:	00 
    d64b:	c7 04 24 1d d5 02 00 	movl   $0x2d51d,(%esp)
    d652:	e8 59 d2 01 00       	call   2a8b0 <assert_abort>
    d657:	89 f6                	mov    %esi,%esi
    d659:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d660 <bithenge_binary_expression>:
    d660:	55                   	push   %ebp
    d661:	89 e5                	mov    %esp,%ebp
    d663:	56                   	push   %esi
    d664:	53                   	push   %ebx
    d665:	83 ec 10             	sub    $0x10,%esp
    d668:	8b 5d 10             	mov    0x10(%ebp),%ebx
    d66b:	8b 75 14             	mov    0x14(%ebp),%esi
    d66e:	c7 04 24 14 00 00 00 	movl   $0x14,(%esp)
    d675:	e8 56 2a 01 00       	call   200d0 <malloc>
    d67a:	85 c0                	test   %eax,%eax
    d67c:	74 2a                	je     d6a8 <bithenge_binary_expression+0x48>
    d67e:	8b 55 0c             	mov    0xc(%ebp),%edx
    d681:	c7 00 dc d5 02 00    	movl   $0x2d5dc,(%eax)
    d687:	89 50 08             	mov    %edx,0x8(%eax)
    d68a:	8b 55 08             	mov    0x8(%ebp),%edx
    d68d:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    d694:	89 58 0c             	mov    %ebx,0xc(%eax)
    d697:	89 70 10             	mov    %esi,0x10(%eax)
    d69a:	89 02                	mov    %eax,(%edx)
    d69c:	83 c4 10             	add    $0x10,%esp
    d69f:	31 c0                	xor    %eax,%eax
    d6a1:	5b                   	pop    %ebx
    d6a2:	5e                   	pop    %esi
    d6a3:	5d                   	pop    %ebp
    d6a4:	c3                   	ret    
    d6a5:	8d 76 00             	lea    0x0(%esi),%esi
    d6a8:	85 db                	test   %ebx,%ebx
    d6aa:	74 15                	je     d6c1 <bithenge_binary_expression+0x61>
    d6ac:	8b 13                	mov    (%ebx),%edx
    d6ae:	85 d2                	test   %edx,%edx
    d6b0:	74 72                	je     d724 <bithenge_binary_expression+0xc4>
    d6b2:	8b 43 04             	mov    0x4(%ebx),%eax
    d6b5:	85 c0                	test   %eax,%eax
    d6b7:	74 4f                	je     d708 <bithenge_binary_expression+0xa8>
    d6b9:	48                   	dec    %eax
    d6ba:	89 43 04             	mov    %eax,0x4(%ebx)
    d6bd:	85 c0                	test   %eax,%eax
    d6bf:	74 37                	je     d6f8 <bithenge_binary_expression+0x98>
    d6c1:	85 f6                	test   %esi,%esi
    d6c3:	74 15                	je     d6da <bithenge_binary_expression+0x7a>
    d6c5:	8b 16                	mov    (%esi),%edx
    d6c7:	85 d2                	test   %edx,%edx
    d6c9:	74 59                	je     d724 <bithenge_binary_expression+0xc4>
    d6cb:	8b 46 04             	mov    0x4(%esi),%eax
    d6ce:	85 c0                	test   %eax,%eax
    d6d0:	74 36                	je     d708 <bithenge_binary_expression+0xa8>
    d6d2:	48                   	dec    %eax
    d6d3:	89 46 04             	mov    %eax,0x4(%esi)
    d6d6:	85 c0                	test   %eax,%eax
    d6d8:	74 26                	je     d700 <bithenge_binary_expression+0xa0>
    d6da:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    d6e1:	e8 fa 2a 01 00       	call   201e0 <free>
    d6e6:	83 c4 10             	add    $0x10,%esp
    d6e9:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d6ee:	5b                   	pop    %ebx
    d6ef:	5e                   	pop    %esi
    d6f0:	5d                   	pop    %ebp
    d6f1:	c3                   	ret    
    d6f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    d6f8:	89 1c 24             	mov    %ebx,(%esp)
    d6fb:	ff 52 04             	call   *0x4(%edx)
    d6fe:	eb c1                	jmp    d6c1 <bithenge_binary_expression+0x61>
    d700:	89 34 24             	mov    %esi,(%esp)
    d703:	ff 52 04             	call   *0x4(%edx)
    d706:	eb d2                	jmp    d6da <bithenge_binary_expression+0x7a>
    d708:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    d70f:	00 
    d710:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    d717:	00 
    d718:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    d71f:	e8 8c d1 01 00       	call   2a8b0 <assert_abort>
    d724:	e8 d2 0d 00 00       	call   e4fb <bithenge_expression_dec_ref.part.6>
    d729:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000d730 <bithenge_in_node_expression>:
    d730:	55                   	push   %ebp
    d731:	a1 48 04 03 00       	mov    0x30448,%eax
    d736:	89 e5                	mov    %esp,%ebp
    d738:	40                   	inc    %eax
    d739:	a3 48 04 03 00       	mov    %eax,0x30448
    d73e:	8b 45 08             	mov    0x8(%ebp),%eax
    d741:	c7 00 44 04 03 00    	movl   $0x30444,(%eax)
    d747:	31 c0                	xor    %eax,%eax
    d749:	5d                   	pop    %ebp
    d74a:	c3                   	ret    
    d74b:	90                   	nop
    d74c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000d750 <bithenge_current_node_expression>:
    d750:	55                   	push   %ebp
    d751:	a1 50 04 03 00       	mov    0x30450,%eax
    d756:	89 e5                	mov    %esp,%ebp
    d758:	40                   	inc    %eax
    d759:	a3 50 04 03 00       	mov    %eax,0x30450
    d75e:	8b 45 08             	mov    0x8(%ebp),%eax
    d761:	c7 00 4c 04 03 00    	movl   $0x3044c,(%eax)
    d767:	31 c0                	xor    %eax,%eax
    d769:	5d                   	pop    %ebp
    d76a:	c3                   	ret    
    d76b:	90                   	nop
    d76c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000d770 <bithenge_param_expression>:
    d770:	55                   	push   %ebp
    d771:	89 e5                	mov    %esp,%ebp
    d773:	83 ec 18             	sub    $0x18,%esp
    d776:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)
    d77d:	e8 4e 29 01 00       	call   200d0 <malloc>
    d782:	85 c0                	test   %eax,%eax
    d784:	74 22                	je     d7a8 <bithenge_param_expression+0x38>
    d786:	8b 55 0c             	mov    0xc(%ebp),%edx
    d789:	c7 00 e4 d5 02 00    	movl   $0x2d5e4,(%eax)
    d78f:	89 50 08             	mov    %edx,0x8(%eax)
    d792:	8b 55 08             	mov    0x8(%ebp),%edx
    d795:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    d79c:	89 02                	mov    %eax,(%edx)
    d79e:	31 c0                	xor    %eax,%eax
    d7a0:	c9                   	leave  
    d7a1:	c3                   	ret    
    d7a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    d7a8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d7ad:	c9                   	leave  
    d7ae:	c3                   	ret    
    d7af:	90                   	nop

0000d7b0 <bithenge_const_expression>:
    d7b0:	55                   	push   %ebp
    d7b1:	89 e5                	mov    %esp,%ebp
    d7b3:	53                   	push   %ebx
    d7b4:	83 ec 14             	sub    $0x14,%esp
    d7b7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    d7ba:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)
    d7c1:	e8 0a 29 01 00       	call   200d0 <malloc>
    d7c6:	85 c0                	test   %eax,%eax
    d7c8:	74 1e                	je     d7e8 <bithenge_const_expression+0x38>
    d7ca:	8b 55 08             	mov    0x8(%ebp),%edx
    d7cd:	c7 00 ec d5 02 00    	movl   $0x2d5ec,(%eax)
    d7d3:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    d7da:	89 58 08             	mov    %ebx,0x8(%eax)
    d7dd:	89 02                	mov    %eax,(%edx)
    d7df:	83 c4 14             	add    $0x14,%esp
    d7e2:	31 c0                	xor    %eax,%eax
    d7e4:	5b                   	pop    %ebx
    d7e5:	5d                   	pop    %ebp
    d7e6:	c3                   	ret    
    d7e7:	90                   	nop
    d7e8:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    d7ef:	e8 ec 29 01 00       	call   201e0 <free>
    d7f4:	89 1c 24             	mov    %ebx,(%esp)
    d7f7:	e8 c4 ca ff ff       	call   a2c0 <bithenge_node_dec_ref>
    d7fc:	83 c4 14             	add    $0x14,%esp
    d7ff:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d804:	5b                   	pop    %ebx
    d805:	5d                   	pop    %ebp
    d806:	c3                   	ret    
    d807:	89 f6                	mov    %esi,%esi
    d809:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d810 <bithenge_scope_member_expression>:
    d810:	55                   	push   %ebp
    d811:	89 e5                	mov    %esp,%ebp
    d813:	53                   	push   %ebx
    d814:	83 ec 14             	sub    $0x14,%esp
    d817:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    d81a:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)
    d821:	e8 aa 28 01 00       	call   200d0 <malloc>
    d826:	85 c0                	test   %eax,%eax
    d828:	74 1e                	je     d848 <bithenge_scope_member_expression+0x38>
    d82a:	8b 55 08             	mov    0x8(%ebp),%edx
    d82d:	c7 00 f4 d5 02 00    	movl   $0x2d5f4,(%eax)
    d833:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    d83a:	89 58 08             	mov    %ebx,0x8(%eax)
    d83d:	89 02                	mov    %eax,(%edx)
    d83f:	83 c4 14             	add    $0x14,%esp
    d842:	31 c0                	xor    %eax,%eax
    d844:	5b                   	pop    %ebx
    d845:	5d                   	pop    %ebp
    d846:	c3                   	ret    
    d847:	90                   	nop
    d848:	89 1c 24             	mov    %ebx,(%esp)
    d84b:	e8 70 ca ff ff       	call   a2c0 <bithenge_node_dec_ref>
    d850:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    d857:	e8 84 29 01 00       	call   201e0 <free>
    d85c:	83 c4 14             	add    $0x14,%esp
    d85f:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d864:	5b                   	pop    %ebx
    d865:	5d                   	pop    %ebp
    d866:	c3                   	ret    
    d867:	89 f6                	mov    %esi,%esi
    d869:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000d870 <bithenge_subblob_expression>:
    d870:	55                   	push   %ebp
    d871:	89 e5                	mov    %esp,%ebp
    d873:	57                   	push   %edi
    d874:	56                   	push   %esi
    d875:	53                   	push   %ebx
    d876:	83 ec 2c             	sub    $0x2c,%esp
    d879:	8b 55 18             	mov    0x18(%ebp),%edx
    d87c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    d87f:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
    d886:	8b 75 10             	mov    0x10(%ebp),%esi
    d889:	8b 5d 14             	mov    0x14(%ebp),%ebx
    d88c:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    d88f:	e8 3c 28 01 00       	call   200d0 <malloc>
    d894:	85 c0                	test   %eax,%eax
    d896:	74 30                	je     d8c8 <bithenge_subblob_expression+0x58>
    d898:	8a 55 e4             	mov    -0x1c(%ebp),%dl
    d89b:	c7 00 fc d5 02 00    	movl   $0x2d5fc,(%eax)
    d8a1:	88 50 14             	mov    %dl,0x14(%eax)
    d8a4:	8b 55 08             	mov    0x8(%ebp),%edx
    d8a7:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
    d8ae:	89 78 08             	mov    %edi,0x8(%eax)
    d8b1:	89 70 0c             	mov    %esi,0xc(%eax)
    d8b4:	89 58 10             	mov    %ebx,0x10(%eax)
    d8b7:	89 02                	mov    %eax,(%edx)
    d8b9:	83 c4 2c             	add    $0x2c,%esp
    d8bc:	31 c0                	xor    %eax,%eax
    d8be:	5b                   	pop    %ebx
    d8bf:	5e                   	pop    %esi
    d8c0:	5f                   	pop    %edi
    d8c1:	5d                   	pop    %ebp
    d8c2:	c3                   	ret    
    d8c3:	90                   	nop
    d8c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    d8c8:	85 ff                	test   %edi,%edi
    d8ca:	74 19                	je     d8e5 <bithenge_subblob_expression+0x75>
    d8cc:	8b 0f                	mov    (%edi),%ecx
    d8ce:	85 c9                	test   %ecx,%ecx
    d8d0:	0f 84 8e 00 00 00    	je     d964 <bithenge_subblob_expression+0xf4>
    d8d6:	8b 47 04             	mov    0x4(%edi),%eax
    d8d9:	85 c0                	test   %eax,%eax
    d8db:	74 6b                	je     d948 <bithenge_subblob_expression+0xd8>
    d8dd:	48                   	dec    %eax
    d8de:	89 47 04             	mov    %eax,0x4(%edi)
    d8e1:	85 c0                	test   %eax,%eax
    d8e3:	74 4b                	je     d930 <bithenge_subblob_expression+0xc0>
    d8e5:	85 f6                	test   %esi,%esi
    d8e7:	74 15                	je     d8fe <bithenge_subblob_expression+0x8e>
    d8e9:	8b 0e                	mov    (%esi),%ecx
    d8eb:	85 c9                	test   %ecx,%ecx
    d8ed:	74 75                	je     d964 <bithenge_subblob_expression+0xf4>
    d8ef:	8b 46 04             	mov    0x4(%esi),%eax
    d8f2:	85 c0                	test   %eax,%eax
    d8f4:	74 52                	je     d948 <bithenge_subblob_expression+0xd8>
    d8f6:	48                   	dec    %eax
    d8f7:	89 46 04             	mov    %eax,0x4(%esi)
    d8fa:	85 c0                	test   %eax,%eax
    d8fc:	74 3a                	je     d938 <bithenge_subblob_expression+0xc8>
    d8fe:	85 db                	test   %ebx,%ebx
    d900:	74 15                	je     d917 <bithenge_subblob_expression+0xa7>
    d902:	8b 13                	mov    (%ebx),%edx
    d904:	85 d2                	test   %edx,%edx
    d906:	74 5c                	je     d964 <bithenge_subblob_expression+0xf4>
    d908:	8b 43 04             	mov    0x4(%ebx),%eax
    d90b:	85 c0                	test   %eax,%eax
    d90d:	74 39                	je     d948 <bithenge_subblob_expression+0xd8>
    d90f:	48                   	dec    %eax
    d910:	89 43 04             	mov    %eax,0x4(%ebx)
    d913:	85 c0                	test   %eax,%eax
    d915:	74 29                	je     d940 <bithenge_subblob_expression+0xd0>
    d917:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    d91e:	e8 bd 28 01 00       	call   201e0 <free>
    d923:	83 c4 2c             	add    $0x2c,%esp
    d926:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    d92b:	5b                   	pop    %ebx
    d92c:	5e                   	pop    %esi
    d92d:	5f                   	pop    %edi
    d92e:	5d                   	pop    %ebp
    d92f:	c3                   	ret    
    d930:	89 3c 24             	mov    %edi,(%esp)
    d933:	ff 51 04             	call   *0x4(%ecx)
    d936:	eb ad                	jmp    d8e5 <bithenge_subblob_expression+0x75>
    d938:	89 34 24             	mov    %esi,(%esp)
    d93b:	ff 51 04             	call   *0x4(%ecx)
    d93e:	eb be                	jmp    d8fe <bithenge_subblob_expression+0x8e>
    d940:	89 1c 24             	mov    %ebx,(%esp)
    d943:	ff 52 04             	call   *0x4(%edx)
    d946:	eb cf                	jmp    d917 <bithenge_subblob_expression+0xa7>
    d948:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    d94f:	00 
    d950:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    d957:	00 
    d958:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    d95f:	e8 4c cf 01 00       	call   2a8b0 <assert_abort>
    d964:	e8 92 0b 00 00       	call   e4fb <bithenge_expression_dec_ref.part.6>
    d969:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000d970 <bithenge_param_wrapper>:
    d970:	55                   	push   %ebp
    d971:	89 e5                	mov    %esp,%ebp
    d973:	57                   	push   %edi
    d974:	56                   	push   %esi
    d975:	53                   	push   %ebx
    d976:	83 ec 2c             	sub    $0x2c,%esp
    d979:	8b 45 0c             	mov    0xc(%ebp),%eax
    d97c:	8b 5d 10             	mov    0x10(%ebp),%ebx
    d97f:	85 c0                	test   %eax,%eax
    d981:	0f 84 16 01 00 00    	je     da9d <bithenge_param_wrapper+0x12d>
    d987:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    d98a:	8b 71 08             	mov    0x8(%ecx),%esi
    d98d:	c7 04 24 14 00 00 00 	movl   $0x14,(%esp)
    d994:	e8 37 27 01 00       	call   200d0 <malloc>
    d999:	89 c7                	mov    %eax,%edi
    d99b:	85 c0                	test   %eax,%eax
    d99d:	0f 84 cd 00 00 00    	je     da70 <bithenge_param_wrapper+0x100>
    d9a3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    d9aa:	00 
    d9ab:	c7 44 24 04 04 d6 02 	movl   $0x2d604,0x4(%esp)
    d9b2:	00 
    d9b3:	89 04 24             	mov    %eax,(%esp)
    d9b6:	e8 25 bb ff ff       	call   94e0 <bithenge_init_transform>
    d9bb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    d9be:	85 c0                	test   %eax,%eax
    d9c0:	0f 84 8a 00 00 00    	je     da50 <bithenge_param_wrapper+0xe0>
    d9c6:	89 3c 24             	mov    %edi,(%esp)
    d9c9:	31 ff                	xor    %edi,%edi
    d9cb:	e8 10 28 01 00       	call   201e0 <free>
    d9d0:	85 f6                	test   %esi,%esi
    d9d2:	7e 33                	jle    da07 <bithenge_param_wrapper+0x97>
    d9d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    d9d8:	8b 04 bb             	mov    (%ebx,%edi,4),%eax
    d9db:	85 c0                	test   %eax,%eax
    d9dd:	74 23                	je     da02 <bithenge_param_wrapper+0x92>
    d9df:	8b 08                	mov    (%eax),%ecx
    d9e1:	85 c9                	test   %ecx,%ecx
    d9e3:	0f 84 93 00 00 00    	je     da7c <bithenge_param_wrapper+0x10c>
    d9e9:	8b 50 04             	mov    0x4(%eax),%edx
    d9ec:	85 d2                	test   %edx,%edx
    d9ee:	0f 84 8d 00 00 00    	je     da81 <bithenge_param_wrapper+0x111>
    d9f4:	4a                   	dec    %edx
    d9f5:	89 50 04             	mov    %edx,0x4(%eax)
    d9f8:	85 d2                	test   %edx,%edx
    d9fa:	75 06                	jne    da02 <bithenge_param_wrapper+0x92>
    d9fc:	89 04 24             	mov    %eax,(%esp)
    d9ff:	ff 51 04             	call   *0x4(%ecx)
    da02:	47                   	inc    %edi
    da03:	39 f7                	cmp    %esi,%edi
    da05:	75 d1                	jne    d9d8 <bithenge_param_wrapper+0x68>
    da07:	89 1c 24             	mov    %ebx,(%esp)
    da0a:	e8 d1 27 01 00       	call   201e0 <free>
    da0f:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    da12:	8b 11                	mov    (%ecx),%edx
    da14:	85 d2                	test   %edx,%edx
    da16:	0f 84 a2 00 00 00    	je     dabe <bithenge_param_wrapper+0x14e>
    da1c:	8b 41 04             	mov    0x4(%ecx),%eax
    da1f:	85 c0                	test   %eax,%eax
    da21:	74 7f                	je     daa2 <bithenge_param_wrapper+0x132>
    da23:	48                   	dec    %eax
    da24:	89 41 04             	mov    %eax,0x4(%ecx)
    da27:	85 c0                	test   %eax,%eax
    da29:	74 0d                	je     da38 <bithenge_param_wrapper+0xc8>
    da2b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    da2e:	83 c4 2c             	add    $0x2c,%esp
    da31:	5b                   	pop    %ebx
    da32:	5e                   	pop    %esi
    da33:	5f                   	pop    %edi
    da34:	5d                   	pop    %ebp
    da35:	c3                   	ret    
    da36:	66 90                	xchg   %ax,%ax
    da38:	89 0c 24             	mov    %ecx,(%esp)
    da3b:	ff 52 0c             	call   *0xc(%edx)
    da3e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    da41:	83 c4 2c             	add    $0x2c,%esp
    da44:	5b                   	pop    %ebx
    da45:	5e                   	pop    %esi
    da46:	5f                   	pop    %edi
    da47:	5d                   	pop    %ebp
    da48:	c3                   	ret    
    da49:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    da50:	8b 45 08             	mov    0x8(%ebp),%eax
    da53:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    da56:	89 4f 0c             	mov    %ecx,0xc(%edi)
    da59:	89 5f 10             	mov    %ebx,0x10(%edi)
    da5c:	89 38                	mov    %edi,(%eax)
    da5e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    da61:	83 c4 2c             	add    $0x2c,%esp
    da64:	5b                   	pop    %ebx
    da65:	5e                   	pop    %esi
    da66:	5f                   	pop    %edi
    da67:	5d                   	pop    %ebp
    da68:	c3                   	ret    
    da69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    da70:	c7 45 e4 fe ff ff ff 	movl   $0xfffffffe,-0x1c(%ebp)
    da77:	e9 4a ff ff ff       	jmp    d9c6 <bithenge_param_wrapper+0x56>
    da7c:	e8 7a 0a 00 00       	call   e4fb <bithenge_expression_dec_ref.part.6>
    da81:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    da88:	00 
    da89:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    da90:	00 
    da91:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    da98:	e8 13 ce 01 00       	call   2a8b0 <assert_abort>
    da9d:	e8 7b 0a 00 00       	call   e51d <bithenge_transform_num_params.part.7>
    daa2:	c7 44 24 08 75 00 00 	movl   $0x75,0x8(%esp)
    daa9:	00 
    daaa:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    dab1:	00 
    dab2:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    dab9:	e8 f2 cd 01 00       	call   2a8b0 <assert_abort>
    dabe:	c7 44 24 08 74 00 00 	movl   $0x74,0x8(%esp)
    dac5:	00 
    dac6:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    dacd:	00 
    dace:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    dad5:	e8 d6 cd 01 00       	call   2a8b0 <assert_abort>
    dada:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000dae0 <bithenge_expression_transform>:
    dae0:	55                   	push   %ebp
    dae1:	89 e5                	mov    %esp,%ebp
    dae3:	56                   	push   %esi
    dae4:	53                   	push   %ebx
    dae5:	83 ec 20             	sub    $0x20,%esp
    dae8:	8b 75 0c             	mov    0xc(%ebp),%esi
    daeb:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
    daf2:	e8 d9 25 01 00       	call   200d0 <malloc>
    daf7:	89 c3                	mov    %eax,%ebx
    daf9:	85 c0                	test   %eax,%eax
    dafb:	74 73                	je     db70 <bithenge_expression_transform+0x90>
    dafd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    db04:	00 
    db05:	c7 44 24 04 14 d6 02 	movl   $0x2d614,0x4(%esp)
    db0c:	00 
    db0d:	89 04 24             	mov    %eax,(%esp)
    db10:	e8 cb b9 ff ff       	call   94e0 <bithenge_init_transform>
    db15:	85 c0                	test   %eax,%eax
    db17:	74 47                	je     db60 <bithenge_expression_transform+0x80>
    db19:	89 1c 24             	mov    %ebx,(%esp)
    db1c:	89 45 f4             	mov    %eax,-0xc(%ebp)
    db1f:	e8 bc 26 01 00       	call   201e0 <free>
    db24:	85 f6                	test   %esi,%esi
    db26:	8b 45 f4             	mov    -0xc(%ebp),%eax
    db29:	74 15                	je     db40 <bithenge_expression_transform+0x60>
    db2b:	8b 0e                	mov    (%esi),%ecx
    db2d:	85 c9                	test   %ecx,%ecx
    db2f:	74 46                	je     db77 <bithenge_expression_transform+0x97>
    db31:	8b 56 04             	mov    0x4(%esi),%edx
    db34:	85 d2                	test   %edx,%edx
    db36:	74 44                	je     db7c <bithenge_expression_transform+0x9c>
    db38:	4a                   	dec    %edx
    db39:	89 56 04             	mov    %edx,0x4(%esi)
    db3c:	85 d2                	test   %edx,%edx
    db3e:	74 08                	je     db48 <bithenge_expression_transform+0x68>
    db40:	83 c4 20             	add    $0x20,%esp
    db43:	5b                   	pop    %ebx
    db44:	5e                   	pop    %esi
    db45:	5d                   	pop    %ebp
    db46:	c3                   	ret    
    db47:	90                   	nop
    db48:	89 34 24             	mov    %esi,(%esp)
    db4b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    db4e:	ff 51 04             	call   *0x4(%ecx)
    db51:	8b 45 f4             	mov    -0xc(%ebp),%eax
    db54:	83 c4 20             	add    $0x20,%esp
    db57:	5b                   	pop    %ebx
    db58:	5e                   	pop    %esi
    db59:	5d                   	pop    %ebp
    db5a:	c3                   	ret    
    db5b:	90                   	nop
    db5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    db60:	8b 55 08             	mov    0x8(%ebp),%edx
    db63:	89 73 0c             	mov    %esi,0xc(%ebx)
    db66:	89 1a                	mov    %ebx,(%edx)
    db68:	83 c4 20             	add    $0x20,%esp
    db6b:	5b                   	pop    %ebx
    db6c:	5e                   	pop    %esi
    db6d:	5d                   	pop    %ebp
    db6e:	c3                   	ret    
    db6f:	90                   	nop
    db70:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    db75:	eb a2                	jmp    db19 <bithenge_expression_transform+0x39>
    db77:	e8 7f 09 00 00       	call   e4fb <bithenge_expression_dec_ref.part.6>
    db7c:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    db83:	00 
    db84:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    db8b:	00 
    db8c:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    db93:	e8 18 cd 01 00       	call   2a8b0 <assert_abort>
    db98:	90                   	nop
    db99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000dba0 <bithenge_inputless_transform>:
    dba0:	55                   	push   %ebp
    dba1:	89 e5                	mov    %esp,%ebp
    dba3:	56                   	push   %esi
    dba4:	53                   	push   %ebx
    dba5:	83 ec 20             	sub    $0x20,%esp
    dba8:	8b 75 0c             	mov    0xc(%ebp),%esi
    dbab:	c7 04 24 10 00 00 00 	movl   $0x10,(%esp)
    dbb2:	e8 19 25 01 00       	call   200d0 <malloc>
    dbb7:	89 c3                	mov    %eax,%ebx
    dbb9:	85 c0                	test   %eax,%eax
    dbbb:	74 73                	je     dc30 <bithenge_inputless_transform+0x90>
    dbbd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    dbc4:	00 
    dbc5:	c7 44 24 04 24 d6 02 	movl   $0x2d624,0x4(%esp)
    dbcc:	00 
    dbcd:	89 04 24             	mov    %eax,(%esp)
    dbd0:	e8 0b b9 ff ff       	call   94e0 <bithenge_init_transform>
    dbd5:	85 c0                	test   %eax,%eax
    dbd7:	74 47                	je     dc20 <bithenge_inputless_transform+0x80>
    dbd9:	89 1c 24             	mov    %ebx,(%esp)
    dbdc:	89 45 f4             	mov    %eax,-0xc(%ebp)
    dbdf:	e8 fc 25 01 00       	call   201e0 <free>
    dbe4:	85 f6                	test   %esi,%esi
    dbe6:	8b 45 f4             	mov    -0xc(%ebp),%eax
    dbe9:	74 15                	je     dc00 <bithenge_inputless_transform+0x60>
    dbeb:	8b 0e                	mov    (%esi),%ecx
    dbed:	85 c9                	test   %ecx,%ecx
    dbef:	74 46                	je     dc37 <bithenge_inputless_transform+0x97>
    dbf1:	8b 56 04             	mov    0x4(%esi),%edx
    dbf4:	85 d2                	test   %edx,%edx
    dbf6:	74 44                	je     dc3c <bithenge_inputless_transform+0x9c>
    dbf8:	4a                   	dec    %edx
    dbf9:	89 56 04             	mov    %edx,0x4(%esi)
    dbfc:	85 d2                	test   %edx,%edx
    dbfe:	74 08                	je     dc08 <bithenge_inputless_transform+0x68>
    dc00:	83 c4 20             	add    $0x20,%esp
    dc03:	5b                   	pop    %ebx
    dc04:	5e                   	pop    %esi
    dc05:	5d                   	pop    %ebp
    dc06:	c3                   	ret    
    dc07:	90                   	nop
    dc08:	89 34 24             	mov    %esi,(%esp)
    dc0b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    dc0e:	ff 51 04             	call   *0x4(%ecx)
    dc11:	8b 45 f4             	mov    -0xc(%ebp),%eax
    dc14:	83 c4 20             	add    $0x20,%esp
    dc17:	5b                   	pop    %ebx
    dc18:	5e                   	pop    %esi
    dc19:	5d                   	pop    %ebp
    dc1a:	c3                   	ret    
    dc1b:	90                   	nop
    dc1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    dc20:	8b 55 08             	mov    0x8(%ebp),%edx
    dc23:	89 73 0c             	mov    %esi,0xc(%ebx)
    dc26:	89 1a                	mov    %ebx,(%edx)
    dc28:	83 c4 20             	add    $0x20,%esp
    dc2b:	5b                   	pop    %ebx
    dc2c:	5e                   	pop    %esi
    dc2d:	5d                   	pop    %ebp
    dc2e:	c3                   	ret    
    dc2f:	90                   	nop
    dc30:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    dc35:	eb a2                	jmp    dbd9 <bithenge_inputless_transform+0x39>
    dc37:	e8 bf 08 00 00       	call   e4fb <bithenge_expression_dec_ref.part.6>
    dc3c:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    dc43:	00 
    dc44:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    dc4b:	00 
    dc4c:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    dc53:	e8 58 cc 01 00       	call   2a8b0 <assert_abort>
    dc58:	90                   	nop
    dc59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000dc60 <bithenge_concat_blob>:
    dc60:	55                   	push   %ebp
    dc61:	89 e5                	mov    %esp,%ebp
    dc63:	57                   	push   %edi
    dc64:	56                   	push   %esi
    dc65:	53                   	push   %ebx
    dc66:	83 ec 2c             	sub    $0x2c,%esp
    dc69:	8b 45 08             	mov    0x8(%ebp),%eax
    dc6c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    dc6f:	8b 75 10             	mov    0x10(%ebp),%esi
    dc72:	85 c0                	test   %eax,%eax
    dc74:	0f 84 d5 00 00 00    	je     dd4f <bithenge_concat_blob+0xef>
    dc7a:	85 db                	test   %ebx,%ebx
    dc7c:	0f 84 b1 00 00 00    	je     dd33 <bithenge_concat_blob+0xd3>
    dc82:	85 f6                	test   %esi,%esi
    dc84:	0f 84 8d 00 00 00    	je     dd17 <bithenge_concat_blob+0xb7>
    dc8a:	c7 04 24 28 00 00 00 	movl   $0x28,(%esp)
    dc91:	e8 3a 24 01 00       	call   200d0 <malloc>
    dc96:	89 c7                	mov    %eax,%edi
    dc98:	85 c0                	test   %eax,%eax
    dc9a:	74 74                	je     dd10 <bithenge_concat_blob+0xb0>
    dc9c:	8d 48 18             	lea    0x18(%eax),%ecx
    dc9f:	8b 43 08             	mov    0x8(%ebx),%eax
    dca2:	85 c0                	test   %eax,%eax
    dca4:	0f 84 c1 00 00 00    	je     dd6b <bithenge_concat_blob+0x10b>
    dcaa:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    dcae:	89 1c 24             	mov    %ebx,(%esp)
    dcb1:	ff 10                	call   *(%eax)
    dcb3:	85 c0                	test   %eax,%eax
    dcb5:	74 29                	je     dce0 <bithenge_concat_blob+0x80>
    dcb7:	89 1c 24             	mov    %ebx,(%esp)
    dcba:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    dcbd:	e8 fe c5 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    dcc2:	89 34 24             	mov    %esi,(%esp)
    dcc5:	e8 f6 c5 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    dcca:	89 3c 24             	mov    %edi,(%esp)
    dccd:	e8 0e 25 01 00       	call   201e0 <free>
    dcd2:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    dcd5:	83 c4 2c             	add    $0x2c,%esp
    dcd8:	5b                   	pop    %ebx
    dcd9:	5e                   	pop    %esi
    dcda:	5f                   	pop    %edi
    dcdb:	5d                   	pop    %ebp
    dcdc:	c3                   	ret    
    dcdd:	8d 76 00             	lea    0x0(%esi),%esi
    dce0:	c7 44 24 04 34 d6 02 	movl   $0x2d634,0x4(%esp)
    dce7:	00 
    dce8:	89 3c 24             	mov    %edi,(%esp)
    dceb:	e8 00 da ff ff       	call   b6f0 <bithenge_init_random_access_blob>
    dcf0:	85 c0                	test   %eax,%eax
    dcf2:	75 c3                	jne    dcb7 <bithenge_concat_blob+0x57>
    dcf4:	8b 55 08             	mov    0x8(%ebp),%edx
    dcf7:	89 5f 10             	mov    %ebx,0x10(%edi)
    dcfa:	89 77 14             	mov    %esi,0x14(%edi)
    dcfd:	c7 47 20 00 00 00 00 	movl   $0x0,0x20(%edi)
    dd04:	c7 47 24 00 00 00 00 	movl   $0x0,0x24(%edi)
    dd0b:	89 3a                	mov    %edi,(%edx)
    dd0d:	eb c6                	jmp    dcd5 <bithenge_concat_blob+0x75>
    dd0f:	90                   	nop
    dd10:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    dd15:	eb a0                	jmp    dcb7 <bithenge_concat_blob+0x57>
    dd17:	c7 44 24 08 65 04 00 	movl   $0x465,0x8(%esp)
    dd1e:	00 
    dd1f:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    dd26:	00 
    dd27:	c7 04 24 7c e7 02 00 	movl   $0x2e77c,(%esp)
    dd2e:	e8 7d cb 01 00       	call   2a8b0 <assert_abort>
    dd33:	c7 44 24 08 64 04 00 	movl   $0x464,0x8(%esp)
    dd3a:	00 
    dd3b:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    dd42:	00 
    dd43:	c7 04 24 81 e2 02 00 	movl   $0x2e281,(%esp)
    dd4a:	e8 61 cb 01 00       	call   2a8b0 <assert_abort>
    dd4f:	c7 44 24 08 63 04 00 	movl   $0x463,0x8(%esp)
    dd56:	00 
    dd57:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    dd5e:	00 
    dd5f:	c7 04 24 92 d3 02 00 	movl   $0x2d392,(%esp)
    dd66:	e8 45 cb 01 00       	call   2a8b0 <assert_abort>
    dd6b:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    dd72:	00 
    dd73:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    dd7a:	00 
    dd7b:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    dd82:	e8 29 cb 01 00       	call   2a8b0 <assert_abort>
    dd87:	89 f6                	mov    %esi,%esi
    dd89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000dd90 <bithenge_concat_blob_lazy>:
    dd90:	55                   	push   %ebp
    dd91:	89 e5                	mov    %esp,%ebp
    dd93:	57                   	push   %edi
    dd94:	56                   	push   %esi
    dd95:	53                   	push   %ebx
    dd96:	83 ec 2c             	sub    $0x2c,%esp
    dd99:	8b 45 08             	mov    0x8(%ebp),%eax
    dd9c:	8b 75 0c             	mov    0xc(%ebp),%esi
    dd9f:	8b 5d 10             	mov    0x10(%ebp),%ebx
    dda2:	85 c0                	test   %eax,%eax
    dda4:	0f 84 04 01 00 00    	je     deae <bithenge_concat_blob_lazy+0x11e>
    ddaa:	85 f6                	test   %esi,%esi
    ddac:	0f 84 34 01 00 00    	je     dee6 <bithenge_concat_blob_lazy+0x156>
    ddb2:	85 db                	test   %ebx,%ebx
    ddb4:	0f 84 10 01 00 00    	je     deca <bithenge_concat_blob_lazy+0x13a>
    ddba:	8b 45 14             	mov    0x14(%ebp),%eax
    ddbd:	85 c0                	test   %eax,%eax
    ddbf:	0f 84 cd 00 00 00    	je     de92 <bithenge_concat_blob_lazy+0x102>
    ddc5:	c7 04 24 28 00 00 00 	movl   $0x28,(%esp)
    ddcc:	e8 ff 22 01 00       	call   200d0 <malloc>
    ddd1:	89 c7                	mov    %eax,%edi
    ddd3:	85 c0                	test   %eax,%eax
    ddd5:	0f 84 ad 00 00 00    	je     de88 <bithenge_concat_blob_lazy+0xf8>
    dddb:	8d 50 18             	lea    0x18(%eax),%edx
    ddde:	8b 46 08             	mov    0x8(%esi),%eax
    dde1:	85 c0                	test   %eax,%eax
    dde3:	0f 84 19 01 00 00    	je     df02 <bithenge_concat_blob_lazy+0x172>
    dde9:	89 54 24 04          	mov    %edx,0x4(%esp)
    dded:	89 34 24             	mov    %esi,(%esp)
    ddf0:	ff 10                	call   *(%eax)
    ddf2:	85 c0                	test   %eax,%eax
    ddf4:	74 62                	je     de58 <bithenge_concat_blob_lazy+0xc8>
    ddf6:	89 34 24             	mov    %esi,(%esp)
    ddf9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    ddfc:	e8 bf c4 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    de01:	8b 0b                	mov    (%ebx),%ecx
    de03:	85 c9                	test   %ecx,%ecx
    de05:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    de08:	0f 84 2c 01 00 00    	je     df3a <bithenge_concat_blob_lazy+0x1aa>
    de0e:	8b 53 04             	mov    0x4(%ebx),%edx
    de11:	85 d2                	test   %edx,%edx
    de13:	0f 84 05 01 00 00    	je     df1e <bithenge_concat_blob_lazy+0x18e>
    de19:	4a                   	dec    %edx
    de1a:	89 53 04             	mov    %edx,0x4(%ebx)
    de1d:	85 d2                	test   %edx,%edx
    de1f:	74 27                	je     de48 <bithenge_concat_blob_lazy+0xb8>
    de21:	8b 55 14             	mov    0x14(%ebp),%edx
    de24:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    de27:	89 14 24             	mov    %edx,(%esp)
    de2a:	e8 91 ba ff ff       	call   98c0 <bithenge_scope_dec_ref>
    de2f:	89 3c 24             	mov    %edi,(%esp)
    de32:	e8 a9 23 01 00       	call   201e0 <free>
    de37:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    de3a:	83 c4 2c             	add    $0x2c,%esp
    de3d:	5b                   	pop    %ebx
    de3e:	5e                   	pop    %esi
    de3f:	5f                   	pop    %edi
    de40:	5d                   	pop    %ebp
    de41:	c3                   	ret    
    de42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    de48:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    de4b:	89 1c 24             	mov    %ebx,(%esp)
    de4e:	ff 51 04             	call   *0x4(%ecx)
    de51:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    de54:	eb cb                	jmp    de21 <bithenge_concat_blob_lazy+0x91>
    de56:	66 90                	xchg   %ax,%ax
    de58:	c7 44 24 04 34 d6 02 	movl   $0x2d634,0x4(%esp)
    de5f:	00 
    de60:	89 3c 24             	mov    %edi,(%esp)
    de63:	e8 88 d8 ff ff       	call   b6f0 <bithenge_init_random_access_blob>
    de68:	85 c0                	test   %eax,%eax
    de6a:	75 8a                	jne    ddf6 <bithenge_concat_blob_lazy+0x66>
    de6c:	8b 55 14             	mov    0x14(%ebp),%edx
    de6f:	89 77 10             	mov    %esi,0x10(%edi)
    de72:	89 57 24             	mov    %edx,0x24(%edi)
    de75:	8b 55 08             	mov    0x8(%ebp),%edx
    de78:	c7 47 14 00 00 00 00 	movl   $0x0,0x14(%edi)
    de7f:	89 5f 20             	mov    %ebx,0x20(%edi)
    de82:	89 3a                	mov    %edi,(%edx)
    de84:	eb b4                	jmp    de3a <bithenge_concat_blob_lazy+0xaa>
    de86:	66 90                	xchg   %ax,%ax
    de88:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    de8d:	e9 64 ff ff ff       	jmp    ddf6 <bithenge_concat_blob_lazy+0x66>
    de92:	c7 44 24 08 90 04 00 	movl   $0x490,0x8(%esp)
    de99:	00 
    de9a:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    dea1:	00 
    dea2:	c7 04 24 1a d1 02 00 	movl   $0x2d11a,(%esp)
    dea9:	e8 02 ca 01 00       	call   2a8b0 <assert_abort>
    deae:	c7 44 24 08 8d 04 00 	movl   $0x48d,0x8(%esp)
    deb5:	00 
    deb6:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    debd:	00 
    debe:	c7 04 24 92 d3 02 00 	movl   $0x2d392,(%esp)
    dec5:	e8 e6 c9 01 00       	call   2a8b0 <assert_abort>
    deca:	c7 44 24 08 8f 04 00 	movl   $0x48f,0x8(%esp)
    ded1:	00 
    ded2:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    ded9:	00 
    deda:	c7 04 24 2b d5 02 00 	movl   $0x2d52b,(%esp)
    dee1:	e8 ca c9 01 00       	call   2a8b0 <assert_abort>
    dee6:	c7 44 24 08 8e 04 00 	movl   $0x48e,0x8(%esp)
    deed:	00 
    deee:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    def5:	00 
    def6:	c7 04 24 81 e2 02 00 	movl   $0x2e281,(%esp)
    defd:	e8 ae c9 01 00       	call   2a8b0 <assert_abort>
    df02:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
    df09:	00 
    df0a:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    df11:	00 
    df12:	c7 04 24 75 cd 02 00 	movl   $0x2cd75,(%esp)
    df19:	e8 92 c9 01 00       	call   2a8b0 <assert_abort>
    df1e:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)
    df25:	00 
    df26:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    df2d:	00 
    df2e:	c7 04 24 c3 cc 02 00 	movl   $0x2ccc3,(%esp)
    df35:	e8 76 c9 01 00       	call   2a8b0 <assert_abort>
    df3a:	e8 bc 05 00 00       	call   e4fb <bithenge_expression_dec_ref.part.6>
    df3f:	90                   	nop

0000df40 <binary_expression_evaluate>:
    df40:	55                   	push   %ebp
    df41:	89 e5                	mov    %esp,%ebp
    df43:	57                   	push   %edi
    df44:	56                   	push   %esi
    df45:	53                   	push   %ebx
    df46:	83 ec 4c             	sub    $0x4c,%esp
    df49:	8b 75 08             	mov    0x8(%ebp),%esi
    df4c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    df4f:	8b 46 0c             	mov    0xc(%esi),%eax
    df52:	85 c0                	test   %eax,%eax
    df54:	0f 84 f4 04 00 00    	je     e44e <binary_expression_evaluate+0x50e>
    df5a:	8b 10                	mov    (%eax),%edx
    df5c:	85 d2                	test   %edx,%edx
    df5e:	0f 84 ef 04 00 00    	je     e453 <binary_expression_evaluate+0x513>
    df64:	8d 4d e0             	lea    -0x20(%ebp),%ecx
    df67:	89 7c 24 04          	mov    %edi,0x4(%esp)
    df6b:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    df6f:	89 04 24             	mov    %eax,(%esp)
    df72:	ff 12                	call   *(%edx)
    df74:	89 c3                	mov    %eax,%ebx
    df76:	85 c0                	test   %eax,%eax
    df78:	0f 85 8d 00 00 00    	jne    e00b <binary_expression_evaluate+0xcb>
    df7e:	83 7e 08 0f          	cmpl   $0xf,0x8(%esi)
    df82:	0f 84 90 00 00 00    	je     e018 <binary_expression_evaluate+0xd8>
    df88:	8b 46 10             	mov    0x10(%esi),%eax
    df8b:	85 c0                	test   %eax,%eax
    df8d:	0f 84 bb 04 00 00    	je     e44e <binary_expression_evaluate+0x50e>
    df93:	8b 10                	mov    (%eax),%edx
    df95:	85 d2                	test   %edx,%edx
    df97:	0f 84 b6 04 00 00    	je     e453 <binary_expression_evaluate+0x513>
    df9d:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
    dfa0:	89 7c 24 04          	mov    %edi,0x4(%esp)
    dfa4:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    dfa8:	89 04 24             	mov    %eax,(%esp)
    dfab:	ff 12                	call   *(%edx)
    dfad:	85 c0                	test   %eax,%eax
    dfaf:	0f 85 7b 01 00 00    	jne    e130 <binary_expression_evaluate+0x1f0>
    dfb5:	8b 56 08             	mov    0x8(%esi),%edx
    dfb8:	c6 45 dc 00          	movb   $0x0,-0x24(%ebp)
    dfbc:	89 55 c0             	mov    %edx,-0x40(%ebp)
    dfbf:	83 fa 0f             	cmp    $0xf,%edx
    dfc2:	0f 86 b8 00 00 00    	jbe    e080 <binary_expression_evaluate+0x140>
    dfc8:	31 db                	xor    %ebx,%ebx
    dfca:	31 d2                	xor    %edx,%edx
    dfcc:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    dfd3:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    dfda:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
    dfe1:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
    dfe8:	83 7d c0 0f          	cmpl   $0xf,-0x40(%ebp)
    dfec:	0f 86 2e 01 00 00    	jbe    e120 <binary_expression_evaluate+0x1e0>
    dff2:	8b 55 e0             	mov    -0x20(%ebp),%edx
    dff5:	89 c3                	mov    %eax,%ebx
    dff7:	90                   	nop
    dff8:	89 14 24             	mov    %edx,(%esp)
    dffb:	e8 c0 c2 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    e000:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    e003:	89 04 24             	mov    %eax,(%esp)
    e006:	e8 b5 c2 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    e00b:	83 c4 4c             	add    $0x4c,%esp
    e00e:	89 d8                	mov    %ebx,%eax
    e010:	5b                   	pop    %ebx
    e011:	5e                   	pop    %esi
    e012:	5f                   	pop    %edi
    e013:	5d                   	pop    %ebp
    e014:	c3                   	ret    
    e015:	8d 76 00             	lea    0x0(%esi),%esi
    e018:	c6 45 dc 00          	movb   $0x0,-0x24(%ebp)
    e01c:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e01f:	83 3a 05             	cmpl   $0x5,(%edx)
    e022:	75 d4                	jne    dff8 <binary_expression_evaluate+0xb8>
    e024:	8b 46 10             	mov    0x10(%esi),%eax
    e027:	85 c0                	test   %eax,%eax
    e029:	0f 84 61 04 00 00    	je     e490 <binary_expression_evaluate+0x550>
    e02f:	8b 48 04             	mov    0x4(%eax),%ecx
    e032:	41                   	inc    %ecx
    e033:	85 ff                	test   %edi,%edi
    e035:	89 48 04             	mov    %ecx,0x4(%eax)
    e038:	0f 84 36 04 00 00    	je     e474 <binary_expression_evaluate+0x534>
    e03e:	8b 17                	mov    (%edi),%edx
    e040:	42                   	inc    %edx
    e041:	89 17                	mov    %edx,(%edi)
    e043:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e046:	83 3a 05             	cmpl   $0x5,(%edx)
    e049:	0f 85 20 04 00 00    	jne    e46f <binary_expression_evaluate+0x52f>
    e04f:	89 54 24 04          	mov    %edx,0x4(%esp)
    e053:	8b 55 10             	mov    0x10(%ebp),%edx
    e056:	89 14 24             	mov    %edx,(%esp)
    e059:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    e05d:	89 44 24 08          	mov    %eax,0x8(%esp)
    e061:	e8 2a fd ff ff       	call   dd90 <bithenge_concat_blob_lazy>
    e066:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
    e06d:	89 c3                	mov    %eax,%ebx
    e06f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    e076:	31 d2                	xor    %edx,%edx
    e078:	e9 7b ff ff ff       	jmp    dff8 <binary_expression_evaluate+0xb8>
    e07d:	8d 76 00             	lea    0x0(%esi),%esi
    e080:	ff 24 95 5c d5 02 00 	jmp    *0x2d55c(,%edx,4)
    e087:	90                   	nop
    e088:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e08b:	bb f2 ff ff ff       	mov    $0xfffffff2,%ebx
    e090:	83 3a 02             	cmpl   $0x2,(%edx)
    e093:	0f 85 5f ff ff ff    	jne    dff8 <binary_expression_evaluate+0xb8>
    e099:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    e09c:	83 38 02             	cmpl   $0x2,(%eax)
    e09f:	0f 85 53 ff ff ff    	jne    dff8 <binary_expression_evaluate+0xb8>
    e0a5:	8a 58 08             	mov    0x8(%eax),%bl
    e0a8:	8a 52 08             	mov    0x8(%edx),%dl
    e0ab:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
    e0b2:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    e0b9:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
    e0c0:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
    e0c7:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    e0cc:	e9 17 ff ff ff       	jmp    dfe8 <binary_expression_evaluate+0xa8>
    e0d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    e0d8:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e0db:	bb f2 ff ff ff       	mov    $0xfffffff2,%ebx
    e0e0:	83 3a 03             	cmpl   $0x3,(%edx)
    e0e3:	0f 85 0f ff ff ff    	jne    dff8 <binary_expression_evaluate+0xb8>
    e0e9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    e0ec:	83 38 03             	cmpl   $0x3,(%eax)
    e0ef:	0f 85 03 ff ff ff    	jne    dff8 <binary_expression_evaluate+0xb8>
    e0f5:	8b 4a 08             	mov    0x8(%edx),%ecx
    e0f8:	8b 5a 0c             	mov    0xc(%edx),%ebx
    e0fb:	89 4d c8             	mov    %ecx,-0x38(%ebp)
    e0fe:	89 5d cc             	mov    %ebx,-0x34(%ebp)
    e101:	8b 48 08             	mov    0x8(%eax),%ecx
    e104:	8b 58 0c             	mov    0xc(%eax),%ebx
    e107:	89 5d d4             	mov    %ebx,-0x2c(%ebp)
    e10a:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    e10d:	31 db                	xor    %ebx,%ebx
    e10f:	31 d2                	xor    %edx,%edx
    e111:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    e116:	e9 cd fe ff ff       	jmp    dfe8 <binary_expression_evaluate+0xa8>
    e11b:	90                   	nop
    e11c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e120:	8b 45 c0             	mov    -0x40(%ebp),%eax
    e123:	ff 24 85 9c d5 02 00 	jmp    *0x2d59c(,%eax,4)
    e12a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    e130:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e133:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    e136:	89 14 24             	mov    %edx,(%esp)
    e139:	e8 82 c1 ff ff       	call   a2c0 <bithenge_node_dec_ref>
    e13e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    e141:	89 c3                	mov    %eax,%ebx
    e143:	e9 c3 fe ff ff       	jmp    e00b <binary_expression_evaluate+0xcb>
    e148:	8b 45 10             	mov    0x10(%ebp),%eax
    e14b:	89 44 24 08          	mov    %eax,0x8(%esp)
    e14f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    e152:	89 44 24 04          	mov    %eax,0x4(%esp)
    e156:	8b 45 e0             	mov    -0x20(%ebp),%eax
    e159:	89 04 24             	mov    %eax,(%esp)
    e15c:	e8 0f c2 ff ff       	call   a370 <bithenge_node_get>
    e161:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    e168:	89 c3                	mov    %eax,%ebx
    e16a:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e16d:	e9 86 fe ff ff       	jmp    dff8 <binary_expression_evaluate+0xb8>
    e172:	09 da                	or     %ebx,%edx
    e174:	31 c0                	xor    %eax,%eax
    e176:	88 d0                	mov    %dl,%al
    e178:	8b 5d 10             	mov    0x10(%ebp),%ebx
    e17b:	89 44 24 04          	mov    %eax,0x4(%esp)
    e17f:	89 1c 24             	mov    %ebx,(%esp)
    e182:	e8 a9 c7 ff ff       	call   a930 <bithenge_new_boolean_node>
    e187:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e18a:	89 c3                	mov    %eax,%ebx
    e18c:	e9 67 fe ff ff       	jmp    dff8 <binary_expression_evaluate+0xb8>
    e191:	21 da                	and    %ebx,%edx
    e193:	31 c0                	xor    %eax,%eax
    e195:	88 d0                	mov    %dl,%al
    e197:	8b 4d 10             	mov    0x10(%ebp),%ecx
    e19a:	89 44 24 04          	mov    %eax,0x4(%esp)
    e19e:	89 0c 24             	mov    %ecx,(%esp)
    e1a1:	e8 8a c7 ff ff       	call   a930 <bithenge_new_boolean_node>
    e1a6:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e1a9:	89 c3                	mov    %eax,%ebx
    e1ab:	e9 48 fe ff ff       	jmp    dff8 <binary_expression_evaluate+0xb8>
    e1b0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    e1b3:	b8 01 00 00 00       	mov    $0x1,%eax
    e1b8:	39 55 cc             	cmp    %edx,-0x34(%ebp)
    e1bb:	7f bb                	jg     e178 <binary_expression_evaluate+0x238>
    e1bd:	7c 08                	jl     e1c7 <binary_expression_evaluate+0x287>
    e1bf:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    e1c2:	39 4d c8             	cmp    %ecx,-0x38(%ebp)
    e1c5:	77 b1                	ja     e178 <binary_expression_evaluate+0x238>
    e1c7:	31 c0                	xor    %eax,%eax
    e1c9:	eb ad                	jmp    e178 <binary_expression_evaluate+0x238>
    e1cb:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    e1ce:	b8 01 00 00 00       	mov    $0x1,%eax
    e1d3:	39 55 cc             	cmp    %edx,-0x34(%ebp)
    e1d6:	7c a0                	jl     e178 <binary_expression_evaluate+0x238>
    e1d8:	7f ed                	jg     e1c7 <binary_expression_evaluate+0x287>
    e1da:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    e1dd:	39 4d c8             	cmp    %ecx,-0x38(%ebp)
    e1e0:	72 96                	jb     e178 <binary_expression_evaluate+0x238>
    e1e2:	31 c0                	xor    %eax,%eax
    e1e4:	eb 92                	jmp    e178 <binary_expression_evaluate+0x238>
    e1e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    e1e9:	89 44 24 08          	mov    %eax,0x8(%esp)
    e1ed:	8b 45 e0             	mov    -0x20(%ebp),%eax
    e1f0:	89 44 24 04          	mov    %eax,0x4(%esp)
    e1f4:	8d 45 dc             	lea    -0x24(%ebp),%eax
    e1f7:	89 04 24             	mov    %eax,(%esp)
    e1fa:	e8 81 c8 ff ff       	call   aa80 <bithenge_node_equal>
    e1ff:	89 c3                	mov    %eax,%ebx
    e201:	85 c0                	test   %eax,%eax
    e203:	0f 85 61 ff ff ff    	jne    e16a <binary_expression_evaluate+0x22a>
    e209:	8a 45 dc             	mov    -0x24(%ebp),%al
    e20c:	8b 55 10             	mov    0x10(%ebp),%edx
    e20f:	83 f0 01             	xor    $0x1,%eax
    e212:	89 14 24             	mov    %edx,(%esp)
    e215:	25 ff 00 00 00       	and    $0xff,%eax
    e21a:	89 44 24 04          	mov    %eax,0x4(%esp)
    e21e:	e8 0d c7 ff ff       	call   a930 <bithenge_new_boolean_node>
    e223:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e226:	89 c3                	mov    %eax,%ebx
    e228:	e9 cb fd ff ff       	jmp    dff8 <binary_expression_evaluate+0xb8>
    e22d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    e230:	89 44 24 08          	mov    %eax,0x8(%esp)
    e234:	8b 45 e0             	mov    -0x20(%ebp),%eax
    e237:	89 44 24 04          	mov    %eax,0x4(%esp)
    e23b:	8d 45 dc             	lea    -0x24(%ebp),%eax
    e23e:	89 04 24             	mov    %eax,(%esp)
    e241:	e8 3a c8 ff ff       	call   aa80 <bithenge_node_equal>
    e246:	89 c3                	mov    %eax,%ebx
    e248:	85 c0                	test   %eax,%eax
    e24a:	0f 85 1a ff ff ff    	jne    e16a <binary_expression_evaluate+0x22a>
    e250:	31 c0                	xor    %eax,%eax
    e252:	8a 45 dc             	mov    -0x24(%ebp),%al
    e255:	89 44 24 04          	mov    %eax,0x4(%esp)
    e259:	8b 45 10             	mov    0x10(%ebp),%eax
    e25c:	89 04 24             	mov    %eax,(%esp)
    e25f:	e8 cc c6 ff ff       	call   a930 <bithenge_new_boolean_node>
    e264:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e267:	89 c3                	mov    %eax,%ebx
    e269:	e9 8a fd ff ff       	jmp    dff8 <binary_expression_evaluate+0xb8>
    e26e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    e271:	b8 01 00 00 00       	mov    $0x1,%eax
    e276:	39 55 cc             	cmp    %edx,-0x34(%ebp)
    e279:	0f 8f f9 fe ff ff    	jg     e178 <binary_expression_evaluate+0x238>
    e27f:	0f 8c 42 ff ff ff    	jl     e1c7 <binary_expression_evaluate+0x287>
    e285:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    e288:	39 4d c8             	cmp    %ecx,-0x38(%ebp)
    e28b:	0f 83 e7 fe ff ff    	jae    e178 <binary_expression_evaluate+0x238>
    e291:	31 c0                	xor    %eax,%eax
    e293:	e9 e0 fe ff ff       	jmp    e178 <binary_expression_evaluate+0x238>
    e298:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    e29b:	b8 01 00 00 00       	mov    $0x1,%eax
    e2a0:	39 55 cc             	cmp    %edx,-0x34(%ebp)
    e2a3:	0f 8c cf fe ff ff    	jl     e178 <binary_expression_evaluate+0x238>
    e2a9:	0f 8f 18 ff ff ff    	jg     e1c7 <binary_expression_evaluate+0x287>
    e2af:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    e2b2:	39 4d c8             	cmp    %ecx,-0x38(%ebp)
    e2b5:	0f 86 bd fe ff ff    	jbe    e178 <binary_expression_evaluate+0x238>
    e2bb:	31 c0                	xor    %eax,%eax
    e2bd:	e9 b6 fe ff ff       	jmp    e178 <binary_expression_evaluate+0x238>
    e2c2:	8b 5d d0             	mov    -0x30(%ebp),%ebx
    e2c5:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    e2c8:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    e2cb:	8b 75 c8             	mov    -0x38(%ebp),%esi
    e2ce:	0f af c6             	imul   %esi,%eax
    e2d1:	0f af cb             	imul   %ebx,%ecx
    e2d4:	01 c1                	add    %eax,%ecx
    e2d6:	8b 45 c8             	mov    -0x38(%ebp),%eax
    e2d9:	f7 65 d0             	mull   -0x30(%ebp)
    e2dc:	01 ca                	add    %ecx,%edx
    e2de:	89 45 d0             	mov    %eax,-0x30(%ebp)
    e2e1:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    e2e4:	8b 55 d0             	mov    -0x30(%ebp),%edx
    e2e7:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    e2ea:	89 54 24 04          	mov    %edx,0x4(%esp)
    e2ee:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    e2f2:	8b 4d 10             	mov    0x10(%ebp),%ecx
    e2f5:	89 0c 24             	mov    %ecx,(%esp)
    e2f8:	e8 83 c6 ff ff       	call   a980 <bithenge_new_integer_node>
    e2fd:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e300:	89 c3                	mov    %eax,%ebx
    e302:	e9 f1 fc ff ff       	jmp    dff8 <binary_expression_evaluate+0xb8>
    e307:	8b 45 c8             	mov    -0x38(%ebp),%eax
    e30a:	8b 55 cc             	mov    -0x34(%ebp),%edx
    e30d:	2b 45 d0             	sub    -0x30(%ebp),%eax
    e310:	1b 55 d4             	sbb    -0x2c(%ebp),%edx
    e313:	89 44 24 04          	mov    %eax,0x4(%esp)
    e317:	89 54 24 08          	mov    %edx,0x8(%esp)
    e31b:	eb d5                	jmp    e2f2 <binary_expression_evaluate+0x3b2>
    e31d:	8b 45 c8             	mov    -0x38(%ebp),%eax
    e320:	8b 55 cc             	mov    -0x34(%ebp),%edx
    e323:	03 45 d0             	add    -0x30(%ebp),%eax
    e326:	13 55 d4             	adc    -0x2c(%ebp),%edx
    e329:	89 44 24 04          	mov    %eax,0x4(%esp)
    e32d:	89 54 24 08          	mov    %edx,0x8(%esp)
    e331:	8b 55 10             	mov    0x10(%ebp),%edx
    e334:	89 14 24             	mov    %edx,(%esp)
    e337:	e8 44 c6 ff ff       	call   a980 <bithenge_new_integer_node>
    e33c:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e33f:	89 c3                	mov    %eax,%ebx
    e341:	e9 b2 fc ff ff       	jmp    dff8 <binary_expression_evaluate+0xb8>
    e346:	c7 44 24 08 df 00 00 	movl   $0xdf,0x8(%esp)
    e34d:	00 
    e34e:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    e355:	00 
    e356:	c7 04 24 c4 cd 02 00 	movl   $0x2cdc4,(%esp)
    e35d:	e8 4e c5 01 00       	call   2a8b0 <assert_abort>
    e362:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
    e366:	0f 8e bb 00 00 00    	jle    e427 <binary_expression_evaluate+0x4e7>
    e36c:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    e36f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
    e372:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    e376:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    e37a:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    e37d:	8b 5d cc             	mov    -0x34(%ebp),%ebx
    e380:	89 0c 24             	mov    %ecx,(%esp)
    e383:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    e387:	e8 64 e3 01 00       	call   2c6f0 <__moddi3>
    e38c:	8b 75 d0             	mov    -0x30(%ebp),%esi
    e38f:	89 d3                	mov    %edx,%ebx
    e391:	8b 7d d4             	mov    -0x2c(%ebp),%edi
    e394:	c1 fb 1f             	sar    $0x1f,%ebx
    e397:	c1 fb 1f             	sar    $0x1f,%ebx
    e39a:	89 d9                	mov    %ebx,%ecx
    e39c:	21 df                	and    %ebx,%edi
    e39e:	21 ce                	and    %ecx,%esi
    e3a0:	01 f0                	add    %esi,%eax
    e3a2:	8b 5d 10             	mov    0x10(%ebp),%ebx
    e3a5:	11 fa                	adc    %edi,%edx
    e3a7:	89 1c 24             	mov    %ebx,(%esp)
    e3aa:	89 54 24 08          	mov    %edx,0x8(%esp)
    e3ae:	89 44 24 04          	mov    %eax,0x4(%esp)
    e3b2:	e8 c9 c5 ff ff       	call   a980 <bithenge_new_integer_node>
    e3b7:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e3ba:	89 c3                	mov    %eax,%ebx
    e3bc:	e9 37 fc ff ff       	jmp    dff8 <binary_expression_evaluate+0xb8>
    e3c1:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
    e3c5:	7e 79                	jle    e440 <binary_expression_evaluate+0x500>
    e3c7:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    e3ca:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
    e3cd:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    e3d1:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    e3d5:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    e3d8:	8b 5d cc             	mov    -0x34(%ebp),%ebx
    e3db:	89 0c 24             	mov    %ecx,(%esp)
    e3de:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    e3e2:	e8 19 e0 01 00       	call   2c400 <__divdi3>
    e3e7:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    e3ea:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
    e3ed:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    e3f1:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    e3f5:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    e3f8:	8b 5d cc             	mov    -0x34(%ebp),%ebx
    e3fb:	89 0c 24             	mov    %ecx,(%esp)
    e3fe:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    e402:	89 c6                	mov    %eax,%esi
    e404:	89 d7                	mov    %edx,%edi
    e406:	e8 e5 e2 01 00       	call   2c6f0 <__moddi3>
    e40b:	89 d3                	mov    %edx,%ebx
    e40d:	c1 fb 1f             	sar    $0x1f,%ebx
    e410:	89 da                	mov    %ebx,%edx
    e412:	83 f2 ff             	xor    $0xffffffff,%edx
    e415:	89 d0                	mov    %edx,%eax
    e417:	31 d2                	xor    %edx,%edx
    e419:	c1 e8 1f             	shr    $0x1f,%eax
    e41c:	83 c0 ff             	add    $0xffffffff,%eax
    e41f:	83 d2 ff             	adc    $0xffffffff,%edx
    e422:	e9 79 ff ff ff       	jmp    e3a0 <binary_expression_evaluate+0x460>
    e427:	7c 0a                	jl     e433 <binary_expression_evaluate+0x4f3>
    e429:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)
    e42d:	0f 87 39 ff ff ff    	ja     e36c <binary_expression_evaluate+0x42c>
    e433:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e436:	bb f2 ff ff ff       	mov    $0xfffffff2,%ebx
    e43b:	e9 b8 fb ff ff       	jmp    dff8 <binary_expression_evaluate+0xb8>
    e440:	7c f1                	jl     e433 <binary_expression_evaluate+0x4f3>
    e442:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)
    e446:	0f 87 7b ff ff ff    	ja     e3c7 <binary_expression_evaluate+0x487>
    e44c:	eb e5                	jmp    e433 <binary_expression_evaluate+0x4f3>
    e44e:	e8 42 00 00 00       	call   e495 <bithenge_expression_evaluate.part.1>
    e453:	c7 44 24 08 5b 00 00 	movl   $0x5b,0x8(%esp)
    e45a:	00 
    e45b:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    e462:	00 
    e463:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    e46a:	e8 41 c4 01 00       	call   2a8b0 <assert_abort>
    e46f:	e8 43 00 00 00       	call   e4b7 <bithenge_node_as_blob.part.2>
    e474:	c7 44 24 08 45 00 00 	movl   $0x45,0x8(%esp)
    e47b:	00 
    e47c:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    e483:	00 
    e484:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    e48b:	e8 20 c4 01 00       	call   2a8b0 <assert_abort>
    e490:	e8 cc 00 00 00       	call   e561 <bithenge_expression_inc_ref.part.12>

0000e495 <bithenge_expression_evaluate.part.1>:
    e495:	55                   	push   %ebp
    e496:	89 e5                	mov    %esp,%ebp
    e498:	83 ec 18             	sub    $0x18,%esp
    e49b:	c7 44 24 08 5a 00 00 	movl   $0x5a,0x8(%esp)
    e4a2:	00 
    e4a3:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    e4aa:	00 
    e4ab:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    e4b2:	e8 f9 c3 01 00       	call   2a8b0 <assert_abort>

0000e4b7 <bithenge_node_as_blob.part.2>:
    e4b7:	55                   	push   %ebp
    e4b8:	89 e5                	mov    %esp,%ebp
    e4ba:	83 ec 18             	sub    $0x18,%esp
    e4bd:	c7 44 24 08 d9 00 00 	movl   $0xd9,0x8(%esp)
    e4c4:	00 
    e4c5:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    e4cc:	00 
    e4cd:	c7 04 24 dc cd 02 00 	movl   $0x2cddc,(%esp)
    e4d4:	e8 d7 c3 01 00       	call   2a8b0 <assert_abort>

0000e4d9 <bithenge_blob_size.part.5>:
    e4d9:	55                   	push   %ebp
    e4da:	89 e5                	mov    %esp,%ebp
    e4dc:	83 ec 18             	sub    $0x18,%esp
    e4df:	c7 44 24 08 7f 00 00 	movl   $0x7f,0x8(%esp)
    e4e6:	00 
    e4e7:	c7 44 24 04 5d cd 02 	movl   $0x2cd5d,0x4(%esp)
    e4ee:	00 
    e4ef:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    e4f6:	e8 b5 c3 01 00       	call   2a8b0 <assert_abort>

0000e4fb <bithenge_expression_dec_ref.part.6>:
    e4fb:	55                   	push   %ebp
    e4fc:	89 e5                	mov    %esp,%ebp
    e4fe:	83 ec 18             	sub    $0x18,%esp
    e501:	c7 44 24 08 4b 00 00 	movl   $0x4b,0x8(%esp)
    e508:	00 
    e509:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    e510:	00 
    e511:	c7 04 24 b9 cc 02 00 	movl   $0x2ccb9,(%esp)
    e518:	e8 93 c3 01 00       	call   2a8b0 <assert_abort>

0000e51d <bithenge_transform_num_params.part.7>:
    e51d:	55                   	push   %ebp
    e51e:	89 e5                	mov    %esp,%ebp
    e520:	83 ec 18             	sub    $0x18,%esp
    e523:	c7 44 24 08 62 00 00 	movl   $0x62,0x8(%esp)
    e52a:	00 
    e52b:	c7 44 24 04 ca ce 02 	movl   $0x2ceca,0x4(%esp)
    e532:	00 
    e533:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    e53a:	e8 71 c3 01 00       	call   2a8b0 <assert_abort>

0000e53f <bithenge_integer_node_value.isra.9.part.10>:
    e53f:	55                   	push   %ebp
    e540:	89 e5                	mov    %esp,%ebp
    e542:	83 ec 18             	sub    $0x18,%esp
    e545:	c7 44 24 08 98 00 00 	movl   $0x98,0x8(%esp)
    e54c:	00 
    e54d:	c7 44 24 04 90 cd 02 	movl   $0x2cd90,0x4(%esp)
    e554:	00 
    e555:	c7 04 24 d4 d1 02 00 	movl   $0x2d1d4,(%esp)
    e55c:	e8 4f c3 01 00       	call   2a8b0 <assert_abort>

0000e561 <bithenge_expression_inc_ref.part.12>:
    e561:	55                   	push   %ebp
    e562:	89 e5                	mov    %esp,%ebp
    e564:	83 ec 18             	sub    $0x18,%esp
    e567:	c7 44 24 08 41 00 00 	movl   $0x41,0x8(%esp)
    e56e:	00 
    e56f:	c7 44 24 04 ac ce 02 	movl   $0x2ceac,0x4(%esp)
    e576:	00 
    e577:	c7 04 24 e7 ce 02 00 	movl   $0x2cee7,(%esp)
    e57e:	e8 2d c3 01 00       	call   2a8b0 <assert_abort>

0000e583 <bithenge_init_expression.part.18>:
    e583:	55                   	push   %ebp
    e584:	89 e5                	mov    %esp,%ebp
    e586:	83 ec 18             	sub    $0x18,%esp
    e589:	c7 44 24 08 35 00 00 	movl   $0x35,0x8(%esp)
    e590:	00 
    e591:	c7 44 24 04 d0 d4 02 	movl   $0x2d4d0,0x4(%esp)
    e598:	00 
    e599:	c7 04 24 bf cc 02 00 	movl   $0x2ccbf,(%esp)
    e5a0:	e8 0b c3 01 00       	call   2a8b0 <assert_abort>
    e5a5:	66 90                	xchg   %ax,%ax
    e5a7:	66 90                	xchg   %ax,%ax
    e5a9:	66 90                	xchg   %ax,%ax
    e5ab:	66 90                	xchg   %ax,%ax
    e5ad:	66 90                	xchg   %ax,%ax
    e5af:	90                   	nop

0000e5b0 <file_size>:
    e5b0:	55                   	push   %ebp
    e5b1:	89 e5                	mov    %esp,%ebp
    e5b3:	8b 45 08             	mov    0x8(%ebp),%eax
    e5b6:	8b 4d 0c             	mov    0xc(%ebp),%ecx
    e5b9:	8b 50 18             	mov    0x18(%eax),%edx
    e5bc:	8b 40 14             	mov    0x14(%eax),%eax
    e5bf:	89 01                	mov    %eax,(%ecx)
    e5c1:	89 51 04             	mov    %edx,0x4(%ecx)
    e5c4:	31 c0                	xor    %eax,%eax
    e5c6:	5d                   	pop    %ebp
    e5c7:	c3                   	ret    
    e5c8:	90                   	nop
    e5c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000e5d0 <file_destroy>:
    e5d0:	55                   	push   %ebp
    e5d1:	89 e5                	mov    %esp,%ebp
    e5d3:	53                   	push   %ebx
    e5d4:	83 ec 14             	sub    $0x14,%esp
    e5d7:	8b 5d 08             	mov    0x8(%ebp),%ebx
    e5da:	8b 43 10             	mov    0x10(%ebx),%eax
    e5dd:	89 04 24             	mov    %eax,(%esp)
    e5e0:	e8 0b a4 01 00       	call   289f0 <close>
    e5e5:	89 5d 08             	mov    %ebx,0x8(%ebp)
    e5e8:	83 c4 14             	add    $0x14,%esp
    e5eb:	5b                   	pop    %ebx
    e5ec:	5d                   	pop    %ebp
    e5ed:	e9 ee 1b 01 00       	jmp    201e0 <free>
    e5f2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    e5f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000e600 <file_read>:
    e600:	55                   	push   %ebp
    e601:	89 e5                	mov    %esp,%ebp
    e603:	57                   	push   %edi
    e604:	56                   	push   %esi
    e605:	53                   	push   %ebx
    e606:	83 ec 2c             	sub    $0x2c,%esp
    e609:	8b 5d 08             	mov    0x8(%ebp),%ebx
    e60c:	8b 45 10             	mov    0x10(%ebp),%eax
    e60f:	8b 55 0c             	mov    0xc(%ebp),%edx
    e612:	39 43 18             	cmp    %eax,0x18(%ebx)
    e615:	73 11                	jae    e628 <file_read+0x28>
    e617:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax
    e61c:	83 c4 2c             	add    $0x2c,%esp
    e61f:	5b                   	pop    %ebx
    e620:	5e                   	pop    %esi
    e621:	5f                   	pop    %edi
    e622:	5d                   	pop    %ebp
    e623:	c3                   	ret    
    e624:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e628:	0f 86 82 00 00 00    	jbe    e6b0 <file_read+0xb0>
    e62e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    e635:	00 
    e636:	89 54 24 04          	mov    %edx,0x4(%esp)
    e63a:	89 44 24 08          	mov    %eax,0x8(%esp)
    e63e:	8b 43 10             	mov    0x10(%ebx),%eax
    e641:	89 04 24             	mov    %eax,(%esp)
    e644:	e8 57 aa 01 00       	call   290a0 <lseek>
    e649:	85 d2                	test   %edx,%edx
    e64b:	78 73                	js     e6c0 <file_read+0xc0>
    e64d:	8b 4d 18             	mov    0x18(%ebp),%ecx
    e650:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
    e653:	8b 31                	mov    (%ecx),%esi
    e655:	8b 79 04             	mov    0x4(%ecx),%edi
    e658:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)
    e65e:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)
    e665:	8b 5d 14             	mov    0x14(%ebp),%ebx
    e668:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    e66b:	89 74 24 08          	mov    %esi,0x8(%esp)
    e66f:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    e673:	8b 42 10             	mov    0x10(%edx),%eax
    e676:	89 04 24             	mov    %eax,(%esp)
    e679:	e8 52 a4 01 00       	call   28ad0 <read>
    e67e:	85 c0                	test   %eax,%eax
    e680:	78 5e                	js     e6e0 <file_read+0xe0>
    e682:	8b 5d 18             	mov    0x18(%ebp),%ebx
    e685:	8b 55 14             	mov    0x14(%ebp),%edx
    e688:	89 c1                	mov    %eax,%ecx
    e68a:	01 c2                	add    %eax,%edx
    e68c:	c1 f9 1f             	sar    $0x1f,%ecx
    e68f:	01 03                	add    %eax,(%ebx)
    e691:	11 4b 04             	adc    %ecx,0x4(%ebx)
    e694:	29 c6                	sub    %eax,%esi
    e696:	19 cf                	sbb    %ecx,%edi
    e698:	89 55 14             	mov    %edx,0x14(%ebp)
    e69b:	89 f2                	mov    %esi,%edx
    e69d:	09 fa                	or     %edi,%edx
    e69f:	74 04                	je     e6a5 <file_read+0xa5>
    e6a1:	85 c0                	test   %eax,%eax
    e6a3:	75 c0                	jne    e665 <file_read+0x65>
    e6a5:	83 c4 2c             	add    $0x2c,%esp
    e6a8:	31 c0                	xor    %eax,%eax
    e6aa:	5b                   	pop    %ebx
    e6ab:	5e                   	pop    %esi
    e6ac:	5f                   	pop    %edi
    e6ad:	5d                   	pop    %ebp
    e6ae:	c3                   	ret    
    e6af:	90                   	nop
    e6b0:	39 53 14             	cmp    %edx,0x14(%ebx)
    e6b3:	0f 82 5e ff ff ff    	jb     e617 <file_read+0x17>
    e6b9:	e9 70 ff ff ff       	jmp    e62e <file_read+0x2e>
    e6be:	66 90                	xchg   %ax,%ax
    e6c0:	e8 1b 20 00 00       	call   106e0 <__errno>
    e6c5:	8b 00                	mov    (%eax),%eax
    e6c7:	83 f8 f2             	cmp    $0xfffffff2,%eax
    e6ca:	0f 85 4c ff ff ff    	jne    e61c <file_read+0x1c>
    e6d0:	66 b8 f7 fe          	mov    $0xfef7,%ax
    e6d4:	e9 43 ff ff ff       	jmp    e61c <file_read+0x1c>
    e6d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    e6e0:	e8 fb 1f 00 00       	call   106e0 <__errno>
    e6e5:	8b 00                	mov    (%eax),%eax
    e6e7:	83 c4 2c             	add    $0x2c,%esp
    e6ea:	5b                   	pop    %ebx
    e6eb:	5e                   	pop    %esi
    e6ec:	5f                   	pop    %edi
    e6ed:	5d                   	pop    %ebp
    e6ee:	c3                   	ret    
    e6ef:	90                   	nop

0000e6f0 <bithenge_new_file_blob>:
    e6f0:	55                   	push   %ebp
    e6f1:	89 e5                	mov    %esp,%ebp
    e6f3:	57                   	push   %edi
    e6f4:	56                   	push   %esi
    e6f5:	53                   	push   %ebx
    e6f6:	83 ec 3c             	sub    $0x3c,%esp
    e6f9:	8b 45 0c             	mov    0xc(%ebp),%eax
    e6fc:	85 c0                	test   %eax,%eax
    e6fe:	0f 84 b8 00 00 00    	je     e7bc <bithenge_new_file_blob+0xcc>
    e704:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)
    e70b:	00 
    e70c:	89 04 24             	mov    %eax,(%esp)
    e70f:	e8 9c a1 01 00       	call   288b0 <open>
    e714:	89 c3                	mov    %eax,%ebx
    e716:	85 c0                	test   %eax,%eax
    e718:	78 2a                	js     e744 <bithenge_new_file_blob+0x54>
    e71a:	8b 4d 08             	mov    0x8(%ebp),%ecx
    e71d:	85 c9                	test   %ecx,%ecx
    e71f:	0f 84 b3 00 00 00    	je     e7d8 <bithenge_new_file_blob+0xe8>
    e725:	8d 45 c8             	lea    -0x38(%ebp),%eax
    e728:	89 1c 24             	mov    %ebx,(%esp)
    e72b:	89 44 24 04          	mov    %eax,0x4(%esp)
    e72f:	e8 2c ab 01 00       	call   29260 <fstat>
    e734:	89 c6                	mov    %eax,%esi
    e736:	85 c0                	test   %eax,%eax
    e738:	74 16                	je     e750 <bithenge_new_file_blob+0x60>
    e73a:	89 1c 24             	mov    %ebx,(%esp)
    e73d:	89 f3                	mov    %esi,%ebx
    e73f:	e8 ac a2 01 00       	call   289f0 <close>
    e744:	83 c4 3c             	add    $0x3c,%esp
    e747:	89 d8                	mov    %ebx,%eax
    e749:	5b                   	pop    %ebx
    e74a:	5e                   	pop    %esi
    e74b:	5f                   	pop    %edi
    e74c:	5d                   	pop    %ebp
    e74d:	c3                   	ret    
    e74e:	66 90                	xchg   %ax,%ax
    e750:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
    e757:	e8 74 19 01 00       	call   200d0 <malloc>
    e75c:	89 c6                	mov    %eax,%esi
    e75e:	85 c0                	test   %eax,%eax
    e760:	74 36                	je     e798 <bithenge_new_file_blob+0xa8>
    e762:	c7 44 24 04 68 d6 02 	movl   $0x2d668,0x4(%esp)
    e769:	00 
    e76a:	89 04 24             	mov    %eax,(%esp)
    e76d:	e8 7e cf ff ff       	call   b6f0 <bithenge_init_random_access_blob>
    e772:	89 c7                	mov    %eax,%edi
    e774:	85 c0                	test   %eax,%eax
    e776:	75 30                	jne    e7a8 <bithenge_new_file_blob+0xb8>
    e778:	8b 55 e0             	mov    -0x20(%ebp),%edx
    e77b:	8b 45 dc             	mov    -0x24(%ebp),%eax
    e77e:	89 56 18             	mov    %edx,0x18(%esi)
    e781:	8b 55 08             	mov    0x8(%ebp),%edx
    e784:	89 5e 10             	mov    %ebx,0x10(%esi)
    e787:	89 46 14             	mov    %eax,0x14(%esi)
    e78a:	c6 46 1c 01          	movb   $0x1,0x1c(%esi)
    e78e:	31 db                	xor    %ebx,%ebx
    e790:	89 32                	mov    %esi,(%edx)
    e792:	eb b0                	jmp    e744 <bithenge_new_file_blob+0x54>
    e794:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e798:	89 1c 24             	mov    %ebx,(%esp)
    e79b:	bb fe ff ff ff       	mov    $0xfffffffe,%ebx
    e7a0:	e8 4b a2 01 00       	call   289f0 <close>
    e7a5:	eb 9d                	jmp    e744 <bithenge_new_file_blob+0x54>
    e7a7:	90                   	nop
    e7a8:	89 34 24             	mov    %esi,(%esp)
    e7ab:	e8 30 1a 01 00       	call   201e0 <free>
    e7b0:	89 1c 24             	mov    %ebx,(%esp)
    e7b3:	e8 38 a2 01 00       	call   289f0 <close>
    e7b8:	89 fb                	mov    %edi,%ebx
    e7ba:	eb 88                	jmp    e744 <bithenge_new_file_blob+0x54>
    e7bc:	c7 44 24 08 9b 00 00 	movl   $0x9b,0x8(%esp)
    e7c3:	00 
    e7c4:	c7 44 24 04 54 d6 02 	movl   $0x2d654,0x4(%esp)
    e7cb:	00 
    e7cc:	c7 04 24 5f d6 02 00 	movl   $0x2d65f,(%esp)
    e7d3:	e8 d8 c0 01 00       	call   2a8b0 <assert_abort>
    e7d8:	c7 44 24 08 70 00 00 	movl   $0x70,0x8(%esp)
    e7df:	00 
    e7e0:	c7 44 24 04 54 d6 02 	movl   $0x2d654,0x4(%esp)
    e7e7:	00 
    e7e8:	c7 04 24 92 d3 02 00 	movl   $0x2d392,(%esp)
    e7ef:	e8 bc c0 01 00       	call   2a8b0 <assert_abort>
    e7f4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    e7fa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0000e800 <bithenge_new_file_blob_from_fd>:
    e800:	55                   	push   %ebp
    e801:	89 e5                	mov    %esp,%ebp
    e803:	57                   	push   %edi
    e804:	56                   	push   %esi
    e805:	53                   	push   %ebx
    e806:	83 ec 4c             	sub    $0x4c,%esp
    e809:	8b 5d 08             	mov    0x8(%ebp),%ebx
    e80c:	8b 75 0c             	mov    0xc(%ebp),%esi
    e80f:	85 db                	test   %ebx,%ebx
    e811:	74 7c                	je     e88f <bithenge_new_file_blob_from_fd+0x8f>
    e813:	8d 45 c8             	lea    -0x38(%ebp),%eax
    e816:	89 34 24             	mov    %esi,(%esp)
    e819:	89 44 24 04          	mov    %eax,0x4(%esp)
    e81d:	e8 3e aa 01 00       	call   29260 <fstat>
    e822:	85 c0                	test   %eax,%eax
    e824:	74 0a                	je     e830 <bithenge_new_file_blob_from_fd+0x30>
    e826:	83 c4 4c             	add    $0x4c,%esp
    e829:	5b                   	pop    %ebx
    e82a:	5e                   	pop    %esi
    e82b:	5f                   	pop    %edi
    e82c:	5d                   	pop    %ebp
    e82d:	c3                   	ret    
    e82e:	66 90                	xchg   %ax,%ax
    e830:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
    e837:	e8 94 18 01 00       	call   200d0 <malloc>
    e83c:	89 c7                	mov    %eax,%edi
    e83e:	85 c0                	test   %eax,%eax
    e840:	74 46                	je     e888 <bithenge_new_file_blob_from_fd+0x88>
    e842:	c7 44 24 04 68 d6 02 	movl   $0x2d668,0x4(%esp)
    e849:	00 
    e84a:	89 04 24             	mov    %eax,(%esp)
    e84d:	e8 9e ce ff ff       	call   b6f0 <bithenge_init_random_access_blob>
    e852:	85 c0                	test   %eax,%eax
    e854:	75 22                	jne    e878 <bithenge_new_file_blob_from_fd+0x78>
    e856:	8b 55 dc             	mov    -0x24(%ebp),%edx
    e859:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    e85c:	89 77 10             	mov    %esi,0x10(%edi)
    e85f:	89 57 14             	mov    %edx,0x14(%edi)
    e862:	89 4f 18             	mov    %ecx,0x18(%edi)
    e865:	c6 47 1c 00          	movb   $0x0,0x1c(%edi)
    e869:	89 3b                	mov    %edi,(%ebx)
    e86b:	83 c4 4c             	add    $0x4c,%esp
    e86e:	5b                   	pop    %ebx
    e86f:	5e                   	pop    %esi
    e870:	5f                   	pop    %edi
    e871:	5d                   	pop    %ebp
    e872:	c3                   	ret    
    e873:	90                   	nop
    e874:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    e878:	89 3c 24             	mov    %edi,(%esp)
    e87b:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    e87e:	e8 5d 19 01 00       	call   201e0 <free>
    e883:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    e886:	eb 9e                	jmp    e826 <bithenge_new_file_blob_from_fd+0x26>
    e888:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    e88d:	eb 97                	jmp    e826 <bithenge_new_file_blob_from_fd+0x26>
    e88f:	c7 44 24 08 70 00 00 	movl   $0x70,0x8(%esp)
    e896:	00 
    e897:	c7 44 24 04 54 d6 02 	movl   $0x2d654,0x4(%esp)
    e89e:	00 
    e89f:	c7 04 24 92 d3 02 00 	movl   $0x2d392,(%esp)
    e8a6:	e8 05 c0 01 00       	call   2a8b0 <assert_abort>
    e8ab:	90                   	nop
    e8ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000e8b0 <bithenge_new_file_blob_from_file>:
    e8b0:	55                   	push   %ebp
    e8b1:	89 e5                	mov    %esp,%ebp
    e8b3:	57                   	push   %edi
    e8b4:	56                   	push   %esi
    e8b5:	83 ec 40             	sub    $0x40,%esp
    e8b8:	8b 45 0c             	mov    0xc(%ebp),%eax
    e8bb:	89 04 24             	mov    %eax,(%esp)
    e8be:	e8 cd c8 00 00       	call   1b190 <fileno>
    e8c3:	89 c6                	mov    %eax,%esi
    e8c5:	85 c0                	test   %eax,%eax
    e8c7:	78 27                	js     e8f0 <bithenge_new_file_blob_from_file+0x40>
    e8c9:	8b 7d 08             	mov    0x8(%ebp),%edi
    e8cc:	85 ff                	test   %edi,%edi
    e8ce:	0f 84 84 00 00 00    	je     e958 <bithenge_new_file_blob_from_file+0xa8>
    e8d4:	8d 45 d8             	lea    -0x28(%ebp),%eax
    e8d7:	89 34 24             	mov    %esi,(%esp)
    e8da:	89 44 24 04          	mov    %eax,0x4(%esp)
    e8de:	e8 7d a9 01 00       	call   29260 <fstat>
    e8e3:	85 c0                	test   %eax,%eax
    e8e5:	74 19                	je     e900 <bithenge_new_file_blob_from_file+0x50>
    e8e7:	83 c4 40             	add    $0x40,%esp
    e8ea:	5e                   	pop    %esi
    e8eb:	5f                   	pop    %edi
    e8ec:	5d                   	pop    %ebp
    e8ed:	c3                   	ret    
    e8ee:	66 90                	xchg   %ax,%ax
    e8f0:	e8 eb 1d 00 00       	call   106e0 <__errno>
    e8f5:	8b 00                	mov    (%eax),%eax
    e8f7:	83 c4 40             	add    $0x40,%esp
    e8fa:	5e                   	pop    %esi
    e8fb:	5f                   	pop    %edi
    e8fc:	5d                   	pop    %ebp
    e8fd:	c3                   	ret    
    e8fe:	66 90                	xchg   %ax,%ax
    e900:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
    e907:	e8 c4 17 01 00       	call   200d0 <malloc>
    e90c:	89 c7                	mov    %eax,%edi
    e90e:	85 c0                	test   %eax,%eax
    e910:	74 2e                	je     e940 <bithenge_new_file_blob_from_file+0x90>
    e912:	c7 44 24 04 68 d6 02 	movl   $0x2d668,0x4(%esp)
    e919:	00 
    e91a:	89 04 24             	mov    %eax,(%esp)
    e91d:	e8 ce cd ff ff       	call   b6f0 <bithenge_init_random_access_blob>
    e922:	85 c0                	test   %eax,%eax
    e924:	75 22                	jne    e948 <bithenge_new_file_blob_from_file+0x98>
    e926:	8b 4d f0             	mov    -0x10(%ebp),%ecx
    e929:	8b 55 ec             	mov    -0x14(%ebp),%edx
    e92c:	89 4f 18             	mov    %ecx,0x18(%edi)
    e92f:	8b 4d 08             	mov    0x8(%ebp),%ecx
    e932:	89 77 10             	mov    %esi,0x10(%edi)
    e935:	89 57 14             	mov    %edx,0x14(%edi)
    e938:	c6 47 1c 00          	movb   $0x0,0x1c(%edi)
    e93c:	89 39                	mov    %edi,(%ecx)
    e93e:	eb a7                	jmp    e8e7 <bithenge_new_file_blob_from_file+0x37>
    e940:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    e945:	eb a0                	jmp    e8e7 <bithenge_new_file_blob_from_file+0x37>
    e947:	90                   	nop
    e948:	89 3c 24             	mov    %edi,(%esp)
    e94b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
    e94e:	e8 8d 18 01 00       	call   201e0 <free>
    e953:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    e956:	eb 8f                	jmp    e8e7 <bithenge_new_file_blob_from_file+0x37>
    e958:	c7 44 24 08 70 00 00 	movl   $0x70,0x8(%esp)
    e95f:	00 
    e960:	c7 44 24 04 54 d6 02 	movl   $0x2d654,0x4(%esp)
    e967:	00 
    e968:	c7 04 24 92 d3 02 00 	movl   $0x2d392,(%esp)
    e96f:	e8 3c bf 01 00       	call   2a8b0 <assert_abort>
    e974:	66 90                	xchg   %ax,%ax
    e976:	66 90                	xchg   %ax,%ax
    e978:	66 90                	xchg   %ax,%ax
    e97a:	66 90                	xchg   %ax,%ax
    e97c:	66 90                	xchg   %ax,%ax
    e97e:	66 90                	xchg   %ax,%ax

0000e980 <cache_key_hash>:
    e980:	55                   	push   %ebp
    e981:	89 e5                	mov    %esp,%ebp
    e983:	8b 45 08             	mov    0x8(%ebp),%eax
    e986:	5d                   	pop    %ebp
    e987:	8b 00                	mov    (%eax),%eax
    e989:	c3                   	ret    
    e98a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0000e990 <cache_hash>:
    e990:	55                   	push   %ebp
    e991:	89 e5                	mov    %esp,%ebp
    e993:	8b 45 08             	mov    0x8(%ebp),%eax
    e996:	5d                   	pop    %ebp
    e997:	8b 40 e4             	mov    -0x1c(%eax),%eax
    e99a:	c3                   	ret    
    e99b:	90                   	nop
    e99c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000e9a0 <cache_key_equal>:
    e9a0:	55                   	push   %ebp
    e9a1:	89 e5                	mov    %esp,%ebp
    e9a3:	8b 45 0c             	mov    0xc(%ebp),%eax
    e9a6:	8b 4d 08             	mov    0x8(%ebp),%ecx
    e9a9:	5d                   	pop    %ebp
    e9aa:	8b 50 e4             	mov    -0x1c(%eax),%edx
    e9ad:	8b 40 e8             	mov    -0x18(%eax),%eax
    e9b0:	33 41 04             	xor    0x4(%ecx),%eax
    e9b3:	33 11                	xor    (%ecx),%edx
    e9b5:	09 c2                	or     %eax,%edx
    e9b7:	0f 94 c0             	sete   %al
    e9ba:	c3                   	ret    
    e9bb:	90                   	nop
    e9bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0000e9c0 <block_init>:
    e9c0:	55                   	push   %ebp
    e9c1:	89 e5                	mov    %esp,%ebp
    e9c3:	57                   	push   %edi
    e9c4:	56                   	push   %esi
    e9c5:	53                   	push   %ebx
    e9c6:	83 ec 3c             	sub    $0x3c,%esp
    e9c9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
    e9cc:	8b 45 08             	mov    0x8(%ebp),%eax
    e9cf:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
    e9d6:	00 
    e9d7:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    e9db:	89 04 24             	mov    %eax,(%esp)
    e9de:	e8 2d 37 00 00       	call   12110 <loc_service_connect>
    e9e3:	89 c6                	mov    %eax,%esi
    e9e5:	85 c0                	test   %eax,%eax
    e9e7:	0f 84 30 01 00 00    	je     eb1d <block_init+0x15d>
    e9ed:	8d 45 e0             	lea    -0x20(%ebp),%eax
    e9f0:	89 34 24             	mov    %esi,(%esp)
    e9f3:	89 44 24 04          	mov    %eax,0x4(%esp)
    e9f7:	e8 e4 18 00 00       	call   102e0 <bd_open>
    e9fc:	89 c7                	mov    %eax,%edi
    e9fe:	85 c0                	test   %eax,%eax
    ea00:	0f 85 d4 00 00 00    	jne    eada <block_init+0x11a>
    ea06:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    ea09:	89 44 24 04          	mov    %eax,0x4(%esp)
    ea0d:	8b 45 e0             	mov    -0x20(%ebp),%eax
    ea10:	89 04 24             	mov    %eax,(%esp)
    ea13:	e8 98 1b 00 00       	call   105b0 <bd_get_block_size>
    ea18:	89 c7                	mov    %eax,%edi
    ea1a:	85 c0                	test   %eax,%eax
    ea1c:	0f 85 ad 00 00 00    	jne    eacf <block_init+0x10f>
    ea22:	8b 55 e0             	mov    -0x20(%ebp),%edx
    ea25:	c7 04 24 28 00 00 00 	movl   $0x28,(%esp)
    ea2c:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    ea2f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    ea32:	89 55 d0             	mov    %edx,-0x30(%ebp)
    ea35:	e8 96 16 01 00       	call   200d0 <malloc>
    ea3a:	85 c0                	test   %eax,%eax
    ea3c:	0f 84 e0 00 00 00    	je     eb22 <block_init+0x162>
    ea42:	8b 55 d4             	mov    -0x2c(%ebp),%edx
    ea45:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    ea4b:	89 50 10             	mov    %edx,0x10(%eax)
    ea4e:	8b 55 d0             	mov    -0x30(%ebp),%edx
    ea51:	89 50 20             	mov    %edx,0x20(%eax)
    ea54:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    ea5b:	89 58 08             	mov    %ebx,0x8(%eax)
    ea5e:	89 70 0c             	mov    %esi,0xc(%eax)
    ea61:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
    ea68:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
    ea6f:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
    ea76:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
    ea7d:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    ea84:	89 45 cc             	mov    %eax,-0x34(%ebp)
    ea87:	e8 34 88 00 00       	call   172c0 <fibril_mutex_lock>
    ea8c:	8b 15 68 04 03 00    	mov    0x30468,%edx
    ea92:	81 fa 64 04 03 00    	cmp    $0x30464,%edx
    ea98:	8b 45 cc             	mov    -0x34(%ebp),%eax
    ea9b:	75 0e                	jne    eaab <block_init+0xeb>
    ea9d:	eb 51                	jmp    eaf0 <block_init+0x130>
    ea9f:	90                   	nop
    eaa0:	8b 52 04             	mov    0x4(%edx),%edx
    eaa3:	81 fa 64 04 03 00    	cmp    $0x30464,%edx
    eaa9:	74 45                	je     eaf0 <block_init+0x130>
    eaab:	3b 5a 08             	cmp    0x8(%edx),%ebx
    eaae:	75 f0                	jne    eaa0 <block_init+0xe0>
    eab0:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    eab7:	89 45 cc             	mov    %eax,-0x34(%ebp)
    eaba:	e8 21 89 00 00       	call   173e0 <fibril_mutex_unlock>
    eabf:	8b 45 cc             	mov    -0x34(%ebp),%eax
    eac2:	89 04 24             	mov    %eax,(%esp)
    eac5:	bf fc fe ff ff       	mov    $0xfffffefc,%edi
    eaca:	e8 11 17 01 00       	call   201e0 <free>
    eacf:	8b 45 e0             	mov    -0x20(%ebp),%eax
    ead2:	89 04 24             	mov    %eax,(%esp)
    ead5:	e8 a6 18 00 00       	call   10380 <bd_close>
    eada:	89 34 24             	mov    %esi,(%esp)
    eadd:	e8 2e 4a 01 00       	call   23510 <async_hangup>
    eae2:	83 c4 3c             	add    $0x3c,%esp
    eae5:	89 f8                	mov    %edi,%eax
    eae7:	5b                   	pop    %ebx
    eae8:	5e                   	pop    %esi
    eae9:	5f                   	pop    %edi
    eaea:	5d                   	pop    %ebp
    eaeb:	c3                   	ret    
    eaec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    eaf0:	8b 15 64 04 03 00    	mov    0x30464,%edx
    eaf6:	c7 40 04 64 04 03 00 	movl   $0x30464,0x4(%eax)
    eafd:	89 10                	mov    %edx,(%eax)
    eaff:	a3 64 04 03 00       	mov    %eax,0x30464
    eb04:	89 42 04             	mov    %eax,0x4(%edx)
    eb07:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    eb0e:	e8 cd 88 00 00       	call   173e0 <fibril_mutex_unlock>
    eb13:	83 c4 3c             	add    $0x3c,%esp
    eb16:	89 f8                	mov    %edi,%eax
    eb18:	5b                   	pop    %ebx
    eb19:	5e                   	pop    %esi
    eb1a:	5f                   	pop    %edi
    eb1b:	5d                   	pop    %ebp
    eb1c:	c3                   	ret    
    eb1d:	83 cf ff             	or     $0xffffffff,%edi
    eb20:	eb c0                	jmp    eae2 <block_init+0x122>
    eb22:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    eb27:	eb a6                	jmp    eacf <block_init+0x10f>
    eb29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000eb30 <block_bb_read>:
    eb30:	55                   	push   %ebp
    eb31:	89 e5                	mov    %esp,%ebp
    eb33:	57                   	push   %edi
    eb34:	56                   	push   %esi
    eb35:	53                   	push   %ebx
    eb36:	83 ec 3c             	sub    $0x3c,%esp
    eb39:	8b 45 08             	mov    0x8(%ebp),%eax
    eb3c:	8b 75 0c             	mov    0xc(%ebp),%esi
    eb3f:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    eb46:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    eb49:	8b 7d 10             	mov    0x10(%ebp),%edi
    eb4c:	e8 6f 87 00 00       	call   172c0 <fibril_mutex_lock>
    eb51:	8b 1d 68 04 03 00    	mov    0x30468,%ebx
    eb57:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    eb5a:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    eb60:	75 15                	jne    eb77 <block_bb_read+0x47>
    eb62:	e9 91 00 00 00       	jmp    ebf8 <block_bb_read+0xc8>
    eb67:	90                   	nop
    eb68:	8b 5b 04             	mov    0x4(%ebx),%ebx
    eb6b:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    eb71:	0f 84 81 00 00 00    	je     ebf8 <block_bb_read+0xc8>
    eb77:	3b 43 08             	cmp    0x8(%ebx),%eax
    eb7a:	75 ec                	jne    eb68 <block_bb_read+0x38>
    eb7c:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    eb83:	e8 58 88 00 00       	call   173e0 <fibril_mutex_unlock>
    eb88:	8b 43 14             	mov    0x14(%ebx),%eax
    eb8b:	85 c0                	test   %eax,%eax
    eb8d:	0f 85 d5 00 00 00    	jne    ec68 <block_bb_read+0x138>
    eb93:	8b 43 20             	mov    0x20(%ebx),%eax
    eb96:	89 04 24             	mov    %eax,(%esp)
    eb99:	e8 32 15 01 00       	call   200d0 <malloc>
    eb9e:	89 c1                	mov    %eax,%ecx
    eba0:	85 c0                	test   %eax,%eax
    eba2:	0f 84 cf 00 00 00    	je     ec77 <block_bb_read+0x147>
    eba8:	8b 43 20             	mov    0x20(%ebx),%eax
    ebab:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    ebaf:	89 44 24 14          	mov    %eax,0x14(%esp)
    ebb3:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
    ebba:	00 
    ebbb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    ebc2:	00 
    ebc3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    ebca:	00 
    ebcb:	8b 43 10             	mov    0x10(%ebx),%eax
    ebce:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    ebd1:	89 04 24             	mov    %eax,(%esp)
    ebd4:	e8 b7 17 00 00       	call   10390 <bd_read_blocks>
    ebd9:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    ebdc:	89 c2                	mov    %eax,%edx
    ebde:	85 c0                	test   %eax,%eax
    ebe0:	75 36                	jne    ec18 <block_bb_read+0xe8>
    ebe2:	89 4b 14             	mov    %ecx,0x14(%ebx)
    ebe5:	89 73 18             	mov    %esi,0x18(%ebx)
    ebe8:	89 7b 1c             	mov    %edi,0x1c(%ebx)
    ebeb:	83 c4 3c             	add    $0x3c,%esp
    ebee:	89 d0                	mov    %edx,%eax
    ebf0:	5b                   	pop    %ebx
    ebf1:	5e                   	pop    %esi
    ebf2:	5f                   	pop    %edi
    ebf3:	5d                   	pop    %ebp
    ebf4:	c3                   	ret    
    ebf5:	8d 76 00             	lea    0x0(%esi),%esi
    ebf8:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    ebff:	e8 dc 87 00 00       	call   173e0 <fibril_mutex_unlock>
    ec04:	83 ca ff             	or     $0xffffffff,%edx
    ec07:	83 c4 3c             	add    $0x3c,%esp
    ec0a:	89 d0                	mov    %edx,%eax
    ec0c:	5b                   	pop    %ebx
    ec0d:	5e                   	pop    %esi
    ec0e:	5f                   	pop    %edi
    ec0f:	5d                   	pop    %ebp
    ec10:	c3                   	ret    
    ec11:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ec18:	8b 43 08             	mov    0x8(%ebx),%eax
    ec1b:	89 54 24 04          	mov    %edx,0x4(%esp)
    ec1f:	89 44 24 14          	mov    %eax,0x14(%esp)
    ec23:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    ec2a:	00 
    ec2b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
    ec32:	00 
    ec33:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
    ec3a:	00 
    ec3b:	c7 04 24 c0 d6 02 00 	movl   $0x2d6c0,(%esp)
    ec42:	89 55 e0             	mov    %edx,-0x20(%ebp)
    ec45:	e8 06 c6 00 00       	call   1b250 <printf>
    ec4a:	e8 c1 bb 01 00       	call   2a810 <stacktrace_print>
    ec4f:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    ec52:	89 0c 24             	mov    %ecx,(%esp)
    ec55:	e8 86 15 01 00       	call   201e0 <free>
    ec5a:	8b 55 e0             	mov    -0x20(%ebp),%edx
    ec5d:	83 c4 3c             	add    $0x3c,%esp
    ec60:	89 d0                	mov    %edx,%eax
    ec62:	5b                   	pop    %ebx
    ec63:	5e                   	pop    %esi
    ec64:	5f                   	pop    %edi
    ec65:	5d                   	pop    %ebp
    ec66:	c3                   	ret    
    ec67:	90                   	nop
    ec68:	83 c4 3c             	add    $0x3c,%esp
    ec6b:	ba fc fe ff ff       	mov    $0xfffffefc,%edx
    ec70:	89 d0                	mov    %edx,%eax
    ec72:	5b                   	pop    %ebx
    ec73:	5e                   	pop    %esi
    ec74:	5f                   	pop    %edi
    ec75:	5d                   	pop    %ebp
    ec76:	c3                   	ret    
    ec77:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
    ec7c:	eb 89                	jmp    ec07 <block_bb_read+0xd7>
    ec7e:	66 90                	xchg   %ax,%ax

0000ec80 <block_bb_get>:
    ec80:	55                   	push   %ebp
    ec81:	89 e5                	mov    %esp,%ebp
    ec83:	56                   	push   %esi
    ec84:	53                   	push   %ebx
    ec85:	83 ec 10             	sub    $0x10,%esp
    ec88:	8b 75 08             	mov    0x8(%ebp),%esi
    ec8b:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    ec92:	e8 29 86 00 00       	call   172c0 <fibril_mutex_lock>
    ec97:	8b 1d 68 04 03 00    	mov    0x30468,%ebx
    ec9d:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    eca3:	75 0e                	jne    ecb3 <block_bb_get+0x33>
    eca5:	eb 29                	jmp    ecd0 <block_bb_get+0x50>
    eca7:	90                   	nop
    eca8:	8b 5b 04             	mov    0x4(%ebx),%ebx
    ecab:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    ecb1:	74 1d                	je     ecd0 <block_bb_get+0x50>
    ecb3:	3b 73 08             	cmp    0x8(%ebx),%esi
    ecb6:	75 f0                	jne    eca8 <block_bb_get+0x28>
    ecb8:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    ecbf:	e8 1c 87 00 00       	call   173e0 <fibril_mutex_unlock>
    ecc4:	8b 43 14             	mov    0x14(%ebx),%eax
    ecc7:	83 c4 10             	add    $0x10,%esp
    ecca:	5b                   	pop    %ebx
    eccb:	5e                   	pop    %esi
    eccc:	5d                   	pop    %ebp
    eccd:	c3                   	ret    
    ecce:	66 90                	xchg   %ax,%ax
    ecd0:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    ecd7:	e8 04 87 00 00       	call   173e0 <fibril_mutex_unlock>
    ecdc:	c7 44 24 08 e5 00 00 	movl   $0xe5,0x8(%esp)
    ece3:	00 
    ece4:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    eceb:	00 
    ecec:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
    ecf3:	e8 b8 bb 01 00       	call   2a8b0 <assert_abort>
    ecf8:	90                   	nop
    ecf9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000ed00 <block_cache_init>:
    ed00:	55                   	push   %ebp
    ed01:	89 e5                	mov    %esp,%ebp
    ed03:	56                   	push   %esi
    ed04:	53                   	push   %ebx
    ed05:	83 ec 10             	sub    $0x10,%esp
    ed08:	8b 75 08             	mov    0x8(%ebp),%esi
    ed0b:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    ed12:	e8 a9 85 00 00       	call   172c0 <fibril_mutex_lock>
    ed17:	8b 1d 68 04 03 00    	mov    0x30468,%ebx
    ed1d:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    ed23:	75 1a                	jne    ed3f <block_cache_init+0x3f>
    ed25:	e9 b6 00 00 00       	jmp    ede0 <block_cache_init+0xe0>
    ed2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    ed30:	8b 5b 04             	mov    0x4(%ebx),%ebx
    ed33:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    ed39:	0f 84 a1 00 00 00    	je     ede0 <block_cache_init+0xe0>
    ed3f:	3b 73 08             	cmp    0x8(%ebx),%esi
    ed42:	75 ec                	jne    ed30 <block_cache_init+0x30>
    ed44:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    ed4b:	e8 90 86 00 00       	call   173e0 <fibril_mutex_unlock>
    ed50:	8b 53 24             	mov    0x24(%ebx),%edx
    ed53:	85 d2                	test   %edx,%edx
    ed55:	0f 85 9d 00 00 00    	jne    edf8 <block_cache_init+0xf8>
    ed5b:	c7 04 24 48 00 00 00 	movl   $0x48,(%esp)
    ed62:	e8 69 13 01 00       	call   200d0 <malloc>
    ed67:	89 c6                	mov    %eax,%esi
    ed69:	85 c0                	test   %eax,%eax
    ed6b:	0f 84 a2 00 00 00    	je     ee13 <block_cache_init+0x113>
    ed71:	89 04 24             	mov    %eax,(%esp)
    ed74:	e8 27 85 00 00       	call   172a0 <fibril_mutex_initialize>
    ed79:	8d 46 3c             	lea    0x3c(%esi),%eax
    ed7c:	89 46 3c             	mov    %eax,0x3c(%esi)
    ed7f:	89 46 40             	mov    %eax,0x40(%esi)
    ed82:	8b 45 0c             	mov    0xc(%ebp),%eax
    ed85:	31 d2                	xor    %edx,%edx
    ed87:	89 46 10             	mov    %eax,0x10(%esi)
    ed8a:	8b 45 10             	mov    0x10(%ebp),%eax
    ed8d:	89 46 18             	mov    %eax,0x18(%esi)
    ed90:	8b 45 14             	mov    0x14(%ebp),%eax
    ed93:	89 46 44             	mov    %eax,0x44(%esi)
    ed96:	8b 45 0c             	mov    0xc(%ebp),%eax
    ed99:	f7 73 20             	divl   0x20(%ebx)
    ed9c:	c7 46 1c 00 00 00 00 	movl   $0x0,0x1c(%esi)
    eda3:	85 d2                	test   %edx,%edx
    eda5:	75 5d                	jne    ee04 <block_cache_init+0x104>
    eda7:	89 46 14             	mov    %eax,0x14(%esi)
    edaa:	8d 46 20             	lea    0x20(%esi),%eax
    edad:	c7 44 24 0c 6c 04 03 	movl   $0x3046c,0xc(%esp)
    edb4:	00 
    edb5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    edbc:	00 
    edbd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    edc4:	00 
    edc5:	89 04 24             	mov    %eax,(%esp)
    edc8:	e8 a3 6f 01 00       	call   25d70 <hash_table_create>
    edcd:	84 c0                	test   %al,%al
    edcf:	74 49                	je     ee1a <block_cache_init+0x11a>
    edd1:	89 73 24             	mov    %esi,0x24(%ebx)
    edd4:	83 c4 10             	add    $0x10,%esp
    edd7:	31 c0                	xor    %eax,%eax
    edd9:	5b                   	pop    %ebx
    edda:	5e                   	pop    %esi
    eddb:	5d                   	pop    %ebp
    eddc:	c3                   	ret    
    eddd:	8d 76 00             	lea    0x0(%esi),%esi
    ede0:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    ede7:	e8 f4 85 00 00       	call   173e0 <fibril_mutex_unlock>
    edec:	83 c8 ff             	or     $0xffffffff,%eax
    edef:	83 c4 10             	add    $0x10,%esp
    edf2:	5b                   	pop    %ebx
    edf3:	5e                   	pop    %esi
    edf4:	5d                   	pop    %ebp
    edf5:	c3                   	ret    
    edf6:	66 90                	xchg   %ax,%ax
    edf8:	83 c4 10             	add    $0x10,%esp
    edfb:	b8 fc fe ff ff       	mov    $0xfffffefc,%eax
    ee00:	5b                   	pop    %ebx
    ee01:	5e                   	pop    %esi
    ee02:	5d                   	pop    %ebp
    ee03:	c3                   	ret    
    ee04:	89 34 24             	mov    %esi,(%esp)
    ee07:	e8 d4 13 01 00       	call   201e0 <free>
    ee0c:	b8 f5 ff ff ff       	mov    $0xfffffff5,%eax
    ee11:	eb dc                	jmp    edef <block_cache_init+0xef>
    ee13:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    ee18:	eb d5                	jmp    edef <block_cache_init+0xef>
    ee1a:	89 34 24             	mov    %esi,(%esp)
    ee1d:	e8 be 13 01 00       	call   201e0 <free>
    ee22:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    ee27:	eb c6                	jmp    edef <block_cache_init+0xef>
    ee29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000ee30 <block_cache_fini>:
    ee30:	55                   	push   %ebp
    ee31:	89 e5                	mov    %esp,%ebp
    ee33:	57                   	push   %edi
    ee34:	56                   	push   %esi
    ee35:	53                   	push   %ebx
    ee36:	83 ec 4c             	sub    $0x4c,%esp
    ee39:	8b 5d 08             	mov    0x8(%ebp),%ebx
    ee3c:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    ee43:	e8 78 84 00 00       	call   172c0 <fibril_mutex_lock>
    ee48:	8b 35 68 04 03 00    	mov    0x30468,%esi
    ee4e:	81 fe 64 04 03 00    	cmp    $0x30464,%esi
    ee54:	75 19                	jne    ee6f <block_cache_fini+0x3f>
    ee56:	e9 1d 01 00 00       	jmp    ef78 <block_cache_fini+0x148>
    ee5b:	90                   	nop
    ee5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    ee60:	8b 76 04             	mov    0x4(%esi),%esi
    ee63:	81 fe 64 04 03 00    	cmp    $0x30464,%esi
    ee69:	0f 84 09 01 00 00    	je     ef78 <block_cache_fini+0x148>
    ee6f:	3b 5e 08             	cmp    0x8(%esi),%ebx
    ee72:	75 ec                	jne    ee60 <block_cache_fini+0x30>
    ee74:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    ee7b:	e8 60 85 00 00       	call   173e0 <fibril_mutex_unlock>
    ee80:	8b 56 24             	mov    0x24(%esi),%edx
    ee83:	89 55 e0             	mov    %edx,-0x20(%ebp)
    ee86:	85 d2                	test   %edx,%edx
    ee88:	0f 84 46 01 00 00    	je     efd4 <block_cache_fini+0x1a4>
    ee8e:	8b 5a 40             	mov    0x40(%edx),%ebx
    ee91:	83 c2 3c             	add    $0x3c,%edx
    ee94:	89 55 d4             	mov    %edx,-0x2c(%ebp)
    ee97:	8b 55 e0             	mov    -0x20(%ebp),%edx
    ee9a:	83 c2 20             	add    $0x20,%edx
    ee9d:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx
    eea0:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    eea3:	89 da                	mov    %ebx,%edx
    eea5:	0f 84 2d 01 00 00    	je     efd8 <block_cache_fini+0x1a8>
    eeab:	90                   	nop
    eeac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    eeb0:	8d 5a bc             	lea    -0x44(%edx),%ebx
    eeb3:	8b 4b 44             	mov    0x44(%ebx),%ecx
    eeb6:	85 c9                	test   %ecx,%ecx
    eeb8:	74 0f                	je     eec9 <block_cache_fini+0x99>
    eeba:	8b 43 48             	mov    0x48(%ebx),%eax
    eebd:	85 c0                	test   %eax,%eax
    eebf:	74 08                	je     eec9 <block_cache_fini+0x99>
    eec1:	89 08                	mov    %ecx,(%eax)
    eec3:	8b 4b 44             	mov    0x44(%ebx),%ecx
    eec6:	89 41 04             	mov    %eax,0x4(%ecx)
    eec9:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
    eed0:	c7 43 48 00 00 00 00 	movl   $0x0,0x48(%ebx)
    eed7:	80 7b 14 00          	cmpb   $0x0,0x14(%ebx)
    eedb:	74 41                	je     ef1e <block_cache_fini+0xee>
    eedd:	8b 43 38             	mov    0x38(%ebx),%eax
    eee0:	8b 55 e0             	mov    -0x20(%ebp),%edx
    eee3:	89 45 d8             	mov    %eax,-0x28(%ebp)
    eee6:	8b 43 40             	mov    0x40(%ebx),%eax
    eee9:	8b 7a 14             	mov    0x14(%edx),%edi
    eeec:	8b 53 3c             	mov    0x3c(%ebx),%edx
    eeef:	89 44 24 14          	mov    %eax,0x14(%esp)
    eef3:	89 55 dc             	mov    %edx,-0x24(%ebp)
    eef6:	8b 43 54             	mov    0x54(%ebx),%eax
    eef9:	8b 55 dc             	mov    -0x24(%ebp),%edx
    eefc:	89 44 24 10          	mov    %eax,0x10(%esp)
    ef00:	8b 45 d8             	mov    -0x28(%ebp),%eax
    ef03:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    ef07:	89 44 24 04          	mov    %eax,0x4(%esp)
    ef0b:	89 54 24 08          	mov    %edx,0x8(%esp)
    ef0f:	8b 46 10             	mov    0x10(%esi),%eax
    ef12:	89 04 24             	mov    %eax,(%esp)
    ef15:	e8 e6 15 00 00       	call   10500 <bd_write_blocks>
    ef1a:	85 c0                	test   %eax,%eax
    ef1c:	75 7a                	jne    ef98 <block_cache_fini+0x168>
    ef1e:	8d 43 4c             	lea    0x4c(%ebx),%eax
    ef21:	8b 7d e4             	mov    -0x1c(%ebp),%edi
    ef24:	89 44 24 04          	mov    %eax,0x4(%esp)
    ef28:	89 3c 24             	mov    %edi,(%esp)
    ef2b:	e8 d0 76 01 00       	call   26600 <hash_table_remove_item>
    ef30:	8b 43 54             	mov    0x54(%ebx),%eax
    ef33:	89 04 24             	mov    %eax,(%esp)
    ef36:	e8 a5 12 01 00       	call   201e0 <free>
    ef3b:	89 1c 24             	mov    %ebx,(%esp)
    ef3e:	e8 9d 12 01 00       	call   201e0 <free>
    ef43:	8b 45 e0             	mov    -0x20(%ebp),%eax
    ef46:	8b 50 40             	mov    0x40(%eax),%edx
    ef49:	3b 55 d4             	cmp    -0x2c(%ebp),%edx
    ef4c:	0f 85 5e ff ff ff    	jne    eeb0 <block_cache_fini+0x80>
    ef52:	89 3c 24             	mov    %edi,(%esp)
    ef55:	31 ff                	xor    %edi,%edi
    ef57:	e8 44 6f 01 00       	call   25ea0 <hash_table_destroy>
    ef5c:	8b 55 e0             	mov    -0x20(%ebp),%edx
    ef5f:	c7 46 24 00 00 00 00 	movl   $0x0,0x24(%esi)
    ef66:	89 14 24             	mov    %edx,(%esp)
    ef69:	e8 72 12 01 00       	call   201e0 <free>
    ef6e:	83 c4 4c             	add    $0x4c,%esp
    ef71:	89 f8                	mov    %edi,%eax
    ef73:	5b                   	pop    %ebx
    ef74:	5e                   	pop    %esi
    ef75:	5f                   	pop    %edi
    ef76:	5d                   	pop    %ebp
    ef77:	c3                   	ret    
    ef78:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    ef7f:	83 cf ff             	or     $0xffffffff,%edi
    ef82:	e8 59 84 00 00       	call   173e0 <fibril_mutex_unlock>
    ef87:	83 c4 4c             	add    $0x4c,%esp
    ef8a:	89 f8                	mov    %edi,%eax
    ef8c:	5b                   	pop    %ebx
    ef8d:	5e                   	pop    %esi
    ef8e:	5f                   	pop    %edi
    ef8f:	5d                   	pop    %ebp
    ef90:	c3                   	ret    
    ef91:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    ef98:	89 f9                	mov    %edi,%ecx
    ef9a:	89 c7                	mov    %eax,%edi
    ef9c:	8b 46 08             	mov    0x8(%esi),%eax
    ef9f:	8b 55 dc             	mov    -0x24(%ebp),%edx
    efa2:	89 44 24 14          	mov    %eax,0x14(%esp)
    efa6:	8b 45 d8             	mov    -0x28(%ebp),%eax
    efa9:	89 54 24 10          	mov    %edx,0x10(%esp)
    efad:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    efb1:	89 7c 24 04          	mov    %edi,0x4(%esp)
    efb5:	89 44 24 0c          	mov    %eax,0xc(%esp)
    efb9:	c7 04 24 0c d7 02 00 	movl   $0x2d70c,(%esp)
    efc0:	e8 8b c2 00 00       	call   1b250 <printf>
    efc5:	e8 46 b8 01 00       	call   2a810 <stacktrace_print>
    efca:	83 c4 4c             	add    $0x4c,%esp
    efcd:	89 f8                	mov    %edi,%eax
    efcf:	5b                   	pop    %ebx
    efd0:	5e                   	pop    %esi
    efd1:	5f                   	pop    %edi
    efd2:	5d                   	pop    %ebp
    efd3:	c3                   	ret    
    efd4:	31 ff                	xor    %edi,%edi
    efd6:	eb af                	jmp    ef87 <block_cache_fini+0x157>
    efd8:	8b 55 e0             	mov    -0x20(%ebp),%edx
    efdb:	8d 7a 20             	lea    0x20(%edx),%edi
    efde:	e9 6f ff ff ff       	jmp    ef52 <block_cache_fini+0x122>
    efe3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    efe9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000eff0 <block_fini>:
    eff0:	55                   	push   %ebp
    eff1:	89 e5                	mov    %esp,%ebp
    eff3:	56                   	push   %esi
    eff4:	53                   	push   %ebx
    eff5:	83 ec 10             	sub    $0x10,%esp
    eff8:	8b 75 08             	mov    0x8(%ebp),%esi
    effb:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f002:	e8 b9 82 00 00       	call   172c0 <fibril_mutex_lock>
    f007:	8b 1d 68 04 03 00    	mov    0x30468,%ebx
    f00d:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    f013:	75 1a                	jne    f02f <block_fini+0x3f>
    f015:	e9 a6 00 00 00       	jmp    f0c0 <block_fini+0xd0>
    f01a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    f020:	8b 5b 04             	mov    0x4(%ebx),%ebx
    f023:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    f029:	0f 84 91 00 00 00    	je     f0c0 <block_fini+0xd0>
    f02f:	3b 73 08             	cmp    0x8(%ebx),%esi
    f032:	75 ec                	jne    f020 <block_fini+0x30>
    f034:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f03b:	e8 a0 83 00 00       	call   173e0 <fibril_mutex_unlock>
    f040:	8b 4b 24             	mov    0x24(%ebx),%ecx
    f043:	85 c9                	test   %ecx,%ecx
    f045:	74 08                	je     f04f <block_fini+0x5f>
    f047:	89 34 24             	mov    %esi,(%esp)
    f04a:	e8 e1 fd ff ff       	call   ee30 <block_cache_fini>
    f04f:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f056:	e8 65 82 00 00       	call   172c0 <fibril_mutex_lock>
    f05b:	8b 13                	mov    (%ebx),%edx
    f05d:	85 d2                	test   %edx,%edx
    f05f:	74 0e                	je     f06f <block_fini+0x7f>
    f061:	8b 43 04             	mov    0x4(%ebx),%eax
    f064:	85 c0                	test   %eax,%eax
    f066:	74 07                	je     f06f <block_fini+0x7f>
    f068:	89 10                	mov    %edx,(%eax)
    f06a:	8b 13                	mov    (%ebx),%edx
    f06c:	89 42 04             	mov    %eax,0x4(%edx)
    f06f:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    f075:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    f07c:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f083:	e8 58 83 00 00       	call   173e0 <fibril_mutex_unlock>
    f088:	8b 43 14             	mov    0x14(%ebx),%eax
    f08b:	85 c0                	test   %eax,%eax
    f08d:	74 08                	je     f097 <block_fini+0xa7>
    f08f:	89 04 24             	mov    %eax,(%esp)
    f092:	e8 49 11 01 00       	call   201e0 <free>
    f097:	8b 43 10             	mov    0x10(%ebx),%eax
    f09a:	89 04 24             	mov    %eax,(%esp)
    f09d:	e8 de 12 00 00       	call   10380 <bd_close>
    f0a2:	8b 43 0c             	mov    0xc(%ebx),%eax
    f0a5:	89 04 24             	mov    %eax,(%esp)
    f0a8:	e8 63 44 01 00       	call   23510 <async_hangup>
    f0ad:	89 5d 08             	mov    %ebx,0x8(%ebp)
    f0b0:	83 c4 10             	add    $0x10,%esp
    f0b3:	5b                   	pop    %ebx
    f0b4:	5e                   	pop    %esi
    f0b5:	5d                   	pop    %ebp
    f0b6:	e9 25 11 01 00       	jmp    201e0 <free>
    f0bb:	90                   	nop
    f0bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f0c0:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f0c7:	e8 14 83 00 00       	call   173e0 <fibril_mutex_unlock>
    f0cc:	c7 44 24 08 b8 00 00 	movl   $0xb8,0x8(%esp)
    f0d3:	00 
    f0d4:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    f0db:	00 
    f0dc:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
    f0e3:	e8 c8 b7 01 00       	call   2a8b0 <assert_abort>
    f0e8:	90                   	nop
    f0e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0000f0f0 <block_put>:
    f0f0:	55                   	push   %ebp
    f0f1:	89 e5                	mov    %esp,%ebp
    f0f3:	57                   	push   %edi
    f0f4:	56                   	push   %esi
    f0f5:	53                   	push   %ebx
    f0f6:	83 ec 3c             	sub    $0x3c,%esp
    f0f9:	8b 7d 08             	mov    0x8(%ebp),%edi
    f0fc:	8b 5f 2c             	mov    0x2c(%edi),%ebx
    f0ff:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f106:	e8 b5 81 00 00       	call   172c0 <fibril_mutex_lock>
    f10b:	8b 35 68 04 03 00    	mov    0x30468,%esi
    f111:	81 fe 64 04 03 00    	cmp    $0x30464,%esi
    f117:	75 16                	jne    f12f <block_put+0x3f>
    f119:	e9 fa 00 00 00       	jmp    f218 <block_put+0x128>
    f11e:	66 90                	xchg   %ax,%ax
    f120:	8b 76 04             	mov    0x4(%esi),%esi
    f123:	81 fe 64 04 03 00    	cmp    $0x30464,%esi
    f129:	0f 84 e9 00 00 00    	je     f218 <block_put+0x128>
    f12f:	3b 5e 08             	cmp    0x8(%esi),%ebx
    f132:	75 ec                	jne    f120 <block_put+0x30>
    f134:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f13b:	e8 a0 82 00 00       	call   173e0 <fibril_mutex_unlock>
    f140:	8b 5e 24             	mov    0x24(%esi),%ebx
    f143:	85 db                	test   %ebx,%ebx
    f145:	0f 84 10 02 00 00    	je     f35b <block_put+0x26b>
    f14b:	8b 47 10             	mov    0x10(%edi),%eax
    f14e:	85 c0                	test   %eax,%eax
    f150:	0f 84 21 02 00 00    	je     f377 <block_put+0x287>
    f156:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
    f15d:	89 75 d8             	mov    %esi,-0x28(%ebp)
    f160:	eb 7b                	jmp    f1dd <block_put+0xed>
    f162:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    f168:	80 7f 14 00          	cmpb   $0x0,0x14(%edi)
    f16c:	74 0a                	je     f178 <block_put+0x88>
    f16e:	83 7f 10 01          	cmpl   $0x1,0x10(%edi)
    f172:	0f 84 18 01 00 00    	je     f290 <block_put+0x1a0>
    f178:	89 3c 24             	mov    %edi,(%esp)
    f17b:	e8 60 82 00 00       	call   173e0 <fibril_mutex_unlock>
    f180:	89 1c 24             	mov    %ebx,(%esp)
    f183:	e8 38 81 00 00       	call   172c0 <fibril_mutex_lock>
    f188:	89 3c 24             	mov    %edi,(%esp)
    f18b:	e8 30 81 00 00       	call   172c0 <fibril_mutex_lock>
    f190:	8b 4f 10             	mov    0x10(%edi),%ecx
    f193:	8d 41 ff             	lea    -0x1(%ecx),%eax
    f196:	89 47 10             	mov    %eax,0x10(%edi)
    f199:	85 c0                	test   %eax,%eax
    f19b:	0f 85 9f 01 00 00    	jne    f340 <block_put+0x250>
    f1a1:	83 7b 1c 14          	cmpl   $0x14,0x1c(%ebx)
    f1a5:	0f 87 95 00 00 00    	ja     f240 <block_put+0x150>
    f1ab:	8b 45 dc             	mov    -0x24(%ebp),%eax
    f1ae:	85 c0                	test   %eax,%eax
    f1b0:	0f 85 8a 00 00 00    	jne    f240 <block_put+0x150>
    f1b6:	83 7b 44 01          	cmpl   $0x1,0x44(%ebx)
    f1ba:	0f 84 68 01 00 00    	je     f328 <block_put+0x238>
    f1c0:	80 7f 14 00          	cmpb   $0x0,0x14(%edi)
    f1c4:	0f 84 5e 01 00 00    	je     f328 <block_put+0x238>
    f1ca:	89 4f 10             	mov    %ecx,0x10(%edi)
    f1cd:	89 3c 24             	mov    %edi,(%esp)
    f1d0:	e8 0b 82 00 00       	call   173e0 <fibril_mutex_unlock>
    f1d5:	89 1c 24             	mov    %ebx,(%esp)
    f1d8:	e8 03 82 00 00       	call   173e0 <fibril_mutex_unlock>
    f1dd:	89 1c 24             	mov    %ebx,(%esp)
    f1e0:	e8 db 80 00 00       	call   172c0 <fibril_mutex_lock>
    f1e5:	8b 43 1c             	mov    0x1c(%ebx),%eax
    f1e8:	8b 73 44             	mov    0x44(%ebx),%esi
    f1eb:	89 1c 24             	mov    %ebx,(%esp)
    f1ee:	89 45 e0             	mov    %eax,-0x20(%ebp)
    f1f1:	e8 ea 81 00 00       	call   173e0 <fibril_mutex_unlock>
    f1f6:	89 3c 24             	mov    %edi,(%esp)
    f1f9:	e8 c2 80 00 00       	call   172c0 <fibril_mutex_lock>
    f1fe:	80 7f 15 00          	cmpb   $0x0,0x15(%edi)
    f202:	0f 84 60 ff ff ff    	je     f168 <block_put+0x78>
    f208:	c6 47 14 00          	movb   $0x0,0x14(%edi)
    f20c:	e9 67 ff ff ff       	jmp    f178 <block_put+0x88>
    f211:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    f218:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f21f:	e8 bc 81 00 00       	call   173e0 <fibril_mutex_unlock>
    f224:	c7 44 24 08 2d 02 00 	movl   $0x22d,0x8(%esp)
    f22b:	00 
    f22c:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    f233:	00 
    f234:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
    f23b:	e8 70 b6 01 00       	call   2a8b0 <assert_abort>
    f240:	80 7f 14 00          	cmpb   $0x0,0x14(%edi)
    f244:	75 84                	jne    f1ca <block_put+0xda>
    f246:	8d 47 4c             	lea    0x4c(%edi),%eax
    f249:	89 44 24 04          	mov    %eax,0x4(%esp)
    f24d:	8d 43 20             	lea    0x20(%ebx),%eax
    f250:	89 04 24             	mov    %eax,(%esp)
    f253:	e8 a8 73 01 00       	call   26600 <hash_table_remove_item>
    f258:	89 3c 24             	mov    %edi,(%esp)
    f25b:	e8 80 81 00 00       	call   173e0 <fibril_mutex_unlock>
    f260:	8b 47 54             	mov    0x54(%edi),%eax
    f263:	89 04 24             	mov    %eax,(%esp)
    f266:	e8 75 0f 01 00       	call   201e0 <free>
    f26b:	89 3c 24             	mov    %edi,(%esp)
    f26e:	e8 6d 0f 01 00       	call   201e0 <free>
    f273:	8b 73 1c             	mov    0x1c(%ebx),%esi
    f276:	4e                   	dec    %esi
    f277:	89 73 1c             	mov    %esi,0x1c(%ebx)
    f27a:	89 1c 24             	mov    %ebx,(%esp)
    f27d:	e8 5e 81 00 00       	call   173e0 <fibril_mutex_unlock>
    f282:	8b 45 dc             	mov    -0x24(%ebp),%eax
    f285:	83 c4 3c             	add    $0x3c,%esp
    f288:	5b                   	pop    %ebx
    f289:	5e                   	pop    %esi
    f28a:	5f                   	pop    %edi
    f28b:	5d                   	pop    %ebp
    f28c:	c3                   	ret    
    f28d:	8d 76 00             	lea    0x0(%esi),%esi
    f290:	4e                   	dec    %esi
    f291:	75 0a                	jne    f29d <block_put+0x1ad>
    f293:	83 7d e0 14          	cmpl   $0x14,-0x20(%ebp)
    f297:	0f 86 db fe ff ff    	jbe    f178 <block_put+0x88>
    f29d:	8b 47 38             	mov    0x38(%edi),%eax
    f2a0:	8b 57 3c             	mov    0x3c(%edi),%edx
    f2a3:	89 45 e0             	mov    %eax,-0x20(%ebp)
    f2a6:	8b 47 40             	mov    0x40(%edi),%eax
    f2a9:	8b 73 14             	mov    0x14(%ebx),%esi
    f2ac:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    f2af:	89 44 24 14          	mov    %eax,0x14(%esp)
    f2b3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    f2b6:	8b 47 54             	mov    0x54(%edi),%eax
    f2b9:	89 54 24 08          	mov    %edx,0x8(%esp)
    f2bd:	89 44 24 10          	mov    %eax,0x10(%esp)
    f2c1:	8b 55 d8             	mov    -0x28(%ebp),%edx
    f2c4:	8b 45 e0             	mov    -0x20(%ebp),%eax
    f2c7:	89 74 24 0c          	mov    %esi,0xc(%esp)
    f2cb:	89 44 24 04          	mov    %eax,0x4(%esp)
    f2cf:	8b 42 10             	mov    0x10(%edx),%eax
    f2d2:	89 04 24             	mov    %eax,(%esp)
    f2d5:	e8 26 12 00 00       	call   10500 <bd_write_blocks>
    f2da:	89 45 dc             	mov    %eax,-0x24(%ebp)
    f2dd:	85 c0                	test   %eax,%eax
    f2df:	0f 84 23 ff ff ff    	je     f208 <block_put+0x118>
    f2e5:	8b 55 d8             	mov    -0x28(%ebp),%edx
    f2e8:	8b 42 08             	mov    0x8(%edx),%eax
    f2eb:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    f2ee:	89 44 24 14          	mov    %eax,0x14(%esp)
    f2f2:	8b 45 e0             	mov    -0x20(%ebp),%eax
    f2f5:	89 44 24 0c          	mov    %eax,0xc(%esp)
    f2f9:	8b 45 dc             	mov    -0x24(%ebp),%eax
    f2fc:	89 54 24 10          	mov    %edx,0x10(%esp)
    f300:	89 74 24 08          	mov    %esi,0x8(%esp)
    f304:	89 44 24 04          	mov    %eax,0x4(%esp)
    f308:	c7 04 24 0c d7 02 00 	movl   $0x2d70c,(%esp)
    f30f:	e8 3c bf 00 00       	call   1b250 <printf>
    f314:	e8 f7 b4 01 00       	call   2a810 <stacktrace_print>
    f319:	c6 47 14 00          	movb   $0x0,0x14(%edi)
    f31d:	e9 56 fe ff ff       	jmp    f178 <block_put+0x88>
    f322:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    f328:	8d 4b 3c             	lea    0x3c(%ebx),%ecx
    f32b:	8d 47 44             	lea    0x44(%edi),%eax
    f32e:	89 4f 48             	mov    %ecx,0x48(%edi)
    f331:	8b 4b 3c             	mov    0x3c(%ebx),%ecx
    f334:	89 4f 44             	mov    %ecx,0x44(%edi)
    f337:	8b 4b 3c             	mov    0x3c(%ebx),%ecx
    f33a:	89 43 3c             	mov    %eax,0x3c(%ebx)
    f33d:	89 41 04             	mov    %eax,0x4(%ecx)
    f340:	89 3c 24             	mov    %edi,(%esp)
    f343:	e8 98 80 00 00       	call   173e0 <fibril_mutex_unlock>
    f348:	89 1c 24             	mov    %ebx,(%esp)
    f34b:	e8 90 80 00 00       	call   173e0 <fibril_mutex_unlock>
    f350:	8b 45 dc             	mov    -0x24(%ebp),%eax
    f353:	83 c4 3c             	add    $0x3c,%esp
    f356:	5b                   	pop    %ebx
    f357:	5e                   	pop    %esi
    f358:	5f                   	pop    %edi
    f359:	5d                   	pop    %ebp
    f35a:	c3                   	ret    
    f35b:	c7 44 24 08 2e 02 00 	movl   $0x22e,0x8(%esp)
    f362:	00 
    f363:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    f36a:	00 
    f36b:	c7 04 24 7f d6 02 00 	movl   $0x2d67f,(%esp)
    f372:	e8 39 b5 01 00       	call   2a8b0 <assert_abort>
    f377:	c7 44 24 08 2f 02 00 	movl   $0x22f,0x8(%esp)
    f37e:	00 
    f37f:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    f386:	00 
    f387:	c7 04 24 8d d6 02 00 	movl   $0x2d68d,(%esp)
    f38e:	e8 1d b5 01 00       	call   2a8b0 <assert_abort>
    f393:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    f399:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0000f3a0 <block_get>:
    f3a0:	55                   	push   %ebp
    f3a1:	89 e5                	mov    %esp,%ebp
    f3a3:	57                   	push   %edi
    f3a4:	56                   	push   %esi
    f3a5:	53                   	push   %ebx
    f3a6:	83 ec 5c             	sub    $0x5c,%esp
    f3a9:	8b 45 10             	mov    0x10(%ebp),%eax
    f3ac:	89 45 e0             	mov    %eax,-0x20(%ebp)
    f3af:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f3b6:	8b 45 14             	mov    0x14(%ebp),%eax
    f3b9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    f3bc:	e8 ff 7e 00 00       	call   172c0 <fibril_mutex_lock>
    f3c1:	8b 35 68 04 03 00    	mov    0x30468,%esi
    f3c7:	81 fe 64 04 03 00    	cmp    $0x30464,%esi
    f3cd:	74 21                	je     f3f0 <block_get+0x50>
    f3cf:	8b 55 0c             	mov    0xc(%ebp),%edx
    f3d2:	89 d0                	mov    %edx,%eax
    f3d4:	3b 56 08             	cmp    0x8(%esi),%edx
    f3d7:	75 0c                	jne    f3e5 <block_get+0x45>
    f3d9:	eb 3d                	jmp    f418 <block_get+0x78>
    f3db:	90                   	nop
    f3dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f3e0:	3b 46 08             	cmp    0x8(%esi),%eax
    f3e3:	74 33                	je     f418 <block_get+0x78>
    f3e5:	8b 76 04             	mov    0x4(%esi),%esi
    f3e8:	81 fe 64 04 03 00    	cmp    $0x30464,%esi
    f3ee:	75 f0                	jne    f3e0 <block_get+0x40>
    f3f0:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f3f7:	e8 e4 7f 00 00       	call   173e0 <fibril_mutex_unlock>
    f3fc:	c7 44 24 08 80 01 00 	movl   $0x180,0x8(%esp)
    f403:	00 
    f404:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    f40b:	00 
    f40c:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
    f413:	e8 98 b4 01 00       	call   2a8b0 <assert_abort>
    f418:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f41f:	e8 bc 7f 00 00       	call   173e0 <fibril_mutex_unlock>
    f424:	8b 5e 24             	mov    0x24(%esi),%ebx
    f427:	85 db                	test   %ebx,%ebx
    f429:	0f 84 36 04 00 00    	je     f865 <block_get+0x4c5>
    f42f:	8d 4b 20             	lea    0x20(%ebx),%ecx
    f432:	8d 53 3c             	lea    0x3c(%ebx),%edx
    f435:	89 4d c8             	mov    %ecx,-0x38(%ebp)
    f438:	89 55 d8             	mov    %edx,-0x28(%ebp)
    f43b:	89 75 cc             	mov    %esi,-0x34(%ebp)
    f43e:	66 90                	xchg   %ax,%ax
    f440:	89 1c 24             	mov    %ebx,(%esp)
    f443:	e8 78 7e 00 00       	call   172c0 <fibril_mutex_lock>
    f448:	8d 4d e0             	lea    -0x20(%ebp),%ecx
    f44b:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    f44f:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    f452:	89 0c 24             	mov    %ecx,(%esp)
    f455:	e8 26 6f 01 00       	call   26380 <hash_table_find>
    f45a:	85 c0                	test   %eax,%eax
    f45c:	0f 85 9b 01 00 00    	jne    f5fd <block_get+0x25d>
    f462:	83 7b 1c 09          	cmpl   $0x9,0x1c(%ebx)
    f466:	0f 86 c4 00 00 00    	jbe    f530 <block_get+0x190>
    f46c:	8b 53 40             	mov    0x40(%ebx),%edx
    f46f:	3b 55 d8             	cmp    -0x28(%ebp),%edx
    f472:	0f 84 b8 00 00 00    	je     f530 <block_get+0x190>
    f478:	8d 72 bc             	lea    -0x44(%edx),%esi
    f47b:	89 34 24             	mov    %esi,(%esp)
    f47e:	e8 3d 7e 00 00       	call   172c0 <fibril_mutex_lock>
    f483:	80 7e 14 00          	cmpb   $0x0,0x14(%esi)
    f487:	0f 84 13 02 00 00    	je     f6a0 <block_get+0x300>
    f48d:	8b 4e 44             	mov    0x44(%esi),%ecx
    f490:	85 c9                	test   %ecx,%ecx
    f492:	74 0f                	je     f4a3 <block_get+0x103>
    f494:	8b 46 48             	mov    0x48(%esi),%eax
    f497:	85 c0                	test   %eax,%eax
    f499:	74 08                	je     f4a3 <block_get+0x103>
    f49b:	89 08                	mov    %ecx,(%eax)
    f49d:	8b 4e 44             	mov    0x44(%esi),%ecx
    f4a0:	89 41 04             	mov    %eax,0x4(%ecx)
    f4a3:	c7 46 44 00 00 00 00 	movl   $0x0,0x44(%esi)
    f4aa:	8d 46 44             	lea    0x44(%esi),%eax
    f4ad:	8b 4b 3c             	mov    0x3c(%ebx),%ecx
    f4b0:	8b 55 d8             	mov    -0x28(%ebp),%edx
    f4b3:	89 4e 44             	mov    %ecx,0x44(%esi)
    f4b6:	89 56 48             	mov    %edx,0x48(%esi)
    f4b9:	8b 4b 3c             	mov    0x3c(%ebx),%ecx
    f4bc:	89 43 3c             	mov    %eax,0x3c(%ebx)
    f4bf:	89 41 04             	mov    %eax,0x4(%ecx)
    f4c2:	89 1c 24             	mov    %ebx,(%esp)
    f4c5:	e8 16 7f 00 00       	call   173e0 <fibril_mutex_unlock>
    f4ca:	8b 46 40             	mov    0x40(%esi),%eax
    f4cd:	8b 4e 3c             	mov    0x3c(%esi),%ecx
    f4d0:	8b 56 38             	mov    0x38(%esi),%edx
    f4d3:	8b 7b 14             	mov    0x14(%ebx),%edi
    f4d6:	89 44 24 14          	mov    %eax,0x14(%esp)
    f4da:	8b 46 54             	mov    0x54(%esi),%eax
    f4dd:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
    f4e0:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    f4e4:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    f4e7:	89 44 24 10          	mov    %eax,0x10(%esp)
    f4eb:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    f4ef:	89 54 24 04          	mov    %edx,0x4(%esp)
    f4f3:	89 55 d0             	mov    %edx,-0x30(%ebp)
    f4f6:	8b 41 10             	mov    0x10(%ecx),%eax
    f4f9:	89 04 24             	mov    %eax,(%esp)
    f4fc:	e8 ff 0f 00 00       	call   10500 <bd_write_blocks>
    f501:	85 c0                	test   %eax,%eax
    f503:	0f 85 87 00 00 00    	jne    f590 <block_get+0x1f0>
    f509:	c6 46 14 00          	movb   $0x0,0x14(%esi)
    f50d:	89 1c 24             	mov    %ebx,(%esp)
    f510:	e8 7b 7e 00 00       	call   17390 <fibril_mutex_trylock>
    f515:	84 c0                	test   %al,%al
    f517:	0f 85 b3 00 00 00    	jne    f5d0 <block_get+0x230>
    f51d:	89 34 24             	mov    %esi,(%esp)
    f520:	e8 bb 7e 00 00       	call   173e0 <fibril_mutex_unlock>
    f525:	e9 16 ff ff ff       	jmp    f440 <block_get+0xa0>
    f52a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    f530:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)
    f537:	e8 94 0b 01 00       	call   200d0 <malloc>
    f53c:	89 c6                	mov    %eax,%esi
    f53e:	85 c0                	test   %eax,%eax
    f540:	74 1e                	je     f560 <block_get+0x1c0>
    f542:	8b 43 10             	mov    0x10(%ebx),%eax
    f545:	89 04 24             	mov    %eax,(%esp)
    f548:	e8 83 0b 01 00       	call   200d0 <malloc>
    f54d:	89 46 54             	mov    %eax,0x54(%esi)
    f550:	85 c0                	test   %eax,%eax
    f552:	0f 85 c4 02 00 00    	jne    f81c <block_get+0x47c>
    f558:	89 34 24             	mov    %esi,(%esp)
    f55b:	e8 80 0c 01 00       	call   201e0 <free>
    f560:	8b 53 40             	mov    0x40(%ebx),%edx
    f563:	3b 55 d8             	cmp    -0x28(%ebp),%edx
    f566:	0f 85 0c ff ff ff    	jne    f478 <block_get+0xd8>
    f56c:	89 1c 24             	mov    %ebx,(%esp)
    f56f:	31 ff                	xor    %edi,%edi
    f571:	e8 6a 7e 00 00       	call   173e0 <fibril_mutex_unlock>
    f576:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
    f57b:	8b 45 08             	mov    0x8(%ebp),%eax
    f57e:	89 38                	mov    %edi,(%eax)
    f580:	83 c4 5c             	add    $0x5c,%esp
    f583:	89 c8                	mov    %ecx,%eax
    f585:	5b                   	pop    %ebx
    f586:	5e                   	pop    %esi
    f587:	5f                   	pop    %edi
    f588:	5d                   	pop    %ebp
    f589:	c3                   	ret    
    f58a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
    f590:	8b 4d cc             	mov    -0x34(%ebp),%ecx
    f593:	8b 51 08             	mov    0x8(%ecx),%edx
    f596:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
    f599:	89 54 24 14          	mov    %edx,0x14(%esp)
    f59d:	8b 55 d0             	mov    -0x30(%ebp),%edx
    f5a0:	89 54 24 0c          	mov    %edx,0xc(%esp)
    f5a4:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    f5a8:	89 7c 24 08          	mov    %edi,0x8(%esp)
    f5ac:	89 44 24 04          	mov    %eax,0x4(%esp)
    f5b0:	c7 04 24 0c d7 02 00 	movl   $0x2d70c,(%esp)
    f5b7:	e8 94 bc 00 00       	call   1b250 <printf>
    f5bc:	e8 4f b2 01 00       	call   2a810 <stacktrace_print>
    f5c1:	89 34 24             	mov    %esi,(%esp)
    f5c4:	e8 17 7e 00 00       	call   173e0 <fibril_mutex_unlock>
    f5c9:	e9 72 fe ff ff       	jmp    f440 <block_get+0xa0>
    f5ce:	66 90                	xchg   %ax,%ax
    f5d0:	8d 4d e0             	lea    -0x20(%ebp),%ecx
    f5d3:	89 f7                	mov    %esi,%edi
    f5d5:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    f5d9:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    f5dc:	89 0c 24             	mov    %ecx,(%esp)
    f5df:	8b 75 cc             	mov    -0x34(%ebp),%esi
    f5e2:	e8 99 6d 01 00       	call   26380 <hash_table_find>
    f5e7:	85 c0                	test   %eax,%eax
    f5e9:	0f 84 b6 00 00 00    	je     f6a5 <block_get+0x305>
    f5ef:	89 3c 24             	mov    %edi,(%esp)
    f5f2:	89 45 c0             	mov    %eax,-0x40(%ebp)
    f5f5:	e8 e6 7d 00 00       	call   173e0 <fibril_mutex_unlock>
    f5fa:	8b 45 c0             	mov    -0x40(%ebp),%eax
    f5fd:	8d 78 b4             	lea    -0x4c(%eax),%edi
    f600:	89 3c 24             	mov    %edi,(%esp)
    f603:	e8 b8 7c 00 00       	call   172c0 <fibril_mutex_lock>
    f608:	8b 47 10             	mov    0x10(%edi),%eax
    f60b:	8d 50 01             	lea    0x1(%eax),%edx
    f60e:	85 c0                	test   %eax,%eax
    f610:	89 57 10             	mov    %edx,0x10(%edi)
    f613:	75 24                	jne    f639 <block_get+0x299>
    f615:	8b 57 44             	mov    0x44(%edi),%edx
    f618:	85 d2                	test   %edx,%edx
    f61a:	74 0f                	je     f62b <block_get+0x28b>
    f61c:	8b 47 48             	mov    0x48(%edi),%eax
    f61f:	85 c0                	test   %eax,%eax
    f621:	74 08                	je     f62b <block_get+0x28b>
    f623:	89 10                	mov    %edx,(%eax)
    f625:	8b 57 44             	mov    0x44(%edi),%edx
    f628:	89 42 04             	mov    %eax,0x4(%edx)
    f62b:	c7 47 44 00 00 00 00 	movl   $0x0,0x44(%edi)
    f632:	c7 47 48 00 00 00 00 	movl   $0x0,0x48(%edi)
    f639:	80 7f 15 01          	cmpb   $0x1,0x15(%edi)
    f63d:	19 c0                	sbb    %eax,%eax
    f63f:	40                   	inc    %eax
    f640:	80 7f 15 01          	cmpb   $0x1,0x15(%edi)
    f644:	19 c9                	sbb    %ecx,%ecx
    f646:	89 3c 24             	mov    %edi,(%esp)
    f649:	83 f1 ff             	xor    $0xffffffff,%ecx
    f64c:	88 45 c0             	mov    %al,-0x40(%ebp)
    f64f:	81 e1 f7 fe ff ff    	and    $0xfffffef7,%ecx
    f655:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
    f658:	e8 83 7d 00 00       	call   173e0 <fibril_mutex_unlock>
    f65d:	89 1c 24             	mov    %ebx,(%esp)
    f660:	e8 7b 7d 00 00       	call   173e0 <fibril_mutex_unlock>
    f665:	8a 45 c0             	mov    -0x40(%ebp),%al
    f668:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
    f66b:	84 c0                	test   %al,%al
    f66d:	0f 84 08 ff ff ff    	je     f57b <block_get+0x1db>
    f673:	80 7f 15 00          	cmpb   $0x0,0x15(%edi)
    f677:	0f 84 b0 01 00 00    	je     f82d <block_get+0x48d>
    f67d:	89 3c 24             	mov    %edi,(%esp)
    f680:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
    f683:	e8 68 fa ff ff       	call   f0f0 <block_put>
    f688:	8b 45 08             	mov    0x8(%ebp),%eax
    f68b:	31 ff                	xor    %edi,%edi
    f68d:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
    f690:	89 38                	mov    %edi,(%eax)
    f692:	83 c4 5c             	add    $0x5c,%esp
    f695:	89 c8                	mov    %ecx,%eax
    f697:	5b                   	pop    %ebx
    f698:	5e                   	pop    %esi
    f699:	5f                   	pop    %edi
    f69a:	5d                   	pop    %ebp
    f69b:	c3                   	ret    
    f69c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f6a0:	89 f7                	mov    %esi,%edi
    f6a2:	8b 75 cc             	mov    -0x34(%ebp),%esi
    f6a5:	89 3c 24             	mov    %edi,(%esp)
    f6a8:	e8 33 7d 00 00       	call   173e0 <fibril_mutex_unlock>
    f6ad:	8b 57 44             	mov    0x44(%edi),%edx
    f6b0:	85 d2                	test   %edx,%edx
    f6b2:	74 0f                	je     f6c3 <block_get+0x323>
    f6b4:	8b 47 48             	mov    0x48(%edi),%eax
    f6b7:	85 c0                	test   %eax,%eax
    f6b9:	74 08                	je     f6c3 <block_get+0x323>
    f6bb:	89 10                	mov    %edx,(%eax)
    f6bd:	8b 57 44             	mov    0x44(%edi),%edx
    f6c0:	89 42 04             	mov    %eax,0x4(%edx)
    f6c3:	8d 47 4c             	lea    0x4c(%edi),%eax
    f6c6:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    f6c9:	c7 47 44 00 00 00 00 	movl   $0x0,0x44(%edi)
    f6d0:	c7 47 48 00 00 00 00 	movl   $0x0,0x48(%edi)
    f6d7:	89 44 24 04          	mov    %eax,0x4(%esp)
    f6db:	89 0c 24             	mov    %ecx,(%esp)
    f6de:	e8 1d 6f 01 00       	call   26600 <hash_table_remove_item>
    f6e3:	89 3c 24             	mov    %edi,(%esp)
    f6e6:	e8 b5 7b 00 00       	call   172a0 <fibril_mutex_initialize>
    f6eb:	8d 47 18             	lea    0x18(%edi),%eax
    f6ee:	c7 47 10 01 00 00 00 	movl   $0x1,0x10(%edi)
    f6f5:	c6 47 14 00          	movb   $0x0,0x14(%edi)
    f6f9:	c6 47 15 00          	movb   $0x0,0x15(%edi)
    f6fd:	89 04 24             	mov    %eax,(%esp)
    f700:	e8 2b 7e 00 00       	call   17530 <fibril_rwlock_initialize>
    f705:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    f708:	8b 43 10             	mov    0x10(%ebx),%eax
    f70b:	89 4d d8             	mov    %ecx,-0x28(%ebp)
    f70e:	c7 47 44 00 00 00 00 	movl   $0x0,0x44(%edi)
    f715:	c7 47 48 00 00 00 00 	movl   $0x0,0x48(%edi)
    f71c:	89 47 40             	mov    %eax,0x40(%edi)
    f71f:	8b 45 d8             	mov    -0x28(%ebp),%eax
    f722:	8b 55 0c             	mov    0xc(%ebp),%edx
    f725:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    f728:	89 47 30             	mov    %eax,0x30(%edi)
    f72b:	8b 46 24             	mov    0x24(%esi),%eax
    f72e:	89 57 2c             	mov    %edx,0x2c(%edi)
    f731:	89 4f 34             	mov    %ecx,0x34(%edi)
    f734:	85 c0                	test   %eax,%eax
    f736:	0f 84 0d 01 00 00    	je     f849 <block_get+0x4a9>
    f73c:	8b 40 14             	mov    0x14(%eax),%eax
    f73f:	0f af c8             	imul   %eax,%ecx
    f742:	f7 65 d8             	mull   -0x28(%ebp)
    f745:	01 ca                	add    %ecx,%edx
    f747:	89 47 38             	mov    %eax,0x38(%edi)
    f74a:	8b 4d c8             	mov    -0x38(%ebp),%ecx
    f74d:	8d 47 4c             	lea    0x4c(%edi),%eax
    f750:	89 57 3c             	mov    %edx,0x3c(%edi)
    f753:	89 44 24 04          	mov    %eax,0x4(%esp)
    f757:	89 0c 24             	mov    %ecx,(%esp)
    f75a:	e8 f1 69 01 00       	call   26150 <hash_table_insert>
    f75f:	89 3c 24             	mov    %edi,(%esp)
    f762:	e8 59 7b 00 00       	call   172c0 <fibril_mutex_lock>
    f767:	89 1c 24             	mov    %ebx,(%esp)
    f76a:	e8 71 7c 00 00       	call   173e0 <fibril_mutex_unlock>
    f76f:	f6 45 18 01          	testb  $0x1,0x18(%ebp)
    f773:	74 1d                	je     f792 <block_get+0x3f2>
    f775:	31 c0                	xor    %eax,%eax
    f777:	31 c9                	xor    %ecx,%ecx
    f779:	89 3c 24             	mov    %edi,(%esp)
    f77c:	88 45 c0             	mov    %al,-0x40(%ebp)
    f77f:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
    f782:	e8 59 7c 00 00       	call   173e0 <fibril_mutex_unlock>
    f787:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
    f78a:	8a 45 c0             	mov    -0x40(%ebp),%al
    f78d:	e9 d9 fe ff ff       	jmp    f66b <block_get+0x2cb>
    f792:	8b 53 14             	mov    0x14(%ebx),%edx
    f795:	8b 4f 3c             	mov    0x3c(%edi),%ecx
    f798:	8b 43 10             	mov    0x10(%ebx),%eax
    f79b:	89 55 d0             	mov    %edx,-0x30(%ebp)
    f79e:	8b 57 38             	mov    0x38(%edi),%edx
    f7a1:	89 4d dc             	mov    %ecx,-0x24(%ebp)
    f7a4:	89 44 24 14          	mov    %eax,0x14(%esp)
    f7a8:	8b 4d d0             	mov    -0x30(%ebp),%ecx
    f7ab:	89 55 d8             	mov    %edx,-0x28(%ebp)
    f7ae:	8b 47 54             	mov    0x54(%edi),%eax
    f7b1:	8b 55 d8             	mov    -0x28(%ebp),%edx
    f7b4:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    f7b8:	8b 4d dc             	mov    -0x24(%ebp),%ecx
    f7bb:	89 44 24 10          	mov    %eax,0x10(%esp)
    f7bf:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    f7c3:	89 54 24 04          	mov    %edx,0x4(%esp)
    f7c7:	8b 46 10             	mov    0x10(%esi),%eax
    f7ca:	89 04 24             	mov    %eax,(%esp)
    f7cd:	e8 be 0b 00 00       	call   10390 <bd_read_blocks>
    f7d2:	89 c1                	mov    %eax,%ecx
    f7d4:	31 c0                	xor    %eax,%eax
    f7d6:	85 c9                	test   %ecx,%ecx
    f7d8:	74 9f                	je     f779 <block_get+0x3d9>
    f7da:	8b 46 08             	mov    0x8(%esi),%eax
    f7dd:	8b 55 dc             	mov    -0x24(%ebp),%edx
    f7e0:	89 44 24 14          	mov    %eax,0x14(%esp)
    f7e4:	89 54 24 10          	mov    %edx,0x10(%esp)
    f7e8:	8b 45 d8             	mov    -0x28(%ebp),%eax
    f7eb:	8b 55 d0             	mov    -0x30(%ebp),%edx
    f7ee:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    f7f2:	89 54 24 08          	mov    %edx,0x8(%esp)
    f7f6:	89 44 24 0c          	mov    %eax,0xc(%esp)
    f7fa:	c7 04 24 c0 d6 02 00 	movl   $0x2d6c0,(%esp)
    f801:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
    f804:	e8 47 ba 00 00       	call   1b250 <printf>
    f809:	e8 02 b0 01 00       	call   2a810 <stacktrace_print>
    f80e:	c6 47 15 01          	movb   $0x1,0x15(%edi)
    f812:	b0 01                	mov    $0x1,%al
    f814:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
    f817:	e9 5d ff ff ff       	jmp    f779 <block_get+0x3d9>
    f81c:	8b 43 1c             	mov    0x1c(%ebx),%eax
    f81f:	89 f7                	mov    %esi,%edi
    f821:	40                   	inc    %eax
    f822:	8b 75 cc             	mov    -0x34(%ebp),%esi
    f825:	89 43 1c             	mov    %eax,0x1c(%ebx)
    f828:	e9 b6 fe ff ff       	jmp    f6e3 <block_get+0x343>
    f82d:	c7 44 24 08 15 02 00 	movl   $0x215,0x8(%esp)
    f834:	00 
    f835:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    f83c:	00 
    f83d:	c7 04 24 b6 d6 02 00 	movl   $0x2d6b6,(%esp)
    f844:	e8 67 b0 01 00       	call   2a8b0 <assert_abort>
    f849:	c7 44 24 08 96 03 00 	movl   $0x396,0x8(%esp)
    f850:	00 
    f851:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    f858:	00 
    f859:	c7 04 24 a0 d6 02 00 	movl   $0x2d6a0,(%esp)
    f860:	e8 4b b0 01 00       	call   2a8b0 <assert_abort>
    f865:	c7 44 24 08 81 01 00 	movl   $0x181,0x8(%esp)
    f86c:	00 
    f86d:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    f874:	00 
    f875:	c7 04 24 7f d6 02 00 	movl   $0x2d67f,(%esp)
    f87c:	e8 2f b0 01 00       	call   2a8b0 <assert_abort>
    f881:	eb 0d                	jmp    f890 <block_seqread>
    f883:	90                   	nop
    f884:	90                   	nop
    f885:	90                   	nop
    f886:	90                   	nop
    f887:	90                   	nop
    f888:	90                   	nop
    f889:	90                   	nop
    f88a:	90                   	nop
    f88b:	90                   	nop
    f88c:	90                   	nop
    f88d:	90                   	nop
    f88e:	90                   	nop
    f88f:	90                   	nop

0000f890 <block_seqread>:
    f890:	55                   	push   %ebp
    f891:	89 e5                	mov    %esp,%ebp
    f893:	57                   	push   %edi
    f894:	56                   	push   %esi
    f895:	53                   	push   %ebx
    f896:	83 ec 3c             	sub    $0x3c,%esp
    f899:	8b 5d 08             	mov    0x8(%ebp),%ebx
    f89c:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f8a3:	e8 18 7a 00 00       	call   172c0 <fibril_mutex_lock>
    f8a8:	8b 0d 68 04 03 00    	mov    0x30468,%ecx
    f8ae:	81 f9 64 04 03 00    	cmp    $0x30464,%ecx
    f8b4:	75 19                	jne    f8cf <block_seqread+0x3f>
    f8b6:	e9 45 01 00 00       	jmp    fa00 <block_seqread+0x170>
    f8bb:	90                   	nop
    f8bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    f8c0:	8b 49 04             	mov    0x4(%ecx),%ecx
    f8c3:	81 f9 64 04 03 00    	cmp    $0x30464,%ecx
    f8c9:	0f 84 31 01 00 00    	je     fa00 <block_seqread+0x170>
    f8cf:	3b 59 08             	cmp    0x8(%ecx),%ebx
    f8d2:	75 ec                	jne    f8c0 <block_seqread+0x30>
    f8d4:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    f8db:	89 4d d8             	mov    %ecx,-0x28(%ebp)
    f8de:	e8 fd 7a 00 00       	call   173e0 <fibril_mutex_unlock>
    f8e3:	8b 4d d8             	mov    -0x28(%ebp),%ecx
    f8e6:	8b 5d 20             	mov    0x20(%ebp),%ebx
    f8e9:	8b 71 20             	mov    0x20(%ecx),%esi
    f8ec:	89 75 dc             	mov    %esi,-0x24(%ebp)
    f8ef:	85 db                	test   %ebx,%ebx
    f8f1:	0f 84 f9 00 00 00    	je     f9f0 <block_seqread+0x160>
    f8f7:	8b 7d 14             	mov    0x14(%ebp),%edi
    f8fa:	89 4d e0             	mov    %ecx,-0x20(%ebp)
    f8fd:	8b 5d 20             	mov    0x20(%ebp),%ebx
    f900:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
    f907:	8b 07                	mov    (%edi),%eax
    f909:	8b 4d 10             	mov    0x10(%ebp),%ecx
    f90c:	eb 18                	jmp    f926 <block_seqread+0x96>
    f90e:	66 90                	xchg   %ax,%ax
    f910:	89 c7                	mov    %eax,%edi
    f912:	29 f7                	sub    %esi,%edi
    f914:	0f 85 4f 01 00 00    	jne    fa69 <block_seqread+0x1d9>
    f91a:	39 c6                	cmp    %eax,%esi
    f91c:	74 5b                	je     f979 <block_seqread+0xe9>
    f91e:	85 db                	test   %ebx,%ebx
    f920:	0f 84 ca 00 00 00    	je     f9f0 <block_seqread+0x160>
    f926:	8b 31                	mov    (%ecx),%esi
    f928:	8d 14 33             	lea    (%ebx,%esi,1),%edx
    f92b:	39 c2                	cmp    %eax,%edx
    f92d:	73 e1                	jae    f910 <block_seqread+0x80>
    f92f:	89 df                	mov    %ebx,%edi
    f931:	31 db                	xor    %ebx,%ebx
    f933:	8b 45 0c             	mov    0xc(%ebp),%eax
    f936:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    f939:	01 c6                	add    %eax,%esi
    f93b:	8b 45 1c             	mov    0x1c(%ebp),%eax
    f93e:	01 d0                	add    %edx,%eax
    f940:	89 7c 24 08          	mov    %edi,0x8(%esp)
    f944:	89 74 24 04          	mov    %esi,0x4(%esp)
    f948:	89 04 24             	mov    %eax,(%esp)
    f94b:	89 4d d8             	mov    %ecx,-0x28(%ebp)
    f94e:	e8 8d 38 00 00       	call   131e0 <memcpy>
    f953:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    f956:	89 f8                	mov    %edi,%eax
    f958:	01 f9                	add    %edi,%ecx
    f95a:	31 d2                	xor    %edx,%edx
    f95c:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    f95f:	8b 4d d8             	mov    -0x28(%ebp),%ecx
    f962:	8b 31                	mov    (%ecx),%esi
    f964:	01 fe                	add    %edi,%esi
    f966:	8b 7d 18             	mov    0x18(%ebp),%edi
    f969:	89 31                	mov    %esi,(%ecx)
    f96b:	01 07                	add    %eax,(%edi)
    f96d:	11 57 04             	adc    %edx,0x4(%edi)
    f970:	8b 7d 14             	mov    0x14(%ebp),%edi
    f973:	8b 07                	mov    (%edi),%eax
    f975:	39 c6                	cmp    %eax,%esi
    f977:	75 a5                	jne    f91e <block_seqread+0x8e>
    f979:	8b 7d 18             	mov    0x18(%ebp),%edi
    f97c:	8b 75 dc             	mov    -0x24(%ebp),%esi
    f97f:	89 74 24 08          	mov    %esi,0x8(%esp)
    f983:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    f98a:	00 
    f98b:	8b 07                	mov    (%edi),%eax
    f98d:	8b 57 04             	mov    0x4(%edi),%edx
    f990:	89 54 24 04          	mov    %edx,0x4(%esp)
    f994:	89 04 24             	mov    %eax,(%esp)
    f997:	89 4d d8             	mov    %ecx,-0x28(%ebp)
    f99a:	e8 01 cc 01 00       	call   2c5a0 <__udivdi3>
    f99f:	89 d7                	mov    %edx,%edi
    f9a1:	8b 55 e0             	mov    -0x20(%ebp),%edx
    f9a4:	89 c6                	mov    %eax,%esi
    f9a6:	8b 42 20             	mov    0x20(%edx),%eax
    f9a9:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
    f9b0:	00 
    f9b1:	89 44 24 14          	mov    %eax,0x14(%esp)
    f9b5:	8b 45 0c             	mov    0xc(%ebp),%eax
    f9b8:	89 44 24 10          	mov    %eax,0x10(%esp)
    f9bc:	89 74 24 04          	mov    %esi,0x4(%esp)
    f9c0:	89 7c 24 08          	mov    %edi,0x8(%esp)
    f9c4:	8b 42 10             	mov    0x10(%edx),%eax
    f9c7:	89 04 24             	mov    %eax,(%esp)
    f9ca:	e8 c1 09 00 00       	call   10390 <bd_read_blocks>
    f9cf:	8b 4d d8             	mov    -0x28(%ebp),%ecx
    f9d2:	85 c0                	test   %eax,%eax
    f9d4:	75 52                	jne    fa28 <block_seqread+0x198>
    f9d6:	8b 75 14             	mov    0x14(%ebp),%esi
    f9d9:	8b 7d dc             	mov    -0x24(%ebp),%edi
    f9dc:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)
    f9e2:	89 f8                	mov    %edi,%eax
    f9e4:	89 3e                	mov    %edi,(%esi)
    f9e6:	85 db                	test   %ebx,%ebx
    f9e8:	0f 85 38 ff ff ff    	jne    f926 <block_seqread+0x96>
    f9ee:	66 90                	xchg   %ax,%ax
    f9f0:	83 c4 3c             	add    $0x3c,%esp
    f9f3:	31 d2                	xor    %edx,%edx
    f9f5:	89 d0                	mov    %edx,%eax
    f9f7:	5b                   	pop    %ebx
    f9f8:	5e                   	pop    %esi
    f9f9:	5f                   	pop    %edi
    f9fa:	5d                   	pop    %ebp
    f9fb:	c3                   	ret    
    f9fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    fa00:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fa07:	e8 d4 79 00 00       	call   173e0 <fibril_mutex_unlock>
    fa0c:	c7 44 24 08 9c 02 00 	movl   $0x29c,0x8(%esp)
    fa13:	00 
    fa14:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    fa1b:	00 
    fa1c:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
    fa23:	e8 88 ae 01 00       	call   2a8b0 <assert_abort>
    fa28:	8b 4d e0             	mov    -0x20(%ebp),%ecx
    fa2b:	89 c2                	mov    %eax,%edx
    fa2d:	8b 41 08             	mov    0x8(%ecx),%eax
    fa30:	89 54 24 04          	mov    %edx,0x4(%esp)
    fa34:	89 74 24 0c          	mov    %esi,0xc(%esp)
    fa38:	89 7c 24 10          	mov    %edi,0x10(%esp)
    fa3c:	89 44 24 14          	mov    %eax,0x14(%esp)
    fa40:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
    fa47:	00 
    fa48:	c7 04 24 c0 d6 02 00 	movl   $0x2d6c0,(%esp)
    fa4f:	89 55 d8             	mov    %edx,-0x28(%ebp)
    fa52:	e8 f9 b7 00 00       	call   1b250 <printf>
    fa57:	e8 b4 ad 01 00       	call   2a810 <stacktrace_print>
    fa5c:	8b 55 d8             	mov    -0x28(%ebp),%edx
    fa5f:	83 c4 3c             	add    $0x3c,%esp
    fa62:	89 d0                	mov    %edx,%eax
    fa64:	5b                   	pop    %ebx
    fa65:	5e                   	pop    %esi
    fa66:	5f                   	pop    %edi
    fa67:	5d                   	pop    %ebp
    fa68:	c3                   	ret    
    fa69:	29 fb                	sub    %edi,%ebx
    fa6b:	e9 c3 fe ff ff       	jmp    f933 <block_seqread+0xa3>

0000fa70 <block_read_direct>:
    fa70:	55                   	push   %ebp
    fa71:	89 e5                	mov    %esp,%ebp
    fa73:	57                   	push   %edi
    fa74:	56                   	push   %esi
    fa75:	53                   	push   %ebx
    fa76:	83 ec 3c             	sub    $0x3c,%esp
    fa79:	8b 45 08             	mov    0x8(%ebp),%eax
    fa7c:	8b 75 0c             	mov    0xc(%ebp),%esi
    fa7f:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fa86:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    fa89:	8b 7d 10             	mov    0x10(%ebp),%edi
    fa8c:	e8 2f 78 00 00       	call   172c0 <fibril_mutex_lock>
    fa91:	8b 1d 68 04 03 00    	mov    0x30468,%ebx
    fa97:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    fa9a:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    faa0:	75 15                	jne    fab7 <block_read_direct+0x47>
    faa2:	e9 91 00 00 00       	jmp    fb38 <block_read_direct+0xc8>
    faa7:	90                   	nop
    faa8:	8b 5b 04             	mov    0x4(%ebx),%ebx
    faab:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    fab1:	0f 84 81 00 00 00    	je     fb38 <block_read_direct+0xc8>
    fab7:	3b 43 08             	cmp    0x8(%ebx),%eax
    faba:	75 ec                	jne    faa8 <block_read_direct+0x38>
    fabc:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fac3:	e8 18 79 00 00       	call   173e0 <fibril_mutex_unlock>
    fac8:	8b 53 20             	mov    0x20(%ebx),%edx
    facb:	8b 45 14             	mov    0x14(%ebp),%eax
    face:	89 74 24 04          	mov    %esi,0x4(%esp)
    fad2:	0f af c2             	imul   %edx,%eax
    fad5:	8b 55 14             	mov    0x14(%ebp),%edx
    fad8:	89 44 24 14          	mov    %eax,0x14(%esp)
    fadc:	8b 45 18             	mov    0x18(%ebp),%eax
    fadf:	89 54 24 0c          	mov    %edx,0xc(%esp)
    fae3:	89 44 24 10          	mov    %eax,0x10(%esp)
    fae7:	89 7c 24 08          	mov    %edi,0x8(%esp)
    faeb:	8b 43 10             	mov    0x10(%ebx),%eax
    faee:	89 04 24             	mov    %eax,(%esp)
    faf1:	e8 9a 08 00 00       	call   10390 <bd_read_blocks>
    faf6:	89 c2                	mov    %eax,%edx
    faf8:	85 c0                	test   %eax,%eax
    fafa:	74 31                	je     fb2d <block_read_direct+0xbd>
    fafc:	8b 43 08             	mov    0x8(%ebx),%eax
    faff:	89 54 24 04          	mov    %edx,0x4(%esp)
    fb03:	89 44 24 14          	mov    %eax,0x14(%esp)
    fb07:	8b 45 14             	mov    0x14(%ebp),%eax
    fb0a:	89 74 24 0c          	mov    %esi,0xc(%esp)
    fb0e:	89 7c 24 10          	mov    %edi,0x10(%esp)
    fb12:	89 44 24 08          	mov    %eax,0x8(%esp)
    fb16:	c7 04 24 c0 d6 02 00 	movl   $0x2d6c0,(%esp)
    fb1d:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    fb20:	e8 2b b7 00 00       	call   1b250 <printf>
    fb25:	e8 e6 ac 01 00       	call   2a810 <stacktrace_print>
    fb2a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    fb2d:	83 c4 3c             	add    $0x3c,%esp
    fb30:	89 d0                	mov    %edx,%eax
    fb32:	5b                   	pop    %ebx
    fb33:	5e                   	pop    %esi
    fb34:	5f                   	pop    %edi
    fb35:	5d                   	pop    %ebp
    fb36:	c3                   	ret    
    fb37:	90                   	nop
    fb38:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fb3f:	e8 9c 78 00 00       	call   173e0 <fibril_mutex_unlock>
    fb44:	c7 44 24 08 d3 02 00 	movl   $0x2d3,0x8(%esp)
    fb4b:	00 
    fb4c:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    fb53:	00 
    fb54:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
    fb5b:	e8 50 ad 01 00       	call   2a8b0 <assert_abort>

0000fb60 <block_write_direct>:
    fb60:	55                   	push   %ebp
    fb61:	89 e5                	mov    %esp,%ebp
    fb63:	57                   	push   %edi
    fb64:	56                   	push   %esi
    fb65:	53                   	push   %ebx
    fb66:	83 ec 3c             	sub    $0x3c,%esp
    fb69:	8b 45 08             	mov    0x8(%ebp),%eax
    fb6c:	8b 75 0c             	mov    0xc(%ebp),%esi
    fb6f:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fb76:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    fb79:	8b 7d 10             	mov    0x10(%ebp),%edi
    fb7c:	e8 3f 77 00 00       	call   172c0 <fibril_mutex_lock>
    fb81:	8b 1d 68 04 03 00    	mov    0x30468,%ebx
    fb87:	8b 45 e4             	mov    -0x1c(%ebp),%eax
    fb8a:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    fb90:	75 15                	jne    fba7 <block_write_direct+0x47>
    fb92:	e9 91 00 00 00       	jmp    fc28 <block_write_direct+0xc8>
    fb97:	90                   	nop
    fb98:	8b 5b 04             	mov    0x4(%ebx),%ebx
    fb9b:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    fba1:	0f 84 81 00 00 00    	je     fc28 <block_write_direct+0xc8>
    fba7:	3b 43 08             	cmp    0x8(%ebx),%eax
    fbaa:	75 ec                	jne    fb98 <block_write_direct+0x38>
    fbac:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fbb3:	e8 28 78 00 00       	call   173e0 <fibril_mutex_unlock>
    fbb8:	8b 4b 20             	mov    0x20(%ebx),%ecx
    fbbb:	8b 45 14             	mov    0x14(%ebp),%eax
    fbbe:	8b 55 14             	mov    0x14(%ebp),%edx
    fbc1:	0f af c1             	imul   %ecx,%eax
    fbc4:	89 44 24 14          	mov    %eax,0x14(%esp)
    fbc8:	8b 45 18             	mov    0x18(%ebp),%eax
    fbcb:	89 54 24 0c          	mov    %edx,0xc(%esp)
    fbcf:	89 44 24 10          	mov    %eax,0x10(%esp)
    fbd3:	89 74 24 04          	mov    %esi,0x4(%esp)
    fbd7:	89 7c 24 08          	mov    %edi,0x8(%esp)
    fbdb:	8b 43 10             	mov    0x10(%ebx),%eax
    fbde:	89 04 24             	mov    %eax,(%esp)
    fbe1:	e8 1a 09 00 00       	call   10500 <bd_write_blocks>
    fbe6:	89 c2                	mov    %eax,%edx
    fbe8:	85 c0                	test   %eax,%eax
    fbea:	74 31                	je     fc1d <block_write_direct+0xbd>
    fbec:	8b 43 08             	mov    0x8(%ebx),%eax
    fbef:	89 54 24 04          	mov    %edx,0x4(%esp)
    fbf3:	89 44 24 14          	mov    %eax,0x14(%esp)
    fbf7:	8b 45 14             	mov    0x14(%ebp),%eax
    fbfa:	89 74 24 0c          	mov    %esi,0xc(%esp)
    fbfe:	89 7c 24 10          	mov    %edi,0x10(%esp)
    fc02:	89 44 24 08          	mov    %eax,0x8(%esp)
    fc06:	c7 04 24 0c d7 02 00 	movl   $0x2d70c,(%esp)
    fc0d:	89 55 e4             	mov    %edx,-0x1c(%ebp)
    fc10:	e8 3b b6 00 00       	call   1b250 <printf>
    fc15:	e8 f6 ab 01 00       	call   2a810 <stacktrace_print>
    fc1a:	8b 55 e4             	mov    -0x1c(%ebp),%edx
    fc1d:	83 c4 3c             	add    $0x3c,%esp
    fc20:	89 d0                	mov    %edx,%eax
    fc22:	5b                   	pop    %ebx
    fc23:	5e                   	pop    %esi
    fc24:	5f                   	pop    %edi
    fc25:	5d                   	pop    %ebp
    fc26:	c3                   	ret    
    fc27:	90                   	nop
    fc28:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fc2f:	e8 ac 77 00 00       	call   173e0 <fibril_mutex_unlock>
    fc34:	c7 44 24 08 e7 02 00 	movl   $0x2e7,0x8(%esp)
    fc3b:	00 
    fc3c:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    fc43:	00 
    fc44:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
    fc4b:	e8 60 ac 01 00       	call   2a8b0 <assert_abort>

0000fc50 <block_get_bsize>:
    fc50:	55                   	push   %ebp
    fc51:	89 e5                	mov    %esp,%ebp
    fc53:	57                   	push   %edi
    fc54:	56                   	push   %esi
    fc55:	53                   	push   %ebx
    fc56:	83 ec 1c             	sub    $0x1c,%esp
    fc59:	8b 75 08             	mov    0x8(%ebp),%esi
    fc5c:	8b 7d 0c             	mov    0xc(%ebp),%edi
    fc5f:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fc66:	e8 55 76 00 00       	call   172c0 <fibril_mutex_lock>
    fc6b:	8b 1d 68 04 03 00    	mov    0x30468,%ebx
    fc71:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    fc77:	75 12                	jne    fc8b <block_get_bsize+0x3b>
    fc79:	eb 3d                	jmp    fcb8 <block_get_bsize+0x68>
    fc7b:	90                   	nop
    fc7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    fc80:	8b 5b 04             	mov    0x4(%ebx),%ebx
    fc83:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    fc89:	74 2d                	je     fcb8 <block_get_bsize+0x68>
    fc8b:	3b 73 08             	cmp    0x8(%ebx),%esi
    fc8e:	75 f0                	jne    fc80 <block_get_bsize+0x30>
    fc90:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fc97:	e8 44 77 00 00       	call   173e0 <fibril_mutex_unlock>
    fc9c:	89 7d 0c             	mov    %edi,0xc(%ebp)
    fc9f:	8b 43 10             	mov    0x10(%ebx),%eax
    fca2:	89 45 08             	mov    %eax,0x8(%ebp)
    fca5:	83 c4 1c             	add    $0x1c,%esp
    fca8:	5b                   	pop    %ebx
    fca9:	5e                   	pop    %esi
    fcaa:	5f                   	pop    %edi
    fcab:	5d                   	pop    %ebp
    fcac:	e9 ff 08 00 00       	jmp    105b0 <bd_get_block_size>
    fcb1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    fcb8:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fcbf:	e8 1c 77 00 00       	call   173e0 <fibril_mutex_unlock>
    fcc4:	c7 44 24 08 f8 02 00 	movl   $0x2f8,0x8(%esp)
    fccb:	00 
    fccc:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    fcd3:	00 
    fcd4:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
    fcdb:	e8 d0 ab 01 00       	call   2a8b0 <assert_abort>

0000fce0 <block_get_nblocks>:
    fce0:	55                   	push   %ebp
    fce1:	89 e5                	mov    %esp,%ebp
    fce3:	57                   	push   %edi
    fce4:	56                   	push   %esi
    fce5:	53                   	push   %ebx
    fce6:	83 ec 1c             	sub    $0x1c,%esp
    fce9:	8b 75 08             	mov    0x8(%ebp),%esi
    fcec:	8b 7d 0c             	mov    0xc(%ebp),%edi
    fcef:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fcf6:	e8 c5 75 00 00       	call   172c0 <fibril_mutex_lock>
    fcfb:	8b 1d 68 04 03 00    	mov    0x30468,%ebx
    fd01:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    fd07:	75 12                	jne    fd1b <block_get_nblocks+0x3b>
    fd09:	eb 3d                	jmp    fd48 <block_get_nblocks+0x68>
    fd0b:	90                   	nop
    fd0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    fd10:	8b 5b 04             	mov    0x4(%ebx),%ebx
    fd13:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
    fd19:	74 2d                	je     fd48 <block_get_nblocks+0x68>
    fd1b:	3b 73 08             	cmp    0x8(%ebx),%esi
    fd1e:	75 f0                	jne    fd10 <block_get_nblocks+0x30>
    fd20:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fd27:	e8 b4 76 00 00       	call   173e0 <fibril_mutex_unlock>
    fd2c:	89 7d 0c             	mov    %edi,0xc(%ebp)
    fd2f:	8b 43 10             	mov    0x10(%ebx),%eax
    fd32:	89 45 08             	mov    %eax,0x8(%ebp)
    fd35:	83 c4 1c             	add    $0x1c,%esp
    fd38:	5b                   	pop    %ebx
    fd39:	5e                   	pop    %esi
    fd3a:	5f                   	pop    %edi
    fd3b:	5d                   	pop    %ebp
    fd3c:	e9 ff 08 00 00       	jmp    10640 <bd_get_num_blocks>
    fd41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    fd48:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fd4f:	e8 8c 76 00 00       	call   173e0 <fibril_mutex_unlock>
    fd54:	c7 44 24 08 07 03 00 	movl   $0x307,0x8(%esp)
    fd5b:	00 
    fd5c:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    fd63:	00 
    fd64:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
    fd6b:	e8 40 ab 01 00       	call   2a8b0 <assert_abort>

0000fd70 <block_read_bytes_direct>:
    fd70:	55                   	push   %ebp
    fd71:	89 e5                	mov    %esp,%ebp
    fd73:	57                   	push   %edi
    fd74:	56                   	push   %esi
    fd75:	53                   	push   %ebx
    fd76:	83 ec 5c             	sub    $0x5c,%esp
    fd79:	8b 45 0c             	mov    0xc(%ebp),%eax
    fd7c:	8b 55 10             	mov    0x10(%ebp),%edx
    fd7f:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fd86:	8b 5d 08             	mov    0x8(%ebp),%ebx
    fd89:	89 45 c8             	mov    %eax,-0x38(%ebp)
    fd8c:	89 55 cc             	mov    %edx,-0x34(%ebp)
    fd8f:	e8 2c 75 00 00       	call   172c0 <fibril_mutex_lock>
    fd94:	8b 35 68 04 03 00    	mov    0x30468,%esi
    fd9a:	81 fe 64 04 03 00    	cmp    $0x30464,%esi
    fda0:	75 11                	jne    fdb3 <block_read_bytes_direct+0x43>
    fda2:	eb 44                	jmp    fde8 <block_read_bytes_direct+0x78>
    fda4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    fda8:	8b 76 04             	mov    0x4(%esi),%esi
    fdab:	81 fe 64 04 03 00    	cmp    $0x30464,%esi
    fdb1:	74 35                	je     fde8 <block_read_bytes_direct+0x78>
    fdb3:	3b 5e 08             	cmp    0x8(%esi),%ebx
    fdb6:	75 f0                	jne    fda8 <block_read_bytes_direct+0x38>
    fdb8:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fdbf:	e8 1c 76 00 00       	call   173e0 <fibril_mutex_unlock>
    fdc4:	8d 45 e4             	lea    -0x1c(%ebp),%eax
    fdc7:	89 44 24 04          	mov    %eax,0x4(%esp)
    fdcb:	8b 46 10             	mov    0x10(%esi),%eax
    fdce:	89 04 24             	mov    %eax,(%esp)
    fdd1:	e8 da 07 00 00       	call   105b0 <bd_get_block_size>
    fdd6:	89 c1                	mov    %eax,%ecx
    fdd8:	85 c0                	test   %eax,%eax
    fdda:	74 34                	je     fe10 <block_read_bytes_direct+0xa0>
    fddc:	83 c4 5c             	add    $0x5c,%esp
    fddf:	89 c8                	mov    %ecx,%eax
    fde1:	5b                   	pop    %ebx
    fde2:	5e                   	pop    %esi
    fde3:	5f                   	pop    %edi
    fde4:	5d                   	pop    %ebp
    fde5:	c3                   	ret    
    fde6:	66 90                	xchg   %ax,%ax
    fde8:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fdef:	e8 ec 75 00 00       	call   173e0 <fibril_mutex_unlock>
    fdf4:	c7 44 24 08 f8 02 00 	movl   $0x2f8,0x8(%esp)
    fdfb:	00 
    fdfc:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    fe03:	00 
    fe04:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
    fe0b:	e8 a0 aa 01 00       	call   2a8b0 <assert_abort>
    fe10:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    fe13:	8b 45 c8             	mov    -0x38(%ebp),%eax
    fe16:	8b 55 cc             	mov    -0x34(%ebp),%edx
    fe19:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    fe1d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    fe24:	00 
    fe25:	89 04 24             	mov    %eax,(%esp)
    fe28:	89 54 24 04          	mov    %edx,0x4(%esp)
    fe2c:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
    fe2f:	e8 6c c7 01 00       	call   2c5a0 <__udivdi3>
    fe34:	be 01 00 00 00       	mov    $0x1,%esi
    fe39:	29 c6                	sub    %eax,%esi
    fe3b:	8b 4d 14             	mov    0x14(%ebp),%ecx
    fe3e:	89 c7                	mov    %eax,%edi
    fe40:	8b 45 c8             	mov    -0x38(%ebp),%eax
    fe43:	89 4d d0             	mov    %ecx,-0x30(%ebp)
    fe46:	89 55 c0             	mov    %edx,-0x40(%ebp)
    fe49:	83 c0 ff             	add    $0xffffffff,%eax
    fe4c:	8b 55 cc             	mov    -0x34(%ebp),%edx
    fe4f:	83 d2 ff             	adc    $0xffffffff,%edx
    fe52:	03 45 d0             	add    -0x30(%ebp),%eax
    fe55:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
    fe5c:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
    fe5f:	13 55 d4             	adc    -0x2c(%ebp),%edx
    fe62:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    fe66:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    fe6d:	00 
    fe6e:	89 04 24             	mov    %eax,(%esp)
    fe71:	89 54 24 04          	mov    %edx,0x4(%esp)
    fe75:	e8 26 c7 01 00       	call   2c5a0 <__udivdi3>
    fe7a:	01 c6                	add    %eax,%esi
    fe7c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    fe7f:	0f af c6             	imul   %esi,%eax
    fe82:	89 04 24             	mov    %eax,(%esp)
    fe85:	e8 46 02 01 00       	call   200d0 <malloc>
    fe8a:	89 45 d0             	mov    %eax,-0x30(%ebp)
    fe8d:	85 c0                	test   %eax,%eax
    fe8f:	0f 84 59 01 00 00    	je     ffee <block_read_bytes_direct+0x27e>
    fe95:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fe9c:	e8 1f 74 00 00       	call   172c0 <fibril_mutex_lock>
    fea1:	8b 15 68 04 03 00    	mov    0x30468,%edx
    fea7:	81 fa 64 04 03 00    	cmp    $0x30464,%edx
    fead:	75 18                	jne    fec7 <block_read_bytes_direct+0x157>
    feaf:	e9 cc 00 00 00       	jmp    ff80 <block_read_bytes_direct+0x210>
    feb4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    feb8:	8b 52 04             	mov    0x4(%edx),%edx
    febb:	81 fa 64 04 03 00    	cmp    $0x30464,%edx
    fec1:	0f 84 b9 00 00 00    	je     ff80 <block_read_bytes_direct+0x210>
    fec7:	3b 5a 08             	cmp    0x8(%edx),%ebx
    feca:	75 ec                	jne    feb8 <block_read_bytes_direct+0x148>
    fecc:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    fed3:	89 55 bc             	mov    %edx,-0x44(%ebp)
    fed6:	e8 05 75 00 00       	call   173e0 <fibril_mutex_unlock>
    fedb:	8b 55 bc             	mov    -0x44(%ebp),%edx
    fede:	8b 42 20             	mov    0x20(%edx),%eax
    fee1:	8b 4d c0             	mov    -0x40(%ebp),%ecx
    fee4:	0f af c6             	imul   %esi,%eax
    fee7:	89 44 24 14          	mov    %eax,0x14(%esp)
    feeb:	8b 45 d0             	mov    -0x30(%ebp),%eax
    feee:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    fef2:	89 44 24 10          	mov    %eax,0x10(%esp)
    fef6:	89 74 24 0c          	mov    %esi,0xc(%esp)
    fefa:	89 7c 24 04          	mov    %edi,0x4(%esp)
    fefe:	8b 42 10             	mov    0x10(%edx),%eax
    ff01:	89 04 24             	mov    %eax,(%esp)
    ff04:	e8 87 04 00 00       	call   10390 <bd_read_blocks>
    ff09:	8b 55 bc             	mov    -0x44(%ebp),%edx
    ff0c:	89 c1                	mov    %eax,%ecx
    ff0e:	85 c0                	test   %eax,%eax
    ff10:	0f 85 92 00 00 00    	jne    ffa8 <block_read_bytes_direct+0x238>
    ff16:	8b 55 14             	mov    0x14(%ebp),%edx
    ff19:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    ff1c:	89 54 24 08          	mov    %edx,0x8(%esp)
    ff20:	8b 55 cc             	mov    -0x34(%ebp),%edx
    ff23:	8b 74 24 08          	mov    0x8(%esp),%esi
    ff27:	89 44 24 08          	mov    %eax,0x8(%esp)
    ff2b:	8b 45 c8             	mov    -0x38(%ebp),%eax
    ff2e:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    ff32:	89 04 24             	mov    %eax,(%esp)
    ff35:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    ff3c:	00 
    ff3d:	89 54 24 04          	mov    %edx,0x4(%esp)
    ff41:	89 4d bc             	mov    %ecx,-0x44(%ebp)
    ff44:	e8 d7 c8 01 00       	call   2c820 <__umoddi3>
    ff49:	8b 5d d0             	mov    -0x30(%ebp),%ebx
    ff4c:	01 d8                	add    %ebx,%eax
    ff4e:	89 74 24 08          	mov    %esi,0x8(%esp)
    ff52:	89 44 24 04          	mov    %eax,0x4(%esp)
    ff56:	8b 45 18             	mov    0x18(%ebp),%eax
    ff59:	89 04 24             	mov    %eax,(%esp)
    ff5c:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    ff60:	e8 7b 32 00 00       	call   131e0 <memcpy>
    ff65:	8b 45 d0             	mov    -0x30(%ebp),%eax
    ff68:	89 04 24             	mov    %eax,(%esp)
    ff6b:	e8 70 02 01 00       	call   201e0 <free>
    ff70:	8b 4d bc             	mov    -0x44(%ebp),%ecx
    ff73:	83 c4 5c             	add    $0x5c,%esp
    ff76:	89 c8                	mov    %ecx,%eax
    ff78:	5b                   	pop    %ebx
    ff79:	5e                   	pop    %esi
    ff7a:	5f                   	pop    %edi
    ff7b:	5d                   	pop    %ebp
    ff7c:	c3                   	ret    
    ff7d:	8d 76 00             	lea    0x0(%esi),%esi
    ff80:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
    ff87:	e8 54 74 00 00       	call   173e0 <fibril_mutex_unlock>
    ff8c:	c7 44 24 08 d3 02 00 	movl   $0x2d3,0x8(%esp)
    ff93:	00 
    ff94:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
    ff9b:	00 
    ff9c:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
    ffa3:	e8 08 a9 01 00       	call   2a8b0 <assert_abort>
    ffa8:	8b 42 08             	mov    0x8(%edx),%eax
    ffab:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    ffaf:	89 44 24 14          	mov    %eax,0x14(%esp)
    ffb3:	8b 45 c0             	mov    -0x40(%ebp),%eax
    ffb6:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    ffba:	89 74 24 08          	mov    %esi,0x8(%esp)
    ffbe:	89 44 24 10          	mov    %eax,0x10(%esp)
    ffc2:	c7 04 24 c0 d6 02 00 	movl   $0x2d6c0,(%esp)
    ffc9:	89 4d bc             	mov    %ecx,-0x44(%ebp)
    ffcc:	e8 7f b2 00 00       	call   1b250 <printf>
    ffd1:	e8 3a a8 01 00       	call   2a810 <stacktrace_print>
    ffd6:	8b 45 d0             	mov    -0x30(%ebp),%eax
    ffd9:	89 04 24             	mov    %eax,(%esp)
    ffdc:	e8 ff 01 01 00       	call   201e0 <free>
    ffe1:	8b 4d bc             	mov    -0x44(%ebp),%ecx
    ffe4:	83 c4 5c             	add    $0x5c,%esp
    ffe7:	89 c8                	mov    %ecx,%eax
    ffe9:	5b                   	pop    %ebx
    ffea:	5e                   	pop    %esi
    ffeb:	5f                   	pop    %edi
    ffec:	5d                   	pop    %ebp
    ffed:	c3                   	ret    
    ffee:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
    fff3:	e9 e4 fd ff ff       	jmp    fddc <block_read_bytes_direct+0x6c>
    fff8:	90                   	nop
    fff9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00010000 <block_get_toc>:
   10000:	55                   	push   %ebp
   10001:	89 e5                	mov    %esp,%ebp
   10003:	57                   	push   %edi
   10004:	56                   	push   %esi
   10005:	53                   	push   %ebx
   10006:	83 ec 1c             	sub    $0x1c,%esp
   10009:	8b 75 08             	mov    0x8(%ebp),%esi
   1000c:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
   10013:	0f b6 7d 0c          	movzbl 0xc(%ebp),%edi
   10017:	e8 a4 72 00 00       	call   172c0 <fibril_mutex_lock>
   1001c:	8b 1d 68 04 03 00    	mov    0x30468,%ebx
   10022:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
   10028:	75 11                	jne    1003b <block_get_toc+0x3b>
   1002a:	eb 64                	jmp    10090 <block_get_toc+0x90>
   1002c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10030:	8b 5b 04             	mov    0x4(%ebx),%ebx
   10033:	81 fb 64 04 03 00    	cmp    $0x30464,%ebx
   10039:	74 55                	je     10090 <block_get_toc+0x90>
   1003b:	3b 73 08             	cmp    0x8(%ebx),%esi
   1003e:	75 f0                	jne    10030 <block_get_toc+0x30>
   10040:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
   10047:	e8 94 73 00 00       	call   173e0 <fibril_mutex_unlock>
   1004c:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)
   10053:	e8 78 00 01 00       	call   200d0 <malloc>
   10058:	89 c6                	mov    %eax,%esi
   1005a:	85 c0                	test   %eax,%eax
   1005c:	74 25                	je     10083 <block_get_toc+0x83>
   1005e:	81 e7 ff 00 00 00    	and    $0xff,%edi
   10064:	c7 44 24 0c 0c 00 00 	movl   $0xc,0xc(%esp)
   1006b:	00 
   1006c:	89 44 24 08          	mov    %eax,0x8(%esp)
   10070:	89 7c 24 04          	mov    %edi,0x4(%esp)
   10074:	8b 43 10             	mov    0x10(%ebx),%eax
   10077:	89 04 24             	mov    %eax,(%esp)
   1007a:	e8 c1 03 00 00       	call   10440 <bd_read_toc>
   1007f:	85 c0                	test   %eax,%eax
   10081:	75 35                	jne    100b8 <block_get_toc+0xb8>
   10083:	83 c4 1c             	add    $0x1c,%esp
   10086:	89 f0                	mov    %esi,%eax
   10088:	5b                   	pop    %ebx
   10089:	5e                   	pop    %esi
   1008a:	5f                   	pop    %edi
   1008b:	5d                   	pop    %ebp
   1008c:	c3                   	ret    
   1008d:	8d 76 00             	lea    0x0(%esi),%esi
   10090:	c7 04 24 54 04 03 00 	movl   $0x30454,(%esp)
   10097:	e8 44 73 00 00       	call   173e0 <fibril_mutex_unlock>
   1009c:	c7 44 24 08 4f 03 00 	movl   $0x34f,0x8(%esp)
   100a3:	00 
   100a4:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
   100ab:	00 
   100ac:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
   100b3:	e8 f8 a7 01 00       	call   2a8b0 <assert_abort>
   100b8:	89 34 24             	mov    %esi,(%esp)
   100bb:	31 f6                	xor    %esi,%esi
   100bd:	e8 1e 01 01 00       	call   201e0 <free>
   100c2:	eb bf                	jmp    10083 <block_get_toc+0x83>

000100c4 <write_blocks.part.1>:
   100c4:	55                   	push   %ebp
   100c5:	89 e5                	mov    %esp,%ebp
   100c7:	83 ec 18             	sub    $0x18,%esp
   100ca:	c7 44 24 08 85 03 00 	movl   $0x385,0x8(%esp)
   100d1:	00 
   100d2:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
   100d9:	00 
   100da:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
   100e1:	e8 ca a7 01 00       	call   2a8b0 <assert_abort>

000100e6 <read_blocks.part.2>:
   100e6:	55                   	push   %ebp
   100e7:	89 e5                	mov    %esp,%ebp
   100e9:	83 ec 18             	sub    $0x18,%esp
   100ec:	c7 44 24 08 6a 03 00 	movl   $0x36a,0x8(%esp)
   100f3:	00 
   100f4:	c7 44 24 04 e0 d3 02 	movl   $0x2d3e0,0x4(%esp)
   100fb:	00 
   100fc:	c7 04 24 78 d6 02 00 	movl   $0x2d678,(%esp)
   10103:	e8 a8 a7 01 00       	call   2a8b0 <assert_abort>
   10108:	66 90                	xchg   %ax,%ax
   1010a:	66 90                	xchg   %ax,%ax
   1010c:	66 90                	xchg   %ax,%ax
   1010e:	66 90                	xchg   %ax,%ax

00010110 <exit>:
   10110:	55                   	push   %ebp
   10111:	89 e5                	mov    %esp,%ebp
   10113:	83 ec 28             	sub    $0x28,%esp
   10116:	80 3d 90 06 03 00 00 	cmpb   $0x0,0x30690
   1011d:	75 3f                	jne    1015e <exit+0x4e>
   1011f:	c7 44 24 18 0a 00 00 	movl   $0xa,0x18(%esp)
   10126:	00 
   10127:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1012e:	00 
   1012f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   10136:	00 
   10137:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1013e:	00 
   1013f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   10146:	00 
   10147:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   1014e:	00 
   1014f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
   10156:	ff 15 54 06 03 00    	call   *0x30654
   1015c:	eb fe                	jmp    1015c <exit+0x4c>
   1015e:	e8 8d 8f 00 00       	call   190f0 <__stdio_done>
   10163:	8b 45 08             	mov    0x8(%ebp),%eax
   10166:	89 04 24             	mov    %eax,(%esp)
   10169:	e8 a2 8a 00 00       	call   18c10 <task_retval>
   1016e:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax
   10174:	8b 40 04             	mov    0x4(%eax),%eax
   10177:	89 04 24             	mov    %eax,(%esp)
   1017a:	e8 81 68 00 00       	call   16a00 <fibril_teardown>
   1017f:	eb 9e                	jmp    1011f <exit+0xf>
   10181:	eb 0d                	jmp    10190 <abort>
   10183:	90                   	nop
   10184:	90                   	nop
   10185:	90                   	nop
   10186:	90                   	nop
   10187:	90                   	nop
   10188:	90                   	nop
   10189:	90                   	nop
   1018a:	90                   	nop
   1018b:	90                   	nop
   1018c:	90                   	nop
   1018d:	90                   	nop
   1018e:	90                   	nop
   1018f:	90                   	nop

00010190 <abort>:
   10190:	55                   	push   %ebp
   10191:	89 e5                	mov    %esp,%ebp
   10193:	83 ec 28             	sub    $0x28,%esp
   10196:	c7 44 24 18 0a 00 00 	movl   $0xa,0x18(%esp)
   1019d:	00 
   1019e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   101a5:	00 
   101a6:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   101ad:	00 
   101ae:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   101b5:	00 
   101b6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   101bd:	00 
   101be:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   101c5:	00 
   101c6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   101cd:	ff 15 54 06 03 00    	call   *0x30654
   101d3:	eb fe                	jmp    101d3 <abort+0x43>
   101d5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   101d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000101e0 <__main>:
   101e0:	55                   	push   %ebp
   101e1:	89 e5                	mov    %esp,%ebp
   101e3:	57                   	push   %edi
   101e4:	56                   	push   %esi
   101e5:	53                   	push   %ebx
   101e6:	83 ec 2c             	sub    $0x2c,%esp
   101e9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   101ec:	e8 df fd 00 00       	call   1ffd0 <__malloc_init>
   101f1:	e8 ea 1c 01 00       	call   21ee0 <__async_init>
   101f6:	e8 85 67 00 00       	call   16980 <fibril_setup>
   101fb:	85 c0                	test   %eax,%eax
   101fd:	0f 84 82 00 00 00    	je     10285 <__main+0xa5>
   10203:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%esp)
   1020a:	00 
   1020b:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   10212:	00 
   10213:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   1021a:	00 
   1021b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   10222:	00 
   10223:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   1022a:	00 
   1022b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   10232:	00 
   10233:	8b 40 30             	mov    0x30(%eax),%eax
   10236:	89 04 24             	mov    %eax,(%esp)
   10239:	ff 15 54 06 03 00    	call   *0x30654
   1023f:	89 1d 88 06 03 00    	mov    %ebx,0x30688
   10245:	c6 05 90 06 03 00 01 	movb   $0x1,0x30690
   1024c:	85 db                	test   %ebx,%ebx
   1024e:	74 3a                	je     1028a <__main+0xaa>
   10250:	8b 43 10             	mov    0x10(%ebx),%eax
   10253:	8b 73 08             	mov    0x8(%ebx),%esi
   10256:	8b 7b 0c             	mov    0xc(%ebx),%edi
   10259:	89 04 24             	mov    %eax,(%esp)
   1025c:	e8 ff 8b 00 00       	call   18e60 <__stdio_init>
   10261:	a1 88 06 03 00       	mov    0x30688,%eax
   10266:	8b 40 04             	mov    0x4(%eax),%eax
   10269:	89 04 24             	mov    %eax,(%esp)
   1026c:	e8 cf 99 01 00       	call   29c40 <chdir>
   10271:	89 7c 24 04          	mov    %edi,0x4(%esp)
   10275:	89 34 24             	mov    %esi,(%esp)
   10278:	e8 b3 0e ff ff       	call   1130 <main>
   1027d:	89 04 24             	mov    %eax,(%esp)
   10280:	e8 8b fe ff ff       	call   10110 <exit>
   10285:	e8 06 ff ff ff       	call   10190 <abort>
   1028a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
   10291:	31 ff                	xor    %edi,%edi
   10293:	e8 c8 8b 00 00       	call   18e60 <__stdio_init>
   10298:	31 f6                	xor    %esi,%esi
   1029a:	eb d5                	jmp    10271 <__main+0x91>
   1029c:	66 90                	xchg   %ax,%ax
   1029e:	66 90                	xchg   %ax,%ax

000102a0 <bd_cb_conn>:
   102a0:	55                   	push   %ebp
   102a1:	89 e5                	mov    %esp,%ebp
   102a3:	53                   	push   %ebx
   102a4:	83 ec 44             	sub    $0x44,%esp
   102a7:	8d 5d d4             	lea    -0x2c(%ebp),%ebx
   102aa:	eb 14                	jmp    102c0 <bd_cb_conn+0x20>
   102ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   102b0:	c7 44 24 04 f5 ff ff 	movl   $0xfffffff5,0x4(%esp)
   102b7:	ff 
   102b8:	89 04 24             	mov    %eax,(%esp)
   102bb:	e8 50 29 01 00       	call   22c10 <async_answer_0>
   102c0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   102c7:	00 
   102c8:	89 1c 24             	mov    %ebx,(%esp)
   102cb:	e8 10 13 01 00       	call   215e0 <async_get_call_timeout>
   102d0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   102d3:	85 d2                	test   %edx,%edx
   102d5:	75 d9                	jne    102b0 <bd_cb_conn+0x10>
   102d7:	83 c4 44             	add    $0x44,%esp
   102da:	5b                   	pop    %ebx
   102db:	5d                   	pop    %ebp
   102dc:	c3                   	ret    
   102dd:	8d 76 00             	lea    0x0(%esi),%esi

000102e0 <bd_open>:
   102e0:	55                   	push   %ebp
   102e1:	89 e5                	mov    %esp,%ebp
   102e3:	57                   	push   %edi
   102e4:	56                   	push   %esi
   102e5:	53                   	push   %ebx
   102e6:	83 ec 3c             	sub    $0x3c,%esp
   102e9:	8b 75 08             	mov    0x8(%ebp),%esi
   102ec:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
   102f3:	00 
   102f4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   102fb:	e8 70 fd 00 00       	call   20070 <calloc>
   10300:	89 c3                	mov    %eax,%ebx
   10302:	85 c0                	test   %eax,%eax
   10304:	74 72                	je     10378 <bd_open+0x98>
   10306:	89 30                	mov    %esi,(%eax)
   10308:	89 34 24             	mov    %esi,(%esp)
   1030b:	e8 00 33 01 00       	call   23610 <async_exchange_begin>
   10310:	89 5c 24 14          	mov    %ebx,0x14(%esp)
   10314:	c7 44 24 10 a0 02 01 	movl   $0x102a0,0x10(%esp)
   1031b:	00 
   1031c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   10323:	00 
   10324:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   1032b:	00 
   1032c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   10333:	00 
   10334:	89 04 24             	mov    %eax,(%esp)
   10337:	89 c7                	mov    %eax,%edi
   10339:	e8 72 2a 01 00       	call   22db0 <async_connect_to_me>
   1033e:	89 3c 24             	mov    %edi,(%esp)
   10341:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   10344:	e8 37 36 01 00       	call   23980 <async_exchange_end>
   10349:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1034c:	85 c0                	test   %eax,%eax
   1034e:	74 18                	je     10368 <bd_open+0x88>
   10350:	89 1c 24             	mov    %ebx,(%esp)
   10353:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   10356:	e8 85 fe 00 00       	call   201e0 <free>
   1035b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1035e:	83 c4 3c             	add    $0x3c,%esp
   10361:	5b                   	pop    %ebx
   10362:	5e                   	pop    %esi
   10363:	5f                   	pop    %edi
   10364:	5d                   	pop    %ebp
   10365:	c3                   	ret    
   10366:	66 90                	xchg   %ax,%ax
   10368:	8b 55 0c             	mov    0xc(%ebp),%edx
   1036b:	89 1a                	mov    %ebx,(%edx)
   1036d:	83 c4 3c             	add    $0x3c,%esp
   10370:	5b                   	pop    %ebx
   10371:	5e                   	pop    %esi
   10372:	5f                   	pop    %edi
   10373:	5d                   	pop    %ebp
   10374:	c3                   	ret    
   10375:	8d 76 00             	lea    0x0(%esi),%esi
   10378:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   1037d:	eb df                	jmp    1035e <bd_open+0x7e>
   1037f:	90                   	nop

00010380 <bd_close>:
   10380:	55                   	push   %ebp
   10381:	89 e5                	mov    %esp,%ebp
   10383:	5d                   	pop    %ebp
   10384:	e9 57 fe 00 00       	jmp    201e0 <free>
   10389:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00010390 <bd_read_blocks>:
   10390:	55                   	push   %ebp
   10391:	89 e5                	mov    %esp,%ebp
   10393:	57                   	push   %edi
   10394:	56                   	push   %esi
   10395:	53                   	push   %ebx
   10396:	83 ec 5c             	sub    $0x5c,%esp
   10399:	8b 45 08             	mov    0x8(%ebp),%eax
   1039c:	8b 75 0c             	mov    0xc(%ebp),%esi
   1039f:	8b 7d 10             	mov    0x10(%ebp),%edi
   103a2:	8b 00                	mov    (%eax),%eax
   103a4:	89 04 24             	mov    %eax,(%esp)
   103a7:	e8 64 32 01 00       	call   23610 <async_exchange_begin>
   103ac:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   103b0:	89 c3                	mov    %eax,%ebx
   103b2:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   103b5:	89 44 24 18          	mov    %eax,0x18(%esp)
   103b9:	8b 45 14             	mov    0x14(%ebp),%eax
   103bc:	89 74 24 08          	mov    %esi,0x8(%esp)
   103c0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   103c7:	00 
   103c8:	89 44 24 10          	mov    %eax,0x10(%esp)
   103cc:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)
   103d3:	00 
   103d4:	89 1c 24             	mov    %ebx,(%esp)
   103d7:	e8 d4 1b 01 00       	call   21fb0 <async_send_fast>
   103dc:	89 1c 24             	mov    %ebx,(%esp)
   103df:	89 c7                	mov    %eax,%edi
   103e1:	8b 45 1c             	mov    0x1c(%ebp),%eax
   103e4:	89 44 24 08          	mov    %eax,0x8(%esp)
   103e8:	8b 45 18             	mov    0x18(%ebp),%eax
   103eb:	89 44 24 04          	mov    %eax,0x4(%esp)
   103ef:	e8 ec 3b 01 00       	call   23fe0 <async_data_read_start>
   103f4:	89 1c 24             	mov    %ebx,(%esp)
   103f7:	89 c6                	mov    %eax,%esi
   103f9:	e8 82 35 01 00       	call   23980 <async_exchange_end>
   103fe:	85 f6                	test   %esi,%esi
   10400:	75 26                	jne    10428 <bd_read_blocks+0x98>
   10402:	8d 45 c0             	lea    -0x40(%ebp),%eax
   10405:	89 3c 24             	mov    %edi,(%esp)
   10408:	89 44 24 04          	mov    %eax,0x4(%esp)
   1040c:	e8 6f 1d 01 00       	call   22180 <async_wait_for>
   10411:	8b 45 c0             	mov    -0x40(%ebp),%eax
   10414:	85 c0                	test   %eax,%eax
   10416:	74 02                	je     1041a <bd_read_blocks+0x8a>
   10418:	89 c6                	mov    %eax,%esi
   1041a:	83 c4 5c             	add    $0x5c,%esp
   1041d:	89 f0                	mov    %esi,%eax
   1041f:	5b                   	pop    %ebx
   10420:	5e                   	pop    %esi
   10421:	5f                   	pop    %edi
   10422:	5d                   	pop    %ebp
   10423:	c3                   	ret    
   10424:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10428:	89 3c 24             	mov    %edi,(%esp)
   1042b:	e8 a0 1f 01 00       	call   223d0 <async_forget>
   10430:	83 c4 5c             	add    $0x5c,%esp
   10433:	89 f0                	mov    %esi,%eax
   10435:	5b                   	pop    %ebx
   10436:	5e                   	pop    %esi
   10437:	5f                   	pop    %edi
   10438:	5d                   	pop    %ebp
   10439:	c3                   	ret    
   1043a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00010440 <bd_read_toc>:
   10440:	55                   	push   %ebp
   10441:	89 e5                	mov    %esp,%ebp
   10443:	57                   	push   %edi
   10444:	56                   	push   %esi
   10445:	53                   	push   %ebx
   10446:	83 ec 5c             	sub    $0x5c,%esp
   10449:	8b 45 08             	mov    0x8(%ebp),%eax
   1044c:	0f b6 75 0c          	movzbl 0xc(%ebp),%esi
   10450:	8b 00                	mov    (%eax),%eax
   10452:	81 e6 ff 00 00 00    	and    $0xff,%esi
   10458:	89 04 24             	mov    %eax,(%esp)
   1045b:	e8 b0 31 01 00       	call   23610 <async_exchange_begin>
   10460:	89 74 24 08          	mov    %esi,0x8(%esp)
   10464:	89 c3                	mov    %eax,%ebx
   10466:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   10469:	89 44 24 18          	mov    %eax,0x18(%esp)
   1046d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   10474:	00 
   10475:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   1047c:	00 
   1047d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   10484:	00 
   10485:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)
   1048c:	00 
   1048d:	89 1c 24             	mov    %ebx,(%esp)
   10490:	e8 1b 1b 01 00       	call   21fb0 <async_send_fast>
   10495:	89 1c 24             	mov    %ebx,(%esp)
   10498:	89 c7                	mov    %eax,%edi
   1049a:	8b 45 14             	mov    0x14(%ebp),%eax
   1049d:	89 44 24 08          	mov    %eax,0x8(%esp)
   104a1:	8b 45 10             	mov    0x10(%ebp),%eax
   104a4:	89 44 24 04          	mov    %eax,0x4(%esp)
   104a8:	e8 33 3b 01 00       	call   23fe0 <async_data_read_start>
   104ad:	89 1c 24             	mov    %ebx,(%esp)
   104b0:	89 c6                	mov    %eax,%esi
   104b2:	e8 c9 34 01 00       	call   23980 <async_exchange_end>
   104b7:	85 f6                	test   %esi,%esi
   104b9:	75 25                	jne    104e0 <bd_read_toc+0xa0>
   104bb:	8d 45 c0             	lea    -0x40(%ebp),%eax
   104be:	89 3c 24             	mov    %edi,(%esp)
   104c1:	89 44 24 04          	mov    %eax,0x4(%esp)
   104c5:	e8 b6 1c 01 00       	call   22180 <async_wait_for>
   104ca:	8b 45 c0             	mov    -0x40(%ebp),%eax
   104cd:	85 c0                	test   %eax,%eax
   104cf:	74 02                	je     104d3 <bd_read_toc+0x93>
   104d1:	89 c6                	mov    %eax,%esi
   104d3:	83 c4 5c             	add    $0x5c,%esp
   104d6:	89 f0                	mov    %esi,%eax
   104d8:	5b                   	pop    %ebx
   104d9:	5e                   	pop    %esi
   104da:	5f                   	pop    %edi
   104db:	5d                   	pop    %ebp
   104dc:	c3                   	ret    
   104dd:	8d 76 00             	lea    0x0(%esi),%esi
   104e0:	89 3c 24             	mov    %edi,(%esp)
   104e3:	e8 e8 1e 01 00       	call   223d0 <async_forget>
   104e8:	83 c4 5c             	add    $0x5c,%esp
   104eb:	89 f0                	mov    %esi,%eax
   104ed:	5b                   	pop    %ebx
   104ee:	5e                   	pop    %esi
   104ef:	5f                   	pop    %edi
   104f0:	5d                   	pop    %ebp
   104f1:	c3                   	ret    
   104f2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   104f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010500 <bd_write_blocks>:
   10500:	55                   	push   %ebp
   10501:	89 e5                	mov    %esp,%ebp
   10503:	57                   	push   %edi
   10504:	56                   	push   %esi
   10505:	53                   	push   %ebx
   10506:	83 ec 5c             	sub    $0x5c,%esp
   10509:	8b 45 08             	mov    0x8(%ebp),%eax
   1050c:	8b 75 0c             	mov    0xc(%ebp),%esi
   1050f:	8b 7d 10             	mov    0x10(%ebp),%edi
   10512:	8b 00                	mov    (%eax),%eax
   10514:	89 04 24             	mov    %eax,(%esp)
   10517:	e8 f4 30 01 00       	call   23610 <async_exchange_begin>
   1051c:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   10520:	89 c3                	mov    %eax,%ebx
   10522:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   10525:	89 44 24 18          	mov    %eax,0x18(%esp)
   10529:	8b 45 14             	mov    0x14(%ebp),%eax
   1052c:	89 74 24 08          	mov    %esi,0x8(%esp)
   10530:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   10537:	00 
   10538:	89 44 24 10          	mov    %eax,0x10(%esp)
   1053c:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)
   10543:	00 
   10544:	89 1c 24             	mov    %ebx,(%esp)
   10547:	e8 64 1a 01 00       	call   21fb0 <async_send_fast>
   1054c:	89 1c 24             	mov    %ebx,(%esp)
   1054f:	89 c7                	mov    %eax,%edi
   10551:	8b 45 1c             	mov    0x1c(%ebp),%eax
   10554:	89 44 24 08          	mov    %eax,0x8(%esp)
   10558:	8b 45 18             	mov    0x18(%ebp),%eax
   1055b:	89 44 24 04          	mov    %eax,0x4(%esp)
   1055f:	e8 9c 3f 01 00       	call   24500 <async_data_write_start>
   10564:	89 1c 24             	mov    %ebx,(%esp)
   10567:	89 c6                	mov    %eax,%esi
   10569:	e8 12 34 01 00       	call   23980 <async_exchange_end>
   1056e:	85 f6                	test   %esi,%esi
   10570:	75 26                	jne    10598 <bd_write_blocks+0x98>
   10572:	8d 45 c0             	lea    -0x40(%ebp),%eax
   10575:	89 3c 24             	mov    %edi,(%esp)
   10578:	89 44 24 04          	mov    %eax,0x4(%esp)
   1057c:	e8 ff 1b 01 00       	call   22180 <async_wait_for>
   10581:	8b 45 c0             	mov    -0x40(%ebp),%eax
   10584:	85 c0                	test   %eax,%eax
   10586:	74 02                	je     1058a <bd_write_blocks+0x8a>
   10588:	89 c6                	mov    %eax,%esi
   1058a:	83 c4 5c             	add    $0x5c,%esp
   1058d:	89 f0                	mov    %esi,%eax
   1058f:	5b                   	pop    %ebx
   10590:	5e                   	pop    %esi
   10591:	5f                   	pop    %edi
   10592:	5d                   	pop    %ebp
   10593:	c3                   	ret    
   10594:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10598:	89 3c 24             	mov    %edi,(%esp)
   1059b:	e8 30 1e 01 00       	call   223d0 <async_forget>
   105a0:	83 c4 5c             	add    $0x5c,%esp
   105a3:	89 f0                	mov    %esi,%eax
   105a5:	5b                   	pop    %ebx
   105a6:	5e                   	pop    %esi
   105a7:	5f                   	pop    %edi
   105a8:	5d                   	pop    %ebp
   105a9:	c3                   	ret    
   105aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000105b0 <bd_get_block_size>:
   105b0:	55                   	push   %ebp
   105b1:	89 e5                	mov    %esp,%ebp
   105b3:	53                   	push   %ebx
   105b4:	83 ec 54             	sub    $0x54,%esp
   105b7:	8b 45 08             	mov    0x8(%ebp),%eax
   105ba:	8b 00                	mov    (%eax),%eax
   105bc:	89 04 24             	mov    %eax,(%esp)
   105bf:	e8 4c 30 01 00       	call   23610 <async_exchange_begin>
   105c4:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   105cb:	00 
   105cc:	89 c3                	mov    %eax,%ebx
   105ce:	8d 45 f4             	lea    -0xc(%ebp),%eax
   105d1:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   105d8:	00 
   105d9:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   105e0:	00 
   105e1:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   105e8:	00 
   105e9:	89 44 24 18          	mov    %eax,0x18(%esp)
   105ed:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   105f4:	00 
   105f5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   105fc:	00 
   105fd:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   10604:	00 
   10605:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   1060c:	00 
   1060d:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)
   10614:	00 
   10615:	89 1c 24             	mov    %ebx,(%esp)
   10618:	e8 a3 1f 01 00       	call   225c0 <async_req_fast>
   1061d:	89 1c 24             	mov    %ebx,(%esp)
   10620:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   10623:	e8 58 33 01 00       	call   23980 <async_exchange_end>
   10628:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1062b:	85 c0                	test   %eax,%eax
   1062d:	75 08                	jne    10637 <bd_get_block_size+0x87>
   1062f:	8b 55 0c             	mov    0xc(%ebp),%edx
   10632:	8b 4d f4             	mov    -0xc(%ebp),%ecx
   10635:	89 0a                	mov    %ecx,(%edx)
   10637:	83 c4 54             	add    $0x54,%esp
   1063a:	5b                   	pop    %ebx
   1063b:	5d                   	pop    %ebp
   1063c:	c3                   	ret    
   1063d:	8d 76 00             	lea    0x0(%esi),%esi

00010640 <bd_get_num_blocks>:
   10640:	55                   	push   %ebp
   10641:	89 e5                	mov    %esp,%ebp
   10643:	57                   	push   %edi
   10644:	56                   	push   %esi
   10645:	53                   	push   %ebx
   10646:	83 ec 5c             	sub    $0x5c,%esp
   10649:	8b 45 08             	mov    0x8(%ebp),%eax
   1064c:	8b 00                	mov    (%eax),%eax
   1064e:	89 04 24             	mov    %eax,(%esp)
   10651:	e8 ba 2f 01 00       	call   23610 <async_exchange_begin>
   10656:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   1065d:	00 
   1065e:	89 c3                	mov    %eax,%ebx
   10660:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   10663:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   10667:	8d 45 e0             	lea    -0x20(%ebp),%eax
   1066a:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   10671:	00 
   10672:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   10679:	00 
   1067a:	89 44 24 18          	mov    %eax,0x18(%esp)
   1067e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   10685:	00 
   10686:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   1068d:	00 
   1068e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   10695:	00 
   10696:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   1069d:	00 
   1069e:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)
   106a5:	00 
   106a6:	89 1c 24             	mov    %ebx,(%esp)
   106a9:	e8 12 1f 01 00       	call   225c0 <async_req_fast>
   106ae:	89 1c 24             	mov    %ebx,(%esp)
   106b1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
   106b4:	e8 c7 32 01 00       	call   23980 <async_exchange_end>
   106b9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   106bc:	85 c0                	test   %eax,%eax
   106be:	75 0e                	jne    106ce <bd_get_num_blocks+0x8e>
   106c0:	8b 55 0c             	mov    0xc(%ebp),%edx
   106c3:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   106c6:	8b 75 e0             	mov    -0x20(%ebp),%esi
   106c9:	89 32                	mov    %esi,(%edx)
   106cb:	89 4a 04             	mov    %ecx,0x4(%edx)
   106ce:	83 c4 5c             	add    $0x5c,%esp
   106d1:	5b                   	pop    %ebx
   106d2:	5e                   	pop    %esi
   106d3:	5f                   	pop    %edi
   106d4:	5d                   	pop    %ebp
   106d5:	c3                   	ret    
   106d6:	66 90                	xchg   %ax,%ax
   106d8:	66 90                	xchg   %ax,%ax
   106da:	66 90                	xchg   %ax,%ax
   106dc:	66 90                	xchg   %ax,%ax
   106de:	66 90                	xchg   %ax,%ax

000106e0 <__errno>:
   106e0:	55                   	push   %ebp
   106e1:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax
   106e7:	89 e5                	mov    %esp,%ebp
   106e9:	05 b4 ff ff ff       	add    $0xffffffb4,%eax
   106ee:	5d                   	pop    %ebp
   106ef:	c3                   	ret    

000106f0 <loc_cb_conn>:
   106f0:	55                   	push   %ebp
   106f1:	89 e5                	mov    %esp,%ebp
   106f3:	56                   	push   %esi
   106f4:	53                   	push   %ebx
   106f5:	83 ec 50             	sub    $0x50,%esp
   106f8:	8d 5d d4             	lea    -0x2c(%ebp),%ebx
   106fb:	90                   	nop
   106fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10700:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   10707:	00 
   10708:	89 1c 24             	mov    %ebx,(%esp)
   1070b:	e8 d0 0e 01 00       	call   215e0 <async_get_call_timeout>
   10710:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   10713:	85 d2                	test   %edx,%edx
   10715:	74 61                	je     10778 <loc_cb_conn+0x88>
   10717:	81 fa 00 04 00 00    	cmp    $0x400,%edx
   1071d:	74 19                	je     10738 <loc_cb_conn+0x48>
   1071f:	c7 44 24 04 f5 ff ff 	movl   $0xfffffff5,0x4(%esp)
   10726:	ff 
   10727:	89 04 24             	mov    %eax,(%esp)
   1072a:	e8 e1 24 01 00       	call   22c10 <async_answer_0>
   1072f:	eb cf                	jmp    10700 <loc_cb_conn+0x10>
   10731:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   10738:	c7 04 24 c0 04 03 00 	movl   $0x304c0,(%esp)
   1073f:	89 45 c4             	mov    %eax,-0x3c(%ebp)
   10742:	e8 79 6b 00 00       	call   172c0 <fibril_mutex_lock>
   10747:	c7 04 24 c0 04 03 00 	movl   $0x304c0,(%esp)
   1074e:	8b 35 a4 06 03 00    	mov    0x306a4,%esi
   10754:	e8 87 6c 00 00       	call   173e0 <fibril_mutex_unlock>
   10759:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   1075c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   10763:	00 
   10764:	89 04 24             	mov    %eax,(%esp)
   10767:	e8 a4 24 01 00       	call   22c10 <async_answer_0>
   1076c:	85 f6                	test   %esi,%esi
   1076e:	74 90                	je     10700 <loc_cb_conn+0x10>
   10770:	ff d6                	call   *%esi
   10772:	eb 8c                	jmp    10700 <loc_cb_conn+0x10>
   10774:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10778:	83 c4 50             	add    $0x50,%esp
   1077b:	5b                   	pop    %ebx
   1077c:	5e                   	pop    %esi
   1077d:	5d                   	pop    %ebp
   1077e:	c3                   	ret    
   1077f:	90                   	nop

00010780 <loc_exchange_begin.part.0>:
   10780:	55                   	push   %ebp
   10781:	89 e5                	mov    %esp,%ebp
   10783:	83 ec 18             	sub    $0x18,%esp
   10786:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   1078d:	e8 2e 6b 00 00       	call   172c0 <fibril_mutex_lock>
   10792:	a1 94 06 03 00       	mov    0x30694,%eax
   10797:	85 c0                	test   %eax,%eax
   10799:	74 25                	je     107c0 <loc_exchange_begin.part.0+0x40>
   1079b:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   107a2:	e8 39 6c 00 00       	call   173e0 <fibril_mutex_unlock>
   107a7:	a1 94 06 03 00       	mov    0x30694,%eax
   107ac:	85 c0                	test   %eax,%eax
   107ae:	74 40                	je     107f0 <loc_exchange_begin.part.0+0x70>
   107b0:	89 04 24             	mov    %eax,(%esp)
   107b3:	e8 58 2e 01 00       	call   23610 <async_exchange_begin>
   107b8:	c9                   	leave  
   107b9:	c3                   	ret    
   107ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   107c0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   107c7:	00 
   107c8:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   107cf:	00 
   107d0:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   107d7:	20 
   107d8:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   107df:	e8 fc 00 01 00       	call   208e0 <service_connect>
   107e4:	a3 94 06 03 00       	mov    %eax,0x30694
   107e9:	eb b0                	jmp    1079b <loc_exchange_begin.part.0+0x1b>
   107eb:	90                   	nop
   107ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   107f0:	31 c0                	xor    %eax,%eax
   107f2:	c9                   	leave  
   107f3:	c3                   	ret    
   107f4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   107fa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00010800 <loc_get_name_internal>:
   10800:	55                   	push   %ebp
   10801:	89 e5                	mov    %esp,%ebp
   10803:	57                   	push   %edi
   10804:	56                   	push   %esi
   10805:	53                   	push   %ebx
   10806:	81 ec 8c 01 00 00    	sub    $0x18c,%esp
   1080c:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)
   10812:	89 85 94 fe ff ff    	mov    %eax,-0x16c(%ebp)
   10818:	89 d7                	mov    %edx,%edi
   1081a:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   10821:	89 ce                	mov    %ecx,%esi
   10823:	e8 98 6a 00 00       	call   172c0 <fibril_mutex_lock>
   10828:	a1 a0 06 03 00       	mov    0x306a0,%eax
   1082d:	85 c0                	test   %eax,%eax
   1082f:	75 39                	jne    1086a <loc_get_name_internal+0x6a>
   10831:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10838:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   1083e:	e8 7d 6a 00 00       	call   172c0 <fibril_mutex_lock>
   10843:	a1 a0 06 03 00       	mov    0x306a0,%eax
   10848:	85 c0                	test   %eax,%eax
   1084a:	0f 84 40 01 00 00    	je     10990 <loc_get_name_internal+0x190>
   10850:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10857:	e8 84 6b 00 00       	call   173e0 <fibril_mutex_unlock>
   1085c:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   10862:	85 db                	test   %ebx,%ebx
   10864:	0f 84 3e 01 00 00    	je     109a8 <loc_get_name_internal+0x1a8>
   1086a:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   10871:	e8 6a 6b 00 00       	call   173e0 <fibril_mutex_unlock>
   10876:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   1087d:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   10883:	e8 38 6a 00 00       	call   172c0 <fibril_mutex_lock>
   10888:	8b 0d 9c 06 03 00    	mov    0x3069c,%ecx
   1088e:	85 c9                	test   %ecx,%ecx
   10890:	0f 84 62 01 00 00    	je     109f8 <loc_get_name_internal+0x1f8>
   10896:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   1089d:	e8 3e 6b 00 00       	call   173e0 <fibril_mutex_unlock>
   108a2:	a1 a0 06 03 00       	mov    0x306a0,%eax
   108a7:	89 04 24             	mov    %eax,(%esp)
   108aa:	e8 61 2d 01 00       	call   23610 <async_exchange_begin>
   108af:	89 7c 24 08          	mov    %edi,0x8(%esp)
   108b3:	89 c3                	mov    %eax,%ebx
   108b5:	8d 85 c4 fe ff ff    	lea    -0x13c(%ebp),%eax
   108bb:	89 44 24 18          	mov    %eax,0x18(%esp)
   108bf:	8b 85 94 fe ff ff    	mov    -0x16c(%ebp),%eax
   108c5:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   108cc:	00 
   108cd:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   108d4:	00 
   108d5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   108dc:	00 
   108dd:	89 44 24 04          	mov    %eax,0x4(%esp)
   108e1:	89 1c 24             	mov    %ebx,(%esp)
   108e4:	e8 c7 16 01 00       	call   21fb0 <async_send_fast>
   108e9:	c7 44 24 08 ff 00 00 	movl   $0xff,0x8(%esp)
   108f0:	00 
   108f1:	89 c7                	mov    %eax,%edi
   108f3:	8d 85 a0 fe ff ff    	lea    -0x160(%ebp),%eax
   108f9:	89 44 24 0c          	mov    %eax,0xc(%esp)
   108fd:	8d 85 e8 fe ff ff    	lea    -0x118(%ebp),%eax
   10903:	89 44 24 04          	mov    %eax,0x4(%esp)
   10907:	89 1c 24             	mov    %ebx,(%esp)
   1090a:	e8 f1 35 01 00       	call   23f00 <async_data_read>
   1090f:	8d 8d 98 fe ff ff    	lea    -0x168(%ebp),%ecx
   10915:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   10919:	89 04 24             	mov    %eax,(%esp)
   1091c:	e8 5f 18 01 00       	call   22180 <async_wait_for>
   10921:	89 1c 24             	mov    %ebx,(%esp)
   10924:	e8 57 30 01 00       	call   23980 <async_exchange_end>
   10929:	8b 95 98 fe ff ff    	mov    -0x168(%ebp),%edx
   1092f:	85 d2                	test   %edx,%edx
   10931:	0f 85 a1 00 00 00    	jne    109d8 <loc_get_name_internal+0x1d8>
   10937:	8d 85 9c fe ff ff    	lea    -0x164(%ebp),%eax
   1093d:	89 3c 24             	mov    %edi,(%esp)
   10940:	89 44 24 04          	mov    %eax,0x4(%esp)
   10944:	e8 37 18 01 00       	call   22180 <async_wait_for>
   10949:	8b 85 9c fe ff ff    	mov    -0x164(%ebp),%eax
   1094f:	85 c0                	test   %eax,%eax
   10951:	75 31                	jne    10984 <loc_get_name_internal+0x184>
   10953:	8b 85 a8 fe ff ff    	mov    -0x158(%ebp),%eax
   10959:	3d ff 00 00 00       	cmp    $0xff,%eax
   1095e:	0f 87 a7 00 00 00    	ja     10a0b <loc_get_name_internal+0x20b>
   10964:	c6 84 05 e8 fe ff ff 	movb   $0x0,-0x118(%ebp,%eax,1)
   1096b:	00 
   1096c:	8d 85 e8 fe ff ff    	lea    -0x118(%ebp),%eax
   10972:	89 04 24             	mov    %eax,(%esp)
   10975:	e8 16 56 00 00       	call   15f90 <str_dup>
   1097a:	83 f8 01             	cmp    $0x1,%eax
   1097d:	89 06                	mov    %eax,(%esi)
   1097f:	19 c0                	sbb    %eax,%eax
   10981:	83 e0 fe             	and    $0xfffffffe,%eax
   10984:	81 c4 8c 01 00 00    	add    $0x18c,%esp
   1098a:	5b                   	pop    %ebx
   1098b:	5e                   	pop    %esi
   1098c:	5f                   	pop    %edi
   1098d:	5d                   	pop    %ebp
   1098e:	c3                   	ret    
   1098f:	90                   	nop
   10990:	85 db                	test   %ebx,%ebx
   10992:	0f 84 b8 fe ff ff    	je     10850 <loc_get_name_internal+0x50>
   10998:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   1099e:	e9 ad fe ff ff       	jmp    10850 <loc_get_name_internal+0x50>
   109a3:	90                   	nop
   109a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   109a8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   109af:	00 
   109b0:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   109b7:	00 
   109b8:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   109bf:	20 
   109c0:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   109c7:	e8 94 ff 00 00       	call   20960 <service_connect_blocking>
   109cc:	a3 a0 06 03 00       	mov    %eax,0x306a0
   109d1:	e9 57 fe ff ff       	jmp    1082d <loc_get_name_internal+0x2d>
   109d6:	66 90                	xchg   %ax,%ax
   109d8:	89 3c 24             	mov    %edi,(%esp)
   109db:	e8 f0 19 01 00       	call   223d0 <async_forget>
   109e0:	8b 85 98 fe ff ff    	mov    -0x168(%ebp),%eax
   109e6:	81 c4 8c 01 00 00    	add    $0x18c,%esp
   109ec:	5b                   	pop    %ebx
   109ed:	5e                   	pop    %esi
   109ee:	5f                   	pop    %edi
   109ef:	5d                   	pop    %ebp
   109f0:	c3                   	ret    
   109f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   109f8:	85 db                	test   %ebx,%ebx
   109fa:	0f 84 96 fe ff ff    	je     10896 <loc_get_name_internal+0x96>
   10a00:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   10a06:	e9 8b fe ff ff       	jmp    10896 <loc_get_name_internal+0x96>
   10a0b:	c7 44 24 08 9e 01 00 	movl   $0x19e,0x8(%esp)
   10a12:	00 
   10a13:	c7 44 24 04 54 d7 02 	movl   $0x2d754,0x4(%esp)
   10a1a:	00 
   10a1b:	c7 04 24 62 d7 02 00 	movl   $0x2d762,(%esp)
   10a22:	e8 89 9e 01 00       	call   2a8b0 <assert_abort>
   10a27:	89 f6                	mov    %esi,%esi
   10a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010a30 <loc_get_ids_internal>:
   10a30:	55                   	push   %ebp
   10a31:	89 e5                	mov    %esp,%ebp
   10a33:	57                   	push   %edi
   10a34:	56                   	push   %esi
   10a35:	53                   	push   %ebx
   10a36:	83 ec 7c             	sub    $0x7c,%esp
   10a39:	89 55 ac             	mov    %edx,-0x54(%ebp)
   10a3c:	8b 55 08             	mov    0x8(%ebp),%edx
   10a3f:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)
   10a45:	89 45 b0             	mov    %eax,-0x50(%ebp)
   10a48:	89 4d a8             	mov    %ecx,-0x58(%ebp)
   10a4b:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   10a51:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   10a58:	e8 63 68 00 00       	call   172c0 <fibril_mutex_lock>
   10a5d:	a1 a0 06 03 00       	mov    0x306a0,%eax
   10a62:	85 c0                	test   %eax,%eax
   10a64:	75 39                	jne    10a9f <loc_get_ids_internal+0x6f>
   10a66:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10a6d:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   10a73:	e8 48 68 00 00       	call   172c0 <fibril_mutex_lock>
   10a78:	8b 15 a0 06 03 00    	mov    0x306a0,%edx
   10a7e:	85 d2                	test   %edx,%edx
   10a80:	0f 84 5a 02 00 00    	je     10ce0 <loc_get_ids_internal+0x2b0>
   10a86:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10a8d:	e8 4e 69 00 00       	call   173e0 <fibril_mutex_unlock>
   10a92:	a1 a0 06 03 00       	mov    0x306a0,%eax
   10a97:	85 c0                	test   %eax,%eax
   10a99:	0f 84 59 02 00 00    	je     10cf8 <loc_get_ids_internal+0x2c8>
   10a9f:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   10aa6:	e8 35 69 00 00       	call   173e0 <fibril_mutex_unlock>
   10aab:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10ab2:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   10ab8:	e8 03 68 00 00       	call   172c0 <fibril_mutex_lock>
   10abd:	a1 9c 06 03 00       	mov    0x3069c,%eax
   10ac2:	85 c0                	test   %eax,%eax
   10ac4:	0f 84 d5 02 00 00    	je     10d9f <loc_get_ids_internal+0x36f>
   10aca:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10ad1:	e8 0a 69 00 00       	call   173e0 <fibril_mutex_unlock>
   10ad6:	a1 a0 06 03 00       	mov    0x306a0,%eax
   10adb:	89 04 24             	mov    %eax,(%esp)
   10ade:	e8 2d 2b 01 00       	call   23610 <async_exchange_begin>
   10ae3:	8b 55 ac             	mov    -0x54(%ebp),%edx
   10ae6:	89 c6                	mov    %eax,%esi
   10ae8:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   10aeb:	89 44 24 18          	mov    %eax,0x18(%esp)
   10aef:	8b 45 b0             	mov    -0x50(%ebp),%eax
   10af2:	89 54 24 08          	mov    %edx,0x8(%esp)
   10af6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   10afd:	00 
   10afe:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   10b05:	00 
   10b06:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   10b0d:	00 
   10b0e:	89 44 24 04          	mov    %eax,0x4(%esp)
   10b12:	89 34 24             	mov    %esi,(%esp)
   10b15:	e8 96 14 01 00       	call   21fb0 <async_send_fast>
   10b1a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   10b21:	00 
   10b22:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   10b29:	00 
   10b2a:	89 34 24             	mov    %esi,(%esp)
   10b2d:	89 c3                	mov    %eax,%ebx
   10b2f:	e8 ac 34 01 00       	call   23fe0 <async_data_read_start>
   10b34:	89 34 24             	mov    %esi,(%esp)
   10b37:	89 c7                	mov    %eax,%edi
   10b39:	e8 42 2e 01 00       	call   23980 <async_exchange_end>
   10b3e:	85 ff                	test   %edi,%edi
   10b40:	0f 85 3d 02 00 00    	jne    10d83 <loc_get_ids_internal+0x353>
   10b46:	8d 55 c0             	lea    -0x40(%ebp),%edx
   10b49:	89 1c 24             	mov    %ebx,(%esp)
   10b4c:	89 54 24 04          	mov    %edx,0x4(%esp)
   10b50:	e8 2b 16 01 00       	call   22180 <async_wait_for>
   10b55:	8b 45 c0             	mov    -0x40(%ebp),%eax
   10b58:	85 c0                	test   %eax,%eax
   10b5a:	0f 85 72 01 00 00    	jne    10cd2 <loc_get_ids_internal+0x2a2>
   10b60:	8b 7d c8             	mov    -0x38(%ebp),%edi
   10b63:	89 3c 24             	mov    %edi,(%esp)
   10b66:	e8 65 f5 00 00       	call   200d0 <malloc>
   10b6b:	89 c6                	mov    %eax,%esi
   10b6d:	85 c0                	test   %eax,%eax
   10b6f:	0f 85 0a 01 00 00    	jne    10c7f <loc_get_ids_internal+0x24f>
   10b75:	e9 1b 02 00 00       	jmp    10d95 <loc_get_ids_internal+0x365>
   10b7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   10b80:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10b87:	e8 54 68 00 00       	call   173e0 <fibril_mutex_unlock>
   10b8c:	a1 a0 06 03 00       	mov    0x306a0,%eax
   10b91:	85 c0                	test   %eax,%eax
   10b93:	0f 84 8f 01 00 00    	je     10d28 <loc_get_ids_internal+0x2f8>
   10b99:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   10ba0:	e8 3b 68 00 00       	call   173e0 <fibril_mutex_unlock>
   10ba5:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10bac:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   10bb2:	e8 09 67 00 00       	call   172c0 <fibril_mutex_lock>
   10bb7:	a1 9c 06 03 00       	mov    0x3069c,%eax
   10bbc:	85 c0                	test   %eax,%eax
   10bbe:	0f 84 ac 01 00 00    	je     10d70 <loc_get_ids_internal+0x340>
   10bc4:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10bcb:	e8 10 68 00 00       	call   173e0 <fibril_mutex_unlock>
   10bd0:	a1 a0 06 03 00       	mov    0x306a0,%eax
   10bd5:	89 04 24             	mov    %eax,(%esp)
   10bd8:	e8 33 2a 01 00       	call   23610 <async_exchange_begin>
   10bdd:	8b 55 ac             	mov    -0x54(%ebp),%edx
   10be0:	89 c3                	mov    %eax,%ebx
   10be2:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   10be5:	89 44 24 18          	mov    %eax,0x18(%esp)
   10be9:	8b 45 b0             	mov    -0x50(%ebp),%eax
   10bec:	89 54 24 08          	mov    %edx,0x8(%esp)
   10bf0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   10bf7:	00 
   10bf8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   10bff:	00 
   10c00:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   10c07:	00 
   10c08:	89 44 24 04          	mov    %eax,0x4(%esp)
   10c0c:	89 1c 24             	mov    %ebx,(%esp)
   10c0f:	e8 9c 13 01 00       	call   21fb0 <async_send_fast>
   10c14:	89 7c 24 08          	mov    %edi,0x8(%esp)
   10c18:	89 74 24 04          	mov    %esi,0x4(%esp)
   10c1c:	89 1c 24             	mov    %ebx,(%esp)
   10c1f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   10c22:	e8 b9 33 01 00       	call   23fe0 <async_data_read_start>
   10c27:	89 1c 24             	mov    %ebx,(%esp)
   10c2a:	89 45 a4             	mov    %eax,-0x5c(%ebp)
   10c2d:	e8 4e 2d 01 00       	call   23980 <async_exchange_end>
   10c32:	8b 45 a4             	mov    -0x5c(%ebp),%eax
   10c35:	85 c0                	test   %eax,%eax
   10c37:	0f 85 1b 01 00 00    	jne    10d58 <loc_get_ids_internal+0x328>
   10c3d:	8d 55 c0             	lea    -0x40(%ebp),%edx
   10c40:	89 45 a4             	mov    %eax,-0x5c(%ebp)
   10c43:	89 54 24 04          	mov    %edx,0x4(%esp)
   10c47:	8b 55 b4             	mov    -0x4c(%ebp),%edx
   10c4a:	89 14 24             	mov    %edx,(%esp)
   10c4d:	e8 2e 15 01 00       	call   22180 <async_wait_for>
   10c52:	8b 55 c0             	mov    -0x40(%ebp),%edx
   10c55:	85 d2                	test   %edx,%edx
   10c57:	8b 45 a4             	mov    -0x5c(%ebp),%eax
   10c5a:	75 74                	jne    10cd0 <loc_get_ids_internal+0x2a0>
   10c5c:	8b 5d c8             	mov    -0x38(%ebp),%ebx
   10c5f:	39 df                	cmp    %ebx,%edi
   10c61:	0f 83 4b 01 00 00    	jae    10db2 <loc_get_ids_internal+0x382>
   10c67:	89 34 24             	mov    %esi,(%esp)
   10c6a:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   10c6e:	e8 bd f7 00 00       	call   20430 <realloc>
   10c73:	89 df                	mov    %ebx,%edi
   10c75:	89 c6                	mov    %eax,%esi
   10c77:	85 c0                	test   %eax,%eax
   10c79:	0f 84 16 01 00 00    	je     10d95 <loc_get_ids_internal+0x365>
   10c7f:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   10c86:	e8 35 66 00 00       	call   172c0 <fibril_mutex_lock>
   10c8b:	a1 a0 06 03 00       	mov    0x306a0,%eax
   10c90:	85 c0                	test   %eax,%eax
   10c92:	0f 85 01 ff ff ff    	jne    10b99 <loc_get_ids_internal+0x169>
   10c98:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10c9f:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   10ca5:	e8 16 66 00 00       	call   172c0 <fibril_mutex_lock>
   10caa:	a1 a0 06 03 00       	mov    0x306a0,%eax
   10caf:	85 c0                	test   %eax,%eax
   10cb1:	0f 85 c9 fe ff ff    	jne    10b80 <loc_get_ids_internal+0x150>
   10cb7:	85 db                	test   %ebx,%ebx
   10cb9:	0f 84 c1 fe ff ff    	je     10b80 <loc_get_ids_internal+0x150>
   10cbf:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   10cc5:	e9 b6 fe ff ff       	jmp    10b80 <loc_get_ids_internal+0x150>
   10cca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   10cd0:	89 d0                	mov    %edx,%eax
   10cd2:	89 c7                	mov    %eax,%edi
   10cd4:	83 c4 7c             	add    $0x7c,%esp
   10cd7:	89 f8                	mov    %edi,%eax
   10cd9:	5b                   	pop    %ebx
   10cda:	5e                   	pop    %esi
   10cdb:	5f                   	pop    %edi
   10cdc:	5d                   	pop    %ebp
   10cdd:	c3                   	ret    
   10cde:	66 90                	xchg   %ax,%ax
   10ce0:	85 db                	test   %ebx,%ebx
   10ce2:	0f 84 9e fd ff ff    	je     10a86 <loc_get_ids_internal+0x56>
   10ce8:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   10cee:	e9 93 fd ff ff       	jmp    10a86 <loc_get_ids_internal+0x56>
   10cf3:	90                   	nop
   10cf4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10cf8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   10cff:	00 
   10d00:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   10d07:	00 
   10d08:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   10d0f:	20 
   10d10:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   10d17:	e8 44 fc 00 00       	call   20960 <service_connect_blocking>
   10d1c:	a3 a0 06 03 00       	mov    %eax,0x306a0
   10d21:	e9 3c fd ff ff       	jmp    10a62 <loc_get_ids_internal+0x32>
   10d26:	66 90                	xchg   %ax,%ax
   10d28:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   10d2f:	00 
   10d30:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   10d37:	00 
   10d38:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   10d3f:	20 
   10d40:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   10d47:	e8 14 fc 00 00       	call   20960 <service_connect_blocking>
   10d4c:	a3 a0 06 03 00       	mov    %eax,0x306a0
   10d51:	e9 3a ff ff ff       	jmp    10c90 <loc_get_ids_internal+0x260>
   10d56:	66 90                	xchg   %ax,%ax
   10d58:	89 c7                	mov    %eax,%edi
   10d5a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   10d5d:	89 04 24             	mov    %eax,(%esp)
   10d60:	e8 6b 16 01 00       	call   223d0 <async_forget>
   10d65:	83 c4 7c             	add    $0x7c,%esp
   10d68:	89 f8                	mov    %edi,%eax
   10d6a:	5b                   	pop    %ebx
   10d6b:	5e                   	pop    %esi
   10d6c:	5f                   	pop    %edi
   10d6d:	5d                   	pop    %ebp
   10d6e:	c3                   	ret    
   10d6f:	90                   	nop
   10d70:	85 db                	test   %ebx,%ebx
   10d72:	0f 84 4c fe ff ff    	je     10bc4 <loc_get_ids_internal+0x194>
   10d78:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   10d7e:	e9 41 fe ff ff       	jmp    10bc4 <loc_get_ids_internal+0x194>
   10d83:	89 1c 24             	mov    %ebx,(%esp)
   10d86:	e8 45 16 01 00       	call   223d0 <async_forget>
   10d8b:	83 c4 7c             	add    $0x7c,%esp
   10d8e:	89 f8                	mov    %edi,%eax
   10d90:	5b                   	pop    %ebx
   10d91:	5e                   	pop    %esi
   10d92:	5f                   	pop    %edi
   10d93:	5d                   	pop    %ebp
   10d94:	c3                   	ret    
   10d95:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
   10d9a:	e9 35 ff ff ff       	jmp    10cd4 <loc_get_ids_internal+0x2a4>
   10d9f:	85 db                	test   %ebx,%ebx
   10da1:	0f 84 23 fd ff ff    	je     10aca <loc_get_ids_internal+0x9a>
   10da7:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   10dad:	e9 18 fd ff ff       	jmp    10aca <loc_get_ids_internal+0x9a>
   10db2:	89 c7                	mov    %eax,%edi
   10db4:	8b 55 08             	mov    0x8(%ebp),%edx
   10db7:	c1 eb 02             	shr    $0x2,%ebx
   10dba:	8b 45 a8             	mov    -0x58(%ebp),%eax
   10dbd:	89 1a                	mov    %ebx,(%edx)
   10dbf:	89 30                	mov    %esi,(%eax)
   10dc1:	e9 0e ff ff ff       	jmp    10cd4 <loc_get_ids_internal+0x2a4>
   10dc6:	8d 76 00             	lea    0x0(%esi),%esi
   10dc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00010dd0 <loc_exchange_begin_blocking>:
   10dd0:	55                   	push   %ebp
   10dd1:	89 e5                	mov    %esp,%ebp
   10dd3:	53                   	push   %ebx
   10dd4:	83 ec 14             	sub    $0x14,%esp
   10dd7:	8b 45 08             	mov    0x8(%ebp),%eax
   10dda:	83 f8 01             	cmp    $0x1,%eax
   10ddd:	74 11                	je     10df0 <loc_exchange_begin_blocking+0x20>
   10ddf:	83 f8 02             	cmp    $0x2,%eax
   10de2:	0f 84 b0 00 00 00    	je     10e98 <loc_exchange_begin_blocking+0xc8>
   10de8:	83 c4 14             	add    $0x14,%esp
   10deb:	31 c0                	xor    %eax,%eax
   10ded:	5b                   	pop    %ebx
   10dee:	5d                   	pop    %ebp
   10def:	c3                   	ret    
   10df0:	c7 04 24 80 04 03 00 	movl   $0x30480,(%esp)
   10df7:	e8 c4 64 00 00       	call   172c0 <fibril_mutex_lock>
   10dfc:	a1 98 06 03 00       	mov    0x30698,%eax
   10e01:	85 c0                	test   %eax,%eax
   10e03:	75 34                	jne    10e39 <loc_exchange_begin_blocking+0x69>
   10e05:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   10e0c:	8b 1d 94 06 03 00    	mov    0x30694,%ebx
   10e12:	e8 a9 64 00 00       	call   172c0 <fibril_mutex_lock>
   10e17:	a1 98 06 03 00       	mov    0x30698,%eax
   10e1c:	85 c0                	test   %eax,%eax
   10e1e:	74 68                	je     10e88 <loc_exchange_begin_blocking+0xb8>
   10e20:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   10e27:	e8 b4 65 00 00       	call   173e0 <fibril_mutex_unlock>
   10e2c:	a1 98 06 03 00       	mov    0x30698,%eax
   10e31:	85 c0                	test   %eax,%eax
   10e33:	0f 84 07 01 00 00    	je     10f40 <loc_exchange_begin_blocking+0x170>
   10e39:	c7 04 24 80 04 03 00 	movl   $0x30480,(%esp)
   10e40:	e8 9b 65 00 00       	call   173e0 <fibril_mutex_unlock>
   10e45:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   10e4c:	8b 1d 98 06 03 00    	mov    0x30698,%ebx
   10e52:	e8 69 64 00 00       	call   172c0 <fibril_mutex_lock>
   10e57:	a1 94 06 03 00       	mov    0x30694,%eax
   10e5c:	85 c0                	test   %eax,%eax
   10e5e:	0f 84 3c 01 00 00    	je     10fa0 <loc_exchange_begin_blocking+0x1d0>
   10e64:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   10e6b:	e8 70 65 00 00       	call   173e0 <fibril_mutex_unlock>
   10e70:	a1 98 06 03 00       	mov    0x30698,%eax
   10e75:	89 45 08             	mov    %eax,0x8(%ebp)
   10e78:	83 c4 14             	add    $0x14,%esp
   10e7b:	5b                   	pop    %ebx
   10e7c:	5d                   	pop    %ebp
   10e7d:	e9 8e 27 01 00       	jmp    23610 <async_exchange_begin>
   10e82:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   10e88:	85 db                	test   %ebx,%ebx
   10e8a:	74 94                	je     10e20 <loc_exchange_begin_blocking+0x50>
   10e8c:	89 1d 98 06 03 00    	mov    %ebx,0x30698
   10e92:	eb 8c                	jmp    10e20 <loc_exchange_begin_blocking+0x50>
   10e94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10e98:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   10e9f:	e8 1c 64 00 00       	call   172c0 <fibril_mutex_lock>
   10ea4:	a1 a0 06 03 00       	mov    0x306a0,%eax
   10ea9:	85 c0                	test   %eax,%eax
   10eab:	75 35                	jne    10ee2 <loc_exchange_begin_blocking+0x112>
   10ead:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10eb4:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   10eba:	e8 01 64 00 00       	call   172c0 <fibril_mutex_lock>
   10ebf:	a1 a0 06 03 00       	mov    0x306a0,%eax
   10ec4:	85 c0                	test   %eax,%eax
   10ec6:	74 68                	je     10f30 <loc_exchange_begin_blocking+0x160>
   10ec8:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10ecf:	e8 0c 65 00 00       	call   173e0 <fibril_mutex_unlock>
   10ed4:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   10eda:	85 db                	test   %ebx,%ebx
   10edc:	0f 84 8e 00 00 00    	je     10f70 <loc_exchange_begin_blocking+0x1a0>
   10ee2:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   10ee9:	e8 f2 64 00 00       	call   173e0 <fibril_mutex_unlock>
   10eee:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10ef5:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   10efb:	e8 c0 63 00 00       	call   172c0 <fibril_mutex_lock>
   10f00:	8b 0d 9c 06 03 00    	mov    0x3069c,%ecx
   10f06:	85 c9                	test   %ecx,%ecx
   10f08:	0f 84 aa 00 00 00    	je     10fb8 <loc_exchange_begin_blocking+0x1e8>
   10f0e:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   10f15:	e8 c6 64 00 00       	call   173e0 <fibril_mutex_unlock>
   10f1a:	a1 a0 06 03 00       	mov    0x306a0,%eax
   10f1f:	89 45 08             	mov    %eax,0x8(%ebp)
   10f22:	83 c4 14             	add    $0x14,%esp
   10f25:	5b                   	pop    %ebx
   10f26:	5d                   	pop    %ebp
   10f27:	e9 e4 26 01 00       	jmp    23610 <async_exchange_begin>
   10f2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10f30:	85 db                	test   %ebx,%ebx
   10f32:	74 94                	je     10ec8 <loc_exchange_begin_blocking+0xf8>
   10f34:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   10f3a:	eb 8c                	jmp    10ec8 <loc_exchange_begin_blocking+0xf8>
   10f3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10f40:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   10f47:	00 
   10f48:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   10f4f:	00 
   10f50:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   10f57:	20 
   10f58:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   10f5f:	e8 fc f9 00 00       	call   20960 <service_connect_blocking>
   10f64:	a3 98 06 03 00       	mov    %eax,0x30698
   10f69:	e9 93 fe ff ff       	jmp    10e01 <loc_exchange_begin_blocking+0x31>
   10f6e:	66 90                	xchg   %ax,%ax
   10f70:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   10f77:	00 
   10f78:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   10f7f:	00 
   10f80:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   10f87:	20 
   10f88:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   10f8f:	e8 cc f9 00 00       	call   20960 <service_connect_blocking>
   10f94:	a3 a0 06 03 00       	mov    %eax,0x306a0
   10f99:	e9 0b ff ff ff       	jmp    10ea9 <loc_exchange_begin_blocking+0xd9>
   10f9e:	66 90                	xchg   %ax,%ax
   10fa0:	85 db                	test   %ebx,%ebx
   10fa2:	0f 84 bc fe ff ff    	je     10e64 <loc_exchange_begin_blocking+0x94>
   10fa8:	89 1d 94 06 03 00    	mov    %ebx,0x30694
   10fae:	e9 b1 fe ff ff       	jmp    10e64 <loc_exchange_begin_blocking+0x94>
   10fb3:	90                   	nop
   10fb4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   10fb8:	85 db                	test   %ebx,%ebx
   10fba:	0f 84 4e ff ff ff    	je     10f0e <loc_exchange_begin_blocking+0x13e>
   10fc0:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   10fc6:	e9 43 ff ff ff       	jmp    10f0e <loc_exchange_begin_blocking+0x13e>
   10fcb:	90                   	nop
   10fcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00010fd0 <loc_exchange_begin>:
   10fd0:	55                   	push   %ebp
   10fd1:	89 e5                	mov    %esp,%ebp
   10fd3:	83 ec 18             	sub    $0x18,%esp
   10fd6:	8b 45 08             	mov    0x8(%ebp),%eax
   10fd9:	83 f8 01             	cmp    $0x1,%eax
   10fdc:	74 0a                	je     10fe8 <loc_exchange_begin+0x18>
   10fde:	83 f8 02             	cmp    $0x2,%eax
   10fe1:	74 3d                	je     11020 <loc_exchange_begin+0x50>
   10fe3:	31 c0                	xor    %eax,%eax
   10fe5:	c9                   	leave  
   10fe6:	c3                   	ret    
   10fe7:	90                   	nop
   10fe8:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   10fef:	e8 cc 62 00 00       	call   172c0 <fibril_mutex_lock>
   10ff4:	a1 94 06 03 00       	mov    0x30694,%eax
   10ff9:	85 c0                	test   %eax,%eax
   10ffb:	74 5b                	je     11058 <loc_exchange_begin+0x88>
   10ffd:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   11004:	e8 d7 63 00 00       	call   173e0 <fibril_mutex_unlock>
   11009:	a1 94 06 03 00       	mov    0x30694,%eax
   1100e:	85 c0                	test   %eax,%eax
   11010:	74 d1                	je     10fe3 <loc_exchange_begin+0x13>
   11012:	89 45 08             	mov    %eax,0x8(%ebp)
   11015:	c9                   	leave  
   11016:	e9 f5 25 01 00       	jmp    23610 <async_exchange_begin>
   1101b:	90                   	nop
   1101c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11020:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11027:	e8 94 62 00 00       	call   172c0 <fibril_mutex_lock>
   1102c:	a1 9c 06 03 00       	mov    0x3069c,%eax
   11031:	85 c0                	test   %eax,%eax
   11033:	74 53                	je     11088 <loc_exchange_begin+0xb8>
   11035:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   1103c:	e8 9f 63 00 00       	call   173e0 <fibril_mutex_unlock>
   11041:	a1 9c 06 03 00       	mov    0x3069c,%eax
   11046:	85 c0                	test   %eax,%eax
   11048:	74 99                	je     10fe3 <loc_exchange_begin+0x13>
   1104a:	89 45 08             	mov    %eax,0x8(%ebp)
   1104d:	c9                   	leave  
   1104e:	e9 bd 25 01 00       	jmp    23610 <async_exchange_begin>
   11053:	90                   	nop
   11054:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11058:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1105f:	00 
   11060:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   11067:	00 
   11068:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   1106f:	20 
   11070:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   11077:	e8 64 f8 00 00       	call   208e0 <service_connect>
   1107c:	a3 94 06 03 00       	mov    %eax,0x30694
   11081:	e9 77 ff ff ff       	jmp    10ffd <loc_exchange_begin+0x2d>
   11086:	66 90                	xchg   %ax,%ax
   11088:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1108f:	00 
   11090:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   11097:	00 
   11098:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   1109f:	20 
   110a0:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   110a7:	e8 34 f8 00 00       	call   208e0 <service_connect>
   110ac:	a3 9c 06 03 00       	mov    %eax,0x3069c
   110b1:	eb 82                	jmp    11035 <loc_exchange_begin+0x65>
   110b3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   110b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000110c0 <loc_exchange_end>:
   110c0:	55                   	push   %ebp
   110c1:	89 e5                	mov    %esp,%ebp
   110c3:	5d                   	pop    %ebp
   110c4:	e9 b7 28 01 00       	jmp    23980 <async_exchange_end>
   110c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000110d0 <loc_server_register>:
   110d0:	55                   	push   %ebp
   110d1:	89 e5                	mov    %esp,%ebp
   110d3:	57                   	push   %edi
   110d4:	56                   	push   %esi
   110d5:	53                   	push   %ebx
   110d6:	83 ec 5c             	sub    $0x5c,%esp
   110d9:	8b 75 08             	mov    0x8(%ebp),%esi
   110dc:	c7 04 24 80 04 03 00 	movl   $0x30480,(%esp)
   110e3:	e8 d8 61 00 00       	call   172c0 <fibril_mutex_lock>
   110e8:	a1 98 06 03 00       	mov    0x30698,%eax
   110ed:	85 c0                	test   %eax,%eax
   110ef:	75 38                	jne    11129 <loc_server_register+0x59>
   110f1:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   110f8:	8b 1d 94 06 03 00    	mov    0x30694,%ebx
   110fe:	e8 bd 61 00 00       	call   172c0 <fibril_mutex_lock>
   11103:	a1 98 06 03 00       	mov    0x30698,%eax
   11108:	85 c0                	test   %eax,%eax
   1110a:	0f 84 58 01 00 00    	je     11268 <loc_server_register+0x198>
   11110:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   11117:	e8 c4 62 00 00       	call   173e0 <fibril_mutex_unlock>
   1111c:	a1 98 06 03 00       	mov    0x30698,%eax
   11121:	85 c0                	test   %eax,%eax
   11123:	0f 84 57 01 00 00    	je     11280 <loc_server_register+0x1b0>
   11129:	c7 04 24 80 04 03 00 	movl   $0x30480,(%esp)
   11130:	e8 ab 62 00 00       	call   173e0 <fibril_mutex_unlock>
   11135:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   1113c:	8b 1d 98 06 03 00    	mov    0x30698,%ebx
   11142:	e8 79 61 00 00       	call   172c0 <fibril_mutex_lock>
   11147:	8b 3d 94 06 03 00    	mov    0x30694,%edi
   1114d:	85 ff                	test   %edi,%edi
   1114f:	0f 84 73 01 00 00    	je     112c8 <loc_server_register+0x1f8>
   11155:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   1115c:	e8 7f 62 00 00       	call   173e0 <fibril_mutex_unlock>
   11161:	a1 98 06 03 00       	mov    0x30698,%eax
   11166:	89 04 24             	mov    %eax,(%esp)
   11169:	e8 a2 24 01 00       	call   23610 <async_exchange_begin>
   1116e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   11175:	00 
   11176:	89 c3                	mov    %eax,%ebx
   11178:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   1117b:	89 44 24 18          	mov    %eax,0x18(%esp)
   1117f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   11186:	00 
   11187:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1118e:	00 
   1118f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   11196:	00 
   11197:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)
   1119e:	00 
   1119f:	89 1c 24             	mov    %ebx,(%esp)
   111a2:	e8 09 0e 01 00       	call   21fb0 <async_send_fast>
   111a7:	89 34 24             	mov    %esi,(%esp)
   111aa:	89 c7                	mov    %eax,%edi
   111ac:	e8 3f 2e 00 00       	call   13ff0 <str_size>
   111b1:	89 74 24 04          	mov    %esi,0x4(%esp)
   111b5:	89 44 24 08          	mov    %eax,0x8(%esp)
   111b9:	89 1c 24             	mov    %ebx,(%esp)
   111bc:	e8 3f 33 01 00       	call   24500 <async_data_write_start>
   111c1:	89 1c 24             	mov    %ebx,(%esp)
   111c4:	89 45 c0             	mov    %eax,-0x40(%ebp)
   111c7:	e8 b4 27 01 00       	call   23980 <async_exchange_end>
   111cc:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   111cf:	85 c9                	test   %ecx,%ecx
   111d1:	0f 85 d9 00 00 00    	jne    112b0 <loc_server_register+0x1e0>
   111d7:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   111de:	e8 dd 60 00 00       	call   172c0 <fibril_mutex_lock>
   111e3:	8b 15 94 06 03 00    	mov    0x30694,%edx
   111e9:	85 d2                	test   %edx,%edx
   111eb:	0f 84 ea 00 00 00    	je     112db <loc_server_register+0x20b>
   111f1:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   111f8:	e8 e3 61 00 00       	call   173e0 <fibril_mutex_unlock>
   111fd:	a1 94 06 03 00       	mov    0x30694,%eax
   11202:	85 c0                	test   %eax,%eax
   11204:	0f 84 ff 00 00 00    	je     11309 <loc_server_register+0x239>
   1120a:	89 04 24             	mov    %eax,(%esp)
   1120d:	e8 fe 23 01 00       	call   23610 <async_exchange_begin>
   11212:	89 c3                	mov    %eax,%ebx
   11214:	89 1c 24             	mov    %ebx,(%esp)
   11217:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1121e:	00 
   1121f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   11226:	00 
   11227:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1122e:	00 
   1122f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   11236:	00 
   11237:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   1123e:	00 
   1123f:	e8 6c 1b 01 00       	call   22db0 <async_connect_to_me>
   11244:	89 1c 24             	mov    %ebx,(%esp)
   11247:	e8 34 27 01 00       	call   23980 <async_exchange_end>
   1124c:	8d 45 c0             	lea    -0x40(%ebp),%eax
   1124f:	89 44 24 04          	mov    %eax,0x4(%esp)
   11253:	89 3c 24             	mov    %edi,(%esp)
   11256:	e8 25 0f 01 00       	call   22180 <async_wait_for>
   1125b:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1125e:	83 c4 5c             	add    $0x5c,%esp
   11261:	5b                   	pop    %ebx
   11262:	5e                   	pop    %esi
   11263:	5f                   	pop    %edi
   11264:	5d                   	pop    %ebp
   11265:	c3                   	ret    
   11266:	66 90                	xchg   %ax,%ax
   11268:	85 db                	test   %ebx,%ebx
   1126a:	0f 84 a0 fe ff ff    	je     11110 <loc_server_register+0x40>
   11270:	89 1d 98 06 03 00    	mov    %ebx,0x30698
   11276:	e9 95 fe ff ff       	jmp    11110 <loc_server_register+0x40>
   1127b:	90                   	nop
   1127c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11280:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   11287:	00 
   11288:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   1128f:	00 
   11290:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   11297:	20 
   11298:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   1129f:	e8 bc f6 00 00       	call   20960 <service_connect_blocking>
   112a4:	a3 98 06 03 00       	mov    %eax,0x30698
   112a9:	e9 3f fe ff ff       	jmp    110ed <loc_server_register+0x1d>
   112ae:	66 90                	xchg   %ax,%ax
   112b0:	89 3c 24             	mov    %edi,(%esp)
   112b3:	e8 18 11 01 00       	call   223d0 <async_forget>
   112b8:	8b 45 c0             	mov    -0x40(%ebp),%eax
   112bb:	83 c4 5c             	add    $0x5c,%esp
   112be:	5b                   	pop    %ebx
   112bf:	5e                   	pop    %esi
   112c0:	5f                   	pop    %edi
   112c1:	5d                   	pop    %ebp
   112c2:	c3                   	ret    
   112c3:	90                   	nop
   112c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   112c8:	85 db                	test   %ebx,%ebx
   112ca:	0f 84 85 fe ff ff    	je     11155 <loc_server_register+0x85>
   112d0:	89 1d 94 06 03 00    	mov    %ebx,0x30694
   112d6:	e9 7a fe ff ff       	jmp    11155 <loc_server_register+0x85>
   112db:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   112e2:	00 
   112e3:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   112ea:	00 
   112eb:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   112f2:	20 
   112f3:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   112fa:	e8 e1 f5 00 00       	call   208e0 <service_connect>
   112ff:	a3 94 06 03 00       	mov    %eax,0x30694
   11304:	e9 e8 fe ff ff       	jmp    111f1 <loc_server_register+0x121>
   11309:	31 db                	xor    %ebx,%ebx
   1130b:	e9 04 ff ff ff       	jmp    11214 <loc_server_register+0x144>

00011310 <loc_service_register_with_iface>:
   11310:	55                   	push   %ebp
   11311:	89 e5                	mov    %esp,%ebp
   11313:	57                   	push   %edi
   11314:	56                   	push   %esi
   11315:	53                   	push   %ebx
   11316:	83 ec 5c             	sub    $0x5c,%esp
   11319:	8b 75 08             	mov    0x8(%ebp),%esi
   1131c:	c7 04 24 80 04 03 00 	movl   $0x30480,(%esp)
   11323:	e8 98 5f 00 00       	call   172c0 <fibril_mutex_lock>
   11328:	a1 98 06 03 00       	mov    0x30698,%eax
   1132d:	85 c0                	test   %eax,%eax
   1132f:	75 38                	jne    11369 <loc_service_register_with_iface+0x59>
   11331:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   11338:	8b 1d 94 06 03 00    	mov    0x30694,%ebx
   1133e:	e8 7d 5f 00 00       	call   172c0 <fibril_mutex_lock>
   11343:	a1 98 06 03 00       	mov    0x30698,%eax
   11348:	85 c0                	test   %eax,%eax
   1134a:	0f 84 f8 00 00 00    	je     11448 <loc_service_register_with_iface+0x138>
   11350:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   11357:	e8 84 60 00 00       	call   173e0 <fibril_mutex_unlock>
   1135c:	a1 98 06 03 00       	mov    0x30698,%eax
   11361:	85 c0                	test   %eax,%eax
   11363:	0f 84 f7 00 00 00    	je     11460 <loc_service_register_with_iface+0x150>
   11369:	c7 04 24 80 04 03 00 	movl   $0x30480,(%esp)
   11370:	e8 6b 60 00 00       	call   173e0 <fibril_mutex_unlock>
   11375:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   1137c:	8b 1d 98 06 03 00    	mov    0x30698,%ebx
   11382:	e8 39 5f 00 00       	call   172c0 <fibril_mutex_lock>
   11387:	8b 3d 94 06 03 00    	mov    0x30694,%edi
   1138d:	85 ff                	test   %edi,%edi
   1138f:	0f 84 33 01 00 00    	je     114c8 <loc_service_register_with_iface+0x1b8>
   11395:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   1139c:	e8 3f 60 00 00       	call   173e0 <fibril_mutex_unlock>
   113a1:	a1 98 06 03 00       	mov    0x30698,%eax
   113a6:	89 04 24             	mov    %eax,(%esp)
   113a9:	e8 62 22 01 00       	call   23610 <async_exchange_begin>
   113ae:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   113b5:	00 
   113b6:	89 c7                	mov    %eax,%edi
   113b8:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   113bb:	89 44 24 18          	mov    %eax,0x18(%esp)
   113bf:	8b 45 10             	mov    0x10(%ebp),%eax
   113c2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   113c9:	00 
   113ca:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   113d1:	00 
   113d2:	89 44 24 08          	mov    %eax,0x8(%esp)
   113d6:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)
   113dd:	00 
   113de:	89 3c 24             	mov    %edi,(%esp)
   113e1:	e8 ca 0b 01 00       	call   21fb0 <async_send_fast>
   113e6:	89 34 24             	mov    %esi,(%esp)
   113e9:	89 c3                	mov    %eax,%ebx
   113eb:	e8 00 2c 00 00       	call   13ff0 <str_size>
   113f0:	89 74 24 04          	mov    %esi,0x4(%esp)
   113f4:	89 44 24 08          	mov    %eax,0x8(%esp)
   113f8:	89 3c 24             	mov    %edi,(%esp)
   113fb:	e8 00 31 01 00       	call   24500 <async_data_write_start>
   11400:	89 3c 24             	mov    %edi,(%esp)
   11403:	89 45 c0             	mov    %eax,-0x40(%ebp)
   11406:	e8 75 25 01 00       	call   23980 <async_exchange_end>
   1140b:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   1140e:	85 c9                	test   %ecx,%ecx
   11410:	0f 85 9a 00 00 00    	jne    114b0 <loc_service_register_with_iface+0x1a0>
   11416:	8d 45 c0             	lea    -0x40(%ebp),%eax
   11419:	89 1c 24             	mov    %ebx,(%esp)
   1141c:	89 44 24 04          	mov    %eax,0x4(%esp)
   11420:	e8 5b 0d 01 00       	call   22180 <async_wait_for>
   11425:	8b 45 c0             	mov    -0x40(%ebp),%eax
   11428:	85 c0                	test   %eax,%eax
   1142a:	74 64                	je     11490 <loc_service_register_with_iface+0x180>
   1142c:	8b 55 0c             	mov    0xc(%ebp),%edx
   1142f:	85 d2                	test   %edx,%edx
   11431:	74 09                	je     1143c <loc_service_register_with_iface+0x12c>
   11433:	8b 55 0c             	mov    0xc(%ebp),%edx
   11436:	c7 02 ff ff ff ff    	movl   $0xffffffff,(%edx)
   1143c:	83 c4 5c             	add    $0x5c,%esp
   1143f:	5b                   	pop    %ebx
   11440:	5e                   	pop    %esi
   11441:	5f                   	pop    %edi
   11442:	5d                   	pop    %ebp
   11443:	c3                   	ret    
   11444:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11448:	85 db                	test   %ebx,%ebx
   1144a:	0f 84 00 ff ff ff    	je     11350 <loc_service_register_with_iface+0x40>
   11450:	89 1d 98 06 03 00    	mov    %ebx,0x30698
   11456:	e9 f5 fe ff ff       	jmp    11350 <loc_service_register_with_iface+0x40>
   1145b:	90                   	nop
   1145c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11460:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   11467:	00 
   11468:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   1146f:	00 
   11470:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   11477:	20 
   11478:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   1147f:	e8 dc f4 00 00       	call   20960 <service_connect_blocking>
   11484:	a3 98 06 03 00       	mov    %eax,0x30698
   11489:	e9 9f fe ff ff       	jmp    1132d <loc_service_register_with_iface+0x1d>
   1148e:	66 90                	xchg   %ax,%ax
   11490:	8b 45 0c             	mov    0xc(%ebp),%eax
   11493:	85 c0                	test   %eax,%eax
   11495:	74 08                	je     1149f <loc_service_register_with_iface+0x18f>
   11497:	8b 55 0c             	mov    0xc(%ebp),%edx
   1149a:	8b 45 c8             	mov    -0x38(%ebp),%eax
   1149d:	89 02                	mov    %eax,(%edx)
   1149f:	83 c4 5c             	add    $0x5c,%esp
   114a2:	31 c0                	xor    %eax,%eax
   114a4:	5b                   	pop    %ebx
   114a5:	5e                   	pop    %esi
   114a6:	5f                   	pop    %edi
   114a7:	5d                   	pop    %ebp
   114a8:	c3                   	ret    
   114a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   114b0:	89 1c 24             	mov    %ebx,(%esp)
   114b3:	e8 18 0f 01 00       	call   223d0 <async_forget>
   114b8:	8b 45 c0             	mov    -0x40(%ebp),%eax
   114bb:	83 c4 5c             	add    $0x5c,%esp
   114be:	5b                   	pop    %ebx
   114bf:	5e                   	pop    %esi
   114c0:	5f                   	pop    %edi
   114c1:	5d                   	pop    %ebp
   114c2:	c3                   	ret    
   114c3:	90                   	nop
   114c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   114c8:	85 db                	test   %ebx,%ebx
   114ca:	0f 84 c5 fe ff ff    	je     11395 <loc_service_register_with_iface+0x85>
   114d0:	89 1d 94 06 03 00    	mov    %ebx,0x30694
   114d6:	e9 ba fe ff ff       	jmp    11395 <loc_service_register_with_iface+0x85>
   114db:	90                   	nop
   114dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000114e0 <loc_service_register>:
   114e0:	55                   	push   %ebp
   114e1:	89 e5                	mov    %esp,%ebp
   114e3:	57                   	push   %edi
   114e4:	56                   	push   %esi
   114e5:	53                   	push   %ebx
   114e6:	83 ec 5c             	sub    $0x5c,%esp
   114e9:	8b 75 08             	mov    0x8(%ebp),%esi
   114ec:	c7 04 24 80 04 03 00 	movl   $0x30480,(%esp)
   114f3:	e8 c8 5d 00 00       	call   172c0 <fibril_mutex_lock>
   114f8:	a1 98 06 03 00       	mov    0x30698,%eax
   114fd:	85 c0                	test   %eax,%eax
   114ff:	75 38                	jne    11539 <loc_service_register+0x59>
   11501:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   11508:	8b 1d 94 06 03 00    	mov    0x30694,%ebx
   1150e:	e8 ad 5d 00 00       	call   172c0 <fibril_mutex_lock>
   11513:	a1 98 06 03 00       	mov    0x30698,%eax
   11518:	85 c0                	test   %eax,%eax
   1151a:	0f 84 f8 00 00 00    	je     11618 <loc_service_register+0x138>
   11520:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   11527:	e8 b4 5e 00 00       	call   173e0 <fibril_mutex_unlock>
   1152c:	a1 98 06 03 00       	mov    0x30698,%eax
   11531:	85 c0                	test   %eax,%eax
   11533:	0f 84 f7 00 00 00    	je     11630 <loc_service_register+0x150>
   11539:	c7 04 24 80 04 03 00 	movl   $0x30480,(%esp)
   11540:	e8 9b 5e 00 00       	call   173e0 <fibril_mutex_unlock>
   11545:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   1154c:	8b 1d 98 06 03 00    	mov    0x30698,%ebx
   11552:	e8 69 5d 00 00       	call   172c0 <fibril_mutex_lock>
   11557:	8b 3d 94 06 03 00    	mov    0x30694,%edi
   1155d:	85 ff                	test   %edi,%edi
   1155f:	0f 84 33 01 00 00    	je     11698 <loc_service_register+0x1b8>
   11565:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   1156c:	e8 6f 5e 00 00       	call   173e0 <fibril_mutex_unlock>
   11571:	a1 98 06 03 00       	mov    0x30698,%eax
   11576:	89 04 24             	mov    %eax,(%esp)
   11579:	e8 92 20 01 00       	call   23610 <async_exchange_begin>
   1157e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   11585:	00 
   11586:	89 c7                	mov    %eax,%edi
   11588:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   1158b:	89 44 24 18          	mov    %eax,0x18(%esp)
   1158f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   11596:	00 
   11597:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1159e:	00 
   1159f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   115a6:	00 
   115a7:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)
   115ae:	00 
   115af:	89 3c 24             	mov    %edi,(%esp)
   115b2:	e8 f9 09 01 00       	call   21fb0 <async_send_fast>
   115b7:	89 34 24             	mov    %esi,(%esp)
   115ba:	89 c3                	mov    %eax,%ebx
   115bc:	e8 2f 2a 00 00       	call   13ff0 <str_size>
   115c1:	89 74 24 04          	mov    %esi,0x4(%esp)
   115c5:	89 44 24 08          	mov    %eax,0x8(%esp)
   115c9:	89 3c 24             	mov    %edi,(%esp)
   115cc:	e8 2f 2f 01 00       	call   24500 <async_data_write_start>
   115d1:	89 3c 24             	mov    %edi,(%esp)
   115d4:	89 45 c0             	mov    %eax,-0x40(%ebp)
   115d7:	e8 a4 23 01 00       	call   23980 <async_exchange_end>
   115dc:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   115df:	85 c9                	test   %ecx,%ecx
   115e1:	0f 85 99 00 00 00    	jne    11680 <loc_service_register+0x1a0>
   115e7:	8d 45 c0             	lea    -0x40(%ebp),%eax
   115ea:	89 1c 24             	mov    %ebx,(%esp)
   115ed:	89 44 24 04          	mov    %eax,0x4(%esp)
   115f1:	e8 8a 0b 01 00       	call   22180 <async_wait_for>
   115f6:	8b 45 c0             	mov    -0x40(%ebp),%eax
   115f9:	85 c0                	test   %eax,%eax
   115fb:	74 63                	je     11660 <loc_service_register+0x180>
   115fd:	8b 55 0c             	mov    0xc(%ebp),%edx
   11600:	85 d2                	test   %edx,%edx
   11602:	74 09                	je     1160d <loc_service_register+0x12d>
   11604:	8b 55 0c             	mov    0xc(%ebp),%edx
   11607:	c7 02 ff ff ff ff    	movl   $0xffffffff,(%edx)
   1160d:	83 c4 5c             	add    $0x5c,%esp
   11610:	5b                   	pop    %ebx
   11611:	5e                   	pop    %esi
   11612:	5f                   	pop    %edi
   11613:	5d                   	pop    %ebp
   11614:	c3                   	ret    
   11615:	8d 76 00             	lea    0x0(%esi),%esi
   11618:	85 db                	test   %ebx,%ebx
   1161a:	0f 84 00 ff ff ff    	je     11520 <loc_service_register+0x40>
   11620:	89 1d 98 06 03 00    	mov    %ebx,0x30698
   11626:	e9 f5 fe ff ff       	jmp    11520 <loc_service_register+0x40>
   1162b:	90                   	nop
   1162c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11630:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   11637:	00 
   11638:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   1163f:	00 
   11640:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   11647:	20 
   11648:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   1164f:	e8 0c f3 00 00       	call   20960 <service_connect_blocking>
   11654:	a3 98 06 03 00       	mov    %eax,0x30698
   11659:	e9 9f fe ff ff       	jmp    114fd <loc_service_register+0x1d>
   1165e:	66 90                	xchg   %ax,%ax
   11660:	8b 45 0c             	mov    0xc(%ebp),%eax
   11663:	85 c0                	test   %eax,%eax
   11665:	74 08                	je     1166f <loc_service_register+0x18f>
   11667:	8b 55 0c             	mov    0xc(%ebp),%edx
   1166a:	8b 45 c8             	mov    -0x38(%ebp),%eax
   1166d:	89 02                	mov    %eax,(%edx)
   1166f:	83 c4 5c             	add    $0x5c,%esp
   11672:	31 c0                	xor    %eax,%eax
   11674:	5b                   	pop    %ebx
   11675:	5e                   	pop    %esi
   11676:	5f                   	pop    %edi
   11677:	5d                   	pop    %ebp
   11678:	c3                   	ret    
   11679:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11680:	89 1c 24             	mov    %ebx,(%esp)
   11683:	e8 48 0d 01 00       	call   223d0 <async_forget>
   11688:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1168b:	83 c4 5c             	add    $0x5c,%esp
   1168e:	5b                   	pop    %ebx
   1168f:	5e                   	pop    %esi
   11690:	5f                   	pop    %edi
   11691:	5d                   	pop    %ebp
   11692:	c3                   	ret    
   11693:	90                   	nop
   11694:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11698:	85 db                	test   %ebx,%ebx
   1169a:	0f 84 c5 fe ff ff    	je     11565 <loc_service_register+0x85>
   116a0:	89 1d 94 06 03 00    	mov    %ebx,0x30694
   116a6:	e9 ba fe ff ff       	jmp    11565 <loc_service_register+0x85>
   116ab:	90                   	nop
   116ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000116b0 <loc_service_unregister>:
   116b0:	55                   	push   %ebp
   116b1:	89 e5                	mov    %esp,%ebp
   116b3:	53                   	push   %ebx
   116b4:	83 ec 44             	sub    $0x44,%esp
   116b7:	c7 04 24 80 04 03 00 	movl   $0x30480,(%esp)
   116be:	e8 fd 5b 00 00       	call   172c0 <fibril_mutex_lock>
   116c3:	a1 98 06 03 00       	mov    0x30698,%eax
   116c8:	85 c0                	test   %eax,%eax
   116ca:	75 38                	jne    11704 <loc_service_unregister+0x54>
   116cc:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   116d3:	8b 1d 94 06 03 00    	mov    0x30694,%ebx
   116d9:	e8 e2 5b 00 00       	call   172c0 <fibril_mutex_lock>
   116de:	a1 98 06 03 00       	mov    0x30698,%eax
   116e3:	85 c0                	test   %eax,%eax
   116e5:	0f 84 cd 00 00 00    	je     117b8 <loc_service_unregister+0x108>
   116eb:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   116f2:	e8 e9 5c 00 00       	call   173e0 <fibril_mutex_unlock>
   116f7:	a1 98 06 03 00       	mov    0x30698,%eax
   116fc:	85 c0                	test   %eax,%eax
   116fe:	0f 84 cc 00 00 00    	je     117d0 <loc_service_unregister+0x120>
   11704:	c7 04 24 80 04 03 00 	movl   $0x30480,(%esp)
   1170b:	e8 d0 5c 00 00       	call   173e0 <fibril_mutex_unlock>
   11710:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   11717:	8b 1d 98 06 03 00    	mov    0x30698,%ebx
   1171d:	e8 9e 5b 00 00       	call   172c0 <fibril_mutex_lock>
   11722:	a1 94 06 03 00       	mov    0x30694,%eax
   11727:	85 c0                	test   %eax,%eax
   11729:	0f 84 d1 00 00 00    	je     11800 <loc_service_unregister+0x150>
   1172f:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   11736:	e8 a5 5c 00 00       	call   173e0 <fibril_mutex_unlock>
   1173b:	a1 98 06 03 00       	mov    0x30698,%eax
   11740:	89 04 24             	mov    %eax,(%esp)
   11743:	e8 c8 1e 01 00       	call   23610 <async_exchange_begin>
   11748:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   1174f:	00 
   11750:	89 c3                	mov    %eax,%ebx
   11752:	8b 45 08             	mov    0x8(%ebp),%eax
   11755:	89 1c 24             	mov    %ebx,(%esp)
   11758:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   1175f:	00 
   11760:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   11767:	00 
   11768:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   1176f:	00 
   11770:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   11777:	00 
   11778:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1177f:	00 
   11780:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   11787:	00 
   11788:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1178f:	00 
   11790:	89 44 24 08          	mov    %eax,0x8(%esp)
   11794:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)
   1179b:	00 
   1179c:	e8 1f 0e 01 00       	call   225c0 <async_req_fast>
   117a1:	89 1c 24             	mov    %ebx,(%esp)
   117a4:	89 45 f4             	mov    %eax,-0xc(%ebp)
   117a7:	e8 d4 21 01 00       	call   23980 <async_exchange_end>
   117ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
   117af:	83 c4 44             	add    $0x44,%esp
   117b2:	5b                   	pop    %ebx
   117b3:	5d                   	pop    %ebp
   117b4:	c3                   	ret    
   117b5:	8d 76 00             	lea    0x0(%esi),%esi
   117b8:	85 db                	test   %ebx,%ebx
   117ba:	0f 84 2b ff ff ff    	je     116eb <loc_service_unregister+0x3b>
   117c0:	89 1d 98 06 03 00    	mov    %ebx,0x30698
   117c6:	e9 20 ff ff ff       	jmp    116eb <loc_service_unregister+0x3b>
   117cb:	90                   	nop
   117cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   117d0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   117d7:	00 
   117d8:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   117df:	00 
   117e0:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   117e7:	20 
   117e8:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   117ef:	e8 6c f1 00 00       	call   20960 <service_connect_blocking>
   117f4:	a3 98 06 03 00       	mov    %eax,0x30698
   117f9:	e9 ca fe ff ff       	jmp    116c8 <loc_service_unregister+0x18>
   117fe:	66 90                	xchg   %ax,%ax
   11800:	85 db                	test   %ebx,%ebx
   11802:	0f 84 27 ff ff ff    	je     1172f <loc_service_unregister+0x7f>
   11808:	89 1d 94 06 03 00    	mov    %ebx,0x30694
   1180e:	e9 1c ff ff ff       	jmp    1172f <loc_service_unregister+0x7f>
   11813:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   11819:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00011820 <loc_service_get_id>:
   11820:	55                   	push   %ebp
   11821:	89 e5                	mov    %esp,%ebp
   11823:	57                   	push   %edi
   11824:	56                   	push   %esi
   11825:	53                   	push   %ebx
   11826:	83 ec 5c             	sub    $0x5c,%esp
   11829:	8b 75 10             	mov    0x10(%ebp),%esi
   1182c:	8b 7d 08             	mov    0x8(%ebp),%edi
   1182f:	f7 c6 01 00 00 00    	test   $0x1,%esi
   11835:	0f 84 45 01 00 00    	je     11980 <loc_service_get_id+0x160>
   1183b:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   11842:	e8 79 5a 00 00       	call   172c0 <fibril_mutex_lock>
   11847:	a1 a0 06 03 00       	mov    0x306a0,%eax
   1184c:	85 c0                	test   %eax,%eax
   1184e:	75 38                	jne    11888 <loc_service_get_id+0x68>
   11850:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11857:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   1185d:	e8 5e 5a 00 00       	call   172c0 <fibril_mutex_lock>
   11862:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11867:	85 c0                	test   %eax,%eax
   11869:	0f 84 f9 00 00 00    	je     11968 <loc_service_get_id+0x148>
   1186f:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11876:	e8 65 5b 00 00       	call   173e0 <fibril_mutex_unlock>
   1187b:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11880:	85 c0                	test   %eax,%eax
   11882:	0f 84 68 01 00 00    	je     119f0 <loc_service_get_id+0x1d0>
   11888:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   1188f:	e8 4c 5b 00 00       	call   173e0 <fibril_mutex_unlock>
   11894:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   1189b:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   118a1:	e8 1a 5a 00 00       	call   172c0 <fibril_mutex_lock>
   118a6:	a1 9c 06 03 00       	mov    0x3069c,%eax
   118ab:	85 c0                	test   %eax,%eax
   118ad:	0f 84 85 01 00 00    	je     11a38 <loc_service_get_id+0x218>
   118b3:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   118ba:	e8 21 5b 00 00       	call   173e0 <fibril_mutex_unlock>
   118bf:	a1 a0 06 03 00       	mov    0x306a0,%eax
   118c4:	89 04 24             	mov    %eax,(%esp)
   118c7:	e8 44 1d 01 00       	call   23610 <async_exchange_begin>
   118cc:	89 c3                	mov    %eax,%ebx
   118ce:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   118d1:	89 74 24 08          	mov    %esi,0x8(%esp)
   118d5:	89 44 24 18          	mov    %eax,0x18(%esp)
   118d9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   118e0:	00 
   118e1:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   118e8:	00 
   118e9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   118f0:	00 
   118f1:	c7 44 24 04 05 04 00 	movl   $0x405,0x4(%esp)
   118f8:	00 
   118f9:	89 1c 24             	mov    %ebx,(%esp)
   118fc:	e8 af 06 01 00       	call   21fb0 <async_send_fast>
   11901:	89 3c 24             	mov    %edi,(%esp)
   11904:	89 c6                	mov    %eax,%esi
   11906:	e8 e5 26 00 00       	call   13ff0 <str_size>
   1190b:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1190f:	89 44 24 08          	mov    %eax,0x8(%esp)
   11913:	89 1c 24             	mov    %ebx,(%esp)
   11916:	e8 e5 2b 01 00       	call   24500 <async_data_write_start>
   1191b:	89 1c 24             	mov    %ebx,(%esp)
   1191e:	89 45 c0             	mov    %eax,-0x40(%ebp)
   11921:	e8 5a 20 01 00       	call   23980 <async_exchange_end>
   11926:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   11929:	85 c9                	test   %ecx,%ecx
   1192b:	0f 85 ef 00 00 00    	jne    11a20 <loc_service_get_id+0x200>
   11931:	8d 45 c0             	lea    -0x40(%ebp),%eax
   11934:	89 34 24             	mov    %esi,(%esp)
   11937:	89 44 24 04          	mov    %eax,0x4(%esp)
   1193b:	e8 40 08 01 00       	call   22180 <async_wait_for>
   11940:	8b 45 c0             	mov    -0x40(%ebp),%eax
   11943:	85 c0                	test   %eax,%eax
   11945:	0f 84 85 00 00 00    	je     119d0 <loc_service_get_id+0x1b0>
   1194b:	8b 55 0c             	mov    0xc(%ebp),%edx
   1194e:	85 d2                	test   %edx,%edx
   11950:	74 09                	je     1195b <loc_service_get_id+0x13b>
   11952:	8b 55 0c             	mov    0xc(%ebp),%edx
   11955:	c7 02 ff ff ff ff    	movl   $0xffffffff,(%edx)
   1195b:	83 c4 5c             	add    $0x5c,%esp
   1195e:	5b                   	pop    %ebx
   1195f:	5e                   	pop    %esi
   11960:	5f                   	pop    %edi
   11961:	5d                   	pop    %ebp
   11962:	c3                   	ret    
   11963:	90                   	nop
   11964:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11968:	85 db                	test   %ebx,%ebx
   1196a:	0f 84 ff fe ff ff    	je     1186f <loc_service_get_id+0x4f>
   11970:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   11976:	e9 f4 fe ff ff       	jmp    1186f <loc_service_get_id+0x4f>
   1197b:	90                   	nop
   1197c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11980:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11987:	e8 34 59 00 00       	call   172c0 <fibril_mutex_lock>
   1198c:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   11992:	85 db                	test   %ebx,%ebx
   11994:	0f 84 b1 00 00 00    	je     11a4b <loc_service_get_id+0x22b>
   1199a:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   119a1:	e8 3a 5a 00 00       	call   173e0 <fibril_mutex_unlock>
   119a6:	a1 9c 06 03 00       	mov    0x3069c,%eax
   119ab:	85 c0                	test   %eax,%eax
   119ad:	74 12                	je     119c1 <loc_service_get_id+0x1a1>
   119af:	89 04 24             	mov    %eax,(%esp)
   119b2:	e8 59 1c 01 00       	call   23610 <async_exchange_begin>
   119b7:	89 c3                	mov    %eax,%ebx
   119b9:	85 c0                	test   %eax,%eax
   119bb:	0f 85 0d ff ff ff    	jne    118ce <loc_service_get_id+0xae>
   119c1:	e8 1a ed ff ff       	call   106e0 <__errno>
   119c6:	8b 00                	mov    (%eax),%eax
   119c8:	eb 91                	jmp    1195b <loc_service_get_id+0x13b>
   119ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   119d0:	8b 45 0c             	mov    0xc(%ebp),%eax
   119d3:	85 c0                	test   %eax,%eax
   119d5:	74 08                	je     119df <loc_service_get_id+0x1bf>
   119d7:	8b 55 0c             	mov    0xc(%ebp),%edx
   119da:	8b 45 c8             	mov    -0x38(%ebp),%eax
   119dd:	89 02                	mov    %eax,(%edx)
   119df:	83 c4 5c             	add    $0x5c,%esp
   119e2:	31 c0                	xor    %eax,%eax
   119e4:	5b                   	pop    %ebx
   119e5:	5e                   	pop    %esi
   119e6:	5f                   	pop    %edi
   119e7:	5d                   	pop    %ebp
   119e8:	c3                   	ret    
   119e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   119f0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   119f7:	00 
   119f8:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   119ff:	00 
   11a00:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   11a07:	20 
   11a08:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   11a0f:	e8 4c ef 00 00       	call   20960 <service_connect_blocking>
   11a14:	a3 a0 06 03 00       	mov    %eax,0x306a0
   11a19:	e9 2e fe ff ff       	jmp    1184c <loc_service_get_id+0x2c>
   11a1e:	66 90                	xchg   %ax,%ax
   11a20:	89 34 24             	mov    %esi,(%esp)
   11a23:	e8 a8 09 01 00       	call   223d0 <async_forget>
   11a28:	8b 45 c0             	mov    -0x40(%ebp),%eax
   11a2b:	83 c4 5c             	add    $0x5c,%esp
   11a2e:	5b                   	pop    %ebx
   11a2f:	5e                   	pop    %esi
   11a30:	5f                   	pop    %edi
   11a31:	5d                   	pop    %ebp
   11a32:	c3                   	ret    
   11a33:	90                   	nop
   11a34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11a38:	85 db                	test   %ebx,%ebx
   11a3a:	0f 84 73 fe ff ff    	je     118b3 <loc_service_get_id+0x93>
   11a40:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   11a46:	e9 68 fe ff ff       	jmp    118b3 <loc_service_get_id+0x93>
   11a4b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   11a52:	00 
   11a53:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   11a5a:	00 
   11a5b:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   11a62:	20 
   11a63:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   11a6a:	e8 71 ee 00 00       	call   208e0 <service_connect>
   11a6f:	a3 9c 06 03 00       	mov    %eax,0x3069c
   11a74:	e9 21 ff ff ff       	jmp    1199a <loc_service_get_id+0x17a>
   11a79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00011a80 <loc_category_get_name>:
   11a80:	55                   	push   %ebp
   11a81:	b8 0b 04 00 00       	mov    $0x40b,%eax
   11a86:	89 e5                	mov    %esp,%ebp
   11a88:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   11a8b:	8b 55 08             	mov    0x8(%ebp),%edx
   11a8e:	5d                   	pop    %ebp
   11a8f:	e9 6c ed ff ff       	jmp    10800 <loc_get_name_internal>
   11a94:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   11a9a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00011aa0 <loc_service_get_name>:
   11aa0:	55                   	push   %ebp
   11aa1:	b8 06 04 00 00       	mov    $0x406,%eax
   11aa6:	89 e5                	mov    %esp,%ebp
   11aa8:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   11aab:	8b 55 08             	mov    0x8(%ebp),%edx
   11aae:	5d                   	pop    %ebp
   11aaf:	e9 4c ed ff ff       	jmp    10800 <loc_get_name_internal>
   11ab4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   11aba:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00011ac0 <loc_service_get_server_name>:
   11ac0:	55                   	push   %ebp
   11ac1:	b8 07 04 00 00       	mov    $0x407,%eax
   11ac6:	89 e5                	mov    %esp,%ebp
   11ac8:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   11acb:	8b 55 08             	mov    0x8(%ebp),%edx
   11ace:	5d                   	pop    %ebp
   11acf:	e9 2c ed ff ff       	jmp    10800 <loc_get_name_internal>
   11ad4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   11ada:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00011ae0 <loc_namespace_get_id>:
   11ae0:	55                   	push   %ebp
   11ae1:	89 e5                	mov    %esp,%ebp
   11ae3:	57                   	push   %edi
   11ae4:	56                   	push   %esi
   11ae5:	53                   	push   %ebx
   11ae6:	83 ec 5c             	sub    $0x5c,%esp
   11ae9:	8b 75 10             	mov    0x10(%ebp),%esi
   11aec:	8b 7d 08             	mov    0x8(%ebp),%edi
   11aef:	f7 c6 01 00 00 00    	test   $0x1,%esi
   11af5:	0f 84 45 01 00 00    	je     11c40 <loc_namespace_get_id+0x160>
   11afb:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   11b02:	e8 b9 57 00 00       	call   172c0 <fibril_mutex_lock>
   11b07:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11b0c:	85 c0                	test   %eax,%eax
   11b0e:	75 38                	jne    11b48 <loc_namespace_get_id+0x68>
   11b10:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11b17:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   11b1d:	e8 9e 57 00 00       	call   172c0 <fibril_mutex_lock>
   11b22:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11b27:	85 c0                	test   %eax,%eax
   11b29:	0f 84 f9 00 00 00    	je     11c28 <loc_namespace_get_id+0x148>
   11b2f:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11b36:	e8 a5 58 00 00       	call   173e0 <fibril_mutex_unlock>
   11b3b:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11b40:	85 c0                	test   %eax,%eax
   11b42:	0f 84 68 01 00 00    	je     11cb0 <loc_namespace_get_id+0x1d0>
   11b48:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   11b4f:	e8 8c 58 00 00       	call   173e0 <fibril_mutex_unlock>
   11b54:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11b5b:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   11b61:	e8 5a 57 00 00       	call   172c0 <fibril_mutex_lock>
   11b66:	a1 9c 06 03 00       	mov    0x3069c,%eax
   11b6b:	85 c0                	test   %eax,%eax
   11b6d:	0f 84 85 01 00 00    	je     11cf8 <loc_namespace_get_id+0x218>
   11b73:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11b7a:	e8 61 58 00 00       	call   173e0 <fibril_mutex_unlock>
   11b7f:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11b84:	89 04 24             	mov    %eax,(%esp)
   11b87:	e8 84 1a 01 00       	call   23610 <async_exchange_begin>
   11b8c:	89 c3                	mov    %eax,%ebx
   11b8e:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   11b91:	89 74 24 08          	mov    %esi,0x8(%esp)
   11b95:	89 44 24 18          	mov    %eax,0x18(%esp)
   11b99:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   11ba0:	00 
   11ba1:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   11ba8:	00 
   11ba9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   11bb0:	00 
   11bb1:	c7 44 24 04 08 04 00 	movl   $0x408,0x4(%esp)
   11bb8:	00 
   11bb9:	89 1c 24             	mov    %ebx,(%esp)
   11bbc:	e8 ef 03 01 00       	call   21fb0 <async_send_fast>
   11bc1:	89 3c 24             	mov    %edi,(%esp)
   11bc4:	89 c6                	mov    %eax,%esi
   11bc6:	e8 25 24 00 00       	call   13ff0 <str_size>
   11bcb:	89 7c 24 04          	mov    %edi,0x4(%esp)
   11bcf:	89 44 24 08          	mov    %eax,0x8(%esp)
   11bd3:	89 1c 24             	mov    %ebx,(%esp)
   11bd6:	e8 25 29 01 00       	call   24500 <async_data_write_start>
   11bdb:	89 1c 24             	mov    %ebx,(%esp)
   11bde:	89 45 c0             	mov    %eax,-0x40(%ebp)
   11be1:	e8 9a 1d 01 00       	call   23980 <async_exchange_end>
   11be6:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   11be9:	85 c9                	test   %ecx,%ecx
   11beb:	0f 85 ef 00 00 00    	jne    11ce0 <loc_namespace_get_id+0x200>
   11bf1:	8d 45 c0             	lea    -0x40(%ebp),%eax
   11bf4:	89 34 24             	mov    %esi,(%esp)
   11bf7:	89 44 24 04          	mov    %eax,0x4(%esp)
   11bfb:	e8 80 05 01 00       	call   22180 <async_wait_for>
   11c00:	8b 45 c0             	mov    -0x40(%ebp),%eax
   11c03:	85 c0                	test   %eax,%eax
   11c05:	0f 84 85 00 00 00    	je     11c90 <loc_namespace_get_id+0x1b0>
   11c0b:	8b 55 0c             	mov    0xc(%ebp),%edx
   11c0e:	85 d2                	test   %edx,%edx
   11c10:	74 09                	je     11c1b <loc_namespace_get_id+0x13b>
   11c12:	8b 55 0c             	mov    0xc(%ebp),%edx
   11c15:	c7 02 ff ff ff ff    	movl   $0xffffffff,(%edx)
   11c1b:	83 c4 5c             	add    $0x5c,%esp
   11c1e:	5b                   	pop    %ebx
   11c1f:	5e                   	pop    %esi
   11c20:	5f                   	pop    %edi
   11c21:	5d                   	pop    %ebp
   11c22:	c3                   	ret    
   11c23:	90                   	nop
   11c24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11c28:	85 db                	test   %ebx,%ebx
   11c2a:	0f 84 ff fe ff ff    	je     11b2f <loc_namespace_get_id+0x4f>
   11c30:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   11c36:	e9 f4 fe ff ff       	jmp    11b2f <loc_namespace_get_id+0x4f>
   11c3b:	90                   	nop
   11c3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11c40:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11c47:	e8 74 56 00 00       	call   172c0 <fibril_mutex_lock>
   11c4c:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   11c52:	85 db                	test   %ebx,%ebx
   11c54:	0f 84 b1 00 00 00    	je     11d0b <loc_namespace_get_id+0x22b>
   11c5a:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11c61:	e8 7a 57 00 00       	call   173e0 <fibril_mutex_unlock>
   11c66:	a1 9c 06 03 00       	mov    0x3069c,%eax
   11c6b:	85 c0                	test   %eax,%eax
   11c6d:	74 12                	je     11c81 <loc_namespace_get_id+0x1a1>
   11c6f:	89 04 24             	mov    %eax,(%esp)
   11c72:	e8 99 19 01 00       	call   23610 <async_exchange_begin>
   11c77:	89 c3                	mov    %eax,%ebx
   11c79:	85 c0                	test   %eax,%eax
   11c7b:	0f 85 0d ff ff ff    	jne    11b8e <loc_namespace_get_id+0xae>
   11c81:	e8 5a ea ff ff       	call   106e0 <__errno>
   11c86:	8b 00                	mov    (%eax),%eax
   11c88:	eb 91                	jmp    11c1b <loc_namespace_get_id+0x13b>
   11c8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   11c90:	8b 45 0c             	mov    0xc(%ebp),%eax
   11c93:	85 c0                	test   %eax,%eax
   11c95:	74 08                	je     11c9f <loc_namespace_get_id+0x1bf>
   11c97:	8b 55 0c             	mov    0xc(%ebp),%edx
   11c9a:	8b 45 c8             	mov    -0x38(%ebp),%eax
   11c9d:	89 02                	mov    %eax,(%edx)
   11c9f:	83 c4 5c             	add    $0x5c,%esp
   11ca2:	31 c0                	xor    %eax,%eax
   11ca4:	5b                   	pop    %ebx
   11ca5:	5e                   	pop    %esi
   11ca6:	5f                   	pop    %edi
   11ca7:	5d                   	pop    %ebp
   11ca8:	c3                   	ret    
   11ca9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11cb0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   11cb7:	00 
   11cb8:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   11cbf:	00 
   11cc0:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   11cc7:	20 
   11cc8:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   11ccf:	e8 8c ec 00 00       	call   20960 <service_connect_blocking>
   11cd4:	a3 a0 06 03 00       	mov    %eax,0x306a0
   11cd9:	e9 2e fe ff ff       	jmp    11b0c <loc_namespace_get_id+0x2c>
   11cde:	66 90                	xchg   %ax,%ax
   11ce0:	89 34 24             	mov    %esi,(%esp)
   11ce3:	e8 e8 06 01 00       	call   223d0 <async_forget>
   11ce8:	8b 45 c0             	mov    -0x40(%ebp),%eax
   11ceb:	83 c4 5c             	add    $0x5c,%esp
   11cee:	5b                   	pop    %ebx
   11cef:	5e                   	pop    %esi
   11cf0:	5f                   	pop    %edi
   11cf1:	5d                   	pop    %ebp
   11cf2:	c3                   	ret    
   11cf3:	90                   	nop
   11cf4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11cf8:	85 db                	test   %ebx,%ebx
   11cfa:	0f 84 73 fe ff ff    	je     11b73 <loc_namespace_get_id+0x93>
   11d00:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   11d06:	e9 68 fe ff ff       	jmp    11b73 <loc_namespace_get_id+0x93>
   11d0b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   11d12:	00 
   11d13:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   11d1a:	00 
   11d1b:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   11d22:	20 
   11d23:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   11d2a:	e8 b1 eb 00 00       	call   208e0 <service_connect>
   11d2f:	a3 9c 06 03 00       	mov    %eax,0x3069c
   11d34:	e9 21 ff ff ff       	jmp    11c5a <loc_namespace_get_id+0x17a>
   11d39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00011d40 <loc_category_get_id>:
   11d40:	55                   	push   %ebp
   11d41:	89 e5                	mov    %esp,%ebp
   11d43:	57                   	push   %edi
   11d44:	56                   	push   %esi
   11d45:	53                   	push   %ebx
   11d46:	83 ec 5c             	sub    $0x5c,%esp
   11d49:	8b 75 08             	mov    0x8(%ebp),%esi
   11d4c:	f6 45 10 01          	testb  $0x1,0x10(%ebp)
   11d50:	0f 84 4a 01 00 00    	je     11ea0 <loc_category_get_id+0x160>
   11d56:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   11d5d:	e8 5e 55 00 00       	call   172c0 <fibril_mutex_lock>
   11d62:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11d67:	85 c0                	test   %eax,%eax
   11d69:	75 38                	jne    11da3 <loc_category_get_id+0x63>
   11d6b:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11d72:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   11d78:	e8 43 55 00 00       	call   172c0 <fibril_mutex_lock>
   11d7d:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11d82:	85 c0                	test   %eax,%eax
   11d84:	0f 84 fe 00 00 00    	je     11e88 <loc_category_get_id+0x148>
   11d8a:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11d91:	e8 4a 56 00 00       	call   173e0 <fibril_mutex_unlock>
   11d96:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11d9b:	85 c0                	test   %eax,%eax
   11d9d:	0f 84 6d 01 00 00    	je     11f10 <loc_category_get_id+0x1d0>
   11da3:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   11daa:	e8 31 56 00 00       	call   173e0 <fibril_mutex_unlock>
   11daf:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11db6:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   11dbc:	e8 ff 54 00 00       	call   172c0 <fibril_mutex_lock>
   11dc1:	8b 3d 9c 06 03 00    	mov    0x3069c,%edi
   11dc7:	85 ff                	test   %edi,%edi
   11dc9:	0f 84 89 01 00 00    	je     11f58 <loc_category_get_id+0x218>
   11dcf:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11dd6:	e8 05 56 00 00       	call   173e0 <fibril_mutex_unlock>
   11ddb:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11de0:	89 04 24             	mov    %eax,(%esp)
   11de3:	e8 28 18 01 00       	call   23610 <async_exchange_begin>
   11de8:	89 c3                	mov    %eax,%ebx
   11dea:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   11ded:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   11df4:	00 
   11df5:	89 44 24 18          	mov    %eax,0x18(%esp)
   11df9:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   11e00:	00 
   11e01:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   11e08:	00 
   11e09:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   11e10:	00 
   11e11:	c7 44 24 04 0a 04 00 	movl   $0x40a,0x4(%esp)
   11e18:	00 
   11e19:	89 1c 24             	mov    %ebx,(%esp)
   11e1c:	e8 8f 01 01 00       	call   21fb0 <async_send_fast>
   11e21:	89 34 24             	mov    %esi,(%esp)
   11e24:	89 c7                	mov    %eax,%edi
   11e26:	e8 c5 21 00 00       	call   13ff0 <str_size>
   11e2b:	89 74 24 04          	mov    %esi,0x4(%esp)
   11e2f:	89 44 24 08          	mov    %eax,0x8(%esp)
   11e33:	89 1c 24             	mov    %ebx,(%esp)
   11e36:	e8 c5 26 01 00       	call   24500 <async_data_write_start>
   11e3b:	89 1c 24             	mov    %ebx,(%esp)
   11e3e:	89 45 c0             	mov    %eax,-0x40(%ebp)
   11e41:	e8 3a 1b 01 00       	call   23980 <async_exchange_end>
   11e46:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   11e49:	85 c9                	test   %ecx,%ecx
   11e4b:	0f 85 ef 00 00 00    	jne    11f40 <loc_category_get_id+0x200>
   11e51:	8d 45 c0             	lea    -0x40(%ebp),%eax
   11e54:	89 3c 24             	mov    %edi,(%esp)
   11e57:	89 44 24 04          	mov    %eax,0x4(%esp)
   11e5b:	e8 20 03 01 00       	call   22180 <async_wait_for>
   11e60:	8b 45 c0             	mov    -0x40(%ebp),%eax
   11e63:	85 c0                	test   %eax,%eax
   11e65:	0f 84 85 00 00 00    	je     11ef0 <loc_category_get_id+0x1b0>
   11e6b:	8b 55 0c             	mov    0xc(%ebp),%edx
   11e6e:	85 d2                	test   %edx,%edx
   11e70:	74 09                	je     11e7b <loc_category_get_id+0x13b>
   11e72:	8b 55 0c             	mov    0xc(%ebp),%edx
   11e75:	c7 02 ff ff ff ff    	movl   $0xffffffff,(%edx)
   11e7b:	83 c4 5c             	add    $0x5c,%esp
   11e7e:	5b                   	pop    %ebx
   11e7f:	5e                   	pop    %esi
   11e80:	5f                   	pop    %edi
   11e81:	5d                   	pop    %ebp
   11e82:	c3                   	ret    
   11e83:	90                   	nop
   11e84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11e88:	85 db                	test   %ebx,%ebx
   11e8a:	0f 84 fa fe ff ff    	je     11d8a <loc_category_get_id+0x4a>
   11e90:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   11e96:	e9 ef fe ff ff       	jmp    11d8a <loc_category_get_id+0x4a>
   11e9b:	90                   	nop
   11e9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11ea0:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11ea7:	e8 14 54 00 00       	call   172c0 <fibril_mutex_lock>
   11eac:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   11eb2:	85 db                	test   %ebx,%ebx
   11eb4:	0f 84 b1 00 00 00    	je     11f6b <loc_category_get_id+0x22b>
   11eba:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11ec1:	e8 1a 55 00 00       	call   173e0 <fibril_mutex_unlock>
   11ec6:	a1 9c 06 03 00       	mov    0x3069c,%eax
   11ecb:	85 c0                	test   %eax,%eax
   11ecd:	74 12                	je     11ee1 <loc_category_get_id+0x1a1>
   11ecf:	89 04 24             	mov    %eax,(%esp)
   11ed2:	e8 39 17 01 00       	call   23610 <async_exchange_begin>
   11ed7:	89 c3                	mov    %eax,%ebx
   11ed9:	85 c0                	test   %eax,%eax
   11edb:	0f 85 09 ff ff ff    	jne    11dea <loc_category_get_id+0xaa>
   11ee1:	e8 fa e7 ff ff       	call   106e0 <__errno>
   11ee6:	8b 00                	mov    (%eax),%eax
   11ee8:	eb 91                	jmp    11e7b <loc_category_get_id+0x13b>
   11eea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   11ef0:	8b 45 0c             	mov    0xc(%ebp),%eax
   11ef3:	85 c0                	test   %eax,%eax
   11ef5:	74 08                	je     11eff <loc_category_get_id+0x1bf>
   11ef7:	8b 55 0c             	mov    0xc(%ebp),%edx
   11efa:	8b 45 c8             	mov    -0x38(%ebp),%eax
   11efd:	89 02                	mov    %eax,(%edx)
   11eff:	83 c4 5c             	add    $0x5c,%esp
   11f02:	31 c0                	xor    %eax,%eax
   11f04:	5b                   	pop    %ebx
   11f05:	5e                   	pop    %esi
   11f06:	5f                   	pop    %edi
   11f07:	5d                   	pop    %ebp
   11f08:	c3                   	ret    
   11f09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   11f10:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   11f17:	00 
   11f18:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   11f1f:	00 
   11f20:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   11f27:	20 
   11f28:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   11f2f:	e8 2c ea 00 00       	call   20960 <service_connect_blocking>
   11f34:	a3 a0 06 03 00       	mov    %eax,0x306a0
   11f39:	e9 29 fe ff ff       	jmp    11d67 <loc_category_get_id+0x27>
   11f3e:	66 90                	xchg   %ax,%ax
   11f40:	89 3c 24             	mov    %edi,(%esp)
   11f43:	e8 88 04 01 00       	call   223d0 <async_forget>
   11f48:	8b 45 c0             	mov    -0x40(%ebp),%eax
   11f4b:	83 c4 5c             	add    $0x5c,%esp
   11f4e:	5b                   	pop    %ebx
   11f4f:	5e                   	pop    %esi
   11f50:	5f                   	pop    %edi
   11f51:	5d                   	pop    %ebp
   11f52:	c3                   	ret    
   11f53:	90                   	nop
   11f54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   11f58:	85 db                	test   %ebx,%ebx
   11f5a:	0f 84 6f fe ff ff    	je     11dcf <loc_category_get_id+0x8f>
   11f60:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   11f66:	e9 64 fe ff ff       	jmp    11dcf <loc_category_get_id+0x8f>
   11f6b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   11f72:	00 
   11f73:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   11f7a:	00 
   11f7b:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   11f82:	20 
   11f83:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   11f8a:	e8 51 e9 00 00       	call   208e0 <service_connect>
   11f8f:	a3 9c 06 03 00       	mov    %eax,0x3069c
   11f94:	e9 21 ff ff ff       	jmp    11eba <loc_category_get_id+0x17a>
   11f99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00011fa0 <loc_id_probe>:
   11fa0:	55                   	push   %ebp
   11fa1:	89 e5                	mov    %esp,%ebp
   11fa3:	56                   	push   %esi
   11fa4:	53                   	push   %ebx
   11fa5:	83 ec 40             	sub    $0x40,%esp
   11fa8:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   11faf:	e8 0c 53 00 00       	call   172c0 <fibril_mutex_lock>
   11fb4:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11fb9:	85 c0                	test   %eax,%eax
   11fbb:	75 38                	jne    11ff5 <loc_id_probe+0x55>
   11fbd:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11fc4:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   11fca:	e8 f1 52 00 00       	call   172c0 <fibril_mutex_lock>
   11fcf:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11fd4:	85 c0                	test   %eax,%eax
   11fd6:	0f 84 d4 00 00 00    	je     120b0 <loc_id_probe+0x110>
   11fdc:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   11fe3:	e8 f8 53 00 00       	call   173e0 <fibril_mutex_unlock>
   11fe8:	a1 a0 06 03 00       	mov    0x306a0,%eax
   11fed:	85 c0                	test   %eax,%eax
   11fef:	0f 84 d3 00 00 00    	je     120c8 <loc_id_probe+0x128>
   11ff5:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   11ffc:	e8 df 53 00 00       	call   173e0 <fibril_mutex_unlock>
   12001:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12008:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   1200e:	e8 ad 52 00 00       	call   172c0 <fibril_mutex_lock>
   12013:	a1 9c 06 03 00       	mov    0x3069c,%eax
   12018:	85 c0                	test   %eax,%eax
   1201a:	0f 84 d8 00 00 00    	je     120f8 <loc_id_probe+0x158>
   12020:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12027:	e8 b4 53 00 00       	call   173e0 <fibril_mutex_unlock>
   1202c:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12031:	89 04 24             	mov    %eax,(%esp)
   12034:	e8 d7 15 01 00       	call   23610 <async_exchange_begin>
   12039:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   12040:	00 
   12041:	89 c3                	mov    %eax,%ebx
   12043:	8d 45 f4             	lea    -0xc(%ebp),%eax
   12046:	89 44 24 18          	mov    %eax,0x18(%esp)
   1204a:	8b 45 08             	mov    0x8(%ebp),%eax
   1204d:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   12054:	00 
   12055:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   1205c:	00 
   1205d:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   12064:	00 
   12065:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1206c:	00 
   1206d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   12074:	00 
   12075:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1207c:	00 
   1207d:	89 44 24 08          	mov    %eax,0x8(%esp)
   12081:	c7 44 24 04 0d 04 00 	movl   $0x40d,0x4(%esp)
   12088:	00 
   12089:	89 1c 24             	mov    %ebx,(%esp)
   1208c:	e8 2f 05 01 00       	call   225c0 <async_req_fast>
   12091:	89 1c 24             	mov    %ebx,(%esp)
   12094:	89 c6                	mov    %eax,%esi
   12096:	e8 e5 18 01 00       	call   23980 <async_exchange_end>
   1209b:	31 c0                	xor    %eax,%eax
   1209d:	85 f6                	test   %esi,%esi
   1209f:	75 03                	jne    120a4 <loc_id_probe+0x104>
   120a1:	8b 45 f4             	mov    -0xc(%ebp),%eax
   120a4:	83 c4 40             	add    $0x40,%esp
   120a7:	5b                   	pop    %ebx
   120a8:	5e                   	pop    %esi
   120a9:	5d                   	pop    %ebp
   120aa:	c3                   	ret    
   120ab:	90                   	nop
   120ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   120b0:	85 db                	test   %ebx,%ebx
   120b2:	0f 84 24 ff ff ff    	je     11fdc <loc_id_probe+0x3c>
   120b8:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   120be:	e9 19 ff ff ff       	jmp    11fdc <loc_id_probe+0x3c>
   120c3:	90                   	nop
   120c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   120c8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   120cf:	00 
   120d0:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   120d7:	00 
   120d8:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   120df:	20 
   120e0:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   120e7:	e8 74 e8 00 00       	call   20960 <service_connect_blocking>
   120ec:	a3 a0 06 03 00       	mov    %eax,0x306a0
   120f1:	e9 c3 fe ff ff       	jmp    11fb9 <loc_id_probe+0x19>
   120f6:	66 90                	xchg   %ax,%ax
   120f8:	85 db                	test   %ebx,%ebx
   120fa:	0f 84 20 ff ff ff    	je     12020 <loc_id_probe+0x80>
   12100:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   12106:	e9 15 ff ff ff       	jmp    12020 <loc_id_probe+0x80>
   1210b:	90                   	nop
   1210c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00012110 <loc_service_connect>:
   12110:	55                   	push   %ebp
   12111:	89 e5                	mov    %esp,%ebp
   12113:	83 ec 18             	sub    $0x18,%esp
   12116:	8b 45 08             	mov    0x8(%ebp),%eax
   12119:	8b 55 0c             	mov    0xc(%ebp),%edx
   1211c:	f6 45 10 01          	testb  $0x1,0x10(%ebp)
   12120:	89 54 24 0c          	mov    %edx,0xc(%esp)
   12124:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
   1212b:	00 
   1212c:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   12133:	20 
   12134:	89 04 24             	mov    %eax,(%esp)
   12137:	75 07                	jne    12140 <loc_service_connect+0x30>
   12139:	e8 a2 e7 00 00       	call   208e0 <service_connect>
   1213e:	c9                   	leave  
   1213f:	c3                   	ret    
   12140:	e8 1b e8 00 00       	call   20960 <service_connect_blocking>
   12145:	c9                   	leave  
   12146:	c3                   	ret    
   12147:	89 f6                	mov    %esi,%esi
   12149:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00012150 <loc_null_create>:
   12150:	55                   	push   %ebp
   12151:	89 e5                	mov    %esp,%ebp
   12153:	56                   	push   %esi
   12154:	53                   	push   %ebx
   12155:	83 ec 40             	sub    $0x40,%esp
   12158:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   1215f:	e8 5c 51 00 00       	call   172c0 <fibril_mutex_lock>
   12164:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12169:	85 c0                	test   %eax,%eax
   1216b:	75 3a                	jne    121a7 <loc_null_create+0x57>
   1216d:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12174:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   1217a:	e8 41 51 00 00       	call   172c0 <fibril_mutex_lock>
   1217f:	8b 0d a0 06 03 00    	mov    0x306a0,%ecx
   12185:	85 c9                	test   %ecx,%ecx
   12187:	0f 84 d3 00 00 00    	je     12260 <loc_null_create+0x110>
   1218d:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12194:	e8 47 52 00 00       	call   173e0 <fibril_mutex_unlock>
   12199:	8b 15 a0 06 03 00    	mov    0x306a0,%edx
   1219f:	85 d2                	test   %edx,%edx
   121a1:	0f 84 d1 00 00 00    	je     12278 <loc_null_create+0x128>
   121a7:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   121ae:	e8 2d 52 00 00       	call   173e0 <fibril_mutex_unlock>
   121b3:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   121ba:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   121c0:	e8 fb 50 00 00       	call   172c0 <fibril_mutex_lock>
   121c5:	a1 9c 06 03 00       	mov    0x3069c,%eax
   121ca:	85 c0                	test   %eax,%eax
   121cc:	0f 84 d6 00 00 00    	je     122a8 <loc_null_create+0x158>
   121d2:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   121d9:	e8 02 52 00 00       	call   173e0 <fibril_mutex_unlock>
   121de:	a1 a0 06 03 00       	mov    0x306a0,%eax
   121e3:	89 04 24             	mov    %eax,(%esp)
   121e6:	e8 25 14 01 00       	call   23610 <async_exchange_begin>
   121eb:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   121f2:	00 
   121f3:	89 c3                	mov    %eax,%ebx
   121f5:	8d 45 f4             	lea    -0xc(%ebp),%eax
   121f8:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   121ff:	00 
   12200:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   12207:	00 
   12208:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   1220f:	00 
   12210:	89 44 24 18          	mov    %eax,0x18(%esp)
   12214:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1221b:	00 
   1221c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   12223:	00 
   12224:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1222b:	00 
   1222c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   12233:	00 
   12234:	c7 44 24 04 0e 04 00 	movl   $0x40e,0x4(%esp)
   1223b:	00 
   1223c:	89 1c 24             	mov    %ebx,(%esp)
   1223f:	e8 7c 03 01 00       	call   225c0 <async_req_fast>
   12244:	89 1c 24             	mov    %ebx,(%esp)
   12247:	89 c6                	mov    %eax,%esi
   12249:	e8 32 17 01 00       	call   23980 <async_exchange_end>
   1224e:	85 f6                	test   %esi,%esi
   12250:	75 69                	jne    122bb <loc_null_create+0x16b>
   12252:	8b 45 f4             	mov    -0xc(%ebp),%eax
   12255:	83 c4 40             	add    $0x40,%esp
   12258:	5b                   	pop    %ebx
   12259:	5e                   	pop    %esi
   1225a:	5d                   	pop    %ebp
   1225b:	c3                   	ret    
   1225c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12260:	85 db                	test   %ebx,%ebx
   12262:	0f 84 25 ff ff ff    	je     1218d <loc_null_create+0x3d>
   12268:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   1226e:	e9 1a ff ff ff       	jmp    1218d <loc_null_create+0x3d>
   12273:	90                   	nop
   12274:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12278:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1227f:	00 
   12280:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   12287:	00 
   12288:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   1228f:	20 
   12290:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   12297:	e8 c4 e6 00 00       	call   20960 <service_connect_blocking>
   1229c:	a3 a0 06 03 00       	mov    %eax,0x306a0
   122a1:	e9 c3 fe ff ff       	jmp    12169 <loc_null_create+0x19>
   122a6:	66 90                	xchg   %ax,%ax
   122a8:	85 db                	test   %ebx,%ebx
   122aa:	0f 84 22 ff ff ff    	je     121d2 <loc_null_create+0x82>
   122b0:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   122b6:	e9 17 ff ff ff       	jmp    121d2 <loc_null_create+0x82>
   122bb:	83 c8 ff             	or     $0xffffffff,%eax
   122be:	eb 95                	jmp    12255 <loc_null_create+0x105>

000122c0 <loc_null_destroy>:
   122c0:	55                   	push   %ebp
   122c1:	89 e5                	mov    %esp,%ebp
   122c3:	56                   	push   %esi
   122c4:	53                   	push   %ebx
   122c5:	83 ec 30             	sub    $0x30,%esp
   122c8:	8b 75 08             	mov    0x8(%ebp),%esi
   122cb:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   122d2:	e8 e9 4f 00 00       	call   172c0 <fibril_mutex_lock>
   122d7:	a1 a0 06 03 00       	mov    0x306a0,%eax
   122dc:	85 c0                	test   %eax,%eax
   122de:	75 38                	jne    12318 <loc_null_destroy+0x58>
   122e0:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   122e7:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   122ed:	e8 ce 4f 00 00       	call   172c0 <fibril_mutex_lock>
   122f2:	a1 a0 06 03 00       	mov    0x306a0,%eax
   122f7:	85 c0                	test   %eax,%eax
   122f9:	0f 84 c1 00 00 00    	je     123c0 <loc_null_destroy+0x100>
   122ff:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12306:	e8 d5 50 00 00       	call   173e0 <fibril_mutex_unlock>
   1230b:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12310:	85 c0                	test   %eax,%eax
   12312:	0f 84 c0 00 00 00    	je     123d8 <loc_null_destroy+0x118>
   12318:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   1231f:	e8 bc 50 00 00       	call   173e0 <fibril_mutex_unlock>
   12324:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   1232b:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   12331:	e8 8a 4f 00 00       	call   172c0 <fibril_mutex_lock>
   12336:	a1 9c 06 03 00       	mov    0x3069c,%eax
   1233b:	85 c0                	test   %eax,%eax
   1233d:	0f 84 c5 00 00 00    	je     12408 <loc_null_destroy+0x148>
   12343:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   1234a:	e8 91 50 00 00       	call   173e0 <fibril_mutex_unlock>
   1234f:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12354:	89 04 24             	mov    %eax,(%esp)
   12357:	e8 b4 12 01 00       	call   23610 <async_exchange_begin>
   1235c:	89 74 24 08          	mov    %esi,0x8(%esp)
   12360:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   12367:	00 
   12368:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   1236f:	00 
   12370:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   12377:	00 
   12378:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   1237f:	00 
   12380:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   12387:	00 
   12388:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1238f:	00 
   12390:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   12397:	00 
   12398:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1239f:	00 
   123a0:	c7 44 24 04 0f 04 00 	movl   $0x40f,0x4(%esp)
   123a7:	00 
   123a8:	89 04 24             	mov    %eax,(%esp)
   123ab:	89 c3                	mov    %eax,%ebx
   123ad:	e8 0e 02 01 00       	call   225c0 <async_req_fast>
   123b2:	89 5d 08             	mov    %ebx,0x8(%ebp)
   123b5:	83 c4 30             	add    $0x30,%esp
   123b8:	5b                   	pop    %ebx
   123b9:	5e                   	pop    %esi
   123ba:	5d                   	pop    %ebp
   123bb:	e9 c0 15 01 00       	jmp    23980 <async_exchange_end>
   123c0:	85 db                	test   %ebx,%ebx
   123c2:	0f 84 37 ff ff ff    	je     122ff <loc_null_destroy+0x3f>
   123c8:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   123ce:	e9 2c ff ff ff       	jmp    122ff <loc_null_destroy+0x3f>
   123d3:	90                   	nop
   123d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   123d8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   123df:	00 
   123e0:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   123e7:	00 
   123e8:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   123ef:	20 
   123f0:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   123f7:	e8 64 e5 00 00       	call   20960 <service_connect_blocking>
   123fc:	a3 a0 06 03 00       	mov    %eax,0x306a0
   12401:	e9 d6 fe ff ff       	jmp    122dc <loc_null_destroy+0x1c>
   12406:	66 90                	xchg   %ax,%ax
   12408:	85 db                	test   %ebx,%ebx
   1240a:	0f 84 33 ff ff ff    	je     12343 <loc_null_destroy+0x83>
   12410:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   12416:	e9 28 ff ff ff       	jmp    12343 <loc_null_destroy+0x83>
   1241b:	90                   	nop
   1241c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00012420 <loc_service_add_to_cat>:
   12420:	55                   	push   %ebp
   12421:	89 e5                	mov    %esp,%ebp
   12423:	53                   	push   %ebx
   12424:	83 ec 44             	sub    $0x44,%esp
   12427:	c7 04 24 80 04 03 00 	movl   $0x30480,(%esp)
   1242e:	e8 8d 4e 00 00       	call   172c0 <fibril_mutex_lock>
   12433:	a1 98 06 03 00       	mov    0x30698,%eax
   12438:	85 c0                	test   %eax,%eax
   1243a:	75 38                	jne    12474 <loc_service_add_to_cat+0x54>
   1243c:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   12443:	8b 1d 94 06 03 00    	mov    0x30694,%ebx
   12449:	e8 72 4e 00 00       	call   172c0 <fibril_mutex_lock>
   1244e:	a1 98 06 03 00       	mov    0x30698,%eax
   12453:	85 c0                	test   %eax,%eax
   12455:	0f 84 cd 00 00 00    	je     12528 <loc_service_add_to_cat+0x108>
   1245b:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   12462:	e8 79 4f 00 00       	call   173e0 <fibril_mutex_unlock>
   12467:	a1 98 06 03 00       	mov    0x30698,%eax
   1246c:	85 c0                	test   %eax,%eax
   1246e:	0f 84 cc 00 00 00    	je     12540 <loc_service_add_to_cat+0x120>
   12474:	c7 04 24 80 04 03 00 	movl   $0x30480,(%esp)
   1247b:	e8 60 4f 00 00       	call   173e0 <fibril_mutex_unlock>
   12480:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   12487:	8b 1d 98 06 03 00    	mov    0x30698,%ebx
   1248d:	e8 2e 4e 00 00       	call   172c0 <fibril_mutex_lock>
   12492:	a1 94 06 03 00       	mov    0x30694,%eax
   12497:	85 c0                	test   %eax,%eax
   12499:	0f 84 d1 00 00 00    	je     12570 <loc_service_add_to_cat+0x150>
   1249f:	c7 04 24 90 04 03 00 	movl   $0x30490,(%esp)
   124a6:	e8 35 4f 00 00       	call   173e0 <fibril_mutex_unlock>
   124ab:	a1 98 06 03 00       	mov    0x30698,%eax
   124b0:	89 04 24             	mov    %eax,(%esp)
   124b3:	e8 58 11 01 00       	call   23610 <async_exchange_begin>
   124b8:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   124bf:	00 
   124c0:	89 c3                	mov    %eax,%ebx
   124c2:	8b 45 0c             	mov    0xc(%ebp),%eax
   124c5:	89 44 24 0c          	mov    %eax,0xc(%esp)
   124c9:	8b 45 08             	mov    0x8(%ebp),%eax
   124cc:	89 1c 24             	mov    %ebx,(%esp)
   124cf:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   124d6:	00 
   124d7:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   124de:	00 
   124df:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   124e6:	00 
   124e7:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   124ee:	00 
   124ef:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   124f6:	00 
   124f7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   124fe:	00 
   124ff:	89 44 24 08          	mov    %eax,0x8(%esp)
   12503:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)
   1250a:	00 
   1250b:	e8 b0 00 01 00       	call   225c0 <async_req_fast>
   12510:	89 1c 24             	mov    %ebx,(%esp)
   12513:	89 45 f4             	mov    %eax,-0xc(%ebp)
   12516:	e8 65 14 01 00       	call   23980 <async_exchange_end>
   1251b:	8b 45 f4             	mov    -0xc(%ebp),%eax
   1251e:	83 c4 44             	add    $0x44,%esp
   12521:	5b                   	pop    %ebx
   12522:	5d                   	pop    %ebp
   12523:	c3                   	ret    
   12524:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12528:	85 db                	test   %ebx,%ebx
   1252a:	0f 84 2b ff ff ff    	je     1245b <loc_service_add_to_cat+0x3b>
   12530:	89 1d 98 06 03 00    	mov    %ebx,0x30698
   12536:	e9 20 ff ff ff       	jmp    1245b <loc_service_add_to_cat+0x3b>
   1253b:	90                   	nop
   1253c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12540:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   12547:	00 
   12548:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   1254f:	00 
   12550:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   12557:	20 
   12558:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   1255f:	e8 fc e3 00 00       	call   20960 <service_connect_blocking>
   12564:	a3 98 06 03 00       	mov    %eax,0x30698
   12569:	e9 ca fe ff ff       	jmp    12438 <loc_service_add_to_cat+0x18>
   1256e:	66 90                	xchg   %ax,%ax
   12570:	85 db                	test   %ebx,%ebx
   12572:	0f 84 27 ff ff ff    	je     1249f <loc_service_add_to_cat+0x7f>
   12578:	89 1d 94 06 03 00    	mov    %ebx,0x30694
   1257e:	e9 1c ff ff ff       	jmp    1249f <loc_service_add_to_cat+0x7f>
   12583:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   12589:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00012590 <loc_count_namespaces>:
   12590:	55                   	push   %ebp
   12591:	89 e5                	mov    %esp,%ebp
   12593:	56                   	push   %esi
   12594:	53                   	push   %ebx
   12595:	83 ec 40             	sub    $0x40,%esp
   12598:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   1259f:	e8 1c 4d 00 00       	call   172c0 <fibril_mutex_lock>
   125a4:	a1 a0 06 03 00       	mov    0x306a0,%eax
   125a9:	85 c0                	test   %eax,%eax
   125ab:	75 3a                	jne    125e7 <loc_count_namespaces+0x57>
   125ad:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   125b4:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   125ba:	e8 01 4d 00 00       	call   172c0 <fibril_mutex_lock>
   125bf:	8b 35 a0 06 03 00    	mov    0x306a0,%esi
   125c5:	85 f6                	test   %esi,%esi
   125c7:	0f 84 d3 00 00 00    	je     126a0 <loc_count_namespaces+0x110>
   125cd:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   125d4:	e8 07 4e 00 00       	call   173e0 <fibril_mutex_unlock>
   125d9:	8b 0d a0 06 03 00    	mov    0x306a0,%ecx
   125df:	85 c9                	test   %ecx,%ecx
   125e1:	0f 84 d1 00 00 00    	je     126b8 <loc_count_namespaces+0x128>
   125e7:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   125ee:	e8 ed 4d 00 00       	call   173e0 <fibril_mutex_unlock>
   125f3:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   125fa:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   12600:	e8 bb 4c 00 00       	call   172c0 <fibril_mutex_lock>
   12605:	8b 15 9c 06 03 00    	mov    0x3069c,%edx
   1260b:	85 d2                	test   %edx,%edx
   1260d:	0f 84 d5 00 00 00    	je     126e8 <loc_count_namespaces+0x158>
   12613:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   1261a:	31 f6                	xor    %esi,%esi
   1261c:	e8 bf 4d 00 00       	call   173e0 <fibril_mutex_unlock>
   12621:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12626:	89 04 24             	mov    %eax,(%esp)
   12629:	e8 e2 0f 01 00       	call   23610 <async_exchange_begin>
   1262e:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   12635:	00 
   12636:	89 c3                	mov    %eax,%ebx
   12638:	8d 45 f4             	lea    -0xc(%ebp),%eax
   1263b:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   12642:	00 
   12643:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   1264a:	00 
   1264b:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   12652:	00 
   12653:	89 44 24 18          	mov    %eax,0x18(%esp)
   12657:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1265e:	00 
   1265f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   12666:	00 
   12667:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1266e:	00 
   1266f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   12676:	00 
   12677:	c7 44 24 04 10 04 00 	movl   $0x410,0x4(%esp)
   1267e:	00 
   1267f:	89 1c 24             	mov    %ebx,(%esp)
   12682:	e8 39 ff 00 00       	call   225c0 <async_req_fast>
   12687:	85 c0                	test   %eax,%eax
   12689:	75 03                	jne    1268e <loc_count_namespaces+0xfe>
   1268b:	8b 75 f4             	mov    -0xc(%ebp),%esi
   1268e:	89 1c 24             	mov    %ebx,(%esp)
   12691:	e8 ea 12 01 00       	call   23980 <async_exchange_end>
   12696:	83 c4 40             	add    $0x40,%esp
   12699:	89 f0                	mov    %esi,%eax
   1269b:	5b                   	pop    %ebx
   1269c:	5e                   	pop    %esi
   1269d:	5d                   	pop    %ebp
   1269e:	c3                   	ret    
   1269f:	90                   	nop
   126a0:	85 db                	test   %ebx,%ebx
   126a2:	0f 84 25 ff ff ff    	je     125cd <loc_count_namespaces+0x3d>
   126a8:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   126ae:	e9 1a ff ff ff       	jmp    125cd <loc_count_namespaces+0x3d>
   126b3:	90                   	nop
   126b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   126b8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   126bf:	00 
   126c0:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   126c7:	00 
   126c8:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   126cf:	20 
   126d0:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   126d7:	e8 84 e2 00 00       	call   20960 <service_connect_blocking>
   126dc:	a3 a0 06 03 00       	mov    %eax,0x306a0
   126e1:	e9 c3 fe ff ff       	jmp    125a9 <loc_count_namespaces+0x19>
   126e6:	66 90                	xchg   %ax,%ax
   126e8:	85 db                	test   %ebx,%ebx
   126ea:	0f 84 23 ff ff ff    	je     12613 <loc_count_namespaces+0x83>
   126f0:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   126f6:	e9 18 ff ff ff       	jmp    12613 <loc_count_namespaces+0x83>
   126fb:	90                   	nop
   126fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00012700 <loc_count_services>:
   12700:	55                   	push   %ebp
   12701:	89 e5                	mov    %esp,%ebp
   12703:	56                   	push   %esi
   12704:	53                   	push   %ebx
   12705:	83 ec 40             	sub    $0x40,%esp
   12708:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   1270f:	e8 ac 4b 00 00       	call   172c0 <fibril_mutex_lock>
   12714:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12719:	85 c0                	test   %eax,%eax
   1271b:	75 38                	jne    12755 <loc_count_services+0x55>
   1271d:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12724:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   1272a:	e8 91 4b 00 00       	call   172c0 <fibril_mutex_lock>
   1272f:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12734:	85 c0                	test   %eax,%eax
   12736:	0f 84 d4 00 00 00    	je     12810 <loc_count_services+0x110>
   1273c:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12743:	e8 98 4c 00 00       	call   173e0 <fibril_mutex_unlock>
   12748:	a1 a0 06 03 00       	mov    0x306a0,%eax
   1274d:	85 c0                	test   %eax,%eax
   1274f:	0f 84 d3 00 00 00    	je     12828 <loc_count_services+0x128>
   12755:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   1275c:	e8 7f 4c 00 00       	call   173e0 <fibril_mutex_unlock>
   12761:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12768:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   1276e:	e8 4d 4b 00 00       	call   172c0 <fibril_mutex_lock>
   12773:	a1 9c 06 03 00       	mov    0x3069c,%eax
   12778:	85 c0                	test   %eax,%eax
   1277a:	0f 84 d8 00 00 00    	je     12858 <loc_count_services+0x158>
   12780:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12787:	31 f6                	xor    %esi,%esi
   12789:	e8 52 4c 00 00       	call   173e0 <fibril_mutex_unlock>
   1278e:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12793:	89 04 24             	mov    %eax,(%esp)
   12796:	e8 75 0e 01 00       	call   23610 <async_exchange_begin>
   1279b:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   127a2:	00 
   127a3:	89 c3                	mov    %eax,%ebx
   127a5:	8d 45 f4             	lea    -0xc(%ebp),%eax
   127a8:	89 44 24 18          	mov    %eax,0x18(%esp)
   127ac:	8b 45 08             	mov    0x8(%ebp),%eax
   127af:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   127b6:	00 
   127b7:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   127be:	00 
   127bf:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   127c6:	00 
   127c7:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   127ce:	00 
   127cf:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   127d6:	00 
   127d7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   127de:	00 
   127df:	89 44 24 08          	mov    %eax,0x8(%esp)
   127e3:	c7 44 24 04 11 04 00 	movl   $0x411,0x4(%esp)
   127ea:	00 
   127eb:	89 1c 24             	mov    %ebx,(%esp)
   127ee:	e8 cd fd 00 00       	call   225c0 <async_req_fast>
   127f3:	85 c0                	test   %eax,%eax
   127f5:	75 03                	jne    127fa <loc_count_services+0xfa>
   127f7:	8b 75 f4             	mov    -0xc(%ebp),%esi
   127fa:	89 1c 24             	mov    %ebx,(%esp)
   127fd:	e8 7e 11 01 00       	call   23980 <async_exchange_end>
   12802:	83 c4 40             	add    $0x40,%esp
   12805:	89 f0                	mov    %esi,%eax
   12807:	5b                   	pop    %ebx
   12808:	5e                   	pop    %esi
   12809:	5d                   	pop    %ebp
   1280a:	c3                   	ret    
   1280b:	90                   	nop
   1280c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12810:	85 db                	test   %ebx,%ebx
   12812:	0f 84 24 ff ff ff    	je     1273c <loc_count_services+0x3c>
   12818:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   1281e:	e9 19 ff ff ff       	jmp    1273c <loc_count_services+0x3c>
   12823:	90                   	nop
   12824:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12828:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1282f:	00 
   12830:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   12837:	00 
   12838:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   1283f:	20 
   12840:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   12847:	e8 14 e1 00 00       	call   20960 <service_connect_blocking>
   1284c:	a3 a0 06 03 00       	mov    %eax,0x306a0
   12851:	e9 c3 fe ff ff       	jmp    12719 <loc_count_services+0x19>
   12856:	66 90                	xchg   %ax,%ax
   12858:	85 db                	test   %ebx,%ebx
   1285a:	0f 84 20 ff ff ff    	je     12780 <loc_count_services+0x80>
   12860:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   12866:	e9 15 ff ff ff       	jmp    12780 <loc_count_services+0x80>
   1286b:	90                   	nop
   1286c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00012870 <loc_get_namespaces>:
   12870:	55                   	push   %ebp
   12871:	89 e5                	mov    %esp,%ebp
   12873:	57                   	push   %edi
   12874:	56                   	push   %esi
   12875:	53                   	push   %ebx
   12876:	83 ec 7c             	sub    $0x7c,%esp
   12879:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   12880:	e8 3b 4a 00 00       	call   172c0 <fibril_mutex_lock>
   12885:	a1 a0 06 03 00       	mov    0x306a0,%eax
   1288a:	85 c0                	test   %eax,%eax
   1288c:	75 3a                	jne    128c8 <loc_get_namespaces+0x58>
   1288e:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12895:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   1289b:	e8 20 4a 00 00       	call   172c0 <fibril_mutex_lock>
   128a0:	8b 0d a0 06 03 00    	mov    0x306a0,%ecx
   128a6:	85 c9                	test   %ecx,%ecx
   128a8:	0f 84 da 01 00 00    	je     12a88 <loc_get_namespaces+0x218>
   128ae:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   128b5:	e8 26 4b 00 00       	call   173e0 <fibril_mutex_unlock>
   128ba:	8b 15 a0 06 03 00    	mov    0x306a0,%edx
   128c0:	85 d2                	test   %edx,%edx
   128c2:	0f 84 d8 01 00 00    	je     12aa0 <loc_get_namespaces+0x230>
   128c8:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   128cf:	e8 0c 4b 00 00       	call   173e0 <fibril_mutex_unlock>
   128d4:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   128db:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   128e1:	e8 da 49 00 00       	call   172c0 <fibril_mutex_lock>
   128e6:	a1 9c 06 03 00       	mov    0x3069c,%eax
   128eb:	85 c0                	test   %eax,%eax
   128ed:	0f 84 fd 01 00 00    	je     12af0 <loc_get_namespaces+0x280>
   128f3:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   128fa:	e8 e1 4a 00 00       	call   173e0 <fibril_mutex_unlock>
   128ff:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12904:	89 04 24             	mov    %eax,(%esp)
   12907:	e8 04 0d 01 00       	call   23610 <async_exchange_begin>
   1290c:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   12913:	00 
   12914:	89 c6                	mov    %eax,%esi
   12916:	8d 45 c0             	lea    -0x40(%ebp),%eax
   12919:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   12920:	00 
   12921:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   12928:	00 
   12929:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   12930:	00 
   12931:	89 44 24 18          	mov    %eax,0x18(%esp)
   12935:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1293c:	00 
   1293d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   12944:	00 
   12945:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1294c:	00 
   1294d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   12954:	00 
   12955:	c7 44 24 04 10 04 00 	movl   $0x410,0x4(%esp)
   1295c:	00 
   1295d:	89 34 24             	mov    %esi,(%esp)
   12960:	e8 5b fc 00 00       	call   225c0 <async_req_fast>
   12965:	85 c0                	test   %eax,%eax
   12967:	0f 85 03 01 00 00    	jne    12a70 <loc_get_namespaces+0x200>
   1296d:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   12970:	89 34 24             	mov    %esi,(%esp)
   12973:	e8 08 10 01 00       	call   23980 <async_exchange_end>
   12978:	85 db                	test   %ebx,%ebx
   1297a:	0f 84 f8 00 00 00    	je     12a78 <loc_get_namespaces+0x208>
   12980:	c7 44 24 04 04 01 00 	movl   $0x104,0x4(%esp)
   12987:	00 
   12988:	89 1c 24             	mov    %ebx,(%esp)
   1298b:	e8 e0 d6 00 00       	call   20070 <calloc>
   12990:	89 c7                	mov    %eax,%edi
   12992:	85 c0                	test   %eax,%eax
   12994:	0f 84 de 00 00 00    	je     12a78 <loc_get_namespaces+0x208>
   1299a:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   129a1:	e8 1a 49 00 00       	call   172c0 <fibril_mutex_lock>
   129a6:	a1 9c 06 03 00       	mov    0x3069c,%eax
   129ab:	85 c0                	test   %eax,%eax
   129ad:	0f 84 5d 01 00 00    	je     12b10 <loc_get_namespaces+0x2a0>
   129b3:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   129ba:	e8 21 4a 00 00       	call   173e0 <fibril_mutex_unlock>
   129bf:	a1 9c 06 03 00       	mov    0x3069c,%eax
   129c4:	85 c0                	test   %eax,%eax
   129c6:	0f 84 72 01 00 00    	je     12b3e <loc_get_namespaces+0x2ce>
   129cc:	89 04 24             	mov    %eax,(%esp)
   129cf:	e8 3c 0c 01 00       	call   23610 <async_exchange_begin>
   129d4:	89 c6                	mov    %eax,%esi
   129d6:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   129d9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   129e0:	00 
   129e1:	89 44 24 18          	mov    %eax,0x18(%esp)
   129e5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   129ec:	00 
   129ed:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   129f4:	00 
   129f5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   129fc:	00 
   129fd:	c7 44 24 04 13 04 00 	movl   $0x413,0x4(%esp)
   12a04:	00 
   12a05:	89 34 24             	mov    %esi,(%esp)
   12a08:	e8 a3 f5 00 00       	call   21fb0 <async_send_fast>
   12a0d:	89 7c 24 04          	mov    %edi,0x4(%esp)
   12a11:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   12a14:	89 d8                	mov    %ebx,%eax
   12a16:	c1 e0 08             	shl    $0x8,%eax
   12a19:	89 34 24             	mov    %esi,(%esp)
   12a1c:	8d 04 98             	lea    (%eax,%ebx,4),%eax
   12a1f:	89 44 24 08          	mov    %eax,0x8(%esp)
   12a23:	e8 b8 15 01 00       	call   23fe0 <async_data_read_start>
   12a28:	89 34 24             	mov    %esi,(%esp)
   12a2b:	89 45 b0             	mov    %eax,-0x50(%ebp)
   12a2e:	e8 4d 0f 01 00       	call   23980 <async_exchange_end>
   12a33:	8b 45 b0             	mov    -0x50(%ebp),%eax
   12a36:	83 f8 f0             	cmp    $0xfffffff0,%eax
   12a39:	0f 84 c4 00 00 00    	je     12b03 <loc_get_namespaces+0x293>
   12a3f:	85 c0                	test   %eax,%eax
   12a41:	0f 85 89 00 00 00    	jne    12ad0 <loc_get_namespaces+0x260>
   12a47:	8d 45 c0             	lea    -0x40(%ebp),%eax
   12a4a:	89 44 24 04          	mov    %eax,0x4(%esp)
   12a4e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   12a51:	89 04 24             	mov    %eax,(%esp)
   12a54:	e8 27 f7 00 00       	call   22180 <async_wait_for>
   12a59:	8b 45 c0             	mov    -0x40(%ebp),%eax
   12a5c:	85 c0                	test   %eax,%eax
   12a5e:	75 18                	jne    12a78 <loc_get_namespaces+0x208>
   12a60:	8b 45 08             	mov    0x8(%ebp),%eax
   12a63:	89 38                	mov    %edi,(%eax)
   12a65:	83 c4 7c             	add    $0x7c,%esp
   12a68:	89 d8                	mov    %ebx,%eax
   12a6a:	5b                   	pop    %ebx
   12a6b:	5e                   	pop    %esi
   12a6c:	5f                   	pop    %edi
   12a6d:	5d                   	pop    %ebp
   12a6e:	c3                   	ret    
   12a6f:	90                   	nop
   12a70:	89 34 24             	mov    %esi,(%esp)
   12a73:	e8 08 0f 01 00       	call   23980 <async_exchange_end>
   12a78:	83 c4 7c             	add    $0x7c,%esp
   12a7b:	31 db                	xor    %ebx,%ebx
   12a7d:	89 d8                	mov    %ebx,%eax
   12a7f:	5b                   	pop    %ebx
   12a80:	5e                   	pop    %esi
   12a81:	5f                   	pop    %edi
   12a82:	5d                   	pop    %ebp
   12a83:	c3                   	ret    
   12a84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12a88:	85 db                	test   %ebx,%ebx
   12a8a:	0f 84 1e fe ff ff    	je     128ae <loc_get_namespaces+0x3e>
   12a90:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   12a96:	e9 13 fe ff ff       	jmp    128ae <loc_get_namespaces+0x3e>
   12a9b:	90                   	nop
   12a9c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12aa0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   12aa7:	00 
   12aa8:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   12aaf:	00 
   12ab0:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   12ab7:	20 
   12ab8:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   12abf:	e8 9c de 00 00       	call   20960 <service_connect_blocking>
   12ac4:	a3 a0 06 03 00       	mov    %eax,0x306a0
   12ac9:	e9 bc fd ff ff       	jmp    1288a <loc_get_namespaces+0x1a>
   12ace:	66 90                	xchg   %ax,%ax
   12ad0:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   12ad3:	31 db                	xor    %ebx,%ebx
   12ad5:	89 04 24             	mov    %eax,(%esp)
   12ad8:	e8 f3 f8 00 00       	call   223d0 <async_forget>
   12add:	89 3c 24             	mov    %edi,(%esp)
   12ae0:	e8 fb d6 00 00       	call   201e0 <free>
   12ae5:	83 c4 7c             	add    $0x7c,%esp
   12ae8:	89 d8                	mov    %ebx,%eax
   12aea:	5b                   	pop    %ebx
   12aeb:	5e                   	pop    %esi
   12aec:	5f                   	pop    %edi
   12aed:	5d                   	pop    %ebp
   12aee:	c3                   	ret    
   12aef:	90                   	nop
   12af0:	85 db                	test   %ebx,%ebx
   12af2:	0f 84 fb fd ff ff    	je     128f3 <loc_get_namespaces+0x83>
   12af8:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   12afe:	e9 f0 fd ff ff       	jmp    128f3 <loc_get_namespaces+0x83>
   12b03:	89 3c 24             	mov    %edi,(%esp)
   12b06:	e8 d5 d6 00 00       	call   201e0 <free>
   12b0b:	e9 69 fd ff ff       	jmp    12879 <loc_get_namespaces+0x9>
   12b10:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   12b17:	00 
   12b18:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   12b1f:	00 
   12b20:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   12b27:	20 
   12b28:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   12b2f:	e8 ac dd 00 00       	call   208e0 <service_connect>
   12b34:	a3 9c 06 03 00       	mov    %eax,0x3069c
   12b39:	e9 75 fe ff ff       	jmp    129b3 <loc_get_namespaces+0x143>
   12b3e:	31 f6                	xor    %esi,%esi
   12b40:	e9 91 fe ff ff       	jmp    129d6 <loc_get_namespaces+0x166>
   12b45:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12b49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00012b50 <loc_get_services>:
   12b50:	55                   	push   %ebp
   12b51:	89 e5                	mov    %esp,%ebp
   12b53:	57                   	push   %edi
   12b54:	56                   	push   %esi
   12b55:	53                   	push   %ebx
   12b56:	83 ec 7c             	sub    $0x7c,%esp
   12b59:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   12b60:	e8 5b 47 00 00       	call   172c0 <fibril_mutex_lock>
   12b65:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12b6a:	85 c0                	test   %eax,%eax
   12b6c:	75 38                	jne    12ba6 <loc_get_services+0x56>
   12b6e:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12b75:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   12b7b:	e8 40 47 00 00       	call   172c0 <fibril_mutex_lock>
   12b80:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12b85:	85 c0                	test   %eax,%eax
   12b87:	0f 84 db 01 00 00    	je     12d68 <loc_get_services+0x218>
   12b8d:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12b94:	e8 47 48 00 00       	call   173e0 <fibril_mutex_unlock>
   12b99:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12b9e:	85 c0                	test   %eax,%eax
   12ba0:	0f 84 da 01 00 00    	je     12d80 <loc_get_services+0x230>
   12ba6:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   12bad:	e8 2e 48 00 00       	call   173e0 <fibril_mutex_unlock>
   12bb2:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12bb9:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   12bbf:	e8 fc 46 00 00       	call   172c0 <fibril_mutex_lock>
   12bc4:	a1 9c 06 03 00       	mov    0x3069c,%eax
   12bc9:	85 c0                	test   %eax,%eax
   12bcb:	0f 84 ff 01 00 00    	je     12dd0 <loc_get_services+0x280>
   12bd1:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12bd8:	e8 03 48 00 00       	call   173e0 <fibril_mutex_unlock>
   12bdd:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12be2:	89 04 24             	mov    %eax,(%esp)
   12be5:	e8 26 0a 01 00       	call   23610 <async_exchange_begin>
   12bea:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   12bf1:	00 
   12bf2:	89 c6                	mov    %eax,%esi
   12bf4:	8d 45 c0             	lea    -0x40(%ebp),%eax
   12bf7:	89 44 24 18          	mov    %eax,0x18(%esp)
   12bfb:	8b 45 08             	mov    0x8(%ebp),%eax
   12bfe:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   12c05:	00 
   12c06:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   12c0d:	00 
   12c0e:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   12c15:	00 
   12c16:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   12c1d:	00 
   12c1e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   12c25:	00 
   12c26:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   12c2d:	00 
   12c2e:	89 44 24 08          	mov    %eax,0x8(%esp)
   12c32:	c7 44 24 04 11 04 00 	movl   $0x411,0x4(%esp)
   12c39:	00 
   12c3a:	89 34 24             	mov    %esi,(%esp)
   12c3d:	e8 7e f9 00 00       	call   225c0 <async_req_fast>
   12c42:	85 c0                	test   %eax,%eax
   12c44:	0f 85 06 01 00 00    	jne    12d50 <loc_get_services+0x200>
   12c4a:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   12c4d:	89 34 24             	mov    %esi,(%esp)
   12c50:	e8 2b 0d 01 00       	call   23980 <async_exchange_end>
   12c55:	85 db                	test   %ebx,%ebx
   12c57:	0f 84 fb 00 00 00    	je     12d58 <loc_get_services+0x208>
   12c5d:	c7 44 24 04 04 01 00 	movl   $0x104,0x4(%esp)
   12c64:	00 
   12c65:	89 1c 24             	mov    %ebx,(%esp)
   12c68:	e8 03 d4 00 00       	call   20070 <calloc>
   12c6d:	89 c7                	mov    %eax,%edi
   12c6f:	85 c0                	test   %eax,%eax
   12c71:	0f 84 e1 00 00 00    	je     12d58 <loc_get_services+0x208>
   12c77:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12c7e:	e8 3d 46 00 00       	call   172c0 <fibril_mutex_lock>
   12c83:	a1 9c 06 03 00       	mov    0x3069c,%eax
   12c88:	85 c0                	test   %eax,%eax
   12c8a:	0f 84 60 01 00 00    	je     12df0 <loc_get_services+0x2a0>
   12c90:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12c97:	e8 44 47 00 00       	call   173e0 <fibril_mutex_unlock>
   12c9c:	a1 9c 06 03 00       	mov    0x3069c,%eax
   12ca1:	85 c0                	test   %eax,%eax
   12ca3:	0f 84 75 01 00 00    	je     12e1e <loc_get_services+0x2ce>
   12ca9:	89 04 24             	mov    %eax,(%esp)
   12cac:	e8 5f 09 01 00       	call   23610 <async_exchange_begin>
   12cb1:	89 c6                	mov    %eax,%esi
   12cb3:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   12cb6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   12cbd:	00 
   12cbe:	89 44 24 18          	mov    %eax,0x18(%esp)
   12cc2:	8b 45 08             	mov    0x8(%ebp),%eax
   12cc5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   12ccc:	00 
   12ccd:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   12cd4:	00 
   12cd5:	89 44 24 08          	mov    %eax,0x8(%esp)
   12cd9:	c7 44 24 04 14 04 00 	movl   $0x414,0x4(%esp)
   12ce0:	00 
   12ce1:	89 34 24             	mov    %esi,(%esp)
   12ce4:	e8 c7 f2 00 00       	call   21fb0 <async_send_fast>
   12ce9:	89 7c 24 04          	mov    %edi,0x4(%esp)
   12ced:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   12cf0:	89 d8                	mov    %ebx,%eax
   12cf2:	c1 e0 08             	shl    $0x8,%eax
   12cf5:	89 34 24             	mov    %esi,(%esp)
   12cf8:	8d 04 98             	lea    (%eax,%ebx,4),%eax
   12cfb:	89 44 24 08          	mov    %eax,0x8(%esp)
   12cff:	e8 dc 12 01 00       	call   23fe0 <async_data_read_start>
   12d04:	89 34 24             	mov    %esi,(%esp)
   12d07:	89 45 b0             	mov    %eax,-0x50(%ebp)
   12d0a:	e8 71 0c 01 00       	call   23980 <async_exchange_end>
   12d0f:	8b 45 b0             	mov    -0x50(%ebp),%eax
   12d12:	83 f8 f0             	cmp    $0xfffffff0,%eax
   12d15:	0f 84 c8 00 00 00    	je     12de3 <loc_get_services+0x293>
   12d1b:	85 c0                	test   %eax,%eax
   12d1d:	0f 85 8d 00 00 00    	jne    12db0 <loc_get_services+0x260>
   12d23:	8d 45 c0             	lea    -0x40(%ebp),%eax
   12d26:	89 44 24 04          	mov    %eax,0x4(%esp)
   12d2a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   12d2d:	89 04 24             	mov    %eax,(%esp)
   12d30:	e8 4b f4 00 00       	call   22180 <async_wait_for>
   12d35:	8b 75 c0             	mov    -0x40(%ebp),%esi
   12d38:	85 f6                	test   %esi,%esi
   12d3a:	75 1c                	jne    12d58 <loc_get_services+0x208>
   12d3c:	8b 45 0c             	mov    0xc(%ebp),%eax
   12d3f:	89 38                	mov    %edi,(%eax)
   12d41:	83 c4 7c             	add    $0x7c,%esp
   12d44:	89 d8                	mov    %ebx,%eax
   12d46:	5b                   	pop    %ebx
   12d47:	5e                   	pop    %esi
   12d48:	5f                   	pop    %edi
   12d49:	5d                   	pop    %ebp
   12d4a:	c3                   	ret    
   12d4b:	90                   	nop
   12d4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12d50:	89 34 24             	mov    %esi,(%esp)
   12d53:	e8 28 0c 01 00       	call   23980 <async_exchange_end>
   12d58:	83 c4 7c             	add    $0x7c,%esp
   12d5b:	31 db                	xor    %ebx,%ebx
   12d5d:	89 d8                	mov    %ebx,%eax
   12d5f:	5b                   	pop    %ebx
   12d60:	5e                   	pop    %esi
   12d61:	5f                   	pop    %edi
   12d62:	5d                   	pop    %ebp
   12d63:	c3                   	ret    
   12d64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12d68:	85 db                	test   %ebx,%ebx
   12d6a:	0f 84 1d fe ff ff    	je     12b8d <loc_get_services+0x3d>
   12d70:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   12d76:	e9 12 fe ff ff       	jmp    12b8d <loc_get_services+0x3d>
   12d7b:	90                   	nop
   12d7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12d80:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   12d87:	00 
   12d88:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   12d8f:	00 
   12d90:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   12d97:	20 
   12d98:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   12d9f:	e8 bc db 00 00       	call   20960 <service_connect_blocking>
   12da4:	a3 a0 06 03 00       	mov    %eax,0x306a0
   12da9:	e9 bc fd ff ff       	jmp    12b6a <loc_get_services+0x1a>
   12dae:	66 90                	xchg   %ax,%ax
   12db0:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   12db3:	31 db                	xor    %ebx,%ebx
   12db5:	89 04 24             	mov    %eax,(%esp)
   12db8:	e8 13 f6 00 00       	call   223d0 <async_forget>
   12dbd:	89 3c 24             	mov    %edi,(%esp)
   12dc0:	e8 1b d4 00 00       	call   201e0 <free>
   12dc5:	83 c4 7c             	add    $0x7c,%esp
   12dc8:	89 d8                	mov    %ebx,%eax
   12dca:	5b                   	pop    %ebx
   12dcb:	5e                   	pop    %esi
   12dcc:	5f                   	pop    %edi
   12dcd:	5d                   	pop    %ebp
   12dce:	c3                   	ret    
   12dcf:	90                   	nop
   12dd0:	85 db                	test   %ebx,%ebx
   12dd2:	0f 84 f9 fd ff ff    	je     12bd1 <loc_get_services+0x81>
   12dd8:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   12dde:	e9 ee fd ff ff       	jmp    12bd1 <loc_get_services+0x81>
   12de3:	89 3c 24             	mov    %edi,(%esp)
   12de6:	e8 f5 d3 00 00       	call   201e0 <free>
   12deb:	e9 69 fd ff ff       	jmp    12b59 <loc_get_services+0x9>
   12df0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   12df7:	00 
   12df8:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   12dff:	00 
   12e00:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   12e07:	20 
   12e08:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   12e0f:	e8 cc da 00 00       	call   208e0 <service_connect>
   12e14:	a3 9c 06 03 00       	mov    %eax,0x3069c
   12e19:	e9 72 fe ff ff       	jmp    12c90 <loc_get_services+0x140>
   12e1e:	31 f6                	xor    %esi,%esi
   12e20:	e9 8e fe ff ff       	jmp    12cb3 <loc_get_services+0x163>
   12e25:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12e29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00012e30 <loc_category_get_svcs>:
   12e30:	55                   	push   %ebp
   12e31:	89 e5                	mov    %esp,%ebp
   12e33:	8b 45 10             	mov    0x10(%ebp),%eax
   12e36:	8b 55 08             	mov    0x8(%ebp),%edx
   12e39:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   12e3c:	89 45 08             	mov    %eax,0x8(%ebp)
   12e3f:	b8 0c 04 00 00       	mov    $0x40c,%eax
   12e44:	5d                   	pop    %ebp
   12e45:	e9 e6 db ff ff       	jmp    10a30 <loc_get_ids_internal>
   12e4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00012e50 <loc_get_categories>:
   12e50:	55                   	push   %ebp
   12e51:	31 d2                	xor    %edx,%edx
   12e53:	89 e5                	mov    %esp,%ebp
   12e55:	8b 45 0c             	mov    0xc(%ebp),%eax
   12e58:	8b 4d 08             	mov    0x8(%ebp),%ecx
   12e5b:	89 45 08             	mov    %eax,0x8(%ebp)
   12e5e:	b8 12 04 00 00       	mov    $0x412,%eax
   12e63:	5d                   	pop    %ebp
   12e64:	e9 c7 db ff ff       	jmp    10a30 <loc_get_ids_internal>
   12e69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00012e70 <loc_register_cat_change_cb>:
   12e70:	55                   	push   %ebp
   12e71:	89 e5                	mov    %esp,%ebp
   12e73:	57                   	push   %edi
   12e74:	56                   	push   %esi
   12e75:	53                   	push   %ebx
   12e76:	83 ec 5c             	sub    $0x5c,%esp
   12e79:	c7 04 24 c0 04 03 00 	movl   $0x304c0,(%esp)
   12e80:	e8 3b 44 00 00       	call   172c0 <fibril_mutex_lock>
   12e85:	80 3d a8 06 03 00 00 	cmpb   $0x0,0x306a8
   12e8c:	74 22                	je     12eb0 <loc_register_cat_change_cb+0x40>
   12e8e:	8b 45 08             	mov    0x8(%ebp),%eax
   12e91:	c7 04 24 c0 04 03 00 	movl   $0x304c0,(%esp)
   12e98:	a3 a4 06 03 00       	mov    %eax,0x306a4
   12e9d:	e8 3e 45 00 00       	call   173e0 <fibril_mutex_unlock>
   12ea2:	83 c4 5c             	add    $0x5c,%esp
   12ea5:	31 c0                	xor    %eax,%eax
   12ea7:	5b                   	pop    %ebx
   12ea8:	5e                   	pop    %esi
   12ea9:	5f                   	pop    %edi
   12eaa:	5d                   	pop    %ebp
   12eab:	c3                   	ret    
   12eac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12eb0:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   12eb7:	e8 04 44 00 00       	call   172c0 <fibril_mutex_lock>
   12ebc:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12ec1:	85 c0                	test   %eax,%eax
   12ec3:	75 3a                	jne    12eff <loc_register_cat_change_cb+0x8f>
   12ec5:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12ecc:	8b 1d 9c 06 03 00    	mov    0x3069c,%ebx
   12ed2:	e8 e9 43 00 00       	call   172c0 <fibril_mutex_lock>
   12ed7:	8b 0d a0 06 03 00    	mov    0x306a0,%ecx
   12edd:	85 c9                	test   %ecx,%ecx
   12edf:	0f 84 f3 00 00 00    	je     12fd8 <loc_register_cat_change_cb+0x168>
   12ee5:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12eec:	e8 ef 44 00 00       	call   173e0 <fibril_mutex_unlock>
   12ef1:	8b 15 a0 06 03 00    	mov    0x306a0,%edx
   12ef7:	85 d2                	test   %edx,%edx
   12ef9:	0f 84 f1 00 00 00    	je     12ff0 <loc_register_cat_change_cb+0x180>
   12eff:	c7 04 24 a0 04 03 00 	movl   $0x304a0,(%esp)
   12f06:	e8 d5 44 00 00       	call   173e0 <fibril_mutex_unlock>
   12f0b:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12f12:	8b 1d a0 06 03 00    	mov    0x306a0,%ebx
   12f18:	e8 a3 43 00 00       	call   172c0 <fibril_mutex_lock>
   12f1d:	a1 9c 06 03 00       	mov    0x3069c,%eax
   12f22:	85 c0                	test   %eax,%eax
   12f24:	0f 84 1e 01 00 00    	je     13048 <loc_register_cat_change_cb+0x1d8>
   12f2a:	c7 04 24 b0 04 03 00 	movl   $0x304b0,(%esp)
   12f31:	e8 aa 44 00 00       	call   173e0 <fibril_mutex_unlock>
   12f36:	a1 a0 06 03 00       	mov    0x306a0,%eax
   12f3b:	89 04 24             	mov    %eax,(%esp)
   12f3e:	e8 cd 06 01 00       	call   23610 <async_exchange_begin>
   12f43:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   12f4a:	00 
   12f4b:	89 c3                	mov    %eax,%ebx
   12f4d:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   12f50:	89 44 24 18          	mov    %eax,0x18(%esp)
   12f54:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   12f5b:	00 
   12f5c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   12f63:	00 
   12f64:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   12f6b:	00 
   12f6c:	c7 44 24 04 09 04 00 	movl   $0x409,0x4(%esp)
   12f73:	00 
   12f74:	89 1c 24             	mov    %ebx,(%esp)
   12f77:	e8 34 f0 00 00       	call   21fb0 <async_send_fast>
   12f7c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   12f83:	00 
   12f84:	c7 44 24 10 f0 06 01 	movl   $0x106f0,0x10(%esp)
   12f8b:	00 
   12f8c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   12f93:	00 
   12f94:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   12f9b:	00 
   12f9c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   12fa3:	00 
   12fa4:	89 1c 24             	mov    %ebx,(%esp)
   12fa7:	89 c7                	mov    %eax,%edi
   12fa9:	e8 02 fe 00 00       	call   22db0 <async_connect_to_me>
   12fae:	89 1c 24             	mov    %ebx,(%esp)
   12fb1:	89 c6                	mov    %eax,%esi
   12fb3:	e8 c8 09 01 00       	call   23980 <async_exchange_end>
   12fb8:	85 f6                	test   %esi,%esi
   12fba:	74 64                	je     13020 <loc_register_cat_change_cb+0x1b0>
   12fbc:	c7 04 24 c0 04 03 00 	movl   $0x304c0,(%esp)
   12fc3:	e8 18 44 00 00       	call   173e0 <fibril_mutex_unlock>
   12fc8:	83 c4 5c             	add    $0x5c,%esp
   12fcb:	b8 f7 fe ff ff       	mov    $0xfffffef7,%eax
   12fd0:	5b                   	pop    %ebx
   12fd1:	5e                   	pop    %esi
   12fd2:	5f                   	pop    %edi
   12fd3:	5d                   	pop    %ebp
   12fd4:	c3                   	ret    
   12fd5:	8d 76 00             	lea    0x0(%esi),%esi
   12fd8:	85 db                	test   %ebx,%ebx
   12fda:	0f 84 05 ff ff ff    	je     12ee5 <loc_register_cat_change_cb+0x75>
   12fe0:	89 1d a0 06 03 00    	mov    %ebx,0x306a0
   12fe6:	e9 fa fe ff ff       	jmp    12ee5 <loc_register_cat_change_cb+0x75>
   12feb:	90                   	nop
   12fec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   12ff0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   12ff7:	00 
   12ff8:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   12fff:	00 
   13000:	c7 44 24 04 6c 6f 63 	movl   $0x20636f6c,0x4(%esp)
   13007:	20 
   13008:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   1300f:	e8 4c d9 00 00       	call   20960 <service_connect_blocking>
   13014:	a3 a0 06 03 00       	mov    %eax,0x306a0
   13019:	e9 a3 fe ff ff       	jmp    12ec1 <loc_register_cat_change_cb+0x51>
   1301e:	66 90                	xchg   %ax,%ax
   13020:	8d 45 c0             	lea    -0x40(%ebp),%eax
   13023:	89 3c 24             	mov    %edi,(%esp)
   13026:	89 44 24 04          	mov    %eax,0x4(%esp)
   1302a:	e8 51 f1 00 00       	call   22180 <async_wait_for>
   1302f:	8b 45 c0             	mov    -0x40(%ebp),%eax
   13032:	85 c0                	test   %eax,%eax
   13034:	75 86                	jne    12fbc <loc_register_cat_change_cb+0x14c>
   13036:	c6 05 a8 06 03 00 01 	movb   $0x1,0x306a8
   1303d:	e9 4c fe ff ff       	jmp    12e8e <loc_register_cat_change_cb+0x1e>
   13042:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   13048:	85 db                	test   %ebx,%ebx
   1304a:	0f 84 da fe ff ff    	je     12f2a <loc_register_cat_change_cb+0xba>
   13050:	89 1d 9c 06 03 00    	mov    %ebx,0x3069c
   13056:	e9 cf fe ff ff       	jmp    12f2a <loc_register_cat_change_cb+0xba>
   1305b:	66 90                	xchg   %ax,%ax
   1305d:	66 90                	xchg   %ax,%ax
   1305f:	90                   	nop

00013060 <memset>:
   13060:	55                   	push   %ebp
   13061:	89 e5                	mov    %esp,%ebp
   13063:	57                   	push   %edi
   13064:	56                   	push   %esi
   13065:	53                   	push   %ebx
   13066:	83 ec 20             	sub    $0x20,%esp
   13069:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)
   13070:	8b 45 08             	mov    0x8(%ebp),%eax
   13073:	8b 75 f0             	mov    -0x10(%ebp),%esi
   13076:	89 c2                	mov    %eax,%edx
   13078:	83 e2 03             	and    $0x3,%edx
   1307b:	29 d6                	sub    %edx,%esi
   1307d:	8b 55 10             	mov    0x10(%ebp),%edx
   13080:	89 75 f0             	mov    %esi,-0x10(%ebp)
   13083:	39 55 f0             	cmp    %edx,-0x10(%ebp)
   13086:	76 03                	jbe    1308b <memset+0x2b>
   13088:	89 55 f0             	mov    %edx,-0x10(%ebp)
   1308b:	8b 7d f0             	mov    -0x10(%ebp),%edi
   1308e:	8b 5d f0             	mov    -0x10(%ebp),%ebx
   13091:	4f                   	dec    %edi
   13092:	85 db                	test   %ebx,%ebx
   13094:	0f 84 2e 01 00 00    	je     131c8 <memset+0x168>
   1309a:	89 c1                	mov    %eax,%ecx
   1309c:	8b 55 f0             	mov    -0x10(%ebp),%edx
   1309f:	f7 d9                	neg    %ecx
   130a1:	83 e1 03             	and    $0x3,%ecx
   130a4:	8a 5d 0c             	mov    0xc(%ebp),%bl
   130a7:	89 4d ec             	mov    %ecx,-0x14(%ebp)
   130aa:	39 d1                	cmp    %edx,%ecx
   130ac:	0f 87 0e 01 00 00    	ja     131c0 <memset+0x160>
   130b2:	83 7d f0 06          	cmpl   $0x6,-0x10(%ebp)
   130b6:	0f 87 10 01 00 00    	ja     131cc <memset+0x16c>
   130bc:	8b 4d f0             	mov    -0x10(%ebp),%ecx
   130bf:	89 4d ec             	mov    %ecx,-0x14(%ebp)
   130c2:	8b 75 ec             	mov    -0x14(%ebp),%esi
   130c5:	89 c2                	mov    %eax,%edx
   130c7:	90                   	nop
   130c8:	88 1a                	mov    %bl,(%edx)
   130ca:	42                   	inc    %edx
   130cb:	89 d1                	mov    %edx,%ecx
   130cd:	4f                   	dec    %edi
   130ce:	29 c1                	sub    %eax,%ecx
   130d0:	39 f1                	cmp    %esi,%ecx
   130d2:	72 f4                	jb     130c8 <memset+0x68>
   130d4:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   130d7:	8b 55 ec             	mov    -0x14(%ebp),%edx
   130da:	39 55 f0             	cmp    %edx,-0x10(%ebp)
   130dd:	0f 84 84 00 00 00    	je     13167 <memset+0x107>
   130e3:	8b 4d f0             	mov    -0x10(%ebp),%ecx
   130e6:	8b 55 ec             	mov    -0x14(%ebp),%edx
   130e9:	29 d1                	sub    %edx,%ecx
   130eb:	89 4d dc             	mov    %ecx,-0x24(%ebp)
   130ee:	c1 e9 02             	shr    $0x2,%ecx
   130f1:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
   130f4:	c1 e1 02             	shl    $0x2,%ecx
   130f7:	89 4d e0             	mov    %ecx,-0x20(%ebp)
   130fa:	74 59                	je     13155 <memset+0xf5>
   130fc:	31 c9                	xor    %ecx,%ecx
   130fe:	31 d2                	xor    %edx,%edx
   13100:	88 d9                	mov    %bl,%cl
   13102:	88 da                	mov    %bl,%dl
   13104:	8a 6d 0c             	mov    0xc(%ebp),%ch
   13107:	89 55 e8             	mov    %edx,-0x18(%ebp)
   1310a:	c1 e2 10             	shl    $0x10,%edx
   1310d:	89 ce                	mov    %ecx,%esi
   1310f:	81 e6 ff ff 00 00    	and    $0xffff,%esi
   13115:	8b 4d e8             	mov    -0x18(%ebp),%ecx
   13118:	c1 e1 18             	shl    $0x18,%ecx
   1311b:	09 d6                	or     %edx,%esi
   1311d:	09 ce                	or     %ecx,%esi
   1311f:	8b 4d ec             	mov    -0x14(%ebp),%ecx
   13122:	01 c1                	add    %eax,%ecx
   13124:	89 7d e8             	mov    %edi,-0x18(%ebp)
   13127:	89 4d ec             	mov    %ecx,-0x14(%ebp)
   1312a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1312d:	8b 7d ec             	mov    -0x14(%ebp),%edi
   13130:	31 c9                	xor    %ecx,%ecx
   13132:	89 45 ec             	mov    %eax,-0x14(%ebp)
   13135:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   13138:	89 34 8f             	mov    %esi,(%edi,%ecx,4)
   1313b:	41                   	inc    %ecx
   1313c:	39 c8                	cmp    %ecx,%eax
   1313e:	77 f8                	ja     13138 <memset+0xd8>
   13140:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   13143:	8b 7d e8             	mov    -0x18(%ebp),%edi
   13146:	01 ca                	add    %ecx,%edx
   13148:	29 cf                	sub    %ecx,%edi
   1314a:	8b 45 ec             	mov    -0x14(%ebp),%eax
   1314d:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   13150:	39 4d dc             	cmp    %ecx,-0x24(%ebp)
   13153:	74 12                	je     13167 <memset+0x107>
   13155:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   13158:	8d 4c 3a 01          	lea    0x1(%edx,%edi,1),%ecx
   1315c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13160:	88 1a                	mov    %bl,(%edx)
   13162:	42                   	inc    %edx
   13163:	39 ca                	cmp    %ecx,%edx
   13165:	75 f9                	jne    13160 <memset+0x100>
   13167:	8b 5d f0             	mov    -0x10(%ebp),%ebx
   1316a:	01 c3                	add    %eax,%ebx
   1316c:	8b 75 10             	mov    0x10(%ebp),%esi
   1316f:	2b 75 f0             	sub    -0x10(%ebp),%esi
   13172:	74 43                	je     131b7 <memset+0x157>
   13174:	0f b6 55 0c          	movzbl 0xc(%ebp),%edx
   13178:	89 d1                	mov    %edx,%ecx
   1317a:	89 f7                	mov    %esi,%edi
   1317c:	c1 e1 08             	shl    $0x8,%ecx
   1317f:	83 e7 03             	and    $0x3,%edi
   13182:	09 d1                	or     %edx,%ecx
   13184:	c1 e1 08             	shl    $0x8,%ecx
   13187:	09 d1                	or     %edx,%ecx
   13189:	c1 e1 08             	shl    $0x8,%ecx
   1318c:	09 d1                	or     %edx,%ecx
   1318e:	c1 ee 02             	shr    $0x2,%esi
   13191:	74 10                	je     131a3 <memset+0x143>
   13193:	31 d2                	xor    %edx,%edx
   13195:	8d 76 00             	lea    0x0(%esi),%esi
   13198:	89 0c 93             	mov    %ecx,(%ebx,%edx,4)
   1319b:	42                   	inc    %edx
   1319c:	39 f2                	cmp    %esi,%edx
   1319e:	75 f8                	jne    13198 <memset+0x138>
   131a0:	8d 1c 93             	lea    (%ebx,%edx,4),%ebx
   131a3:	85 ff                	test   %edi,%edi
   131a5:	74 10                	je     131b7 <memset+0x157>
   131a7:	8a 55 0c             	mov    0xc(%ebp),%dl
   131aa:	01 df                	add    %ebx,%edi
   131ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   131b0:	88 13                	mov    %dl,(%ebx)
   131b2:	43                   	inc    %ebx
   131b3:	39 fb                	cmp    %edi,%ebx
   131b5:	75 f9                	jne    131b0 <memset+0x150>
   131b7:	83 c4 20             	add    $0x20,%esp
   131ba:	5b                   	pop    %ebx
   131bb:	5e                   	pop    %esi
   131bc:	5f                   	pop    %edi
   131bd:	5d                   	pop    %ebp
   131be:	c3                   	ret    
   131bf:	90                   	nop
   131c0:	89 55 ec             	mov    %edx,-0x14(%ebp)
   131c3:	e9 ea fe ff ff       	jmp    130b2 <memset+0x52>
   131c8:	89 c3                	mov    %eax,%ebx
   131ca:	eb a0                	jmp    1316c <memset+0x10c>
   131cc:	8b 4d ec             	mov    -0x14(%ebp),%ecx
   131cf:	85 c9                	test   %ecx,%ecx
   131d1:	0f 85 eb fe ff ff    	jne    130c2 <memset+0x62>
   131d7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
   131da:	e9 04 ff ff ff       	jmp    130e3 <memset+0x83>
   131df:	90                   	nop

000131e0 <memcpy>:
   131e0:	55                   	push   %ebp
   131e1:	89 e5                	mov    %esp,%ebp
   131e3:	57                   	push   %edi
   131e4:	56                   	push   %esi
   131e5:	53                   	push   %ebx
   131e6:	83 ec 0c             	sub    $0xc,%esp
   131e9:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   131ec:	8b 45 08             	mov    0x8(%ebp),%eax
   131ef:	89 ca                	mov    %ecx,%edx
   131f1:	31 c2                	xor    %eax,%edx
   131f3:	83 e2 03             	and    $0x3,%edx
   131f6:	0f 85 84 01 00 00    	jne    13380 <memcpy+0x1a0>
   131fc:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)
   13203:	89 c2                	mov    %eax,%edx
   13205:	83 e2 03             	and    $0x3,%edx
   13208:	8b 75 ec             	mov    -0x14(%ebp),%esi
   1320b:	29 d6                	sub    %edx,%esi
   1320d:	8b 55 10             	mov    0x10(%ebp),%edx
   13210:	89 75 ec             	mov    %esi,-0x14(%ebp)
   13213:	39 55 ec             	cmp    %edx,-0x14(%ebp)
   13216:	0f 87 5c 01 00 00    	ja     13378 <memcpy+0x198>
   1321c:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   1321f:	4b                   	dec    %ebx
   13220:	89 5d f0             	mov    %ebx,-0x10(%ebp)
   13223:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   13226:	85 db                	test   %ebx,%ebx
   13228:	0f 84 91 01 00 00    	je     133bf <memcpy+0x1df>
   1322e:	8d 51 04             	lea    0x4(%ecx),%edx
   13231:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   13234:	c1 eb 02             	shr    $0x2,%ebx
   13237:	39 d0                	cmp    %edx,%eax
   13239:	0f 93 c2             	setae  %dl
   1323c:	89 d6                	mov    %edx,%esi
   1323e:	8d 50 04             	lea    0x4(%eax),%edx
   13241:	39 d1                	cmp    %edx,%ecx
   13243:	8d 3c 9d 00 00 00 00 	lea    0x0(,%ebx,4),%edi
   1324a:	0f 93 c2             	setae  %dl
   1324d:	09 d6                	or     %edx,%esi
   1324f:	83 7d ec 09          	cmpl   $0x9,-0x14(%ebp)
   13253:	0f 97 c2             	seta   %dl
   13256:	21 d6                	and    %edx,%esi
   13258:	89 ca                	mov    %ecx,%edx
   1325a:	09 c2                	or     %eax,%edx
   1325c:	83 e2 03             	and    $0x3,%edx
   1325f:	89 f2                	mov    %esi,%edx
   13261:	0f 94 45 e8          	sete   -0x18(%ebp)
   13265:	84 55 e8             	test   %dl,-0x18(%ebp)
   13268:	0f 84 58 01 00 00    	je     133c6 <memcpy+0x1e6>
   1326e:	85 ff                	test   %edi,%edi
   13270:	0f 84 50 01 00 00    	je     133c6 <memcpy+0x1e6>
   13276:	31 d2                	xor    %edx,%edx
   13278:	8b 34 91             	mov    (%ecx,%edx,4),%esi
   1327b:	89 34 90             	mov    %esi,(%eax,%edx,4)
   1327e:	42                   	inc    %edx
   1327f:	39 d3                	cmp    %edx,%ebx
   13281:	77 f5                	ja     13278 <memcpy+0x98>
   13283:	8b 55 f0             	mov    -0x10(%ebp),%edx
   13286:	8d 1c 39             	lea    (%ecx,%edi,1),%ebx
   13289:	29 fa                	sub    %edi,%edx
   1328b:	8d 34 38             	lea    (%eax,%edi,1),%esi
   1328e:	89 55 f0             	mov    %edx,-0x10(%ebp)
   13291:	39 7d ec             	cmp    %edi,-0x14(%ebp)
   13294:	74 18                	je     132ae <memcpy+0xce>
   13296:	8b 7d f0             	mov    -0x10(%ebp),%edi
   13299:	31 d2                	xor    %edx,%edx
   1329b:	47                   	inc    %edi
   1329c:	89 45 f0             	mov    %eax,-0x10(%ebp)
   1329f:	90                   	nop
   132a0:	8a 04 13             	mov    (%ebx,%edx,1),%al
   132a3:	88 04 16             	mov    %al,(%esi,%edx,1)
   132a6:	42                   	inc    %edx
   132a7:	39 fa                	cmp    %edi,%edx
   132a9:	75 f5                	jne    132a0 <memcpy+0xc0>
   132ab:	8b 45 f0             	mov    -0x10(%ebp),%eax
   132ae:	8b 55 ec             	mov    -0x14(%ebp),%edx
   132b1:	8b 7d ec             	mov    -0x14(%ebp),%edi
   132b4:	01 c2                	add    %eax,%edx
   132b6:	01 f9                	add    %edi,%ecx
   132b8:	8b 5d 10             	mov    0x10(%ebp),%ebx
   132bb:	2b 5d ec             	sub    -0x14(%ebp),%ebx
   132be:	0f 84 a9 00 00 00    	je     1336d <memcpy+0x18d>
   132c4:	89 df                	mov    %ebx,%edi
   132c6:	c1 ef 02             	shr    $0x2,%edi
   132c9:	8d 34 bd 00 00 00 00 	lea    0x0(,%edi,4),%esi
   132d0:	29 f3                	sub    %esi,%ebx
   132d2:	85 ff                	test   %edi,%edi
   132d4:	89 5d ec             	mov    %ebx,-0x14(%ebp)
   132d7:	74 1c                	je     132f5 <memcpy+0x115>
   132d9:	31 db                	xor    %ebx,%ebx
   132db:	89 45 f0             	mov    %eax,-0x10(%ebp)
   132de:	66 90                	xchg   %ax,%ax
   132e0:	8b 04 99             	mov    (%ecx,%ebx,4),%eax
   132e3:	89 04 9a             	mov    %eax,(%edx,%ebx,4)
   132e6:	43                   	inc    %ebx
   132e7:	39 fb                	cmp    %edi,%ebx
   132e9:	75 f5                	jne    132e0 <memcpy+0x100>
   132eb:	8b 45 f0             	mov    -0x10(%ebp),%eax
   132ee:	01 f2                	add    %esi,%edx
   132f0:	01 f1                	add    %esi,%ecx
   132f2:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   132f5:	4b                   	dec    %ebx
   132f6:	8b 75 ec             	mov    -0x14(%ebp),%esi
   132f9:	89 5d e8             	mov    %ebx,-0x18(%ebp)
   132fc:	85 f6                	test   %esi,%esi
   132fe:	74 6d                	je     1336d <memcpy+0x18d>
   13300:	8d 5a 04             	lea    0x4(%edx),%ebx
   13303:	8b 75 ec             	mov    -0x14(%ebp),%esi
   13306:	c1 ee 02             	shr    $0x2,%esi
   13309:	39 d9                	cmp    %ebx,%ecx
   1330b:	8d 59 04             	lea    0x4(%ecx),%ebx
   1330e:	0f 93 45 f0          	setae  -0x10(%ebp)
   13312:	39 da                	cmp    %ebx,%edx
   13314:	8d 3c b5 00 00 00 00 	lea    0x0(,%esi,4),%edi
   1331b:	0f 93 c3             	setae  %bl
   1331e:	08 5d f0             	or     %bl,-0x10(%ebp)
   13321:	83 7d ec 08          	cmpl   $0x8,-0x14(%ebp)
   13325:	0f 97 c3             	seta   %bl
   13328:	84 5d f0             	test   %bl,-0x10(%ebp)
   1332b:	74 2a                	je     13357 <memcpy+0x177>
   1332d:	85 ff                	test   %edi,%edi
   1332f:	74 26                	je     13357 <memcpy+0x177>
   13331:	31 db                	xor    %ebx,%ebx
   13333:	89 45 f0             	mov    %eax,-0x10(%ebp)
   13336:	66 90                	xchg   %ax,%ax
   13338:	8b 04 99             	mov    (%ecx,%ebx,4),%eax
   1333b:	89 04 9a             	mov    %eax,(%edx,%ebx,4)
   1333e:	43                   	inc    %ebx
   1333f:	39 de                	cmp    %ebx,%esi
   13341:	77 f5                	ja     13338 <memcpy+0x158>
   13343:	8b 5d e8             	mov    -0x18(%ebp),%ebx
   13346:	01 f9                	add    %edi,%ecx
   13348:	29 fb                	sub    %edi,%ebx
   1334a:	01 fa                	add    %edi,%edx
   1334c:	8b 45 f0             	mov    -0x10(%ebp),%eax
   1334f:	89 5d e8             	mov    %ebx,-0x18(%ebp)
   13352:	39 7d ec             	cmp    %edi,-0x14(%ebp)
   13355:	74 16                	je     1336d <memcpy+0x18d>
   13357:	8b 75 e8             	mov    -0x18(%ebp),%esi
   1335a:	31 db                	xor    %ebx,%ebx
   1335c:	46                   	inc    %esi
   1335d:	89 c7                	mov    %eax,%edi
   1335f:	90                   	nop
   13360:	8a 04 19             	mov    (%ecx,%ebx,1),%al
   13363:	88 04 1a             	mov    %al,(%edx,%ebx,1)
   13366:	43                   	inc    %ebx
   13367:	39 f3                	cmp    %esi,%ebx
   13369:	75 f5                	jne    13360 <memcpy+0x180>
   1336b:	89 f8                	mov    %edi,%eax
   1336d:	83 c4 0c             	add    $0xc,%esp
   13370:	5b                   	pop    %ebx
   13371:	5e                   	pop    %esi
   13372:	5f                   	pop    %edi
   13373:	5d                   	pop    %ebp
   13374:	c3                   	ret    
   13375:	8d 76 00             	lea    0x0(%esi),%esi
   13378:	89 55 ec             	mov    %edx,-0x14(%ebp)
   1337b:	e9 9c fe ff ff       	jmp    1321c <memcpy+0x3c>
   13380:	8b 75 10             	mov    0x10(%ebp),%esi
   13383:	31 d2                	xor    %edx,%edx
   13385:	c1 ee 02             	shr    $0x2,%esi
   13388:	74 11                	je     1339b <memcpy+0x1bb>
   1338a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   13390:	8b 1c 91             	mov    (%ecx,%edx,4),%ebx
   13393:	89 1c 90             	mov    %ebx,(%eax,%edx,4)
   13396:	42                   	inc    %edx
   13397:	39 f2                	cmp    %esi,%edx
   13399:	75 f5                	jne    13390 <memcpy+0x1b0>
   1339b:	8b 75 10             	mov    0x10(%ebp),%esi
   1339e:	83 e6 03             	and    $0x3,%esi
   133a1:	74 ca                	je     1336d <memcpy+0x18d>
   133a3:	c1 e2 02             	shl    $0x2,%edx
   133a6:	31 db                	xor    %ebx,%ebx
   133a8:	01 d1                	add    %edx,%ecx
   133aa:	89 c7                	mov    %eax,%edi
   133ac:	01 c2                	add    %eax,%edx
   133ae:	66 90                	xchg   %ax,%ax
   133b0:	8a 04 19             	mov    (%ecx,%ebx,1),%al
   133b3:	88 04 1a             	mov    %al,(%edx,%ebx,1)
   133b6:	43                   	inc    %ebx
   133b7:	39 de                	cmp    %ebx,%esi
   133b9:	77 f5                	ja     133b0 <memcpy+0x1d0>
   133bb:	89 f8                	mov    %edi,%eax
   133bd:	eb ae                	jmp    1336d <memcpy+0x18d>
   133bf:	89 c2                	mov    %eax,%edx
   133c1:	e9 f2 fe ff ff       	jmp    132b8 <memcpy+0xd8>
   133c6:	89 c6                	mov    %eax,%esi
   133c8:	89 cb                	mov    %ecx,%ebx
   133ca:	e9 c7 fe ff ff       	jmp    13296 <memcpy+0xb6>
   133cf:	90                   	nop

000133d0 <memmove>:
   133d0:	55                   	push   %ebp
   133d1:	89 e5                	mov    %esp,%ebp
   133d3:	57                   	push   %edi
   133d4:	56                   	push   %esi
   133d5:	53                   	push   %ebx
   133d6:	83 ec 0c             	sub    $0xc,%esp
   133d9:	8b 45 08             	mov    0x8(%ebp),%eax
   133dc:	8b 55 0c             	mov    0xc(%ebp),%edx
   133df:	39 c2                	cmp    %eax,%edx
   133e1:	0f 84 b6 00 00 00    	je     1349d <memmove+0xcd>
   133e7:	8b 4d 10             	mov    0x10(%ebp),%ecx
   133ea:	01 d1                	add    %edx,%ecx
   133ec:	39 c8                	cmp    %ecx,%eax
   133ee:	0f 83 b4 00 00 00    	jae    134a8 <memmove+0xd8>
   133f4:	8b 4d 10             	mov    0x10(%ebp),%ecx
   133f7:	01 c1                	add    %eax,%ecx
   133f9:	39 ca                	cmp    %ecx,%edx
   133fb:	0f 83 a7 00 00 00    	jae    134a8 <memmove+0xd8>
   13401:	39 c2                	cmp    %eax,%edx
   13403:	0f 86 47 02 00 00    	jbe    13650 <memmove+0x280>
   13409:	8b 7d 10             	mov    0x10(%ebp),%edi
   1340c:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1340f:	4f                   	dec    %edi
   13410:	85 c9                	test   %ecx,%ecx
   13412:	0f 84 85 00 00 00    	je     1349d <memmove+0xcd>
   13418:	8d 5a 04             	lea    0x4(%edx),%ebx
   1341b:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1341e:	c1 e9 02             	shr    $0x2,%ecx
   13421:	39 d8                	cmp    %ebx,%eax
   13423:	8d 58 04             	lea    0x4(%eax),%ebx
   13426:	0f 93 45 f0          	setae  -0x10(%ebp)
   1342a:	39 da                	cmp    %ebx,%edx
   1342c:	8d 34 8d 00 00 00 00 	lea    0x0(,%ecx,4),%esi
   13433:	0f 93 c3             	setae  %bl
   13436:	08 5d f0             	or     %bl,-0x10(%ebp)
   13439:	83 7d 10 09          	cmpl   $0x9,0x10(%ebp)
   1343d:	0f 97 c3             	seta   %bl
   13440:	20 5d f0             	and    %bl,-0x10(%ebp)
   13443:	89 d3                	mov    %edx,%ebx
   13445:	09 c3                	or     %eax,%ebx
   13447:	83 e3 03             	and    $0x3,%ebx
   1344a:	0f 94 c3             	sete   %bl
   1344d:	84 5d f0             	test   %bl,-0x10(%ebp)
   13450:	0f 84 8b 02 00 00    	je     136e1 <memmove+0x311>
   13456:	85 f6                	test   %esi,%esi
   13458:	0f 84 83 02 00 00    	je     136e1 <memmove+0x311>
   1345e:	31 db                	xor    %ebx,%ebx
   13460:	89 75 f0             	mov    %esi,-0x10(%ebp)
   13463:	90                   	nop
   13464:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13468:	8b 34 9a             	mov    (%edx,%ebx,4),%esi
   1346b:	89 34 98             	mov    %esi,(%eax,%ebx,4)
   1346e:	43                   	inc    %ebx
   1346f:	39 d9                	cmp    %ebx,%ecx
   13471:	77 f5                	ja     13468 <memmove+0x98>
   13473:	8b 75 f0             	mov    -0x10(%ebp),%esi
   13476:	01 f2                	add    %esi,%edx
   13478:	29 f7                	sub    %esi,%edi
   1347a:	8d 0c 30             	lea    (%eax,%esi,1),%ecx
   1347d:	39 75 10             	cmp    %esi,0x10(%ebp)
   13480:	74 1b                	je     1349d <memmove+0xcd>
   13482:	8d 77 01             	lea    0x1(%edi),%esi
   13485:	31 db                	xor    %ebx,%ebx
   13487:	89 c7                	mov    %eax,%edi
   13489:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   13490:	8a 04 1a             	mov    (%edx,%ebx,1),%al
   13493:	88 04 19             	mov    %al,(%ecx,%ebx,1)
   13496:	43                   	inc    %ebx
   13497:	39 f3                	cmp    %esi,%ebx
   13499:	75 f5                	jne    13490 <memmove+0xc0>
   1349b:	89 f8                	mov    %edi,%eax
   1349d:	83 c4 0c             	add    $0xc,%esp
   134a0:	5b                   	pop    %ebx
   134a1:	5e                   	pop    %esi
   134a2:	5f                   	pop    %edi
   134a3:	5d                   	pop    %ebp
   134a4:	c3                   	ret    
   134a5:	8d 76 00             	lea    0x0(%esi),%esi
   134a8:	89 d1                	mov    %edx,%ecx
   134aa:	31 c1                	xor    %eax,%ecx
   134ac:	83 e1 03             	and    $0x3,%ecx
   134af:	0f 85 db 01 00 00    	jne    13690 <memmove+0x2c0>
   134b5:	c7 45 e8 04 00 00 00 	movl   $0x4,-0x18(%ebp)
   134bc:	89 c1                	mov    %eax,%ecx
   134be:	83 e1 03             	and    $0x3,%ecx
   134c1:	8b 75 e8             	mov    -0x18(%ebp),%esi
   134c4:	29 ce                	sub    %ecx,%esi
   134c6:	8b 4d 10             	mov    0x10(%ebp),%ecx
   134c9:	89 75 e8             	mov    %esi,-0x18(%ebp)
   134cc:	39 4d e8             	cmp    %ecx,-0x18(%ebp)
   134cf:	0f 87 b3 01 00 00    	ja     13688 <memmove+0x2b8>
   134d5:	8b 5d e8             	mov    -0x18(%ebp),%ebx
   134d8:	4b                   	dec    %ebx
   134d9:	89 5d f0             	mov    %ebx,-0x10(%ebp)
   134dc:	8b 5d e8             	mov    -0x18(%ebp),%ebx
   134df:	85 db                	test   %ebx,%ebx
   134e1:	0f 84 f3 01 00 00    	je     136da <memmove+0x30a>
   134e7:	8d 4a 04             	lea    0x4(%edx),%ecx
   134ea:	8b 5d e8             	mov    -0x18(%ebp),%ebx
   134ed:	c1 eb 02             	shr    $0x2,%ebx
   134f0:	39 c8                	cmp    %ecx,%eax
   134f2:	0f 93 c1             	setae  %cl
   134f5:	89 ce                	mov    %ecx,%esi
   134f7:	8d 48 04             	lea    0x4(%eax),%ecx
   134fa:	39 ca                	cmp    %ecx,%edx
   134fc:	8d 3c 9d 00 00 00 00 	lea    0x0(,%ebx,4),%edi
   13503:	0f 93 c1             	setae  %cl
   13506:	09 ce                	or     %ecx,%esi
   13508:	83 7d e8 09          	cmpl   $0x9,-0x18(%ebp)
   1350c:	0f 97 c1             	seta   %cl
   1350f:	21 ce                	and    %ecx,%esi
   13511:	89 d1                	mov    %edx,%ecx
   13513:	09 c1                	or     %eax,%ecx
   13515:	83 e1 03             	and    $0x3,%ecx
   13518:	89 f1                	mov    %esi,%ecx
   1351a:	0f 94 45 ec          	sete   -0x14(%ebp)
   1351e:	84 4d ec             	test   %cl,-0x14(%ebp)
   13521:	0f 84 c1 01 00 00    	je     136e8 <memmove+0x318>
   13527:	85 ff                	test   %edi,%edi
   13529:	0f 84 b9 01 00 00    	je     136e8 <memmove+0x318>
   1352f:	31 c9                	xor    %ecx,%ecx
   13531:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   13538:	8b 34 8a             	mov    (%edx,%ecx,4),%esi
   1353b:	89 34 88             	mov    %esi,(%eax,%ecx,4)
   1353e:	41                   	inc    %ecx
   1353f:	39 cb                	cmp    %ecx,%ebx
   13541:	77 f5                	ja     13538 <memmove+0x168>
   13543:	8b 4d f0             	mov    -0x10(%ebp),%ecx
   13546:	8d 1c 3a             	lea    (%edx,%edi,1),%ebx
   13549:	29 f9                	sub    %edi,%ecx
   1354b:	8d 34 38             	lea    (%eax,%edi,1),%esi
   1354e:	89 4d f0             	mov    %ecx,-0x10(%ebp)
   13551:	39 7d e8             	cmp    %edi,-0x18(%ebp)
   13554:	74 18                	je     1356e <memmove+0x19e>
   13556:	8b 7d f0             	mov    -0x10(%ebp),%edi
   13559:	31 c9                	xor    %ecx,%ecx
   1355b:	47                   	inc    %edi
   1355c:	89 45 f0             	mov    %eax,-0x10(%ebp)
   1355f:	90                   	nop
   13560:	8a 04 0b             	mov    (%ebx,%ecx,1),%al
   13563:	88 04 0e             	mov    %al,(%esi,%ecx,1)
   13566:	41                   	inc    %ecx
   13567:	39 f9                	cmp    %edi,%ecx
   13569:	75 f5                	jne    13560 <memmove+0x190>
   1356b:	8b 45 f0             	mov    -0x10(%ebp),%eax
   1356e:	8b 4d e8             	mov    -0x18(%ebp),%ecx
   13571:	8b 7d e8             	mov    -0x18(%ebp),%edi
   13574:	01 c1                	add    %eax,%ecx
   13576:	01 fa                	add    %edi,%edx
   13578:	8b 5d 10             	mov    0x10(%ebp),%ebx
   1357b:	2b 5d e8             	sub    -0x18(%ebp),%ebx
   1357e:	0f 84 19 ff ff ff    	je     1349d <memmove+0xcd>
   13584:	89 de                	mov    %ebx,%esi
   13586:	c1 ee 02             	shr    $0x2,%esi
   13589:	8d 3c b5 00 00 00 00 	lea    0x0(,%esi,4),%edi
   13590:	29 fb                	sub    %edi,%ebx
   13592:	85 f6                	test   %esi,%esi
   13594:	89 5d ec             	mov    %ebx,-0x14(%ebp)
   13597:	74 1c                	je     135b5 <memmove+0x1e5>
   13599:	31 db                	xor    %ebx,%ebx
   1359b:	89 45 f0             	mov    %eax,-0x10(%ebp)
   1359e:	66 90                	xchg   %ax,%ax
   135a0:	8b 04 9a             	mov    (%edx,%ebx,4),%eax
   135a3:	89 04 99             	mov    %eax,(%ecx,%ebx,4)
   135a6:	43                   	inc    %ebx
   135a7:	39 f3                	cmp    %esi,%ebx
   135a9:	75 f5                	jne    135a0 <memmove+0x1d0>
   135ab:	8b 45 f0             	mov    -0x10(%ebp),%eax
   135ae:	01 f9                	add    %edi,%ecx
   135b0:	01 fa                	add    %edi,%edx
   135b2:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   135b5:	4b                   	dec    %ebx
   135b6:	8b 75 ec             	mov    -0x14(%ebp),%esi
   135b9:	89 5d e8             	mov    %ebx,-0x18(%ebp)
   135bc:	85 f6                	test   %esi,%esi
   135be:	0f 84 d9 fe ff ff    	je     1349d <memmove+0xcd>
   135c4:	8d 59 04             	lea    0x4(%ecx),%ebx
   135c7:	8b 75 ec             	mov    -0x14(%ebp),%esi
   135ca:	c1 ee 02             	shr    $0x2,%esi
   135cd:	39 da                	cmp    %ebx,%edx
   135cf:	8d 5a 04             	lea    0x4(%edx),%ebx
   135d2:	0f 93 45 f0          	setae  -0x10(%ebp)
   135d6:	39 d9                	cmp    %ebx,%ecx
   135d8:	8d 3c b5 00 00 00 00 	lea    0x0(,%esi,4),%edi
   135df:	0f 93 c3             	setae  %bl
   135e2:	08 5d f0             	or     %bl,-0x10(%ebp)
   135e5:	83 7d ec 09          	cmpl   $0x9,-0x14(%ebp)
   135e9:	0f 97 c3             	seta   %bl
   135ec:	20 5d f0             	and    %bl,-0x10(%ebp)
   135ef:	89 cb                	mov    %ecx,%ebx
   135f1:	09 d3                	or     %edx,%ebx
   135f3:	83 e3 03             	and    $0x3,%ebx
   135f6:	0f 94 c3             	sete   %bl
   135f9:	84 5d f0             	test   %bl,-0x10(%ebp)
   135fc:	74 2d                	je     1362b <memmove+0x25b>
   135fe:	85 ff                	test   %edi,%edi
   13600:	74 29                	je     1362b <memmove+0x25b>
   13602:	31 db                	xor    %ebx,%ebx
   13604:	89 45 f0             	mov    %eax,-0x10(%ebp)
   13607:	90                   	nop
   13608:	8b 04 9a             	mov    (%edx,%ebx,4),%eax
   1360b:	89 04 99             	mov    %eax,(%ecx,%ebx,4)
   1360e:	43                   	inc    %ebx
   1360f:	39 de                	cmp    %ebx,%esi
   13611:	77 f5                	ja     13608 <memmove+0x238>
   13613:	8b 5d e8             	mov    -0x18(%ebp),%ebx
   13616:	01 fa                	add    %edi,%edx
   13618:	29 fb                	sub    %edi,%ebx
   1361a:	01 f9                	add    %edi,%ecx
   1361c:	8b 45 f0             	mov    -0x10(%ebp),%eax
   1361f:	89 5d e8             	mov    %ebx,-0x18(%ebp)
   13622:	39 7d ec             	cmp    %edi,-0x14(%ebp)
   13625:	0f 84 72 fe ff ff    	je     1349d <memmove+0xcd>
   1362b:	8b 75 e8             	mov    -0x18(%ebp),%esi
   1362e:	31 db                	xor    %ebx,%ebx
   13630:	46                   	inc    %esi
   13631:	89 c7                	mov    %eax,%edi
   13633:	90                   	nop
   13634:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13638:	8a 04 1a             	mov    (%edx,%ebx,1),%al
   1363b:	88 04 19             	mov    %al,(%ecx,%ebx,1)
   1363e:	43                   	inc    %ebx
   1363f:	39 f3                	cmp    %esi,%ebx
   13641:	75 f5                	jne    13638 <memmove+0x268>
   13643:	89 f8                	mov    %edi,%eax
   13645:	e9 53 fe ff ff       	jmp    1349d <memmove+0xcd>
   1364a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   13650:	8b 4d 10             	mov    0x10(%ebp),%ecx
   13653:	8b 7d 10             	mov    0x10(%ebp),%edi
   13656:	49                   	dec    %ecx
   13657:	01 ca                	add    %ecx,%edx
   13659:	85 ff                	test   %edi,%edi
   1365b:	8d 1c 08             	lea    (%eax,%ecx,1),%ebx
   1365e:	0f 84 39 fe ff ff    	je     1349d <memmove+0xcd>
   13664:	8b 75 10             	mov    0x10(%ebp),%esi
   13667:	f7 de                	neg    %esi
   13669:	01 f2                	add    %esi,%edx
   1366b:	01 f3                	add    %esi,%ebx
   1366d:	89 c6                	mov    %eax,%esi
   1366f:	90                   	nop
   13670:	8a 44 0a 01          	mov    0x1(%edx,%ecx,1),%al
   13674:	88 44 0b 01          	mov    %al,0x1(%ebx,%ecx,1)
   13678:	49                   	dec    %ecx
   13679:	83 f9 ff             	cmp    $0xffffffff,%ecx
   1367c:	75 f2                	jne    13670 <memmove+0x2a0>
   1367e:	83 c4 0c             	add    $0xc,%esp
   13681:	89 f0                	mov    %esi,%eax
   13683:	5b                   	pop    %ebx
   13684:	5e                   	pop    %esi
   13685:	5f                   	pop    %edi
   13686:	5d                   	pop    %ebp
   13687:	c3                   	ret    
   13688:	89 4d e8             	mov    %ecx,-0x18(%ebp)
   1368b:	e9 45 fe ff ff       	jmp    134d5 <memmove+0x105>
   13690:	8b 75 10             	mov    0x10(%ebp),%esi
   13693:	31 c9                	xor    %ecx,%ecx
   13695:	c1 ee 02             	shr    $0x2,%esi
   13698:	74 11                	je     136ab <memmove+0x2db>
   1369a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   136a0:	8b 1c 8a             	mov    (%edx,%ecx,4),%ebx
   136a3:	89 1c 88             	mov    %ebx,(%eax,%ecx,4)
   136a6:	41                   	inc    %ecx
   136a7:	39 f1                	cmp    %esi,%ecx
   136a9:	75 f5                	jne    136a0 <memmove+0x2d0>
   136ab:	8b 75 10             	mov    0x10(%ebp),%esi
   136ae:	83 e6 03             	and    $0x3,%esi
   136b1:	0f 84 e6 fd ff ff    	je     1349d <memmove+0xcd>
   136b7:	c1 e1 02             	shl    $0x2,%ecx
   136ba:	31 db                	xor    %ebx,%ebx
   136bc:	01 ca                	add    %ecx,%edx
   136be:	89 c7                	mov    %eax,%edi
   136c0:	01 c1                	add    %eax,%ecx
   136c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   136c8:	8a 04 1a             	mov    (%edx,%ebx,1),%al
   136cb:	88 04 19             	mov    %al,(%ecx,%ebx,1)
   136ce:	43                   	inc    %ebx
   136cf:	39 de                	cmp    %ebx,%esi
   136d1:	77 f5                	ja     136c8 <memmove+0x2f8>
   136d3:	89 f8                	mov    %edi,%eax
   136d5:	e9 c3 fd ff ff       	jmp    1349d <memmove+0xcd>
   136da:	89 c1                	mov    %eax,%ecx
   136dc:	e9 97 fe ff ff       	jmp    13578 <memmove+0x1a8>
   136e1:	89 c1                	mov    %eax,%ecx
   136e3:	e9 9a fd ff ff       	jmp    13482 <memmove+0xb2>
   136e8:	89 c6                	mov    %eax,%esi
   136ea:	89 d3                	mov    %edx,%ebx
   136ec:	e9 65 fe ff ff       	jmp    13556 <memmove+0x186>
   136f1:	eb 0d                	jmp    13700 <bcmp>
   136f3:	90                   	nop
   136f4:	90                   	nop
   136f5:	90                   	nop
   136f6:	90                   	nop
   136f7:	90                   	nop
   136f8:	90                   	nop
   136f9:	90                   	nop
   136fa:	90                   	nop
   136fb:	90                   	nop
   136fc:	90                   	nop
   136fd:	90                   	nop
   136fe:	90                   	nop
   136ff:	90                   	nop

00013700 <bcmp>:
   13700:	55                   	push   %ebp
   13701:	89 e5                	mov    %esp,%ebp
   13703:	57                   	push   %edi
   13704:	56                   	push   %esi
   13705:	53                   	push   %ebx
   13706:	8b 45 10             	mov    0x10(%ebp),%eax
   13709:	8b 7d 08             	mov    0x8(%ebp),%edi
   1370c:	8b 75 0c             	mov    0xc(%ebp),%esi
   1370f:	85 c0                	test   %eax,%eax
   13711:	74 1d                	je     13730 <bcmp+0x30>
   13713:	8a 0e                	mov    (%esi),%cl
   13715:	31 d2                	xor    %edx,%edx
   13717:	38 0f                	cmp    %cl,(%edi)
   13719:	74 12                	je     1372d <bcmp+0x2d>
   1371b:	eb 15                	jmp    13732 <bcmp+0x32>
   1371d:	8d 76 00             	lea    0x0(%esi),%esi
   13720:	8a 5c 17 01          	mov    0x1(%edi,%edx,1),%bl
   13724:	8a 4c 16 01          	mov    0x1(%esi,%edx,1),%cl
   13728:	42                   	inc    %edx
   13729:	38 cb                	cmp    %cl,%bl
   1372b:	75 05                	jne    13732 <bcmp+0x32>
   1372d:	48                   	dec    %eax
   1372e:	75 f0                	jne    13720 <bcmp+0x20>
   13730:	31 c0                	xor    %eax,%eax
   13732:	5b                   	pop    %ebx
   13733:	5e                   	pop    %esi
   13734:	5f                   	pop    %edi
   13735:	5d                   	pop    %ebp
   13736:	c3                   	ret    
   13737:	66 90                	xchg   %ax,%ax
   13739:	66 90                	xchg   %ax,%ax
   1373b:	66 90                	xchg   %ax,%ax
   1373d:	66 90                	xchg   %ax,%ax
   1373f:	90                   	nop

00013740 <_strtoul>:
   13740:	55                   	push   %ebp
   13741:	89 e5                	mov    %esp,%ebp
   13743:	57                   	push   %edi
   13744:	56                   	push   %esi
   13745:	53                   	push   %ebx
   13746:	83 ec 08             	sub    $0x8,%esp
   13749:	89 45 f0             	mov    %eax,-0x10(%ebp)
   1374c:	8a 00                	mov    (%eax),%al
   1374e:	89 55 ec             	mov    %edx,-0x14(%ebp)
   13751:	0f be d0             	movsbl %al,%edx
   13754:	83 ea 09             	sub    $0x9,%edx
   13757:	8b 5d f0             	mov    -0x10(%ebp),%ebx
   1375a:	83 fa 17             	cmp    $0x17,%edx
   1375d:	77 23                	ja     13782 <_strtoul+0x42>
   1375f:	8b 3c 95 c0 d8 02 00 	mov    0x2d8c0(,%edx,4),%edi
   13766:	85 ff                	test   %edi,%edi
   13768:	0f 84 94 01 00 00    	je     13902 <_strtoul+0x1c2>
   1376e:	66 90                	xchg   %ax,%ax
   13770:	43                   	inc    %ebx
   13771:	8a 03                	mov    (%ebx),%al
   13773:	0f be d0             	movsbl %al,%edx
   13776:	83 ea 09             	sub    $0x9,%edx
   13779:	83 fa 17             	cmp    $0x17,%edx
   1377c:	0f 86 a6 00 00 00    	jbe    13828 <_strtoul+0xe8>
   13782:	3c 2d                	cmp    $0x2d,%al
   13784:	0f 84 1e 01 00 00    	je     138a8 <_strtoul+0x168>
   1378a:	3c 2b                	cmp    $0x2b,%al
   1378c:	0f 94 c0             	sete   %al
   1378f:	25 ff 00 00 00       	and    $0xff,%eax
   13794:	01 c3                	add    %eax,%ebx
   13796:	85 c9                	test   %ecx,%ecx
   13798:	0f 84 a2 00 00 00    	je     13840 <_strtoul+0x100>
   1379e:	83 f9 24             	cmp    $0x24,%ecx
   137a1:	0f 8f 21 01 00 00    	jg     138c8 <_strtoul+0x188>
   137a7:	83 f9 01             	cmp    $0x1,%ecx
   137aa:	0f 84 18 01 00 00    	je     138c8 <_strtoul+0x188>
   137b0:	8a 13                	mov    (%ebx),%dl
   137b2:	83 f9 10             	cmp    $0x10,%ecx
   137b5:	0f 84 16 01 00 00    	je     138d1 <_strtoul+0x191>
   137bb:	84 d2                	test   %dl,%dl
   137bd:	0f 84 2c 01 00 00    	je     138ef <_strtoul+0x1af>
   137c3:	89 de                	mov    %ebx,%esi
   137c5:	31 c0                	xor    %eax,%eax
   137c7:	eb 4a                	jmp    13813 <_strtoul+0xd3>
   137c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   137d0:	83 ea 57             	sub    $0x57,%edx
   137d3:	81 e2 ff 00 00 00    	and    $0xff,%edx
   137d9:	39 d1                	cmp    %edx,%ecx
   137db:	0f 8e 94 00 00 00    	jle    13875 <_strtoul+0x135>
   137e1:	0f b6 f8             	movzbl %al,%edi
   137e4:	0f af f9             	imul   %ecx,%edi
   137e7:	c1 e8 08             	shr    $0x8,%eax
   137ea:	01 fa                	add    %edi,%edx
   137ec:	0f af c1             	imul   %ecx,%eax
   137ef:	89 d7                	mov    %edx,%edi
   137f1:	c1 ef 08             	shr    $0x8,%edi
   137f4:	01 f8                	add    %edi,%eax
   137f6:	3d ff ff ff 00       	cmp    $0xffffff,%eax
   137fb:	0f 87 b7 00 00 00    	ja     138b8 <_strtoul+0x178>
   13801:	46                   	inc    %esi
   13802:	81 e2 ff 00 00 00    	and    $0xff,%edx
   13808:	c1 e0 08             	shl    $0x8,%eax
   1380b:	01 d0                	add    %edx,%eax
   1380d:	8a 16                	mov    (%esi),%dl
   1380f:	84 d2                	test   %dl,%dl
   13811:	74 62                	je     13875 <_strtoul+0x135>
   13813:	80 fa 60             	cmp    $0x60,%dl
   13816:	77 b8                	ja     137d0 <_strtoul+0x90>
   13818:	80 fa 40             	cmp    $0x40,%dl
   1381b:	76 53                	jbe    13870 <_strtoul+0x130>
   1381d:	83 ea 37             	sub    $0x37,%edx
   13820:	eb b1                	jmp    137d3 <_strtoul+0x93>
   13822:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   13828:	8b 34 95 c0 d8 02 00 	mov    0x2d8c0(,%edx,4),%esi
   1382f:	85 f6                	test   %esi,%esi
   13831:	0f 85 39 ff ff ff    	jne    13770 <_strtoul+0x30>
   13837:	e9 46 ff ff ff       	jmp    13782 <_strtoul+0x42>
   1383c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13840:	8a 13                	mov    (%ebx),%dl
   13842:	b9 0a 00 00 00       	mov    $0xa,%ecx
   13847:	80 fa 30             	cmp    $0x30,%dl
   1384a:	0f 85 6b ff ff ff    	jne    137bb <_strtoul+0x7b>
   13850:	8a 43 01             	mov    0x1(%ebx),%al
   13853:	83 e0 df             	and    $0xffffffdf,%eax
   13856:	3c 58                	cmp    $0x58,%al
   13858:	0f 85 98 00 00 00    	jne    138f6 <_strtoul+0x1b6>
   1385e:	8a 53 02             	mov    0x2(%ebx),%dl
   13861:	b1 10                	mov    $0x10,%cl
   13863:	83 c3 02             	add    $0x2,%ebx
   13866:	e9 50 ff ff ff       	jmp    137bb <_strtoul+0x7b>
   1386b:	90                   	nop
   1386c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13870:	80 fa 39             	cmp    $0x39,%dl
   13873:	76 2b                	jbe    138a0 <_strtoul+0x160>
   13875:	39 f3                	cmp    %esi,%ebx
   13877:	74 76                	je     138ef <_strtoul+0x1af>
   13879:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   1387c:	85 db                	test   %ebx,%ebx
   1387e:	74 05                	je     13885 <_strtoul+0x145>
   13880:	8b 55 ec             	mov    -0x14(%ebp),%edx
   13883:	89 32                	mov    %esi,(%edx)
   13885:	39 75 f0             	cmp    %esi,-0x10(%ebp)
   13888:	0f 95 c2             	setne  %dl
   1388b:	81 e2 ff 00 00 00    	and    $0xff,%edx
   13891:	f7 da                	neg    %edx
   13893:	21 d0                	and    %edx,%eax
   13895:	5a                   	pop    %edx
   13896:	59                   	pop    %ecx
   13897:	5b                   	pop    %ebx
   13898:	5e                   	pop    %esi
   13899:	5f                   	pop    %edi
   1389a:	5d                   	pop    %ebp
   1389b:	c3                   	ret    
   1389c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   138a0:	83 ea 30             	sub    $0x30,%edx
   138a3:	e9 2b ff ff ff       	jmp    137d3 <_strtoul+0x93>
   138a8:	8b 45 08             	mov    0x8(%ebp),%eax
   138ab:	43                   	inc    %ebx
   138ac:	c6 00 01             	movb   $0x1,(%eax)
   138af:	e9 e2 fe ff ff       	jmp    13796 <_strtoul+0x56>
   138b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   138b8:	5a                   	pop    %edx
   138b9:	83 c8 ff             	or     $0xffffffff,%eax
   138bc:	59                   	pop    %ecx
   138bd:	5b                   	pop    %ebx
   138be:	5e                   	pop    %esi
   138bf:	5f                   	pop    %edi
   138c0:	5d                   	pop    %ebp
   138c1:	c3                   	ret    
   138c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   138c8:	5a                   	pop    %edx
   138c9:	31 c0                	xor    %eax,%eax
   138cb:	59                   	pop    %ecx
   138cc:	5b                   	pop    %ebx
   138cd:	5e                   	pop    %esi
   138ce:	5f                   	pop    %edi
   138cf:	5d                   	pop    %ebp
   138d0:	c3                   	ret    
   138d1:	80 fa 30             	cmp    $0x30,%dl
   138d4:	0f 85 e1 fe ff ff    	jne    137bb <_strtoul+0x7b>
   138da:	8a 43 01             	mov    0x1(%ebx),%al
   138dd:	83 e0 df             	and    $0xffffffdf,%eax
   138e0:	3c 58                	cmp    $0x58,%al
   138e2:	75 17                	jne    138fb <_strtoul+0x1bb>
   138e4:	8a 53 02             	mov    0x2(%ebx),%dl
   138e7:	83 c3 02             	add    $0x2,%ebx
   138ea:	e9 cc fe ff ff       	jmp    137bb <_strtoul+0x7b>
   138ef:	8b 75 f0             	mov    -0x10(%ebp),%esi
   138f2:	31 c0                	xor    %eax,%eax
   138f4:	eb 83                	jmp    13879 <_strtoul+0x139>
   138f6:	b9 08 00 00 00       	mov    $0x8,%ecx
   138fb:	b2 30                	mov    $0x30,%dl
   138fd:	e9 c1 fe ff ff       	jmp    137c3 <_strtoul+0x83>
   13902:	8b 5d f0             	mov    -0x10(%ebp),%ebx
   13905:	e9 78 fe ff ff       	jmp    13782 <_strtoul+0x42>
   1390a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00013910 <str_uint>:
   13910:	55                   	push   %ebp
   13911:	89 e5                	mov    %esp,%ebp
   13913:	57                   	push   %edi
   13914:	56                   	push   %esi
   13915:	53                   	push   %ebx
   13916:	83 ec 3c             	sub    $0x3c,%esp
   13919:	89 45 dc             	mov    %eax,-0x24(%ebp)
   1391c:	89 55 d8             	mov    %edx,-0x28(%ebp)
   1391f:	8b 75 08             	mov    0x8(%ebp),%esi
   13922:	85 d2                	test   %edx,%edx
   13924:	0f 84 5f 02 00 00    	je     13b89 <str_uint+0x279>
   1392a:	85 f6                	test   %esi,%esi
   1392c:	0f 84 3b 02 00 00    	je     13b6d <str_uint+0x25d>
   13932:	8b 45 0c             	mov    0xc(%ebp),%eax
   13935:	85 c0                	test   %eax,%eax
   13937:	0f 84 14 02 00 00    	je     13b51 <str_uint+0x241>
   1393d:	8b 45 dc             	mov    -0x24(%ebp),%eax
   13940:	c6 06 00             	movb   $0x0,(%esi)
   13943:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   13946:	8a 10                	mov    (%eax),%dl
   13948:	0f be c2             	movsbl %dl,%eax
   1394b:	83 e8 09             	sub    $0x9,%eax
   1394e:	83 f8 17             	cmp    $0x17,%eax
   13951:	77 27                	ja     1397a <str_uint+0x6a>
   13953:	8b 04 85 c0 d8 02 00 	mov    0x2d8c0(,%eax,4),%eax
   1395a:	85 c0                	test   %eax,%eax
   1395c:	0f 84 e7 01 00 00    	je     13b49 <str_uint+0x239>
   13962:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   13968:	43                   	inc    %ebx
   13969:	8a 13                	mov    (%ebx),%dl
   1396b:	0f be c2             	movsbl %dl,%eax
   1396e:	83 e8 09             	sub    $0x9,%eax
   13971:	83 f8 17             	cmp    $0x17,%eax
   13974:	0f 86 06 01 00 00    	jbe    13a80 <str_uint+0x170>
   1397a:	80 fa 2d             	cmp    $0x2d,%dl
   1397d:	0f 84 4d 01 00 00    	je     13ad0 <str_uint+0x1c0>
   13983:	80 fa 2b             	cmp    $0x2b,%dl
   13986:	0f 94 c0             	sete   %al
   13989:	25 ff 00 00 00       	and    $0xff,%eax
   1398e:	01 c3                	add    %eax,%ebx
   13990:	85 c9                	test   %ecx,%ecx
   13992:	0f 85 18 01 00 00    	jne    13ab0 <str_uint+0x1a0>
   13998:	b1 0a                	mov    $0xa,%cl
   1399a:	80 3b 30             	cmpb   $0x30,(%ebx)
   1399d:	0f 84 3d 01 00 00    	je     13ae0 <str_uint+0x1d0>
   139a3:	8b 45 0c             	mov    0xc(%ebp),%eax
   139a6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   139ac:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   139b3:	8a 03                	mov    (%ebx),%al
   139b5:	84 c0                	test   %al,%al
   139b7:	0f 84 37 01 00 00    	je     13af4 <str_uint+0x1e4>
   139bd:	8d 50 9f             	lea    -0x61(%eax),%edx
   139c0:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
   139c7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   139ce:	89 5d d4             	mov    %ebx,-0x2c(%ebp)
   139d1:	80 fa 19             	cmp    $0x19,%dl
   139d4:	77 64                	ja     13a3a <str_uint+0x12a>
   139d6:	66 90                	xchg   %ax,%ax
   139d8:	0f be f0             	movsbl %al,%esi
   139db:	83 ee 57             	sub    $0x57,%esi
   139de:	39 f1                	cmp    %esi,%ecx
   139e0:	76 6e                	jbe    13a50 <str_uint+0x140>
   139e2:	8b 45 e0             	mov    -0x20(%ebp),%eax
   139e5:	8b 7d e4             	mov    -0x1c(%ebp),%edi
   139e8:	f7 e1                	mul    %ecx
   139ea:	0f af f9             	imul   %ecx,%edi
   139ed:	89 45 c8             	mov    %eax,-0x38(%ebp)
   139f0:	01 fa                	add    %edi,%edx
   139f2:	31 ff                	xor    %edi,%edi
   139f4:	03 75 c8             	add    -0x38(%ebp),%esi
   139f7:	89 55 cc             	mov    %edx,-0x34(%ebp)
   139fa:	8b 55 0c             	mov    0xc(%ebp),%edx
   139fd:	13 7d cc             	adc    -0x34(%ebp),%edi
   13a00:	89 32                	mov    %esi,(%edx)
   13a02:	89 7a 04             	mov    %edi,0x4(%edx)
   13a05:	3b 7d e4             	cmp    -0x1c(%ebp),%edi
   13a08:	77 1b                	ja     13a25 <str_uint+0x115>
   13a0a:	73 14                	jae    13a20 <str_uint+0x110>
   13a0c:	8b 45 d8             	mov    -0x28(%ebp),%eax
   13a0f:	89 18                	mov    %ebx,(%eax)
   13a11:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   13a16:	83 c4 3c             	add    $0x3c,%esp
   13a19:	5b                   	pop    %ebx
   13a1a:	5e                   	pop    %esi
   13a1b:	5f                   	pop    %edi
   13a1c:	5d                   	pop    %ebp
   13a1d:	c3                   	ret    
   13a1e:	66 90                	xchg   %ax,%ax
   13a20:	3b 75 e0             	cmp    -0x20(%ebp),%esi
   13a23:	72 e7                	jb     13a0c <str_uint+0xfc>
   13a25:	43                   	inc    %ebx
   13a26:	8a 03                	mov    (%ebx),%al
   13a28:	84 c0                	test   %al,%al
   13a2a:	74 24                	je     13a50 <str_uint+0x140>
   13a2c:	8d 50 9f             	lea    -0x61(%eax),%edx
   13a2f:	89 75 e0             	mov    %esi,-0x20(%ebp)
   13a32:	89 7d e4             	mov    %edi,-0x1c(%ebp)
   13a35:	80 fa 19             	cmp    $0x19,%dl
   13a38:	76 9e                	jbe    139d8 <str_uint+0xc8>
   13a3a:	8d 50 bf             	lea    -0x41(%eax),%edx
   13a3d:	80 fa 19             	cmp    $0x19,%dl
   13a40:	77 56                	ja     13a98 <str_uint+0x188>
   13a42:	0f be f0             	movsbl %al,%esi
   13a45:	83 ee 37             	sub    $0x37,%esi
   13a48:	39 f1                	cmp    %esi,%ecx
   13a4a:	77 96                	ja     139e2 <str_uint+0xd2>
   13a4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13a50:	89 da                	mov    %ebx,%edx
   13a52:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
   13a55:	39 d3                	cmp    %edx,%ebx
   13a57:	0f 84 97 00 00 00    	je     13af4 <str_uint+0x1e4>
   13a5d:	8b 45 d8             	mov    -0x28(%ebp),%eax
   13a60:	39 55 dc             	cmp    %edx,-0x24(%ebp)
   13a63:	89 10                	mov    %edx,(%eax)
   13a65:	0f 95 c0             	setne  %al
   13a68:	25 ff 00 00 00       	and    $0xff,%eax
   13a6d:	83 c4 3c             	add    $0x3c,%esp
   13a70:	48                   	dec    %eax
   13a71:	5b                   	pop    %ebx
   13a72:	83 e0 f2             	and    $0xfffffff2,%eax
   13a75:	5e                   	pop    %esi
   13a76:	5f                   	pop    %edi
   13a77:	5d                   	pop    %ebp
   13a78:	c3                   	ret    
   13a79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   13a80:	8b 3c 85 c0 d8 02 00 	mov    0x2d8c0(,%eax,4),%edi
   13a87:	85 ff                	test   %edi,%edi
   13a89:	0f 85 d9 fe ff ff    	jne    13968 <str_uint+0x58>
   13a8f:	e9 e6 fe ff ff       	jmp    1397a <str_uint+0x6a>
   13a94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13a98:	8d 50 d0             	lea    -0x30(%eax),%edx
   13a9b:	80 fa 09             	cmp    $0x9,%dl
   13a9e:	77 b0                	ja     13a50 <str_uint+0x140>
   13aa0:	0f be f0             	movsbl %al,%esi
   13aa3:	83 ee 30             	sub    $0x30,%esi
   13aa6:	e9 33 ff ff ff       	jmp    139de <str_uint+0xce>
   13aab:	90                   	nop
   13aac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13ab0:	8d 41 fe             	lea    -0x2(%ecx),%eax
   13ab3:	83 f8 22             	cmp    $0x22,%eax
   13ab6:	0f 86 e7 fe ff ff    	jbe    139a3 <str_uint+0x93>
   13abc:	8b 55 d8             	mov    -0x28(%ebp),%edx
   13abf:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   13ac4:	89 1a                	mov    %ebx,(%edx)
   13ac6:	e9 4b ff ff ff       	jmp    13a16 <str_uint+0x106>
   13acb:	90                   	nop
   13acc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13ad0:	c6 06 01             	movb   $0x1,(%esi)
   13ad3:	43                   	inc    %ebx
   13ad4:	e9 b7 fe ff ff       	jmp    13990 <str_uint+0x80>
   13ad9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   13ae0:	8a 43 01             	mov    0x1(%ebx),%al
   13ae3:	83 e8 42             	sub    $0x42,%eax
   13ae6:	3c 36                	cmp    $0x36,%al
   13ae8:	76 1f                	jbe    13b09 <str_uint+0x1f9>
   13aea:	b9 08 00 00 00       	mov    $0x8,%ecx
   13aef:	e9 af fe ff ff       	jmp    139a3 <str_uint+0x93>
   13af4:	8b 55 d8             	mov    -0x28(%ebp),%edx
   13af7:	8b 45 dc             	mov    -0x24(%ebp),%eax
   13afa:	89 02                	mov    %eax,(%edx)
   13afc:	83 c4 3c             	add    $0x3c,%esp
   13aff:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   13b04:	5b                   	pop    %ebx
   13b05:	5e                   	pop    %esi
   13b06:	5f                   	pop    %edi
   13b07:	5d                   	pop    %ebp
   13b08:	c3                   	ret    
   13b09:	25 ff 00 00 00       	and    $0xff,%eax
   13b0e:	ff 24 85 e0 d7 02 00 	jmp    *0x2d7e0(,%eax,4)
   13b15:	83 c3 02             	add    $0x2,%ebx
   13b18:	b9 10 00 00 00       	mov    $0x10,%ecx
   13b1d:	e9 81 fe ff ff       	jmp    139a3 <str_uint+0x93>
   13b22:	83 c3 02             	add    $0x2,%ebx
   13b25:	b9 08 00 00 00       	mov    $0x8,%ecx
   13b2a:	e9 74 fe ff ff       	jmp    139a3 <str_uint+0x93>
   13b2f:	83 c3 02             	add    $0x2,%ebx
   13b32:	b9 0a 00 00 00       	mov    $0xa,%ecx
   13b37:	e9 67 fe ff ff       	jmp    139a3 <str_uint+0x93>
   13b3c:	83 c3 02             	add    $0x2,%ebx
   13b3f:	b9 02 00 00 00       	mov    $0x2,%ecx
   13b44:	e9 5a fe ff ff       	jmp    139a3 <str_uint+0x93>
   13b49:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   13b4c:	e9 29 fe ff ff       	jmp    1397a <str_uint+0x6a>
   13b51:	c7 44 24 08 82 05 00 	movl   $0x582,0x8(%esp)
   13b58:	00 
   13b59:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   13b60:	00 
   13b61:	c7 04 24 a7 d7 02 00 	movl   $0x2d7a7,(%esp)
   13b68:	e8 43 6d 01 00       	call   2a8b0 <assert_abort>
   13b6d:	c7 44 24 08 81 05 00 	movl   $0x581,0x8(%esp)
   13b74:	00 
   13b75:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   13b7c:	00 
   13b7d:	c7 04 24 9b d7 02 00 	movl   $0x2d79b,(%esp)
   13b84:	e8 27 6d 01 00       	call   2a8b0 <assert_abort>
   13b89:	c7 44 24 08 80 05 00 	movl   $0x580,0x8(%esp)
   13b90:	00 
   13b91:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   13b98:	00 
   13b99:	c7 04 24 8c d7 02 00 	movl   $0x2d78c,(%esp)
   13ba0:	e8 0b 6d 01 00       	call   2a8b0 <assert_abort>
   13ba5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13ba9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00013bb0 <str_decode>:
   13bb0:	55                   	push   %ebp
   13bb1:	89 e5                	mov    %esp,%ebp
   13bb3:	57                   	push   %edi
   13bb4:	56                   	push   %esi
   13bb5:	53                   	push   %ebx
   13bb6:	83 ec 0c             	sub    $0xc,%esp
   13bb9:	8b 45 0c             	mov    0xc(%ebp),%eax
   13bbc:	8b 7d 08             	mov    0x8(%ebp),%edi
   13bbf:	8b 10                	mov    (%eax),%edx
   13bc1:	31 c0                	xor    %eax,%eax
   13bc3:	8d 4a 01             	lea    0x1(%edx),%ecx
   13bc6:	3b 4d 10             	cmp    0x10(%ebp),%ecx
   13bc9:	77 0d                	ja     13bd8 <str_decode+0x28>
   13bcb:	0f be 04 17          	movsbl (%edi,%edx,1),%eax
   13bcf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   13bd2:	84 c0                	test   %al,%al
   13bd4:	89 0b                	mov    %ecx,(%ebx)
   13bd6:	78 08                	js     13be0 <str_decode+0x30>
   13bd8:	83 c4 0c             	add    $0xc,%esp
   13bdb:	5b                   	pop    %ebx
   13bdc:	5e                   	pop    %esi
   13bdd:	5f                   	pop    %edi
   13bde:	5d                   	pop    %ebp
   13bdf:	c3                   	ret    
   13be0:	be e0 ff ff ff       	mov    $0xffffffe0,%esi
   13be5:	21 c6                	and    %eax,%esi
   13be7:	89 f3                	mov    %esi,%ebx
   13be9:	80 fb c0             	cmp    $0xc0,%bl
   13bec:	74 32                	je     13c20 <str_decode+0x70>
   13bee:	be f0 ff ff ff       	mov    $0xfffffff0,%esi
   13bf3:	21 c6                	and    %eax,%esi
   13bf5:	89 f3                	mov    %esi,%ebx
   13bf7:	80 fb e0             	cmp    $0xe0,%bl
   13bfa:	0f 84 90 00 00 00    	je     13c90 <str_decode+0xe0>
   13c00:	be f8 ff ff ff       	mov    $0xfffffff8,%esi
   13c05:	21 c6                	and    %eax,%esi
   13c07:	89 f3                	mov    %esi,%ebx
   13c09:	80 fb f0             	cmp    $0xf0,%bl
   13c0c:	0f 84 87 00 00 00    	je     13c99 <str_decode+0xe9>
   13c12:	83 c4 0c             	add    $0xc,%esp
   13c15:	b8 3f 00 00 00       	mov    $0x3f,%eax
   13c1a:	5b                   	pop    %ebx
   13c1b:	5e                   	pop    %esi
   13c1c:	5f                   	pop    %edi
   13c1d:	5d                   	pop    %ebp
   13c1e:	c3                   	ret    
   13c1f:	90                   	nop
   13c20:	b3 1f                	mov    $0x1f,%bl
   13c22:	be 01 00 00 00       	mov    $0x1,%esi
   13c27:	01 f1                	add    %esi,%ecx
   13c29:	89 4d f0             	mov    %ecx,-0x10(%ebp)
   13c2c:	39 4d 10             	cmp    %ecx,0x10(%ebp)
   13c2f:	72 e1                	jb     13c12 <str_decode+0x62>
   13c31:	21 d8                	and    %ebx,%eax
   13c33:	8a 4c 17 01          	mov    0x1(%edi,%edx,1),%cl
   13c37:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   13c3a:	be c0 ff ff ff       	mov    $0xffffffc0,%esi
   13c3f:	83 c2 02             	add    $0x2,%edx
   13c42:	21 ce                	and    %ecx,%esi
   13c44:	89 13                	mov    %edx,(%ebx)
   13c46:	89 f3                	mov    %esi,%ebx
   13c48:	25 ff 00 00 00       	and    $0xff,%eax
   13c4d:	80 fb 80             	cmp    $0x80,%bl
   13c50:	75 c0                	jne    13c12 <str_decode+0x62>
   13c52:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   13c55:	89 5d e8             	mov    %ebx,-0x18(%ebp)
   13c58:	eb 1d                	jmp    13c77 <str_decode+0xc7>
   13c5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   13c60:	8a 0c 17             	mov    (%edi,%edx,1),%cl
   13c63:	8b 5d e8             	mov    -0x18(%ebp),%ebx
   13c66:	be c0 ff ff ff       	mov    $0xffffffc0,%esi
   13c6b:	42                   	inc    %edx
   13c6c:	21 ce                	and    %ecx,%esi
   13c6e:	89 13                	mov    %edx,(%ebx)
   13c70:	89 f3                	mov    %esi,%ebx
   13c72:	80 fb 80             	cmp    $0x80,%bl
   13c75:	75 9b                	jne    13c12 <str_decode+0x62>
   13c77:	89 c6                	mov    %eax,%esi
   13c79:	89 c8                	mov    %ecx,%eax
   13c7b:	c1 e6 06             	shl    $0x6,%esi
   13c7e:	83 e0 3f             	and    $0x3f,%eax
   13c81:	09 f0                	or     %esi,%eax
   13c83:	39 55 f0             	cmp    %edx,-0x10(%ebp)
   13c86:	75 d8                	jne    13c60 <str_decode+0xb0>
   13c88:	e9 4b ff ff ff       	jmp    13bd8 <str_decode+0x28>
   13c8d:	8d 76 00             	lea    0x0(%esi),%esi
   13c90:	b3 0f                	mov    $0xf,%bl
   13c92:	be 02 00 00 00       	mov    $0x2,%esi
   13c97:	eb 8e                	jmp    13c27 <str_decode+0x77>
   13c99:	b3 07                	mov    $0x7,%bl
   13c9b:	be 03 00 00 00       	mov    $0x3,%esi
   13ca0:	eb 85                	jmp    13c27 <str_decode+0x77>
   13ca2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   13ca9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00013cb0 <str_decode_reverse>:
   13cb0:	55                   	push   %ebp
   13cb1:	89 e5                	mov    %esp,%ebp
   13cb3:	57                   	push   %edi
   13cb4:	56                   	push   %esi
   13cb5:	53                   	push   %ebx
   13cb6:	50                   	push   %eax
   13cb7:	31 c0                	xor    %eax,%eax
   13cb9:	8b 7d 0c             	mov    0xc(%ebp),%edi
   13cbc:	8b 1f                	mov    (%edi),%ebx
   13cbe:	85 db                	test   %ebx,%ebx
   13cc0:	0f 84 24 01 00 00    	je     13dea <str_decode_reverse+0x13a>
   13cc6:	8d 73 ff             	lea    -0x1(%ebx),%esi
   13cc9:	8b 55 08             	mov    0x8(%ebp),%edx
   13ccc:	89 37                	mov    %esi,(%edi)
   13cce:	8a 14 32             	mov    (%edx,%esi,1),%dl
   13cd1:	88 55 f1             	mov    %dl,-0xf(%ebp)
   13cd4:	84 d2                	test   %dl,%dl
   13cd6:	0f 89 c4 01 00 00    	jns    13ea0 <str_decode_reverse+0x1f0>
   13cdc:	88 d1                	mov    %dl,%cl
   13cde:	83 e1 e0             	and    $0xffffffe0,%ecx
   13ce1:	88 4d f2             	mov    %cl,-0xe(%ebp)
   13ce4:	80 f9 c0             	cmp    $0xc0,%cl
   13ce7:	0f 84 d8 01 00 00    	je     13ec5 <str_decode_reverse+0x215>
   13ced:	88 d1                	mov    %dl,%cl
   13cef:	83 e1 f0             	and    $0xfffffff0,%ecx
   13cf2:	80 f9 e0             	cmp    $0xe0,%cl
   13cf5:	0f 84 f1 01 00 00    	je     13eec <str_decode_reverse+0x23c>
   13cfb:	88 d0                	mov    %dl,%al
   13cfd:	83 e0 f8             	and    $0xfffffff8,%eax
   13d00:	3c f0                	cmp    $0xf0,%al
   13d02:	0f 84 ee 00 00 00    	je     13df6 <str_decode_reverse+0x146>
   13d08:	88 d1                	mov    %dl,%cl
   13d0a:	83 e1 c0             	and    $0xffffffc0,%ecx
   13d0d:	80 f9 80             	cmp    $0x80,%cl
   13d10:	0f 85 cf 00 00 00    	jne    13de5 <str_decode_reverse+0x135>
   13d16:	85 f6                	test   %esi,%esi
   13d18:	0f 84 c7 00 00 00    	je     13de5 <str_decode_reverse+0x135>
   13d1e:	8d 43 fe             	lea    -0x2(%ebx),%eax
   13d21:	8b 4d 08             	mov    0x8(%ebp),%ecx
   13d24:	89 07                	mov    %eax,(%edi)
   13d26:	8a 14 01             	mov    (%ecx,%eax,1),%dl
   13d29:	88 d1                	mov    %dl,%cl
   13d2b:	88 55 f1             	mov    %dl,-0xf(%ebp)
   13d2e:	83 e1 e0             	and    $0xffffffe0,%ecx
   13d31:	88 4d f2             	mov    %cl,-0xe(%ebp)
   13d34:	80 f9 c0             	cmp    $0xc0,%cl
   13d37:	0f 84 b3 00 00 00    	je     13df0 <str_decode_reverse+0x140>
   13d3d:	88 d1                	mov    %dl,%cl
   13d3f:	83 e1 f0             	and    $0xfffffff0,%ecx
   13d42:	80 f9 e0             	cmp    $0xe0,%cl
   13d45:	0f 84 65 01 00 00    	je     13eb0 <str_decode_reverse+0x200>
   13d4b:	88 d1                	mov    %dl,%cl
   13d4d:	83 e1 f8             	and    $0xfffffff8,%ecx
   13d50:	80 f9 f0             	cmp    $0xf0,%cl
   13d53:	0f 84 57 01 00 00    	je     13eb0 <str_decode_reverse+0x200>
   13d59:	83 e2 c0             	and    $0xffffffc0,%edx
   13d5c:	80 fa 80             	cmp    $0x80,%dl
   13d5f:	0f 85 80 00 00 00    	jne    13de5 <str_decode_reverse+0x135>
   13d65:	85 c0                	test   %eax,%eax
   13d67:	74 7c                	je     13de5 <str_decode_reverse+0x135>
   13d69:	8d 73 fd             	lea    -0x3(%ebx),%esi
   13d6c:	8b 4d 08             	mov    0x8(%ebp),%ecx
   13d6f:	89 37                	mov    %esi,(%edi)
   13d71:	8a 14 31             	mov    (%ecx,%esi,1),%dl
   13d74:	88 d1                	mov    %dl,%cl
   13d76:	88 55 f1             	mov    %dl,-0xf(%ebp)
   13d79:	83 e1 e0             	and    $0xffffffe0,%ecx
   13d7c:	88 4d f2             	mov    %cl,-0xe(%ebp)
   13d7f:	80 f9 c0             	cmp    $0xc0,%cl
   13d82:	0f 84 36 01 00 00    	je     13ebe <str_decode_reverse+0x20e>
   13d88:	88 d1                	mov    %dl,%cl
   13d8a:	83 e1 f0             	and    $0xfffffff0,%ecx
   13d8d:	80 f9 e0             	cmp    $0xe0,%cl
   13d90:	0f 84 21 01 00 00    	je     13eb7 <str_decode_reverse+0x207>
   13d96:	88 d1                	mov    %dl,%cl
   13d98:	83 e1 f8             	and    $0xfffffff8,%ecx
   13d9b:	80 f9 f0             	cmp    $0xf0,%cl
   13d9e:	0f 84 13 01 00 00    	je     13eb7 <str_decode_reverse+0x207>
   13da4:	83 e2 c0             	and    $0xffffffc0,%edx
   13da7:	80 fa 80             	cmp    $0x80,%dl
   13daa:	75 39                	jne    13de5 <str_decode_reverse+0x135>
   13dac:	85 f6                	test   %esi,%esi
   13dae:	74 35                	je     13de5 <str_decode_reverse+0x135>
   13db0:	83 eb 04             	sub    $0x4,%ebx
   13db3:	8b 45 08             	mov    0x8(%ebp),%eax
   13db6:	89 1f                	mov    %ebx,(%edi)
   13db8:	8a 14 18             	mov    (%eax,%ebx,1),%dl
   13dbb:	88 d1                	mov    %dl,%cl
   13dbd:	88 55 f1             	mov    %dl,-0xf(%ebp)
   13dc0:	83 e1 e0             	and    $0xffffffe0,%ecx
   13dc3:	88 4d f2             	mov    %cl,-0xe(%ebp)
   13dc6:	80 f9 c0             	cmp    $0xc0,%cl
   13dc9:	74 25                	je     13df0 <str_decode_reverse+0x140>
   13dcb:	88 d0                	mov    %dl,%al
   13dcd:	83 e0 f0             	and    $0xfffffff0,%eax
   13dd0:	3c e0                	cmp    $0xe0,%al
   13dd2:	0f 84 d8 00 00 00    	je     13eb0 <str_decode_reverse+0x200>
   13dd8:	88 d0                	mov    %dl,%al
   13dda:	83 e0 f8             	and    $0xfffffff8,%eax
   13ddd:	3c f0                	cmp    $0xf0,%al
   13ddf:	0f 84 cb 00 00 00    	je     13eb0 <str_decode_reverse+0x200>
   13de5:	b8 3f 00 00 00       	mov    $0x3f,%eax
   13dea:	5a                   	pop    %edx
   13deb:	5b                   	pop    %ebx
   13dec:	5e                   	pop    %esi
   13ded:	5f                   	pop    %edi
   13dee:	5d                   	pop    %ebp
   13def:	c3                   	ret    
   13df0:	89 f3                	mov    %esi,%ebx
   13df2:	c6 45 f2 c0          	movb   $0xc0,-0xe(%ebp)
   13df6:	31 c0                	xor    %eax,%eax
   13df8:	39 5d 10             	cmp    %ebx,0x10(%ebp)
   13dfb:	72 ed                	jb     13dea <str_decode_reverse+0x13a>
   13dfd:	84 d2                	test   %dl,%dl
   13dff:	78 69                	js     13e6a <str_decode_reverse+0x1ba>
   13e01:	bf 7f 00 00 00       	mov    $0x7f,%edi
   13e06:	31 d2                	xor    %edx,%edx
   13e08:	8d 34 1a             	lea    (%edx,%ebx,1),%esi
   13e0b:	b8 3f 00 00 00       	mov    $0x3f,%eax
   13e10:	39 75 10             	cmp    %esi,0x10(%ebp)
   13e13:	72 d5                	jb     13dea <str_decode_reverse+0x13a>
   13e15:	8a 4d f1             	mov    -0xf(%ebp),%cl
   13e18:	31 c0                	xor    %eax,%eax
   13e1a:	21 f9                	and    %edi,%ecx
   13e1c:	85 d2                	test   %edx,%edx
   13e1e:	88 c8                	mov    %cl,%al
   13e20:	74 c8                	je     13dea <str_decode_reverse+0x13a>
   13e22:	8b 4d 08             	mov    0x8(%ebp),%ecx
   13e25:	8d 73 01             	lea    0x1(%ebx),%esi
   13e28:	8a 0c 19             	mov    (%ecx,%ebx,1),%cl
   13e2b:	88 4d f3             	mov    %cl,-0xd(%ebp)
   13e2e:	83 e1 c0             	and    $0xffffffc0,%ecx
   13e31:	80 f9 80             	cmp    $0x80,%cl
   13e34:	75 af                	jne    13de5 <str_decode_reverse+0x135>
   13e36:	8b 7d 08             	mov    0x8(%ebp),%edi
   13e39:	8b 4d 08             	mov    0x8(%ebp),%ecx
   13e3c:	01 fb                	add    %edi,%ebx
   13e3e:	01 ce                	add    %ecx,%esi
   13e40:	01 da                	add    %ebx,%edx
   13e42:	8a 4d f3             	mov    -0xd(%ebp),%cl
   13e45:	eb 0e                	jmp    13e55 <str_decode_reverse+0x1a5>
   13e47:	90                   	nop
   13e48:	8a 0e                	mov    (%esi),%cl
   13e4a:	46                   	inc    %esi
   13e4b:	88 cb                	mov    %cl,%bl
   13e4d:	83 e3 c0             	and    $0xffffffc0,%ebx
   13e50:	80 fb 80             	cmp    $0x80,%bl
   13e53:	75 90                	jne    13de5 <str_decode_reverse+0x135>
   13e55:	89 c3                	mov    %eax,%ebx
   13e57:	89 c8                	mov    %ecx,%eax
   13e59:	c1 e3 06             	shl    $0x6,%ebx
   13e5c:	83 e0 3f             	and    $0x3f,%eax
   13e5f:	09 d8                	or     %ebx,%eax
   13e61:	39 d6                	cmp    %edx,%esi
   13e63:	75 e3                	jne    13e48 <str_decode_reverse+0x198>
   13e65:	e9 80 ff ff ff       	jmp    13dea <str_decode_reverse+0x13a>
   13e6a:	80 7d f2 c0          	cmpb   $0xc0,-0xe(%ebp)
   13e6e:	74 5e                	je     13ece <str_decode_reverse+0x21e>
   13e70:	8a 45 f1             	mov    -0xf(%ebp),%al
   13e73:	83 e0 f0             	and    $0xfffffff0,%eax
   13e76:	3c e0                	cmp    $0xe0,%al
   13e78:	74 63                	je     13edd <str_decode_reverse+0x22d>
   13e7a:	8a 55 f1             	mov    -0xf(%ebp),%dl
   13e7d:	b8 3f 00 00 00       	mov    $0x3f,%eax
   13e82:	83 e2 f8             	and    $0xfffffff8,%edx
   13e85:	80 fa f0             	cmp    $0xf0,%dl
   13e88:	0f 85 5c ff ff ff    	jne    13dea <str_decode_reverse+0x13a>
   13e8e:	bf 07 00 00 00       	mov    $0x7,%edi
   13e93:	ba 03 00 00 00       	mov    $0x3,%edx
   13e98:	e9 6b ff ff ff       	jmp    13e08 <str_decode_reverse+0x158>
   13e9d:	8d 76 00             	lea    0x0(%esi),%esi
   13ea0:	0f be 45 f1          	movsbl -0xf(%ebp),%eax
   13ea4:	e9 41 ff ff ff       	jmp    13dea <str_decode_reverse+0x13a>
   13ea9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   13eb0:	89 f3                	mov    %esi,%ebx
   13eb2:	e9 3f ff ff ff       	jmp    13df6 <str_decode_reverse+0x146>
   13eb7:	89 c3                	mov    %eax,%ebx
   13eb9:	e9 38 ff ff ff       	jmp    13df6 <str_decode_reverse+0x146>
   13ebe:	89 c3                	mov    %eax,%ebx
   13ec0:	e9 2d ff ff ff       	jmp    13df2 <str_decode_reverse+0x142>
   13ec5:	3b 5d 10             	cmp    0x10(%ebp),%ebx
   13ec8:	0f 87 1c ff ff ff    	ja     13dea <str_decode_reverse+0x13a>
   13ece:	bf 1f 00 00 00       	mov    $0x1f,%edi
   13ed3:	ba 01 00 00 00       	mov    $0x1,%edx
   13ed8:	e9 2b ff ff ff       	jmp    13e08 <str_decode_reverse+0x158>
   13edd:	bf 0f 00 00 00       	mov    $0xf,%edi
   13ee2:	ba 02 00 00 00       	mov    $0x2,%edx
   13ee7:	e9 1c ff ff ff       	jmp    13e08 <str_decode_reverse+0x158>
   13eec:	3b 5d 10             	cmp    0x10(%ebp),%ebx
   13eef:	0f 86 7b ff ff ff    	jbe    13e70 <str_decode_reverse+0x1c0>
   13ef5:	e9 f0 fe ff ff       	jmp    13dea <str_decode_reverse+0x13a>
   13efa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00013f00 <chr_encode>:
   13f00:	55                   	push   %ebp
   13f01:	89 e5                	mov    %esp,%ebp
   13f03:	57                   	push   %edi
   13f04:	56                   	push   %esi
   13f05:	53                   	push   %ebx
   13f06:	83 ec 24             	sub    $0x24,%esp
   13f09:	8b 7d 10             	mov    0x10(%ebp),%edi
   13f0c:	8b 1f                	mov    (%edi),%ebx
   13f0e:	3b 5d 14             	cmp    0x14(%ebp),%ebx
   13f11:	0f 83 c5 00 00 00    	jae    13fdc <chr_encode+0xdc>
   13f17:	8b 4d 08             	mov    0x8(%ebp),%ecx
   13f1a:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   13f1f:	81 f9 ff ff 10 00    	cmp    $0x10ffff,%ecx
   13f25:	77 34                	ja     13f5b <chr_encode+0x5b>
   13f27:	f7 c1 80 ff ff ff    	test   $0xffffff80,%ecx
   13f2d:	75 39                	jne    13f68 <chr_encode+0x68>
   13f2f:	c6 45 d0 00          	movb   $0x0,-0x30(%ebp)
   13f33:	c6 45 e0 7f          	movb   $0x7f,-0x20(%ebp)
   13f37:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
   13f3e:	8b 45 e0             	mov    -0x20(%ebp),%eax
   13f41:	8b 55 0c             	mov    0xc(%ebp),%edx
   13f44:	21 c1                	and    %eax,%ecx
   13f46:	8b 45 d0             	mov    -0x30(%ebp),%eax
   13f49:	09 c1                	or     %eax,%ecx
   13f4b:	88 0c 1a             	mov    %cl,(%edx,%ebx,1)
   13f4e:	8b 55 f0             	mov    -0x10(%ebp),%edx
   13f51:	8b 07                	mov    (%edi),%eax
   13f53:	8d 44 02 01          	lea    0x1(%edx,%eax,1),%eax
   13f57:	89 07                	mov    %eax,(%edi)
   13f59:	31 c0                	xor    %eax,%eax
   13f5b:	83 c4 24             	add    $0x24,%esp
   13f5e:	5b                   	pop    %ebx
   13f5f:	5e                   	pop    %esi
   13f60:	5f                   	pop    %edi
   13f61:	5d                   	pop    %ebp
   13f62:	c3                   	ret    
   13f63:	90                   	nop
   13f64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   13f68:	f7 c1 00 f8 ff ff    	test   $0xfffff800,%ecx
   13f6e:	74 58                	je     13fc8 <chr_encode+0xc8>
   13f70:	89 c8                	mov    %ecx,%eax
   13f72:	25 00 00 ff ff       	and    $0xffff0000,%eax
   13f77:	83 f8 01             	cmp    $0x1,%eax
   13f7a:	19 d2                	sbb    %edx,%edx
   13f7c:	83 e2 f0             	and    $0xfffffff0,%edx
   13f7f:	83 ea 10             	sub    $0x10,%edx
   13f82:	83 f8 01             	cmp    $0x1,%eax
   13f85:	88 55 d0             	mov    %dl,-0x30(%ebp)
   13f88:	19 d2                	sbb    %edx,%edx
   13f8a:	83 e2 08             	and    $0x8,%edx
   13f8d:	83 c2 07             	add    $0x7,%edx
   13f90:	83 f8 01             	cmp    $0x1,%eax
   13f93:	19 c0                	sbb    %eax,%eax
   13f95:	88 55 e0             	mov    %dl,-0x20(%ebp)
   13f98:	83 c0 03             	add    $0x3,%eax
   13f9b:	89 45 f0             	mov    %eax,-0x10(%ebp)
   13f9e:	01 d8                	add    %ebx,%eax
   13fa0:	39 45 14             	cmp    %eax,0x14(%ebp)
   13fa3:	76 37                	jbe    13fdc <chr_encode+0xdc>
   13fa5:	8b 45 f0             	mov    -0x10(%ebp),%eax
   13fa8:	89 ca                	mov    %ecx,%edx
   13faa:	8b 75 0c             	mov    0xc(%ebp),%esi
   13fad:	01 c6                	add    %eax,%esi
   13faf:	83 e2 3f             	and    $0x3f,%edx
   13fb2:	c1 e9 06             	shr    $0x6,%ecx
   13fb5:	80 ca 80             	or     $0x80,%dl
   13fb8:	88 14 1e             	mov    %dl,(%esi,%ebx,1)
   13fbb:	48                   	dec    %eax
   13fbc:	8b 1f                	mov    (%edi),%ebx
   13fbe:	75 e8                	jne    13fa8 <chr_encode+0xa8>
   13fc0:	e9 79 ff ff ff       	jmp    13f3e <chr_encode+0x3e>
   13fc5:	8d 76 00             	lea    0x0(%esi),%esi
   13fc8:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
   13fcf:	c6 45 d0 c0          	movb   $0xc0,-0x30(%ebp)
   13fd3:	c6 45 e0 1f          	movb   $0x1f,-0x20(%ebp)
   13fd7:	8b 45 f0             	mov    -0x10(%ebp),%eax
   13fda:	eb c2                	jmp    13f9e <chr_encode+0x9e>
   13fdc:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   13fe1:	e9 75 ff ff ff       	jmp    13f5b <chr_encode+0x5b>
   13fe6:	8d 76 00             	lea    0x0(%esi),%esi
   13fe9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00013ff0 <str_size>:
   13ff0:	55                   	push   %ebp
   13ff1:	31 c0                	xor    %eax,%eax
   13ff3:	89 e5                	mov    %esp,%ebp
   13ff5:	8b 55 08             	mov    0x8(%ebp),%edx
   13ff8:	80 3a 00             	cmpb   $0x0,(%edx)
   13ffb:	74 0a                	je     14007 <str_size+0x17>
   13ffd:	8d 76 00             	lea    0x0(%esi),%esi
   14000:	40                   	inc    %eax
   14001:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
   14005:	75 f9                	jne    14000 <str_size+0x10>
   14007:	5d                   	pop    %ebp
   14008:	c3                   	ret    
   14009:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00014010 <wstr_size>:
   14010:	55                   	push   %ebp
   14011:	31 c0                	xor    %eax,%eax
   14013:	89 e5                	mov    %esp,%ebp
   14015:	8b 55 08             	mov    0x8(%ebp),%edx
   14018:	8b 0a                	mov    (%edx),%ecx
   1401a:	85 c9                	test   %ecx,%ecx
   1401c:	74 0d                	je     1402b <wstr_size+0x1b>
   1401e:	66 90                	xchg   %ax,%ax
   14020:	40                   	inc    %eax
   14021:	8b 0c 82             	mov    (%edx,%eax,4),%ecx
   14024:	85 c9                	test   %ecx,%ecx
   14026:	75 f8                	jne    14020 <wstr_size+0x10>
   14028:	c1 e0 02             	shl    $0x2,%eax
   1402b:	5d                   	pop    %ebp
   1402c:	c3                   	ret    
   1402d:	8d 76 00             	lea    0x0(%esi),%esi

00014030 <str_lsize>:
   14030:	55                   	push   %ebp
   14031:	31 c0                	xor    %eax,%eax
   14033:	89 e5                	mov    %esp,%ebp
   14035:	57                   	push   %edi
   14036:	56                   	push   %esi
   14037:	53                   	push   %ebx
   14038:	83 ec 0c             	sub    $0xc,%esp
   1403b:	8b 7d 0c             	mov    0xc(%ebp),%edi
   1403e:	8b 5d 08             	mov    0x8(%ebp),%ebx
   14041:	85 ff                	test   %edi,%edi
   14043:	74 5b                	je     140a0 <str_lsize+0x70>
   14045:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
   1404c:	eb 17                	jmp    14065 <str_lsize+0x35>
   1404e:	66 90                	xchg   %ax,%ax
   14050:	89 f8                	mov    %edi,%eax
   14052:	85 d2                	test   %edx,%edx
   14054:	74 4a                	je     140a0 <str_lsize+0x70>
   14056:	8b 75 f0             	mov    -0x10(%ebp),%esi
   14059:	8b 55 0c             	mov    0xc(%ebp),%edx
   1405c:	46                   	inc    %esi
   1405d:	89 75 f0             	mov    %esi,-0x10(%ebp)
   14060:	39 55 f0             	cmp    %edx,-0x10(%ebp)
   14063:	74 3b                	je     140a0 <str_lsize+0x70>
   14065:	0f be 14 03          	movsbl (%ebx,%eax,1),%edx
   14069:	8d 78 01             	lea    0x1(%eax),%edi
   1406c:	84 d2                	test   %dl,%dl
   1406e:	79 e0                	jns    14050 <str_lsize+0x20>
   14070:	88 d1                	mov    %dl,%cl
   14072:	83 e1 e0             	and    $0xffffffe0,%ecx
   14075:	80 f9 c0             	cmp    $0xc0,%cl
   14078:	74 2e                	je     140a8 <str_lsize+0x78>
   1407a:	88 d1                	mov    %dl,%cl
   1407c:	83 e1 f0             	and    $0xfffffff0,%ecx
   1407f:	80 f9 e0             	cmp    $0xe0,%cl
   14082:	74 7d                	je     14101 <str_lsize+0xd1>
   14084:	88 d1                	mov    %dl,%cl
   14086:	83 e1 f8             	and    $0xfffffff8,%ecx
   14089:	80 f9 f0             	cmp    $0xf0,%cl
   1408c:	74 7c                	je     1410a <str_lsize+0xda>
   1408e:	8b 75 f0             	mov    -0x10(%ebp),%esi
   14091:	8b 55 0c             	mov    0xc(%ebp),%edx
   14094:	46                   	inc    %esi
   14095:	89 f8                	mov    %edi,%eax
   14097:	89 75 f0             	mov    %esi,-0x10(%ebp)
   1409a:	39 55 f0             	cmp    %edx,-0x10(%ebp)
   1409d:	75 c6                	jne    14065 <str_lsize+0x35>
   1409f:	90                   	nop
   140a0:	83 c4 0c             	add    $0xc,%esp
   140a3:	5b                   	pop    %ebx
   140a4:	5e                   	pop    %esi
   140a5:	5f                   	pop    %edi
   140a6:	5d                   	pop    %ebp
   140a7:	c3                   	ret    
   140a8:	b1 1f                	mov    $0x1f,%cl
   140aa:	be 01 00 00 00       	mov    $0x1,%esi
   140af:	21 ca                	and    %ecx,%edx
   140b1:	8a 0c 3b             	mov    (%ebx,%edi,1),%cl
   140b4:	88 4d ee             	mov    %cl,-0x12(%ebp)
   140b7:	83 e1 c0             	and    $0xffffffc0,%ecx
   140ba:	81 e2 ff 00 00 00    	and    $0xff,%edx
   140c0:	83 c0 02             	add    $0x2,%eax
   140c3:	80 f9 80             	cmp    $0x80,%cl
   140c6:	75 8e                	jne    14056 <str_lsize+0x26>
   140c8:	01 f7                	add    %esi,%edi
   140ca:	8a 4d ee             	mov    -0x12(%ebp),%cl
   140cd:	89 5d e8             	mov    %ebx,-0x18(%ebp)
   140d0:	89 d6                	mov    %edx,%esi
   140d2:	89 ca                	mov    %ecx,%edx
   140d4:	c1 e6 06             	shl    $0x6,%esi
   140d7:	83 e2 3f             	and    $0x3f,%edx
   140da:	09 f2                	or     %esi,%edx
   140dc:	8b 5d e8             	mov    -0x18(%ebp),%ebx
   140df:	39 f8                	cmp    %edi,%eax
   140e1:	0f 84 6b ff ff ff    	je     14052 <str_lsize+0x22>
   140e7:	8a 0c 03             	mov    (%ebx,%eax,1),%cl
   140ea:	be c0 ff ff ff       	mov    $0xffffffc0,%esi
   140ef:	21 ce                	and    %ecx,%esi
   140f1:	40                   	inc    %eax
   140f2:	89 f3                	mov    %esi,%ebx
   140f4:	80 fb 80             	cmp    $0x80,%bl
   140f7:	74 d7                	je     140d0 <str_lsize+0xa0>
   140f9:	8b 5d e8             	mov    -0x18(%ebp),%ebx
   140fc:	e9 55 ff ff ff       	jmp    14056 <str_lsize+0x26>
   14101:	b1 0f                	mov    $0xf,%cl
   14103:	be 02 00 00 00       	mov    $0x2,%esi
   14108:	eb a5                	jmp    140af <str_lsize+0x7f>
   1410a:	b1 07                	mov    $0x7,%cl
   1410c:	be 03 00 00 00       	mov    $0x3,%esi
   14111:	eb 9c                	jmp    140af <str_lsize+0x7f>
   14113:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   14119:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00014120 <str_nsize>:
   14120:	55                   	push   %ebp
   14121:	31 c0                	xor    %eax,%eax
   14123:	89 e5                	mov    %esp,%ebp
   14125:	8b 55 08             	mov    0x8(%ebp),%edx
   14128:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   1412b:	80 3a 00             	cmpb   $0x0,(%edx)
   1412e:	74 13                	je     14143 <str_nsize+0x23>
   14130:	85 c9                	test   %ecx,%ecx
   14132:	75 08                	jne    1413c <str_nsize+0x1c>
   14134:	eb 0d                	jmp    14143 <str_nsize+0x23>
   14136:	66 90                	xchg   %ax,%ax
   14138:	39 c8                	cmp    %ecx,%eax
   1413a:	74 07                	je     14143 <str_nsize+0x23>
   1413c:	40                   	inc    %eax
   1413d:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
   14141:	75 f5                	jne    14138 <str_nsize+0x18>
   14143:	5d                   	pop    %ebp
   14144:	c3                   	ret    
   14145:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14149:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00014150 <wstr_nsize>:
   14150:	55                   	push   %ebp
   14151:	89 e5                	mov    %esp,%ebp
   14153:	53                   	push   %ebx
   14154:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   14157:	8b 4d 08             	mov    0x8(%ebp),%ecx
   1415a:	83 e3 fc             	and    $0xfffffffc,%ebx
   1415d:	74 26                	je     14185 <wstr_nsize+0x35>
   1415f:	8b 01                	mov    (%ecx),%eax
   14161:	85 c0                	test   %eax,%eax
   14163:	74 20                	je     14185 <wstr_nsize+0x35>
   14165:	31 d2                	xor    %edx,%edx
   14167:	eb 0d                	jmp    14176 <wstr_nsize+0x26>
   14169:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14170:	83 3c 91 00          	cmpl   $0x0,(%ecx,%edx,4)
   14174:	74 0c                	je     14182 <wstr_nsize+0x32>
   14176:	42                   	inc    %edx
   14177:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
   1417e:	39 c3                	cmp    %eax,%ebx
   14180:	77 ee                	ja     14170 <wstr_nsize+0x20>
   14182:	5b                   	pop    %ebx
   14183:	5d                   	pop    %ebp
   14184:	c3                   	ret    
   14185:	31 c0                	xor    %eax,%eax
   14187:	eb f9                	jmp    14182 <wstr_nsize+0x32>
   14189:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00014190 <wstr_lsize>:
   14190:	55                   	push   %ebp
   14191:	89 e5                	mov    %esp,%ebp
   14193:	53                   	push   %ebx
   14194:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   14197:	8b 4d 08             	mov    0x8(%ebp),%ecx
   1419a:	c1 e3 02             	shl    $0x2,%ebx
   1419d:	74 26                	je     141c5 <wstr_lsize+0x35>
   1419f:	8b 01                	mov    (%ecx),%eax
   141a1:	85 c0                	test   %eax,%eax
   141a3:	74 20                	je     141c5 <wstr_lsize+0x35>
   141a5:	31 d2                	xor    %edx,%edx
   141a7:	eb 0d                	jmp    141b6 <wstr_lsize+0x26>
   141a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   141b0:	83 3c 91 00          	cmpl   $0x0,(%ecx,%edx,4)
   141b4:	74 0c                	je     141c2 <wstr_lsize+0x32>
   141b6:	42                   	inc    %edx
   141b7:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
   141be:	39 c3                	cmp    %eax,%ebx
   141c0:	77 ee                	ja     141b0 <wstr_lsize+0x20>
   141c2:	5b                   	pop    %ebx
   141c3:	5d                   	pop    %ebp
   141c4:	c3                   	ret    
   141c5:	31 c0                	xor    %eax,%eax
   141c7:	eb f9                	jmp    141c2 <wstr_lsize+0x32>
   141c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000141d0 <str_length>:
   141d0:	55                   	push   %ebp
   141d1:	89 e5                	mov    %esp,%ebp
   141d3:	57                   	push   %edi
   141d4:	56                   	push   %esi
   141d5:	53                   	push   %ebx
   141d6:	83 ec 0c             	sub    $0xc,%esp
   141d9:	31 ff                	xor    %edi,%edi
   141db:	8b 5d 08             	mov    0x8(%ebp),%ebx
   141de:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
   141e5:	eb 0e                	jmp    141f5 <str_length+0x25>
   141e7:	90                   	nop
   141e8:	85 c0                	test   %eax,%eax
   141ea:	74 3b                	je     14227 <str_length+0x57>
   141ec:	89 d7                	mov    %edx,%edi
   141ee:	8b 55 f0             	mov    -0x10(%ebp),%edx
   141f1:	42                   	inc    %edx
   141f2:	89 55 f0             	mov    %edx,-0x10(%ebp)
   141f5:	0f be 04 3b          	movsbl (%ebx,%edi,1),%eax
   141f9:	8d 57 01             	lea    0x1(%edi),%edx
   141fc:	84 c0                	test   %al,%al
   141fe:	79 e8                	jns    141e8 <str_length+0x18>
   14200:	88 c1                	mov    %al,%cl
   14202:	83 e1 e0             	and    $0xffffffe0,%ecx
   14205:	80 f9 c0             	cmp    $0xc0,%cl
   14208:	74 28                	je     14232 <str_length+0x62>
   1420a:	88 c1                	mov    %al,%cl
   1420c:	83 e1 f0             	and    $0xfffffff0,%ecx
   1420f:	80 f9 e0             	cmp    $0xe0,%cl
   14212:	74 7d                	je     14291 <str_length+0xc1>
   14214:	88 c1                	mov    %al,%cl
   14216:	83 e1 f8             	and    $0xfffffff8,%ecx
   14219:	80 f9 f0             	cmp    $0xf0,%cl
   1421c:	75 ce                	jne    141ec <str_length+0x1c>
   1421e:	b1 07                	mov    $0x7,%cl
   14220:	be 03 00 00 00       	mov    $0x3,%esi
   14225:	eb 12                	jmp    14239 <str_length+0x69>
   14227:	8b 45 f0             	mov    -0x10(%ebp),%eax
   1422a:	83 c4 0c             	add    $0xc,%esp
   1422d:	5b                   	pop    %ebx
   1422e:	5e                   	pop    %esi
   1422f:	5f                   	pop    %edi
   14230:	5d                   	pop    %ebp
   14231:	c3                   	ret    
   14232:	b1 1f                	mov    $0x1f,%cl
   14234:	be 01 00 00 00       	mov    $0x1,%esi
   14239:	21 c8                	and    %ecx,%eax
   1423b:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
   1423e:	83 c7 02             	add    $0x2,%edi
   14241:	88 4d eb             	mov    %cl,-0x15(%ebp)
   14244:	83 e1 c0             	and    $0xffffffc0,%ecx
   14247:	25 ff 00 00 00       	and    $0xff,%eax
   1424c:	89 7d ec             	mov    %edi,-0x14(%ebp)
   1424f:	80 f9 80             	cmp    $0x80,%cl
   14252:	75 46                	jne    1429a <str_length+0xca>
   14254:	8d 3c 32             	lea    (%edx,%esi,1),%edi
   14257:	8a 4d eb             	mov    -0x15(%ebp),%cl
   1425a:	8b 55 ec             	mov    -0x14(%ebp),%edx
   1425d:	89 5d ec             	mov    %ebx,-0x14(%ebp)
   14260:	89 c6                	mov    %eax,%esi
   14262:	89 c8                	mov    %ecx,%eax
   14264:	c1 e6 06             	shl    $0x6,%esi
   14267:	83 e0 3f             	and    $0x3f,%eax
   1426a:	09 f0                	or     %esi,%eax
   1426c:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   1426f:	39 fa                	cmp    %edi,%edx
   14271:	0f 84 71 ff ff ff    	je     141e8 <str_length+0x18>
   14277:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
   1427a:	be c0 ff ff ff       	mov    $0xffffffc0,%esi
   1427f:	21 ce                	and    %ecx,%esi
   14281:	42                   	inc    %edx
   14282:	89 f3                	mov    %esi,%ebx
   14284:	80 fb 80             	cmp    $0x80,%bl
   14287:	74 d7                	je     14260 <str_length+0x90>
   14289:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   1428c:	e9 5b ff ff ff       	jmp    141ec <str_length+0x1c>
   14291:	b1 0f                	mov    $0xf,%cl
   14293:	be 02 00 00 00       	mov    $0x2,%esi
   14298:	eb 9f                	jmp    14239 <str_length+0x69>
   1429a:	89 fa                	mov    %edi,%edx
   1429c:	e9 4b ff ff ff       	jmp    141ec <str_length+0x1c>
   142a1:	eb 0d                	jmp    142b0 <wstr_length>
   142a3:	90                   	nop
   142a4:	90                   	nop
   142a5:	90                   	nop
   142a6:	90                   	nop
   142a7:	90                   	nop
   142a8:	90                   	nop
   142a9:	90                   	nop
   142aa:	90                   	nop
   142ab:	90                   	nop
   142ac:	90                   	nop
   142ad:	90                   	nop
   142ae:	90                   	nop
   142af:	90                   	nop

000142b0 <wstr_length>:
   142b0:	55                   	push   %ebp
   142b1:	31 c0                	xor    %eax,%eax
   142b3:	89 e5                	mov    %esp,%ebp
   142b5:	8b 55 08             	mov    0x8(%ebp),%edx
   142b8:	8b 0a                	mov    (%edx),%ecx
   142ba:	85 c9                	test   %ecx,%ecx
   142bc:	74 0a                	je     142c8 <wstr_length+0x18>
   142be:	66 90                	xchg   %ax,%ax
   142c0:	40                   	inc    %eax
   142c1:	8b 0c 82             	mov    (%edx,%eax,4),%ecx
   142c4:	85 c9                	test   %ecx,%ecx
   142c6:	75 f8                	jne    142c0 <wstr_length+0x10>
   142c8:	5d                   	pop    %ebp
   142c9:	c3                   	ret    
   142ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000142d0 <str_nlength>:
   142d0:	55                   	push   %ebp
   142d1:	89 e5                	mov    %esp,%ebp
   142d3:	57                   	push   %edi
   142d4:	56                   	push   %esi
   142d5:	53                   	push   %ebx
   142d6:	57                   	push   %edi
   142d7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
   142de:	8b 45 0c             	mov    0xc(%ebp),%eax
   142e1:	8b 7d 08             	mov    0x8(%ebp),%edi
   142e4:	85 c0                	test   %eax,%eax
   142e6:	74 2c                	je     14314 <str_nlength+0x44>
   142e8:	bb 01 00 00 00       	mov    $0x1,%ebx
   142ed:	31 c0                	xor    %eax,%eax
   142ef:	90                   	nop
   142f0:	8a 04 07             	mov    (%edi,%eax,1),%al
   142f3:	84 c0                	test   %al,%al
   142f5:	78 79                	js     14370 <str_nlength+0xa0>
   142f7:	b2 7f                	mov    $0x7f,%dl
   142f9:	31 c9                	xor    %ecx,%ecx
   142fb:	8d 34 19             	lea    (%ecx,%ebx,1),%esi
   142fe:	39 75 0c             	cmp    %esi,0xc(%ebp)
   14301:	73 1d                	jae    14320 <str_nlength+0x50>
   14303:	89 d8                	mov    %ebx,%eax
   14305:	8b 75 f0             	mov    -0x10(%ebp),%esi
   14308:	8d 58 01             	lea    0x1(%eax),%ebx
   1430b:	46                   	inc    %esi
   1430c:	39 5d 0c             	cmp    %ebx,0xc(%ebp)
   1430f:	89 75 f0             	mov    %esi,-0x10(%ebp)
   14312:	73 dc                	jae    142f0 <str_nlength+0x20>
   14314:	8b 45 f0             	mov    -0x10(%ebp),%eax
   14317:	5b                   	pop    %ebx
   14318:	5b                   	pop    %ebx
   14319:	5e                   	pop    %esi
   1431a:	5f                   	pop    %edi
   1431b:	5d                   	pop    %ebp
   1431c:	c3                   	ret    
   1431d:	8d 76 00             	lea    0x0(%esi),%esi
   14320:	21 c2                	and    %eax,%edx
   14322:	81 e2 ff 00 00 00    	and    $0xff,%edx
   14328:	85 c9                	test   %ecx,%ecx
   1432a:	0f 84 94 00 00 00    	je     143c4 <str_nlength+0xf4>
   14330:	8a 0c 1f             	mov    (%edi,%ebx,1),%cl
   14333:	8d 43 01             	lea    0x1(%ebx),%eax
   14336:	88 cb                	mov    %cl,%bl
   14338:	83 e3 c0             	and    $0xffffffc0,%ebx
   1433b:	80 fb 80             	cmp    $0x80,%bl
   1433e:	74 16                	je     14356 <str_nlength+0x86>
   14340:	eb 5e                	jmp    143a0 <str_nlength+0xd0>
   14342:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   14348:	8a 0c 07             	mov    (%edi,%eax,1),%cl
   1434b:	40                   	inc    %eax
   1434c:	88 cb                	mov    %cl,%bl
   1434e:	83 e3 c0             	and    $0xffffffc0,%ebx
   14351:	80 fb 80             	cmp    $0x80,%bl
   14354:	75 4a                	jne    143a0 <str_nlength+0xd0>
   14356:	89 d3                	mov    %edx,%ebx
   14358:	89 ca                	mov    %ecx,%edx
   1435a:	c1 e3 06             	shl    $0x6,%ebx
   1435d:	83 e2 3f             	and    $0x3f,%edx
   14360:	09 da                	or     %ebx,%edx
   14362:	39 c6                	cmp    %eax,%esi
   14364:	75 e2                	jne    14348 <str_nlength+0x78>
   14366:	85 d2                	test   %edx,%edx
   14368:	75 9b                	jne    14305 <str_nlength+0x35>
   1436a:	eb a8                	jmp    14314 <str_nlength+0x44>
   1436c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14370:	88 c2                	mov    %al,%dl
   14372:	83 e2 e0             	and    $0xffffffe0,%edx
   14375:	80 fa c0             	cmp    $0xc0,%dl
   14378:	74 2e                	je     143a8 <str_nlength+0xd8>
   1437a:	88 c2                	mov    %al,%dl
   1437c:	83 e2 f0             	and    $0xfffffff0,%edx
   1437f:	80 fa e0             	cmp    $0xe0,%dl
   14382:	74 34                	je     143b8 <str_nlength+0xe8>
   14384:	88 c2                	mov    %al,%dl
   14386:	83 e2 f8             	and    $0xfffffff8,%edx
   14389:	80 fa f0             	cmp    $0xf0,%dl
   1438c:	0f 85 71 ff ff ff    	jne    14303 <str_nlength+0x33>
   14392:	b2 07                	mov    $0x7,%dl
   14394:	b9 03 00 00 00       	mov    $0x3,%ecx
   14399:	e9 5d ff ff ff       	jmp    142fb <str_nlength+0x2b>
   1439e:	66 90                	xchg   %ax,%ax
   143a0:	89 c3                	mov    %eax,%ebx
   143a2:	e9 5c ff ff ff       	jmp    14303 <str_nlength+0x33>
   143a7:	90                   	nop
   143a8:	b2 1f                	mov    $0x1f,%dl
   143aa:	b9 01 00 00 00       	mov    $0x1,%ecx
   143af:	e9 47 ff ff ff       	jmp    142fb <str_nlength+0x2b>
   143b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   143b8:	b2 0f                	mov    $0xf,%dl
   143ba:	b9 02 00 00 00       	mov    $0x2,%ecx
   143bf:	e9 37 ff ff ff       	jmp    142fb <str_nlength+0x2b>
   143c4:	89 d8                	mov    %ebx,%eax
   143c6:	eb 9e                	jmp    14366 <str_nlength+0x96>
   143c8:	90                   	nop
   143c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000143d0 <wstr_nlength>:
   143d0:	55                   	push   %ebp
   143d1:	31 c0                	xor    %eax,%eax
   143d3:	89 e5                	mov    %esp,%ebp
   143d5:	53                   	push   %ebx
   143d6:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   143d9:	8b 4d 08             	mov    0x8(%ebp),%ecx
   143dc:	83 e3 fc             	and    $0xfffffffc,%ebx
   143df:	74 22                	je     14403 <wstr_nlength+0x33>
   143e1:	8b 11                	mov    (%ecx),%edx
   143e3:	85 d2                	test   %edx,%edx
   143e5:	75 10                	jne    143f7 <wstr_nlength+0x27>
   143e7:	eb 1a                	jmp    14403 <wstr_nlength+0x33>
   143e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   143f0:	8b 14 81             	mov    (%ecx,%eax,4),%edx
   143f3:	85 d2                	test   %edx,%edx
   143f5:	74 0c                	je     14403 <wstr_nlength+0x33>
   143f7:	40                   	inc    %eax
   143f8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
   143ff:	39 da                	cmp    %ebx,%edx
   14401:	72 ed                	jb     143f0 <wstr_nlength+0x20>
   14403:	5b                   	pop    %ebx
   14404:	5d                   	pop    %ebp
   14405:	c3                   	ret    
   14406:	8d 76 00             	lea    0x0(%esi),%esi
   14409:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00014410 <chr_width>:
   14410:	55                   	push   %ebp
   14411:	b8 01 00 00 00       	mov    $0x1,%eax
   14416:	89 e5                	mov    %esp,%ebp
   14418:	5d                   	pop    %ebp
   14419:	c3                   	ret    
   1441a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00014420 <str_width>:
   14420:	55                   	push   %ebp
   14421:	89 e5                	mov    %esp,%ebp
   14423:	57                   	push   %edi
   14424:	56                   	push   %esi
   14425:	53                   	push   %ebx
   14426:	83 ec 0c             	sub    $0xc,%esp
   14429:	31 ff                	xor    %edi,%edi
   1442b:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1442e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
   14435:	eb 0e                	jmp    14445 <str_width+0x25>
   14437:	90                   	nop
   14438:	85 c0                	test   %eax,%eax
   1443a:	74 3b                	je     14477 <str_width+0x57>
   1443c:	8b 4d f0             	mov    -0x10(%ebp),%ecx
   1443f:	89 d7                	mov    %edx,%edi
   14441:	41                   	inc    %ecx
   14442:	89 4d f0             	mov    %ecx,-0x10(%ebp)
   14445:	0f be 04 3b          	movsbl (%ebx,%edi,1),%eax
   14449:	8d 57 01             	lea    0x1(%edi),%edx
   1444c:	84 c0                	test   %al,%al
   1444e:	79 e8                	jns    14438 <str_width+0x18>
   14450:	88 c1                	mov    %al,%cl
   14452:	83 e1 e0             	and    $0xffffffe0,%ecx
   14455:	80 f9 c0             	cmp    $0xc0,%cl
   14458:	74 28                	je     14482 <str_width+0x62>
   1445a:	88 c1                	mov    %al,%cl
   1445c:	83 e1 f0             	and    $0xfffffff0,%ecx
   1445f:	80 f9 e0             	cmp    $0xe0,%cl
   14462:	74 7d                	je     144e1 <str_width+0xc1>
   14464:	88 c1                	mov    %al,%cl
   14466:	83 e1 f8             	and    $0xfffffff8,%ecx
   14469:	80 f9 f0             	cmp    $0xf0,%cl
   1446c:	75 ce                	jne    1443c <str_width+0x1c>
   1446e:	b1 07                	mov    $0x7,%cl
   14470:	be 03 00 00 00       	mov    $0x3,%esi
   14475:	eb 12                	jmp    14489 <str_width+0x69>
   14477:	8b 45 f0             	mov    -0x10(%ebp),%eax
   1447a:	83 c4 0c             	add    $0xc,%esp
   1447d:	5b                   	pop    %ebx
   1447e:	5e                   	pop    %esi
   1447f:	5f                   	pop    %edi
   14480:	5d                   	pop    %ebp
   14481:	c3                   	ret    
   14482:	b1 1f                	mov    $0x1f,%cl
   14484:	be 01 00 00 00       	mov    $0x1,%esi
   14489:	21 c8                	and    %ecx,%eax
   1448b:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
   1448e:	83 c7 02             	add    $0x2,%edi
   14491:	88 4d eb             	mov    %cl,-0x15(%ebp)
   14494:	83 e1 c0             	and    $0xffffffc0,%ecx
   14497:	25 ff 00 00 00       	and    $0xff,%eax
   1449c:	89 7d ec             	mov    %edi,-0x14(%ebp)
   1449f:	80 f9 80             	cmp    $0x80,%cl
   144a2:	75 46                	jne    144ea <str_width+0xca>
   144a4:	8d 3c 32             	lea    (%edx,%esi,1),%edi
   144a7:	8a 4d eb             	mov    -0x15(%ebp),%cl
   144aa:	8b 55 ec             	mov    -0x14(%ebp),%edx
   144ad:	89 5d ec             	mov    %ebx,-0x14(%ebp)
   144b0:	89 c6                	mov    %eax,%esi
   144b2:	89 c8                	mov    %ecx,%eax
   144b4:	c1 e6 06             	shl    $0x6,%esi
   144b7:	83 e0 3f             	and    $0x3f,%eax
   144ba:	09 f0                	or     %esi,%eax
   144bc:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   144bf:	39 fa                	cmp    %edi,%edx
   144c1:	0f 84 71 ff ff ff    	je     14438 <str_width+0x18>
   144c7:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
   144ca:	be c0 ff ff ff       	mov    $0xffffffc0,%esi
   144cf:	21 ce                	and    %ecx,%esi
   144d1:	42                   	inc    %edx
   144d2:	89 f3                	mov    %esi,%ebx
   144d4:	80 fb 80             	cmp    $0x80,%bl
   144d7:	74 d7                	je     144b0 <str_width+0x90>
   144d9:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   144dc:	e9 5b ff ff ff       	jmp    1443c <str_width+0x1c>
   144e1:	b1 0f                	mov    $0xf,%cl
   144e3:	be 02 00 00 00       	mov    $0x2,%esi
   144e8:	eb 9f                	jmp    14489 <str_width+0x69>
   144ea:	89 fa                	mov    %edi,%edx
   144ec:	e9 4b ff ff ff       	jmp    1443c <str_width+0x1c>
   144f1:	eb 0d                	jmp    14500 <ascii_check>
   144f3:	90                   	nop
   144f4:	90                   	nop
   144f5:	90                   	nop
   144f6:	90                   	nop
   144f7:	90                   	nop
   144f8:	90                   	nop
   144f9:	90                   	nop
   144fa:	90                   	nop
   144fb:	90                   	nop
   144fc:	90                   	nop
   144fd:	90                   	nop
   144fe:	90                   	nop
   144ff:	90                   	nop

00014500 <ascii_check>:
   14500:	55                   	push   %ebp
   14501:	89 e5                	mov    %esp,%ebp
   14503:	83 7d 08 7f          	cmpl   $0x7f,0x8(%ebp)
   14507:	5d                   	pop    %ebp
   14508:	0f 96 c0             	setbe  %al
   1450b:	c3                   	ret    
   1450c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00014510 <chr_check>:
   14510:	55                   	push   %ebp
   14511:	89 e5                	mov    %esp,%ebp
   14513:	81 7d 08 ff ff 10 00 	cmpl   $0x10ffff,0x8(%ebp)
   1451a:	5d                   	pop    %ebp
   1451b:	0f 96 c0             	setbe  %al
   1451e:	c3                   	ret    
   1451f:	90                   	nop

00014520 <str_cmp>:
   14520:	55                   	push   %ebp
   14521:	31 c9                	xor    %ecx,%ecx
   14523:	89 e5                	mov    %esp,%ebp
   14525:	57                   	push   %edi
   14526:	56                   	push   %esi
   14527:	31 f6                	xor    %esi,%esi
   14529:	53                   	push   %ebx
   1452a:	89 f7                	mov    %esi,%edi
   1452c:	83 ec 0c             	sub    $0xc,%esp
   1452f:	eb 39                	jmp    1456a <str_cmp+0x4a>
   14531:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14538:	89 f1                	mov    %esi,%ecx
   1453a:	8b 45 0c             	mov    0xc(%ebp),%eax
   1453d:	8d 77 01             	lea    0x1(%edi),%esi
   14540:	8a 1c 38             	mov    (%eax,%edi,1),%bl
   14543:	84 db                	test   %bl,%bl
   14545:	78 69                	js     145b0 <str_cmp+0x90>
   14547:	0f be c3             	movsbl %bl,%eax
   1454a:	89 f7                	mov    %esi,%edi
   1454c:	39 c2                	cmp    %eax,%edx
   1454e:	0f 8c 92 00 00 00    	jl     145e6 <str_cmp+0xc6>
   14554:	0f 8f a2 01 00 00    	jg     146fc <str_cmp+0x1dc>
   1455a:	85 c0                	test   %eax,%eax
   1455c:	0f 84 a7 01 00 00    	je     14709 <str_cmp+0x1e9>
   14562:	85 d2                	test   %edx,%edx
   14564:	0f 84 9f 01 00 00    	je     14709 <str_cmp+0x1e9>
   1456a:	8b 45 08             	mov    0x8(%ebp),%eax
   1456d:	8d 71 01             	lea    0x1(%ecx),%esi
   14570:	0f be 14 08          	movsbl (%eax,%ecx,1),%edx
   14574:	84 d2                	test   %dl,%dl
   14576:	79 c0                	jns    14538 <str_cmp+0x18>
   14578:	88 d0                	mov    %dl,%al
   1457a:	83 e0 e0             	and    $0xffffffe0,%eax
   1457d:	3c c0                	cmp    $0xc0,%al
   1457f:	74 70                	je     145f1 <str_cmp+0xd1>
   14581:	88 d0                	mov    %dl,%al
   14583:	83 e0 f0             	and    $0xfffffff0,%eax
   14586:	3c e0                	cmp    $0xe0,%al
   14588:	0f 84 52 01 00 00    	je     146e0 <str_cmp+0x1c0>
   1458e:	88 d0                	mov    %dl,%al
   14590:	83 e0 f8             	and    $0xfffffff8,%eax
   14593:	3c f0                	cmp    $0xf0,%al
   14595:	0f 84 86 01 00 00    	je     14721 <str_cmp+0x201>
   1459b:	8b 45 0c             	mov    0xc(%ebp),%eax
   1459e:	89 f1                	mov    %esi,%ecx
   145a0:	ba 3f 00 00 00       	mov    $0x3f,%edx
   145a5:	8d 77 01             	lea    0x1(%edi),%esi
   145a8:	8a 1c 38             	mov    (%eax,%edi,1),%bl
   145ab:	84 db                	test   %bl,%bl
   145ad:	79 98                	jns    14547 <str_cmp+0x27>
   145af:	90                   	nop
   145b0:	88 d8                	mov    %bl,%al
   145b2:	83 e0 e0             	and    $0xffffffe0,%eax
   145b5:	3c c0                	cmp    $0xc0,%al
   145b7:	0f 84 a0 00 00 00    	je     1465d <str_cmp+0x13d>
   145bd:	88 d8                	mov    %bl,%al
   145bf:	83 e0 f0             	and    $0xfffffff0,%eax
   145c2:	3c e0                	cmp    $0xe0,%al
   145c4:	0f 84 24 01 00 00    	je     146ee <str_cmp+0x1ce>
   145ca:	88 d8                	mov    %bl,%al
   145cc:	83 e0 f8             	and    $0xfffffff8,%eax
   145cf:	3c f0                	cmp    $0xf0,%al
   145d1:	0f 84 3c 01 00 00    	je     14713 <str_cmp+0x1f3>
   145d7:	b8 3f 00 00 00       	mov    $0x3f,%eax
   145dc:	89 f7                	mov    %esi,%edi
   145de:	39 c2                	cmp    %eax,%edx
   145e0:	0f 8d 6e ff ff ff    	jge    14554 <str_cmp+0x34>
   145e6:	83 c4 0c             	add    $0xc,%esp
   145e9:	83 c8 ff             	or     $0xffffffff,%eax
   145ec:	5b                   	pop    %ebx
   145ed:	5e                   	pop    %esi
   145ee:	5f                   	pop    %edi
   145ef:	5d                   	pop    %ebp
   145f0:	c3                   	ret    
   145f1:	b0 1f                	mov    $0x1f,%al
   145f3:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
   145fa:	8b 5d 08             	mov    0x8(%ebp),%ebx
   145fd:	21 c2                	and    %eax,%edx
   145ff:	81 e2 ff 00 00 00    	and    $0xff,%edx
   14605:	83 c1 02             	add    $0x2,%ecx
   14608:	8a 04 33             	mov    (%ebx,%esi,1),%al
   1460b:	88 c3                	mov    %al,%bl
   1460d:	83 e3 c0             	and    $0xffffffc0,%ebx
   14610:	80 fb 80             	cmp    $0x80,%bl
   14613:	0f 85 20 01 00 00    	jne    14739 <str_cmp+0x219>
   14619:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   1461c:	89 7d f0             	mov    %edi,-0x10(%ebp)
   1461f:	01 de                	add    %ebx,%esi
   14621:	8b 7d 08             	mov    0x8(%ebp),%edi
   14624:	eb 10                	jmp    14636 <str_cmp+0x116>
   14626:	66 90                	xchg   %ax,%ax
   14628:	8a 04 0f             	mov    (%edi,%ecx,1),%al
   1462b:	41                   	inc    %ecx
   1462c:	88 c3                	mov    %al,%bl
   1462e:	83 e3 c0             	and    $0xffffffc0,%ebx
   14631:	80 fb 80             	cmp    $0x80,%bl
   14634:	75 1a                	jne    14650 <str_cmp+0x130>
   14636:	89 d3                	mov    %edx,%ebx
   14638:	89 c2                	mov    %eax,%edx
   1463a:	c1 e3 06             	shl    $0x6,%ebx
   1463d:	83 e2 3f             	and    $0x3f,%edx
   14640:	09 da                	or     %ebx,%edx
   14642:	39 f1                	cmp    %esi,%ecx
   14644:	75 e2                	jne    14628 <str_cmp+0x108>
   14646:	8b 7d f0             	mov    -0x10(%ebp),%edi
   14649:	e9 ec fe ff ff       	jmp    1453a <str_cmp+0x1a>
   1464e:	66 90                	xchg   %ax,%ax
   14650:	8b 7d f0             	mov    -0x10(%ebp),%edi
   14653:	ba 3f 00 00 00       	mov    $0x3f,%edx
   14658:	e9 dd fe ff ff       	jmp    1453a <str_cmp+0x1a>
   1465d:	b0 1f                	mov    $0x1f,%al
   1465f:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
   14666:	21 c3                	and    %eax,%ebx
   14668:	31 c0                	xor    %eax,%eax
   1466a:	88 d8                	mov    %bl,%al
   1466c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   1466f:	83 c7 02             	add    $0x2,%edi
   14672:	8a 1c 33             	mov    (%ebx,%esi,1),%bl
   14675:	88 5d eb             	mov    %bl,-0x15(%ebp)
   14678:	83 e3 c0             	and    $0xffffffc0,%ebx
   1467b:	80 fb 80             	cmp    $0x80,%bl
   1467e:	0f 85 ab 00 00 00    	jne    1472f <str_cmp+0x20f>
   14684:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   14687:	89 4d f0             	mov    %ecx,-0x10(%ebp)
   1468a:	01 de                	add    %ebx,%esi
   1468c:	89 55 ec             	mov    %edx,-0x14(%ebp)
   1468f:	89 f1                	mov    %esi,%ecx
   14691:	8a 5d eb             	mov    -0x15(%ebp),%bl
   14694:	8b 75 0c             	mov    0xc(%ebp),%esi
   14697:	eb 15                	jmp    146ae <str_cmp+0x18e>
   14699:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   146a0:	8a 1c 3e             	mov    (%esi,%edi,1),%bl
   146a3:	47                   	inc    %edi
   146a4:	88 da                	mov    %bl,%dl
   146a6:	83 e2 c0             	and    $0xffffffc0,%edx
   146a9:	80 fa 80             	cmp    $0x80,%dl
   146ac:	75 22                	jne    146d0 <str_cmp+0x1b0>
   146ae:	89 c2                	mov    %eax,%edx
   146b0:	89 d8                	mov    %ebx,%eax
   146b2:	c1 e2 06             	shl    $0x6,%edx
   146b5:	83 e0 3f             	and    $0x3f,%eax
   146b8:	09 d0                	or     %edx,%eax
   146ba:	39 cf                	cmp    %ecx,%edi
   146bc:	75 e2                	jne    146a0 <str_cmp+0x180>
   146be:	8b 4d f0             	mov    -0x10(%ebp),%ecx
   146c1:	8b 55 ec             	mov    -0x14(%ebp),%edx
   146c4:	e9 83 fe ff ff       	jmp    1454c <str_cmp+0x2c>
   146c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   146d0:	8b 4d f0             	mov    -0x10(%ebp),%ecx
   146d3:	8b 55 ec             	mov    -0x14(%ebp),%edx
   146d6:	b8 3f 00 00 00       	mov    $0x3f,%eax
   146db:	e9 6c fe ff ff       	jmp    1454c <str_cmp+0x2c>
   146e0:	b0 0f                	mov    $0xf,%al
   146e2:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
   146e9:	e9 0c ff ff ff       	jmp    145fa <str_cmp+0xda>
   146ee:	b0 0f                	mov    $0xf,%al
   146f0:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
   146f7:	e9 6a ff ff ff       	jmp    14666 <str_cmp+0x146>
   146fc:	83 c4 0c             	add    $0xc,%esp
   146ff:	b8 01 00 00 00       	mov    $0x1,%eax
   14704:	5b                   	pop    %ebx
   14705:	5e                   	pop    %esi
   14706:	5f                   	pop    %edi
   14707:	5d                   	pop    %ebp
   14708:	c3                   	ret    
   14709:	83 c4 0c             	add    $0xc,%esp
   1470c:	31 c0                	xor    %eax,%eax
   1470e:	5b                   	pop    %ebx
   1470f:	5e                   	pop    %esi
   14710:	5f                   	pop    %edi
   14711:	5d                   	pop    %ebp
   14712:	c3                   	ret    
   14713:	b0 07                	mov    $0x7,%al
   14715:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
   1471c:	e9 45 ff ff ff       	jmp    14666 <str_cmp+0x146>
   14721:	b0 07                	mov    $0x7,%al
   14723:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
   1472a:	e9 cb fe ff ff       	jmp    145fa <str_cmp+0xda>
   1472f:	b8 3f 00 00 00       	mov    $0x3f,%eax
   14734:	e9 13 fe ff ff       	jmp    1454c <str_cmp+0x2c>
   14739:	ba 3f 00 00 00       	mov    $0x3f,%edx
   1473e:	e9 f7 fd ff ff       	jmp    1453a <str_cmp+0x1a>
   14743:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   14749:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00014750 <str_lcmp>:
   14750:	55                   	push   %ebp
   14751:	89 e5                	mov    %esp,%ebp
   14753:	57                   	push   %edi
   14754:	56                   	push   %esi
   14755:	53                   	push   %ebx
   14756:	83 ec 10             	sub    $0x10,%esp
   14759:	8b 75 10             	mov    0x10(%ebp),%esi
   1475c:	85 f6                	test   %esi,%esi
   1475e:	0f 84 ed 01 00 00    	je     14951 <str_lcmp+0x201>
   14764:	31 ff                	xor    %edi,%edi
   14766:	31 f6                	xor    %esi,%esi
   14768:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
   1476f:	eb 4e                	jmp    147bf <str_lcmp+0x6f>
   14771:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14778:	89 de                	mov    %ebx,%esi
   1477a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   1477d:	8d 5f 01             	lea    0x1(%edi),%ebx
   14780:	0f be 04 39          	movsbl (%ecx,%edi,1),%eax
   14784:	84 c0                	test   %al,%al
   14786:	0f 88 7c 00 00 00    	js     14808 <str_lcmp+0xb8>
   1478c:	89 df                	mov    %ebx,%edi
   1478e:	39 c2                	cmp    %eax,%edx
   14790:	0f 8c ab 00 00 00    	jl     14841 <str_lcmp+0xf1>
   14796:	0f 8f db 01 00 00    	jg     14977 <str_lcmp+0x227>
   1479c:	85 c0                	test   %eax,%eax
   1479e:	0f 84 ad 01 00 00    	je     14951 <str_lcmp+0x201>
   147a4:	85 d2                	test   %edx,%edx
   147a6:	0f 84 a5 01 00 00    	je     14951 <str_lcmp+0x201>
   147ac:	8b 5d f0             	mov    -0x10(%ebp),%ebx
   147af:	8b 45 10             	mov    0x10(%ebp),%eax
   147b2:	43                   	inc    %ebx
   147b3:	89 5d f0             	mov    %ebx,-0x10(%ebp)
   147b6:	39 45 f0             	cmp    %eax,-0x10(%ebp)
   147b9:	0f 84 92 01 00 00    	je     14951 <str_lcmp+0x201>
   147bf:	8b 45 08             	mov    0x8(%ebp),%eax
   147c2:	8d 5e 01             	lea    0x1(%esi),%ebx
   147c5:	0f be 14 30          	movsbl (%eax,%esi,1),%edx
   147c9:	84 d2                	test   %dl,%dl
   147cb:	79 ab                	jns    14778 <str_lcmp+0x28>
   147cd:	88 d0                	mov    %dl,%al
   147cf:	83 e0 e0             	and    $0xffffffe0,%eax
   147d2:	3c c0                	cmp    $0xc0,%al
   147d4:	74 76                	je     1484c <str_lcmp+0xfc>
   147d6:	88 d0                	mov    %dl,%al
   147d8:	83 e0 f0             	and    $0xfffffff0,%eax
   147db:	3c e0                	cmp    $0xe0,%al
   147dd:	0f 84 60 01 00 00    	je     14943 <str_lcmp+0x1f3>
   147e3:	88 d0                	mov    %dl,%al
   147e5:	83 e0 f8             	and    $0xfffffff8,%eax
   147e8:	3c f0                	cmp    $0xf0,%al
   147ea:	0f 84 6b 01 00 00    	je     1495b <str_lcmp+0x20b>
   147f0:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   147f3:	89 de                	mov    %ebx,%esi
   147f5:	ba 3f 00 00 00       	mov    $0x3f,%edx
   147fa:	8d 5f 01             	lea    0x1(%edi),%ebx
   147fd:	0f be 04 39          	movsbl (%ecx,%edi,1),%eax
   14801:	84 c0                	test   %al,%al
   14803:	79 87                	jns    1478c <str_lcmp+0x3c>
   14805:	8d 76 00             	lea    0x0(%esi),%esi
   14808:	88 c1                	mov    %al,%cl
   1480a:	83 e1 e0             	and    $0xffffffe0,%ecx
   1480d:	80 f9 c0             	cmp    $0xc0,%cl
   14810:	0f 84 a7 00 00 00    	je     148bd <str_lcmp+0x16d>
   14816:	88 c1                	mov    %al,%cl
   14818:	83 e1 f0             	and    $0xfffffff0,%ecx
   1481b:	80 f9 e0             	cmp    $0xe0,%cl
   1481e:	0f 84 14 01 00 00    	je     14938 <str_lcmp+0x1e8>
   14824:	88 c1                	mov    %al,%cl
   14826:	83 e1 f8             	and    $0xfffffff8,%ecx
   14829:	80 f9 f0             	cmp    $0xf0,%cl
   1482c:	0f 84 37 01 00 00    	je     14969 <str_lcmp+0x219>
   14832:	b8 3f 00 00 00       	mov    $0x3f,%eax
   14837:	89 df                	mov    %ebx,%edi
   14839:	39 c2                	cmp    %eax,%edx
   1483b:	0f 8d 55 ff ff ff    	jge    14796 <str_lcmp+0x46>
   14841:	83 c4 10             	add    $0x10,%esp
   14844:	83 c8 ff             	or     $0xffffffff,%eax
   14847:	5b                   	pop    %ebx
   14848:	5e                   	pop    %esi
   14849:	5f                   	pop    %edi
   1484a:	5d                   	pop    %ebp
   1484b:	c3                   	ret    
   1484c:	b0 1f                	mov    $0x1f,%al
   1484e:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
   14855:	8b 4d 08             	mov    0x8(%ebp),%ecx
   14858:	21 c2                	and    %eax,%edx
   1485a:	81 e2 ff 00 00 00    	and    $0xff,%edx
   14860:	83 c6 02             	add    $0x2,%esi
   14863:	8a 04 19             	mov    (%ecx,%ebx,1),%al
   14866:	88 c1                	mov    %al,%cl
   14868:	83 e1 c0             	and    $0xffffffc0,%ecx
   1486b:	80 f9 80             	cmp    $0x80,%cl
   1486e:	0f 85 10 01 00 00    	jne    14984 <str_lcmp+0x234>
   14874:	8b 4d e8             	mov    -0x18(%ebp),%ecx
   14877:	89 7d ec             	mov    %edi,-0x14(%ebp)
   1487a:	01 cb                	add    %ecx,%ebx
   1487c:	8b 7d 08             	mov    0x8(%ebp),%edi
   1487f:	eb 15                	jmp    14896 <str_lcmp+0x146>
   14881:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14888:	8a 04 37             	mov    (%edi,%esi,1),%al
   1488b:	46                   	inc    %esi
   1488c:	88 c1                	mov    %al,%cl
   1488e:	83 e1 c0             	and    $0xffffffc0,%ecx
   14891:	80 f9 80             	cmp    $0x80,%cl
   14894:	75 1a                	jne    148b0 <str_lcmp+0x160>
   14896:	89 d1                	mov    %edx,%ecx
   14898:	89 c2                	mov    %eax,%edx
   1489a:	c1 e1 06             	shl    $0x6,%ecx
   1489d:	83 e2 3f             	and    $0x3f,%edx
   148a0:	09 ca                	or     %ecx,%edx
   148a2:	39 de                	cmp    %ebx,%esi
   148a4:	75 e2                	jne    14888 <str_lcmp+0x138>
   148a6:	8b 7d ec             	mov    -0x14(%ebp),%edi
   148a9:	e9 cc fe ff ff       	jmp    1477a <str_lcmp+0x2a>
   148ae:	66 90                	xchg   %ax,%ax
   148b0:	8b 7d ec             	mov    -0x14(%ebp),%edi
   148b3:	ba 3f 00 00 00       	mov    $0x3f,%edx
   148b8:	e9 bd fe ff ff       	jmp    1477a <str_lcmp+0x2a>
   148bd:	b1 1f                	mov    $0x1f,%cl
   148bf:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
   148c6:	21 c8                	and    %ecx,%eax
   148c8:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   148cb:	25 ff 00 00 00       	and    $0xff,%eax
   148d0:	83 c7 02             	add    $0x2,%edi
   148d3:	8a 0c 19             	mov    (%ecx,%ebx,1),%cl
   148d6:	88 4d e7             	mov    %cl,-0x19(%ebp)
   148d9:	83 e1 c0             	and    $0xffffffc0,%ecx
   148dc:	80 f9 80             	cmp    $0x80,%cl
   148df:	0f 85 a9 00 00 00    	jne    1498e <str_lcmp+0x23e>
   148e5:	8b 4d e8             	mov    -0x18(%ebp),%ecx
   148e8:	89 75 ec             	mov    %esi,-0x14(%ebp)
   148eb:	01 cb                	add    %ecx,%ebx
   148ed:	89 55 e8             	mov    %edx,-0x18(%ebp)
   148f0:	8a 4d e7             	mov    -0x19(%ebp),%cl
   148f3:	8b 75 0c             	mov    0xc(%ebp),%esi
   148f6:	eb 0e                	jmp    14906 <str_lcmp+0x1b6>
   148f8:	8a 0c 3e             	mov    (%esi,%edi,1),%cl
   148fb:	47                   	inc    %edi
   148fc:	88 ca                	mov    %cl,%dl
   148fe:	83 e2 c0             	and    $0xffffffc0,%edx
   14901:	80 fa 80             	cmp    $0x80,%dl
   14904:	75 22                	jne    14928 <str_lcmp+0x1d8>
   14906:	89 c2                	mov    %eax,%edx
   14908:	89 c8                	mov    %ecx,%eax
   1490a:	c1 e2 06             	shl    $0x6,%edx
   1490d:	83 e0 3f             	and    $0x3f,%eax
   14910:	09 d0                	or     %edx,%eax
   14912:	39 df                	cmp    %ebx,%edi
   14914:	75 e2                	jne    148f8 <str_lcmp+0x1a8>
   14916:	8b 75 ec             	mov    -0x14(%ebp),%esi
   14919:	8b 55 e8             	mov    -0x18(%ebp),%edx
   1491c:	e9 6d fe ff ff       	jmp    1478e <str_lcmp+0x3e>
   14921:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14928:	8b 75 ec             	mov    -0x14(%ebp),%esi
   1492b:	8b 55 e8             	mov    -0x18(%ebp),%edx
   1492e:	b8 3f 00 00 00       	mov    $0x3f,%eax
   14933:	e9 56 fe ff ff       	jmp    1478e <str_lcmp+0x3e>
   14938:	b1 0f                	mov    $0xf,%cl
   1493a:	c7 45 e8 02 00 00 00 	movl   $0x2,-0x18(%ebp)
   14941:	eb 83                	jmp    148c6 <str_lcmp+0x176>
   14943:	b0 0f                	mov    $0xf,%al
   14945:	c7 45 e8 02 00 00 00 	movl   $0x2,-0x18(%ebp)
   1494c:	e9 04 ff ff ff       	jmp    14855 <str_lcmp+0x105>
   14951:	83 c4 10             	add    $0x10,%esp
   14954:	31 c0                	xor    %eax,%eax
   14956:	5b                   	pop    %ebx
   14957:	5e                   	pop    %esi
   14958:	5f                   	pop    %edi
   14959:	5d                   	pop    %ebp
   1495a:	c3                   	ret    
   1495b:	b0 07                	mov    $0x7,%al
   1495d:	c7 45 e8 03 00 00 00 	movl   $0x3,-0x18(%ebp)
   14964:	e9 ec fe ff ff       	jmp    14855 <str_lcmp+0x105>
   14969:	b1 07                	mov    $0x7,%cl
   1496b:	c7 45 e8 03 00 00 00 	movl   $0x3,-0x18(%ebp)
   14972:	e9 4f ff ff ff       	jmp    148c6 <str_lcmp+0x176>
   14977:	83 c4 10             	add    $0x10,%esp
   1497a:	b8 01 00 00 00       	mov    $0x1,%eax
   1497f:	5b                   	pop    %ebx
   14980:	5e                   	pop    %esi
   14981:	5f                   	pop    %edi
   14982:	5d                   	pop    %ebp
   14983:	c3                   	ret    
   14984:	ba 3f 00 00 00       	mov    $0x3f,%edx
   14989:	e9 ec fd ff ff       	jmp    1477a <str_lcmp+0x2a>
   1498e:	b8 3f 00 00 00       	mov    $0x3f,%eax
   14993:	e9 f6 fd ff ff       	jmp    1478e <str_lcmp+0x3e>
   14998:	90                   	nop
   14999:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000149a0 <str_test_prefix>:
   149a0:	55                   	push   %ebp
   149a1:	31 c9                	xor    %ecx,%ecx
   149a3:	89 e5                	mov    %esp,%ebp
   149a5:	57                   	push   %edi
   149a6:	56                   	push   %esi
   149a7:	31 f6                	xor    %esi,%esi
   149a9:	53                   	push   %ebx
   149aa:	89 f7                	mov    %esi,%edi
   149ac:	83 ec 0c             	sub    $0xc,%esp
   149af:	eb 27                	jmp    149d8 <str_test_prefix+0x38>
   149b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   149b8:	89 f1                	mov    %esi,%ecx
   149ba:	8b 45 0c             	mov    0xc(%ebp),%eax
   149bd:	8d 77 01             	lea    0x1(%edi),%esi
   149c0:	8a 1c 38             	mov    (%eax,%edi,1),%bl
   149c3:	84 db                	test   %bl,%bl
   149c5:	78 59                	js     14a20 <str_test_prefix+0x80>
   149c7:	0f be c3             	movsbl %bl,%eax
   149ca:	89 f7                	mov    %esi,%edi
   149cc:	85 c0                	test   %eax,%eax
   149ce:	0f 84 68 01 00 00    	je     14b3c <str_test_prefix+0x19c>
   149d4:	39 c2                	cmp    %eax,%edx
   149d6:	75 7a                	jne    14a52 <str_test_prefix+0xb2>
   149d8:	8b 45 08             	mov    0x8(%ebp),%eax
   149db:	8d 71 01             	lea    0x1(%ecx),%esi
   149de:	0f be 14 08          	movsbl (%eax,%ecx,1),%edx
   149e2:	84 d2                	test   %dl,%dl
   149e4:	79 d2                	jns    149b8 <str_test_prefix+0x18>
   149e6:	88 d0                	mov    %dl,%al
   149e8:	83 e0 e0             	and    $0xffffffe0,%eax
   149eb:	3c c0                	cmp    $0xc0,%al
   149ed:	74 6d                	je     14a5c <str_test_prefix+0xbc>
   149ef:	88 d0                	mov    %dl,%al
   149f1:	83 e0 f0             	and    $0xfffffff0,%eax
   149f4:	3c e0                	cmp    $0xe0,%al
   149f6:	0f 84 57 01 00 00    	je     14b53 <str_test_prefix+0x1b3>
   149fc:	88 d0                	mov    %dl,%al
   149fe:	83 e0 f8             	and    $0xfffffff8,%eax
   14a01:	3c f0                	cmp    $0xf0,%al
   14a03:	0f 84 66 01 00 00    	je     14b6f <str_test_prefix+0x1cf>
   14a09:	8b 45 0c             	mov    0xc(%ebp),%eax
   14a0c:	89 f1                	mov    %esi,%ecx
   14a0e:	ba 3f 00 00 00       	mov    $0x3f,%edx
   14a13:	8d 77 01             	lea    0x1(%edi),%esi
   14a16:	8a 1c 38             	mov    (%eax,%edi,1),%bl
   14a19:	84 db                	test   %bl,%bl
   14a1b:	79 aa                	jns    149c7 <str_test_prefix+0x27>
   14a1d:	8d 76 00             	lea    0x0(%esi),%esi
   14a20:	88 d8                	mov    %bl,%al
   14a22:	83 e0 e0             	and    $0xffffffe0,%eax
   14a25:	3c c0                	cmp    $0xc0,%al
   14a27:	0f 84 a0 00 00 00    	je     14acd <str_test_prefix+0x12d>
   14a2d:	88 d8                	mov    %bl,%al
   14a2f:	83 e0 f0             	and    $0xfffffff0,%eax
   14a32:	3c e0                	cmp    $0xe0,%al
   14a34:	0f 84 27 01 00 00    	je     14b61 <str_test_prefix+0x1c1>
   14a3a:	88 d8                	mov    %bl,%al
   14a3c:	83 e0 f8             	and    $0xfffffff8,%eax
   14a3f:	3c f0                	cmp    $0xf0,%al
   14a41:	0f 84 36 01 00 00    	je     14b7d <str_test_prefix+0x1dd>
   14a47:	89 f7                	mov    %esi,%edi
   14a49:	b8 3f 00 00 00       	mov    $0x3f,%eax
   14a4e:	39 c2                	cmp    %eax,%edx
   14a50:	74 86                	je     149d8 <str_test_prefix+0x38>
   14a52:	83 c4 0c             	add    $0xc,%esp
   14a55:	31 c0                	xor    %eax,%eax
   14a57:	5b                   	pop    %ebx
   14a58:	5e                   	pop    %esi
   14a59:	5f                   	pop    %edi
   14a5a:	5d                   	pop    %ebp
   14a5b:	c3                   	ret    
   14a5c:	b0 1f                	mov    $0x1f,%al
   14a5e:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
   14a65:	8b 5d 08             	mov    0x8(%ebp),%ebx
   14a68:	21 c2                	and    %eax,%edx
   14a6a:	81 e2 ff 00 00 00    	and    $0xff,%edx
   14a70:	83 c1 02             	add    $0x2,%ecx
   14a73:	8a 04 33             	mov    (%ebx,%esi,1),%al
   14a76:	88 c3                	mov    %al,%bl
   14a78:	83 e3 c0             	and    $0xffffffc0,%ebx
   14a7b:	80 fb 80             	cmp    $0x80,%bl
   14a7e:	0f 85 07 01 00 00    	jne    14b8b <str_test_prefix+0x1eb>
   14a84:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   14a87:	89 7d f0             	mov    %edi,-0x10(%ebp)
   14a8a:	01 de                	add    %ebx,%esi
   14a8c:	8b 7d 08             	mov    0x8(%ebp),%edi
   14a8f:	eb 15                	jmp    14aa6 <str_test_prefix+0x106>
   14a91:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14a98:	8a 04 0f             	mov    (%edi,%ecx,1),%al
   14a9b:	41                   	inc    %ecx
   14a9c:	88 c3                	mov    %al,%bl
   14a9e:	83 e3 c0             	and    $0xffffffc0,%ebx
   14aa1:	80 fb 80             	cmp    $0x80,%bl
   14aa4:	75 1a                	jne    14ac0 <str_test_prefix+0x120>
   14aa6:	89 d3                	mov    %edx,%ebx
   14aa8:	89 c2                	mov    %eax,%edx
   14aaa:	c1 e3 06             	shl    $0x6,%ebx
   14aad:	83 e2 3f             	and    $0x3f,%edx
   14ab0:	09 da                	or     %ebx,%edx
   14ab2:	39 f1                	cmp    %esi,%ecx
   14ab4:	75 e2                	jne    14a98 <str_test_prefix+0xf8>
   14ab6:	8b 7d f0             	mov    -0x10(%ebp),%edi
   14ab9:	e9 fc fe ff ff       	jmp    149ba <str_test_prefix+0x1a>
   14abe:	66 90                	xchg   %ax,%ax
   14ac0:	8b 7d f0             	mov    -0x10(%ebp),%edi
   14ac3:	ba 3f 00 00 00       	mov    $0x3f,%edx
   14ac8:	e9 ed fe ff ff       	jmp    149ba <str_test_prefix+0x1a>
   14acd:	b0 1f                	mov    $0x1f,%al
   14acf:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
   14ad6:	21 c3                	and    %eax,%ebx
   14ad8:	31 c0                	xor    %eax,%eax
   14ada:	88 d8                	mov    %bl,%al
   14adc:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   14adf:	83 c7 02             	add    $0x2,%edi
   14ae2:	8a 1c 33             	mov    (%ebx,%esi,1),%bl
   14ae5:	88 5d eb             	mov    %bl,-0x15(%ebp)
   14ae8:	83 e3 c0             	and    $0xffffffc0,%ebx
   14aeb:	80 fb 80             	cmp    $0x80,%bl
   14aee:	0f 85 55 ff ff ff    	jne    14a49 <str_test_prefix+0xa9>
   14af4:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   14af7:	89 4d f0             	mov    %ecx,-0x10(%ebp)
   14afa:	01 de                	add    %ebx,%esi
   14afc:	89 55 ec             	mov    %edx,-0x14(%ebp)
   14aff:	89 f1                	mov    %esi,%ecx
   14b01:	8a 5d eb             	mov    -0x15(%ebp),%bl
   14b04:	8b 75 0c             	mov    0xc(%ebp),%esi
   14b07:	eb 15                	jmp    14b1e <str_test_prefix+0x17e>
   14b09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14b10:	8a 1c 3e             	mov    (%esi,%edi,1),%bl
   14b13:	47                   	inc    %edi
   14b14:	88 da                	mov    %bl,%dl
   14b16:	83 e2 c0             	and    $0xffffffc0,%edx
   14b19:	80 fa 80             	cmp    $0x80,%dl
   14b1c:	75 2a                	jne    14b48 <str_test_prefix+0x1a8>
   14b1e:	89 c2                	mov    %eax,%edx
   14b20:	89 d8                	mov    %ebx,%eax
   14b22:	c1 e2 06             	shl    $0x6,%edx
   14b25:	83 e0 3f             	and    $0x3f,%eax
   14b28:	09 d0                	or     %edx,%eax
   14b2a:	39 cf                	cmp    %ecx,%edi
   14b2c:	75 e2                	jne    14b10 <str_test_prefix+0x170>
   14b2e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
   14b31:	8b 55 ec             	mov    -0x14(%ebp),%edx
   14b34:	85 c0                	test   %eax,%eax
   14b36:	0f 85 98 fe ff ff    	jne    149d4 <str_test_prefix+0x34>
   14b3c:	83 c4 0c             	add    $0xc,%esp
   14b3f:	b0 01                	mov    $0x1,%al
   14b41:	5b                   	pop    %ebx
   14b42:	5e                   	pop    %esi
   14b43:	5f                   	pop    %edi
   14b44:	5d                   	pop    %ebp
   14b45:	c3                   	ret    
   14b46:	66 90                	xchg   %ax,%ax
   14b48:	8b 4d f0             	mov    -0x10(%ebp),%ecx
   14b4b:	8b 55 ec             	mov    -0x14(%ebp),%edx
   14b4e:	e9 f6 fe ff ff       	jmp    14a49 <str_test_prefix+0xa9>
   14b53:	b0 0f                	mov    $0xf,%al
   14b55:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
   14b5c:	e9 04 ff ff ff       	jmp    14a65 <str_test_prefix+0xc5>
   14b61:	b0 0f                	mov    $0xf,%al
   14b63:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
   14b6a:	e9 67 ff ff ff       	jmp    14ad6 <str_test_prefix+0x136>
   14b6f:	b0 07                	mov    $0x7,%al
   14b71:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
   14b78:	e9 e8 fe ff ff       	jmp    14a65 <str_test_prefix+0xc5>
   14b7d:	b0 07                	mov    $0x7,%al
   14b7f:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
   14b86:	e9 4b ff ff ff       	jmp    14ad6 <str_test_prefix+0x136>
   14b8b:	ba 3f 00 00 00       	mov    $0x3f,%edx
   14b90:	e9 25 fe ff ff       	jmp    149ba <str_test_prefix+0x1a>
   14b95:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14b99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00014ba0 <str_cpy>:
   14ba0:	55                   	push   %ebp
   14ba1:	89 e5                	mov    %esp,%ebp
   14ba3:	57                   	push   %edi
   14ba4:	56                   	push   %esi
   14ba5:	53                   	push   %ebx
   14ba6:	83 ec 4c             	sub    $0x4c,%esp
   14ba9:	8b 45 0c             	mov    0xc(%ebp),%eax
   14bac:	8b 7d 10             	mov    0x10(%ebp),%edi
   14baf:	85 c0                	test   %eax,%eax
   14bb1:	0f 84 ae 01 00 00    	je     14d65 <str_cpy+0x1c5>
   14bb7:	31 f6                	xor    %esi,%esi
   14bb9:	48                   	dec    %eax
   14bba:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   14bc1:	89 45 e0             	mov    %eax,-0x20(%ebp)
   14bc4:	0f be 0c 37          	movsbl (%edi,%esi,1),%ecx
   14bc8:	8d 56 01             	lea    0x1(%esi),%edx
   14bcb:	84 c9                	test   %cl,%cl
   14bcd:	78 5e                	js     14c2d <str_cpy+0x8d>
   14bcf:	90                   	nop
   14bd0:	89 d6                	mov    %edx,%esi
   14bd2:	85 c9                	test   %ecx,%ecx
   14bd4:	0f 84 8e 00 00 00    	je     14c68 <str_cpy+0xc8>
   14bda:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   14bdd:	39 45 e0             	cmp    %eax,-0x20(%ebp)
   14be0:	0f 86 82 00 00 00    	jbe    14c68 <str_cpy+0xc8>
   14be6:	81 f9 ff ff 10 00    	cmp    $0x10ffff,%ecx
   14bec:	77 7a                	ja     14c68 <str_cpy+0xc8>
   14bee:	f7 c1 80 ff ff ff    	test   $0xffffff80,%ecx
   14bf4:	0f 85 86 00 00 00    	jne    14c80 <str_cpy+0xe0>
   14bfa:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   14bfd:	c6 45 b8 00          	movb   $0x0,-0x48(%ebp)
   14c01:	89 45 dc             	mov    %eax,-0x24(%ebp)
   14c04:	c6 45 c8 7f          	movb   $0x7f,-0x38(%ebp)
   14c08:	8b 45 c8             	mov    -0x38(%ebp),%eax
   14c0b:	8b 55 08             	mov    0x8(%ebp),%edx
   14c0e:	21 c1                	and    %eax,%ecx
   14c10:	8b 45 b8             	mov    -0x48(%ebp),%eax
   14c13:	09 c1                	or     %eax,%ecx
   14c15:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   14c18:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   14c1b:	88 0c 02             	mov    %cl,(%edx,%eax,1)
   14c1e:	43                   	inc    %ebx
   14c1f:	0f be 0c 37          	movsbl (%edi,%esi,1),%ecx
   14c23:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
   14c26:	8d 56 01             	lea    0x1(%esi),%edx
   14c29:	84 c9                	test   %cl,%cl
   14c2b:	79 a3                	jns    14bd0 <str_cpy+0x30>
   14c2d:	88 c8                	mov    %cl,%al
   14c2f:	83 e0 e0             	and    $0xffffffe0,%eax
   14c32:	3c c0                	cmp    $0xc0,%al
   14c34:	0f 84 bd 00 00 00    	je     14cf7 <str_cpy+0x157>
   14c3a:	88 c8                	mov    %cl,%al
   14c3c:	83 e0 f0             	and    $0xfffffff0,%eax
   14c3f:	3c e0                	cmp    $0xe0,%al
   14c41:	0f 84 08 01 00 00    	je     14d4f <str_cpy+0x1af>
   14c47:	88 c8                	mov    %cl,%al
   14c49:	83 e0 f8             	and    $0xfffffff8,%eax
   14c4c:	3c f0                	cmp    $0xf0,%al
   14c4e:	0f 84 06 01 00 00    	je     14d5a <str_cpy+0x1ba>
   14c54:	89 d6                	mov    %edx,%esi
   14c56:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   14c59:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   14c5e:	39 45 e0             	cmp    %eax,-0x20(%ebp)
   14c61:	0f 87 7f ff ff ff    	ja     14be6 <str_cpy+0x46>
   14c67:	90                   	nop
   14c68:	8b 5d 08             	mov    0x8(%ebp),%ebx
   14c6b:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   14c6e:	c6 04 13 00          	movb   $0x0,(%ebx,%edx,1)
   14c72:	83 c4 4c             	add    $0x4c,%esp
   14c75:	5b                   	pop    %ebx
   14c76:	5e                   	pop    %esi
   14c77:	5f                   	pop    %edi
   14c78:	5d                   	pop    %ebp
   14c79:	c3                   	ret    
   14c7a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   14c80:	f7 c1 00 f8 ff ff    	test   $0xfffff800,%ecx
   14c86:	74 60                	je     14ce8 <str_cpy+0x148>
   14c88:	89 c8                	mov    %ecx,%eax
   14c8a:	25 00 00 ff ff       	and    $0xffff0000,%eax
   14c8f:	83 f8 01             	cmp    $0x1,%eax
   14c92:	19 d2                	sbb    %edx,%edx
   14c94:	83 e2 f0             	and    $0xfffffff0,%edx
   14c97:	83 ea 10             	sub    $0x10,%edx
   14c9a:	83 f8 01             	cmp    $0x1,%eax
   14c9d:	19 db                	sbb    %ebx,%ebx
   14c9f:	88 55 b8             	mov    %dl,-0x48(%ebp)
   14ca2:	83 e3 08             	and    $0x8,%ebx
   14ca5:	83 c3 07             	add    $0x7,%ebx
   14ca8:	83 f8 01             	cmp    $0x1,%eax
   14cab:	19 c0                	sbb    %eax,%eax
   14cad:	88 5d c8             	mov    %bl,-0x38(%ebp)
   14cb0:	83 c0 03             	add    $0x3,%eax
   14cb3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   14cb6:	01 c2                	add    %eax,%edx
   14cb8:	89 55 dc             	mov    %edx,-0x24(%ebp)
   14cbb:	39 55 e0             	cmp    %edx,-0x20(%ebp)
   14cbe:	76 a8                	jbe    14c68 <str_cpy+0xc8>
   14cc0:	8b 55 08             	mov    0x8(%ebp),%edx
   14cc3:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   14cc6:	8d 1c 1a             	lea    (%edx,%ebx,1),%ebx
   14cc9:	89 5d d8             	mov    %ebx,-0x28(%ebp)
   14ccc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14cd0:	89 ca                	mov    %ecx,%edx
   14cd2:	c1 e9 06             	shr    $0x6,%ecx
   14cd5:	83 e2 3f             	and    $0x3f,%edx
   14cd8:	80 ca 80             	or     $0x80,%dl
   14cdb:	88 14 03             	mov    %dl,(%ebx,%eax,1)
   14cde:	48                   	dec    %eax
   14cdf:	75 ef                	jne    14cd0 <str_cpy+0x130>
   14ce1:	e9 22 ff ff ff       	jmp    14c08 <str_cpy+0x68>
   14ce6:	66 90                	xchg   %ax,%ax
   14ce8:	c6 45 b8 c0          	movb   $0xc0,-0x48(%ebp)
   14cec:	c6 45 c8 1f          	movb   $0x1f,-0x38(%ebp)
   14cf0:	b8 01 00 00 00       	mov    $0x1,%eax
   14cf5:	eb bc                	jmp    14cb3 <str_cpy+0x113>
   14cf7:	b0 1f                	mov    $0x1f,%al
   14cf9:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)
   14d00:	21 c1                	and    %eax,%ecx
   14d02:	8a 04 17             	mov    (%edi,%edx,1),%al
   14d05:	88 c3                	mov    %al,%bl
   14d07:	81 e1 ff 00 00 00    	and    $0xff,%ecx
   14d0d:	83 e3 c0             	and    $0xffffffc0,%ebx
   14d10:	83 c6 02             	add    $0x2,%esi
   14d13:	80 fb 80             	cmp    $0x80,%bl
   14d16:	0f 85 3a ff ff ff    	jne    14c56 <str_cpy+0xb6>
   14d1c:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   14d1f:	01 da                	add    %ebx,%edx
   14d21:	eb 17                	jmp    14d3a <str_cpy+0x19a>
   14d23:	90                   	nop
   14d24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14d28:	8a 04 37             	mov    (%edi,%esi,1),%al
   14d2b:	46                   	inc    %esi
   14d2c:	88 c3                	mov    %al,%bl
   14d2e:	83 e3 c0             	and    $0xffffffc0,%ebx
   14d31:	80 fb 80             	cmp    $0x80,%bl
   14d34:	0f 85 1c ff ff ff    	jne    14c56 <str_cpy+0xb6>
   14d3a:	89 cb                	mov    %ecx,%ebx
   14d3c:	89 c1                	mov    %eax,%ecx
   14d3e:	c1 e3 06             	shl    $0x6,%ebx
   14d41:	83 e1 3f             	and    $0x3f,%ecx
   14d44:	09 d9                	or     %ebx,%ecx
   14d46:	39 d6                	cmp    %edx,%esi
   14d48:	75 de                	jne    14d28 <str_cpy+0x188>
   14d4a:	e9 83 fe ff ff       	jmp    14bd2 <str_cpy+0x32>
   14d4f:	b0 0f                	mov    $0xf,%al
   14d51:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%ebp)
   14d58:	eb a6                	jmp    14d00 <str_cpy+0x160>
   14d5a:	b0 07                	mov    $0x7,%al
   14d5c:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%ebp)
   14d63:	eb 9b                	jmp    14d00 <str_cpy+0x160>
   14d65:	c7 44 24 08 88 02 00 	movl   $0x288,0x8(%esp)
   14d6c:	00 
   14d6d:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   14d74:	00 
   14d75:	c7 04 24 ca e2 02 00 	movl   $0x2e2ca,(%esp)
   14d7c:	e8 2f 5b 01 00       	call   2a8b0 <assert_abort>
   14d81:	eb 0d                	jmp    14d90 <str_ncpy>
   14d83:	90                   	nop
   14d84:	90                   	nop
   14d85:	90                   	nop
   14d86:	90                   	nop
   14d87:	90                   	nop
   14d88:	90                   	nop
   14d89:	90                   	nop
   14d8a:	90                   	nop
   14d8b:	90                   	nop
   14d8c:	90                   	nop
   14d8d:	90                   	nop
   14d8e:	90                   	nop
   14d8f:	90                   	nop

00014d90 <str_ncpy>:
   14d90:	55                   	push   %ebp
   14d91:	89 e5                	mov    %esp,%ebp
   14d93:	57                   	push   %edi
   14d94:	56                   	push   %esi
   14d95:	53                   	push   %ebx
   14d96:	83 ec 4c             	sub    $0x4c,%esp
   14d99:	8b 45 0c             	mov    0xc(%ebp),%eax
   14d9c:	8b 7d 10             	mov    0x10(%ebp),%edi
   14d9f:	85 c0                	test   %eax,%eax
   14da1:	0f 84 f7 01 00 00    	je     14f9e <str_ncpy+0x20e>
   14da7:	8b 55 14             	mov    0x14(%ebp),%edx
   14daa:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   14db1:	85 d2                	test   %edx,%edx
   14db3:	74 42                	je     14df7 <str_ncpy+0x67>
   14db5:	31 f6                	xor    %esi,%esi
   14db7:	48                   	dec    %eax
   14db8:	89 45 e0             	mov    %eax,-0x20(%ebp)
   14dbb:	ba 01 00 00 00       	mov    $0x1,%edx
   14dc0:	8a 04 37             	mov    (%edi,%esi,1),%al
   14dc3:	84 c0                	test   %al,%al
   14dc5:	0f 88 92 00 00 00    	js     14e5d <str_ncpy+0xcd>
   14dcb:	90                   	nop
   14dcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14dd0:	b1 7f                	mov    $0x7f,%cl
   14dd2:	31 f6                	xor    %esi,%esi
   14dd4:	8d 1c 16             	lea    (%esi,%edx,1),%ebx
   14dd7:	39 5d 14             	cmp    %ebx,0x14(%ebp)
   14dda:	0f 83 c0 00 00 00    	jae    14ea0 <str_ncpy+0x110>
   14de0:	89 d6                	mov    %edx,%esi
   14de2:	b9 3f 00 00 00       	mov    $0x3f,%ecx
   14de7:	8b 45 e0             	mov    -0x20(%ebp),%eax
   14dea:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
   14ded:	73 08                	jae    14df7 <str_ncpy+0x67>
   14def:	81 f9 ff ff 10 00    	cmp    $0x10ffff,%ecx
   14df5:	76 19                	jbe    14e10 <str_ncpy+0x80>
   14df7:	8b 55 08             	mov    0x8(%ebp),%edx
   14dfa:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   14dfd:	c6 04 02 00          	movb   $0x0,(%edx,%eax,1)
   14e01:	83 c4 4c             	add    $0x4c,%esp
   14e04:	5b                   	pop    %ebx
   14e05:	5e                   	pop    %esi
   14e06:	5f                   	pop    %edi
   14e07:	5d                   	pop    %ebp
   14e08:	c3                   	ret    
   14e09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   14e10:	f7 c1 80 ff ff ff    	test   $0xffffff80,%ecx
   14e16:	0f 85 dc 00 00 00    	jne    14ef8 <str_ncpy+0x168>
   14e1c:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   14e1f:	c6 45 c8 00          	movb   $0x0,-0x38(%ebp)
   14e23:	89 5d dc             	mov    %ebx,-0x24(%ebp)
   14e26:	c6 45 b8 7f          	movb   $0x7f,-0x48(%ebp)
   14e2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   14e30:	8b 45 b8             	mov    -0x48(%ebp),%eax
   14e33:	8b 55 08             	mov    0x8(%ebp),%edx
   14e36:	21 c1                	and    %eax,%ecx
   14e38:	8b 45 c8             	mov    -0x38(%ebp),%eax
   14e3b:	09 c1                	or     %eax,%ecx
   14e3d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   14e40:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   14e43:	43                   	inc    %ebx
   14e44:	88 0c 02             	mov    %cl,(%edx,%eax,1)
   14e47:	8d 56 01             	lea    0x1(%esi),%edx
   14e4a:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
   14e4d:	39 55 14             	cmp    %edx,0x14(%ebp)
   14e50:	72 a5                	jb     14df7 <str_ncpy+0x67>
   14e52:	8a 04 37             	mov    (%edi,%esi,1),%al
   14e55:	84 c0                	test   %al,%al
   14e57:	0f 89 73 ff ff ff    	jns    14dd0 <str_ncpy+0x40>
   14e5d:	88 c1                	mov    %al,%cl
   14e5f:	83 e1 e0             	and    $0xffffffe0,%ecx
   14e62:	80 f9 c0             	cmp    $0xc0,%cl
   14e65:	0f 84 0c 01 00 00    	je     14f77 <str_ncpy+0x1e7>
   14e6b:	88 c1                	mov    %al,%cl
   14e6d:	83 e1 f0             	and    $0xfffffff0,%ecx
   14e70:	80 f9 e0             	cmp    $0xe0,%cl
   14e73:	0f 84 0a 01 00 00    	je     14f83 <str_ncpy+0x1f3>
   14e79:	88 c1                	mov    %al,%cl
   14e7b:	83 e1 f8             	and    $0xfffffff8,%ecx
   14e7e:	80 f9 f0             	cmp    $0xf0,%cl
   14e81:	0f 85 59 ff ff ff    	jne    14de0 <str_ncpy+0x50>
   14e87:	be 03 00 00 00       	mov    $0x3,%esi
   14e8c:	b1 07                	mov    $0x7,%cl
   14e8e:	8d 1c 16             	lea    (%esi,%edx,1),%ebx
   14e91:	39 5d 14             	cmp    %ebx,0x14(%ebp)
   14e94:	0f 82 46 ff ff ff    	jb     14de0 <str_ncpy+0x50>
   14e9a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   14ea0:	21 c1                	and    %eax,%ecx
   14ea2:	81 e1 ff 00 00 00    	and    $0xff,%ecx
   14ea8:	85 f6                	test   %esi,%esi
   14eaa:	0f 84 df 00 00 00    	je     14f8f <str_ncpy+0x1ff>
   14eb0:	8a 04 17             	mov    (%edi,%edx,1),%al
   14eb3:	8d 72 01             	lea    0x1(%edx),%esi
   14eb6:	88 c2                	mov    %al,%dl
   14eb8:	83 e2 c0             	and    $0xffffffc0,%edx
   14ebb:	80 fa 80             	cmp    $0x80,%dl
   14ebe:	74 1a                	je     14eda <str_ncpy+0x14a>
   14ec0:	e9 ab 00 00 00       	jmp    14f70 <str_ncpy+0x1e0>
   14ec5:	8d 76 00             	lea    0x0(%esi),%esi
   14ec8:	8a 04 37             	mov    (%edi,%esi,1),%al
   14ecb:	46                   	inc    %esi
   14ecc:	88 c2                	mov    %al,%dl
   14ece:	83 e2 c0             	and    $0xffffffc0,%edx
   14ed1:	80 fa 80             	cmp    $0x80,%dl
   14ed4:	0f 85 96 00 00 00    	jne    14f70 <str_ncpy+0x1e0>
   14eda:	89 ca                	mov    %ecx,%edx
   14edc:	89 c1                	mov    %eax,%ecx
   14ede:	c1 e2 06             	shl    $0x6,%edx
   14ee1:	83 e1 3f             	and    $0x3f,%ecx
   14ee4:	09 d1                	or     %edx,%ecx
   14ee6:	39 f3                	cmp    %esi,%ebx
   14ee8:	75 de                	jne    14ec8 <str_ncpy+0x138>
   14eea:	85 c9                	test   %ecx,%ecx
   14eec:	0f 85 f5 fe ff ff    	jne    14de7 <str_ncpy+0x57>
   14ef2:	e9 00 ff ff ff       	jmp    14df7 <str_ncpy+0x67>
   14ef7:	90                   	nop
   14ef8:	f7 c1 00 f8 ff ff    	test   $0xfffff800,%ecx
   14efe:	74 60                	je     14f60 <str_ncpy+0x1d0>
   14f00:	89 c8                	mov    %ecx,%eax
   14f02:	25 00 00 ff ff       	and    $0xffff0000,%eax
   14f07:	83 f8 01             	cmp    $0x1,%eax
   14f0a:	19 d2                	sbb    %edx,%edx
   14f0c:	83 e2 f0             	and    $0xfffffff0,%edx
   14f0f:	83 ea 10             	sub    $0x10,%edx
   14f12:	83 f8 01             	cmp    $0x1,%eax
   14f15:	19 db                	sbb    %ebx,%ebx
   14f17:	88 55 c8             	mov    %dl,-0x38(%ebp)
   14f1a:	83 e3 08             	and    $0x8,%ebx
   14f1d:	83 c3 07             	add    $0x7,%ebx
   14f20:	83 f8 01             	cmp    $0x1,%eax
   14f23:	19 c0                	sbb    %eax,%eax
   14f25:	88 5d b8             	mov    %bl,-0x48(%ebp)
   14f28:	83 c0 03             	add    $0x3,%eax
   14f2b:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   14f2e:	01 c3                	add    %eax,%ebx
   14f30:	89 5d dc             	mov    %ebx,-0x24(%ebp)
   14f33:	39 5d e0             	cmp    %ebx,-0x20(%ebp)
   14f36:	0f 86 bb fe ff ff    	jbe    14df7 <str_ncpy+0x67>
   14f3c:	8b 5d 08             	mov    0x8(%ebp),%ebx
   14f3f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   14f42:	8d 14 13             	lea    (%ebx,%edx,1),%edx
   14f45:	89 d3                	mov    %edx,%ebx
   14f47:	90                   	nop
   14f48:	89 ca                	mov    %ecx,%edx
   14f4a:	c1 e9 06             	shr    $0x6,%ecx
   14f4d:	83 e2 3f             	and    $0x3f,%edx
   14f50:	80 ca 80             	or     $0x80,%dl
   14f53:	88 14 03             	mov    %dl,(%ebx,%eax,1)
   14f56:	48                   	dec    %eax
   14f57:	75 ef                	jne    14f48 <str_ncpy+0x1b8>
   14f59:	e9 d2 fe ff ff       	jmp    14e30 <str_ncpy+0xa0>
   14f5e:	66 90                	xchg   %ax,%ax
   14f60:	c6 45 c8 c0          	movb   $0xc0,-0x38(%ebp)
   14f64:	c6 45 b8 1f          	movb   $0x1f,-0x48(%ebp)
   14f68:	b8 01 00 00 00       	mov    $0x1,%eax
   14f6d:	eb bc                	jmp    14f2b <str_ncpy+0x19b>
   14f6f:	90                   	nop
   14f70:	89 f2                	mov    %esi,%edx
   14f72:	e9 69 fe ff ff       	jmp    14de0 <str_ncpy+0x50>
   14f77:	b1 1f                	mov    $0x1f,%cl
   14f79:	be 01 00 00 00       	mov    $0x1,%esi
   14f7e:	e9 51 fe ff ff       	jmp    14dd4 <str_ncpy+0x44>
   14f83:	b1 0f                	mov    $0xf,%cl
   14f85:	be 02 00 00 00       	mov    $0x2,%esi
   14f8a:	e9 45 fe ff ff       	jmp    14dd4 <str_ncpy+0x44>
   14f8f:	89 d6                	mov    %edx,%esi
   14f91:	85 c9                	test   %ecx,%ecx
   14f93:	0f 85 4e fe ff ff    	jne    14de7 <str_ncpy+0x57>
   14f99:	e9 59 fe ff ff       	jmp    14df7 <str_ncpy+0x67>
   14f9e:	c7 44 24 08 a9 02 00 	movl   $0x2a9,0x8(%esp)
   14fa5:	00 
   14fa6:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   14fad:	00 
   14fae:	c7 04 24 ca e2 02 00 	movl   $0x2e2ca,(%esp)
   14fb5:	e8 f6 58 01 00       	call   2a8b0 <assert_abort>
   14fba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00014fc0 <str_append>:
   14fc0:	55                   	push   %ebp
   14fc1:	31 c0                	xor    %eax,%eax
   14fc3:	89 e5                	mov    %esp,%ebp
   14fc5:	53                   	push   %ebx
   14fc6:	8b 55 08             	mov    0x8(%ebp),%edx
   14fc9:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   14fcc:	8b 5d 10             	mov    0x10(%ebp),%ebx
   14fcf:	80 3a 00             	cmpb   $0x0,(%edx)
   14fd2:	74 0b                	je     14fdf <str_append+0x1f>
   14fd4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   14fd8:	40                   	inc    %eax
   14fd9:	80 3c 02 00          	cmpb   $0x0,(%edx,%eax,1)
   14fdd:	75 f9                	jne    14fd8 <str_append+0x18>
   14fdf:	39 c1                	cmp    %eax,%ecx
   14fe1:	77 05                	ja     14fe8 <str_append+0x28>
   14fe3:	5b                   	pop    %ebx
   14fe4:	5d                   	pop    %ebp
   14fe5:	c3                   	ret    
   14fe6:	66 90                	xchg   %ax,%ax
   14fe8:	29 c1                	sub    %eax,%ecx
   14fea:	01 d0                	add    %edx,%eax
   14fec:	89 5d 10             	mov    %ebx,0x10(%ebp)
   14fef:	89 4d 0c             	mov    %ecx,0xc(%ebp)
   14ff2:	89 45 08             	mov    %eax,0x8(%ebp)
   14ff5:	5b                   	pop    %ebx
   14ff6:	5d                   	pop    %ebp
   14ff7:	e9 a4 fb ff ff       	jmp    14ba0 <str_cpy>
   14ffc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00015000 <spascii_to_str>:
   15000:	55                   	push   %ebp
   15001:	89 e5                	mov    %esp,%ebp
   15003:	57                   	push   %edi
   15004:	56                   	push   %esi
   15005:	53                   	push   %ebx
   15006:	83 ec 2c             	sub    $0x2c,%esp
   15009:	8b 55 0c             	mov    0xc(%ebp),%edx
   1500c:	8b 75 08             	mov    0x8(%ebp),%esi
   1500f:	8b 45 14             	mov    0x14(%ebp),%eax
   15012:	85 d2                	test   %edx,%edx
   15014:	74 7e                	je     15094 <spascii_to_str+0x94>
   15016:	85 c0                	test   %eax,%eax
   15018:	74 6f                	je     15089 <spascii_to_str+0x89>
   1501a:	4a                   	dec    %edx
   1501b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
   15022:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   15025:	8b 55 10             	mov    0x10(%ebp),%edx
   15028:	01 d0                	add    %edx,%eax
   1502a:	31 ff                	xor    %edi,%edi
   1502c:	89 45 e0             	mov    %eax,-0x20(%ebp)
   1502f:	31 c0                	xor    %eax,%eax
   15031:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15038:	31 db                	xor    %ebx,%ebx
   1503a:	8a 0a                	mov    (%edx),%cl
   1503c:	88 cb                	mov    %cl,%bl
   1503e:	83 fb 7f             	cmp    $0x7f,%ebx
   15041:	76 0e                	jbe    15051 <spascii_to_str+0x51>
   15043:	bb 3f 00 00 00       	mov    $0x3f,%ebx
   15048:	c7 45 dc f7 fe ff ff 	movl   $0xfffffef7,-0x24(%ebp)
   1504f:	b1 3f                	mov    $0x3f,%cl
   15051:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
   15054:	76 22                	jbe    15078 <spascii_to_str+0x78>
   15056:	88 1c 06             	mov    %bl,(%esi,%eax,1)
   15059:	40                   	inc    %eax
   1505a:	80 f9 20             	cmp    $0x20,%cl
   1505d:	74 02                	je     15061 <spascii_to_str+0x61>
   1505f:	89 c7                	mov    %eax,%edi
   15061:	42                   	inc    %edx
   15062:	3b 55 e0             	cmp    -0x20(%ebp),%edx
   15065:	75 d1                	jne    15038 <spascii_to_str+0x38>
   15067:	c6 04 3e 00          	movb   $0x0,(%esi,%edi,1)
   1506b:	8b 45 dc             	mov    -0x24(%ebp),%eax
   1506e:	83 c4 2c             	add    $0x2c,%esp
   15071:	5b                   	pop    %ebx
   15072:	5e                   	pop    %esi
   15073:	5f                   	pop    %edi
   15074:	5d                   	pop    %ebp
   15075:	c3                   	ret    
   15076:	66 90                	xchg   %ax,%ax
   15078:	c6 04 06 00          	movb   $0x0,(%esi,%eax,1)
   1507c:	83 c4 2c             	add    $0x2c,%esp
   1507f:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   15084:	5b                   	pop    %ebx
   15085:	5e                   	pop    %esi
   15086:	5f                   	pop    %edi
   15087:	5d                   	pop    %ebp
   15088:	c3                   	ret    
   15089:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
   15090:	31 ff                	xor    %edi,%edi
   15092:	eb d3                	jmp    15067 <spascii_to_str+0x67>
   15094:	c7 44 24 08 ef 02 00 	movl   $0x2ef,0x8(%esp)
   1509b:	00 
   1509c:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   150a3:	00 
   150a4:	c7 04 24 ca e2 02 00 	movl   $0x2e2ca,(%esp)
   150ab:	e8 00 58 01 00       	call   2a8b0 <assert_abort>

000150b0 <wstr_to_str>:
   150b0:	55                   	push   %ebp
   150b1:	89 e5                	mov    %esp,%ebp
   150b3:	57                   	push   %edi
   150b4:	56                   	push   %esi
   150b5:	53                   	push   %ebx
   150b6:	83 ec 2c             	sub    $0x2c,%esp
   150b9:	8b 45 0c             	mov    0xc(%ebp),%eax
   150bc:	8b 55 10             	mov    0x10(%ebp),%edx
   150bf:	85 c0                	test   %eax,%eax
   150c1:	0f 84 10 01 00 00    	je     151d7 <wstr_to_str+0x127>
   150c7:	8b 32                	mov    (%edx),%esi
   150c9:	85 f6                	test   %esi,%esi
   150cb:	0f 84 ef 00 00 00    	je     151c0 <wstr_to_str+0x110>
   150d1:	48                   	dec    %eax
   150d2:	89 45 e0             	mov    %eax,-0x20(%ebp)
   150d5:	0f 84 e5 00 00 00    	je     151c0 <wstr_to_str+0x110>
   150db:	81 fe ff ff 10 00    	cmp    $0x10ffff,%esi
   150e1:	0f 87 d9 00 00 00    	ja     151c0 <wstr_to_str+0x110>
   150e7:	31 ff                	xor    %edi,%edi
   150e9:	8d 5a 04             	lea    0x4(%edx),%ebx
   150ec:	f7 c6 80 ff ff ff    	test   $0xffffff80,%esi
   150f2:	75 58                	jne    1514c <wstr_to_str+0x9c>
   150f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   150f8:	39 7d e0             	cmp    %edi,-0x20(%ebp)
   150fb:	0f 86 c7 00 00 00    	jbe    151c8 <wstr_to_str+0x118>
   15101:	89 7d dc             	mov    %edi,-0x24(%ebp)
   15104:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
   15108:	c6 45 e6 7f          	movb   $0x7f,-0x1a(%ebp)
   1510c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15110:	8a 45 e6             	mov    -0x1a(%ebp),%al
   15113:	8b 55 08             	mov    0x8(%ebp),%edx
   15116:	21 f0                	and    %esi,%eax
   15118:	0a 45 e7             	or     -0x19(%ebp),%al
   1511b:	88 04 3a             	mov    %al,(%edx,%edi,1)
   1511e:	8b 7d dc             	mov    -0x24(%ebp),%edi
   15121:	8b 33                	mov    (%ebx),%esi
   15123:	47                   	inc    %edi
   15124:	85 f6                	test   %esi,%esi
   15126:	0f 84 9c 00 00 00    	je     151c8 <wstr_to_str+0x118>
   1512c:	3b 7d e0             	cmp    -0x20(%ebp),%edi
   1512f:	0f 83 93 00 00 00    	jae    151c8 <wstr_to_str+0x118>
   15135:	83 c3 04             	add    $0x4,%ebx
   15138:	81 fe ff ff 10 00    	cmp    $0x10ffff,%esi
   1513e:	0f 87 84 00 00 00    	ja     151c8 <wstr_to_str+0x118>
   15144:	f7 c6 80 ff ff ff    	test   $0xffffff80,%esi
   1514a:	74 ac                	je     150f8 <wstr_to_str+0x48>
   1514c:	f7 c6 00 f8 ff ff    	test   $0xfffff800,%esi
   15152:	74 4c                	je     151a0 <wstr_to_str+0xf0>
   15154:	f7 c6 00 00 ff ff    	test   $0xffff0000,%esi
   1515a:	74 54                	je     151b0 <wstr_to_str+0x100>
   1515c:	f7 c6 00 00 e0 ff    	test   $0xffe00000,%esi
   15162:	75 64                	jne    151c8 <wstr_to_str+0x118>
   15164:	c6 45 e7 f0          	movb   $0xf0,-0x19(%ebp)
   15168:	c6 45 e6 07          	movb   $0x7,-0x1a(%ebp)
   1516c:	b8 03 00 00 00       	mov    $0x3,%eax
   15171:	8d 14 38             	lea    (%eax,%edi,1),%edx
   15174:	89 55 dc             	mov    %edx,-0x24(%ebp)
   15177:	8b 55 e0             	mov    -0x20(%ebp),%edx
   1517a:	39 55 dc             	cmp    %edx,-0x24(%ebp)
   1517d:	73 49                	jae    151c8 <wstr_to_str+0x118>
   1517f:	8b 55 08             	mov    0x8(%ebp),%edx
   15182:	8d 0c 3a             	lea    (%edx,%edi,1),%ecx
   15185:	8d 76 00             	lea    0x0(%esi),%esi
   15188:	89 f2                	mov    %esi,%edx
   1518a:	c1 ee 06             	shr    $0x6,%esi
   1518d:	83 e2 3f             	and    $0x3f,%edx
   15190:	80 ca 80             	or     $0x80,%dl
   15193:	88 14 01             	mov    %dl,(%ecx,%eax,1)
   15196:	48                   	dec    %eax
   15197:	75 ef                	jne    15188 <wstr_to_str+0xd8>
   15199:	e9 72 ff ff ff       	jmp    15110 <wstr_to_str+0x60>
   1519e:	66 90                	xchg   %ax,%ax
   151a0:	c6 45 e7 c0          	movb   $0xc0,-0x19(%ebp)
   151a4:	c6 45 e6 1f          	movb   $0x1f,-0x1a(%ebp)
   151a8:	b8 01 00 00 00       	mov    $0x1,%eax
   151ad:	eb c2                	jmp    15171 <wstr_to_str+0xc1>
   151af:	90                   	nop
   151b0:	c6 45 e7 e0          	movb   $0xe0,-0x19(%ebp)
   151b4:	c6 45 e6 0f          	movb   $0xf,-0x1a(%ebp)
   151b8:	b8 02 00 00 00       	mov    $0x2,%eax
   151bd:	eb b2                	jmp    15171 <wstr_to_str+0xc1>
   151bf:	90                   	nop
   151c0:	31 ff                	xor    %edi,%edi
   151c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   151c8:	8b 45 08             	mov    0x8(%ebp),%eax
   151cb:	c6 04 38 00          	movb   $0x0,(%eax,%edi,1)
   151cf:	83 c4 2c             	add    $0x2c,%esp
   151d2:	5b                   	pop    %ebx
   151d3:	5e                   	pop    %esi
   151d4:	5f                   	pop    %edi
   151d5:	5d                   	pop    %ebp
   151d6:	c3                   	ret    
   151d7:	c7 44 24 08 1d 03 00 	movl   $0x31d,0x8(%esp)
   151de:	00 
   151df:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   151e6:	00 
   151e7:	c7 04 24 ca e2 02 00 	movl   $0x2e2ca,(%esp)
   151ee:	e8 bd 56 01 00       	call   2a8b0 <assert_abort>
   151f3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   151f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00015200 <utf16_to_str>:
   15200:	55                   	push   %ebp
   15201:	89 e5                	mov    %esp,%ebp
   15203:	57                   	push   %edi
   15204:	56                   	push   %esi
   15205:	53                   	push   %ebx
   15206:	83 ec 4c             	sub    $0x4c,%esp
   15209:	8b 45 0c             	mov    0xc(%ebp),%eax
   1520c:	85 c0                	test   %eax,%eax
   1520e:	0f 84 76 01 00 00    	je     1538a <utf16_to_str+0x18a>
   15214:	8b 55 10             	mov    0x10(%ebp),%edx
   15217:	48                   	dec    %eax
   15218:	31 f6                	xor    %esi,%esi
   1521a:	31 ff                	xor    %edi,%edi
   1521c:	66 8b 0a             	mov    (%edx),%cx
   1521f:	89 45 c4             	mov    %eax,-0x3c(%ebp)
   15222:	66 85 c9             	test   %cx,%cx
   15225:	74 79                	je     152a0 <utf16_to_str+0xa0>
   15227:	90                   	nop
   15228:	89 c8                	mov    %ecx,%eax
   1522a:	25 00 fc ff ff       	and    $0xfffffc00,%eax
   1522f:	66 3d 00 d8          	cmp    $0xd800,%ax
   15233:	0f 84 df 00 00 00    	je     15318 <utf16_to_str+0x118>
   15239:	81 e1 ff ff 00 00    	and    $0xffff,%ecx
   1523f:	47                   	inc    %edi
   15240:	39 75 c4             	cmp    %esi,-0x3c(%ebp)
   15243:	0f 86 14 01 00 00    	jbe    1535d <utf16_to_str+0x15d>
   15249:	81 f9 ff ff 10 00    	cmp    $0x10ffff,%ecx
   1524f:	76 17                	jbe    15268 <utf16_to_str+0x68>
   15251:	8b 55 08             	mov    0x8(%ebp),%edx
   15254:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   15259:	c6 04 32 00          	movb   $0x0,(%edx,%esi,1)
   1525d:	83 c4 4c             	add    $0x4c,%esp
   15260:	5b                   	pop    %ebx
   15261:	5e                   	pop    %esi
   15262:	5f                   	pop    %edi
   15263:	5d                   	pop    %ebp
   15264:	c3                   	ret    
   15265:	8d 76 00             	lea    0x0(%esi),%esi
   15268:	f7 c1 80 ff ff ff    	test   $0xffffff80,%ecx
   1526e:	75 48                	jne    152b8 <utf16_to_str+0xb8>
   15270:	89 75 c0             	mov    %esi,-0x40(%ebp)
   15273:	c6 45 d8 00          	movb   $0x0,-0x28(%ebp)
   15277:	c6 45 c8 7f          	movb   $0x7f,-0x38(%ebp)
   1527b:	90                   	nop
   1527c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15280:	8b 5d c8             	mov    -0x38(%ebp),%ebx
   15283:	8b 45 d8             	mov    -0x28(%ebp),%eax
   15286:	21 d9                	and    %ebx,%ecx
   15288:	8b 55 10             	mov    0x10(%ebp),%edx
   1528b:	09 c1                	or     %eax,%ecx
   1528d:	8b 45 08             	mov    0x8(%ebp),%eax
   15290:	88 0c 30             	mov    %cl,(%eax,%esi,1)
   15293:	8b 75 c0             	mov    -0x40(%ebp),%esi
   15296:	66 8b 0c 7a          	mov    (%edx,%edi,2),%cx
   1529a:	46                   	inc    %esi
   1529b:	66 85 c9             	test   %cx,%cx
   1529e:	75 88                	jne    15228 <utf16_to_str+0x28>
   152a0:	8b 55 08             	mov    0x8(%ebp),%edx
   152a3:	31 c0                	xor    %eax,%eax
   152a5:	c6 04 32 00          	movb   $0x0,(%edx,%esi,1)
   152a9:	83 c4 4c             	add    $0x4c,%esp
   152ac:	5b                   	pop    %ebx
   152ad:	5e                   	pop    %esi
   152ae:	5f                   	pop    %edi
   152af:	5d                   	pop    %ebp
   152b0:	c3                   	ret    
   152b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   152b8:	f7 c1 00 f8 ff ff    	test   $0xfffff800,%ecx
   152be:	0f 84 b4 00 00 00    	je     15378 <utf16_to_str+0x178>
   152c4:	89 c8                	mov    %ecx,%eax
   152c6:	25 00 00 ff ff       	and    $0xffff0000,%eax
   152cb:	83 f8 01             	cmp    $0x1,%eax
   152ce:	19 d2                	sbb    %edx,%edx
   152d0:	83 e2 f0             	and    $0xfffffff0,%edx
   152d3:	83 ea 10             	sub    $0x10,%edx
   152d6:	83 f8 01             	cmp    $0x1,%eax
   152d9:	88 55 d8             	mov    %dl,-0x28(%ebp)
   152dc:	19 d2                	sbb    %edx,%edx
   152de:	83 e2 08             	and    $0x8,%edx
   152e1:	83 c2 07             	add    $0x7,%edx
   152e4:	83 f8 01             	cmp    $0x1,%eax
   152e7:	19 c0                	sbb    %eax,%eax
   152e9:	88 55 c8             	mov    %dl,-0x38(%ebp)
   152ec:	83 c0 03             	add    $0x3,%eax
   152ef:	8d 14 30             	lea    (%eax,%esi,1),%edx
   152f2:	89 55 c0             	mov    %edx,-0x40(%ebp)
   152f5:	39 55 c4             	cmp    %edx,-0x3c(%ebp)
   152f8:	76 63                	jbe    1535d <utf16_to_str+0x15d>
   152fa:	8b 55 08             	mov    0x8(%ebp),%edx
   152fd:	8d 1c 32             	lea    (%edx,%esi,1),%ebx
   15300:	89 ca                	mov    %ecx,%edx
   15302:	c1 e9 06             	shr    $0x6,%ecx
   15305:	83 e2 3f             	and    $0x3f,%edx
   15308:	80 ca 80             	or     $0x80,%dl
   1530b:	88 14 03             	mov    %dl,(%ebx,%eax,1)
   1530e:	48                   	dec    %eax
   1530f:	75 ef                	jne    15300 <utf16_to_str+0x100>
   15311:	e9 6a ff ff ff       	jmp    15280 <utf16_to_str+0x80>
   15316:	66 90                	xchg   %ax,%ax
   15318:	8b 55 10             	mov    0x10(%ebp),%edx
   1531b:	66 8b 44 7a 02       	mov    0x2(%edx,%edi,2),%ax
   15320:	66 85 c0             	test   %ax,%ax
   15323:	0f 84 77 ff ff ff    	je     152a0 <utf16_to_str+0xa0>
   15329:	89 c2                	mov    %eax,%edx
   1532b:	81 e2 00 fc ff ff    	and    $0xfffffc00,%edx
   15331:	66 81 fa 00 dc       	cmp    $0xdc00,%dx
   15336:	0f 85 64 ff ff ff    	jne    152a0 <utf16_to_str+0xa0>
   1533c:	81 e1 ff 03 00 00    	and    $0x3ff,%ecx
   15342:	25 ff 03 00 00       	and    $0x3ff,%eax
   15347:	c1 e1 0a             	shl    $0xa,%ecx
   1534a:	83 c7 02             	add    $0x2,%edi
   1534d:	39 75 c4             	cmp    %esi,-0x3c(%ebp)
   15350:	8d 8c 01 00 00 01 00 	lea    0x10000(%ecx,%eax,1),%ecx
   15357:	0f 87 ec fe ff ff    	ja     15249 <utf16_to_str+0x49>
   1535d:	8b 55 08             	mov    0x8(%ebp),%edx
   15360:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   15365:	c6 04 32 00          	movb   $0x0,(%edx,%esi,1)
   15369:	83 c4 4c             	add    $0x4c,%esp
   1536c:	5b                   	pop    %ebx
   1536d:	5e                   	pop    %esi
   1536e:	5f                   	pop    %edi
   1536f:	5d                   	pop    %ebp
   15370:	c3                   	ret    
   15371:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15378:	c6 45 d8 c0          	movb   $0xc0,-0x28(%ebp)
   1537c:	c6 45 c8 1f          	movb   $0x1f,-0x38(%ebp)
   15380:	b8 01 00 00 00       	mov    $0x1,%eax
   15385:	e9 65 ff ff ff       	jmp    152ef <utf16_to_str+0xef>
   1538a:	c7 44 24 08 3d 03 00 	movl   $0x33d,0x8(%esp)
   15391:	00 
   15392:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   15399:	00 
   1539a:	c7 04 24 ca e2 02 00 	movl   $0x2e2ca,(%esp)
   153a1:	e8 0a 55 01 00       	call   2a8b0 <assert_abort>
   153a6:	8d 76 00             	lea    0x0(%esi),%esi
   153a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000153b0 <str_to_utf16>:
   153b0:	55                   	push   %ebp
   153b1:	89 e5                	mov    %esp,%ebp
   153b3:	57                   	push   %edi
   153b4:	56                   	push   %esi
   153b5:	53                   	push   %ebx
   153b6:	83 ec 2c             	sub    $0x2c,%esp
   153b9:	8b 45 0c             	mov    0xc(%ebp),%eax
   153bc:	8b 7d 10             	mov    0x10(%ebp),%edi
   153bf:	85 c0                	test   %eax,%eax
   153c1:	0f 84 46 01 00 00    	je     1550d <str_to_utf16+0x15d>
   153c7:	48                   	dec    %eax
   153c8:	31 db                	xor    %ebx,%ebx
   153ca:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   153d1:	89 45 e0             	mov    %eax,-0x20(%ebp)
   153d4:	eb 61                	jmp    15437 <str_to_utf16+0x87>
   153d6:	66 90                	xchg   %ax,%ax
   153d8:	85 c0                	test   %eax,%eax
   153da:	0f 84 ad 00 00 00    	je     1548d <str_to_utf16+0xdd>
   153e0:	3d 00 00 01 00       	cmp    $0x10000,%eax
   153e5:	0f 8e 82 00 00 00    	jle    1546d <str_to_utf16+0xbd>
   153eb:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   153ee:	83 c1 02             	add    $0x2,%ecx
   153f1:	3b 4d e0             	cmp    -0x20(%ebp),%ecx
   153f4:	0f 83 8e 00 00 00    	jae    15488 <str_to_utf16+0xd8>
   153fa:	2d 00 00 01 00       	sub    $0x10000,%eax
   153ff:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   15402:	89 c1                	mov    %eax,%ecx
   15404:	8b 75 08             	mov    0x8(%ebp),%esi
   15407:	c1 f9 0a             	sar    $0xa,%ecx
   1540a:	25 ff 03 00 00       	and    $0x3ff,%eax
   1540f:	81 c9 00 d8 ff ff    	or     $0xffffd800,%ecx
   15415:	0d 00 dc ff ff       	or     $0xffffdc00,%eax
   1541a:	66 89 0c 5e          	mov    %cx,(%esi,%ebx,2)
   1541e:	43                   	inc    %ebx
   1541f:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
   15422:	66 89 04 5e          	mov    %ax,(%esi,%ebx,2)
   15426:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   15429:	40                   	inc    %eax
   1542a:	8b 75 e0             	mov    -0x20(%ebp),%esi
   1542d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   15430:	89 d3                	mov    %edx,%ebx
   15432:	39 75 e4             	cmp    %esi,-0x1c(%ebp)
   15435:	73 51                	jae    15488 <str_to_utf16+0xd8>
   15437:	0f be 04 1f          	movsbl (%edi,%ebx,1),%eax
   1543b:	8d 53 01             	lea    0x1(%ebx),%edx
   1543e:	84 c0                	test   %al,%al
   15440:	79 96                	jns    153d8 <str_to_utf16+0x28>
   15442:	88 c1                	mov    %al,%cl
   15444:	83 e1 e0             	and    $0xffffffe0,%ecx
   15447:	80 f9 c0             	cmp    $0xc0,%cl
   1544a:	74 55                	je     154a1 <str_to_utf16+0xf1>
   1544c:	88 c1                	mov    %al,%cl
   1544e:	83 e1 f0             	and    $0xfffffff0,%ecx
   15451:	80 f9 e0             	cmp    $0xe0,%cl
   15454:	0f 84 99 00 00 00    	je     154f3 <str_to_utf16+0x143>
   1545a:	88 c1                	mov    %al,%cl
   1545c:	83 e1 f8             	and    $0xfffffff8,%ecx
   1545f:	80 f9 f0             	cmp    $0xf0,%cl
   15462:	0f 84 94 00 00 00    	je     154fc <str_to_utf16+0x14c>
   15468:	b8 3f 00 00 00       	mov    $0x3f,%eax
   1546d:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   15470:	8b 5d 08             	mov    0x8(%ebp),%ebx
   15473:	8b 75 e0             	mov    -0x20(%ebp),%esi
   15476:	66 89 04 4b          	mov    %ax,(%ebx,%ecx,2)
   1547a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1547d:	40                   	inc    %eax
   1547e:	89 d3                	mov    %edx,%ebx
   15480:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   15483:	39 75 e4             	cmp    %esi,-0x1c(%ebp)
   15486:	72 af                	jb     15437 <str_to_utf16+0x87>
   15488:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   1548d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   15490:	8b 4d 08             	mov    0x8(%ebp),%ecx
   15493:	66 c7 04 51 00 00    	movw   $0x0,(%ecx,%edx,2)
   15499:	83 c4 2c             	add    $0x2c,%esp
   1549c:	5b                   	pop    %ebx
   1549d:	5e                   	pop    %esi
   1549e:	5f                   	pop    %edi
   1549f:	5d                   	pop    %ebp
   154a0:	c3                   	ret    
   154a1:	b1 1f                	mov    $0x1f,%cl
   154a3:	be 01 00 00 00       	mov    $0x1,%esi
   154a8:	21 c8                	and    %ecx,%eax
   154aa:	83 c3 02             	add    $0x2,%ebx
   154ad:	8a 0c 17             	mov    (%edi,%edx,1),%cl
   154b0:	89 5d dc             	mov    %ebx,-0x24(%ebp)
   154b3:	88 cb                	mov    %cl,%bl
   154b5:	25 ff 00 00 00       	and    $0xff,%eax
   154ba:	83 e3 c0             	and    $0xffffffc0,%ebx
   154bd:	80 fb 80             	cmp    $0x80,%bl
   154c0:	75 43                	jne    15505 <str_to_utf16+0x155>
   154c2:	01 d6                	add    %edx,%esi
   154c4:	8b 55 dc             	mov    -0x24(%ebp),%edx
   154c7:	eb 15                	jmp    154de <str_to_utf16+0x12e>
   154c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   154d0:	8a 0c 17             	mov    (%edi,%edx,1),%cl
   154d3:	42                   	inc    %edx
   154d4:	88 cb                	mov    %cl,%bl
   154d6:	83 e3 c0             	and    $0xffffffc0,%ebx
   154d9:	80 fb 80             	cmp    $0x80,%bl
   154dc:	75 8a                	jne    15468 <str_to_utf16+0xb8>
   154de:	89 c3                	mov    %eax,%ebx
   154e0:	89 c8                	mov    %ecx,%eax
   154e2:	c1 e3 06             	shl    $0x6,%ebx
   154e5:	83 e0 3f             	and    $0x3f,%eax
   154e8:	09 d8                	or     %ebx,%eax
   154ea:	39 f2                	cmp    %esi,%edx
   154ec:	75 e2                	jne    154d0 <str_to_utf16+0x120>
   154ee:	e9 e5 fe ff ff       	jmp    153d8 <str_to_utf16+0x28>
   154f3:	b1 0f                	mov    $0xf,%cl
   154f5:	be 02 00 00 00       	mov    $0x2,%esi
   154fa:	eb ac                	jmp    154a8 <str_to_utf16+0xf8>
   154fc:	b1 07                	mov    $0x7,%cl
   154fe:	be 03 00 00 00       	mov    $0x3,%esi
   15503:	eb a3                	jmp    154a8 <str_to_utf16+0xf8>
   15505:	8b 55 dc             	mov    -0x24(%ebp),%edx
   15508:	e9 5b ff ff ff       	jmp    15468 <str_to_utf16+0xb8>
   1550d:	c7 44 24 08 5c 03 00 	movl   $0x35c,0x8(%esp)
   15514:	00 
   15515:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   1551c:	00 
   1551d:	c7 04 24 ca e2 02 00 	movl   $0x2e2ca,(%esp)
   15524:	e8 87 53 01 00       	call   2a8b0 <assert_abort>
   15529:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00015530 <wstr_to_astr>:
   15530:	55                   	push   %ebp
   15531:	89 e5                	mov    %esp,%ebp
   15533:	57                   	push   %edi
   15534:	56                   	push   %esi
   15535:	53                   	push   %ebx
   15536:	83 ec 4c             	sub    $0x4c,%esp
   15539:	8b 55 08             	mov    0x8(%ebp),%edx
   1553c:	8b 0a                	mov    (%edx),%ecx
   1553e:	85 c9                	test   %ecx,%ecx
   15540:	74 59                	je     1559b <wstr_to_astr+0x6b>
   15542:	81 f9 ff ff 10 00    	cmp    $0x10ffff,%ecx
   15548:	77 51                	ja     1559b <wstr_to_astr+0x6b>
   1554a:	8b 7d 08             	mov    0x8(%ebp),%edi
   1554d:	31 db                	xor    %ebx,%ebx
   1554f:	83 c7 04             	add    $0x4,%edi
   15552:	8d 75 e4             	lea    -0x1c(%ebp),%esi
   15555:	8d 76 00             	lea    0x0(%esi),%esi
   15558:	f7 c1 80 ff ff ff    	test   $0xffffff80,%ecx
   1555e:	0f 85 e4 00 00 00    	jne    15648 <wstr_to_astr+0x118>
   15564:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)
   1556b:	c6 45 d0 00          	movb   $0x0,-0x30(%ebp)
   1556f:	c6 45 d4 7f          	movb   $0x7f,-0x2c(%ebp)
   15573:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   15576:	21 c1                	and    %eax,%ecx
   15578:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1557b:	09 c1                	or     %eax,%ecx
   1557d:	8b 45 cc             	mov    -0x34(%ebp),%eax
   15580:	88 4d e4             	mov    %cl,-0x1c(%ebp)
   15583:	8b 0f                	mov    (%edi),%ecx
   15585:	01 c3                	add    %eax,%ebx
   15587:	85 c9                	test   %ecx,%ecx
   15589:	74 0b                	je     15596 <wstr_to_astr+0x66>
   1558b:	83 c7 04             	add    $0x4,%edi
   1558e:	81 f9 ff ff 10 00    	cmp    $0x10ffff,%ecx
   15594:	76 c2                	jbe    15558 <wstr_to_astr+0x28>
   15596:	8d 43 01             	lea    0x1(%ebx),%eax
   15599:	eb 0d                	jmp    155a8 <wstr_to_astr+0x78>
   1559b:	b8 01 00 00 00       	mov    $0x1,%eax
   155a0:	31 db                	xor    %ebx,%ebx
   155a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   155a8:	89 04 24             	mov    %eax,(%esp)
   155ab:	e8 20 ab 00 00       	call   200d0 <malloc>
   155b0:	89 c7                	mov    %eax,%edi
   155b2:	85 c0                	test   %eax,%eax
   155b4:	0f 84 7d 00 00 00    	je     15637 <wstr_to_astr+0x107>
   155ba:	8b 55 08             	mov    0x8(%ebp),%edx
   155bd:	8b 02                	mov    (%edx),%eax
   155bf:	85 c0                	test   %eax,%eax
   155c1:	74 70                	je     15633 <wstr_to_astr+0x103>
   155c3:	85 db                	test   %ebx,%ebx
   155c5:	74 6c                	je     15633 <wstr_to_astr+0x103>
   155c7:	89 c6                	mov    %eax,%esi
   155c9:	3d ff ff 10 00       	cmp    $0x10ffff,%eax
   155ce:	77 63                	ja     15633 <wstr_to_astr+0x103>
   155d0:	8b 55 08             	mov    0x8(%ebp),%edx
   155d3:	31 c0                	xor    %eax,%eax
   155d5:	83 c2 04             	add    $0x4,%edx
   155d8:	89 5d d0             	mov    %ebx,-0x30(%ebp)
   155db:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   155de:	89 c3                	mov    %eax,%ebx
   155e0:	f7 c6 80 ff ff ff    	test   $0xffffff80,%esi
   155e6:	0f 85 c4 00 00 00    	jne    156b0 <wstr_to_astr+0x180>
   155ec:	3b 5d d0             	cmp    -0x30(%ebp),%ebx
   155ef:	73 3f                	jae    15630 <wstr_to_astr+0x100>
   155f1:	89 5d c4             	mov    %ebx,-0x3c(%ebp)
   155f4:	c6 45 cc 00          	movb   $0x0,-0x34(%ebp)
   155f8:	c6 45 cb 7f          	movb   $0x7f,-0x35(%ebp)
   155fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15600:	8a 45 cb             	mov    -0x35(%ebp),%al
   15603:	8b 55 cc             	mov    -0x34(%ebp),%edx
   15606:	21 f0                	and    %esi,%eax
   15608:	09 d0                	or     %edx,%eax
   1560a:	88 04 1f             	mov    %al,(%edi,%ebx,1)
   1560d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   15610:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
   15613:	8b 30                	mov    (%eax),%esi
   15615:	43                   	inc    %ebx
   15616:	85 f6                	test   %esi,%esi
   15618:	74 16                	je     15630 <wstr_to_astr+0x100>
   1561a:	39 5d d0             	cmp    %ebx,-0x30(%ebp)
   1561d:	76 11                	jbe    15630 <wstr_to_astr+0x100>
   1561f:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   15622:	83 c1 04             	add    $0x4,%ecx
   15625:	81 fe ff ff 10 00    	cmp    $0x10ffff,%esi
   1562b:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
   1562e:	76 b0                	jbe    155e0 <wstr_to_astr+0xb0>
   15630:	8b 5d d0             	mov    -0x30(%ebp),%ebx
   15633:	c6 04 1f 00          	movb   $0x0,(%edi,%ebx,1)
   15637:	83 c4 4c             	add    $0x4c,%esp
   1563a:	89 f8                	mov    %edi,%eax
   1563c:	5b                   	pop    %ebx
   1563d:	5e                   	pop    %esi
   1563e:	5f                   	pop    %edi
   1563f:	5d                   	pop    %ebp
   15640:	c3                   	ret    
   15641:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15648:	f7 c1 00 f8 ff ff    	test   $0xfffff800,%ecx
   1564e:	74 48                	je     15698 <wstr_to_astr+0x168>
   15650:	f7 c1 00 00 ff ff    	test   $0xffff0000,%ecx
   15656:	0f 84 ac 00 00 00    	je     15708 <wstr_to_astr+0x1d8>
   1565c:	f7 c1 00 00 e0 ff    	test   $0xffe00000,%ecx
   15662:	0f 85 2e ff ff ff    	jne    15596 <wstr_to_astr+0x66>
   15668:	c6 45 d0 f0          	movb   $0xf0,-0x30(%ebp)
   1566c:	c6 45 d4 07          	movb   $0x7,-0x2c(%ebp)
   15670:	c7 45 cc 04 00 00 00 	movl   $0x4,-0x34(%ebp)
   15677:	b8 03 00 00 00       	mov    $0x3,%eax
   1567c:	01 f0                	add    %esi,%eax
   1567e:	66 90                	xchg   %ax,%ax
   15680:	89 ca                	mov    %ecx,%edx
   15682:	c1 e9 06             	shr    $0x6,%ecx
   15685:	83 e2 3f             	and    $0x3f,%edx
   15688:	80 ca 80             	or     $0x80,%dl
   1568b:	88 10                	mov    %dl,(%eax)
   1568d:	48                   	dec    %eax
   1568e:	39 f0                	cmp    %esi,%eax
   15690:	75 ee                	jne    15680 <wstr_to_astr+0x150>
   15692:	e9 dc fe ff ff       	jmp    15573 <wstr_to_astr+0x43>
   15697:	90                   	nop
   15698:	c6 45 d0 c0          	movb   $0xc0,-0x30(%ebp)
   1569c:	c6 45 d4 1f          	movb   $0x1f,-0x2c(%ebp)
   156a0:	c7 45 cc 02 00 00 00 	movl   $0x2,-0x34(%ebp)
   156a7:	b8 01 00 00 00       	mov    $0x1,%eax
   156ac:	eb ce                	jmp    1567c <wstr_to_astr+0x14c>
   156ae:	66 90                	xchg   %ax,%ax
   156b0:	f7 c6 00 f8 ff ff    	test   $0xfffff800,%esi
   156b6:	74 70                	je     15728 <wstr_to_astr+0x1f8>
   156b8:	f7 c6 00 00 ff ff    	test   $0xffff0000,%esi
   156be:	74 77                	je     15737 <wstr_to_astr+0x207>
   156c0:	f7 c6 00 00 e0 ff    	test   $0xffe00000,%esi
   156c6:	0f 85 64 ff ff ff    	jne    15630 <wstr_to_astr+0x100>
   156cc:	c6 45 cc f0          	movb   $0xf0,-0x34(%ebp)
   156d0:	c6 45 cb 07          	movb   $0x7,-0x35(%ebp)
   156d4:	b8 03 00 00 00       	mov    $0x3,%eax
   156d9:	8d 14 18             	lea    (%eax,%ebx,1),%edx
   156dc:	89 55 c4             	mov    %edx,-0x3c(%ebp)
   156df:	8b 55 d0             	mov    -0x30(%ebp),%edx
   156e2:	39 55 c4             	cmp    %edx,-0x3c(%ebp)
   156e5:	73 5f                	jae    15746 <wstr_to_astr+0x216>
   156e7:	8d 0c 1f             	lea    (%edi,%ebx,1),%ecx
   156ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   156f0:	89 f2                	mov    %esi,%edx
   156f2:	c1 ee 06             	shr    $0x6,%esi
   156f5:	83 e2 3f             	and    $0x3f,%edx
   156f8:	80 ca 80             	or     $0x80,%dl
   156fb:	88 14 01             	mov    %dl,(%ecx,%eax,1)
   156fe:	48                   	dec    %eax
   156ff:	75 ef                	jne    156f0 <wstr_to_astr+0x1c0>
   15701:	e9 fa fe ff ff       	jmp    15600 <wstr_to_astr+0xd0>
   15706:	66 90                	xchg   %ax,%ax
   15708:	c6 45 d0 e0          	movb   $0xe0,-0x30(%ebp)
   1570c:	c6 45 d4 0f          	movb   $0xf,-0x2c(%ebp)
   15710:	c7 45 cc 03 00 00 00 	movl   $0x3,-0x34(%ebp)
   15717:	b8 02 00 00 00       	mov    $0x2,%eax
   1571c:	e9 5b ff ff ff       	jmp    1567c <wstr_to_astr+0x14c>
   15721:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15728:	c6 45 cc c0          	movb   $0xc0,-0x34(%ebp)
   1572c:	c6 45 cb 1f          	movb   $0x1f,-0x35(%ebp)
   15730:	b8 01 00 00 00       	mov    $0x1,%eax
   15735:	eb a2                	jmp    156d9 <wstr_to_astr+0x1a9>
   15737:	c6 45 cc e0          	movb   $0xe0,-0x34(%ebp)
   1573b:	c6 45 cb 0f          	movb   $0xf,-0x35(%ebp)
   1573f:	b8 02 00 00 00       	mov    $0x2,%eax
   15744:	eb 93                	jmp    156d9 <wstr_to_astr+0x1a9>
   15746:	89 d3                	mov    %edx,%ebx
   15748:	e9 e6 fe ff ff       	jmp    15633 <wstr_to_astr+0x103>
   1574d:	8d 76 00             	lea    0x0(%esi),%esi

00015750 <str_to_wstr>:
   15750:	55                   	push   %ebp
   15751:	89 e5                	mov    %esp,%ebp
   15753:	57                   	push   %edi
   15754:	56                   	push   %esi
   15755:	53                   	push   %ebx
   15756:	83 ec 2c             	sub    $0x2c,%esp
   15759:	8b 45 0c             	mov    0xc(%ebp),%eax
   1575c:	8b 7d 10             	mov    0x10(%ebp),%edi
   1575f:	85 c0                	test   %eax,%eax
   15761:	0f 84 f2 00 00 00    	je     15859 <str_to_wstr+0x109>
   15767:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
   1576e:	31 c0                	xor    %eax,%eax
   15770:	eb 1d                	jmp    1578f <str_to_wstr+0x3f>
   15772:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   15778:	89 f0                	mov    %esi,%eax
   1577a:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   1577d:	8b 5d 08             	mov    0x8(%ebp),%ebx
   15780:	85 d2                	test   %edx,%edx
   15782:	89 54 8b fc          	mov    %edx,-0x4(%ebx,%ecx,4)
   15786:	74 58                	je     157e0 <str_to_wstr+0x90>
   15788:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   1578b:	46                   	inc    %esi
   1578c:	89 75 e4             	mov    %esi,-0x1c(%ebp)
   1578f:	8b 55 0c             	mov    0xc(%ebp),%edx
   15792:	39 55 e4             	cmp    %edx,-0x1c(%ebp)
   15795:	74 49                	je     157e0 <str_to_wstr+0x90>
   15797:	0f be 14 07          	movsbl (%edi,%eax,1),%edx
   1579b:	8d 70 01             	lea    0x1(%eax),%esi
   1579e:	84 d2                	test   %dl,%dl
   157a0:	79 d6                	jns    15778 <str_to_wstr+0x28>
   157a2:	88 d1                	mov    %dl,%cl
   157a4:	83 e1 e0             	and    $0xffffffe0,%ecx
   157a7:	80 f9 c0             	cmp    $0xc0,%cl
   157aa:	74 4a                	je     157f6 <str_to_wstr+0xa6>
   157ac:	88 d1                	mov    %dl,%cl
   157ae:	83 e1 f0             	and    $0xfffffff0,%ecx
   157b1:	80 f9 e0             	cmp    $0xe0,%cl
   157b4:	0f 84 89 00 00 00    	je     15843 <str_to_wstr+0xf3>
   157ba:	88 d1                	mov    %dl,%cl
   157bc:	83 e1 f8             	and    $0xfffffff8,%ecx
   157bf:	80 f9 f0             	cmp    $0xf0,%cl
   157c2:	0f 84 86 00 00 00    	je     1584e <str_to_wstr+0xfe>
   157c8:	89 f0                	mov    %esi,%eax
   157ca:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   157cd:	8b 4d 08             	mov    0x8(%ebp),%ecx
   157d0:	c7 44 91 fc 3f 00 00 	movl   $0x3f,-0x4(%ecx,%edx,4)
   157d7:	00 
   157d8:	eb ae                	jmp    15788 <str_to_wstr+0x38>
   157da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   157e0:	8b 5d 08             	mov    0x8(%ebp),%ebx
   157e3:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   157e6:	c7 44 8b fc 00 00 00 	movl   $0x0,-0x4(%ebx,%ecx,4)
   157ed:	00 
   157ee:	83 c4 2c             	add    $0x2c,%esp
   157f1:	5b                   	pop    %ebx
   157f2:	5e                   	pop    %esi
   157f3:	5f                   	pop    %edi
   157f4:	5d                   	pop    %ebp
   157f5:	c3                   	ret    
   157f6:	b1 1f                	mov    $0x1f,%cl
   157f8:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)
   157ff:	21 ca                	and    %ecx,%edx
   15801:	8a 0c 37             	mov    (%edi,%esi,1),%cl
   15804:	88 cb                	mov    %cl,%bl
   15806:	81 e2 ff 00 00 00    	and    $0xff,%edx
   1580c:	83 e3 c0             	and    $0xffffffc0,%ebx
   1580f:	83 c0 02             	add    $0x2,%eax
   15812:	80 fb 80             	cmp    $0x80,%bl
   15815:	75 b3                	jne    157ca <str_to_wstr+0x7a>
   15817:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   1581a:	01 de                	add    %ebx,%esi
   1581c:	eb 10                	jmp    1582e <str_to_wstr+0xde>
   1581e:	66 90                	xchg   %ax,%ax
   15820:	8a 0c 07             	mov    (%edi,%eax,1),%cl
   15823:	40                   	inc    %eax
   15824:	88 cb                	mov    %cl,%bl
   15826:	83 e3 c0             	and    $0xffffffc0,%ebx
   15829:	80 fb 80             	cmp    $0x80,%bl
   1582c:	75 9c                	jne    157ca <str_to_wstr+0x7a>
   1582e:	89 d3                	mov    %edx,%ebx
   15830:	89 ca                	mov    %ecx,%edx
   15832:	c1 e3 06             	shl    $0x6,%ebx
   15835:	83 e2 3f             	and    $0x3f,%edx
   15838:	09 da                	or     %ebx,%edx
   1583a:	39 f0                	cmp    %esi,%eax
   1583c:	75 e2                	jne    15820 <str_to_wstr+0xd0>
   1583e:	e9 37 ff ff ff       	jmp    1577a <str_to_wstr+0x2a>
   15843:	b1 0f                	mov    $0xf,%cl
   15845:	c7 45 dc 02 00 00 00 	movl   $0x2,-0x24(%ebp)
   1584c:	eb b1                	jmp    157ff <str_to_wstr+0xaf>
   1584e:	b1 07                	mov    $0x7,%cl
   15850:	c7 45 dc 03 00 00 00 	movl   $0x3,-0x24(%ebp)
   15857:	eb a6                	jmp    157ff <str_to_wstr+0xaf>
   15859:	c7 44 24 08 b9 03 00 	movl   $0x3b9,0x8(%esp)
   15860:	00 
   15861:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   15868:	00 
   15869:	c7 04 24 b6 d7 02 00 	movl   $0x2d7b6,(%esp)
   15870:	e8 3b 50 01 00       	call   2a8b0 <assert_abort>
   15875:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15879:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00015880 <str_to_awstr>:
   15880:	55                   	push   %ebp
   15881:	89 e5                	mov    %esp,%ebp
   15883:	57                   	push   %edi
   15884:	56                   	push   %esi
   15885:	53                   	push   %ebx
   15886:	83 ec 2c             	sub    $0x2c,%esp
   15889:	31 ff                	xor    %edi,%edi
   1588b:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1588e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   15895:	eb 0e                	jmp    158a5 <str_to_awstr+0x25>
   15897:	90                   	nop
   15898:	85 c0                	test   %eax,%eax
   1589a:	74 3f                	je     158db <str_to_awstr+0x5b>
   1589c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1589f:	89 d7                	mov    %edx,%edi
   158a1:	40                   	inc    %eax
   158a2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   158a5:	0f be 04 3b          	movsbl (%ebx,%edi,1),%eax
   158a9:	8d 57 01             	lea    0x1(%edi),%edx
   158ac:	84 c0                	test   %al,%al
   158ae:	79 e8                	jns    15898 <str_to_awstr+0x18>
   158b0:	88 c1                	mov    %al,%cl
   158b2:	83 e1 e0             	and    $0xffffffe0,%ecx
   158b5:	80 f9 c0             	cmp    $0xc0,%cl
   158b8:	74 57                	je     15911 <str_to_awstr+0x91>
   158ba:	88 c1                	mov    %al,%cl
   158bc:	83 e1 f0             	and    $0xfffffff0,%ecx
   158bf:	80 f9 e0             	cmp    $0xe0,%cl
   158c2:	0f 84 a9 00 00 00    	je     15971 <str_to_awstr+0xf1>
   158c8:	88 c1                	mov    %al,%cl
   158ca:	83 e1 f8             	and    $0xfffffff8,%ecx
   158cd:	80 f9 f0             	cmp    $0xf0,%cl
   158d0:	75 ca                	jne    1589c <str_to_awstr+0x1c>
   158d2:	b1 07                	mov    $0x7,%cl
   158d4:	be 03 00 00 00       	mov    $0x3,%esi
   158d9:	eb 3d                	jmp    15918 <str_to_awstr+0x98>
   158db:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   158de:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
   158e5:	00 
   158e6:	46                   	inc    %esi
   158e7:	89 34 24             	mov    %esi,(%esp)
   158ea:	e8 81 a7 00 00       	call   20070 <calloc>
   158ef:	85 c0                	test   %eax,%eax
   158f1:	74 16                	je     15909 <str_to_awstr+0x89>
   158f3:	89 04 24             	mov    %eax,(%esp)
   158f6:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   158fa:	89 74 24 04          	mov    %esi,0x4(%esp)
   158fe:	89 45 dc             	mov    %eax,-0x24(%ebp)
   15901:	e8 4a fe ff ff       	call   15750 <str_to_wstr>
   15906:	8b 45 dc             	mov    -0x24(%ebp),%eax
   15909:	83 c4 2c             	add    $0x2c,%esp
   1590c:	5b                   	pop    %ebx
   1590d:	5e                   	pop    %esi
   1590e:	5f                   	pop    %edi
   1590f:	5d                   	pop    %ebp
   15910:	c3                   	ret    
   15911:	b1 1f                	mov    $0x1f,%cl
   15913:	be 01 00 00 00       	mov    $0x1,%esi
   15918:	21 c8                	and    %ecx,%eax
   1591a:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
   1591d:	83 c7 02             	add    $0x2,%edi
   15920:	88 4d db             	mov    %cl,-0x25(%ebp)
   15923:	83 e1 c0             	and    $0xffffffc0,%ecx
   15926:	25 ff 00 00 00       	and    $0xff,%eax
   1592b:	89 7d e0             	mov    %edi,-0x20(%ebp)
   1592e:	80 f9 80             	cmp    $0x80,%cl
   15931:	75 47                	jne    1597a <str_to_awstr+0xfa>
   15933:	8d 3c 32             	lea    (%edx,%esi,1),%edi
   15936:	8a 4d db             	mov    -0x25(%ebp),%cl
   15939:	8b 55 e0             	mov    -0x20(%ebp),%edx
   1593c:	89 5d e0             	mov    %ebx,-0x20(%ebp)
   1593f:	90                   	nop
   15940:	89 c6                	mov    %eax,%esi
   15942:	89 c8                	mov    %ecx,%eax
   15944:	c1 e6 06             	shl    $0x6,%esi
   15947:	83 e0 3f             	and    $0x3f,%eax
   1594a:	09 f0                	or     %esi,%eax
   1594c:	8b 5d e0             	mov    -0x20(%ebp),%ebx
   1594f:	39 fa                	cmp    %edi,%edx
   15951:	0f 84 41 ff ff ff    	je     15898 <str_to_awstr+0x18>
   15957:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
   1595a:	be c0 ff ff ff       	mov    $0xffffffc0,%esi
   1595f:	21 ce                	and    %ecx,%esi
   15961:	42                   	inc    %edx
   15962:	89 f3                	mov    %esi,%ebx
   15964:	80 fb 80             	cmp    $0x80,%bl
   15967:	74 d7                	je     15940 <str_to_awstr+0xc0>
   15969:	8b 5d e0             	mov    -0x20(%ebp),%ebx
   1596c:	e9 2b ff ff ff       	jmp    1589c <str_to_awstr+0x1c>
   15971:	b1 0f                	mov    $0xf,%cl
   15973:	be 02 00 00 00       	mov    $0x2,%esi
   15978:	eb 9e                	jmp    15918 <str_to_awstr+0x98>
   1597a:	89 fa                	mov    %edi,%edx
   1597c:	e9 1b ff ff ff       	jmp    1589c <str_to_awstr+0x1c>
   15981:	eb 0d                	jmp    15990 <str_chr>
   15983:	90                   	nop
   15984:	90                   	nop
   15985:	90                   	nop
   15986:	90                   	nop
   15987:	90                   	nop
   15988:	90                   	nop
   15989:	90                   	nop
   1598a:	90                   	nop
   1598b:	90                   	nop
   1598c:	90                   	nop
   1598d:	90                   	nop
   1598e:	90                   	nop
   1598f:	90                   	nop

00015990 <str_chr>:
   15990:	55                   	push   %ebp
   15991:	89 e5                	mov    %esp,%ebp
   15993:	57                   	push   %edi
   15994:	56                   	push   %esi
   15995:	53                   	push   %ebx
   15996:	83 ec 0c             	sub    $0xc,%esp
   15999:	31 ff                	xor    %edi,%edi
   1599b:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1599e:	eb 0f                	jmp    159af <str_chr+0x1f>
   159a0:	85 c0                	test   %eax,%eax
   159a2:	0f 84 bf 00 00 00    	je     15a67 <str_chr+0xd7>
   159a8:	89 d7                	mov    %edx,%edi
   159aa:	39 45 0c             	cmp    %eax,0xc(%ebp)
   159ad:	74 42                	je     159f1 <str_chr+0x61>
   159af:	8d 04 3b             	lea    (%ebx,%edi,1),%eax
   159b2:	8d 57 01             	lea    0x1(%edi),%edx
   159b5:	89 45 f0             	mov    %eax,-0x10(%ebp)
   159b8:	0f be 00             	movsbl (%eax),%eax
   159bb:	84 c0                	test   %al,%al
   159bd:	79 e1                	jns    159a0 <str_chr+0x10>
   159bf:	88 c1                	mov    %al,%cl
   159c1:	83 e1 e0             	and    $0xffffffe0,%ecx
   159c4:	80 f9 c0             	cmp    $0xc0,%cl
   159c7:	74 33                	je     159fc <str_chr+0x6c>
   159c9:	88 c1                	mov    %al,%cl
   159cb:	83 e1 f0             	and    $0xfffffff0,%ecx
   159ce:	80 f9 e0             	cmp    $0xe0,%cl
   159d1:	0f 84 87 00 00 00    	je     15a5e <str_chr+0xce>
   159d7:	88 c1                	mov    %al,%cl
   159d9:	83 e1 f8             	and    $0xfffffff8,%ecx
   159dc:	80 f9 f0             	cmp    $0xf0,%cl
   159df:	0f 84 94 00 00 00    	je     15a79 <str_chr+0xe9>
   159e5:	b8 3f 00 00 00       	mov    $0x3f,%eax
   159ea:	89 d7                	mov    %edx,%edi
   159ec:	39 45 0c             	cmp    %eax,0xc(%ebp)
   159ef:	75 be                	jne    159af <str_chr+0x1f>
   159f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
   159f4:	83 c4 0c             	add    $0xc,%esp
   159f7:	5b                   	pop    %ebx
   159f8:	5e                   	pop    %esi
   159f9:	5f                   	pop    %edi
   159fa:	5d                   	pop    %ebp
   159fb:	c3                   	ret    
   159fc:	b1 1f                	mov    $0x1f,%cl
   159fe:	be 01 00 00 00       	mov    $0x1,%esi
   15a03:	21 c8                	and    %ecx,%eax
   15a05:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
   15a08:	83 c7 02             	add    $0x2,%edi
   15a0b:	88 4d eb             	mov    %cl,-0x15(%ebp)
   15a0e:	83 e1 c0             	and    $0xffffffc0,%ecx
   15a11:	25 ff 00 00 00       	and    $0xff,%eax
   15a16:	89 7d ec             	mov    %edi,-0x14(%ebp)
   15a19:	80 f9 80             	cmp    $0x80,%cl
   15a1c:	75 64                	jne    15a82 <str_chr+0xf2>
   15a1e:	8d 3c 32             	lea    (%edx,%esi,1),%edi
   15a21:	8a 4d eb             	mov    -0x15(%ebp),%cl
   15a24:	8b 55 ec             	mov    -0x14(%ebp),%edx
   15a27:	89 5d ec             	mov    %ebx,-0x14(%ebp)
   15a2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   15a30:	89 c6                	mov    %eax,%esi
   15a32:	89 c8                	mov    %ecx,%eax
   15a34:	c1 e6 06             	shl    $0x6,%esi
   15a37:	83 e0 3f             	and    $0x3f,%eax
   15a3a:	09 f0                	or     %esi,%eax
   15a3c:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   15a3f:	39 fa                	cmp    %edi,%edx
   15a41:	0f 84 59 ff ff ff    	je     159a0 <str_chr+0x10>
   15a47:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
   15a4a:	be c0 ff ff ff       	mov    $0xffffffc0,%esi
   15a4f:	21 ce                	and    %ecx,%esi
   15a51:	42                   	inc    %edx
   15a52:	89 f3                	mov    %esi,%ebx
   15a54:	80 fb 80             	cmp    $0x80,%bl
   15a57:	74 d7                	je     15a30 <str_chr+0xa0>
   15a59:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   15a5c:	eb 87                	jmp    159e5 <str_chr+0x55>
   15a5e:	b1 0f                	mov    $0xf,%cl
   15a60:	be 02 00 00 00       	mov    $0x2,%esi
   15a65:	eb 9c                	jmp    15a03 <str_chr+0x73>
   15a67:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
   15a6e:	8b 45 f0             	mov    -0x10(%ebp),%eax
   15a71:	83 c4 0c             	add    $0xc,%esp
   15a74:	5b                   	pop    %ebx
   15a75:	5e                   	pop    %esi
   15a76:	5f                   	pop    %edi
   15a77:	5d                   	pop    %ebp
   15a78:	c3                   	ret    
   15a79:	b1 07                	mov    $0x7,%cl
   15a7b:	be 03 00 00 00       	mov    $0x3,%esi
   15a80:	eb 81                	jmp    15a03 <str_chr+0x73>
   15a82:	89 fa                	mov    %edi,%edx
   15a84:	e9 5c ff ff ff       	jmp    159e5 <str_chr+0x55>
   15a89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00015a90 <str_rtrim>:
   15a90:	55                   	push   %ebp
   15a91:	89 e5                	mov    %esp,%ebp
   15a93:	57                   	push   %edi
   15a94:	56                   	push   %esi
   15a95:	53                   	push   %ebx
   15a96:	83 ec 10             	sub    $0x10,%esp
   15a99:	31 ff                	xor    %edi,%edi
   15a9b:	8b 5d 08             	mov    0x8(%ebp),%ebx
   15a9e:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
   15aa5:	c6 45 ef 01          	movb   $0x1,-0x11(%ebp)
   15aa9:	8d 57 01             	lea    0x1(%edi),%edx
   15aac:	8d 0c 3b             	lea    (%ebx,%edi,1),%ecx
   15aaf:	89 4d f0             	mov    %ecx,-0x10(%ebp)
   15ab2:	0f be 01             	movsbl (%ecx),%eax
   15ab5:	84 c0                	test   %al,%al
   15ab7:	78 2d                	js     15ae6 <str_rtrim+0x56>
   15ab9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15ac0:	85 c0                	test   %eax,%eax
   15ac2:	74 66                	je     15b2a <str_rtrim+0x9a>
   15ac4:	39 45 0c             	cmp    %eax,0xc(%ebp)
   15ac7:	74 4d                	je     15b16 <str_rtrim+0x86>
   15ac9:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
   15ad0:	c6 45 ef 01          	movb   $0x1,-0x11(%ebp)
   15ad4:	89 d7                	mov    %edx,%edi
   15ad6:	8d 0c 3b             	lea    (%ebx,%edi,1),%ecx
   15ad9:	8d 57 01             	lea    0x1(%edi),%edx
   15adc:	89 4d f0             	mov    %ecx,-0x10(%ebp)
   15adf:	0f be 01             	movsbl (%ecx),%eax
   15ae2:	84 c0                	test   %al,%al
   15ae4:	79 da                	jns    15ac0 <str_rtrim+0x30>
   15ae6:	88 c1                	mov    %al,%cl
   15ae8:	83 e1 e0             	and    $0xffffffe0,%ecx
   15aeb:	80 f9 c0             	cmp    $0xc0,%cl
   15aee:	74 4f                	je     15b3f <str_rtrim+0xaf>
   15af0:	88 c1                	mov    %al,%cl
   15af2:	83 e1 f0             	and    $0xfffffff0,%ecx
   15af5:	80 f9 e0             	cmp    $0xe0,%cl
   15af8:	0f 84 a3 00 00 00    	je     15ba1 <str_rtrim+0x111>
   15afe:	88 c1                	mov    %al,%cl
   15b00:	83 e1 f8             	and    $0xfffffff8,%ecx
   15b03:	80 f9 f0             	cmp    $0xf0,%cl
   15b06:	0f 84 9e 00 00 00    	je     15baa <str_rtrim+0x11a>
   15b0c:	b8 3f 00 00 00       	mov    $0x3f,%eax
   15b11:	39 45 0c             	cmp    %eax,0xc(%ebp)
   15b14:	75 b3                	jne    15ac9 <str_rtrim+0x39>
   15b16:	80 7d ef 00          	cmpb   $0x0,-0x11(%ebp)
   15b1a:	74 b8                	je     15ad4 <str_rtrim+0x44>
   15b1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
   15b1f:	c6 45 ef 00          	movb   $0x0,-0x11(%ebp)
   15b23:	89 45 e8             	mov    %eax,-0x18(%ebp)
   15b26:	89 d7                	mov    %edx,%edi
   15b28:	eb ac                	jmp    15ad6 <str_rtrim+0x46>
   15b2a:	8b 45 e8             	mov    -0x18(%ebp),%eax
   15b2d:	85 c0                	test   %eax,%eax
   15b2f:	74 06                	je     15b37 <str_rtrim+0xa7>
   15b31:	8b 45 e8             	mov    -0x18(%ebp),%eax
   15b34:	c6 00 00             	movb   $0x0,(%eax)
   15b37:	83 c4 10             	add    $0x10,%esp
   15b3a:	5b                   	pop    %ebx
   15b3b:	5e                   	pop    %esi
   15b3c:	5f                   	pop    %edi
   15b3d:	5d                   	pop    %ebp
   15b3e:	c3                   	ret    
   15b3f:	b1 1f                	mov    $0x1f,%cl
   15b41:	be 01 00 00 00       	mov    $0x1,%esi
   15b46:	21 c8                	and    %ecx,%eax
   15b48:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
   15b4b:	83 c7 02             	add    $0x2,%edi
   15b4e:	88 4d ee             	mov    %cl,-0x12(%ebp)
   15b51:	83 e1 c0             	and    $0xffffffc0,%ecx
   15b54:	25 ff 00 00 00       	and    $0xff,%eax
   15b59:	89 7d e4             	mov    %edi,-0x1c(%ebp)
   15b5c:	80 f9 80             	cmp    $0x80,%cl
   15b5f:	75 52                	jne    15bb3 <str_rtrim+0x123>
   15b61:	8d 3c 32             	lea    (%edx,%esi,1),%edi
   15b64:	8a 4d ee             	mov    -0x12(%ebp),%cl
   15b67:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   15b6a:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
   15b6d:	8d 76 00             	lea    0x0(%esi),%esi
   15b70:	89 c6                	mov    %eax,%esi
   15b72:	89 c8                	mov    %ecx,%eax
   15b74:	c1 e6 06             	shl    $0x6,%esi
   15b77:	83 e0 3f             	and    $0x3f,%eax
   15b7a:	09 f0                	or     %esi,%eax
   15b7c:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   15b7f:	39 fa                	cmp    %edi,%edx
   15b81:	0f 84 39 ff ff ff    	je     15ac0 <str_rtrim+0x30>
   15b87:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
   15b8a:	be c0 ff ff ff       	mov    $0xffffffc0,%esi
   15b8f:	21 ce                	and    %ecx,%esi
   15b91:	42                   	inc    %edx
   15b92:	89 f3                	mov    %esi,%ebx
   15b94:	80 fb 80             	cmp    $0x80,%bl
   15b97:	74 d7                	je     15b70 <str_rtrim+0xe0>
   15b99:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   15b9c:	e9 6b ff ff ff       	jmp    15b0c <str_rtrim+0x7c>
   15ba1:	b1 0f                	mov    $0xf,%cl
   15ba3:	be 02 00 00 00       	mov    $0x2,%esi
   15ba8:	eb 9c                	jmp    15b46 <str_rtrim+0xb6>
   15baa:	b1 07                	mov    $0x7,%cl
   15bac:	be 03 00 00 00       	mov    $0x3,%esi
   15bb1:	eb 93                	jmp    15b46 <str_rtrim+0xb6>
   15bb3:	89 fa                	mov    %edi,%edx
   15bb5:	e9 52 ff ff ff       	jmp    15b0c <str_rtrim+0x7c>
   15bba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00015bc0 <str_ltrim>:
   15bc0:	55                   	push   %ebp
   15bc1:	89 e5                	mov    %esp,%ebp
   15bc3:	57                   	push   %edi
   15bc4:	56                   	push   %esi
   15bc5:	53                   	push   %ebx
   15bc6:	83 ec 3c             	sub    $0x3c,%esp
   15bc9:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
   15bd0:	8b 7d 08             	mov    0x8(%ebp),%edi
   15bd3:	80 3f 00             	cmpb   $0x0,(%edi)
   15bd6:	74 12                	je     15bea <str_ltrim+0x2a>
   15bd8:	31 c0                	xor    %eax,%eax
   15bda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   15be0:	40                   	inc    %eax
   15be1:	80 3c 07 00          	cmpb   $0x0,(%edi,%eax,1)
   15be5:	75 f9                	jne    15be0 <str_ltrim+0x20>
   15be7:	89 45 d8             	mov    %eax,-0x28(%ebp)
   15bea:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   15bf1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   15bf4:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   15bf7:	eb 15                	jmp    15c0e <str_ltrim+0x4e>
   15bf9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15c00:	85 c0                	test   %eax,%eax
   15c02:	74 47                	je     15c4b <str_ltrim+0x8b>
   15c04:	39 45 0c             	cmp    %eax,0xc(%ebp)
   15c07:	75 42                	jne    15c4b <str_ltrim+0x8b>
   15c09:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   15c0c:	89 d1                	mov    %edx,%ecx
   15c0e:	01 f9                	add    %edi,%ecx
   15c10:	42                   	inc    %edx
   15c11:	89 4d e0             	mov    %ecx,-0x20(%ebp)
   15c14:	0f be 01             	movsbl (%ecx),%eax
   15c17:	84 c0                	test   %al,%al
   15c19:	79 e5                	jns    15c00 <str_ltrim+0x40>
   15c1b:	88 c1                	mov    %al,%cl
   15c1d:	83 e1 e0             	and    $0xffffffe0,%ecx
   15c20:	80 f9 c0             	cmp    $0xc0,%cl
   15c23:	74 53                	je     15c78 <str_ltrim+0xb8>
   15c25:	88 c1                	mov    %al,%cl
   15c27:	83 e1 f0             	and    $0xfffffff0,%ecx
   15c2a:	80 f9 e0             	cmp    $0xe0,%cl
   15c2d:	0f 84 98 00 00 00    	je     15ccb <str_ltrim+0x10b>
   15c33:	88 c1                	mov    %al,%cl
   15c35:	83 e1 f8             	and    $0xfffffff8,%ecx
   15c38:	80 f9 f0             	cmp    $0xf0,%cl
   15c3b:	0f 84 93 00 00 00    	je     15cd4 <str_ltrim+0x114>
   15c41:	b8 3f 00 00 00       	mov    $0x3f,%eax
   15c46:	39 45 0c             	cmp    %eax,0xc(%ebp)
   15c49:	74 be                	je     15c09 <str_ltrim+0x49>
   15c4b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   15c4e:	85 c9                	test   %ecx,%ecx
   15c50:	74 1e                	je     15c70 <str_ltrim+0xb0>
   15c52:	8b 45 d8             	mov    -0x28(%ebp),%eax
   15c55:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   15c58:	8b 5d e0             	mov    -0x20(%ebp),%ebx
   15c5b:	29 d0                	sub    %edx,%eax
   15c5d:	89 44 24 08          	mov    %eax,0x8(%esp)
   15c61:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   15c65:	89 3c 24             	mov    %edi,(%esp)
   15c68:	e8 63 d7 ff ff       	call   133d0 <memmove>
   15c6d:	c6 03 00             	movb   $0x0,(%ebx)
   15c70:	83 c4 3c             	add    $0x3c,%esp
   15c73:	5b                   	pop    %ebx
   15c74:	5e                   	pop    %esi
   15c75:	5f                   	pop    %edi
   15c76:	5d                   	pop    %ebp
   15c77:	c3                   	ret    
   15c78:	b1 1f                	mov    $0x1f,%cl
   15c7a:	be 01 00 00 00       	mov    $0x1,%esi
   15c7f:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   15c82:	21 c8                	and    %ecx,%eax
   15c84:	83 c3 02             	add    $0x2,%ebx
   15c87:	8a 0c 17             	mov    (%edi,%edx,1),%cl
   15c8a:	89 5d d4             	mov    %ebx,-0x2c(%ebp)
   15c8d:	88 cb                	mov    %cl,%bl
   15c8f:	83 e3 c0             	and    $0xffffffc0,%ebx
   15c92:	25 ff 00 00 00       	and    $0xff,%eax
   15c97:	80 fb 80             	cmp    $0x80,%bl
   15c9a:	75 41                	jne    15cdd <str_ltrim+0x11d>
   15c9c:	01 d6                	add    %edx,%esi
   15c9e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   15ca1:	eb 13                	jmp    15cb6 <str_ltrim+0xf6>
   15ca3:	90                   	nop
   15ca4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15ca8:	8a 0c 17             	mov    (%edi,%edx,1),%cl
   15cab:	42                   	inc    %edx
   15cac:	88 cb                	mov    %cl,%bl
   15cae:	83 e3 c0             	and    $0xffffffc0,%ebx
   15cb1:	80 fb 80             	cmp    $0x80,%bl
   15cb4:	75 8b                	jne    15c41 <str_ltrim+0x81>
   15cb6:	89 c3                	mov    %eax,%ebx
   15cb8:	89 c8                	mov    %ecx,%eax
   15cba:	c1 e3 06             	shl    $0x6,%ebx
   15cbd:	83 e0 3f             	and    $0x3f,%eax
   15cc0:	09 d8                	or     %ebx,%eax
   15cc2:	39 f2                	cmp    %esi,%edx
   15cc4:	75 e2                	jne    15ca8 <str_ltrim+0xe8>
   15cc6:	e9 35 ff ff ff       	jmp    15c00 <str_ltrim+0x40>
   15ccb:	b1 0f                	mov    $0xf,%cl
   15ccd:	be 02 00 00 00       	mov    $0x2,%esi
   15cd2:	eb ab                	jmp    15c7f <str_ltrim+0xbf>
   15cd4:	b1 07                	mov    $0x7,%cl
   15cd6:	be 03 00 00 00       	mov    $0x3,%esi
   15cdb:	eb a2                	jmp    15c7f <str_ltrim+0xbf>
   15cdd:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   15ce0:	e9 5c ff ff ff       	jmp    15c41 <str_ltrim+0x81>
   15ce5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15ce9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00015cf0 <str_rchr>:
   15cf0:	55                   	push   %ebp
   15cf1:	89 e5                	mov    %esp,%ebp
   15cf3:	57                   	push   %edi
   15cf4:	56                   	push   %esi
   15cf5:	53                   	push   %ebx
   15cf6:	83 ec 10             	sub    $0x10,%esp
   15cf9:	31 ff                	xor    %edi,%edi
   15cfb:	8b 5d 08             	mov    0x8(%ebp),%ebx
   15cfe:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
   15d05:	8d 57 01             	lea    0x1(%edi),%edx
   15d08:	8d 0c 3b             	lea    (%ebx,%edi,1),%ecx
   15d0b:	89 4d f0             	mov    %ecx,-0x10(%ebp)
   15d0e:	0f be 01             	movsbl (%ecx),%eax
   15d11:	84 c0                	test   %al,%al
   15d13:	78 1e                	js     15d33 <str_rchr+0x43>
   15d15:	8d 76 00             	lea    0x0(%esi),%esi
   15d18:	85 c0                	test   %eax,%eax
   15d1a:	74 51                	je     15d6d <str_rchr+0x7d>
   15d1c:	39 45 0c             	cmp    %eax,0xc(%ebp)
   15d1f:	74 42                	je     15d63 <str_rchr+0x73>
   15d21:	89 d7                	mov    %edx,%edi
   15d23:	8d 0c 3b             	lea    (%ebx,%edi,1),%ecx
   15d26:	8d 57 01             	lea    0x1(%edi),%edx
   15d29:	89 4d f0             	mov    %ecx,-0x10(%ebp)
   15d2c:	0f be 01             	movsbl (%ecx),%eax
   15d2f:	84 c0                	test   %al,%al
   15d31:	79 e5                	jns    15d18 <str_rchr+0x28>
   15d33:	88 c1                	mov    %al,%cl
   15d35:	83 e1 e0             	and    $0xffffffe0,%ecx
   15d38:	80 f9 c0             	cmp    $0xc0,%cl
   15d3b:	74 3b                	je     15d78 <str_rchr+0x88>
   15d3d:	88 c1                	mov    %al,%cl
   15d3f:	83 e1 f0             	and    $0xfffffff0,%ecx
   15d42:	80 f9 e0             	cmp    $0xe0,%cl
   15d45:	0f 84 8b 00 00 00    	je     15dd6 <str_rchr+0xe6>
   15d4b:	88 c1                	mov    %al,%cl
   15d4d:	83 e1 f8             	and    $0xfffffff8,%ecx
   15d50:	80 f9 f0             	cmp    $0xf0,%cl
   15d53:	0f 84 86 00 00 00    	je     15ddf <str_rchr+0xef>
   15d59:	b8 3f 00 00 00       	mov    $0x3f,%eax
   15d5e:	39 45 0c             	cmp    %eax,0xc(%ebp)
   15d61:	75 be                	jne    15d21 <str_rchr+0x31>
   15d63:	8b 45 f0             	mov    -0x10(%ebp),%eax
   15d66:	89 d7                	mov    %edx,%edi
   15d68:	89 45 ec             	mov    %eax,-0x14(%ebp)
   15d6b:	eb b6                	jmp    15d23 <str_rchr+0x33>
   15d6d:	8b 45 ec             	mov    -0x14(%ebp),%eax
   15d70:	83 c4 10             	add    $0x10,%esp
   15d73:	5b                   	pop    %ebx
   15d74:	5e                   	pop    %esi
   15d75:	5f                   	pop    %edi
   15d76:	5d                   	pop    %ebp
   15d77:	c3                   	ret    
   15d78:	b1 1f                	mov    $0x1f,%cl
   15d7a:	be 01 00 00 00       	mov    $0x1,%esi
   15d7f:	21 c8                	and    %ecx,%eax
   15d81:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
   15d84:	83 c7 02             	add    $0x2,%edi
   15d87:	88 4d e7             	mov    %cl,-0x19(%ebp)
   15d8a:	83 e1 c0             	and    $0xffffffc0,%ecx
   15d8d:	25 ff 00 00 00       	and    $0xff,%eax
   15d92:	89 7d e8             	mov    %edi,-0x18(%ebp)
   15d95:	80 f9 80             	cmp    $0x80,%cl
   15d98:	75 4e                	jne    15de8 <str_rchr+0xf8>
   15d9a:	8d 3c 32             	lea    (%edx,%esi,1),%edi
   15d9d:	8a 4d e7             	mov    -0x19(%ebp),%cl
   15da0:	8b 55 e8             	mov    -0x18(%ebp),%edx
   15da3:	89 5d e8             	mov    %ebx,-0x18(%ebp)
   15da6:	66 90                	xchg   %ax,%ax
   15da8:	89 c6                	mov    %eax,%esi
   15daa:	89 c8                	mov    %ecx,%eax
   15dac:	c1 e6 06             	shl    $0x6,%esi
   15daf:	83 e0 3f             	and    $0x3f,%eax
   15db2:	09 f0                	or     %esi,%eax
   15db4:	8b 5d e8             	mov    -0x18(%ebp),%ebx
   15db7:	39 fa                	cmp    %edi,%edx
   15db9:	0f 84 59 ff ff ff    	je     15d18 <str_rchr+0x28>
   15dbf:	8a 0c 13             	mov    (%ebx,%edx,1),%cl
   15dc2:	be c0 ff ff ff       	mov    $0xffffffc0,%esi
   15dc7:	21 ce                	and    %ecx,%esi
   15dc9:	42                   	inc    %edx
   15dca:	89 f3                	mov    %esi,%ebx
   15dcc:	80 fb 80             	cmp    $0x80,%bl
   15dcf:	74 d7                	je     15da8 <str_rchr+0xb8>
   15dd1:	8b 5d e8             	mov    -0x18(%ebp),%ebx
   15dd4:	eb 83                	jmp    15d59 <str_rchr+0x69>
   15dd6:	b1 0f                	mov    $0xf,%cl
   15dd8:	be 02 00 00 00       	mov    $0x2,%esi
   15ddd:	eb a0                	jmp    15d7f <str_rchr+0x8f>
   15ddf:	b1 07                	mov    $0x7,%cl
   15de1:	be 03 00 00 00       	mov    $0x3,%esi
   15de6:	eb 97                	jmp    15d7f <str_rchr+0x8f>
   15de8:	89 fa                	mov    %edi,%edx
   15dea:	e9 6a ff ff ff       	jmp    15d59 <str_rchr+0x69>
   15def:	90                   	nop

00015df0 <wstr_linsert>:
   15df0:	55                   	push   %ebp
   15df1:	31 d2                	xor    %edx,%edx
   15df3:	89 e5                	mov    %esp,%ebp
   15df5:	57                   	push   %edi
   15df6:	56                   	push   %esi
   15df7:	53                   	push   %ebx
   15df8:	8b 4d 08             	mov    0x8(%ebp),%ecx
   15dfb:	8b 75 10             	mov    0x10(%ebp),%esi
   15dfe:	8b 39                	mov    (%ecx),%edi
   15e00:	85 ff                	test   %edi,%edi
   15e02:	74 0c                	je     15e10 <wstr_linsert+0x20>
   15e04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15e08:	42                   	inc    %edx
   15e09:	8b 1c 91             	mov    (%ecx,%edx,4),%ebx
   15e0c:	85 db                	test   %ebx,%ebx
   15e0e:	75 f8                	jne    15e08 <wstr_linsert+0x18>
   15e10:	31 c0                	xor    %eax,%eax
   15e12:	39 d6                	cmp    %edx,%esi
   15e14:	77 33                	ja     15e49 <wstr_linsert+0x59>
   15e16:	8d 5e 01             	lea    0x1(%esi),%ebx
   15e19:	3b 5d 14             	cmp    0x14(%ebp),%ebx
   15e1c:	77 2b                	ja     15e49 <wstr_linsert+0x59>
   15e1e:	8d 42 01             	lea    0x1(%edx),%eax
   15e21:	8d 5e ff             	lea    -0x1(%esi),%ebx
   15e24:	39 c6                	cmp    %eax,%esi
   15e26:	72 0a                	jb     15e32 <wstr_linsert+0x42>
   15e28:	eb 17                	jmp    15e41 <wstr_linsert+0x51>
   15e2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   15e30:	89 fa                	mov    %edi,%edx
   15e32:	8b 3c 91             	mov    (%ecx,%edx,4),%edi
   15e35:	89 3c 81             	mov    %edi,(%ecx,%eax,4)
   15e38:	8d 7a ff             	lea    -0x1(%edx),%edi
   15e3b:	89 d0                	mov    %edx,%eax
   15e3d:	39 df                	cmp    %ebx,%edi
   15e3f:	75 ef                	jne    15e30 <wstr_linsert+0x40>
   15e41:	8b 45 0c             	mov    0xc(%ebp),%eax
   15e44:	89 04 b1             	mov    %eax,(%ecx,%esi,4)
   15e47:	b0 01                	mov    $0x1,%al
   15e49:	5b                   	pop    %ebx
   15e4a:	5e                   	pop    %esi
   15e4b:	5f                   	pop    %edi
   15e4c:	5d                   	pop    %ebp
   15e4d:	c3                   	ret    
   15e4e:	66 90                	xchg   %ax,%ax

00015e50 <wstr_remove>:
   15e50:	55                   	push   %ebp
   15e51:	89 e5                	mov    %esp,%ebp
   15e53:	53                   	push   %ebx
   15e54:	8b 4d 08             	mov    0x8(%ebp),%ecx
   15e57:	8b 19                	mov    (%ecx),%ebx
   15e59:	85 db                	test   %ebx,%ebx
   15e5b:	74 33                	je     15e90 <wstr_remove+0x40>
   15e5d:	31 c0                	xor    %eax,%eax
   15e5f:	90                   	nop
   15e60:	40                   	inc    %eax
   15e61:	8b 14 81             	mov    (%ecx,%eax,4),%edx
   15e64:	85 d2                	test   %edx,%edx
   15e66:	75 f8                	jne    15e60 <wstr_remove+0x10>
   15e68:	39 45 0c             	cmp    %eax,0xc(%ebp)
   15e6b:	73 23                	jae    15e90 <wstr_remove+0x40>
   15e6d:	8b 55 0c             	mov    0xc(%ebp),%edx
   15e70:	42                   	inc    %edx
   15e71:	39 c2                	cmp    %eax,%edx
   15e73:	77 0f                	ja     15e84 <wstr_remove+0x34>
   15e75:	8d 76 00             	lea    0x0(%esi),%esi
   15e78:	8b 1c 91             	mov    (%ecx,%edx,4),%ebx
   15e7b:	89 5c 91 fc          	mov    %ebx,-0x4(%ecx,%edx,4)
   15e7f:	42                   	inc    %edx
   15e80:	39 c2                	cmp    %eax,%edx
   15e82:	76 f4                	jbe    15e78 <wstr_remove+0x28>
   15e84:	b0 01                	mov    $0x1,%al
   15e86:	5b                   	pop    %ebx
   15e87:	5d                   	pop    %ebp
   15e88:	c3                   	ret    
   15e89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15e90:	31 c0                	xor    %eax,%eax
   15e92:	5b                   	pop    %ebx
   15e93:	5d                   	pop    %ebp
   15e94:	c3                   	ret    
   15e95:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15e99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00015ea0 <stricmp>:
   15ea0:	55                   	push   %ebp
   15ea1:	89 e5                	mov    %esp,%ebp
   15ea3:	57                   	push   %edi
   15ea4:	56                   	push   %esi
   15ea5:	53                   	push   %ebx
   15ea6:	57                   	push   %edi
   15ea7:	8b 55 08             	mov    0x8(%ebp),%edx
   15eaa:	0f be 02             	movsbl (%edx),%eax
   15ead:	84 c0                	test   %al,%al
   15eaf:	74 7c                	je     15f2d <stricmp+0x8d>
   15eb1:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   15eb4:	31 d2                	xor    %edx,%edx
   15eb6:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
   15ebd:	8d 70 bf             	lea    -0x41(%eax),%esi
   15ec0:	0f be 0b             	movsbl (%ebx),%ecx
   15ec3:	84 c9                	test   %cl,%cl
   15ec5:	75 23                	jne    15eea <stricmp+0x4a>
   15ec7:	eb 46                	jmp    15f0f <stricmp+0x6f>
   15ec9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15ed0:	42                   	inc    %edx
   15ed1:	8b 4d 08             	mov    0x8(%ebp),%ecx
   15ed4:	89 55 f0             	mov    %edx,-0x10(%ebp)
   15ed7:	0f be 04 11          	movsbl (%ecx,%edx,1),%eax
   15edb:	84 c0                	test   %al,%al
   15edd:	74 59                	je     15f38 <stricmp+0x98>
   15edf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   15ee2:	0f be 0c 13          	movsbl (%ebx,%edx,1),%ecx
   15ee6:	84 c9                	test   %cl,%cl
   15ee8:	74 5e                	je     15f48 <stricmp+0xa8>
   15eea:	8d 70 bf             	lea    -0x41(%eax),%esi
   15eed:	89 c3                	mov    %eax,%ebx
   15eef:	83 fe 19             	cmp    $0x19,%esi
   15ef2:	77 03                	ja     15ef7 <stricmp+0x57>
   15ef4:	8d 58 20             	lea    0x20(%eax),%ebx
   15ef7:	8d 79 bf             	lea    -0x41(%ecx),%edi
   15efa:	83 ff 19             	cmp    $0x19,%edi
   15efd:	77 03                	ja     15f02 <stricmp+0x62>
   15eff:	83 c1 20             	add    $0x20,%ecx
   15f02:	39 cb                	cmp    %ecx,%ebx
   15f04:	74 ca                	je     15ed0 <stricmp+0x30>
   15f06:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   15f09:	8b 4d f0             	mov    -0x10(%ebp),%ecx
   15f0c:	8a 14 0b             	mov    (%ebx,%ecx,1),%dl
   15f0f:	83 fe 19             	cmp    $0x19,%esi
   15f12:	77 03                	ja     15f17 <stricmp+0x77>
   15f14:	83 c0 20             	add    $0x20,%eax
   15f17:	0f be d2             	movsbl %dl,%edx
   15f1a:	8d 4a bf             	lea    -0x41(%edx),%ecx
   15f1d:	83 f9 19             	cmp    $0x19,%ecx
   15f20:	77 03                	ja     15f25 <stricmp+0x85>
   15f22:	83 c2 20             	add    $0x20,%edx
   15f25:	5e                   	pop    %esi
   15f26:	29 d0                	sub    %edx,%eax
   15f28:	5b                   	pop    %ebx
   15f29:	5e                   	pop    %esi
   15f2a:	5f                   	pop    %edi
   15f2b:	5d                   	pop    %ebp
   15f2c:	c3                   	ret    
   15f2d:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
   15f34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15f38:	8b 45 f0             	mov    -0x10(%ebp),%eax
   15f3b:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   15f3e:	8a 14 01             	mov    (%ecx,%eax,1),%dl
   15f41:	31 c0                	xor    %eax,%eax
   15f43:	eb d2                	jmp    15f17 <stricmp+0x77>
   15f45:	8d 76 00             	lea    0x0(%esi),%esi
   15f48:	8d 70 bf             	lea    -0x41(%eax),%esi
   15f4b:	31 d2                	xor    %edx,%edx
   15f4d:	eb c0                	jmp    15f0f <stricmp+0x6f>
   15f4f:	90                   	nop

00015f50 <strtol>:
   15f50:	55                   	push   %ebp
   15f51:	89 e5                	mov    %esp,%ebp
   15f53:	83 ec 14             	sub    $0x14,%esp
   15f56:	8d 45 fc             	lea    -0x4(%ebp),%eax
   15f59:	8b 4d 10             	mov    0x10(%ebp),%ecx
   15f5c:	89 04 24             	mov    %eax,(%esp)
   15f5f:	8b 55 0c             	mov    0xc(%ebp),%edx
   15f62:	8b 45 08             	mov    0x8(%ebp),%eax
   15f65:	c6 45 fc 00          	movb   $0x0,-0x4(%ebp)
   15f69:	e8 d2 d7 ff ff       	call   13740 <_strtoul>
   15f6e:	85 c0                	test   %eax,%eax
   15f70:	78 0e                	js     15f80 <strtol+0x30>
   15f72:	80 7d fc 00          	cmpb   $0x0,-0x4(%ebp)
   15f76:	74 02                	je     15f7a <strtol+0x2a>
   15f78:	f7 d8                	neg    %eax
   15f7a:	c9                   	leave  
   15f7b:	c3                   	ret    
   15f7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   15f80:	80 7d fc 01          	cmpb   $0x1,-0x4(%ebp)
   15f84:	19 c0                	sbb    %eax,%eax
   15f86:	c9                   	leave  
   15f87:	80 e4 ff             	and    $0xff,%ah
   15f8a:	05 00 00 00 80       	add    $0x80000000,%eax
   15f8f:	c3                   	ret    

00015f90 <str_dup>:
   15f90:	55                   	push   %ebp
   15f91:	89 e5                	mov    %esp,%ebp
   15f93:	56                   	push   %esi
   15f94:	53                   	push   %ebx
   15f95:	83 ec 20             	sub    $0x20,%esp
   15f98:	8b 5d 08             	mov    0x8(%ebp),%ebx
   15f9b:	80 3b 00             	cmpb   $0x0,(%ebx)
   15f9e:	74 3b                	je     15fdb <str_dup+0x4b>
   15fa0:	31 c0                	xor    %eax,%eax
   15fa2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   15fa8:	40                   	inc    %eax
   15fa9:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)
   15fad:	75 f9                	jne    15fa8 <str_dup+0x18>
   15faf:	8d 70 01             	lea    0x1(%eax),%esi
   15fb2:	89 34 24             	mov    %esi,(%esp)
   15fb5:	e8 16 a1 00 00       	call   200d0 <malloc>
   15fba:	85 c0                	test   %eax,%eax
   15fbc:	74 16                	je     15fd4 <str_dup+0x44>
   15fbe:	89 04 24             	mov    %eax,(%esp)
   15fc1:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   15fc5:	89 74 24 04          	mov    %esi,0x4(%esp)
   15fc9:	89 45 f4             	mov    %eax,-0xc(%ebp)
   15fcc:	e8 cf eb ff ff       	call   14ba0 <str_cpy>
   15fd1:	8b 45 f4             	mov    -0xc(%ebp),%eax
   15fd4:	83 c4 20             	add    $0x20,%esp
   15fd7:	5b                   	pop    %ebx
   15fd8:	5e                   	pop    %esi
   15fd9:	5d                   	pop    %ebp
   15fda:	c3                   	ret    
   15fdb:	be 01 00 00 00       	mov    $0x1,%esi
   15fe0:	eb d0                	jmp    15fb2 <str_dup+0x22>
   15fe2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   15fe9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00015ff0 <str_ndup>:
   15ff0:	55                   	push   %ebp
   15ff1:	89 e5                	mov    %esp,%ebp
   15ff3:	57                   	push   %edi
   15ff4:	56                   	push   %esi
   15ff5:	53                   	push   %ebx
   15ff6:	83 ec 2c             	sub    $0x2c,%esp
   15ff9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   15ffc:	80 3b 00             	cmpb   $0x0,(%ebx)
   15fff:	74 4c                	je     1604d <str_ndup+0x5d>
   16001:	31 c0                	xor    %eax,%eax
   16003:	90                   	nop
   16004:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16008:	40                   	inc    %eax
   16009:	80 3c 03 00          	cmpb   $0x0,(%ebx,%eax,1)
   1600d:	75 f9                	jne    16008 <str_ndup+0x18>
   1600f:	89 c6                	mov    %eax,%esi
   16011:	3b 45 0c             	cmp    0xc(%ebp),%eax
   16014:	77 32                	ja     16048 <str_ndup+0x58>
   16016:	8d 7e 01             	lea    0x1(%esi),%edi
   16019:	89 3c 24             	mov    %edi,(%esp)
   1601c:	e8 af a0 00 00       	call   200d0 <malloc>
   16021:	85 c0                	test   %eax,%eax
   16023:	74 1a                	je     1603f <str_ndup+0x4f>
   16025:	89 04 24             	mov    %eax,(%esp)
   16028:	89 74 24 0c          	mov    %esi,0xc(%esp)
   1602c:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   16030:	89 7c 24 04          	mov    %edi,0x4(%esp)
   16034:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   16037:	e8 54 ed ff ff       	call   14d90 <str_ncpy>
   1603c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1603f:	83 c4 2c             	add    $0x2c,%esp
   16042:	5b                   	pop    %ebx
   16043:	5e                   	pop    %esi
   16044:	5f                   	pop    %edi
   16045:	5d                   	pop    %ebp
   16046:	c3                   	ret    
   16047:	90                   	nop
   16048:	8b 75 0c             	mov    0xc(%ebp),%esi
   1604b:	eb c9                	jmp    16016 <str_ndup+0x26>
   1604d:	31 f6                	xor    %esi,%esi
   1604f:	bf 01 00 00 00       	mov    $0x1,%edi
   16054:	eb c3                	jmp    16019 <str_ndup+0x29>
   16056:	8d 76 00             	lea    0x0(%esi),%esi
   16059:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00016060 <strtoul>:
   16060:	55                   	push   %ebp
   16061:	89 e5                	mov    %esp,%ebp
   16063:	83 ec 14             	sub    $0x14,%esp
   16066:	8d 45 fc             	lea    -0x4(%ebp),%eax
   16069:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1606c:	89 04 24             	mov    %eax,(%esp)
   1606f:	8b 55 0c             	mov    0xc(%ebp),%edx
   16072:	8b 45 08             	mov    0x8(%ebp),%eax
   16075:	c6 45 fc 00          	movb   $0x0,-0x4(%ebp)
   16079:	e8 c2 d6 ff ff       	call   13740 <_strtoul>
   1607e:	80 7d fc 00          	cmpb   $0x0,-0x4(%ebp)
   16082:	74 02                	je     16086 <strtoul+0x26>
   16084:	f7 d8                	neg    %eax
   16086:	c9                   	leave  
   16087:	c3                   	ret    
   16088:	90                   	nop
   16089:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00016090 <strtok_r>:
   16090:	55                   	push   %ebp
   16091:	89 e5                	mov    %esp,%ebp
   16093:	57                   	push   %edi
   16094:	56                   	push   %esi
   16095:	53                   	push   %ebx
   16096:	83 ec 0c             	sub    $0xc,%esp
   16099:	8b 45 08             	mov    0x8(%ebp),%eax
   1609c:	8b 75 0c             	mov    0xc(%ebp),%esi
   1609f:	85 c0                	test   %eax,%eax
   160a1:	0f 84 0f 02 00 00    	je     162b6 <strtok_r+0x226>
   160a7:	8b 55 08             	mov    0x8(%ebp),%edx
   160aa:	0f be 02             	movsbl (%edx),%eax
   160ad:	84 c0                	test   %al,%al
   160af:	74 6c                	je     1611d <strtok_r+0x8d>
   160b1:	89 f7                	mov    %esi,%edi
   160b3:	89 45 f0             	mov    %eax,-0x10(%ebp)
   160b6:	31 d2                	xor    %edx,%edx
   160b8:	eb 15                	jmp    160cf <strtok_r+0x3f>
   160ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   160c0:	89 da                	mov    %ebx,%edx
   160c2:	85 c0                	test   %eax,%eax
   160c4:	0f 84 c4 00 00 00    	je     1618e <strtok_r+0xfe>
   160ca:	39 45 f0             	cmp    %eax,-0x10(%ebp)
   160cd:	74 3d                	je     1610c <strtok_r+0x7c>
   160cf:	0f be 04 17          	movsbl (%edi,%edx,1),%eax
   160d3:	8d 5a 01             	lea    0x1(%edx),%ebx
   160d6:	84 c0                	test   %al,%al
   160d8:	79 e6                	jns    160c0 <strtok_r+0x30>
   160da:	88 c1                	mov    %al,%cl
   160dc:	83 e1 e0             	and    $0xffffffe0,%ecx
   160df:	80 f9 c0             	cmp    $0xc0,%cl
   160e2:	74 5c                	je     16140 <strtok_r+0xb0>
   160e4:	88 c1                	mov    %al,%cl
   160e6:	83 e1 f0             	and    $0xfffffff0,%ecx
   160e9:	80 f9 e0             	cmp    $0xe0,%cl
   160ec:	0f 84 25 01 00 00    	je     16217 <strtok_r+0x187>
   160f2:	88 c1                	mov    %al,%cl
   160f4:	83 e1 f8             	and    $0xfffffff8,%ecx
   160f7:	80 f9 f0             	cmp    $0xf0,%cl
   160fa:	0f 84 aa 01 00 00    	je     162aa <strtok_r+0x21a>
   16100:	89 da                	mov    %ebx,%edx
   16102:	b8 3f 00 00 00       	mov    $0x3f,%eax
   16107:	39 45 f0             	cmp    %eax,-0x10(%ebp)
   1610a:	75 c3                	jne    160cf <strtok_r+0x3f>
   1610c:	8b 45 08             	mov    0x8(%ebp),%eax
   1610f:	40                   	inc    %eax
   16110:	89 45 08             	mov    %eax,0x8(%ebp)
   16113:	8b 55 08             	mov    0x8(%ebp),%edx
   16116:	0f be 02             	movsbl (%edx),%eax
   16119:	84 c0                	test   %al,%al
   1611b:	75 96                	jne    160b3 <strtok_r+0x23>
   1611d:	89 d0                	mov    %edx,%eax
   1611f:	8b 55 10             	mov    0x10(%ebp),%edx
   16122:	89 c1                	mov    %eax,%ecx
   16124:	89 45 e8             	mov    %eax,-0x18(%ebp)
   16127:	39 4d 08             	cmp    %ecx,0x8(%ebp)
   1612a:	89 02                	mov    %eax,(%edx)
   1612c:	0f 85 d7 00 00 00    	jne    16209 <strtok_r+0x179>
   16132:	83 c4 0c             	add    $0xc,%esp
   16135:	31 c0                	xor    %eax,%eax
   16137:	5b                   	pop    %ebx
   16138:	5e                   	pop    %esi
   16139:	5f                   	pop    %edi
   1613a:	5d                   	pop    %ebp
   1613b:	c3                   	ret    
   1613c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16140:	b1 1f                	mov    $0x1f,%cl
   16142:	be 01 00 00 00       	mov    $0x1,%esi
   16147:	21 c8                	and    %ecx,%eax
   16149:	8a 0c 1f             	mov    (%edi,%ebx,1),%cl
   1614c:	88 4d e8             	mov    %cl,-0x18(%ebp)
   1614f:	83 e1 c0             	and    $0xffffffc0,%ecx
   16152:	25 ff 00 00 00       	and    $0xff,%eax
   16157:	83 c2 02             	add    $0x2,%edx
   1615a:	80 f9 80             	cmp    $0x80,%cl
   1615d:	75 a3                	jne    16102 <strtok_r+0x72>
   1615f:	01 de                	add    %ebx,%esi
   16161:	8a 4d e8             	mov    -0x18(%ebp),%cl
   16164:	eb 10                	jmp    16176 <strtok_r+0xe6>
   16166:	66 90                	xchg   %ax,%ax
   16168:	8a 0c 17             	mov    (%edi,%edx,1),%cl
   1616b:	42                   	inc    %edx
   1616c:	88 cb                	mov    %cl,%bl
   1616e:	83 e3 c0             	and    $0xffffffc0,%ebx
   16171:	80 fb 80             	cmp    $0x80,%bl
   16174:	75 8c                	jne    16102 <strtok_r+0x72>
   16176:	89 c3                	mov    %eax,%ebx
   16178:	89 c8                	mov    %ecx,%eax
   1617a:	c1 e3 06             	shl    $0x6,%ebx
   1617d:	83 e0 3f             	and    $0x3f,%eax
   16180:	09 d8                	or     %ebx,%eax
   16182:	39 f2                	cmp    %esi,%edx
   16184:	75 e2                	jne    16168 <strtok_r+0xd8>
   16186:	85 c0                	test   %eax,%eax
   16188:	0f 85 3c ff ff ff    	jne    160ca <strtok_r+0x3a>
   1618e:	8b 4d 08             	mov    0x8(%ebp),%ecx
   16191:	0f be 01             	movsbl (%ecx),%eax
   16194:	84 c0                	test   %al,%al
   16196:	0f 84 ef 00 00 00    	je     1628b <strtok_r+0x1fb>
   1619c:	89 4d e8             	mov    %ecx,-0x18(%ebp)
   1619f:	89 45 f0             	mov    %eax,-0x10(%ebp)
   161a2:	31 d2                	xor    %edx,%edx
   161a4:	eb 11                	jmp    161b7 <strtok_r+0x127>
   161a6:	66 90                	xchg   %ax,%ax
   161a8:	89 da                	mov    %ebx,%edx
   161aa:	85 c0                	test   %eax,%eax
   161ac:	0f 84 c4 00 00 00    	je     16276 <strtok_r+0x1e6>
   161b2:	39 45 f0             	cmp    %eax,-0x10(%ebp)
   161b5:	74 3d                	je     161f4 <strtok_r+0x164>
   161b7:	0f be 04 17          	movsbl (%edi,%edx,1),%eax
   161bb:	8d 5a 01             	lea    0x1(%edx),%ebx
   161be:	84 c0                	test   %al,%al
   161c0:	79 e6                	jns    161a8 <strtok_r+0x118>
   161c2:	88 c1                	mov    %al,%cl
   161c4:	83 e1 e0             	and    $0xffffffe0,%ecx
   161c7:	80 f9 c0             	cmp    $0xc0,%cl
   161ca:	74 57                	je     16223 <strtok_r+0x193>
   161cc:	88 c1                	mov    %al,%cl
   161ce:	83 e1 f0             	and    $0xfffffff0,%ecx
   161d1:	80 f9 e0             	cmp    $0xe0,%cl
   161d4:	0f 84 be 00 00 00    	je     16298 <strtok_r+0x208>
   161da:	88 c1                	mov    %al,%cl
   161dc:	83 e1 f8             	and    $0xfffffff8,%ecx
   161df:	80 f9 f0             	cmp    $0xf0,%cl
   161e2:	0f 84 b9 00 00 00    	je     162a1 <strtok_r+0x211>
   161e8:	89 da                	mov    %ebx,%edx
   161ea:	b8 3f 00 00 00       	mov    $0x3f,%eax
   161ef:	39 45 f0             	cmp    %eax,-0x10(%ebp)
   161f2:	75 c3                	jne    161b7 <strtok_r+0x127>
   161f4:	8b 45 e8             	mov    -0x18(%ebp),%eax
   161f7:	8b 55 10             	mov    0x10(%ebp),%edx
   161fa:	40                   	inc    %eax
   161fb:	8b 4d e8             	mov    -0x18(%ebp),%ecx
   161fe:	89 02                	mov    %eax,(%edx)
   16200:	39 4d 08             	cmp    %ecx,0x8(%ebp)
   16203:	0f 84 29 ff ff ff    	je     16132 <strtok_r+0xa2>
   16209:	c6 01 00             	movb   $0x0,(%ecx)
   1620c:	8b 45 08             	mov    0x8(%ebp),%eax
   1620f:	83 c4 0c             	add    $0xc,%esp
   16212:	5b                   	pop    %ebx
   16213:	5e                   	pop    %esi
   16214:	5f                   	pop    %edi
   16215:	5d                   	pop    %ebp
   16216:	c3                   	ret    
   16217:	b1 0f                	mov    $0xf,%cl
   16219:	be 02 00 00 00       	mov    $0x2,%esi
   1621e:	e9 24 ff ff ff       	jmp    16147 <strtok_r+0xb7>
   16223:	b1 1f                	mov    $0x1f,%cl
   16225:	be 01 00 00 00       	mov    $0x1,%esi
   1622a:	21 c8                	and    %ecx,%eax
   1622c:	8a 0c 1f             	mov    (%edi,%ebx,1),%cl
   1622f:	88 4d ee             	mov    %cl,-0x12(%ebp)
   16232:	83 e1 c0             	and    $0xffffffc0,%ecx
   16235:	25 ff 00 00 00       	and    $0xff,%eax
   1623a:	83 c2 02             	add    $0x2,%edx
   1623d:	80 f9 80             	cmp    $0x80,%cl
   16240:	75 a8                	jne    161ea <strtok_r+0x15a>
   16242:	01 de                	add    %ebx,%esi
   16244:	8a 4d ee             	mov    -0x12(%ebp),%cl
   16247:	eb 15                	jmp    1625e <strtok_r+0x1ce>
   16249:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16250:	8a 0c 17             	mov    (%edi,%edx,1),%cl
   16253:	42                   	inc    %edx
   16254:	88 cb                	mov    %cl,%bl
   16256:	83 e3 c0             	and    $0xffffffc0,%ebx
   16259:	80 fb 80             	cmp    $0x80,%bl
   1625c:	75 8c                	jne    161ea <strtok_r+0x15a>
   1625e:	89 c3                	mov    %eax,%ebx
   16260:	89 c8                	mov    %ecx,%eax
   16262:	c1 e3 06             	shl    $0x6,%ebx
   16265:	83 e0 3f             	and    $0x3f,%eax
   16268:	09 d8                	or     %ebx,%eax
   1626a:	39 f2                	cmp    %esi,%edx
   1626c:	75 e2                	jne    16250 <strtok_r+0x1c0>
   1626e:	85 c0                	test   %eax,%eax
   16270:	0f 85 3c ff ff ff    	jne    161b2 <strtok_r+0x122>
   16276:	8b 45 e8             	mov    -0x18(%ebp),%eax
   16279:	40                   	inc    %eax
   1627a:	89 45 e8             	mov    %eax,-0x18(%ebp)
   1627d:	8b 4d e8             	mov    -0x18(%ebp),%ecx
   16280:	0f be 01             	movsbl (%ecx),%eax
   16283:	84 c0                	test   %al,%al
   16285:	0f 85 14 ff ff ff    	jne    1619f <strtok_r+0x10f>
   1628b:	89 c8                	mov    %ecx,%eax
   1628d:	e9 8d fe ff ff       	jmp    1611f <strtok_r+0x8f>
   16292:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   16298:	b1 0f                	mov    $0xf,%cl
   1629a:	be 02 00 00 00       	mov    $0x2,%esi
   1629f:	eb 89                	jmp    1622a <strtok_r+0x19a>
   162a1:	b1 07                	mov    $0x7,%cl
   162a3:	be 03 00 00 00       	mov    $0x3,%esi
   162a8:	eb 80                	jmp    1622a <strtok_r+0x19a>
   162aa:	b1 07                	mov    $0x7,%cl
   162ac:	be 03 00 00 00       	mov    $0x3,%esi
   162b1:	e9 91 fe ff ff       	jmp    16147 <strtok_r+0xb7>
   162b6:	8b 45 10             	mov    0x10(%ebp),%eax
   162b9:	8b 00                	mov    (%eax),%eax
   162bb:	89 45 08             	mov    %eax,0x8(%ebp)
   162be:	e9 e4 fd ff ff       	jmp    160a7 <strtok_r+0x17>
   162c3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   162c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000162d0 <strtok>:
   162d0:	55                   	push   %ebp
   162d1:	89 e5                	mov    %esp,%ebp
   162d3:	83 ec 0c             	sub    $0xc,%esp
   162d6:	8b 45 0c             	mov    0xc(%ebp),%eax
   162d9:	c7 44 24 08 ac 06 03 	movl   $0x306ac,0x8(%esp)
   162e0:	00 
   162e1:	89 44 24 04          	mov    %eax,0x4(%esp)
   162e5:	8b 45 08             	mov    0x8(%ebp),%eax
   162e8:	89 04 24             	mov    %eax,(%esp)
   162eb:	e8 a0 fd ff ff       	call   16090 <strtok_r>
   162f0:	c9                   	leave  
   162f1:	c3                   	ret    
   162f2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   162f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00016300 <str_uint8_t>:
   16300:	55                   	push   %ebp
   16301:	89 e5                	mov    %esp,%ebp
   16303:	57                   	push   %edi
   16304:	56                   	push   %esi
   16305:	53                   	push   %ebx
   16306:	83 ec 2c             	sub    $0x2c,%esp
   16309:	8b 75 18             	mov    0x18(%ebp),%esi
   1630c:	8b 7d 0c             	mov    0xc(%ebp),%edi
   1630f:	8a 5d 14             	mov    0x14(%ebp),%bl
   16312:	85 f6                	test   %esi,%esi
   16314:	74 61                	je     16377 <str_uint8_t+0x77>
   16316:	8d 45 e0             	lea    -0x20(%ebp),%eax
   16319:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1631c:	89 44 24 04          	mov    %eax,0x4(%esp)
   16320:	8d 45 d8             	lea    -0x28(%ebp),%eax
   16323:	89 04 24             	mov    %eax,(%esp)
   16326:	8d 55 dc             	lea    -0x24(%ebp),%edx
   16329:	8b 45 08             	mov    0x8(%ebp),%eax
   1632c:	e8 df d5 ff ff       	call   13910 <str_uint>
   16331:	85 ff                	test   %edi,%edi
   16333:	74 05                	je     1633a <str_uint8_t+0x3a>
   16335:	8b 55 dc             	mov    -0x24(%ebp),%edx
   16338:	89 17                	mov    %edx,(%edi)
   1633a:	85 c0                	test   %eax,%eax
   1633c:	75 18                	jne    16356 <str_uint8_t+0x56>
   1633e:	80 7d d8 00          	cmpb   $0x0,-0x28(%ebp)
   16342:	75 24                	jne    16368 <str_uint8_t+0x68>
   16344:	84 db                	test   %bl,%bl
   16346:	75 18                	jne    16360 <str_uint8_t+0x60>
   16348:	8b 55 e0             	mov    -0x20(%ebp),%edx
   1634b:	89 d1                	mov    %edx,%ecx
   1634d:	30 c9                	xor    %cl,%cl
   1634f:	0b 4d e4             	or     -0x1c(%ebp),%ecx
   16352:	75 1c                	jne    16370 <str_uint8_t+0x70>
   16354:	88 16                	mov    %dl,(%esi)
   16356:	83 c4 2c             	add    $0x2c,%esp
   16359:	5b                   	pop    %ebx
   1635a:	5e                   	pop    %esi
   1635b:	5f                   	pop    %edi
   1635c:	5d                   	pop    %ebp
   1635d:	c3                   	ret    
   1635e:	66 90                	xchg   %ax,%ax
   16360:	8b 55 dc             	mov    -0x24(%ebp),%edx
   16363:	80 3a 00             	cmpb   $0x0,(%edx)
   16366:	74 e0                	je     16348 <str_uint8_t+0x48>
   16368:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   1636d:	eb e7                	jmp    16356 <str_uint8_t+0x56>
   1636f:	90                   	nop
   16370:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   16375:	eb df                	jmp    16356 <str_uint8_t+0x56>
   16377:	c7 44 24 08 f9 05 00 	movl   $0x5f9,0x8(%esp)
   1637e:	00 
   1637f:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   16386:	00 
   16387:	c7 04 24 a7 d7 02 00 	movl   $0x2d7a7,(%esp)
   1638e:	e8 1d 45 01 00       	call   2a8b0 <assert_abort>
   16393:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   16399:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000163a0 <str_uint16_t>:
   163a0:	55                   	push   %ebp
   163a1:	89 e5                	mov    %esp,%ebp
   163a3:	57                   	push   %edi
   163a4:	56                   	push   %esi
   163a5:	53                   	push   %ebx
   163a6:	83 ec 2c             	sub    $0x2c,%esp
   163a9:	8b 75 18             	mov    0x18(%ebp),%esi
   163ac:	8b 7d 0c             	mov    0xc(%ebp),%edi
   163af:	8a 5d 14             	mov    0x14(%ebp),%bl
   163b2:	85 f6                	test   %esi,%esi
   163b4:	74 69                	je     1641f <str_uint16_t+0x7f>
   163b6:	8d 45 e0             	lea    -0x20(%ebp),%eax
   163b9:	8b 4d 10             	mov    0x10(%ebp),%ecx
   163bc:	89 44 24 04          	mov    %eax,0x4(%esp)
   163c0:	8d 45 d8             	lea    -0x28(%ebp),%eax
   163c3:	89 04 24             	mov    %eax,(%esp)
   163c6:	8d 55 dc             	lea    -0x24(%ebp),%edx
   163c9:	8b 45 08             	mov    0x8(%ebp),%eax
   163cc:	e8 3f d5 ff ff       	call   13910 <str_uint>
   163d1:	85 ff                	test   %edi,%edi
   163d3:	74 05                	je     163da <str_uint16_t+0x3a>
   163d5:	8b 55 dc             	mov    -0x24(%ebp),%edx
   163d8:	89 17                	mov    %edx,(%edi)
   163da:	85 c0                	test   %eax,%eax
   163dc:	75 1d                	jne    163fb <str_uint16_t+0x5b>
   163de:	80 7d d8 00          	cmpb   $0x0,-0x28(%ebp)
   163e2:	75 2c                	jne    16410 <str_uint16_t+0x70>
   163e4:	84 db                	test   %bl,%bl
   163e6:	75 20                	jne    16408 <str_uint16_t+0x68>
   163e8:	8b 55 e0             	mov    -0x20(%ebp),%edx
   163eb:	89 d1                	mov    %edx,%ecx
   163ed:	81 e1 00 00 ff ff    	and    $0xffff0000,%ecx
   163f3:	0b 4d e4             	or     -0x1c(%ebp),%ecx
   163f6:	75 20                	jne    16418 <str_uint16_t+0x78>
   163f8:	66 89 16             	mov    %dx,(%esi)
   163fb:	83 c4 2c             	add    $0x2c,%esp
   163fe:	5b                   	pop    %ebx
   163ff:	5e                   	pop    %esi
   16400:	5f                   	pop    %edi
   16401:	5d                   	pop    %ebp
   16402:	c3                   	ret    
   16403:	90                   	nop
   16404:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16408:	8b 55 dc             	mov    -0x24(%ebp),%edx
   1640b:	80 3a 00             	cmpb   $0x0,(%edx)
   1640e:	74 d8                	je     163e8 <str_uint16_t+0x48>
   16410:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   16415:	eb e4                	jmp    163fb <str_uint16_t+0x5b>
   16417:	90                   	nop
   16418:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   1641d:	eb dc                	jmp    163fb <str_uint16_t+0x5b>
   1641f:	c7 44 24 08 28 06 00 	movl   $0x628,0x8(%esp)
   16426:	00 
   16427:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   1642e:	00 
   1642f:	c7 04 24 a7 d7 02 00 	movl   $0x2d7a7,(%esp)
   16436:	e8 75 44 01 00       	call   2a8b0 <assert_abort>
   1643b:	90                   	nop
   1643c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00016440 <str_uint32_t>:
   16440:	55                   	push   %ebp
   16441:	89 e5                	mov    %esp,%ebp
   16443:	57                   	push   %edi
   16444:	56                   	push   %esi
   16445:	53                   	push   %ebx
   16446:	83 ec 2c             	sub    $0x2c,%esp
   16449:	8b 75 18             	mov    0x18(%ebp),%esi
   1644c:	8b 7d 0c             	mov    0xc(%ebp),%edi
   1644f:	8a 5d 14             	mov    0x14(%ebp),%bl
   16452:	85 f6                	test   %esi,%esi
   16454:	74 61                	je     164b7 <str_uint32_t+0x77>
   16456:	8d 45 e0             	lea    -0x20(%ebp),%eax
   16459:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1645c:	89 44 24 04          	mov    %eax,0x4(%esp)
   16460:	8d 45 d8             	lea    -0x28(%ebp),%eax
   16463:	89 04 24             	mov    %eax,(%esp)
   16466:	8d 55 dc             	lea    -0x24(%ebp),%edx
   16469:	8b 45 08             	mov    0x8(%ebp),%eax
   1646c:	e8 9f d4 ff ff       	call   13910 <str_uint>
   16471:	85 ff                	test   %edi,%edi
   16473:	74 05                	je     1647a <str_uint32_t+0x3a>
   16475:	8b 55 dc             	mov    -0x24(%ebp),%edx
   16478:	89 17                	mov    %edx,(%edi)
   1647a:	85 c0                	test   %eax,%eax
   1647c:	75 16                	jne    16494 <str_uint32_t+0x54>
   1647e:	80 7d d8 00          	cmpb   $0x0,-0x28(%ebp)
   16482:	75 24                	jne    164a8 <str_uint32_t+0x68>
   16484:	84 db                	test   %bl,%bl
   16486:	75 18                	jne    164a0 <str_uint32_t+0x60>
   16488:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   1648b:	8b 55 e0             	mov    -0x20(%ebp),%edx
   1648e:	85 c9                	test   %ecx,%ecx
   16490:	75 1e                	jne    164b0 <str_uint32_t+0x70>
   16492:	89 16                	mov    %edx,(%esi)
   16494:	83 c4 2c             	add    $0x2c,%esp
   16497:	5b                   	pop    %ebx
   16498:	5e                   	pop    %esi
   16499:	5f                   	pop    %edi
   1649a:	5d                   	pop    %ebp
   1649b:	c3                   	ret    
   1649c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   164a0:	8b 55 dc             	mov    -0x24(%ebp),%edx
   164a3:	80 3a 00             	cmpb   $0x0,(%edx)
   164a6:	74 e0                	je     16488 <str_uint32_t+0x48>
   164a8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   164ad:	eb e5                	jmp    16494 <str_uint32_t+0x54>
   164af:	90                   	nop
   164b0:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   164b5:	eb dd                	jmp    16494 <str_uint32_t+0x54>
   164b7:	c7 44 24 08 57 06 00 	movl   $0x657,0x8(%esp)
   164be:	00 
   164bf:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   164c6:	00 
   164c7:	c7 04 24 a7 d7 02 00 	movl   $0x2d7a7,(%esp)
   164ce:	e8 dd 43 01 00       	call   2a8b0 <assert_abort>
   164d3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   164d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000164e0 <str_uint64_t>:
   164e0:	55                   	push   %ebp
   164e1:	89 e5                	mov    %esp,%ebp
   164e3:	56                   	push   %esi
   164e4:	53                   	push   %ebx
   164e5:	83 ec 20             	sub    $0x20,%esp
   164e8:	8b 45 18             	mov    0x18(%ebp),%eax
   164eb:	8b 75 0c             	mov    0xc(%ebp),%esi
   164ee:	8a 5d 14             	mov    0x14(%ebp),%bl
   164f1:	85 c0                	test   %eax,%eax
   164f3:	74 4a                	je     1653f <str_uint64_t+0x5f>
   164f5:	89 44 24 04          	mov    %eax,0x4(%esp)
   164f9:	8d 45 f0             	lea    -0x10(%ebp),%eax
   164fc:	89 04 24             	mov    %eax,(%esp)
   164ff:	8b 4d 10             	mov    0x10(%ebp),%ecx
   16502:	8d 55 f4             	lea    -0xc(%ebp),%edx
   16505:	8b 45 08             	mov    0x8(%ebp),%eax
   16508:	e8 03 d4 ff ff       	call   13910 <str_uint>
   1650d:	85 f6                	test   %esi,%esi
   1650f:	74 05                	je     16516 <str_uint64_t+0x36>
   16511:	8b 55 f4             	mov    -0xc(%ebp),%edx
   16514:	89 16                	mov    %edx,(%esi)
   16516:	85 c0                	test   %eax,%eax
   16518:	75 12                	jne    1652c <str_uint64_t+0x4c>
   1651a:	80 7d f0 00          	cmpb   $0x0,-0x10(%ebp)
   1651e:	75 18                	jne    16538 <str_uint64_t+0x58>
   16520:	84 db                	test   %bl,%bl
   16522:	74 08                	je     1652c <str_uint64_t+0x4c>
   16524:	8b 55 f4             	mov    -0xc(%ebp),%edx
   16527:	80 3a 00             	cmpb   $0x0,(%edx)
   1652a:	75 0c                	jne    16538 <str_uint64_t+0x58>
   1652c:	83 c4 20             	add    $0x20,%esp
   1652f:	5b                   	pop    %ebx
   16530:	5e                   	pop    %esi
   16531:	5d                   	pop    %ebp
   16532:	c3                   	ret    
   16533:	90                   	nop
   16534:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16538:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   1653d:	eb ed                	jmp    1652c <str_uint64_t+0x4c>
   1653f:	c7 44 24 08 86 06 00 	movl   $0x686,0x8(%esp)
   16546:	00 
   16547:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   1654e:	00 
   1654f:	c7 04 24 a7 d7 02 00 	movl   $0x2d7a7,(%esp)
   16556:	e8 55 43 01 00       	call   2a8b0 <assert_abort>
   1655b:	90                   	nop
   1655c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00016560 <str_size_t>:
   16560:	55                   	push   %ebp
   16561:	89 e5                	mov    %esp,%ebp
   16563:	57                   	push   %edi
   16564:	56                   	push   %esi
   16565:	53                   	push   %ebx
   16566:	83 ec 2c             	sub    $0x2c,%esp
   16569:	8b 75 18             	mov    0x18(%ebp),%esi
   1656c:	8b 7d 0c             	mov    0xc(%ebp),%edi
   1656f:	8a 5d 14             	mov    0x14(%ebp),%bl
   16572:	85 f6                	test   %esi,%esi
   16574:	74 61                	je     165d7 <str_size_t+0x77>
   16576:	8d 45 e0             	lea    -0x20(%ebp),%eax
   16579:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1657c:	89 44 24 04          	mov    %eax,0x4(%esp)
   16580:	8d 45 d8             	lea    -0x28(%ebp),%eax
   16583:	89 04 24             	mov    %eax,(%esp)
   16586:	8d 55 dc             	lea    -0x24(%ebp),%edx
   16589:	8b 45 08             	mov    0x8(%ebp),%eax
   1658c:	e8 7f d3 ff ff       	call   13910 <str_uint>
   16591:	85 ff                	test   %edi,%edi
   16593:	74 05                	je     1659a <str_size_t+0x3a>
   16595:	8b 55 dc             	mov    -0x24(%ebp),%edx
   16598:	89 17                	mov    %edx,(%edi)
   1659a:	85 c0                	test   %eax,%eax
   1659c:	75 16                	jne    165b4 <str_size_t+0x54>
   1659e:	80 7d d8 00          	cmpb   $0x0,-0x28(%ebp)
   165a2:	75 24                	jne    165c8 <str_size_t+0x68>
   165a4:	84 db                	test   %bl,%bl
   165a6:	75 18                	jne    165c0 <str_size_t+0x60>
   165a8:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   165ab:	8b 55 e0             	mov    -0x20(%ebp),%edx
   165ae:	85 db                	test   %ebx,%ebx
   165b0:	75 1e                	jne    165d0 <str_size_t+0x70>
   165b2:	89 16                	mov    %edx,(%esi)
   165b4:	83 c4 2c             	add    $0x2c,%esp
   165b7:	5b                   	pop    %ebx
   165b8:	5e                   	pop    %esi
   165b9:	5f                   	pop    %edi
   165ba:	5d                   	pop    %ebp
   165bb:	c3                   	ret    
   165bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   165c0:	8b 55 dc             	mov    -0x24(%ebp),%edx
   165c3:	80 3a 00             	cmpb   $0x0,(%edx)
   165c6:	74 e0                	je     165a8 <str_size_t+0x48>
   165c8:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   165cd:	eb e5                	jmp    165b4 <str_size_t+0x54>
   165cf:	90                   	nop
   165d0:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   165d5:	eb dd                	jmp    165b4 <str_size_t+0x54>
   165d7:	c7 44 24 08 ad 06 00 	movl   $0x6ad,0x8(%esp)
   165de:	00 
   165df:	c7 44 24 04 7e d7 02 	movl   $0x2d77e,0x4(%esp)
   165e6:	00 
   165e7:	c7 04 24 a7 d7 02 00 	movl   $0x2d7a7,(%esp)
   165ee:	e8 bd 42 01 00       	call   2a8b0 <assert_abort>
   165f3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   165f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00016600 <order_suffix>:
   16600:	55                   	push   %ebp
   16601:	89 e5                	mov    %esp,%ebp
   16603:	53                   	push   %ebx
   16604:	83 ec 14             	sub    $0x14,%esp
   16607:	8b 45 0c             	mov    0xc(%ebp),%eax
   1660a:	8b 55 08             	mov    0x8(%ebp),%edx
   1660d:	8b 5d 10             	mov    0x10(%ebp),%ebx
   16610:	3d 04 23 c7 8a       	cmp    $0x8ac72304,%eax
   16615:	72 39                	jb     16650 <order_suffix+0x50>
   16617:	76 2f                	jbe    16648 <order_suffix+0x48>
   16619:	c7 44 24 08 00 00 64 	movl   $0xa7640000,0x8(%esp)
   16620:	a7 
   16621:	c7 44 24 0c b3 b6 e0 	movl   $0xde0b6b3,0xc(%esp)
   16628:	0d 
   16629:	89 14 24             	mov    %edx,(%esp)
   1662c:	89 44 24 04          	mov    %eax,0x4(%esp)
   16630:	e8 6b 5f 01 00       	call   2c5a0 <__udivdi3>
   16635:	89 03                	mov    %eax,(%ebx)
   16637:	8b 45 14             	mov    0x14(%ebp),%eax
   1663a:	89 53 04             	mov    %edx,0x4(%ebx)
   1663d:	c6 00 5a             	movb   $0x5a,(%eax)
   16640:	83 c4 14             	add    $0x14,%esp
   16643:	5b                   	pop    %ebx
   16644:	5d                   	pop    %ebp
   16645:	c3                   	ret    
   16646:	66 90                	xchg   %ax,%ax
   16648:	81 fa 00 00 e8 89    	cmp    $0x89e80000,%edx
   1664e:	77 c9                	ja     16619 <order_suffix+0x19>
   16650:	3d b3 b6 e0 0d       	cmp    $0xde0b6b3,%eax
   16655:	73 71                	jae    166c8 <order_suffix+0xc8>
   16657:	3d 7e 8d 03 00       	cmp    $0x38d7e,%eax
   1665c:	72 12                	jb     16670 <order_suffix+0x70>
   1665e:	0f 87 e4 00 00 00    	ja     16748 <order_suffix+0x148>
   16664:	81 fa 00 80 c6 a4    	cmp    $0xa4c68000,%edx
   1666a:	0f 87 d8 00 00 00    	ja     16748 <order_suffix+0x148>
   16670:	3d e8 00 00 00       	cmp    $0xe8,%eax
   16675:	0f 83 8d 00 00 00    	jae    16708 <order_suffix+0x108>
   1667b:	83 f8 00             	cmp    $0x0,%eax
   1667e:	0f 87 f4 00 00 00    	ja     16778 <order_suffix+0x178>
   16684:	81 fa 00 ca 9a 3b    	cmp    $0x3b9aca00,%edx
   1668a:	0f 87 e8 00 00 00    	ja     16778 <order_suffix+0x178>
   16690:	81 fa 40 42 0f 00    	cmp    $0xf4240,%edx
   16696:	0f 86 08 01 00 00    	jbe    167a4 <order_suffix+0x1a4>
   1669c:	c7 44 24 08 e8 03 00 	movl   $0x3e8,0x8(%esp)
   166a3:	00 
   166a4:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   166ab:	00 
   166ac:	89 14 24             	mov    %edx,(%esp)
   166af:	89 44 24 04          	mov    %eax,0x4(%esp)
   166b3:	e8 e8 5e 01 00       	call   2c5a0 <__udivdi3>
   166b8:	8b 4d 14             	mov    0x14(%ebp),%ecx
   166bb:	89 03                	mov    %eax,(%ebx)
   166bd:	89 53 04             	mov    %edx,0x4(%ebx)
   166c0:	c6 01 6b             	movb   $0x6b,(%ecx)
   166c3:	e9 78 ff ff ff       	jmp    16640 <order_suffix+0x40>
   166c8:	76 2e                	jbe    166f8 <order_suffix+0xf8>
   166ca:	c7 44 24 08 00 80 c6 	movl   $0xa4c68000,0x8(%esp)
   166d1:	a4 
   166d2:	c7 44 24 0c 7e 8d 03 	movl   $0x38d7e,0xc(%esp)
   166d9:	00 
   166da:	89 14 24             	mov    %edx,(%esp)
   166dd:	89 44 24 04          	mov    %eax,0x4(%esp)
   166e1:	e8 ba 5e 01 00       	call   2c5a0 <__udivdi3>
   166e6:	8b 4d 14             	mov    0x14(%ebp),%ecx
   166e9:	89 03                	mov    %eax,(%ebx)
   166eb:	89 53 04             	mov    %edx,0x4(%ebx)
   166ee:	c6 01 45             	movb   $0x45,(%ecx)
   166f1:	83 c4 14             	add    $0x14,%esp
   166f4:	5b                   	pop    %ebx
   166f5:	5d                   	pop    %ebp
   166f6:	c3                   	ret    
   166f7:	90                   	nop
   166f8:	81 fa 00 00 64 a7    	cmp    $0xa7640000,%edx
   166fe:	0f 86 53 ff ff ff    	jbe    16657 <order_suffix+0x57>
   16704:	eb c4                	jmp    166ca <order_suffix+0xca>
   16706:	66 90                	xchg   %ax,%ax
   16708:	77 0c                	ja     16716 <order_suffix+0x116>
   1670a:	81 fa 00 10 a5 d4    	cmp    $0xd4a51000,%edx
   16710:	0f 86 65 ff ff ff    	jbe    1667b <order_suffix+0x7b>
   16716:	c7 44 24 08 00 ca 9a 	movl   $0x3b9aca00,0x8(%esp)
   1671d:	3b 
   1671e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   16725:	00 
   16726:	89 14 24             	mov    %edx,(%esp)
   16729:	89 44 24 04          	mov    %eax,0x4(%esp)
   1672d:	e8 6e 5e 01 00       	call   2c5a0 <__udivdi3>
   16732:	8b 4d 14             	mov    0x14(%ebp),%ecx
   16735:	89 03                	mov    %eax,(%ebx)
   16737:	89 53 04             	mov    %edx,0x4(%ebx)
   1673a:	c6 01 47             	movb   $0x47,(%ecx)
   1673d:	e9 fe fe ff ff       	jmp    16640 <order_suffix+0x40>
   16742:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   16748:	c7 44 24 08 00 10 a5 	movl   $0xd4a51000,0x8(%esp)
   1674f:	d4 
   16750:	c7 44 24 0c e8 00 00 	movl   $0xe8,0xc(%esp)
   16757:	00 
   16758:	89 14 24             	mov    %edx,(%esp)
   1675b:	89 44 24 04          	mov    %eax,0x4(%esp)
   1675f:	e8 3c 5e 01 00       	call   2c5a0 <__udivdi3>
   16764:	89 03                	mov    %eax,(%ebx)
   16766:	8b 45 14             	mov    0x14(%ebp),%eax
   16769:	89 53 04             	mov    %edx,0x4(%ebx)
   1676c:	c6 00 54             	movb   $0x54,(%eax)
   1676f:	83 c4 14             	add    $0x14,%esp
   16772:	5b                   	pop    %ebx
   16773:	5d                   	pop    %ebp
   16774:	c3                   	ret    
   16775:	8d 76 00             	lea    0x0(%esi),%esi
   16778:	c7 44 24 08 40 42 0f 	movl   $0xf4240,0x8(%esp)
   1677f:	00 
   16780:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   16787:	00 
   16788:	89 14 24             	mov    %edx,(%esp)
   1678b:	89 44 24 04          	mov    %eax,0x4(%esp)
   1678f:	e8 0c 5e 01 00       	call   2c5a0 <__udivdi3>
   16794:	89 03                	mov    %eax,(%ebx)
   16796:	8b 45 14             	mov    0x14(%ebp),%eax
   16799:	89 53 04             	mov    %edx,0x4(%ebx)
   1679c:	c6 00 4d             	movb   $0x4d,(%eax)
   1679f:	e9 9c fe ff ff       	jmp    16640 <order_suffix+0x40>
   167a4:	89 43 04             	mov    %eax,0x4(%ebx)
   167a7:	8b 45 14             	mov    0x14(%ebp),%eax
   167aa:	89 13                	mov    %edx,(%ebx)
   167ac:	c6 00 20             	movb   $0x20,(%eax)
   167af:	e9 8c fe ff ff       	jmp    16640 <order_suffix+0x40>
   167b4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   167ba:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000167c0 <bin_order_suffix>:
   167c0:	55                   	push   %ebp
   167c1:	89 e5                	mov    %esp,%ebp
   167c3:	53                   	push   %ebx
   167c4:	8b 55 0c             	mov    0xc(%ebp),%edx
   167c7:	8b 45 08             	mov    0x8(%ebp),%eax
   167ca:	8b 4d 10             	mov    0x10(%ebp),%ecx
   167cd:	8a 5d 18             	mov    0x18(%ebp),%bl
   167d0:	81 fa 00 00 00 10    	cmp    $0x10000000,%edx
   167d6:	72 25                	jb     167fd <bin_order_suffix+0x3d>
   167d8:	76 1e                	jbe    167f8 <bin_order_suffix+0x38>
   167da:	89 d0                	mov    %edx,%eax
   167dc:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)
   167e3:	c1 e8 12             	shr    $0x12,%eax
   167e6:	89 01                	mov    %eax,(%ecx)
   167e8:	8b 45 14             	mov    0x14(%ebp),%eax
   167eb:	c7 00 bf d7 02 00    	movl   $0x2d7bf,(%eax)
   167f1:	5b                   	pop    %ebx
   167f2:	5d                   	pop    %ebp
   167f3:	c3                   	ret    
   167f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   167f8:	83 f8 00             	cmp    $0x0,%eax
   167fb:	77 dd                	ja     167da <bin_order_suffix+0x1a>
   167fd:	81 fa 00 00 04 00    	cmp    $0x40000,%edx
   16803:	73 2b                	jae    16830 <bin_order_suffix+0x70>
   16805:	81 fa 00 01 00 00    	cmp    $0x100,%edx
   1680b:	72 07                	jb     16814 <bin_order_suffix+0x54>
   1680d:	77 79                	ja     16888 <bin_order_suffix+0xc8>
   1680f:	83 f8 00             	cmp    $0x0,%eax
   16812:	77 74                	ja     16888 <bin_order_suffix+0xc8>
   16814:	83 fa 00             	cmp    $0x0,%edx
   16817:	76 3f                	jbe    16858 <bin_order_suffix+0x98>
   16819:	8b 5d 14             	mov    0x14(%ebp),%ebx
   1681c:	0f ac d0 14          	shrd   $0x14,%edx,%eax
   16820:	c1 ea 14             	shr    $0x14,%edx
   16823:	89 01                	mov    %eax,(%ecx)
   16825:	89 51 04             	mov    %edx,0x4(%ecx)
   16828:	c7 03 cb d7 02 00    	movl   $0x2d7cb,(%ebx)
   1682e:	eb c1                	jmp    167f1 <bin_order_suffix+0x31>
   16830:	76 1e                	jbe    16850 <bin_order_suffix+0x90>
   16832:	8b 5d 14             	mov    0x14(%ebp),%ebx
   16835:	89 d0                	mov    %edx,%eax
   16837:	c1 e8 08             	shr    $0x8,%eax
   1683a:	c7 41 04 00 00 00 00 	movl   $0x0,0x4(%ecx)
   16841:	89 01                	mov    %eax,(%ecx)
   16843:	c7 03 c3 d7 02 00    	movl   $0x2d7c3,(%ebx)
   16849:	5b                   	pop    %ebx
   1684a:	5d                   	pop    %ebp
   1684b:	c3                   	ret    
   1684c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16850:	83 f8 00             	cmp    $0x0,%eax
   16853:	76 b0                	jbe    16805 <bin_order_suffix+0x45>
   16855:	eb db                	jmp    16832 <bin_order_suffix+0x72>
   16857:	90                   	nop
   16858:	3d 00 00 00 40       	cmp    $0x40000000,%eax
   1685d:	77 ba                	ja     16819 <bin_order_suffix+0x59>
   1685f:	83 fa 00             	cmp    $0x0,%edx
   16862:	77 07                	ja     1686b <bin_order_suffix+0xab>
   16864:	3d 00 00 10 00       	cmp    $0x100000,%eax
   16869:	76 35                	jbe    168a0 <bin_order_suffix+0xe0>
   1686b:	0f ac d0 0a          	shrd   $0xa,%edx,%eax
   1686f:	c1 ea 0a             	shr    $0xa,%edx
   16872:	89 01                	mov    %eax,(%ecx)
   16874:	8b 45 14             	mov    0x14(%ebp),%eax
   16877:	89 51 04             	mov    %edx,0x4(%ecx)
   1687a:	c7 00 cf d7 02 00    	movl   $0x2d7cf,(%eax)
   16880:	e9 6c ff ff ff       	jmp    167f1 <bin_order_suffix+0x31>
   16885:	8d 76 00             	lea    0x0(%esi),%esi
   16888:	0f ac d0 1e          	shrd   $0x1e,%edx,%eax
   1688c:	c1 ea 1e             	shr    $0x1e,%edx
   1688f:	89 01                	mov    %eax,(%ecx)
   16891:	8b 45 14             	mov    0x14(%ebp),%eax
   16894:	89 51 04             	mov    %edx,0x4(%ecx)
   16897:	c7 00 c7 d7 02 00    	movl   $0x2d7c7,(%eax)
   1689d:	5b                   	pop    %ebx
   1689e:	5d                   	pop    %ebp
   1689f:	c3                   	ret    
   168a0:	89 01                	mov    %eax,(%ecx)
   168a2:	89 51 04             	mov    %edx,0x4(%ecx)
   168a5:	84 db                	test   %bl,%bl
   168a7:	75 0f                	jne    168b8 <bin_order_suffix+0xf8>
   168a9:	8b 45 14             	mov    0x14(%ebp),%eax
   168ac:	c7 00 c1 d7 02 00    	movl   $0x2d7c1,(%eax)
   168b2:	e9 3a ff ff ff       	jmp    167f1 <bin_order_suffix+0x31>
   168b7:	90                   	nop
   168b8:	8b 5d 14             	mov    0x14(%ebp),%ebx
   168bb:	c7 03 d3 d7 02 00    	movl   $0x2d7d3,(%ebx)
   168c1:	e9 2b ff ff ff       	jmp    167f1 <bin_order_suffix+0x31>
   168c6:	66 90                	xchg   %ax,%ax
   168c8:	66 90                	xchg   %ax,%ax
   168ca:	66 90                	xchg   %ax,%ax
   168cc:	66 90                	xchg   %ax,%ax
   168ce:	66 90                	xchg   %ax,%ax

000168d0 <str_error>:
   168d0:	55                   	push   %ebp
   168d1:	89 e5                	mov    %esp,%ebp
   168d3:	53                   	push   %ebx
   168d4:	83 ec 14             	sub    $0x14,%esp
   168d7:	8b 45 08             	mov    0x8(%ebp),%eax
   168da:	8d 50 11             	lea    0x11(%eax),%edx
   168dd:	83 fa 11             	cmp    $0x11,%edx
   168e0:	76 1e                	jbe    16900 <str_error+0x30>
   168e2:	3d d2 fe ff ff       	cmp    $0xfffffed2,%eax
   168e7:	74 67                	je     16950 <str_error+0x80>
   168e9:	7f 25                	jg     16910 <str_error+0x40>
   168eb:	3d 06 d5 ff ff       	cmp    $0xffffd506,%eax
   168f0:	75 2c                	jne    1691e <str_error+0x4e>
   168f2:	83 c4 14             	add    $0x14,%esp
   168f5:	b8 b0 da 02 00       	mov    $0x2dab0,%eax
   168fa:	5b                   	pop    %ebx
   168fb:	5d                   	pop    %ebp
   168fc:	c3                   	ret    
   168fd:	8d 76 00             	lea    0x0(%esi),%esi
   16900:	f7 d8                	neg    %eax
   16902:	8b 04 85 e0 da 02 00 	mov    0x2dae0(,%eax,4),%eax
   16909:	83 c4 14             	add    $0x14,%esp
   1690c:	5b                   	pop    %ebx
   1690d:	5d                   	pop    %ebp
   1690e:	c3                   	ret    
   1690f:	90                   	nop
   16910:	3d d3 fe ff ff       	cmp    $0xfffffed3,%eax
   16915:	74 49                	je     16960 <str_error+0x90>
   16917:	3d d4 fe ff ff       	cmp    $0xfffffed4,%eax
   1691c:	74 52                	je     16970 <str_error+0xa0>
   1691e:	65 8b 1d 00 00 00 00 	mov    %gs:0x0,%ebx
   16925:	89 44 24 0c          	mov    %eax,0xc(%esp)
   16929:	81 c3 b8 ff ff ff    	add    $0xffffffb8,%ebx
   1692f:	c7 44 24 08 51 d9 02 	movl   $0x2d951,0x8(%esp)
   16936:	00 
   16937:	89 1c 24             	mov    %ebx,(%esp)
   1693a:	c7 44 24 04 40 00 00 	movl   $0x40,0x4(%esp)
   16941:	00 
   16942:	e8 a9 4b 00 00       	call   1b4f0 <snprintf>
   16947:	83 c4 14             	add    $0x14,%esp
   1694a:	89 d8                	mov    %ebx,%eax
   1694c:	5b                   	pop    %ebx
   1694d:	5d                   	pop    %ebp
   1694e:	c3                   	ret    
   1694f:	90                   	nop
   16950:	83 c4 14             	add    $0x14,%esp
   16953:	b8 3f d9 02 00       	mov    $0x2d93f,%eax
   16958:	5b                   	pop    %ebx
   16959:	5d                   	pop    %ebp
   1695a:	c3                   	ret    
   1695b:	90                   	nop
   1695c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16960:	83 c4 14             	add    $0x14,%esp
   16963:	b8 2d d9 02 00       	mov    $0x2d92d,%eax
   16968:	5b                   	pop    %ebx
   16969:	5d                   	pop    %ebp
   1696a:	c3                   	ret    
   1696b:	90                   	nop
   1696c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16970:	83 c4 14             	add    $0x14,%esp
   16973:	b8 20 d9 02 00       	mov    $0x2d920,%eax
   16978:	5b                   	pop    %ebx
   16979:	5d                   	pop    %ebp
   1697a:	c3                   	ret    
   1697b:	66 90                	xchg   %ax,%ax
   1697d:	66 90                	xchg   %ax,%ax
   1697f:	90                   	nop

00016980 <fibril_setup>:
   16980:	55                   	push   %ebp
   16981:	89 e5                	mov    %esp,%ebp
   16983:	53                   	push   %ebx
   16984:	83 ec 24             	sub    $0x24,%esp
   16987:	e8 c4 1b 00 00       	call   18550 <__make_tls>
   1698c:	89 c3                	mov    %eax,%ebx
   1698e:	85 c0                	test   %eax,%eax
   16990:	74 4e                	je     169e0 <fibril_setup+0x60>
   16992:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)
   16999:	e8 32 97 00 00       	call   200d0 <malloc>
   1699e:	85 c0                	test   %eax,%eax
   169a0:	74 42                	je     169e4 <fibril_setup+0x64>
   169a2:	89 43 04             	mov    %eax,0x4(%ebx)
   169a5:	89 58 30             	mov    %ebx,0x30(%eax)
   169a8:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
   169af:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   169b6:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   169bd:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
   169c4:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%eax)
   169cb:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)
   169d2:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%eax)
   169d9:	83 c4 24             	add    $0x24,%esp
   169dc:	5b                   	pop    %ebx
   169dd:	5d                   	pop    %ebp
   169de:	c3                   	ret    
   169df:	90                   	nop
   169e0:	31 c0                	xor    %eax,%eax
   169e2:	eb f5                	jmp    169d9 <fibril_setup+0x59>
   169e4:	89 1c 24             	mov    %ebx,(%esp)
   169e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
   169ea:	e8 e1 1b 00 00       	call   185d0 <__free_tls>
   169ef:	8b 45 f4             	mov    -0xc(%ebp),%eax
   169f2:	eb e5                	jmp    169d9 <fibril_setup+0x59>
   169f4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   169fa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00016a00 <fibril_teardown>:
   16a00:	55                   	push   %ebp
   16a01:	89 e5                	mov    %esp,%ebp
   16a03:	53                   	push   %ebx
   16a04:	83 ec 14             	sub    $0x14,%esp
   16a07:	8b 5d 08             	mov    0x8(%ebp),%ebx
   16a0a:	8b 43 30             	mov    0x30(%ebx),%eax
   16a0d:	89 04 24             	mov    %eax,(%esp)
   16a10:	e8 bb 1b 00 00       	call   185d0 <__free_tls>
   16a15:	89 5d 08             	mov    %ebx,0x8(%ebp)
   16a18:	83 c4 14             	add    $0x14,%esp
   16a1b:	5b                   	pop    %ebx
   16a1c:	5d                   	pop    %ebp
   16a1d:	e9 be 97 00 00       	jmp    201e0 <free>
   16a22:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16a29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00016a30 <fibril_switch.constprop.0>:
   16a30:	55                   	push   %ebp
   16a31:	89 e5                	mov    %esp,%ebp
   16a33:	53                   	push   %ebx
   16a34:	83 ec 14             	sub    $0x14,%esp
   16a37:	eb 18                	jmp    16a51 <fibril_switch.constprop.0+0x21>
   16a39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16a40:	c7 04 24 d0 04 03 00 	movl   $0x304d0,(%esp)
   16a47:	e8 e4 22 00 00       	call   18d30 <futex_up>
   16a4c:	e8 4f b4 00 00       	call   21ea0 <async_create_manager>
   16a51:	c7 04 24 d0 04 03 00 	movl   $0x304d0,(%esp)
   16a58:	e8 73 22 00 00       	call   18cd0 <futex_down>
   16a5d:	8b 1d e8 04 03 00    	mov    0x304e8,%ebx
   16a63:	81 fb e4 04 03 00    	cmp    $0x304e4,%ebx
   16a69:	74 d5                	je     16a40 <fibril_switch.constprop.0+0x10>
   16a6b:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax
   16a71:	8b 15 b0 06 03 00    	mov    0x306b0,%edx
   16a77:	8b 40 04             	mov    0x4(%eax),%eax
   16a7a:	42                   	inc    %edx
   16a7b:	89 43 34             	mov    %eax,0x34(%ebx)
   16a7e:	8b 03                	mov    (%ebx),%eax
   16a80:	89 15 b0 06 03 00    	mov    %edx,0x306b0
   16a86:	85 c0                	test   %eax,%eax
   16a88:	74 0e                	je     16a98 <fibril_switch.constprop.0+0x68>
   16a8a:	8b 53 04             	mov    0x4(%ebx),%edx
   16a8d:	85 d2                	test   %edx,%edx
   16a8f:	74 07                	je     16a98 <fibril_switch.constprop.0+0x68>
   16a91:	89 02                	mov    %eax,(%edx)
   16a93:	8b 03                	mov    (%ebx),%eax
   16a95:	89 50 04             	mov    %edx,0x4(%eax)
   16a98:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   16a9e:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   16aa5:	c7 04 24 d0 04 03 00 	movl   $0x304d0,(%esp)
   16aac:	83 c3 08             	add    $0x8,%ebx
   16aaf:	e8 7c 22 00 00       	call   18d30 <futex_up>
   16ab4:	89 1c 24             	mov    %ebx,(%esp)
   16ab7:	e8 d5 3e 01 00       	call   2a991 <context_restore>
   16abc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00016ac0 <fibril_main>:
   16ac0:	55                   	push   %ebp
   16ac1:	89 e5                	mov    %esp,%ebp
   16ac3:	53                   	push   %ebx
   16ac4:	83 ec 14             	sub    $0x14,%esp
   16ac7:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax
   16acd:	8b 58 04             	mov    0x4(%eax),%ebx
   16ad0:	8b 43 28             	mov    0x28(%ebx),%eax
   16ad3:	89 04 24             	mov    %eax,(%esp)
   16ad6:	ff 53 2c             	call   *0x2c(%ebx)
   16ad9:	89 43 38             	mov    %eax,0x38(%ebx)
   16adc:	e8 4f ff ff ff       	call   16a30 <fibril_switch.constprop.0>
   16ae1:	eb 0d                	jmp    16af0 <fibril_switch>
   16ae3:	90                   	nop
   16ae4:	90                   	nop
   16ae5:	90                   	nop
   16ae6:	90                   	nop
   16ae7:	90                   	nop
   16ae8:	90                   	nop
   16ae9:	90                   	nop
   16aea:	90                   	nop
   16aeb:	90                   	nop
   16aec:	90                   	nop
   16aed:	90                   	nop
   16aee:	90                   	nop
   16aef:	90                   	nop

00016af0 <fibril_switch>:
   16af0:	55                   	push   %ebp
   16af1:	89 e5                	mov    %esp,%ebp
   16af3:	53                   	push   %ebx
   16af4:	83 ec 24             	sub    $0x24,%esp
   16af7:	c7 04 24 d0 04 03 00 	movl   $0x304d0,(%esp)
   16afe:	e8 cd 21 00 00       	call   18cd0 <futex_down>
   16b03:	8b 45 08             	mov    0x8(%ebp),%eax
   16b06:	85 c0                	test   %eax,%eax
   16b08:	0f 85 b2 00 00 00    	jne    16bc0 <fibril_switch+0xd0>
   16b0e:	81 3d d8 04 03 00 d4 	cmpl   $0x304d4,0x304d8
   16b15:	04 03 00 
   16b18:	0f 84 da 00 00 00    	je     16bf8 <fibril_switch+0x108>
   16b1e:	8b 45 08             	mov    0x8(%ebp),%eax
   16b21:	83 e0 fd             	and    $0xfffffffd,%eax
   16b24:	48                   	dec    %eax
   16b25:	0f 94 45 f3          	sete   -0xd(%ebp)
   16b29:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
   16b2d:	0f 94 45 f2          	sete   -0xe(%ebp)
   16b31:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)
   16b35:	0f 94 45 f1          	sete   -0xf(%ebp)
   16b39:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax
   16b3f:	8b 40 04             	mov    0x4(%eax),%eax
   16b42:	89 45 f4             	mov    %eax,-0xc(%ebp)
   16b45:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)
   16b49:	0f 84 8e 01 00 00    	je     16cdd <fibril_switch+0x1ed>
   16b4f:	83 c0 08             	add    $0x8,%eax
   16b52:	89 04 24             	mov    %eax,(%esp)
   16b55:	e8 12 3e 01 00       	call   2a96c <context_save>
   16b5a:	85 c0                	test   %eax,%eax
   16b5c:	0f 85 07 02 00 00    	jne    16d69 <fibril_switch+0x279>
   16b62:	65 8b 1d f8 ff ff ff 	mov    %gs:0xfffffff8,%ebx
   16b69:	85 db                	test   %ebx,%ebx
   16b6b:	0f 85 9f 00 00 00    	jne    16c10 <fibril_switch+0x120>
   16b71:	8b 45 f4             	mov    -0xc(%ebp),%eax
   16b74:	8b 58 34             	mov    0x34(%eax),%ebx
   16b77:	85 db                	test   %ebx,%ebx
   16b79:	0f 84 11 01 00 00    	je     16c90 <fibril_switch+0x1a0>
   16b7f:	8b 43 24             	mov    0x24(%ebx),%eax
   16b82:	85 c0                	test   %eax,%eax
   16b84:	74 0e                	je     16b94 <fibril_switch+0xa4>
   16b86:	89 04 24             	mov    %eax,(%esp)
   16b89:	e8 a2 44 01 00       	call   2b030 <as_area_destroy>
   16b8e:	8b 55 f4             	mov    -0xc(%ebp),%edx
   16b91:	8b 5a 34             	mov    0x34(%edx),%ebx
   16b94:	8b 43 30             	mov    0x30(%ebx),%eax
   16b97:	89 04 24             	mov    %eax,(%esp)
   16b9a:	e8 31 1a 00 00       	call   185d0 <__free_tls>
   16b9f:	89 1c 24             	mov    %ebx,(%esp)
   16ba2:	e8 39 96 00 00       	call   201e0 <free>
   16ba7:	8b 45 f4             	mov    -0xc(%ebp),%eax
   16baa:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
   16bb1:	b8 01 00 00 00       	mov    $0x1,%eax
   16bb6:	83 c4 24             	add    $0x24,%esp
   16bb9:	5b                   	pop    %ebx
   16bba:	5d                   	pop    %ebp
   16bbb:	c3                   	ret    
   16bbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16bc0:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
   16bc4:	75 62                	jne    16c28 <fibril_switch+0x138>
   16bc6:	81 3d d8 04 03 00 d4 	cmpl   $0x304d4,0x304d8
   16bcd:	04 03 00 
   16bd0:	0f 84 c4 00 00 00    	je     16c9a <fibril_switch+0x1aa>
   16bd6:	81 3d e0 04 03 00 dc 	cmpl   $0x304dc,0x304e0
   16bdd:	04 03 00 
   16be0:	0f 85 38 ff ff ff    	jne    16b1e <fibril_switch+0x2e>
   16be6:	a1 b4 06 03 00       	mov    0x306b4,%eax
   16beb:	39 05 b0 06 03 00    	cmp    %eax,0x306b0
   16bf1:	0f 8f 27 ff ff ff    	jg     16b1e <fibril_switch+0x2e>
   16bf7:	90                   	nop
   16bf8:	c7 04 24 d0 04 03 00 	movl   $0x304d0,(%esp)
   16bff:	e8 2c 21 00 00       	call   18d30 <futex_up>
   16c04:	83 c4 24             	add    $0x24,%esp
   16c07:	31 c0                	xor    %eax,%eax
   16c09:	5b                   	pop    %ebx
   16c0a:	5d                   	pop    %ebp
   16c0b:	c3                   	ret    
   16c0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   16c10:	8b 55 f4             	mov    -0xc(%ebp),%edx
   16c13:	8b 4a 3c             	mov    0x3c(%edx),%ecx
   16c16:	83 e1 fe             	and    $0xfffffffe,%ecx
   16c19:	89 4a 3c             	mov    %ecx,0x3c(%edx)
   16c1c:	e9 50 ff ff ff       	jmp    16b71 <fibril_switch+0x81>
   16c21:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16c28:	8b 45 08             	mov    0x8(%ebp),%eax
   16c2b:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
   16c2f:	0f 94 45 f2          	sete   -0xe(%ebp)
   16c33:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)
   16c37:	0f 94 45 f1          	sete   -0xf(%ebp)
   16c3b:	83 e0 fd             	and    $0xfffffffd,%eax
   16c3e:	48                   	dec    %eax
   16c3f:	0f 85 5d 01 00 00    	jne    16da2 <fibril_switch+0x2b2>
   16c45:	81 3d e8 04 03 00 e4 	cmpl   $0x304e4,0x304e8
   16c4c:	04 03 00 
   16c4f:	75 30                	jne    16c81 <fibril_switch+0x191>
   16c51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16c58:	c7 04 24 d0 04 03 00 	movl   $0x304d0,(%esp)
   16c5f:	e8 cc 20 00 00       	call   18d30 <futex_up>
   16c64:	e8 37 b2 00 00       	call   21ea0 <async_create_manager>
   16c69:	c7 04 24 d0 04 03 00 	movl   $0x304d0,(%esp)
   16c70:	e8 5b 20 00 00       	call   18cd0 <futex_down>
   16c75:	81 3d e8 04 03 00 e4 	cmpl   $0x304e4,0x304e8
   16c7c:	04 03 00 
   16c7f:	74 d7                	je     16c58 <fibril_switch+0x168>
   16c81:	c6 45 f3 01          	movb   $0x1,-0xd(%ebp)
   16c85:	e9 af fe ff ff       	jmp    16b39 <fibril_switch+0x49>
   16c8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   16c90:	b8 01 00 00 00       	mov    $0x1,%eax
   16c95:	e9 1c ff ff ff       	jmp    16bb6 <fibril_switch+0xc6>
   16c9a:	81 3d e0 04 03 00 dc 	cmpl   $0x304dc,0x304e0
   16ca1:	04 03 00 
   16ca4:	0f 85 74 fe ff ff    	jne    16b1e <fibril_switch+0x2e>
   16caa:	e9 49 ff ff ff       	jmp    16bf8 <fibril_switch+0x108>
   16caf:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
   16cb3:	75 28                	jne    16cdd <fibril_switch+0x1ed>
   16cb5:	8b 45 f4             	mov    -0xc(%ebp),%eax
   16cb8:	8b 55 f4             	mov    -0xc(%ebp),%edx
   16cbb:	ff 0d b0 06 03 00    	decl   0x306b0
   16cc1:	c7 40 04 e4 04 03 00 	movl   $0x304e4,0x4(%eax)
   16cc8:	a1 e4 04 03 00       	mov    0x304e4,%eax
   16ccd:	89 02                	mov    %eax,(%edx)
   16ccf:	a1 e4 04 03 00       	mov    0x304e4,%eax
   16cd4:	89 15 e4 04 03 00    	mov    %edx,0x304e4
   16cda:	89 50 04             	mov    %edx,0x4(%eax)
   16cdd:	80 7d f3 00          	cmpb   $0x0,-0xd(%ebp)
   16ce1:	74 70                	je     16d53 <fibril_switch+0x263>
   16ce3:	8b 1d e8 04 03 00    	mov    0x304e8,%ebx
   16ce9:	81 fb e4 04 03 00    	cmp    $0x304e4,%ebx
   16cef:	0f 95 c0             	setne  %al
   16cf2:	25 ff 00 00 00       	and    $0xff,%eax
   16cf7:	f7 d8                	neg    %eax
   16cf9:	21 c3                	and    %eax,%ebx
   16cfb:	65 83 3d f8 ff ff ff 	cmpl   $0x0,%gs:0xfffffff8
   16d02:	00 
   16d03:	74 0a                	je     16d0f <fibril_switch+0x21f>
   16d05:	80 7d f2 00          	cmpb   $0x0,-0xe(%ebp)
   16d09:	0f 85 b9 00 00 00    	jne    16dc8 <fibril_switch+0x2d8>
   16d0f:	ff 05 b0 06 03 00    	incl   0x306b0
   16d15:	80 7d f1 00          	cmpb   $0x0,-0xf(%ebp)
   16d19:	75 7c                	jne    16d97 <fibril_switch+0x2a7>
   16d1b:	8b 13                	mov    (%ebx),%edx
   16d1d:	85 d2                	test   %edx,%edx
   16d1f:	74 0e                	je     16d2f <fibril_switch+0x23f>
   16d21:	8b 43 04             	mov    0x4(%ebx),%eax
   16d24:	85 c0                	test   %eax,%eax
   16d26:	74 07                	je     16d2f <fibril_switch+0x23f>
   16d28:	89 10                	mov    %edx,(%eax)
   16d2a:	8b 13                	mov    (%ebx),%edx
   16d2c:	89 42 04             	mov    %eax,0x4(%edx)
   16d2f:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   16d35:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   16d3c:	c7 04 24 d0 04 03 00 	movl   $0x304d0,(%esp)
   16d43:	83 c3 08             	add    $0x8,%ebx
   16d46:	e8 e5 1f 00 00       	call   18d30 <futex_up>
   16d4b:	89 1c 24             	mov    %ebx,(%esp)
   16d4e:	e8 3e 3c 01 00       	call   2a991 <context_restore>
   16d53:	8b 1d e0 04 03 00    	mov    0x304e0,%ebx
   16d59:	81 fb dc 04 03 00    	cmp    $0x304dc,%ebx
   16d5f:	74 4a                	je     16dab <fibril_switch+0x2bb>
   16d61:	ff 0d b4 06 03 00    	decl   0x306b4
   16d67:	eb b2                	jmp    16d1b <fibril_switch+0x22b>
   16d69:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
   16d6d:	0f 85 3c ff ff ff    	jne    16caf <fibril_switch+0x1bf>
   16d73:	8b 55 f4             	mov    -0xc(%ebp),%edx
   16d76:	a1 d4 04 03 00       	mov    0x304d4,%eax
   16d7b:	89 02                	mov    %eax,(%edx)
   16d7d:	c7 42 04 d4 04 03 00 	movl   $0x304d4,0x4(%edx)
   16d84:	a1 d4 04 03 00       	mov    0x304d4,%eax
   16d89:	89 15 d4 04 03 00    	mov    %edx,0x304d4
   16d8f:	89 50 04             	mov    %edx,0x4(%eax)
   16d92:	e9 46 ff ff ff       	jmp    16cdd <fibril_switch+0x1ed>
   16d97:	8b 55 f4             	mov    -0xc(%ebp),%edx
   16d9a:	89 53 34             	mov    %edx,0x34(%ebx)
   16d9d:	e9 79 ff ff ff       	jmp    16d1b <fibril_switch+0x22b>
   16da2:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)
   16da6:	e9 8e fd ff ff       	jmp    16b39 <fibril_switch+0x49>
   16dab:	8b 1d d8 04 03 00    	mov    0x304d8,%ebx
   16db1:	81 fb d4 04 03 00    	cmp    $0x304d4,%ebx
   16db7:	0f 95 c0             	setne  %al
   16dba:	25 ff 00 00 00       	and    $0xff,%eax
   16dbf:	f7 d8                	neg    %eax
   16dc1:	21 c3                	and    %eax,%ebx
   16dc3:	e9 53 ff ff ff       	jmp    16d1b <fibril_switch+0x22b>
   16dc8:	8b 45 f4             	mov    -0xc(%ebp),%eax
   16dcb:	ff 05 b4 06 03 00    	incl   0x306b4
   16dd1:	83 48 3c 01          	orl    $0x1,0x3c(%eax)
   16dd5:	ff 05 b0 06 03 00    	incl   0x306b0
   16ddb:	e9 3b ff ff ff       	jmp    16d1b <fibril_switch+0x22b>

00016de0 <fibril_create>:
   16de0:	55                   	push   %ebp
   16de1:	89 e5                	mov    %esp,%ebp
   16de3:	53                   	push   %ebx
   16de4:	83 ec 24             	sub    $0x24,%esp
   16de7:	e8 64 17 00 00       	call   18550 <__make_tls>
   16dec:	89 c3                	mov    %eax,%ebx
   16dee:	85 c0                	test   %eax,%eax
   16df0:	0f 84 ea 00 00 00    	je     16ee0 <fibril_create+0x100>
   16df6:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)
   16dfd:	e8 ce 92 00 00       	call   200d0 <malloc>
   16e02:	89 45 f4             	mov    %eax,-0xc(%ebp)
   16e05:	85 c0                	test   %eax,%eax
   16e07:	0f 84 c5 00 00 00    	je     16ed2 <fibril_create+0xf2>
   16e0d:	89 43 04             	mov    %eax,0x4(%ebx)
   16e10:	89 58 30             	mov    %ebx,0x30(%eax)
   16e13:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
   16e1a:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   16e21:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   16e28:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
   16e2f:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%eax)
   16e36:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)
   16e3d:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%eax)
   16e44:	e8 e7 38 01 00       	call   2a730 <stack_size_get>
   16e49:	c7 44 24 08 3b 00 00 	movl   $0x3b,0x8(%esp)
   16e50:	00 
   16e51:	89 44 24 04          	mov    %eax,0x4(%esp)
   16e55:	c7 04 24 ff ff ff ff 	movl   $0xffffffff,(%esp)
   16e5c:	89 45 f0             	mov    %eax,-0x10(%ebp)
   16e5f:	e8 2c 41 01 00       	call   2af90 <as_area_create>
   16e64:	8b 55 f4             	mov    -0xc(%ebp),%edx
   16e67:	89 42 24             	mov    %eax,0x24(%edx)
   16e6a:	40                   	inc    %eax
   16e6b:	74 4b                	je     16eb8 <fibril_create+0xd8>
   16e6d:	8b 45 08             	mov    0x8(%ebp),%eax
   16e70:	89 42 2c             	mov    %eax,0x2c(%edx)
   16e73:	8b 45 0c             	mov    0xc(%ebp),%eax
   16e76:	89 42 28             	mov    %eax,0x28(%edx)
   16e79:	89 d0                	mov    %edx,%eax
   16e7b:	83 c0 08             	add    $0x8,%eax
   16e7e:	89 04 24             	mov    %eax,(%esp)
   16e81:	e8 e6 3a 01 00       	call   2a96c <context_save>
   16e86:	8b 45 f4             	mov    -0xc(%ebp),%eax
   16e89:	8b 55 f0             	mov    -0x10(%ebp),%edx
   16e8c:	c7 40 0c c0 6a 01 00 	movl   $0x16ac0,0xc(%eax)
   16e93:	8b 40 24             	mov    0x24(%eax),%eax
   16e96:	8d 44 10 f4          	lea    -0xc(%eax,%edx,1),%eax
   16e9a:	8b 55 f4             	mov    -0xc(%ebp),%edx
   16e9d:	89 42 08             	mov    %eax,0x8(%edx)
   16ea0:	8b 42 30             	mov    0x30(%edx),%eax
   16ea3:	89 42 20             	mov    %eax,0x20(%edx)
   16ea6:	c7 42 1c 00 00 00 00 	movl   $0x0,0x1c(%edx)
   16ead:	89 d0                	mov    %edx,%eax
   16eaf:	83 c4 24             	add    $0x24,%esp
   16eb2:	5b                   	pop    %ebx
   16eb3:	5d                   	pop    %ebp
   16eb4:	c3                   	ret    
   16eb5:	8d 76 00             	lea    0x0(%esi),%esi
   16eb8:	8b 42 30             	mov    0x30(%edx),%eax
   16ebb:	89 04 24             	mov    %eax,(%esp)
   16ebe:	e8 0d 17 00 00       	call   185d0 <__free_tls>
   16ec3:	8b 45 f4             	mov    -0xc(%ebp),%eax
   16ec6:	89 04 24             	mov    %eax,(%esp)
   16ec9:	e8 12 93 00 00       	call   201e0 <free>
   16ece:	31 c0                	xor    %eax,%eax
   16ed0:	eb dd                	jmp    16eaf <fibril_create+0xcf>
   16ed2:	89 1c 24             	mov    %ebx,(%esp)
   16ed5:	e8 f6 16 00 00       	call   185d0 <__free_tls>
   16eda:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   16ee0:	31 c0                	xor    %eax,%eax
   16ee2:	eb cb                	jmp    16eaf <fibril_create+0xcf>
   16ee4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   16eea:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00016ef0 <fibril_destroy>:
   16ef0:	55                   	push   %ebp
   16ef1:	89 e5                	mov    %esp,%ebp
   16ef3:	53                   	push   %ebx
   16ef4:	83 ec 14             	sub    $0x14,%esp
   16ef7:	8b 5d 08             	mov    0x8(%ebp),%ebx
   16efa:	8b 43 24             	mov    0x24(%ebx),%eax
   16efd:	89 04 24             	mov    %eax,(%esp)
   16f00:	e8 2b 41 01 00       	call   2b030 <as_area_destroy>
   16f05:	8b 43 30             	mov    0x30(%ebx),%eax
   16f08:	89 04 24             	mov    %eax,(%esp)
   16f0b:	e8 c0 16 00 00       	call   185d0 <__free_tls>
   16f10:	89 5d 08             	mov    %ebx,0x8(%ebp)
   16f13:	83 c4 14             	add    $0x14,%esp
   16f16:	5b                   	pop    %ebx
   16f17:	5d                   	pop    %ebp
   16f18:	e9 c3 92 00 00       	jmp    201e0 <free>
   16f1d:	8d 76 00             	lea    0x0(%esi),%esi

00016f20 <fibril_add_ready>:
   16f20:	55                   	push   %ebp
   16f21:	89 e5                	mov    %esp,%ebp
   16f23:	53                   	push   %ebx
   16f24:	83 ec 14             	sub    $0x14,%esp
   16f27:	8b 5d 08             	mov    0x8(%ebp),%ebx
   16f2a:	c7 04 24 d0 04 03 00 	movl   $0x304d0,(%esp)
   16f31:	e8 9a 1d 00 00       	call   18cd0 <futex_down>
   16f36:	f6 43 3c 01          	testb  $0x1,0x3c(%ebx)
   16f3a:	75 34                	jne    16f70 <fibril_add_ready+0x50>
   16f3c:	a1 d4 04 03 00       	mov    0x304d4,%eax
   16f41:	c7 43 04 d4 04 03 00 	movl   $0x304d4,0x4(%ebx)
   16f48:	89 03                	mov    %eax,(%ebx)
   16f4a:	a1 d4 04 03 00       	mov    0x304d4,%eax
   16f4f:	89 1d d4 04 03 00    	mov    %ebx,0x304d4
   16f55:	89 58 04             	mov    %ebx,0x4(%eax)
   16f58:	c7 45 08 d0 04 03 00 	movl   $0x304d0,0x8(%ebp)
   16f5f:	83 c4 14             	add    $0x14,%esp
   16f62:	5b                   	pop    %ebx
   16f63:	5d                   	pop    %ebp
   16f64:	e9 c7 1d 00 00       	jmp    18d30 <futex_up>
   16f69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   16f70:	a1 dc 04 03 00       	mov    0x304dc,%eax
   16f75:	c7 43 04 dc 04 03 00 	movl   $0x304dc,0x4(%ebx)
   16f7c:	89 03                	mov    %eax,(%ebx)
   16f7e:	a1 dc 04 03 00       	mov    0x304dc,%eax
   16f83:	89 1d dc 04 03 00    	mov    %ebx,0x304dc
   16f89:	89 58 04             	mov    %ebx,0x4(%eax)
   16f8c:	eb ca                	jmp    16f58 <fibril_add_ready+0x38>
   16f8e:	66 90                	xchg   %ax,%ax

00016f90 <fibril_add_manager>:
   16f90:	55                   	push   %ebp
   16f91:	89 e5                	mov    %esp,%ebp
   16f93:	53                   	push   %ebx
   16f94:	83 ec 14             	sub    $0x14,%esp
   16f97:	8b 5d 08             	mov    0x8(%ebp),%ebx
   16f9a:	c7 04 24 d0 04 03 00 	movl   $0x304d0,(%esp)
   16fa1:	e8 2a 1d 00 00       	call   18cd0 <futex_down>
   16fa6:	a1 e4 04 03 00       	mov    0x304e4,%eax
   16fab:	89 03                	mov    %eax,(%ebx)
   16fad:	c7 43 04 e4 04 03 00 	movl   $0x304e4,0x4(%ebx)
   16fb4:	a1 e4 04 03 00       	mov    0x304e4,%eax
   16fb9:	89 1d e4 04 03 00    	mov    %ebx,0x304e4
   16fbf:	89 58 04             	mov    %ebx,0x4(%eax)
   16fc2:	c7 45 08 d0 04 03 00 	movl   $0x304d0,0x8(%ebp)
   16fc9:	83 c4 14             	add    $0x14,%esp
   16fcc:	5b                   	pop    %ebx
   16fcd:	5d                   	pop    %ebp
   16fce:	e9 5d 1d 00 00       	jmp    18d30 <futex_up>
   16fd3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   16fd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00016fe0 <fibril_remove_manager>:
   16fe0:	55                   	push   %ebp
   16fe1:	89 e5                	mov    %esp,%ebp
   16fe3:	83 ec 18             	sub    $0x18,%esp
   16fe6:	c7 04 24 d0 04 03 00 	movl   $0x304d0,(%esp)
   16fed:	e8 de 1c 00 00       	call   18cd0 <futex_down>
   16ff2:	a1 e8 04 03 00       	mov    0x304e8,%eax
   16ff7:	3d e4 04 03 00       	cmp    $0x304e4,%eax
   16ffc:	74 21                	je     1701f <fibril_remove_manager+0x3f>
   16ffe:	8b 08                	mov    (%eax),%ecx
   17000:	85 c9                	test   %ecx,%ecx
   17002:	74 0e                	je     17012 <fibril_remove_manager+0x32>
   17004:	8b 50 04             	mov    0x4(%eax),%edx
   17007:	85 d2                	test   %edx,%edx
   17009:	74 07                	je     17012 <fibril_remove_manager+0x32>
   1700b:	89 0a                	mov    %ecx,(%edx)
   1700d:	8b 08                	mov    (%eax),%ecx
   1700f:	89 51 04             	mov    %edx,0x4(%ecx)
   17012:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   17018:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   1701f:	c7 04 24 d0 04 03 00 	movl   $0x304d0,(%esp)
   17026:	e8 05 1d 00 00       	call   18d30 <futex_up>
   1702b:	c9                   	leave  
   1702c:	c3                   	ret    
   1702d:	8d 76 00             	lea    0x0(%esi),%esi

00017030 <fibril_get_id>:
   17030:	55                   	push   %ebp
   17031:	89 e5                	mov    %esp,%ebp
   17033:	5d                   	pop    %ebp
   17034:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax
   1703a:	8b 40 04             	mov    0x4(%eax),%eax
   1703d:	c3                   	ret    
   1703e:	66 90                	xchg   %ax,%ax

00017040 <fibril_inc_sercount>:
   17040:	65 a1 f8 ff ff ff    	mov    %gs:0xfffffff8,%eax
   17046:	55                   	push   %ebp
   17047:	40                   	inc    %eax
   17048:	89 e5                	mov    %esp,%ebp
   1704a:	65 a3 f8 ff ff ff    	mov    %eax,%gs:0xfffffff8
   17050:	5d                   	pop    %ebp
   17051:	c3                   	ret    
   17052:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17059:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017060 <fibril_dec_sercount>:
   17060:	65 a1 f8 ff ff ff    	mov    %gs:0xfffffff8,%eax
   17066:	55                   	push   %ebp
   17067:	48                   	dec    %eax
   17068:	89 e5                	mov    %esp,%ebp
   1706a:	65 a3 f8 ff ff ff    	mov    %eax,%gs:0xfffffff8
   17070:	5d                   	pop    %ebp
   17071:	c3                   	ret    
   17072:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17079:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017080 <fibril_get_sercount>:
   17080:	55                   	push   %ebp
   17081:	65 a1 f8 ff ff ff    	mov    %gs:0xfffffff8,%eax
   17087:	89 e5                	mov    %esp,%ebp
   17089:	5d                   	pop    %ebp
   1708a:	c3                   	ret    
   1708b:	66 90                	xchg   %ax,%ax
   1708d:	66 90                	xchg   %ax,%ax
   1708f:	90                   	nop

00017090 <print_deadlock>:
   17090:	55                   	push   %ebp
   17091:	89 e5                	mov    %esp,%ebp
   17093:	56                   	push   %esi
   17094:	53                   	push   %ebx
   17095:	89 c3                	mov    %eax,%ebx
   17097:	83 ec 10             	sub    $0x10,%esp
   1709a:	e8 91 ff ff ff       	call   17030 <fibril_get_id>
   1709f:	c7 04 24 28 db 02 00 	movl   $0x2db28,(%esp)
   170a6:	89 c6                	mov    %eax,%esi
   170a8:	e8 a3 41 00 00       	call   1b250 <printf>
   170ad:	e8 5e 37 01 00       	call   2a810 <stacktrace_print>
   170b2:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   170b6:	89 74 24 04          	mov    %esi,0x4(%esp)
   170ba:	c7 04 24 b4 db 02 00 	movl   $0x2dbb4,(%esp)
   170c1:	e8 8a 41 00 00       	call   1b250 <printf>
   170c6:	85 db                	test   %ebx,%ebx
   170c8:	75 54                	jne    1711e <print_deadlock+0x8e>
   170ca:	eb 58                	jmp    17124 <print_deadlock+0x94>
   170cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   170d0:	89 44 24 08          	mov    %eax,0x8(%esp)
   170d4:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   170d8:	c7 04 24 d8 db 02 00 	movl   $0x2dbd8,(%esp)
   170df:	e8 6c 41 00 00       	call   1b250 <printf>
   170e4:	8b 13                	mov    (%ebx),%edx
   170e6:	39 f2                	cmp    %esi,%edx
   170e8:	74 3a                	je     17124 <print_deadlock+0x94>
   170ea:	8b 42 0c             	mov    0xc(%edx),%eax
   170ed:	89 44 24 04          	mov    %eax,0x4(%esp)
   170f1:	8b 42 1c             	mov    0x1c(%edx),%eax
   170f4:	89 04 24             	mov    %eax,(%esp)
   170f7:	e8 94 36 01 00       	call   2a790 <stacktrace_print_fp_pc>
   170fc:	8b 03                	mov    (%ebx),%eax
   170fe:	8b 50 40             	mov    0x40(%eax),%edx
   17101:	89 44 24 04          	mov    %eax,0x4(%esp)
   17105:	89 54 24 08          	mov    %edx,0x8(%esp)
   17109:	c7 04 24 b4 db 02 00 	movl   $0x2dbb4,(%esp)
   17110:	e8 3b 41 00 00       	call   1b250 <printf>
   17115:	8b 03                	mov    (%ebx),%eax
   17117:	8b 58 40             	mov    0x40(%eax),%ebx
   1711a:	85 db                	test   %ebx,%ebx
   1711c:	74 06                	je     17124 <print_deadlock+0x94>
   1711e:	8b 03                	mov    (%ebx),%eax
   17120:	85 c0                	test   %eax,%eax
   17122:	75 ac                	jne    170d0 <print_deadlock+0x40>
   17124:	83 c4 10             	add    $0x10,%esp
   17127:	5b                   	pop    %ebx
   17128:	5e                   	pop    %esi
   17129:	5d                   	pop    %ebp
   1712a:	c3                   	ret    
   1712b:	90                   	nop
   1712c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00017130 <_fibril_rwlock_common_unlock>:
   17130:	55                   	push   %ebp
   17131:	89 e5                	mov    %esp,%ebp
   17133:	57                   	push   %edi
   17134:	56                   	push   %esi
   17135:	53                   	push   %ebx
   17136:	83 ec 1c             	sub    $0x1c,%esp
   17139:	89 c7                	mov    %eax,%edi
   1713b:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17142:	e8 89 1b 00 00       	call   18cd0 <futex_down>
   17147:	8b 47 08             	mov    0x8(%edi),%eax
   1714a:	85 c0                	test   %eax,%eax
   1714c:	74 12                	je     17160 <_fibril_rwlock_common_unlock+0x30>
   1714e:	48                   	dec    %eax
   1714f:	89 47 08             	mov    %eax,0x8(%edi)
   17152:	85 c0                	test   %eax,%eax
   17154:	0f 85 06 01 00 00    	jne    17260 <_fibril_rwlock_common_unlock+0x130>
   1715a:	8b 47 04             	mov    0x4(%edi),%eax
   1715d:	eb 08                	jmp    17167 <_fibril_rwlock_common_unlock+0x37>
   1715f:	90                   	nop
   17160:	8b 47 04             	mov    0x4(%edi),%eax
   17163:	48                   	dec    %eax
   17164:	89 47 04             	mov    %eax,0x4(%edi)
   17167:	85 c0                	test   %eax,%eax
   17169:	0f 85 07 01 00 00    	jne    17276 <_fibril_rwlock_common_unlock+0x146>
   1716f:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   17175:	8d 77 0c             	lea    0xc(%edi),%esi
   17178:	8b 47 10             	mov    0x10(%edi),%eax
   1717b:	39 f0                	cmp    %esi,%eax
   1717d:	74 71                	je     171f0 <_fibril_rwlock_common_unlock+0xc0>
   1717f:	8b 58 dc             	mov    -0x24(%eax),%ebx
   17182:	8d 50 dc             	lea    -0x24(%eax),%edx
   17185:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%ebx)
   1718c:	f6 43 3c 02          	testb  $0x2,0x3c(%ebx)
   17190:	75 76                	jne    17208 <_fibril_rwlock_common_unlock+0xd8>
   17192:	8b 4a 24             	mov    0x24(%edx),%ecx
   17195:	c6 42 04 01          	movb   $0x1,0x4(%edx)
   17199:	c6 42 20 00          	movb   $0x0,0x20(%edx)
   1719d:	85 c9                	test   %ecx,%ecx
   1719f:	74 0f                	je     171b0 <_fibril_rwlock_common_unlock+0x80>
   171a1:	8b 42 28             	mov    0x28(%edx),%eax
   171a4:	85 c0                	test   %eax,%eax
   171a6:	74 08                	je     171b0 <_fibril_rwlock_common_unlock+0x80>
   171a8:	89 08                	mov    %ecx,(%eax)
   171aa:	8b 4a 24             	mov    0x24(%edx),%ecx
   171ad:	89 41 04             	mov    %eax,0x4(%ecx)
   171b0:	c7 42 24 00 00 00 00 	movl   $0x0,0x24(%edx)
   171b7:	c7 42 28 00 00 00 00 	movl   $0x0,0x28(%edx)
   171be:	89 1c 24             	mov    %ebx,(%esp)
   171c1:	e8 5a fd ff ff       	call   16f20 <fibril_add_ready>
   171c6:	8b 47 08             	mov    0x8(%edi),%eax
   171c9:	8d 50 01             	lea    0x1(%eax),%edx
   171cc:	85 c0                	test   %eax,%eax
   171ce:	89 57 08             	mov    %edx,0x8(%edi)
   171d1:	75 02                	jne    171d5 <_fibril_rwlock_common_unlock+0xa5>
   171d3:	89 1f                	mov    %ebx,(%edi)
   171d5:	a1 d0 06 03 00       	mov    0x306d0,%eax
   171da:	85 c0                	test   %eax,%eax
   171dc:	74 9a                	je     17178 <_fibril_rwlock_common_unlock+0x48>
   171de:	e8 1d c4 00 00       	call   23600 <async_poke>
   171e3:	8b 47 10             	mov    0x10(%edi),%eax
   171e6:	39 f0                	cmp    %esi,%eax
   171e8:	75 95                	jne    1717f <_fibril_rwlock_common_unlock+0x4f>
   171ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   171f0:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   171f7:	e8 34 1b 00 00       	call   18d30 <futex_up>
   171fc:	83 c4 1c             	add    $0x1c,%esp
   171ff:	5b                   	pop    %ebx
   17200:	5e                   	pop    %esi
   17201:	5f                   	pop    %edi
   17202:	5d                   	pop    %ebp
   17203:	c3                   	ret    
   17204:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   17208:	8b 4f 08             	mov    0x8(%edi),%ecx
   1720b:	85 c9                	test   %ecx,%ecx
   1720d:	75 e1                	jne    171f0 <_fibril_rwlock_common_unlock+0xc0>
   1720f:	8b 4a 24             	mov    0x24(%edx),%ecx
   17212:	c6 42 04 01          	movb   $0x1,0x4(%edx)
   17216:	c6 42 20 00          	movb   $0x0,0x20(%edx)
   1721a:	85 c9                	test   %ecx,%ecx
   1721c:	74 0f                	je     1722d <_fibril_rwlock_common_unlock+0xfd>
   1721e:	8b 42 28             	mov    0x28(%edx),%eax
   17221:	85 c0                	test   %eax,%eax
   17223:	74 08                	je     1722d <_fibril_rwlock_common_unlock+0xfd>
   17225:	89 08                	mov    %ecx,(%eax)
   17227:	8b 4a 24             	mov    0x24(%edx),%ecx
   1722a:	89 41 04             	mov    %eax,0x4(%ecx)
   1722d:	c7 42 24 00 00 00 00 	movl   $0x0,0x24(%edx)
   17234:	c7 42 28 00 00 00 00 	movl   $0x0,0x28(%edx)
   1723b:	89 1c 24             	mov    %ebx,(%esp)
   1723e:	e8 dd fc ff ff       	call   16f20 <fibril_add_ready>
   17243:	8b 47 04             	mov    0x4(%edi),%eax
   17246:	40                   	inc    %eax
   17247:	89 1f                	mov    %ebx,(%edi)
   17249:	89 47 04             	mov    %eax,0x4(%edi)
   1724c:	a1 d0 06 03 00       	mov    0x306d0,%eax
   17251:	85 c0                	test   %eax,%eax
   17253:	74 9b                	je     171f0 <_fibril_rwlock_common_unlock+0xc0>
   17255:	e8 a6 c3 00 00       	call   23600 <async_poke>
   1725a:	eb 94                	jmp    171f0 <_fibril_rwlock_common_unlock+0xc0>
   1725c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   17260:	8b 1f                	mov    (%edi),%ebx
   17262:	e8 c9 fd ff ff       	call   17030 <fibril_get_id>
   17267:	39 c3                	cmp    %eax,%ebx
   17269:	75 85                	jne    171f0 <_fibril_rwlock_common_unlock+0xc0>
   1726b:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   17271:	e9 7a ff ff ff       	jmp    171f0 <_fibril_rwlock_common_unlock+0xc0>
   17276:	c7 44 24 08 11 01 00 	movl   $0x111,0x8(%esp)
   1727d:	00 
   1727e:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   17285:	00 
   17286:	c7 04 24 00 dc 02 00 	movl   $0x2dc00,(%esp)
   1728d:	e8 1e 36 01 00       	call   2a8b0 <assert_abort>
   17292:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17299:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000172a0 <fibril_mutex_initialize>:
   172a0:	55                   	push   %ebp
   172a1:	89 e5                	mov    %esp,%ebp
   172a3:	8b 45 08             	mov    0x8(%ebp),%eax
   172a6:	8d 50 08             	lea    0x8(%eax),%edx
   172a9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   172af:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
   172b6:	89 50 08             	mov    %edx,0x8(%eax)
   172b9:	89 50 0c             	mov    %edx,0xc(%eax)
   172bc:	5d                   	pop    %ebp
   172bd:	c3                   	ret    
   172be:	66 90                	xchg   %ax,%ax

000172c0 <fibril_mutex_lock>:
   172c0:	55                   	push   %ebp
   172c1:	89 e5                	mov    %esp,%ebp
   172c3:	57                   	push   %edi
   172c4:	56                   	push   %esi
   172c5:	53                   	push   %ebx
   172c6:	83 ec 5c             	sub    $0x5c,%esp
   172c9:	8b 75 08             	mov    0x8(%ebp),%esi
   172cc:	e8 5f fd ff ff       	call   17030 <fibril_get_id>
   172d1:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   172d4:	e8 a7 fd ff ff       	call   17080 <fibril_get_sercount>
   172d9:	85 c0                	test   %eax,%eax
   172db:	0f 85 a0 00 00 00    	jne    17381 <fibril_mutex_lock+0xc1>
   172e1:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   172e8:	e8 e3 19 00 00       	call   18cd0 <futex_down>
   172ed:	8b 46 04             	mov    0x4(%esi),%eax
   172f0:	8d 50 ff             	lea    -0x1(%eax),%edx
   172f3:	85 c0                	test   %eax,%eax
   172f5:	89 56 04             	mov    %edx,0x4(%esi)
   172f8:	7e 1e                	jle    17318 <fibril_mutex_lock+0x58>
   172fa:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   172fd:	89 06                	mov    %eax,(%esi)
   172ff:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17306:	e8 25 1a 00 00       	call   18d30 <futex_up>
   1730b:	83 c4 5c             	add    $0x5c,%esp
   1730e:	5b                   	pop    %ebx
   1730f:	5e                   	pop    %esi
   17310:	5f                   	pop    %edi
   17311:	5d                   	pop    %ebp
   17312:	c3                   	ret    
   17313:	90                   	nop
   17314:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   17318:	8d 45 bc             	lea    -0x44(%ebp),%eax
   1731b:	89 f3                	mov    %esi,%ebx
   1731d:	89 04 24             	mov    %eax,(%esp)
   17320:	e8 cb 9f 00 00       	call   212f0 <awaiter_initialize>
   17325:	e8 06 fd ff ff       	call   17030 <fibril_get_id>
   1732a:	8b 56 08             	mov    0x8(%esi),%edx
   1732d:	89 45 bc             	mov    %eax,-0x44(%ebp)
   17330:	8d 46 08             	lea    0x8(%esi),%eax
   17333:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   17336:	8d 45 e0             	lea    -0x20(%ebp),%eax
   17339:	c6 45 dc 01          	movb   $0x1,-0x24(%ebp)
   1733d:	89 55 e0             	mov    %edx,-0x20(%ebp)
   17340:	89 42 04             	mov    %eax,0x4(%edx)
   17343:	89 46 08             	mov    %eax,0x8(%esi)
   17346:	66 90                	xchg   %ax,%ax
   17348:	8b 3b                	mov    (%ebx),%edi
   1734a:	85 ff                	test   %edi,%edi
   1734c:	74 12                	je     17360 <fibril_mutex_lock+0xa0>
   1734e:	e8 dd fc ff ff       	call   17030 <fibril_get_id>
   17353:	39 c7                	cmp    %eax,%edi
   17355:	74 23                	je     1737a <fibril_mutex_lock+0xba>
   17357:	8b 03                	mov    (%ebx),%eax
   17359:	8b 58 40             	mov    0x40(%eax),%ebx
   1735c:	85 db                	test   %ebx,%ebx
   1735e:	75 e8                	jne    17348 <fibril_mutex_lock+0x88>
   17360:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   17363:	89 70 40             	mov    %esi,0x40(%eax)
   17366:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   1736d:	e8 7e f7 ff ff       	call   16af0 <fibril_switch>
   17372:	83 c4 5c             	add    $0x5c,%esp
   17375:	5b                   	pop    %ebx
   17376:	5e                   	pop    %esi
   17377:	5f                   	pop    %edi
   17378:	5d                   	pop    %ebp
   17379:	c3                   	ret    
   1737a:	89 d8                	mov    %ebx,%eax
   1737c:	e8 0f fd ff ff       	call   17090 <print_deadlock>
   17381:	e8 0a 8e ff ff       	call   10190 <abort>
   17386:	8d 76 00             	lea    0x0(%esi),%esi
   17389:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017390 <fibril_mutex_trylock>:
   17390:	55                   	push   %ebp
   17391:	89 e5                	mov    %esp,%ebp
   17393:	53                   	push   %ebx
   17394:	83 ec 14             	sub    $0x14,%esp
   17397:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1739a:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   173a1:	e8 2a 19 00 00       	call   18cd0 <futex_down>
   173a6:	8b 43 04             	mov    0x4(%ebx),%eax
   173a9:	85 c0                	test   %eax,%eax
   173ab:	7e 23                	jle    173d0 <fibril_mutex_trylock+0x40>
   173ad:	48                   	dec    %eax
   173ae:	89 43 04             	mov    %eax,0x4(%ebx)
   173b1:	e8 7a fc ff ff       	call   17030 <fibril_get_id>
   173b6:	89 03                	mov    %eax,(%ebx)
   173b8:	b3 01                	mov    $0x1,%bl
   173ba:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   173c1:	e8 6a 19 00 00       	call   18d30 <futex_up>
   173c6:	83 c4 14             	add    $0x14,%esp
   173c9:	88 d8                	mov    %bl,%al
   173cb:	5b                   	pop    %ebx
   173cc:	5d                   	pop    %ebp
   173cd:	c3                   	ret    
   173ce:	66 90                	xchg   %ax,%ax
   173d0:	31 db                	xor    %ebx,%ebx
   173d2:	eb e6                	jmp    173ba <fibril_mutex_trylock+0x2a>
   173d4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   173da:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000173e0 <fibril_mutex_unlock>:
   173e0:	55                   	push   %ebp
   173e1:	89 e5                	mov    %esp,%ebp
   173e3:	53                   	push   %ebx
   173e4:	83 ec 14             	sub    $0x14,%esp
   173e7:	8b 5d 08             	mov    0x8(%ebp),%ebx
   173ea:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   173f1:	e8 da 18 00 00       	call   18cd0 <futex_down>
   173f6:	8b 43 04             	mov    0x4(%ebx),%eax
   173f9:	85 c0                	test   %eax,%eax
   173fb:	7e 2b                	jle    17428 <fibril_mutex_unlock+0x48>
   173fd:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17404:	e8 27 19 00 00       	call   18d30 <futex_up>
   17409:	c7 44 24 08 a9 00 00 	movl   $0xa9,0x8(%esp)
   17410:	00 
   17411:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   17418:	00 
   17419:	c7 04 24 5f db 02 00 	movl   $0x2db5f,(%esp)
   17420:	e8 8b 34 01 00       	call   2a8b0 <assert_abort>
   17425:	8d 76 00             	lea    0x0(%esi),%esi
   17428:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   1742f:	e8 fc 18 00 00       	call   18d30 <futex_up>
   17434:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   1743b:	e8 90 18 00 00       	call   18cd0 <futex_down>
   17440:	8b 43 04             	mov    0x4(%ebx),%eax
   17443:	8d 50 01             	lea    0x1(%eax),%edx
   17446:	85 c0                	test   %eax,%eax
   17448:	89 53 04             	mov    %edx,0x4(%ebx)
   1744b:	78 1b                	js     17468 <fibril_mutex_unlock+0x88>
   1744d:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   17453:	c7 45 08 cc 05 03 00 	movl   $0x305cc,0x8(%ebp)
   1745a:	83 c4 14             	add    $0x14,%esp
   1745d:	5b                   	pop    %ebx
   1745e:	5d                   	pop    %ebp
   1745f:	e9 cc 18 00 00       	jmp    18d30 <futex_up>
   17464:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   17468:	8b 53 0c             	mov    0xc(%ebx),%edx
   1746b:	8d 43 08             	lea    0x8(%ebx),%eax
   1746e:	39 c2                	cmp    %eax,%edx
   17470:	74 57                	je     174c9 <fibril_mutex_unlock+0xe9>
   17472:	85 d2                	test   %edx,%edx
   17474:	74 53                	je     174c9 <fibril_mutex_unlock+0xe9>
   17476:	8d 42 dc             	lea    -0x24(%edx),%eax
   17479:	8b 52 dc             	mov    -0x24(%edx),%edx
   1747c:	c6 40 04 01          	movb   $0x1,0x4(%eax)
   17480:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   17484:	89 13                	mov    %edx,(%ebx)
   17486:	8b 58 24             	mov    0x24(%eax),%ebx
   17489:	c7 42 40 00 00 00 00 	movl   $0x0,0x40(%edx)
   17490:	85 db                	test   %ebx,%ebx
   17492:	74 0f                	je     174a3 <fibril_mutex_unlock+0xc3>
   17494:	8b 48 28             	mov    0x28(%eax),%ecx
   17497:	85 c9                	test   %ecx,%ecx
   17499:	74 08                	je     174a3 <fibril_mutex_unlock+0xc3>
   1749b:	89 19                	mov    %ebx,(%ecx)
   1749d:	8b 58 24             	mov    0x24(%eax),%ebx
   174a0:	89 4b 04             	mov    %ecx,0x4(%ebx)
   174a3:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   174aa:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   174b1:	89 14 24             	mov    %edx,(%esp)
   174b4:	e8 67 fa ff ff       	call   16f20 <fibril_add_ready>
   174b9:	a1 d0 06 03 00       	mov    0x306d0,%eax
   174be:	85 c0                	test   %eax,%eax
   174c0:	74 91                	je     17453 <fibril_mutex_unlock+0x73>
   174c2:	e8 39 c1 00 00       	call   23600 <async_poke>
   174c7:	eb 8a                	jmp    17453 <fibril_mutex_unlock+0x73>
   174c9:	c7 44 24 08 96 00 00 	movl   $0x96,0x8(%esp)
   174d0:	00 
   174d1:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   174d8:	00 
   174d9:	c7 04 24 53 db 02 00 	movl   $0x2db53,(%esp)
   174e0:	e8 cb 33 01 00       	call   2a8b0 <assert_abort>
   174e5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   174e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000174f0 <fibril_mutex_is_locked>:
   174f0:	55                   	push   %ebp
   174f1:	89 e5                	mov    %esp,%ebp
   174f3:	53                   	push   %ebx
   174f4:	83 ec 14             	sub    $0x14,%esp
   174f7:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   174fe:	e8 cd 17 00 00       	call   18cd0 <futex_down>
   17503:	8b 45 08             	mov    0x8(%ebp),%eax
   17506:	8b 40 04             	mov    0x4(%eax),%eax
   17509:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17510:	85 c0                	test   %eax,%eax
   17512:	0f 9e c3             	setle  %bl
   17515:	e8 16 18 00 00       	call   18d30 <futex_up>
   1751a:	83 c4 14             	add    $0x14,%esp
   1751d:	88 d8                	mov    %bl,%al
   1751f:	5b                   	pop    %ebx
   17520:	5d                   	pop    %ebp
   17521:	c3                   	ret    
   17522:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17529:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017530 <fibril_rwlock_initialize>:
   17530:	55                   	push   %ebp
   17531:	89 e5                	mov    %esp,%ebp
   17533:	8b 45 08             	mov    0x8(%ebp),%eax
   17536:	8d 50 0c             	lea    0xc(%eax),%edx
   17539:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   1753f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   17546:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
   1754d:	89 50 0c             	mov    %edx,0xc(%eax)
   17550:	89 50 10             	mov    %edx,0x10(%eax)
   17553:	5d                   	pop    %ebp
   17554:	c3                   	ret    
   17555:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   17559:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017560 <fibril_rwlock_read_lock>:
   17560:	55                   	push   %ebp
   17561:	89 e5                	mov    %esp,%ebp
   17563:	57                   	push   %edi
   17564:	56                   	push   %esi
   17565:	53                   	push   %ebx
   17566:	83 ec 5c             	sub    $0x5c,%esp
   17569:	8b 75 08             	mov    0x8(%ebp),%esi
   1756c:	e8 bf fa ff ff       	call   17030 <fibril_get_id>
   17571:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   17574:	e8 07 fb ff ff       	call   17080 <fibril_get_sercount>
   17579:	85 c0                	test   %eax,%eax
   1757b:	0f 85 b0 00 00 00    	jne    17631 <fibril_rwlock_read_lock+0xd1>
   17581:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17588:	e8 43 17 00 00       	call   18cd0 <futex_down>
   1758d:	8b 4e 04             	mov    0x4(%esi),%ecx
   17590:	85 c9                	test   %ecx,%ecx
   17592:	75 2c                	jne    175c0 <fibril_rwlock_read_lock+0x60>
   17594:	8b 46 08             	mov    0x8(%esi),%eax
   17597:	85 c0                	test   %eax,%eax
   17599:	8d 50 01             	lea    0x1(%eax),%edx
   1759c:	89 56 08             	mov    %edx,0x8(%esi)
   1759f:	74 17                	je     175b8 <fibril_rwlock_read_lock+0x58>
   175a1:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   175a8:	e8 83 17 00 00       	call   18d30 <futex_up>
   175ad:	83 c4 5c             	add    $0x5c,%esp
   175b0:	5b                   	pop    %ebx
   175b1:	5e                   	pop    %esi
   175b2:	5f                   	pop    %edi
   175b3:	5d                   	pop    %ebp
   175b4:	c3                   	ret    
   175b5:	8d 76 00             	lea    0x0(%esi),%esi
   175b8:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   175bb:	89 06                	mov    %eax,(%esi)
   175bd:	eb e2                	jmp    175a1 <fibril_rwlock_read_lock+0x41>
   175bf:	90                   	nop
   175c0:	8d 45 bc             	lea    -0x44(%ebp),%eax
   175c3:	89 f3                	mov    %esi,%ebx
   175c5:	89 04 24             	mov    %eax,(%esp)
   175c8:	e8 23 9d 00 00       	call   212f0 <awaiter_initialize>
   175cd:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   175d0:	8b 50 3c             	mov    0x3c(%eax),%edx
   175d3:	89 45 bc             	mov    %eax,-0x44(%ebp)
   175d6:	83 e2 fd             	and    $0xfffffffd,%edx
   175d9:	c6 45 dc 01          	movb   $0x1,-0x24(%ebp)
   175dd:	89 50 3c             	mov    %edx,0x3c(%eax)
   175e0:	8b 56 0c             	mov    0xc(%esi),%edx
   175e3:	8d 46 0c             	lea    0xc(%esi),%eax
   175e6:	89 55 e0             	mov    %edx,-0x20(%ebp)
   175e9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   175ec:	8d 45 e0             	lea    -0x20(%ebp),%eax
   175ef:	89 42 04             	mov    %eax,0x4(%edx)
   175f2:	89 46 0c             	mov    %eax,0xc(%esi)
   175f5:	8d 76 00             	lea    0x0(%esi),%esi
   175f8:	8b 3b                	mov    (%ebx),%edi
   175fa:	85 ff                	test   %edi,%edi
   175fc:	74 12                	je     17610 <fibril_rwlock_read_lock+0xb0>
   175fe:	e8 2d fa ff ff       	call   17030 <fibril_get_id>
   17603:	39 c7                	cmp    %eax,%edi
   17605:	74 23                	je     1762a <fibril_rwlock_read_lock+0xca>
   17607:	8b 03                	mov    (%ebx),%eax
   17609:	8b 58 40             	mov    0x40(%eax),%ebx
   1760c:	85 db                	test   %ebx,%ebx
   1760e:	75 e8                	jne    175f8 <fibril_rwlock_read_lock+0x98>
   17610:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   17613:	89 70 40             	mov    %esi,0x40(%eax)
   17616:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   1761d:	e8 ce f4 ff ff       	call   16af0 <fibril_switch>
   17622:	83 c4 5c             	add    $0x5c,%esp
   17625:	5b                   	pop    %ebx
   17626:	5e                   	pop    %esi
   17627:	5f                   	pop    %edi
   17628:	5d                   	pop    %ebp
   17629:	c3                   	ret    
   1762a:	89 d8                	mov    %ebx,%eax
   1762c:	e8 5f fa ff ff       	call   17090 <print_deadlock>
   17631:	e8 5a 8b ff ff       	call   10190 <abort>
   17636:	8d 76 00             	lea    0x0(%esi),%esi
   17639:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017640 <fibril_rwlock_write_lock>:
   17640:	55                   	push   %ebp
   17641:	89 e5                	mov    %esp,%ebp
   17643:	57                   	push   %edi
   17644:	56                   	push   %esi
   17645:	53                   	push   %ebx
   17646:	83 ec 5c             	sub    $0x5c,%esp
   17649:	8b 75 08             	mov    0x8(%ebp),%esi
   1764c:	e8 df f9 ff ff       	call   17030 <fibril_get_id>
   17651:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   17654:	e8 27 fa ff ff       	call   17080 <fibril_get_sercount>
   17659:	85 c0                	test   %eax,%eax
   1765b:	0f 85 ae 00 00 00    	jne    1770f <fibril_rwlock_write_lock+0xcf>
   17661:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17668:	e8 63 16 00 00       	call   18cd0 <futex_down>
   1766d:	8b 7e 04             	mov    0x4(%esi),%edi
   17670:	85 ff                	test   %edi,%edi
   17672:	75 07                	jne    1767b <fibril_rwlock_write_lock+0x3b>
   17674:	8b 5e 08             	mov    0x8(%esi),%ebx
   17677:	85 db                	test   %ebx,%ebx
   17679:	74 6d                	je     176e8 <fibril_rwlock_write_lock+0xa8>
   1767b:	8d 45 bc             	lea    -0x44(%ebp),%eax
   1767e:	89 f3                	mov    %esi,%ebx
   17680:	89 04 24             	mov    %eax,(%esp)
   17683:	e8 68 9c 00 00       	call   212f0 <awaiter_initialize>
   17688:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   1768b:	8b 56 0c             	mov    0xc(%esi),%edx
   1768e:	89 45 bc             	mov    %eax,-0x44(%ebp)
   17691:	83 48 3c 02          	orl    $0x2,0x3c(%eax)
   17695:	8d 46 0c             	lea    0xc(%esi),%eax
   17698:	c6 45 dc 01          	movb   $0x1,-0x24(%ebp)
   1769c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   1769f:	8d 45 e0             	lea    -0x20(%ebp),%eax
   176a2:	89 55 e0             	mov    %edx,-0x20(%ebp)
   176a5:	89 42 04             	mov    %eax,0x4(%edx)
   176a8:	89 46 0c             	mov    %eax,0xc(%esi)
   176ab:	90                   	nop
   176ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   176b0:	8b 3b                	mov    (%ebx),%edi
   176b2:	85 ff                	test   %edi,%edi
   176b4:	74 12                	je     176c8 <fibril_rwlock_write_lock+0x88>
   176b6:	e8 75 f9 ff ff       	call   17030 <fibril_get_id>
   176bb:	39 c7                	cmp    %eax,%edi
   176bd:	74 49                	je     17708 <fibril_rwlock_write_lock+0xc8>
   176bf:	8b 03                	mov    (%ebx),%eax
   176c1:	8b 58 40             	mov    0x40(%eax),%ebx
   176c4:	85 db                	test   %ebx,%ebx
   176c6:	75 e8                	jne    176b0 <fibril_rwlock_write_lock+0x70>
   176c8:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   176cb:	89 70 40             	mov    %esi,0x40(%eax)
   176ce:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   176d5:	e8 16 f4 ff ff       	call   16af0 <fibril_switch>
   176da:	83 c4 5c             	add    $0x5c,%esp
   176dd:	5b                   	pop    %ebx
   176de:	5e                   	pop    %esi
   176df:	5f                   	pop    %edi
   176e0:	5d                   	pop    %ebp
   176e1:	c3                   	ret    
   176e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   176e8:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   176eb:	c7 46 04 01 00 00 00 	movl   $0x1,0x4(%esi)
   176f2:	89 06                	mov    %eax,(%esi)
   176f4:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   176fb:	e8 30 16 00 00       	call   18d30 <futex_up>
   17700:	83 c4 5c             	add    $0x5c,%esp
   17703:	5b                   	pop    %ebx
   17704:	5e                   	pop    %esi
   17705:	5f                   	pop    %edi
   17706:	5d                   	pop    %ebp
   17707:	c3                   	ret    
   17708:	89 d8                	mov    %ebx,%eax
   1770a:	e8 81 f9 ff ff       	call   17090 <print_deadlock>
   1770f:	e8 7c 8a ff ff       	call   10190 <abort>
   17714:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1771a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00017720 <fibril_rwlock_read_unlock>:
   17720:	55                   	push   %ebp
   17721:	89 e5                	mov    %esp,%ebp
   17723:	53                   	push   %ebx
   17724:	83 ec 14             	sub    $0x14,%esp
   17727:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1772a:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17731:	e8 9a 15 00 00       	call   18cd0 <futex_down>
   17736:	8b 43 08             	mov    0x8(%ebx),%eax
   17739:	85 c0                	test   %eax,%eax
   1773b:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17742:	74 14                	je     17758 <fibril_rwlock_read_unlock+0x38>
   17744:	e8 e7 15 00 00       	call   18d30 <futex_up>
   17749:	83 c4 14             	add    $0x14,%esp
   1774c:	89 d8                	mov    %ebx,%eax
   1774e:	5b                   	pop    %ebx
   1774f:	5d                   	pop    %ebp
   17750:	e9 db f9 ff ff       	jmp    17130 <_fibril_rwlock_common_unlock>
   17755:	8d 76 00             	lea    0x0(%esi),%esi
   17758:	e8 d3 15 00 00       	call   18d30 <futex_up>
   1775d:	c7 44 24 08 3c 01 00 	movl   $0x13c,0x8(%esp)
   17764:	00 
   17765:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   1776c:	00 
   1776d:	c7 04 24 20 dc 02 00 	movl   $0x2dc20,(%esp)
   17774:	e8 37 31 01 00       	call   2a8b0 <assert_abort>
   17779:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00017780 <fibril_rwlock_write_unlock>:
   17780:	55                   	push   %ebp
   17781:	89 e5                	mov    %esp,%ebp
   17783:	53                   	push   %ebx
   17784:	83 ec 14             	sub    $0x14,%esp
   17787:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1778a:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17791:	e8 3a 15 00 00       	call   18cd0 <futex_down>
   17796:	8b 43 04             	mov    0x4(%ebx),%eax
   17799:	85 c0                	test   %eax,%eax
   1779b:	74 1b                	je     177b8 <fibril_rwlock_write_unlock+0x38>
   1779d:	48                   	dec    %eax
   1779e:	75 40                	jne    177e0 <fibril_rwlock_write_unlock+0x60>
   177a0:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   177a7:	e8 84 15 00 00       	call   18d30 <futex_up>
   177ac:	83 c4 14             	add    $0x14,%esp
   177af:	89 d8                	mov    %ebx,%eax
   177b1:	5b                   	pop    %ebx
   177b2:	5d                   	pop    %ebp
   177b3:	e9 78 f9 ff ff       	jmp    17130 <_fibril_rwlock_common_unlock>
   177b8:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   177bf:	e8 6c 15 00 00       	call   18d30 <futex_up>
   177c4:	c7 44 24 08 42 01 00 	movl   $0x142,0x8(%esp)
   177cb:	00 
   177cc:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   177d3:	00 
   177d4:	c7 04 24 44 dc 02 00 	movl   $0x2dc44,(%esp)
   177db:	e8 d0 30 01 00       	call   2a8b0 <assert_abort>
   177e0:	c7 44 24 08 58 01 00 	movl   $0x158,0x8(%esp)
   177e7:	00 
   177e8:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   177ef:	00 
   177f0:	c7 04 24 7a db 02 00 	movl   $0x2db7a,(%esp)
   177f7:	e8 b4 30 01 00       	call   2a8b0 <assert_abort>
   177fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00017800 <fibril_rwlock_is_read_locked>:
   17800:	55                   	push   %ebp
   17801:	89 e5                	mov    %esp,%ebp
   17803:	53                   	push   %ebx
   17804:	83 ec 14             	sub    $0x14,%esp
   17807:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   1780e:	e8 bd 14 00 00       	call   18cd0 <futex_down>
   17813:	8b 45 08             	mov    0x8(%ebp),%eax
   17816:	8b 40 08             	mov    0x8(%eax),%eax
   17819:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17820:	85 c0                	test   %eax,%eax
   17822:	0f 95 c3             	setne  %bl
   17825:	e8 06 15 00 00       	call   18d30 <futex_up>
   1782a:	83 c4 14             	add    $0x14,%esp
   1782d:	88 d8                	mov    %bl,%al
   1782f:	5b                   	pop    %ebx
   17830:	5d                   	pop    %ebp
   17831:	c3                   	ret    
   17832:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17839:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017840 <fibril_rwlock_is_write_locked>:
   17840:	55                   	push   %ebp
   17841:	89 e5                	mov    %esp,%ebp
   17843:	53                   	push   %ebx
   17844:	83 ec 14             	sub    $0x14,%esp
   17847:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   1784e:	e8 7d 14 00 00       	call   18cd0 <futex_down>
   17853:	8b 45 08             	mov    0x8(%ebp),%eax
   17856:	8b 40 04             	mov    0x4(%eax),%eax
   17859:	85 c0                	test   %eax,%eax
   1785b:	74 1b                	je     17878 <fibril_rwlock_is_write_locked+0x38>
   1785d:	48                   	dec    %eax
   1785e:	75 1c                	jne    1787c <fibril_rwlock_is_write_locked+0x3c>
   17860:	b3 01                	mov    $0x1,%bl
   17862:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17869:	e8 c2 14 00 00       	call   18d30 <futex_up>
   1786e:	83 c4 14             	add    $0x14,%esp
   17871:	88 d8                	mov    %bl,%al
   17873:	5b                   	pop    %ebx
   17874:	5d                   	pop    %ebp
   17875:	c3                   	ret    
   17876:	66 90                	xchg   %ax,%ax
   17878:	31 db                	xor    %ebx,%ebx
   1787a:	eb e6                	jmp    17862 <fibril_rwlock_is_write_locked+0x22>
   1787c:	c7 44 24 08 58 01 00 	movl   $0x158,0x8(%esp)
   17883:	00 
   17884:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   1788b:	00 
   1788c:	c7 04 24 7a db 02 00 	movl   $0x2db7a,(%esp)
   17893:	e8 18 30 01 00       	call   2a8b0 <assert_abort>
   17898:	90                   	nop
   17899:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000178a0 <fibril_rwlock_is_locked>:
   178a0:	55                   	push   %ebp
   178a1:	89 e5                	mov    %esp,%ebp
   178a3:	53                   	push   %ebx
   178a4:	83 ec 14             	sub    $0x14,%esp
   178a7:	8b 5d 08             	mov    0x8(%ebp),%ebx
   178aa:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   178b1:	e8 1a 14 00 00       	call   18cd0 <futex_down>
   178b6:	8b 43 08             	mov    0x8(%ebx),%eax
   178b9:	85 c0                	test   %eax,%eax
   178bb:	74 1b                	je     178d8 <fibril_rwlock_is_locked+0x38>
   178bd:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   178c4:	e8 67 14 00 00       	call   18d30 <futex_up>
   178c9:	b0 01                	mov    $0x1,%al
   178cb:	83 c4 14             	add    $0x14,%esp
   178ce:	5b                   	pop    %ebx
   178cf:	5d                   	pop    %ebp
   178d0:	c3                   	ret    
   178d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   178d8:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   178df:	e8 4c 14 00 00       	call   18d30 <futex_up>
   178e4:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   178eb:	e8 e0 13 00 00       	call   18cd0 <futex_down>
   178f0:	8b 43 04             	mov    0x4(%ebx),%eax
   178f3:	85 c0                	test   %eax,%eax
   178f5:	74 21                	je     17918 <fibril_rwlock_is_locked+0x78>
   178f7:	48                   	dec    %eax
   178f8:	74 c3                	je     178bd <fibril_rwlock_is_locked+0x1d>
   178fa:	c7 44 24 08 58 01 00 	movl   $0x158,0x8(%esp)
   17901:	00 
   17902:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   17909:	00 
   1790a:	c7 04 24 7a db 02 00 	movl   $0x2db7a,(%esp)
   17911:	e8 9a 2f 01 00       	call   2a8b0 <assert_abort>
   17916:	66 90                	xchg   %ax,%ax
   17918:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   1791f:	e8 0c 14 00 00       	call   18d30 <futex_up>
   17924:	31 c0                	xor    %eax,%eax
   17926:	eb a3                	jmp    178cb <fibril_rwlock_is_locked+0x2b>
   17928:	90                   	nop
   17929:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00017930 <fibril_condvar_initialize>:
   17930:	55                   	push   %ebp
   17931:	89 e5                	mov    %esp,%ebp
   17933:	8b 45 08             	mov    0x8(%ebp),%eax
   17936:	89 00                	mov    %eax,(%eax)
   17938:	89 40 04             	mov    %eax,0x4(%eax)
   1793b:	5d                   	pop    %ebp
   1793c:	c3                   	ret    
   1793d:	8d 76 00             	lea    0x0(%esi),%esi

00017940 <fibril_condvar_wait_timeout>:
   17940:	55                   	push   %ebp
   17941:	89 e5                	mov    %esp,%ebp
   17943:	57                   	push   %edi
   17944:	56                   	push   %esi
   17945:	53                   	push   %ebx
   17946:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
   1794c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   1794f:	8b 75 08             	mov    0x8(%ebp),%esi
   17952:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17959:	e8 72 13 00 00       	call   18cd0 <futex_down>
   1795e:	8b 53 04             	mov    0x4(%ebx),%edx
   17961:	85 d2                	test   %edx,%edx
   17963:	7e 2b                	jle    17990 <fibril_condvar_wait_timeout+0x50>
   17965:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   1796c:	e8 bf 13 00 00       	call   18d30 <futex_up>
   17971:	c7 44 24 08 71 01 00 	movl   $0x171,0x8(%esp)
   17978:	00 
   17979:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   17980:	00 
   17981:	c7 04 24 5f db 02 00 	movl   $0x2db5f,(%esp)
   17988:	e8 23 2f 01 00       	call   2a8b0 <assert_abort>
   1798d:	8d 76 00             	lea    0x0(%esi),%esi
   17990:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17997:	e8 94 13 00 00       	call   18d30 <futex_up>
   1799c:	8b 45 10             	mov    0x10(%ebp),%eax
   1799f:	85 c0                	test   %eax,%eax
   179a1:	0f 88 21 01 00 00    	js     17ac8 <fibril_condvar_wait_timeout+0x188>
   179a7:	8d 7d 90             	lea    -0x70(%ebp),%edi
   179aa:	89 3c 24             	mov    %edi,(%esp)
   179ad:	e8 3e 99 00 00       	call   212f0 <awaiter_initialize>
   179b2:	e8 79 f6 ff ff       	call   17030 <fibril_get_id>
   179b7:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   179be:	89 45 90             	mov    %eax,-0x70(%ebp)
   179c1:	8b 45 10             	mov    0x10(%ebp),%eax
   179c4:	85 c0                	test   %eax,%eax
   179c6:	c6 45 b0 01          	movb   $0x1,-0x50(%ebp)
   179ca:	0f 9f 45 98          	setg   -0x68(%ebp)
   179ce:	e8 fd 12 00 00       	call   18cd0 <futex_down>
   179d3:	8b 45 10             	mov    0x10(%ebp),%eax
   179d6:	85 c0                	test   %eax,%eax
   179d8:	0f 85 fa 00 00 00    	jne    17ad8 <fibril_condvar_wait_timeout+0x198>
   179de:	8b 16                	mov    (%esi),%edx
   179e0:	8d 45 b4             	lea    -0x4c(%ebp),%eax
   179e3:	89 06                	mov    %eax,(%esi)
   179e5:	89 75 b8             	mov    %esi,-0x48(%ebp)
   179e8:	89 42 04             	mov    %eax,0x4(%edx)
   179eb:	8b 43 04             	mov    0x4(%ebx),%eax
   179ee:	89 55 b4             	mov    %edx,-0x4c(%ebp)
   179f1:	85 c0                	test   %eax,%eax
   179f3:	8d 50 01             	lea    0x1(%eax),%edx
   179f6:	89 53 04             	mov    %edx,0x4(%ebx)
   179f9:	0f 88 09 01 00 00    	js     17b08 <fibril_condvar_wait_timeout+0x1c8>
   179ff:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   17a05:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   17a0c:	e8 df f0 ff ff       	call   16af0 <fibril_switch>
   17a11:	e8 1a f6 ff ff       	call   17030 <fibril_get_id>
   17a16:	89 45 84             	mov    %eax,-0x7c(%ebp)
   17a19:	e8 62 f6 ff ff       	call   17080 <fibril_get_sercount>
   17a1e:	85 c0                	test   %eax,%eax
   17a20:	0f 85 b8 01 00 00    	jne    17bde <fibril_condvar_wait_timeout+0x29e>
   17a26:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17a2d:	e8 9e 12 00 00       	call   18cd0 <futex_down>
   17a32:	8b 43 04             	mov    0x4(%ebx),%eax
   17a35:	8d 50 ff             	lea    -0x1(%eax),%edx
   17a38:	85 c0                	test   %eax,%eax
   17a3a:	89 53 04             	mov    %edx,0x4(%ebx)
   17a3d:	0f 8e 35 01 00 00    	jle    17b78 <fibril_condvar_wait_timeout+0x238>
   17a43:	8b 45 84             	mov    -0x7c(%ebp),%eax
   17a46:	89 03                	mov    %eax,(%ebx)
   17a48:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17a4f:	e8 dc 12 00 00       	call   18d30 <futex_up>
   17a54:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17a5b:	e8 70 12 00 00       	call   18cd0 <futex_down>
   17a60:	80 7d 98 00          	cmpb   $0x0,-0x68(%ebp)
   17a64:	74 24                	je     17a8a <fibril_condvar_wait_timeout+0x14a>
   17a66:	8b 55 9c             	mov    -0x64(%ebp),%edx
   17a69:	85 d2                	test   %edx,%edx
   17a6b:	74 0f                	je     17a7c <fibril_condvar_wait_timeout+0x13c>
   17a6d:	8b 45 a0             	mov    -0x60(%ebp),%eax
   17a70:	85 c0                	test   %eax,%eax
   17a72:	74 08                	je     17a7c <fibril_condvar_wait_timeout+0x13c>
   17a74:	89 10                	mov    %edx,(%eax)
   17a76:	8b 55 9c             	mov    -0x64(%ebp),%edx
   17a79:	89 42 04             	mov    %eax,0x4(%edx)
   17a7c:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%ebp)
   17a83:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%ebp)
   17a8a:	80 7d b0 00          	cmpb   $0x0,-0x50(%ebp)
   17a8e:	74 24                	je     17ab4 <fibril_condvar_wait_timeout+0x174>
   17a90:	8b 55 b4             	mov    -0x4c(%ebp),%edx
   17a93:	85 d2                	test   %edx,%edx
   17a95:	74 0f                	je     17aa6 <fibril_condvar_wait_timeout+0x166>
   17a97:	8b 45 b8             	mov    -0x48(%ebp),%eax
   17a9a:	85 c0                	test   %eax,%eax
   17a9c:	74 08                	je     17aa6 <fibril_condvar_wait_timeout+0x166>
   17a9e:	89 10                	mov    %edx,(%eax)
   17aa0:	8b 55 b4             	mov    -0x4c(%ebp),%edx
   17aa3:	89 42 04             	mov    %eax,0x4(%edx)
   17aa6:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
   17aad:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
   17ab4:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17abb:	e8 70 12 00 00       	call   18d30 <futex_up>
   17ac0:	31 c0                	xor    %eax,%eax
   17ac2:	80 7d a4 00          	cmpb   $0x0,-0x5c(%ebp)
   17ac6:	74 05                	je     17acd <fibril_condvar_wait_timeout+0x18d>
   17ac8:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   17acd:	81 c4 8c 00 00 00    	add    $0x8c,%esp
   17ad3:	5b                   	pop    %ebx
   17ad4:	5e                   	pop    %esi
   17ad5:	5f                   	pop    %edi
   17ad6:	5d                   	pop    %ebp
   17ad7:	c3                   	ret    
   17ad8:	8d 55 a8             	lea    -0x58(%ebp),%edx
   17adb:	89 14 24             	mov    %edx,(%esp)
   17ade:	89 55 80             	mov    %edx,-0x80(%ebp)
   17ae1:	e8 7a f6 00 00       	call   27160 <getuptime>
   17ae6:	8b 45 10             	mov    0x10(%ebp),%eax
   17ae9:	8b 55 80             	mov    -0x80(%ebp),%edx
   17aec:	89 44 24 04          	mov    %eax,0x4(%esp)
   17af0:	89 14 24             	mov    %edx,(%esp)
   17af3:	e8 68 f5 00 00       	call   27060 <tv_add>
   17af8:	89 3c 24             	mov    %edi,(%esp)
   17afb:	e8 10 99 00 00       	call   21410 <async_insert_timeout>
   17b00:	e9 d9 fe ff ff       	jmp    179de <fibril_condvar_wait_timeout+0x9e>
   17b05:	8d 76 00             	lea    0x0(%esi),%esi
   17b08:	8b 53 0c             	mov    0xc(%ebx),%edx
   17b0b:	8d 43 08             	lea    0x8(%ebx),%eax
   17b0e:	39 c2                	cmp    %eax,%edx
   17b10:	0f 84 cd 00 00 00    	je     17be3 <fibril_condvar_wait_timeout+0x2a3>
   17b16:	85 d2                	test   %edx,%edx
   17b18:	0f 84 c5 00 00 00    	je     17be3 <fibril_condvar_wait_timeout+0x2a3>
   17b1e:	8d 42 dc             	lea    -0x24(%edx),%eax
   17b21:	8b 52 dc             	mov    -0x24(%edx),%edx
   17b24:	8b 70 24             	mov    0x24(%eax),%esi
   17b27:	c6 40 04 01          	movb   $0x1,0x4(%eax)
   17b2b:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   17b2f:	85 f6                	test   %esi,%esi
   17b31:	89 13                	mov    %edx,(%ebx)
   17b33:	c7 42 40 00 00 00 00 	movl   $0x0,0x40(%edx)
   17b3a:	74 0f                	je     17b4b <fibril_condvar_wait_timeout+0x20b>
   17b3c:	8b 48 28             	mov    0x28(%eax),%ecx
   17b3f:	85 c9                	test   %ecx,%ecx
   17b41:	74 08                	je     17b4b <fibril_condvar_wait_timeout+0x20b>
   17b43:	89 31                	mov    %esi,(%ecx)
   17b45:	8b 70 24             	mov    0x24(%eax),%esi
   17b48:	89 4e 04             	mov    %ecx,0x4(%esi)
   17b4b:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   17b52:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   17b59:	89 14 24             	mov    %edx,(%esp)
   17b5c:	e8 bf f3 ff ff       	call   16f20 <fibril_add_ready>
   17b61:	a1 d0 06 03 00       	mov    0x306d0,%eax
   17b66:	85 c0                	test   %eax,%eax
   17b68:	0f 84 97 fe ff ff    	je     17a05 <fibril_condvar_wait_timeout+0xc5>
   17b6e:	e8 8d ba 00 00       	call   23600 <async_poke>
   17b73:	e9 8d fe ff ff       	jmp    17a05 <fibril_condvar_wait_timeout+0xc5>
   17b78:	8d 45 bc             	lea    -0x44(%ebp),%eax
   17b7b:	89 de                	mov    %ebx,%esi
   17b7d:	89 04 24             	mov    %eax,(%esp)
   17b80:	e8 6b 97 00 00       	call   212f0 <awaiter_initialize>
   17b85:	e8 a6 f4 ff ff       	call   17030 <fibril_get_id>
   17b8a:	8b 53 08             	mov    0x8(%ebx),%edx
   17b8d:	89 45 bc             	mov    %eax,-0x44(%ebp)
   17b90:	8d 43 08             	lea    0x8(%ebx),%eax
   17b93:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   17b96:	8d 45 e0             	lea    -0x20(%ebp),%eax
   17b99:	c6 45 dc 01          	movb   $0x1,-0x24(%ebp)
   17b9d:	89 55 e0             	mov    %edx,-0x20(%ebp)
   17ba0:	89 42 04             	mov    %eax,0x4(%edx)
   17ba3:	89 43 08             	mov    %eax,0x8(%ebx)
   17ba6:	66 90                	xchg   %ax,%ax
   17ba8:	8b 3e                	mov    (%esi),%edi
   17baa:	85 ff                	test   %edi,%edi
   17bac:	74 12                	je     17bc0 <fibril_condvar_wait_timeout+0x280>
   17bae:	e8 7d f4 ff ff       	call   17030 <fibril_get_id>
   17bb3:	39 c7                	cmp    %eax,%edi
   17bb5:	74 20                	je     17bd7 <fibril_condvar_wait_timeout+0x297>
   17bb7:	8b 06                	mov    (%esi),%eax
   17bb9:	8b 70 40             	mov    0x40(%eax),%esi
   17bbc:	85 f6                	test   %esi,%esi
   17bbe:	75 e8                	jne    17ba8 <fibril_condvar_wait_timeout+0x268>
   17bc0:	8b 45 84             	mov    -0x7c(%ebp),%eax
   17bc3:	89 58 40             	mov    %ebx,0x40(%eax)
   17bc6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   17bcd:	e8 1e ef ff ff       	call   16af0 <fibril_switch>
   17bd2:	e9 7d fe ff ff       	jmp    17a54 <fibril_condvar_wait_timeout+0x114>
   17bd7:	89 f0                	mov    %esi,%eax
   17bd9:	e8 b2 f4 ff ff       	call   17090 <print_deadlock>
   17bde:	e8 ad 85 ff ff       	call   10190 <abort>
   17be3:	c7 44 24 08 96 00 00 	movl   $0x96,0x8(%esp)
   17bea:	00 
   17beb:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   17bf2:	00 
   17bf3:	c7 04 24 53 db 02 00 	movl   $0x2db53,(%esp)
   17bfa:	e8 b1 2c 01 00       	call   2a8b0 <assert_abort>
   17bff:	90                   	nop

00017c00 <fibril_timer_func>:
   17c00:	55                   	push   %ebp
   17c01:	89 e5                	mov    %esp,%ebp
   17c03:	57                   	push   %edi
   17c04:	56                   	push   %esi
   17c05:	53                   	push   %ebx
   17c06:	83 ec 5c             	sub    $0x5c,%esp
   17c09:	8b 5d 08             	mov    0x8(%ebp),%ebx
   17c0c:	e8 1f f4 ff ff       	call   17030 <fibril_get_id>
   17c11:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   17c14:	e8 67 f4 ff ff       	call   17080 <fibril_get_sercount>
   17c19:	85 c0                	test   %eax,%eax
   17c1b:	0f 85 c9 02 00 00    	jne    17eea <fibril_timer_func+0x2ea>
   17c21:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17c28:	e8 a3 10 00 00       	call   18cd0 <futex_down>
   17c2d:	8b 43 04             	mov    0x4(%ebx),%eax
   17c30:	8d 50 ff             	lea    -0x1(%eax),%edx
   17c33:	85 c0                	test   %eax,%eax
   17c35:	89 53 04             	mov    %edx,0x4(%ebx)
   17c38:	0f 8e 3a 02 00 00    	jle    17e78 <fibril_timer_func+0x278>
   17c3e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   17c41:	89 03                	mov    %eax,(%ebx)
   17c43:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17c4a:	e8 e1 10 00 00       	call   18d30 <futex_up>
   17c4f:	8d 73 10             	lea    0x10(%ebx),%esi
   17c52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   17c58:	8b 43 1c             	mov    0x1c(%ebx),%eax
   17c5b:	89 c2                	mov    %eax,%edx
   17c5d:	83 e2 fd             	and    $0xfffffffd,%edx
   17c60:	4a                   	dec    %edx
   17c61:	74 35                	je     17c98 <fibril_timer_func+0x98>
   17c63:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   17c6a:	00 
   17c6b:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   17c6f:	89 34 24             	mov    %esi,(%esp)
   17c72:	e8 c9 fc ff ff       	call   17940 <fibril_condvar_wait_timeout>
   17c77:	85 c0                	test   %eax,%eax
   17c79:	74 dd                	je     17c58 <fibril_timer_func+0x58>
   17c7b:	c7 44 24 08 96 01 00 	movl   $0x196,0x8(%esp)
   17c82:	00 
   17c83:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   17c8a:	00 
   17c8b:	c7 04 24 8c db 02 00 	movl   $0x2db8c,(%esp)
   17c92:	e8 19 2c 01 00       	call   2a8b0 <assert_abort>
   17c97:	90                   	nop
   17c98:	83 f8 03             	cmp    $0x3,%eax
   17c9b:	74 5b                	je     17cf8 <fibril_timer_func+0xf8>
   17c9d:	8b 43 20             	mov    0x20(%ebx),%eax
   17ca0:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   17ca4:	89 44 24 08          	mov    %eax,0x8(%esp)
   17ca8:	89 34 24             	mov    %esi,(%esp)
   17cab:	e8 90 fc ff ff       	call   17940 <fibril_condvar_wait_timeout>
   17cb0:	83 f8 f3             	cmp    $0xfffffff3,%eax
   17cb3:	75 a3                	jne    17c58 <fibril_timer_func+0x58>
   17cb5:	c7 43 1c 02 00 00 00 	movl   $0x2,0x1c(%ebx)
   17cbc:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17cc3:	e8 08 10 00 00       	call   18cd0 <futex_down>
   17cc8:	8b 4b 04             	mov    0x4(%ebx),%ecx
   17ccb:	85 c9                	test   %ecx,%ecx
   17ccd:	7e 41                	jle    17d10 <fibril_timer_func+0x110>
   17ccf:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17cd6:	e8 55 10 00 00       	call   18d30 <futex_up>
   17cdb:	c7 44 24 08 a9 00 00 	movl   $0xa9,0x8(%esp)
   17ce2:	00 
   17ce3:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   17cea:	00 
   17ceb:	c7 04 24 5f db 02 00 	movl   $0x2db5f,(%esp)
   17cf2:	e8 b9 2b 01 00       	call   2a8b0 <assert_abort>
   17cf7:	90                   	nop
   17cf8:	89 1c 24             	mov    %ebx,(%esp)
   17cfb:	e8 e0 f6 ff ff       	call   173e0 <fibril_mutex_unlock>
   17d00:	83 c4 5c             	add    $0x5c,%esp
   17d03:	31 c0                	xor    %eax,%eax
   17d05:	5b                   	pop    %ebx
   17d06:	5e                   	pop    %esi
   17d07:	5f                   	pop    %edi
   17d08:	5d                   	pop    %ebp
   17d09:	c3                   	ret    
   17d0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   17d10:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17d17:	e8 14 10 00 00       	call   18d30 <futex_up>
   17d1c:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17d23:	e8 a8 0f 00 00       	call   18cd0 <futex_down>
   17d28:	8b 43 04             	mov    0x4(%ebx),%eax
   17d2b:	8d 50 01             	lea    0x1(%eax),%edx
   17d2e:	85 c0                	test   %eax,%eax
   17d30:	89 53 04             	mov    %edx,0x4(%ebx)
   17d33:	78 63                	js     17d98 <fibril_timer_func+0x198>
   17d35:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   17d3b:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17d42:	e8 e9 0f 00 00       	call   18d30 <futex_up>
   17d47:	8b 43 28             	mov    0x28(%ebx),%eax
   17d4a:	89 04 24             	mov    %eax,(%esp)
   17d4d:	ff 53 24             	call   *0x24(%ebx)
   17d50:	e8 db f2 ff ff       	call   17030 <fibril_get_id>
   17d55:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   17d58:	e8 23 f3 ff ff       	call   17080 <fibril_get_sercount>
   17d5d:	85 c0                	test   %eax,%eax
   17d5f:	0f 85 85 01 00 00    	jne    17eea <fibril_timer_func+0x2ea>
   17d65:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17d6c:	e8 5f 0f 00 00       	call   18cd0 <futex_down>
   17d71:	8b 43 04             	mov    0x4(%ebx),%eax
   17d74:	8d 50 ff             	lea    -0x1(%eax),%edx
   17d77:	85 c0                	test   %eax,%eax
   17d79:	89 53 04             	mov    %edx,0x4(%ebx)
   17d7c:	0f 8e 86 00 00 00    	jle    17e08 <fibril_timer_func+0x208>
   17d82:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   17d85:	89 03                	mov    %eax,(%ebx)
   17d87:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17d8e:	e8 9d 0f 00 00       	call   18d30 <futex_up>
   17d93:	e9 c0 fe ff ff       	jmp    17c58 <fibril_timer_func+0x58>
   17d98:	8b 53 0c             	mov    0xc(%ebx),%edx
   17d9b:	8d 43 08             	lea    0x8(%ebx),%eax
   17d9e:	39 c2                	cmp    %eax,%edx
   17da0:	0f 84 49 01 00 00    	je     17eef <fibril_timer_func+0x2ef>
   17da6:	85 d2                	test   %edx,%edx
   17da8:	0f 84 41 01 00 00    	je     17eef <fibril_timer_func+0x2ef>
   17dae:	8d 42 dc             	lea    -0x24(%edx),%eax
   17db1:	8b 52 dc             	mov    -0x24(%edx),%edx
   17db4:	8b 78 24             	mov    0x24(%eax),%edi
   17db7:	c6 40 04 01          	movb   $0x1,0x4(%eax)
   17dbb:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   17dbf:	85 ff                	test   %edi,%edi
   17dc1:	89 13                	mov    %edx,(%ebx)
   17dc3:	c7 42 40 00 00 00 00 	movl   $0x0,0x40(%edx)
   17dca:	74 0f                	je     17ddb <fibril_timer_func+0x1db>
   17dcc:	8b 48 28             	mov    0x28(%eax),%ecx
   17dcf:	85 c9                	test   %ecx,%ecx
   17dd1:	74 08                	je     17ddb <fibril_timer_func+0x1db>
   17dd3:	89 39                	mov    %edi,(%ecx)
   17dd5:	8b 78 24             	mov    0x24(%eax),%edi
   17dd8:	89 4f 04             	mov    %ecx,0x4(%edi)
   17ddb:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   17de2:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   17de9:	89 14 24             	mov    %edx,(%esp)
   17dec:	e8 2f f1 ff ff       	call   16f20 <fibril_add_ready>
   17df1:	a1 d0 06 03 00       	mov    0x306d0,%eax
   17df6:	85 c0                	test   %eax,%eax
   17df8:	0f 84 3d ff ff ff    	je     17d3b <fibril_timer_func+0x13b>
   17dfe:	e8 fd b7 00 00       	call   23600 <async_poke>
   17e03:	e9 33 ff ff ff       	jmp    17d3b <fibril_timer_func+0x13b>
   17e08:	8d 45 bc             	lea    -0x44(%ebp),%eax
   17e0b:	89 df                	mov    %ebx,%edi
   17e0d:	89 04 24             	mov    %eax,(%esp)
   17e10:	e8 db 94 00 00       	call   212f0 <awaiter_initialize>
   17e15:	e8 16 f2 ff ff       	call   17030 <fibril_get_id>
   17e1a:	8b 53 08             	mov    0x8(%ebx),%edx
   17e1d:	89 45 bc             	mov    %eax,-0x44(%ebp)
   17e20:	8d 43 08             	lea    0x8(%ebx),%eax
   17e23:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   17e26:	8d 45 e0             	lea    -0x20(%ebp),%eax
   17e29:	c6 45 dc 01          	movb   $0x1,-0x24(%ebp)
   17e2d:	89 55 e0             	mov    %edx,-0x20(%ebp)
   17e30:	89 42 04             	mov    %eax,0x4(%edx)
   17e33:	89 43 08             	mov    %eax,0x8(%ebx)
   17e36:	66 90                	xchg   %ax,%ax
   17e38:	8b 0f                	mov    (%edi),%ecx
   17e3a:	85 c9                	test   %ecx,%ecx
   17e3c:	74 1c                	je     17e5a <fibril_timer_func+0x25a>
   17e3e:	89 4d b0             	mov    %ecx,-0x50(%ebp)
   17e41:	e8 ea f1 ff ff       	call   17030 <fibril_get_id>
   17e46:	8b 4d b0             	mov    -0x50(%ebp),%ecx
   17e49:	39 c1                	cmp    %eax,%ecx
   17e4b:	0f 84 86 00 00 00    	je     17ed7 <fibril_timer_func+0x2d7>
   17e51:	8b 07                	mov    (%edi),%eax
   17e53:	8b 78 40             	mov    0x40(%eax),%edi
   17e56:	85 ff                	test   %edi,%edi
   17e58:	75 de                	jne    17e38 <fibril_timer_func+0x238>
   17e5a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   17e5d:	89 58 40             	mov    %ebx,0x40(%eax)
   17e60:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   17e67:	e8 84 ec ff ff       	call   16af0 <fibril_switch>
   17e6c:	e9 e7 fd ff ff       	jmp    17c58 <fibril_timer_func+0x58>
   17e71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17e78:	8d 45 bc             	lea    -0x44(%ebp),%eax
   17e7b:	89 de                	mov    %ebx,%esi
   17e7d:	89 04 24             	mov    %eax,(%esp)
   17e80:	e8 6b 94 00 00       	call   212f0 <awaiter_initialize>
   17e85:	e8 a6 f1 ff ff       	call   17030 <fibril_get_id>
   17e8a:	8b 53 08             	mov    0x8(%ebx),%edx
   17e8d:	89 45 bc             	mov    %eax,-0x44(%ebp)
   17e90:	8d 43 08             	lea    0x8(%ebx),%eax
   17e93:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   17e96:	8d 45 e0             	lea    -0x20(%ebp),%eax
   17e99:	c6 45 dc 01          	movb   $0x1,-0x24(%ebp)
   17e9d:	89 55 e0             	mov    %edx,-0x20(%ebp)
   17ea0:	89 42 04             	mov    %eax,0x4(%edx)
   17ea3:	89 43 08             	mov    %eax,0x8(%ebx)
   17ea6:	66 90                	xchg   %ax,%ax
   17ea8:	8b 3e                	mov    (%esi),%edi
   17eaa:	85 ff                	test   %edi,%edi
   17eac:	74 12                	je     17ec0 <fibril_timer_func+0x2c0>
   17eae:	e8 7d f1 ff ff       	call   17030 <fibril_get_id>
   17eb3:	39 c7                	cmp    %eax,%edi
   17eb5:	74 2c                	je     17ee3 <fibril_timer_func+0x2e3>
   17eb7:	8b 06                	mov    (%esi),%eax
   17eb9:	8b 70 40             	mov    0x40(%eax),%esi
   17ebc:	85 f6                	test   %esi,%esi
   17ebe:	75 e8                	jne    17ea8 <fibril_timer_func+0x2a8>
   17ec0:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   17ec3:	89 58 40             	mov    %ebx,0x40(%eax)
   17ec6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   17ecd:	e8 1e ec ff ff       	call   16af0 <fibril_switch>
   17ed2:	e9 78 fd ff ff       	jmp    17c4f <fibril_timer_func+0x4f>
   17ed7:	89 f8                	mov    %edi,%eax
   17ed9:	e8 b2 f1 ff ff       	call   17090 <print_deadlock>
   17ede:	e8 ad 82 ff ff       	call   10190 <abort>
   17ee3:	89 f0                	mov    %esi,%eax
   17ee5:	e8 a6 f1 ff ff       	call   17090 <print_deadlock>
   17eea:	e8 a1 82 ff ff       	call   10190 <abort>
   17eef:	c7 44 24 08 96 00 00 	movl   $0x96,0x8(%esp)
   17ef6:	00 
   17ef7:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   17efe:	00 
   17eff:	c7 04 24 53 db 02 00 	movl   $0x2db53,(%esp)
   17f06:	e8 a5 29 01 00       	call   2a8b0 <assert_abort>
   17f0b:	90                   	nop
   17f0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00017f10 <fibril_condvar_wait>:
   17f10:	55                   	push   %ebp
   17f11:	89 e5                	mov    %esp,%ebp
   17f13:	83 ec 18             	sub    $0x18,%esp
   17f16:	8b 45 0c             	mov    0xc(%ebp),%eax
   17f19:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   17f20:	00 
   17f21:	89 44 24 04          	mov    %eax,0x4(%esp)
   17f25:	8b 45 08             	mov    0x8(%ebp),%eax
   17f28:	89 04 24             	mov    %eax,(%esp)
   17f2b:	e8 10 fa ff ff       	call   17940 <fibril_condvar_wait_timeout>
   17f30:	85 c0                	test   %eax,%eax
   17f32:	75 02                	jne    17f36 <fibril_condvar_wait+0x26>
   17f34:	c9                   	leave  
   17f35:	c3                   	ret    
   17f36:	c7 44 24 08 96 01 00 	movl   $0x196,0x8(%esp)
   17f3d:	00 
   17f3e:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   17f45:	00 
   17f46:	c7 04 24 8c db 02 00 	movl   $0x2db8c,(%esp)
   17f4d:	e8 5e 29 01 00       	call   2a8b0 <assert_abort>
   17f52:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   17f59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00017f60 <fibril_condvar_signal>:
   17f60:	55                   	push   %ebp
   17f61:	89 e5                	mov    %esp,%ebp
   17f63:	53                   	push   %ebx
   17f64:	83 ec 14             	sub    $0x14,%esp
   17f67:	8b 5d 08             	mov    0x8(%ebp),%ebx
   17f6a:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17f71:	e8 5a 0d 00 00       	call   18cd0 <futex_down>
   17f76:	66 90                	xchg   %ax,%ax
   17f78:	8b 43 04             	mov    0x4(%ebx),%eax
   17f7b:	39 d8                	cmp    %ebx,%eax
   17f7d:	74 48                	je     17fc7 <fibril_condvar_signal+0x67>
   17f7f:	83 e8 24             	sub    $0x24,%eax
   17f82:	8b 48 24             	mov    0x24(%eax),%ecx
   17f85:	85 c9                	test   %ecx,%ecx
   17f87:	74 0f                	je     17f98 <fibril_condvar_signal+0x38>
   17f89:	8b 50 28             	mov    0x28(%eax),%edx
   17f8c:	85 d2                	test   %edx,%edx
   17f8e:	74 08                	je     17f98 <fibril_condvar_signal+0x38>
   17f90:	89 0a                	mov    %ecx,(%edx)
   17f92:	8b 48 24             	mov    0x24(%eax),%ecx
   17f95:	89 51 04             	mov    %edx,0x4(%ecx)
   17f98:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   17f9f:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   17fa6:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   17faa:	80 78 04 00          	cmpb   $0x0,0x4(%eax)
   17fae:	75 c8                	jne    17f78 <fibril_condvar_signal+0x18>
   17fb0:	c6 40 04 01          	movb   $0x1,0x4(%eax)
   17fb4:	8b 00                	mov    (%eax),%eax
   17fb6:	89 04 24             	mov    %eax,(%esp)
   17fb9:	e8 62 ef ff ff       	call   16f20 <fibril_add_ready>
   17fbe:	a1 d0 06 03 00       	mov    0x306d0,%eax
   17fc3:	85 c0                	test   %eax,%eax
   17fc5:	75 11                	jne    17fd8 <fibril_condvar_signal+0x78>
   17fc7:	c7 45 08 cc 05 03 00 	movl   $0x305cc,0x8(%ebp)
   17fce:	83 c4 14             	add    $0x14,%esp
   17fd1:	5b                   	pop    %ebx
   17fd2:	5d                   	pop    %ebp
   17fd3:	e9 58 0d 00 00       	jmp    18d30 <futex_up>
   17fd8:	e8 23 b6 00 00       	call   23600 <async_poke>
   17fdd:	eb e8                	jmp    17fc7 <fibril_condvar_signal+0x67>
   17fdf:	90                   	nop

00017fe0 <fibril_condvar_broadcast>:
   17fe0:	55                   	push   %ebp
   17fe1:	89 e5                	mov    %esp,%ebp
   17fe3:	56                   	push   %esi
   17fe4:	53                   	push   %ebx
   17fe5:	83 ec 10             	sub    $0x10,%esp
   17fe8:	8b 75 08             	mov    0x8(%ebp),%esi
   17feb:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   17ff2:	e8 d9 0c 00 00       	call   18cd0 <futex_down>
   17ff7:	90                   	nop
   17ff8:	8b 56 04             	mov    0x4(%esi),%edx
   17ffb:	39 f2                	cmp    %esi,%edx
   17ffd:	74 59                	je     18058 <fibril_condvar_broadcast+0x78>
   17fff:	8d 42 dc             	lea    -0x24(%edx),%eax
   18002:	8b 58 24             	mov    0x24(%eax),%ebx
   18005:	85 db                	test   %ebx,%ebx
   18007:	74 0f                	je     18018 <fibril_condvar_broadcast+0x38>
   18009:	8b 48 28             	mov    0x28(%eax),%ecx
   1800c:	85 c9                	test   %ecx,%ecx
   1800e:	74 08                	je     18018 <fibril_condvar_broadcast+0x38>
   18010:	89 19                	mov    %ebx,(%ecx)
   18012:	8b 58 24             	mov    0x24(%eax),%ebx
   18015:	89 4b 04             	mov    %ecx,0x4(%ebx)
   18018:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   1801f:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   18026:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   1802a:	80 78 04 00          	cmpb   $0x0,0x4(%eax)
   1802e:	75 c8                	jne    17ff8 <fibril_condvar_broadcast+0x18>
   18030:	c6 40 04 01          	movb   $0x1,0x4(%eax)
   18034:	8b 42 dc             	mov    -0x24(%edx),%eax
   18037:	89 04 24             	mov    %eax,(%esp)
   1803a:	e8 e1 ee ff ff       	call   16f20 <fibril_add_ready>
   1803f:	a1 d0 06 03 00       	mov    0x306d0,%eax
   18044:	85 c0                	test   %eax,%eax
   18046:	74 b0                	je     17ff8 <fibril_condvar_broadcast+0x18>
   18048:	e8 b3 b5 00 00       	call   23600 <async_poke>
   1804d:	8b 56 04             	mov    0x4(%esi),%edx
   18050:	39 f2                	cmp    %esi,%edx
   18052:	75 ab                	jne    17fff <fibril_condvar_broadcast+0x1f>
   18054:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18058:	c7 45 08 cc 05 03 00 	movl   $0x305cc,0x8(%ebp)
   1805f:	83 c4 10             	add    $0x10,%esp
   18062:	5b                   	pop    %ebx
   18063:	5e                   	pop    %esi
   18064:	5d                   	pop    %ebp
   18065:	e9 c6 0c 00 00       	jmp    18d30 <futex_up>
   1806a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00018070 <fibril_timer_create>:
   18070:	55                   	push   %ebp
   18071:	89 e5                	mov    %esp,%ebp
   18073:	53                   	push   %ebx
   18074:	83 ec 14             	sub    $0x14,%esp
   18077:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)
   1807e:	00 
   1807f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   18086:	e8 e5 7f 00 00       	call   20070 <calloc>
   1808b:	89 c3                	mov    %eax,%ebx
   1808d:	85 c0                	test   %eax,%eax
   1808f:	74 45                	je     180d6 <fibril_timer_create+0x66>
   18091:	89 44 24 04          	mov    %eax,0x4(%esp)
   18095:	c7 04 24 00 7c 01 00 	movl   $0x17c00,(%esp)
   1809c:	e8 3f ed ff ff       	call   16de0 <fibril_create>
   180a1:	85 c0                	test   %eax,%eax
   180a3:	74 3b                	je     180e0 <fibril_timer_create+0x70>
   180a5:	8d 53 08             	lea    0x8(%ebx),%edx
   180a8:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   180ae:	89 53 08             	mov    %edx,0x8(%ebx)
   180b1:	89 53 0c             	mov    %edx,0xc(%ebx)
   180b4:	8d 53 10             	lea    0x10(%ebx),%edx
   180b7:	c7 43 04 01 00 00 00 	movl   $0x1,0x4(%ebx)
   180be:	89 53 10             	mov    %edx,0x10(%ebx)
   180c1:	89 53 14             	mov    %edx,0x14(%ebx)
   180c4:	89 43 18             	mov    %eax,0x18(%ebx)
   180c7:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   180ce:	89 04 24             	mov    %eax,(%esp)
   180d1:	e8 4a ee ff ff       	call   16f20 <fibril_add_ready>
   180d6:	83 c4 14             	add    $0x14,%esp
   180d9:	89 d8                	mov    %ebx,%eax
   180db:	5b                   	pop    %ebx
   180dc:	5d                   	pop    %ebp
   180dd:	c3                   	ret    
   180de:	66 90                	xchg   %ax,%ax
   180e0:	89 1c 24             	mov    %ebx,(%esp)
   180e3:	31 db                	xor    %ebx,%ebx
   180e5:	e8 f6 80 00 00       	call   201e0 <free>
   180ea:	eb ea                	jmp    180d6 <fibril_timer_create+0x66>
   180ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000180f0 <fibril_timer_destroy>:
   180f0:	55                   	push   %ebp
   180f1:	89 e5                	mov    %esp,%ebp
   180f3:	57                   	push   %edi
   180f4:	56                   	push   %esi
   180f5:	53                   	push   %ebx
   180f6:	83 ec 5c             	sub    $0x5c,%esp
   180f9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   180fc:	e8 2f ef ff ff       	call   17030 <fibril_get_id>
   18101:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   18104:	e8 77 ef ff ff       	call   17080 <fibril_get_sercount>
   18109:	85 c0                	test   %eax,%eax
   1810b:	0f 85 35 01 00 00    	jne    18246 <fibril_timer_destroy+0x156>
   18111:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   18118:	e8 b3 0b 00 00       	call   18cd0 <futex_down>
   1811d:	8b 43 04             	mov    0x4(%ebx),%eax
   18120:	8d 50 ff             	lea    -0x1(%eax),%edx
   18123:	85 c0                	test   %eax,%eax
   18125:	89 53 04             	mov    %edx,0x4(%ebx)
   18128:	0f 8e ae 00 00 00    	jle    181dc <fibril_timer_destroy+0xec>
   1812e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   18131:	89 03                	mov    %eax,(%ebx)
   18133:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   1813a:	e8 f1 0b 00 00       	call   18d30 <futex_up>
   1813f:	83 7b 1c 01          	cmpl   $0x1,0x1c(%ebx)
   18143:	0f 84 02 01 00 00    	je     1824b <fibril_timer_destroy+0x15b>
   18149:	c7 43 1c 03 00 00 00 	movl   $0x3,0x1c(%ebx)
   18150:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   18157:	8d 73 10             	lea    0x10(%ebx),%esi
   1815a:	e8 71 0b 00 00       	call   18cd0 <futex_down>
   1815f:	90                   	nop
   18160:	8b 56 04             	mov    0x4(%esi),%edx
   18163:	39 f2                	cmp    %esi,%edx
   18165:	74 59                	je     181c0 <fibril_timer_destroy+0xd0>
   18167:	8d 42 dc             	lea    -0x24(%edx),%eax
   1816a:	8b 78 24             	mov    0x24(%eax),%edi
   1816d:	85 ff                	test   %edi,%edi
   1816f:	74 0f                	je     18180 <fibril_timer_destroy+0x90>
   18171:	8b 48 28             	mov    0x28(%eax),%ecx
   18174:	85 c9                	test   %ecx,%ecx
   18176:	74 08                	je     18180 <fibril_timer_destroy+0x90>
   18178:	89 39                	mov    %edi,(%ecx)
   1817a:	8b 78 24             	mov    0x24(%eax),%edi
   1817d:	89 4f 04             	mov    %ecx,0x4(%edi)
   18180:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   18187:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   1818e:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   18192:	80 78 04 00          	cmpb   $0x0,0x4(%eax)
   18196:	75 c8                	jne    18160 <fibril_timer_destroy+0x70>
   18198:	c6 40 04 01          	movb   $0x1,0x4(%eax)
   1819c:	8b 42 dc             	mov    -0x24(%edx),%eax
   1819f:	89 04 24             	mov    %eax,(%esp)
   181a2:	e8 79 ed ff ff       	call   16f20 <fibril_add_ready>
   181a7:	a1 d0 06 03 00       	mov    0x306d0,%eax
   181ac:	85 c0                	test   %eax,%eax
   181ae:	74 b0                	je     18160 <fibril_timer_destroy+0x70>
   181b0:	e8 4b b4 00 00       	call   23600 <async_poke>
   181b5:	8b 56 04             	mov    0x4(%esi),%edx
   181b8:	39 f2                	cmp    %esi,%edx
   181ba:	75 ab                	jne    18167 <fibril_timer_destroy+0x77>
   181bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   181c0:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   181c7:	e8 64 0b 00 00       	call   18d30 <futex_up>
   181cc:	89 1c 24             	mov    %ebx,(%esp)
   181cf:	e8 0c f2 ff ff       	call   173e0 <fibril_mutex_unlock>
   181d4:	83 c4 5c             	add    $0x5c,%esp
   181d7:	5b                   	pop    %ebx
   181d8:	5e                   	pop    %esi
   181d9:	5f                   	pop    %edi
   181da:	5d                   	pop    %ebp
   181db:	c3                   	ret    
   181dc:	8d 45 bc             	lea    -0x44(%ebp),%eax
   181df:	89 de                	mov    %ebx,%esi
   181e1:	89 04 24             	mov    %eax,(%esp)
   181e4:	e8 07 91 00 00       	call   212f0 <awaiter_initialize>
   181e9:	e8 42 ee ff ff       	call   17030 <fibril_get_id>
   181ee:	8b 53 08             	mov    0x8(%ebx),%edx
   181f1:	89 45 bc             	mov    %eax,-0x44(%ebp)
   181f4:	8d 43 08             	lea    0x8(%ebx),%eax
   181f7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   181fa:	8d 45 e0             	lea    -0x20(%ebp),%eax
   181fd:	c6 45 dc 01          	movb   $0x1,-0x24(%ebp)
   18201:	89 55 e0             	mov    %edx,-0x20(%ebp)
   18204:	89 42 04             	mov    %eax,0x4(%edx)
   18207:	89 43 08             	mov    %eax,0x8(%ebx)
   1820a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   18210:	8b 3e                	mov    (%esi),%edi
   18212:	85 ff                	test   %edi,%edi
   18214:	74 12                	je     18228 <fibril_timer_destroy+0x138>
   18216:	e8 15 ee ff ff       	call   17030 <fibril_get_id>
   1821b:	39 c7                	cmp    %eax,%edi
   1821d:	74 20                	je     1823f <fibril_timer_destroy+0x14f>
   1821f:	8b 06                	mov    (%esi),%eax
   18221:	8b 70 40             	mov    0x40(%eax),%esi
   18224:	85 f6                	test   %esi,%esi
   18226:	75 e8                	jne    18210 <fibril_timer_destroy+0x120>
   18228:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   1822b:	89 58 40             	mov    %ebx,0x40(%eax)
   1822e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   18235:	e8 b6 e8 ff ff       	call   16af0 <fibril_switch>
   1823a:	e9 00 ff ff ff       	jmp    1813f <fibril_timer_destroy+0x4f>
   1823f:	89 f0                	mov    %esi,%eax
   18241:	e8 4a ee ff ff       	call   17090 <print_deadlock>
   18246:	e8 45 7f ff ff       	call   10190 <abort>
   1824b:	c7 44 24 08 04 02 00 	movl   $0x204,0x8(%esp)
   18252:	00 
   18253:	c7 44 24 04 3c db 02 	movl   $0x2db3c,0x4(%esp)
   1825a:	00 
   1825b:	c7 04 24 96 db 02 00 	movl   $0x2db96,(%esp)
   18262:	e8 49 26 01 00       	call   2a8b0 <assert_abort>
   18267:	89 f6                	mov    %esi,%esi
   18269:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018270 <fibril_timer_set>:
   18270:	55                   	push   %ebp
   18271:	89 e5                	mov    %esp,%ebp
   18273:	57                   	push   %edi
   18274:	56                   	push   %esi
   18275:	53                   	push   %ebx
   18276:	83 ec 5c             	sub    $0x5c,%esp
   18279:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1827c:	e8 af ed ff ff       	call   17030 <fibril_get_id>
   18281:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   18284:	e8 f7 ed ff ff       	call   17080 <fibril_get_sercount>
   18289:	85 c0                	test   %eax,%eax
   1828b:	0f 85 3d 01 00 00    	jne    183ce <fibril_timer_set+0x15e>
   18291:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   18298:	e8 33 0a 00 00       	call   18cd0 <futex_down>
   1829d:	8b 43 04             	mov    0x4(%ebx),%eax
   182a0:	8d 50 ff             	lea    -0x1(%eax),%edx
   182a3:	85 c0                	test   %eax,%eax
   182a5:	89 53 04             	mov    %edx,0x4(%ebx)
   182a8:	0f 8e b6 00 00 00    	jle    18364 <fibril_timer_set+0xf4>
   182ae:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   182b1:	89 03                	mov    %eax,(%ebx)
   182b3:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   182ba:	e8 71 0a 00 00       	call   18d30 <futex_up>
   182bf:	8b 45 0c             	mov    0xc(%ebp),%eax
   182c2:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   182c9:	89 43 20             	mov    %eax,0x20(%ebx)
   182cc:	8b 45 10             	mov    0x10(%ebp),%eax
   182cf:	89 43 24             	mov    %eax,0x24(%ebx)
   182d2:	8b 45 14             	mov    0x14(%ebp),%eax
   182d5:	89 43 28             	mov    %eax,0x28(%ebx)
   182d8:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   182df:	8d 73 10             	lea    0x10(%ebx),%esi
   182e2:	e8 e9 09 00 00       	call   18cd0 <futex_down>
   182e7:	90                   	nop
   182e8:	8b 56 04             	mov    0x4(%esi),%edx
   182eb:	39 f2                	cmp    %esi,%edx
   182ed:	74 59                	je     18348 <fibril_timer_set+0xd8>
   182ef:	8d 42 dc             	lea    -0x24(%edx),%eax
   182f2:	8b 78 24             	mov    0x24(%eax),%edi
   182f5:	85 ff                	test   %edi,%edi
   182f7:	74 0f                	je     18308 <fibril_timer_set+0x98>
   182f9:	8b 48 28             	mov    0x28(%eax),%ecx
   182fc:	85 c9                	test   %ecx,%ecx
   182fe:	74 08                	je     18308 <fibril_timer_set+0x98>
   18300:	89 39                	mov    %edi,(%ecx)
   18302:	8b 78 24             	mov    0x24(%eax),%edi
   18305:	89 4f 04             	mov    %ecx,0x4(%edi)
   18308:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   1830f:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   18316:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   1831a:	80 78 04 00          	cmpb   $0x0,0x4(%eax)
   1831e:	75 c8                	jne    182e8 <fibril_timer_set+0x78>
   18320:	c6 40 04 01          	movb   $0x1,0x4(%eax)
   18324:	8b 42 dc             	mov    -0x24(%edx),%eax
   18327:	89 04 24             	mov    %eax,(%esp)
   1832a:	e8 f1 eb ff ff       	call   16f20 <fibril_add_ready>
   1832f:	a1 d0 06 03 00       	mov    0x306d0,%eax
   18334:	85 c0                	test   %eax,%eax
   18336:	74 b0                	je     182e8 <fibril_timer_set+0x78>
   18338:	e8 c3 b2 00 00       	call   23600 <async_poke>
   1833d:	8b 56 04             	mov    0x4(%esi),%edx
   18340:	39 f2                	cmp    %esi,%edx
   18342:	75 ab                	jne    182ef <fibril_timer_set+0x7f>
   18344:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18348:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   1834f:	e8 dc 09 00 00       	call   18d30 <futex_up>
   18354:	89 1c 24             	mov    %ebx,(%esp)
   18357:	e8 84 f0 ff ff       	call   173e0 <fibril_mutex_unlock>
   1835c:	83 c4 5c             	add    $0x5c,%esp
   1835f:	5b                   	pop    %ebx
   18360:	5e                   	pop    %esi
   18361:	5f                   	pop    %edi
   18362:	5d                   	pop    %ebp
   18363:	c3                   	ret    
   18364:	8d 45 bc             	lea    -0x44(%ebp),%eax
   18367:	89 de                	mov    %ebx,%esi
   18369:	89 04 24             	mov    %eax,(%esp)
   1836c:	e8 7f 8f 00 00       	call   212f0 <awaiter_initialize>
   18371:	e8 ba ec ff ff       	call   17030 <fibril_get_id>
   18376:	8b 53 08             	mov    0x8(%ebx),%edx
   18379:	89 45 bc             	mov    %eax,-0x44(%ebp)
   1837c:	8d 43 08             	lea    0x8(%ebx),%eax
   1837f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   18382:	8d 45 e0             	lea    -0x20(%ebp),%eax
   18385:	c6 45 dc 01          	movb   $0x1,-0x24(%ebp)
   18389:	89 55 e0             	mov    %edx,-0x20(%ebp)
   1838c:	89 42 04             	mov    %eax,0x4(%edx)
   1838f:	89 43 08             	mov    %eax,0x8(%ebx)
   18392:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   18398:	8b 3e                	mov    (%esi),%edi
   1839a:	85 ff                	test   %edi,%edi
   1839c:	74 12                	je     183b0 <fibril_timer_set+0x140>
   1839e:	e8 8d ec ff ff       	call   17030 <fibril_get_id>
   183a3:	39 c7                	cmp    %eax,%edi
   183a5:	74 20                	je     183c7 <fibril_timer_set+0x157>
   183a7:	8b 06                	mov    (%esi),%eax
   183a9:	8b 70 40             	mov    0x40(%eax),%esi
   183ac:	85 f6                	test   %esi,%esi
   183ae:	75 e8                	jne    18398 <fibril_timer_set+0x128>
   183b0:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   183b3:	89 58 40             	mov    %ebx,0x40(%eax)
   183b6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   183bd:	e8 2e e7 ff ff       	call   16af0 <fibril_switch>
   183c2:	e9 f8 fe ff ff       	jmp    182bf <fibril_timer_set+0x4f>
   183c7:	89 f0                	mov    %esi,%eax
   183c9:	e8 c2 ec ff ff       	call   17090 <print_deadlock>
   183ce:	e8 bd 7d ff ff       	call   10190 <abort>
   183d3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   183d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000183e0 <fibril_timer_clear>:
   183e0:	55                   	push   %ebp
   183e1:	89 e5                	mov    %esp,%ebp
   183e3:	57                   	push   %edi
   183e4:	56                   	push   %esi
   183e5:	53                   	push   %ebx
   183e6:	83 ec 5c             	sub    $0x5c,%esp
   183e9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   183ec:	e8 3f ec ff ff       	call   17030 <fibril_get_id>
   183f1:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   183f4:	e8 87 ec ff ff       	call   17080 <fibril_get_sercount>
   183f9:	85 c0                	test   %eax,%eax
   183fb:	0f 85 45 01 00 00    	jne    18546 <fibril_timer_clear+0x166>
   18401:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   18408:	e8 c3 08 00 00       	call   18cd0 <futex_down>
   1840d:	8b 43 04             	mov    0x4(%ebx),%eax
   18410:	8d 50 ff             	lea    -0x1(%eax),%edx
   18413:	85 c0                	test   %eax,%eax
   18415:	89 53 04             	mov    %edx,0x4(%ebx)
   18418:	0f 8e c1 00 00 00    	jle    184df <fibril_timer_clear+0xff>
   1841e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   18421:	89 03                	mov    %eax,(%ebx)
   18423:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   1842a:	e8 01 09 00 00       	call   18d30 <futex_up>
   1842f:	8b 43 1c             	mov    0x1c(%ebx),%eax
   18432:	c7 43 20 00 00 00 00 	movl   $0x0,0x20(%ebx)
   18439:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   18440:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
   18447:	c7 43 28 00 00 00 00 	movl   $0x0,0x28(%ebx)
   1844e:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   18455:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   18458:	8d 73 10             	lea    0x10(%ebx),%esi
   1845b:	e8 70 08 00 00       	call   18cd0 <futex_down>
   18460:	8b 56 04             	mov    0x4(%esi),%edx
   18463:	39 f2                	cmp    %esi,%edx
   18465:	74 59                	je     184c0 <fibril_timer_clear+0xe0>
   18467:	8d 42 dc             	lea    -0x24(%edx),%eax
   1846a:	8b 78 24             	mov    0x24(%eax),%edi
   1846d:	85 ff                	test   %edi,%edi
   1846f:	74 0f                	je     18480 <fibril_timer_clear+0xa0>
   18471:	8b 48 28             	mov    0x28(%eax),%ecx
   18474:	85 c9                	test   %ecx,%ecx
   18476:	74 08                	je     18480 <fibril_timer_clear+0xa0>
   18478:	89 39                	mov    %edi,(%ecx)
   1847a:	8b 78 24             	mov    0x24(%eax),%edi
   1847d:	89 4f 04             	mov    %ecx,0x4(%edi)
   18480:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   18487:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   1848e:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   18492:	80 78 04 00          	cmpb   $0x0,0x4(%eax)
   18496:	75 c8                	jne    18460 <fibril_timer_clear+0x80>
   18498:	c6 40 04 01          	movb   $0x1,0x4(%eax)
   1849c:	8b 42 dc             	mov    -0x24(%edx),%eax
   1849f:	89 04 24             	mov    %eax,(%esp)
   184a2:	e8 79 ea ff ff       	call   16f20 <fibril_add_ready>
   184a7:	a1 d0 06 03 00       	mov    0x306d0,%eax
   184ac:	85 c0                	test   %eax,%eax
   184ae:	74 b0                	je     18460 <fibril_timer_clear+0x80>
   184b0:	e8 4b b1 00 00       	call   23600 <async_poke>
   184b5:	8b 56 04             	mov    0x4(%esi),%edx
   184b8:	39 f2                	cmp    %esi,%edx
   184ba:	75 ab                	jne    18467 <fibril_timer_clear+0x87>
   184bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   184c0:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   184c7:	e8 64 08 00 00       	call   18d30 <futex_up>
   184cc:	89 1c 24             	mov    %ebx,(%esp)
   184cf:	e8 0c ef ff ff       	call   173e0 <fibril_mutex_unlock>
   184d4:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   184d7:	83 c4 5c             	add    $0x5c,%esp
   184da:	5b                   	pop    %ebx
   184db:	5e                   	pop    %esi
   184dc:	5f                   	pop    %edi
   184dd:	5d                   	pop    %ebp
   184de:	c3                   	ret    
   184df:	8d 45 bc             	lea    -0x44(%ebp),%eax
   184e2:	89 de                	mov    %ebx,%esi
   184e4:	89 04 24             	mov    %eax,(%esp)
   184e7:	e8 04 8e 00 00       	call   212f0 <awaiter_initialize>
   184ec:	e8 3f eb ff ff       	call   17030 <fibril_get_id>
   184f1:	8b 53 08             	mov    0x8(%ebx),%edx
   184f4:	89 45 bc             	mov    %eax,-0x44(%ebp)
   184f7:	8d 43 08             	lea    0x8(%ebx),%eax
   184fa:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   184fd:	8d 45 e0             	lea    -0x20(%ebp),%eax
   18500:	c6 45 dc 01          	movb   $0x1,-0x24(%ebp)
   18504:	89 55 e0             	mov    %edx,-0x20(%ebp)
   18507:	89 42 04             	mov    %eax,0x4(%edx)
   1850a:	89 43 08             	mov    %eax,0x8(%ebx)
   1850d:	8d 76 00             	lea    0x0(%esi),%esi
   18510:	8b 3e                	mov    (%esi),%edi
   18512:	85 ff                	test   %edi,%edi
   18514:	74 12                	je     18528 <fibril_timer_clear+0x148>
   18516:	e8 15 eb ff ff       	call   17030 <fibril_get_id>
   1851b:	39 c7                	cmp    %eax,%edi
   1851d:	74 20                	je     1853f <fibril_timer_clear+0x15f>
   1851f:	8b 06                	mov    (%esi),%eax
   18521:	8b 70 40             	mov    0x40(%eax),%esi
   18524:	85 f6                	test   %esi,%esi
   18526:	75 e8                	jne    18510 <fibril_timer_clear+0x130>
   18528:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   1852b:	89 58 40             	mov    %ebx,0x40(%eax)
   1852e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   18535:	e8 b6 e5 ff ff       	call   16af0 <fibril_switch>
   1853a:	e9 f0 fe ff ff       	jmp    1842f <fibril_timer_clear+0x4f>
   1853f:	89 f0                	mov    %esi,%eax
   18541:	e8 4a eb ff ff       	call   17090 <print_deadlock>
   18546:	e8 45 7c ff ff       	call   10190 <abort>
   1854b:	90                   	nop
   1854c:	66 90                	xchg   %ax,%ax
   1854e:	66 90                	xchg   %ax,%ax

00018550 <__make_tls>:
   18550:	55                   	push   %ebp
   18551:	89 e5                	mov    %esp,%ebp
   18553:	56                   	push   %esi
   18554:	53                   	push   %ebx
   18555:	bb d4 06 03 00       	mov    $0x306d4,%ebx
   1855a:	83 ec 20             	sub    $0x20,%esp
   1855d:	89 d8                	mov    %ebx,%eax
   1855f:	2d 88 06 03 00       	sub    $0x30688,%eax
   18564:	89 44 24 04          	mov    %eax,0x4(%esp)
   18568:	8d 45 f4             	lea    -0xc(%ebp),%eax
   1856b:	89 04 24             	mov    %eax,(%esp)
   1856e:	e8 4d 24 01 00       	call   2a9c0 <__alloc_tls>
   18573:	89 c6                	mov    %eax,%esi
   18575:	85 c0                	test   %eax,%eax
   18577:	74 48                	je     185c1 <__make_tls+0x71>
   18579:	ba 88 06 03 00       	mov    $0x30688,%edx
   1857e:	8b 45 f4             	mov    -0xc(%ebp),%eax
   18581:	81 ea 88 06 03 00    	sub    $0x30688,%edx
   18587:	c7 44 24 04 88 06 03 	movl   $0x30688,0x4(%esp)
   1858e:	00 
   1858f:	89 54 24 08          	mov    %edx,0x8(%esp)
   18593:	89 04 24             	mov    %eax,(%esp)
   18596:	e8 45 ac ff ff       	call   131e0 <memcpy>
   1859b:	ba 88 06 03 00       	mov    $0x30688,%edx
   185a0:	29 d3                	sub    %edx,%ebx
   185a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
   185a5:	81 ea 88 06 03 00    	sub    $0x30688,%edx
   185ab:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   185af:	01 c2                	add    %eax,%edx
   185b1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   185b8:	00 
   185b9:	89 14 24             	mov    %edx,(%esp)
   185bc:	e8 9f aa ff ff       	call   13060 <memset>
   185c1:	83 c4 20             	add    $0x20,%esp
   185c4:	89 f0                	mov    %esi,%eax
   185c6:	5b                   	pop    %ebx
   185c7:	5e                   	pop    %esi
   185c8:	5d                   	pop    %ebp
   185c9:	c3                   	ret    
   185ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000185d0 <__free_tls>:
   185d0:	55                   	push   %ebp
   185d1:	b8 d4 06 03 00       	mov    $0x306d4,%eax
   185d6:	89 e5                	mov    %esp,%ebp
   185d8:	83 ec 18             	sub    $0x18,%esp
   185db:	2d 88 06 03 00       	sub    $0x30688,%eax
   185e0:	89 44 24 04          	mov    %eax,0x4(%esp)
   185e4:	8b 45 08             	mov    0x8(%ebp),%eax
   185e7:	89 04 24             	mov    %eax,(%esp)
   185ea:	e8 e1 23 01 00       	call   2a9d0 <__free_tls_arch>
   185ef:	c9                   	leave  
   185f0:	c3                   	ret    
   185f1:	eb 0d                	jmp    18600 <tls_alloc_variant_2>
   185f3:	90                   	nop
   185f4:	90                   	nop
   185f5:	90                   	nop
   185f6:	90                   	nop
   185f7:	90                   	nop
   185f8:	90                   	nop
   185f9:	90                   	nop
   185fa:	90                   	nop
   185fb:	90                   	nop
   185fc:	90                   	nop
   185fd:	90                   	nop
   185fe:	90                   	nop
   185ff:	90                   	nop

00018600 <tls_alloc_variant_2>:
   18600:	55                   	push   %ebp
   18601:	b8 04 00 00 00       	mov    $0x4,%eax
   18606:	89 e5                	mov    %esp,%ebp
   18608:	53                   	push   %ebx
   18609:	83 ec 14             	sub    $0x14,%esp
   1860c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   1860f:	f7 d8                	neg    %eax
   18611:	81 c3 03 00 00 00    	add    $0x3,%ebx
   18617:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)
   1861e:	21 c3                	and    %eax,%ebx
   18620:	8d 43 08             	lea    0x8(%ebx),%eax
   18623:	89 44 24 04          	mov    %eax,0x4(%esp)
   18627:	e8 e4 7a 00 00       	call   20110 <memalign>
   1862c:	8b 55 08             	mov    0x8(%ebp),%edx
   1862f:	85 c0                	test   %eax,%eax
   18631:	89 02                	mov    %eax,(%edx)
   18633:	74 0b                	je     18640 <tls_alloc_variant_2+0x40>
   18635:	01 d8                	add    %ebx,%eax
   18637:	89 00                	mov    %eax,(%eax)
   18639:	83 c4 14             	add    $0x14,%esp
   1863c:	5b                   	pop    %ebx
   1863d:	5d                   	pop    %ebp
   1863e:	c3                   	ret    
   1863f:	90                   	nop
   18640:	31 c0                	xor    %eax,%eax
   18642:	eb f5                	jmp    18639 <tls_alloc_variant_2+0x39>
   18644:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1864a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00018650 <tls_free_variant_2>:
   18650:	55                   	push   %ebp
   18651:	ba 04 00 00 00       	mov    $0x4,%edx
   18656:	89 e5                	mov    %esp,%ebp
   18658:	f7 da                	neg    %edx
   1865a:	8b 45 0c             	mov    0xc(%ebp),%eax
   1865d:	05 03 00 00 00       	add    $0x3,%eax
   18662:	21 d0                	and    %edx,%eax
   18664:	8b 55 08             	mov    0x8(%ebp),%edx
   18667:	29 c2                	sub    %eax,%edx
   18669:	89 55 08             	mov    %edx,0x8(%ebp)
   1866c:	5d                   	pop    %ebp
   1866d:	e9 6e 7b 00 00       	jmp    201e0 <free>
   18672:	66 90                	xchg   %ax,%ax
   18674:	66 90                	xchg   %ax,%ax
   18676:	66 90                	xchg   %ax,%ax
   18678:	66 90                	xchg   %ax,%ax
   1867a:	66 90                	xchg   %ax,%ax
   1867c:	66 90                	xchg   %ax,%ax
   1867e:	66 90                	xchg   %ax,%ax

00018680 <task_get_id>:
   18680:	55                   	push   %ebp
   18681:	89 e5                	mov    %esp,%ebp
   18683:	83 ec 38             	sub    $0x38,%esp
   18686:	8d 45 f0             	lea    -0x10(%ebp),%eax
   18689:	c7 44 24 18 07 00 00 	movl   $0x7,0x18(%esp)
   18690:	00 
   18691:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   18698:	00 
   18699:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   186a0:	00 
   186a1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   186a8:	00 
   186a9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   186b0:	00 
   186b1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   186b8:	00 
   186b9:	89 04 24             	mov    %eax,(%esp)
   186bc:	ff 15 54 06 03 00    	call   *0x30654
   186c2:	8b 45 f0             	mov    -0x10(%ebp),%eax
   186c5:	8b 55 f4             	mov    -0xc(%ebp),%edx
   186c8:	c9                   	leave  
   186c9:	c3                   	ret    
   186ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000186d0 <task_set_name>:
   186d0:	55                   	push   %ebp
   186d1:	89 e5                	mov    %esp,%ebp
   186d3:	56                   	push   %esi
   186d4:	53                   	push   %ebx
   186d5:	83 ec 20             	sub    $0x20,%esp
   186d8:	8b 5d 08             	mov    0x8(%ebp),%ebx
   186db:	85 db                	test   %ebx,%ebx
   186dd:	74 46                	je     18725 <task_set_name+0x55>
   186df:	89 1c 24             	mov    %ebx,(%esp)
   186e2:	8b 35 54 06 03 00    	mov    0x30654,%esi
   186e8:	e8 03 b9 ff ff       	call   13ff0 <str_size>
   186ed:	89 1c 24             	mov    %ebx,(%esp)
   186f0:	c7 44 24 18 08 00 00 	movl   $0x8,0x18(%esp)
   186f7:	00 
   186f8:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   186ff:	00 
   18700:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   18707:	00 
   18708:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1870f:	00 
   18710:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   18717:	00 
   18718:	89 44 24 04          	mov    %eax,0x4(%esp)
   1871c:	ff d6                	call   *%esi
   1871e:	83 c4 20             	add    $0x20,%esp
   18721:	5b                   	pop    %ebx
   18722:	5e                   	pop    %esi
   18723:	5d                   	pop    %ebp
   18724:	c3                   	ret    
   18725:	c7 44 24 08 49 00 00 	movl   $0x49,0x8(%esp)
   1872c:	00 
   1872d:	c7 44 24 04 67 dc 02 	movl   $0x2dc67,0x4(%esp)
   18734:	00 
   18735:	c7 04 24 63 d6 02 00 	movl   $0x2d663,(%esp)
   1873c:	e8 6f 21 01 00       	call   2a8b0 <assert_abort>
   18741:	eb 0d                	jmp    18750 <task_kill>
   18743:	90                   	nop
   18744:	90                   	nop
   18745:	90                   	nop
   18746:	90                   	nop
   18747:	90                   	nop
   18748:	90                   	nop
   18749:	90                   	nop
   1874a:	90                   	nop
   1874b:	90                   	nop
   1874c:	90                   	nop
   1874d:	90                   	nop
   1874e:	90                   	nop
   1874f:	90                   	nop

00018750 <task_kill>:
   18750:	55                   	push   %ebp
   18751:	89 e5                	mov    %esp,%ebp
   18753:	83 ec 38             	sub    $0x38,%esp
   18756:	8b 45 08             	mov    0x8(%ebp),%eax
   18759:	c7 44 24 18 09 00 00 	movl   $0x9,0x18(%esp)
   18760:	00 
   18761:	89 45 f0             	mov    %eax,-0x10(%ebp)
   18764:	8b 45 0c             	mov    0xc(%ebp),%eax
   18767:	89 45 f4             	mov    %eax,-0xc(%ebp)
   1876a:	8d 45 f0             	lea    -0x10(%ebp),%eax
   1876d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   18774:	00 
   18775:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   1877c:	00 
   1877d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   18784:	00 
   18785:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   1878c:	00 
   1878d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   18794:	00 
   18795:	89 04 24             	mov    %eax,(%esp)
   18798:	ff 15 54 06 03 00    	call   *0x30654
   1879e:	c9                   	leave  
   1879f:	c3                   	ret    

000187a0 <task_spawnvf>:
   187a0:	55                   	push   %ebp
   187a1:	89 e5                	mov    %esp,%ebp
   187a3:	53                   	push   %ebx
   187a4:	83 ec 34             	sub    $0x34,%esp
   187a7:	e8 84 cd 00 00       	call   25530 <loader_connect>
   187ac:	89 c3                	mov    %eax,%ebx
   187ae:	85 c0                	test   %eax,%eax
   187b0:	0f 84 a2 00 00 00    	je     18858 <task_spawnvf+0xb8>
   187b6:	8d 45 f0             	lea    -0x10(%ebp),%eax
   187b9:	89 1c 24             	mov    %ebx,(%esp)
   187bc:	89 44 24 04          	mov    %eax,0x4(%esp)
   187c0:	e8 cb cd 00 00       	call   25590 <loader_get_task_id>
   187c5:	85 c0                	test   %eax,%eax
   187c7:	74 17                	je     187e0 <task_spawnvf+0x40>
   187c9:	89 1c 24             	mov    %ebx,(%esp)
   187cc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   187cf:	e8 ec d3 00 00       	call   25bc0 <loader_abort>
   187d4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   187d7:	83 c4 34             	add    $0x34,%esp
   187da:	5b                   	pop    %ebx
   187db:	5d                   	pop    %ebp
   187dc:	c3                   	ret    
   187dd:	8d 76 00             	lea    0x0(%esi),%esi
   187e0:	89 1c 24             	mov    %ebx,(%esp)
   187e3:	e8 58 ce 00 00       	call   25640 <loader_set_cwd>
   187e8:	85 c0                	test   %eax,%eax
   187ea:	75 dd                	jne    187c9 <task_spawnvf+0x29>
   187ec:	8b 45 0c             	mov    0xc(%ebp),%eax
   187ef:	89 1c 24             	mov    %ebx,(%esp)
   187f2:	89 44 24 04          	mov    %eax,0x4(%esp)
   187f6:	e8 65 cf 00 00       	call   25760 <loader_set_pathname>
   187fb:	85 c0                	test   %eax,%eax
   187fd:	75 ca                	jne    187c9 <task_spawnvf+0x29>
   187ff:	8b 45 10             	mov    0x10(%ebp),%eax
   18802:	89 1c 24             	mov    %ebx,(%esp)
   18805:	89 44 24 04          	mov    %eax,0x4(%esp)
   18809:	e8 32 d0 00 00       	call   25840 <loader_set_args>
   1880e:	85 c0                	test   %eax,%eax
   18810:	75 b7                	jne    187c9 <task_spawnvf+0x29>
   18812:	8b 45 14             	mov    0x14(%ebp),%eax
   18815:	89 1c 24             	mov    %ebx,(%esp)
   18818:	89 44 24 04          	mov    %eax,0x4(%esp)
   1881c:	e8 5f d1 00 00       	call   25980 <loader_set_files>
   18821:	85 c0                	test   %eax,%eax
   18823:	75 a4                	jne    187c9 <task_spawnvf+0x29>
   18825:	89 1c 24             	mov    %ebx,(%esp)
   18828:	e8 63 d2 00 00       	call   25a90 <loader_load_program>
   1882d:	85 c0                	test   %eax,%eax
   1882f:	75 98                	jne    187c9 <task_spawnvf+0x29>
   18831:	89 1c 24             	mov    %ebx,(%esp)
   18834:	e8 e7 d2 00 00       	call   25b20 <loader_run>
   18839:	85 c0                	test   %eax,%eax
   1883b:	75 8c                	jne    187c9 <task_spawnvf+0x29>
   1883d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
   18841:	74 94                	je     187d7 <task_spawnvf+0x37>
   18843:	8b 5d 08             	mov    0x8(%ebp),%ebx
   18846:	8b 55 f0             	mov    -0x10(%ebp),%edx
   18849:	8b 4d f4             	mov    -0xc(%ebp),%ecx
   1884c:	89 13                	mov    %edx,(%ebx)
   1884e:	89 4b 04             	mov    %ecx,0x4(%ebx)
   18851:	eb 84                	jmp    187d7 <task_spawnvf+0x37>
   18853:	90                   	nop
   18854:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18858:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax
   1885d:	e9 75 ff ff ff       	jmp    187d7 <task_spawnvf+0x37>
   18862:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   18869:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018870 <task_spawnv>:
   18870:	55                   	push   %ebp
   18871:	89 e5                	mov    %esp,%ebp
   18873:	53                   	push   %ebx
   18874:	83 ec 34             	sub    $0x34,%esp
   18877:	a1 c0 06 03 00       	mov    0x306c0,%eax
   1887c:	85 c0                	test   %eax,%eax
   1887e:	74 13                	je     18893 <task_spawnv+0x23>
   18880:	8d 5d dc             	lea    -0x24(%ebp),%ebx
   18883:	89 04 24             	mov    %eax,(%esp)
   18886:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   1888a:	e8 71 29 00 00       	call   1b200 <fhandle>
   1888f:	85 c0                	test   %eax,%eax
   18891:	74 7d                	je     18910 <task_spawnv+0xa0>
   18893:	31 c0                	xor    %eax,%eax
   18895:	89 45 e8             	mov    %eax,-0x18(%ebp)
   18898:	a1 bc 06 03 00       	mov    0x306bc,%eax
   1889d:	85 c0                	test   %eax,%eax
   1889f:	74 13                	je     188b4 <task_spawnv+0x44>
   188a1:	8d 5d e0             	lea    -0x20(%ebp),%ebx
   188a4:	89 04 24             	mov    %eax,(%esp)
   188a7:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   188ab:	e8 50 29 00 00       	call   1b200 <fhandle>
   188b0:	85 c0                	test   %eax,%eax
   188b2:	74 54                	je     18908 <task_spawnv+0x98>
   188b4:	31 c0                	xor    %eax,%eax
   188b6:	89 45 ec             	mov    %eax,-0x14(%ebp)
   188b9:	a1 b8 06 03 00       	mov    0x306b8,%eax
   188be:	85 c0                	test   %eax,%eax
   188c0:	74 13                	je     188d5 <task_spawnv+0x65>
   188c2:	8d 5d e4             	lea    -0x1c(%ebp),%ebx
   188c5:	89 04 24             	mov    %eax,(%esp)
   188c8:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   188cc:	e8 2f 29 00 00       	call   1b200 <fhandle>
   188d1:	85 c0                	test   %eax,%eax
   188d3:	74 43                	je     18918 <task_spawnv+0xa8>
   188d5:	31 c0                	xor    %eax,%eax
   188d7:	89 45 f0             	mov    %eax,-0x10(%ebp)
   188da:	8d 45 e8             	lea    -0x18(%ebp),%eax
   188dd:	89 44 24 0c          	mov    %eax,0xc(%esp)
   188e1:	8b 45 10             	mov    0x10(%ebp),%eax
   188e4:	89 44 24 08          	mov    %eax,0x8(%esp)
   188e8:	8b 45 0c             	mov    0xc(%ebp),%eax
   188eb:	89 44 24 04          	mov    %eax,0x4(%esp)
   188ef:	8b 45 08             	mov    0x8(%ebp),%eax
   188f2:	89 04 24             	mov    %eax,(%esp)
   188f5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
   188fc:	e8 9f fe ff ff       	call   187a0 <task_spawnvf>
   18901:	83 c4 34             	add    $0x34,%esp
   18904:	5b                   	pop    %ebx
   18905:	5d                   	pop    %ebp
   18906:	c3                   	ret    
   18907:	90                   	nop
   18908:	89 d8                	mov    %ebx,%eax
   1890a:	eb aa                	jmp    188b6 <task_spawnv+0x46>
   1890c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18910:	89 d8                	mov    %ebx,%eax
   18912:	eb 81                	jmp    18895 <task_spawnv+0x25>
   18914:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18918:	89 d8                	mov    %ebx,%eax
   1891a:	eb bb                	jmp    188d7 <task_spawnv+0x67>
   1891c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00018920 <task_spawn>:
   18920:	55                   	push   %ebp
   18921:	89 e5                	mov    %esp,%ebp
   18923:	56                   	push   %esi
   18924:	53                   	push   %ebx
   18925:	83 ec 40             	sub    $0x40,%esp
   18928:	8b 45 10             	mov    0x10(%ebp),%eax
   1892b:	8b 75 14             	mov    0x14(%ebp),%esi
   1892e:	c1 e0 02             	shl    $0x2,%eax
   18931:	89 04 24             	mov    %eax,(%esp)
   18934:	e8 97 77 00 00       	call   200d0 <malloc>
   18939:	89 c3                	mov    %eax,%ebx
   1893b:	85 c0                	test   %eax,%eax
   1893d:	0f 84 c9 00 00 00    	je     18a0c <task_spawn+0xec>
   18943:	31 d2                	xor    %edx,%edx
   18945:	8d 76 00             	lea    0x0(%esi),%esi
   18948:	8b 0c 96             	mov    (%esi,%edx,4),%ecx
   1894b:	89 0c 93             	mov    %ecx,(%ebx,%edx,4)
   1894e:	42                   	inc    %edx
   1894f:	85 c9                	test   %ecx,%ecx
   18951:	75 f5                	jne    18948 <task_spawn+0x28>
   18953:	a1 c0 06 03 00       	mov    0x306c0,%eax
   18958:	85 c0                	test   %eax,%eax
   1895a:	74 17                	je     18973 <task_spawn+0x53>
   1895c:	8d 75 dc             	lea    -0x24(%ebp),%esi
   1895f:	89 04 24             	mov    %eax,(%esp)
   18962:	89 74 24 04          	mov    %esi,0x4(%esp)
   18966:	e8 95 28 00 00       	call   1b200 <fhandle>
   1896b:	85 c0                	test   %eax,%eax
   1896d:	0f 84 8d 00 00 00    	je     18a00 <task_spawn+0xe0>
   18973:	31 c0                	xor    %eax,%eax
   18975:	89 45 e8             	mov    %eax,-0x18(%ebp)
   18978:	a1 bc 06 03 00       	mov    0x306bc,%eax
   1897d:	85 c0                	test   %eax,%eax
   1897f:	74 13                	je     18994 <task_spawn+0x74>
   18981:	8d 75 e0             	lea    -0x20(%ebp),%esi
   18984:	89 04 24             	mov    %eax,(%esp)
   18987:	89 74 24 04          	mov    %esi,0x4(%esp)
   1898b:	e8 70 28 00 00       	call   1b200 <fhandle>
   18990:	85 c0                	test   %eax,%eax
   18992:	74 64                	je     189f8 <task_spawn+0xd8>
   18994:	31 c0                	xor    %eax,%eax
   18996:	89 45 ec             	mov    %eax,-0x14(%ebp)
   18999:	a1 b8 06 03 00       	mov    0x306b8,%eax
   1899e:	85 c0                	test   %eax,%eax
   189a0:	74 13                	je     189b5 <task_spawn+0x95>
   189a2:	8d 75 e4             	lea    -0x1c(%ebp),%esi
   189a5:	89 04 24             	mov    %eax,(%esp)
   189a8:	89 74 24 04          	mov    %esi,0x4(%esp)
   189ac:	e8 4f 28 00 00       	call   1b200 <fhandle>
   189b1:	85 c0                	test   %eax,%eax
   189b3:	74 53                	je     18a08 <task_spawn+0xe8>
   189b5:	31 c0                	xor    %eax,%eax
   189b7:	89 45 f0             	mov    %eax,-0x10(%ebp)
   189ba:	8d 45 e8             	lea    -0x18(%ebp),%eax
   189bd:	89 44 24 0c          	mov    %eax,0xc(%esp)
   189c1:	8b 45 0c             	mov    0xc(%ebp),%eax
   189c4:	89 44 24 04          	mov    %eax,0x4(%esp)
   189c8:	8b 45 08             	mov    0x8(%ebp),%eax
   189cb:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   189cf:	89 04 24             	mov    %eax,(%esp)
   189d2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
   189d9:	e8 c2 fd ff ff       	call   187a0 <task_spawnvf>
   189de:	89 1c 24             	mov    %ebx,(%esp)
   189e1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
   189e4:	e8 f7 77 00 00       	call   201e0 <free>
   189e9:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   189ec:	83 c4 40             	add    $0x40,%esp
   189ef:	5b                   	pop    %ebx
   189f0:	5e                   	pop    %esi
   189f1:	5d                   	pop    %ebp
   189f2:	c3                   	ret    
   189f3:	90                   	nop
   189f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   189f8:	89 f0                	mov    %esi,%eax
   189fa:	eb 9a                	jmp    18996 <task_spawn+0x76>
   189fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18a00:	89 f0                	mov    %esi,%eax
   18a02:	e9 6e ff ff ff       	jmp    18975 <task_spawn+0x55>
   18a07:	90                   	nop
   18a08:	89 f0                	mov    %esi,%eax
   18a0a:	eb ab                	jmp    189b7 <task_spawn+0x97>
   18a0c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   18a11:	eb d9                	jmp    189ec <task_spawn+0xcc>
   18a13:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   18a19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018a20 <task_spawnl>:
   18a20:	55                   	push   %ebp
   18a21:	31 d2                	xor    %edx,%edx
   18a23:	89 e5                	mov    %esp,%ebp
   18a25:	56                   	push   %esi
   18a26:	53                   	push   %ebx
   18a27:	83 ec 40             	sub    $0x40,%esp
   18a2a:	8d 45 10             	lea    0x10(%ebp),%eax
   18a2d:	8d 76 00             	lea    0x0(%esi),%esi
   18a30:	83 c0 04             	add    $0x4,%eax
   18a33:	42                   	inc    %edx
   18a34:	8b 48 fc             	mov    -0x4(%eax),%ecx
   18a37:	85 c9                	test   %ecx,%ecx
   18a39:	75 f5                	jne    18a30 <task_spawnl+0x10>
   18a3b:	c1 e2 02             	shl    $0x2,%edx
   18a3e:	89 14 24             	mov    %edx,(%esp)
   18a41:	e8 8a 76 00 00       	call   200d0 <malloc>
   18a46:	89 c3                	mov    %eax,%ebx
   18a48:	85 c0                	test   %eax,%eax
   18a4a:	0f 84 cc 00 00 00    	je     18b1c <task_spawnl+0xfc>
   18a50:	31 d2                	xor    %edx,%edx
   18a52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   18a58:	8b 4c 95 10          	mov    0x10(%ebp,%edx,4),%ecx
   18a5c:	89 0c 93             	mov    %ecx,(%ebx,%edx,4)
   18a5f:	42                   	inc    %edx
   18a60:	85 c9                	test   %ecx,%ecx
   18a62:	75 f4                	jne    18a58 <task_spawnl+0x38>
   18a64:	a1 c0 06 03 00       	mov    0x306c0,%eax
   18a69:	85 c0                	test   %eax,%eax
   18a6b:	74 17                	je     18a84 <task_spawnl+0x64>
   18a6d:	8d 75 dc             	lea    -0x24(%ebp),%esi
   18a70:	89 04 24             	mov    %eax,(%esp)
   18a73:	89 74 24 04          	mov    %esi,0x4(%esp)
   18a77:	e8 84 27 00 00       	call   1b200 <fhandle>
   18a7c:	85 c0                	test   %eax,%eax
   18a7e:	0f 84 8c 00 00 00    	je     18b10 <task_spawnl+0xf0>
   18a84:	31 c0                	xor    %eax,%eax
   18a86:	89 45 e8             	mov    %eax,-0x18(%ebp)
   18a89:	a1 bc 06 03 00       	mov    0x306bc,%eax
   18a8e:	85 c0                	test   %eax,%eax
   18a90:	74 13                	je     18aa5 <task_spawnl+0x85>
   18a92:	8d 75 e0             	lea    -0x20(%ebp),%esi
   18a95:	89 04 24             	mov    %eax,(%esp)
   18a98:	89 74 24 04          	mov    %esi,0x4(%esp)
   18a9c:	e8 5f 27 00 00       	call   1b200 <fhandle>
   18aa1:	85 c0                	test   %eax,%eax
   18aa3:	74 63                	je     18b08 <task_spawnl+0xe8>
   18aa5:	31 c0                	xor    %eax,%eax
   18aa7:	89 45 ec             	mov    %eax,-0x14(%ebp)
   18aaa:	a1 b8 06 03 00       	mov    0x306b8,%eax
   18aaf:	85 c0                	test   %eax,%eax
   18ab1:	74 13                	je     18ac6 <task_spawnl+0xa6>
   18ab3:	8d 75 e4             	lea    -0x1c(%ebp),%esi
   18ab6:	89 04 24             	mov    %eax,(%esp)
   18ab9:	89 74 24 04          	mov    %esi,0x4(%esp)
   18abd:	e8 3e 27 00 00       	call   1b200 <fhandle>
   18ac2:	85 c0                	test   %eax,%eax
   18ac4:	74 52                	je     18b18 <task_spawnl+0xf8>
   18ac6:	31 c0                	xor    %eax,%eax
   18ac8:	89 45 f0             	mov    %eax,-0x10(%ebp)
   18acb:	8d 45 e8             	lea    -0x18(%ebp),%eax
   18ace:	89 44 24 0c          	mov    %eax,0xc(%esp)
   18ad2:	8b 45 0c             	mov    0xc(%ebp),%eax
   18ad5:	89 44 24 04          	mov    %eax,0x4(%esp)
   18ad9:	8b 45 08             	mov    0x8(%ebp),%eax
   18adc:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   18ae0:	89 04 24             	mov    %eax,(%esp)
   18ae3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
   18aea:	e8 b1 fc ff ff       	call   187a0 <task_spawnvf>
   18aef:	89 1c 24             	mov    %ebx,(%esp)
   18af2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
   18af5:	e8 e6 76 00 00       	call   201e0 <free>
   18afa:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   18afd:	83 c4 40             	add    $0x40,%esp
   18b00:	5b                   	pop    %ebx
   18b01:	5e                   	pop    %esi
   18b02:	5d                   	pop    %ebp
   18b03:	c3                   	ret    
   18b04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18b08:	89 f0                	mov    %esi,%eax
   18b0a:	eb 9b                	jmp    18aa7 <task_spawnl+0x87>
   18b0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18b10:	89 f0                	mov    %esi,%eax
   18b12:	e9 6f ff ff ff       	jmp    18a86 <task_spawnl+0x66>
   18b17:	90                   	nop
   18b18:	89 f0                	mov    %esi,%eax
   18b1a:	eb ac                	jmp    18ac8 <task_spawnl+0xa8>
   18b1c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   18b21:	eb da                	jmp    18afd <task_spawnl+0xdd>
   18b23:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   18b29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018b30 <task_wait>:
   18b30:	55                   	push   %ebp
   18b31:	89 e5                	mov    %esp,%ebp
   18b33:	57                   	push   %edi
   18b34:	56                   	push   %esi
   18b35:	53                   	push   %ebx
   18b36:	83 ec 5c             	sub    $0x5c,%esp
   18b39:	8b 45 10             	mov    0x10(%ebp),%eax
   18b3c:	8b 75 08             	mov    0x8(%ebp),%esi
   18b3f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   18b42:	85 c0                	test   %eax,%eax
   18b44:	0f 84 8e 00 00 00    	je     18bd8 <task_wait+0xa8>
   18b4a:	8b 7d 14             	mov    0x14(%ebp),%edi
   18b4d:	85 ff                	test   %edi,%edi
   18b4f:	0f 84 9f 00 00 00    	je     18bf4 <task_wait+0xc4>
   18b55:	a1 8c 06 03 00       	mov    0x3068c,%eax
   18b5a:	89 04 24             	mov    %eax,(%esp)
   18b5d:	e8 ae aa 00 00       	call   23610 <async_exchange_begin>
   18b62:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
   18b66:	89 c7                	mov    %eax,%edi
   18b68:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   18b6b:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   18b6f:	8d 45 e0             	lea    -0x20(%ebp),%eax
   18b72:	89 74 24 08          	mov    %esi,0x8(%esp)
   18b76:	89 3c 24             	mov    %edi,(%esp)
   18b79:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   18b80:	00 
   18b81:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   18b88:	00 
   18b89:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   18b90:	00 
   18b91:	89 44 24 18          	mov    %eax,0x18(%esp)
   18b95:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   18b9c:	00 
   18b9d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   18ba4:	00 
   18ba5:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)
   18bac:	00 
   18bad:	e8 0e 9a 00 00       	call   225c0 <async_req_fast>
   18bb2:	89 3c 24             	mov    %edi,(%esp)
   18bb5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
   18bb8:	e8 c3 ad 00 00       	call   23980 <async_exchange_end>
   18bbd:	8b 4d 10             	mov    0x10(%ebp),%ecx
   18bc0:	8b 55 e0             	mov    -0x20(%ebp),%edx
   18bc3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   18bc6:	89 11                	mov    %edx,(%ecx)
   18bc8:	8b 4d 14             	mov    0x14(%ebp),%ecx
   18bcb:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   18bce:	89 11                	mov    %edx,(%ecx)
   18bd0:	83 c4 5c             	add    $0x5c,%esp
   18bd3:	5b                   	pop    %ebx
   18bd4:	5e                   	pop    %esi
   18bd5:	5f                   	pop    %edi
   18bd6:	5d                   	pop    %ebp
   18bd7:	c3                   	ret    
   18bd8:	c7 44 24 08 10 01 00 	movl   $0x110,0x8(%esp)
   18bdf:	00 
   18be0:	c7 44 24 04 67 dc 02 	movl   $0x2dc67,0x4(%esp)
   18be7:	00 
   18be8:	c7 04 24 76 dc 02 00 	movl   $0x2dc76,(%esp)
   18bef:	e8 bc 1c 01 00       	call   2a8b0 <assert_abort>
   18bf4:	c7 44 24 08 11 01 00 	movl   $0x111,0x8(%esp)
   18bfb:	00 
   18bfc:	c7 44 24 04 67 dc 02 	movl   $0x2dc67,0x4(%esp)
   18c03:	00 
   18c04:	c7 04 24 7c dc 02 00 	movl   $0x2dc7c,(%esp)
   18c0b:	e8 a0 1c 01 00       	call   2a8b0 <assert_abort>

00018c10 <task_retval>:
   18c10:	55                   	push   %ebp
   18c11:	89 e5                	mov    %esp,%ebp
   18c13:	53                   	push   %ebx
   18c14:	83 ec 44             	sub    $0x44,%esp
   18c17:	a1 8c 06 03 00       	mov    0x3068c,%eax
   18c1c:	89 04 24             	mov    %eax,(%esp)
   18c1f:	e8 ec a9 00 00       	call   23610 <async_exchange_begin>
   18c24:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   18c2b:	00 
   18c2c:	89 c3                	mov    %eax,%ebx
   18c2e:	8b 45 08             	mov    0x8(%ebp),%eax
   18c31:	89 1c 24             	mov    %ebx,(%esp)
   18c34:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   18c3b:	00 
   18c3c:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   18c43:	00 
   18c44:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   18c4b:	00 
   18c4c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   18c53:	00 
   18c54:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   18c5b:	00 
   18c5c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   18c63:	00 
   18c64:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   18c6b:	00 
   18c6c:	89 44 24 08          	mov    %eax,0x8(%esp)
   18c70:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)
   18c77:	00 
   18c78:	e8 43 99 00 00       	call   225c0 <async_req_fast>
   18c7d:	89 1c 24             	mov    %ebx,(%esp)
   18c80:	89 45 f4             	mov    %eax,-0xc(%ebp)
   18c83:	e8 f8 ac 00 00       	call   23980 <async_exchange_end>
   18c88:	8b 45 f4             	mov    -0xc(%ebp),%eax
   18c8b:	83 c4 44             	add    $0x44,%esp
   18c8e:	5b                   	pop    %ebx
   18c8f:	5d                   	pop    %ebp
   18c90:	c3                   	ret    
   18c91:	66 90                	xchg   %ax,%ax
   18c93:	66 90                	xchg   %ax,%ax
   18c95:	66 90                	xchg   %ax,%ax
   18c97:	66 90                	xchg   %ax,%ax
   18c99:	66 90                	xchg   %ax,%ax
   18c9b:	66 90                	xchg   %ax,%ax
   18c9d:	66 90                	xchg   %ax,%ax
   18c9f:	90                   	nop

00018ca0 <futex_initialize>:
   18ca0:	55                   	push   %ebp
   18ca1:	89 e5                	mov    %esp,%ebp
   18ca3:	8b 45 08             	mov    0x8(%ebp),%eax
   18ca6:	8b 55 0c             	mov    0xc(%ebp),%edx
   18ca9:	89 10                	mov    %edx,(%eax)
   18cab:	5d                   	pop    %ebp
   18cac:	c3                   	ret    
   18cad:	8d 76 00             	lea    0x0(%esi),%esi

00018cb0 <futex_trydown>:
   18cb0:	55                   	push   %ebp
   18cb1:	31 c9                	xor    %ecx,%ecx
   18cb3:	89 e5                	mov    %esp,%ebp
   18cb5:	b8 01 00 00 00       	mov    $0x1,%eax
   18cba:	8b 55 08             	mov    0x8(%ebp),%edx
   18cbd:	f0 0f b1 0a          	lock cmpxchg %ecx,(%edx)
   18cc1:	0f 94 c0             	sete   %al
   18cc4:	25 ff 00 00 00       	and    $0xff,%eax
   18cc9:	5d                   	pop    %ebp
   18cca:	c3                   	ret    
   18ccb:	90                   	nop
   18ccc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00018cd0 <futex_down>:
   18cd0:	55                   	push   %ebp
   18cd1:	83 ca ff             	or     $0xffffffff,%edx
   18cd4:	89 e5                	mov    %esp,%ebp
   18cd6:	83 ec 28             	sub    $0x28,%esp
   18cd9:	8b 4d 08             	mov    0x8(%ebp),%ecx
   18cdc:	f0 0f c1 11          	lock xadd %edx,(%ecx)
   18ce0:	31 c0                	xor    %eax,%eax
   18ce2:	4a                   	dec    %edx
   18ce3:	78 03                	js     18ce8 <futex_down+0x18>
   18ce5:	c9                   	leave  
   18ce6:	c3                   	ret    
   18ce7:	90                   	nop
   18ce8:	c7 44 24 18 0c 00 00 	movl   $0xc,0x18(%esp)
   18cef:	00 
   18cf0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   18cf7:	00 
   18cf8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   18cff:	00 
   18d00:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   18d07:	00 
   18d08:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   18d0f:	00 
   18d10:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   18d17:	00 
   18d18:	89 0c 24             	mov    %ecx,(%esp)
   18d1b:	ff 15 54 06 03 00    	call   *0x30654
   18d21:	c9                   	leave  
   18d22:	c3                   	ret    
   18d23:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   18d29:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018d30 <futex_up>:
   18d30:	55                   	push   %ebp
   18d31:	ba 01 00 00 00       	mov    $0x1,%edx
   18d36:	89 e5                	mov    %esp,%ebp
   18d38:	83 ec 28             	sub    $0x28,%esp
   18d3b:	8b 4d 08             	mov    0x8(%ebp),%ecx
   18d3e:	f0 0f c1 11          	lock xadd %edx,(%ecx)
   18d42:	31 c0                	xor    %eax,%eax
   18d44:	85 d2                	test   %edx,%edx
   18d46:	78 08                	js     18d50 <futex_up+0x20>
   18d48:	c9                   	leave  
   18d49:	c3                   	ret    
   18d4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   18d50:	c7 44 24 18 0d 00 00 	movl   $0xd,0x18(%esp)
   18d57:	00 
   18d58:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   18d5f:	00 
   18d60:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   18d67:	00 
   18d68:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   18d6f:	00 
   18d70:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   18d77:	00 
   18d78:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   18d7f:	00 
   18d80:	89 0c 24             	mov    %ecx,(%esp)
   18d83:	ff 15 54 06 03 00    	call   *0x30654
   18d89:	c9                   	leave  
   18d8a:	c3                   	ret    
   18d8b:	66 90                	xchg   %ax,%ax
   18d8d:	66 90                	xchg   %ax,%ax
   18d8f:	90                   	nop

00018d90 <_fwrite>:
   18d90:	55                   	push   %ebp
   18d91:	89 e5                	mov    %esp,%ebp
   18d93:	57                   	push   %edi
   18d94:	56                   	push   %esi
   18d95:	53                   	push   %ebx
   18d96:	83 ec 2c             	sub    $0x2c,%esp
   18d99:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   18d9c:	89 55 e0             	mov    %edx,-0x20(%ebp)
   18d9f:	8b 7d 08             	mov    0x8(%ebp),%edi
   18da2:	85 c9                	test   %ecx,%ecx
   18da4:	0f 84 9e 00 00 00    	je     18e48 <_fwrite+0xb8>
   18daa:	85 d2                	test   %edx,%edx
   18dac:	0f 84 96 00 00 00    	je     18e48 <_fwrite+0xb8>
   18db2:	89 d6                	mov    %edx,%esi
   18db4:	0f af f1             	imul   %ecx,%esi
   18db7:	85 f6                	test   %esi,%esi
   18db9:	0f 84 93 00 00 00    	je     18e52 <_fwrite+0xc2>
   18dbf:	8b 4f 0c             	mov    0xc(%edi),%ecx
   18dc2:	85 c9                	test   %ecx,%ecx
   18dc4:	0f 85 88 00 00 00    	jne    18e52 <_fwrite+0xc2>
   18dca:	31 db                	xor    %ebx,%ebx
   18dcc:	eb 26                	jmp    18df4 <_fwrite+0x64>
   18dce:	66 90                	xchg   %ax,%ax
   18dd0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   18dd3:	89 74 24 04          	mov    %esi,0x4(%esp)
   18dd7:	01 d8                	add    %ebx,%eax
   18dd9:	89 04 24             	mov    %eax,(%esp)
   18ddc:	e8 9f 25 00 00       	call   1b380 <klog_write>
   18de1:	85 c0                	test   %eax,%eax
   18de3:	7e 32                	jle    18e17 <_fwrite+0x87>
   18de5:	29 c6                	sub    %eax,%esi
   18de7:	01 c3                	add    %eax,%ebx
   18de9:	85 f6                	test   %esi,%esi
   18deb:	74 3b                	je     18e28 <_fwrite+0x98>
   18ded:	8b 47 0c             	mov    0xc(%edi),%eax
   18df0:	85 c0                	test   %eax,%eax
   18df2:	75 34                	jne    18e28 <_fwrite+0x98>
   18df4:	8b 57 14             	mov    0x14(%edi),%edx
   18df7:	85 d2                	test   %edx,%edx
   18df9:	75 d5                	jne    18dd0 <_fwrite+0x40>
   18dfb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   18dfe:	89 74 24 08          	mov    %esi,0x8(%esp)
   18e02:	01 d8                	add    %ebx,%eax
   18e04:	89 44 24 04          	mov    %eax,0x4(%esp)
   18e08:	8b 47 08             	mov    0x8(%edi),%eax
   18e0b:	89 04 24             	mov    %eax,(%esp)
   18e0e:	e8 cd fd 00 00       	call   28be0 <write>
   18e13:	85 c0                	test   %eax,%eax
   18e15:	7f ce                	jg     18de5 <_fwrite+0x55>
   18e17:	c7 47 0c 01 00 00 00 	movl   $0x1,0xc(%edi)
   18e1e:	85 f6                	test   %esi,%esi
   18e20:	75 cb                	jne    18ded <_fwrite+0x5d>
   18e22:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   18e28:	89 d8                	mov    %ebx,%eax
   18e2a:	85 db                	test   %ebx,%ebx
   18e2c:	74 09                	je     18e37 <_fwrite+0xa7>
   18e2e:	c7 47 1c 01 00 00 00 	movl   $0x1,0x1c(%edi)
   18e35:	89 d8                	mov    %ebx,%eax
   18e37:	31 d2                	xor    %edx,%edx
   18e39:	f7 75 e0             	divl   -0x20(%ebp)
   18e3c:	83 c4 2c             	add    $0x2c,%esp
   18e3f:	5b                   	pop    %ebx
   18e40:	5e                   	pop    %esi
   18e41:	5f                   	pop    %edi
   18e42:	5d                   	pop    %ebp
   18e43:	c3                   	ret    
   18e44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   18e48:	83 c4 2c             	add    $0x2c,%esp
   18e4b:	31 c0                	xor    %eax,%eax
   18e4d:	5b                   	pop    %ebx
   18e4e:	5e                   	pop    %esi
   18e4f:	5f                   	pop    %edi
   18e50:	5d                   	pop    %ebp
   18e51:	c3                   	ret    
   18e52:	31 c0                	xor    %eax,%eax
   18e54:	eb e1                	jmp    18e37 <_fwrite+0xa7>
   18e56:	8d 76 00             	lea    0x0(%esi),%esi
   18e59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00018e60 <__stdio_init>:
   18e60:	55                   	push   %ebp
   18e61:	89 e5                	mov    %esp,%ebp
   18e63:	56                   	push   %esi
   18e64:	53                   	push   %ebx
   18e65:	83 ec 10             	sub    $0x10,%esp
   18e68:	8b 75 08             	mov    0x8(%ebp),%esi
   18e6b:	85 f6                	test   %esi,%esi
   18e6d:	0f 8e e5 01 00 00    	jle    19058 <__stdio_init+0x1f8>
   18e73:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   18e7a:	e8 51 72 00 00       	call   200d0 <malloc>
   18e7f:	89 c3                	mov    %eax,%ebx
   18e81:	85 c0                	test   %eax,%eax
   18e83:	0f 84 37 02 00 00    	je     190c0 <__stdio_init+0x260>
   18e89:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
   18e90:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   18e97:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   18e9e:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
   18ea5:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   18eac:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   18eb3:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%eax)
   18eba:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   18ec1:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   18ec8:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
   18ecf:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
   18ed6:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
   18edd:	c7 40 04 38 05 03 00 	movl   $0x30538,0x4(%eax)
   18ee4:	a1 38 05 03 00       	mov    0x30538,%eax
   18ee9:	89 03                	mov    %eax,(%ebx)
   18eeb:	89 1d 38 05 03 00    	mov    %ebx,0x30538
   18ef1:	89 58 04             	mov    %ebx,0x4(%eax)
   18ef4:	89 1d c0 06 03 00    	mov    %ebx,0x306c0
   18efa:	83 fe 01             	cmp    $0x1,%esi
   18efd:	0f 84 dd 01 00 00    	je     190e0 <__stdio_init+0x280>
   18f03:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   18f0a:	e8 c1 71 00 00       	call   200d0 <malloc>
   18f0f:	89 c3                	mov    %eax,%ebx
   18f11:	85 c0                	test   %eax,%eax
   18f13:	0f 84 b7 01 00 00    	je     190d0 <__stdio_init+0x270>
   18f19:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
   18f20:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   18f27:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   18f2e:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
   18f35:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   18f3c:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   18f43:	c7 40 20 01 00 00 00 	movl   $0x1,0x20(%eax)
   18f4a:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   18f51:	c7 40 28 00 10 00 00 	movl   $0x1000,0x28(%eax)
   18f58:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
   18f5f:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
   18f66:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
   18f6d:	c7 40 04 38 05 03 00 	movl   $0x30538,0x4(%eax)
   18f74:	a1 38 05 03 00       	mov    0x30538,%eax
   18f79:	89 03                	mov    %eax,(%ebx)
   18f7b:	89 1d 38 05 03 00    	mov    %ebx,0x30538
   18f81:	89 58 04             	mov    %ebx,0x4(%eax)
   18f84:	89 1d bc 06 03 00    	mov    %ebx,0x306bc
   18f8a:	a1 38 05 03 00       	mov    0x30538,%eax
   18f8f:	83 fe 02             	cmp    $0x2,%esi
   18f92:	75 34                	jne    18fc8 <__stdio_init+0x168>
   18f94:	c7 05 84 05 03 00 38 	movl   $0x30538,0x30584
   18f9b:	05 03 00 
   18f9e:	c7 05 b8 06 03 00 80 	movl   $0x30580,0x306b8
   18fa5:	05 03 00 
   18fa8:	c7 40 04 80 05 03 00 	movl   $0x30580,0x4(%eax)
   18faf:	a3 80 05 03 00       	mov    %eax,0x30580
   18fb4:	c7 05 38 05 03 00 80 	movl   $0x30580,0x30538
   18fbb:	05 03 00 
   18fbe:	83 c4 10             	add    $0x10,%esp
   18fc1:	5b                   	pop    %ebx
   18fc2:	5e                   	pop    %esi
   18fc3:	5d                   	pop    %ebp
   18fc4:	c3                   	ret    
   18fc5:	8d 76 00             	lea    0x0(%esi),%esi
   18fc8:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   18fcf:	e8 fc 70 00 00       	call   200d0 <malloc>
   18fd4:	89 c3                	mov    %eax,%ebx
   18fd6:	85 c0                	test   %eax,%eax
   18fd8:	0f 84 ce 00 00 00    	je     190ac <__stdio_init+0x24c>
   18fde:	c7 40 08 02 00 00 00 	movl   $0x2,0x8(%eax)
   18fe5:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   18fec:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   18ff3:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
   18ffa:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   19001:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   19008:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%eax)
   1900f:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   19016:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   1901d:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
   19024:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
   1902b:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
   19032:	c7 40 04 38 05 03 00 	movl   $0x30538,0x4(%eax)
   19039:	a1 38 05 03 00       	mov    0x30538,%eax
   1903e:	89 03                	mov    %eax,(%ebx)
   19040:	89 1d 38 05 03 00    	mov    %ebx,0x30538
   19046:	89 58 04             	mov    %ebx,0x4(%eax)
   19049:	89 1d b8 06 03 00    	mov    %ebx,0x306b8
   1904f:	83 c4 10             	add    $0x10,%esp
   19052:	5b                   	pop    %ebx
   19053:	5e                   	pop    %esi
   19054:	5d                   	pop    %ebp
   19055:	c3                   	ret    
   19056:	66 90                	xchg   %ax,%ax
   19058:	a1 38 05 03 00       	mov    0x30538,%eax
   1905d:	c7 05 04 05 03 00 38 	movl   $0x30538,0x30504
   19064:	05 03 00 
   19067:	a3 00 05 03 00       	mov    %eax,0x30500
   1906c:	c7 05 c0 06 03 00 00 	movl   $0x30500,0x306c0
   19073:	05 03 00 
   19076:	c7 40 04 00 05 03 00 	movl   $0x30500,0x4(%eax)
   1907d:	b8 00 05 03 00       	mov    $0x30500,%eax
   19082:	c7 05 44 05 03 00 38 	movl   $0x30538,0x30544
   19089:	05 03 00 
   1908c:	a3 40 05 03 00       	mov    %eax,0x30540
   19091:	c7 40 04 40 05 03 00 	movl   $0x30540,0x4(%eax)
   19098:	c7 05 bc 06 03 00 40 	movl   $0x30540,0x306bc
   1909f:	05 03 00 
   190a2:	b8 40 05 03 00       	mov    $0x30540,%eax
   190a7:	e9 e8 fe ff ff       	jmp    18f94 <__stdio_init+0x134>
   190ac:	e8 2f 76 ff ff       	call   106e0 <__errno>
   190b1:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   190b7:	eb 90                	jmp    19049 <__stdio_init+0x1e9>
   190b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   190c0:	e8 1b 76 ff ff       	call   106e0 <__errno>
   190c5:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   190cb:	e9 24 fe ff ff       	jmp    18ef4 <__stdio_init+0x94>
   190d0:	e8 0b 76 ff ff       	call   106e0 <__errno>
   190d5:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   190db:	e9 a4 fe ff ff       	jmp    18f84 <__stdio_init+0x124>
   190e0:	a1 38 05 03 00       	mov    0x30538,%eax
   190e5:	eb 9b                	jmp    19082 <__stdio_init+0x222>
   190e7:	89 f6                	mov    %esi,%esi
   190e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000190f0 <__stdio_done>:
   190f0:	55                   	push   %ebp
   190f1:	89 e5                	mov    %esp,%ebp
   190f3:	57                   	push   %edi
   190f4:	56                   	push   %esi
   190f5:	53                   	push   %ebx
   190f6:	83 ec 2c             	sub    $0x2c,%esp
   190f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   19100:	8b 1d 3c 05 03 00    	mov    0x3053c,%ebx
   19106:	81 fb 38 05 03 00    	cmp    $0x30538,%ebx
   1910c:	0f 84 e7 00 00 00    	je     191f9 <__stdio_done+0x109>
   19112:	8b 43 24             	mov    0x24(%ebx),%eax
   19115:	85 c0                	test   %eax,%eax
   19117:	74 3b                	je     19154 <__stdio_done+0x64>
   19119:	8b 4b 20             	mov    0x20(%ebx),%ecx
   1911c:	85 c9                	test   %ecx,%ecx
   1911e:	74 34                	je     19154 <__stdio_done+0x64>
   19120:	8b 53 0c             	mov    0xc(%ebx),%edx
   19123:	85 d2                	test   %edx,%edx
   19125:	75 2d                	jne    19154 <__stdio_done+0x64>
   19127:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1912a:	89 cf                	mov    %ecx,%edi
   1912c:	2b 7b 34             	sub    0x34(%ebx),%edi
   1912f:	74 16                	je     19147 <__stdio_done+0x57>
   19131:	8b 43 2c             	mov    0x2c(%ebx),%eax
   19134:	83 f8 02             	cmp    $0x2,%eax
   19137:	0f 84 db 00 00 00    	je     19218 <__stdio_done+0x128>
   1913d:	48                   	dec    %eax
   1913e:	0f 84 04 01 00 00    	je     19248 <__stdio_done+0x158>
   19144:	8b 43 24             	mov    0x24(%ebx),%eax
   19147:	89 43 30             	mov    %eax,0x30(%ebx)
   1914a:	89 43 34             	mov    %eax,0x34(%ebx)
   1914d:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   19154:	8b 7b 14             	mov    0x14(%ebx),%edi
   19157:	85 ff                	test   %edi,%edi
   19159:	0f 85 a9 00 00 00    	jne    19208 <__stdio_done+0x118>
   1915f:	8b 43 08             	mov    0x8(%ebx),%eax
   19162:	85 c0                	test   %eax,%eax
   19164:	78 16                	js     1917c <__stdio_done+0x8c>
   19166:	8b 73 1c             	mov    0x1c(%ebx),%esi
   19169:	85 f6                	test   %esi,%esi
   1916b:	74 0f                	je     1917c <__stdio_done+0x8c>
   1916d:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   19174:	89 04 24             	mov    %eax,(%esp)
   19177:	e8 44 fe 00 00       	call   28fc0 <fsync>
   1917c:	8b 43 18             	mov    0x18(%ebx),%eax
   1917f:	85 c0                	test   %eax,%eax
   19181:	74 08                	je     1918b <__stdio_done+0x9b>
   19183:	89 04 24             	mov    %eax,(%esp)
   19186:	e8 85 a3 00 00       	call   23510 <async_hangup>
   1918b:	8b 43 08             	mov    0x8(%ebx),%eax
   1918e:	85 c0                	test   %eax,%eax
   19190:	78 08                	js     1919a <__stdio_done+0xaa>
   19192:	89 04 24             	mov    %eax,(%esp)
   19195:	e8 56 f8 00 00       	call   289f0 <close>
   1919a:	8b 13                	mov    (%ebx),%edx
   1919c:	85 d2                	test   %edx,%edx
   1919e:	74 0e                	je     191ae <__stdio_done+0xbe>
   191a0:	8b 43 04             	mov    0x4(%ebx),%eax
   191a3:	85 c0                	test   %eax,%eax
   191a5:	74 07                	je     191ae <__stdio_done+0xbe>
   191a7:	89 10                	mov    %edx,(%eax)
   191a9:	8b 13                	mov    (%ebx),%edx
   191ab:	89 42 04             	mov    %eax,0x4(%edx)
   191ae:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   191b4:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   191bb:	81 fb 00 05 03 00    	cmp    $0x30500,%ebx
   191c1:	0f 84 39 ff ff ff    	je     19100 <__stdio_done+0x10>
   191c7:	81 fb 40 05 03 00    	cmp    $0x30540,%ebx
   191cd:	0f 84 2d ff ff ff    	je     19100 <__stdio_done+0x10>
   191d3:	81 fb 80 05 03 00    	cmp    $0x30580,%ebx
   191d9:	0f 84 21 ff ff ff    	je     19100 <__stdio_done+0x10>
   191df:	89 1c 24             	mov    %ebx,(%esp)
   191e2:	e8 f9 6f 00 00       	call   201e0 <free>
   191e7:	8b 1d 3c 05 03 00    	mov    0x3053c,%ebx
   191ed:	81 fb 38 05 03 00    	cmp    $0x30538,%ebx
   191f3:	0f 85 19 ff ff ff    	jne    19112 <__stdio_done+0x22>
   191f9:	83 c4 2c             	add    $0x2c,%esp
   191fc:	5b                   	pop    %ebx
   191fd:	5e                   	pop    %esi
   191fe:	5f                   	pop    %edi
   191ff:	5d                   	pop    %ebp
   19200:	c3                   	ret    
   19201:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   19208:	e8 c3 21 00 00       	call   1b3d0 <klog_update>
   1920d:	e9 6a ff ff ff       	jmp    1917c <__stdio_done+0x8c>
   19212:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   19218:	89 f8                	mov    %edi,%eax
   1921a:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   19221:	00 
   19222:	f7 d8                	neg    %eax
   19224:	89 c2                	mov    %eax,%edx
   19226:	89 44 24 04          	mov    %eax,0x4(%esp)
   1922a:	c1 fa 1f             	sar    $0x1f,%edx
   1922d:	89 54 24 08          	mov    %edx,0x8(%esp)
   19231:	8b 43 08             	mov    0x8(%ebx),%eax
   19234:	89 04 24             	mov    %eax,(%esp)
   19237:	e8 64 fe 00 00       	call   290a0 <lseek>
   1923c:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1923f:	48                   	dec    %eax
   19240:	0f 85 fe fe ff ff    	jne    19144 <__stdio_done+0x54>
   19246:	66 90                	xchg   %ax,%ax
   19248:	8b 53 34             	mov    0x34(%ebx),%edx
   1924b:	31 f6                	xor    %esi,%esi
   1924d:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   19250:	eb 23                	jmp    19275 <__stdio_done+0x185>
   19252:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   19258:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1925b:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1925f:	01 f0                	add    %esi,%eax
   19261:	89 04 24             	mov    %eax,(%esp)
   19264:	e8 17 21 00 00       	call   1b380 <klog_write>
   19269:	85 c0                	test   %eax,%eax
   1926b:	7e 32                	jle    1929f <__stdio_done+0x1af>
   1926d:	29 c7                	sub    %eax,%edi
   1926f:	01 c6                	add    %eax,%esi
   19271:	85 ff                	test   %edi,%edi
   19273:	74 33                	je     192a8 <__stdio_done+0x1b8>
   19275:	8b 43 0c             	mov    0xc(%ebx),%eax
   19278:	85 c0                	test   %eax,%eax
   1927a:	75 2c                	jne    192a8 <__stdio_done+0x1b8>
   1927c:	8b 43 14             	mov    0x14(%ebx),%eax
   1927f:	85 c0                	test   %eax,%eax
   19281:	75 d5                	jne    19258 <__stdio_done+0x168>
   19283:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   19286:	89 7c 24 08          	mov    %edi,0x8(%esp)
   1928a:	01 f0                	add    %esi,%eax
   1928c:	89 44 24 04          	mov    %eax,0x4(%esp)
   19290:	8b 43 08             	mov    0x8(%ebx),%eax
   19293:	89 04 24             	mov    %eax,(%esp)
   19296:	e8 45 f9 00 00       	call   28be0 <write>
   1929b:	85 c0                	test   %eax,%eax
   1929d:	7f ce                	jg     1926d <__stdio_done+0x17d>
   1929f:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   192a6:	eb c9                	jmp    19271 <__stdio_done+0x181>
   192a8:	85 f6                	test   %esi,%esi
   192aa:	0f 84 94 fe ff ff    	je     19144 <__stdio_done+0x54>
   192b0:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   192b7:	e9 88 fe ff ff       	jmp    19144 <__stdio_done+0x54>
   192bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000192c0 <setvbuf>:
   192c0:	55                   	push   %ebp
   192c1:	89 e5                	mov    %esp,%ebp
   192c3:	8b 45 08             	mov    0x8(%ebp),%eax
   192c6:	8b 4d 10             	mov    0x10(%ebp),%ecx
   192c9:	8b 55 0c             	mov    0xc(%ebp),%edx
   192cc:	89 48 20             	mov    %ecx,0x20(%eax)
   192cf:	8b 4d 14             	mov    0x14(%ebp),%ecx
   192d2:	89 50 24             	mov    %edx,0x24(%eax)
   192d5:	89 48 28             	mov    %ecx,0x28(%eax)
   192d8:	89 50 30             	mov    %edx,0x30(%eax)
   192db:	89 50 34             	mov    %edx,0x34(%eax)
   192de:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
   192e5:	5d                   	pop    %ebp
   192e6:	c3                   	ret    
   192e7:	89 f6                	mov    %esi,%esi
   192e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000192f0 <fopen>:
   192f0:	55                   	push   %ebp
   192f1:	89 e5                	mov    %esp,%ebp
   192f3:	56                   	push   %esi
   192f4:	53                   	push   %ebx
   192f5:	83 ec 10             	sub    $0x10,%esp
   192f8:	8b 45 0c             	mov    0xc(%ebp),%eax
   192fb:	8a 08                	mov    (%eax),%cl
   192fd:	84 c9                	test   %cl,%cl
   192ff:	0f 84 0b 01 00 00    	je     19410 <fopen+0x120>
   19305:	8a 50 01             	mov    0x1(%eax),%dl
   19308:	80 fa 74             	cmp    $0x74,%dl
   1930b:	0f 85 17 01 00 00    	jne    19428 <fopen+0x138>
   19311:	8a 50 02             	mov    0x2(%eax),%dl
   19314:	8d 58 02             	lea    0x2(%eax),%ebx
   19317:	31 c0                	xor    %eax,%eax
   19319:	80 fa 2b             	cmp    $0x2b,%dl
   1931c:	0f 84 1d 01 00 00    	je     1943f <fopen+0x14f>
   19322:	84 d2                	test   %dl,%dl
   19324:	0f 85 e6 00 00 00    	jne    19410 <fopen+0x120>
   1932a:	80 f9 72             	cmp    $0x72,%cl
   1932d:	0f 84 6d 01 00 00    	je     194a0 <fopen+0x1b0>
   19333:	80 f9 77             	cmp    $0x77,%cl
   19336:	0f 84 14 01 00 00    	je     19450 <fopen+0x160>
   1933c:	80 f9 61             	cmp    $0x61,%cl
   1933f:	0f 85 cb 00 00 00    	jne    19410 <fopen+0x120>
   19345:	be 49 00 00 00       	mov    $0x49,%esi
   1934a:	84 c0                	test   %al,%al
   1934c:	0f 85 5e 01 00 00    	jne    194b0 <fopen+0x1c0>
   19352:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   19359:	e8 72 6d 00 00       	call   200d0 <malloc>
   1935e:	89 c3                	mov    %eax,%ebx
   19360:	85 c0                	test   %eax,%eax
   19362:	0f 84 58 01 00 00    	je     194c0 <fopen+0x1d0>
   19368:	8b 45 08             	mov    0x8(%ebp),%eax
   1936b:	c7 44 24 08 b6 01 00 	movl   $0x1b6,0x8(%esp)
   19372:	00 
   19373:	89 74 24 04          	mov    %esi,0x4(%esp)
   19377:	89 04 24             	mov    %eax,(%esp)
   1937a:	e8 31 f5 00 00       	call   288b0 <open>
   1937f:	89 43 08             	mov    %eax,0x8(%ebx)
   19382:	85 c0                	test   %eax,%eax
   19384:	0f 88 46 01 00 00    	js     194d0 <fopen+0x1e0>
   1938a:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
   19391:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
   19398:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)
   1939f:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
   193a6:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   193ad:	83 f8 01             	cmp    $0x1,%eax
   193b0:	0f 84 aa 00 00 00    	je     19460 <fopen+0x170>
   193b6:	83 f8 02             	cmp    $0x2,%eax
   193b9:	74 08                	je     193c3 <fopen+0xd3>
   193bb:	85 c0                	test   %eax,%eax
   193bd:	0f 85 cd 00 00 00    	jne    19490 <fopen+0x1a0>
   193c3:	c7 43 20 00 00 00 00 	movl   $0x0,0x20(%ebx)
   193ca:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
   193d1:	c7 43 28 00 00 00 00 	movl   $0x0,0x28(%ebx)
   193d8:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
   193df:	c7 43 34 00 00 00 00 	movl   $0x0,0x34(%ebx)
   193e6:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   193ed:	a1 38 05 03 00       	mov    0x30538,%eax
   193f2:	c7 43 04 38 05 03 00 	movl   $0x30538,0x4(%ebx)
   193f9:	89 03                	mov    %eax,(%ebx)
   193fb:	89 1d 38 05 03 00    	mov    %ebx,0x30538
   19401:	89 58 04             	mov    %ebx,0x4(%eax)
   19404:	83 c4 10             	add    $0x10,%esp
   19407:	89 d8                	mov    %ebx,%eax
   19409:	5b                   	pop    %ebx
   1940a:	5e                   	pop    %esi
   1940b:	5d                   	pop    %ebp
   1940c:	c3                   	ret    
   1940d:	8d 76 00             	lea    0x0(%esi),%esi
   19410:	e8 cb 72 ff ff       	call   106e0 <__errno>
   19415:	c7 00 f2 ff ff ff    	movl   $0xfffffff2,(%eax)
   1941b:	31 db                	xor    %ebx,%ebx
   1941d:	83 c4 10             	add    $0x10,%esp
   19420:	89 d8                	mov    %ebx,%eax
   19422:	5b                   	pop    %ebx
   19423:	5e                   	pop    %esi
   19424:	5d                   	pop    %ebp
   19425:	c3                   	ret    
   19426:	66 90                	xchg   %ax,%ax
   19428:	8d 58 01             	lea    0x1(%eax),%ebx
   1942b:	80 fa 62             	cmp    $0x62,%dl
   1942e:	0f 84 dd fe ff ff    	je     19311 <fopen+0x21>
   19434:	31 c0                	xor    %eax,%eax
   19436:	80 fa 2b             	cmp    $0x2b,%dl
   19439:	0f 85 e3 fe ff ff    	jne    19322 <fopen+0x32>
   1943f:	8a 53 01             	mov    0x1(%ebx),%dl
   19442:	b0 01                	mov    $0x1,%al
   19444:	e9 d9 fe ff ff       	jmp    19322 <fopen+0x32>
   19449:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   19450:	3c 01                	cmp    $0x1,%al
   19452:	19 f6                	sbb    %esi,%esi
   19454:	83 e6 20             	and    $0x20,%esi
   19457:	83 c6 25             	add    $0x25,%esi
   1945a:	e9 f3 fe ff ff       	jmp    19352 <fopen+0x62>
   1945f:	90                   	nop
   19460:	c7 43 20 01 00 00 00 	movl   $0x1,0x20(%ebx)
   19467:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
   1946e:	c7 43 28 00 10 00 00 	movl   $0x1000,0x28(%ebx)
   19475:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
   1947c:	c7 43 34 00 00 00 00 	movl   $0x0,0x34(%ebx)
   19483:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1948a:	e9 5e ff ff ff       	jmp    193ed <fopen+0xfd>
   1948f:	90                   	nop
   19490:	c7 43 20 02 00 00 00 	movl   $0x2,0x20(%ebx)
   19497:	eb ce                	jmp    19467 <fopen+0x177>
   19499:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   194a0:	3c 01                	cmp    $0x1,%al
   194a2:	19 f6                	sbb    %esi,%esi
   194a4:	83 e6 f0             	and    $0xfffffff0,%esi
   194a7:	83 c6 20             	add    $0x20,%esi
   194aa:	e9 a3 fe ff ff       	jmp    19352 <fopen+0x62>
   194af:	90                   	nop
   194b0:	e8 2b 72 ff ff       	call   106e0 <__errno>
   194b5:	c7 00 f5 ff ff ff    	movl   $0xfffffff5,(%eax)
   194bb:	e9 5b ff ff ff       	jmp    1941b <fopen+0x12b>
   194c0:	e8 1b 72 ff ff       	call   106e0 <__errno>
   194c5:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   194cb:	e9 4d ff ff ff       	jmp    1941d <fopen+0x12d>
   194d0:	89 1c 24             	mov    %ebx,(%esp)
   194d3:	31 db                	xor    %ebx,%ebx
   194d5:	e8 06 6d 00 00       	call   201e0 <free>
   194da:	e9 3e ff ff ff       	jmp    1941d <fopen+0x12d>
   194df:	90                   	nop

000194e0 <fdopen>:
   194e0:	55                   	push   %ebp
   194e1:	89 e5                	mov    %esp,%ebp
   194e3:	56                   	push   %esi
   194e4:	53                   	push   %ebx
   194e5:	83 ec 10             	sub    $0x10,%esp
   194e8:	8b 75 08             	mov    0x8(%ebp),%esi
   194eb:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   194f2:	e8 d9 6b 00 00       	call   200d0 <malloc>
   194f7:	89 c3                	mov    %eax,%ebx
   194f9:	85 c0                	test   %eax,%eax
   194fb:	0f 84 c7 00 00 00    	je     195c8 <fdopen+0xe8>
   19501:	89 70 08             	mov    %esi,0x8(%eax)
   19504:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   1950b:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   19512:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
   19519:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   19520:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   19527:	83 fe 01             	cmp    $0x1,%esi
   1952a:	0f 84 88 00 00 00    	je     195b8 <fdopen+0xd8>
   19530:	83 fe 02             	cmp    $0x2,%esi
   19533:	74 04                	je     19539 <fdopen+0x59>
   19535:	85 f6                	test   %esi,%esi
   19537:	75 4f                	jne    19588 <fdopen+0xa8>
   19539:	c7 43 20 00 00 00 00 	movl   $0x0,0x20(%ebx)
   19540:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
   19547:	c7 43 28 00 00 00 00 	movl   $0x0,0x28(%ebx)
   1954e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
   19555:	c7 43 34 00 00 00 00 	movl   $0x0,0x34(%ebx)
   1955c:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   19563:	a1 38 05 03 00       	mov    0x30538,%eax
   19568:	c7 43 04 38 05 03 00 	movl   $0x30538,0x4(%ebx)
   1956f:	89 03                	mov    %eax,(%ebx)
   19571:	89 1d 38 05 03 00    	mov    %ebx,0x30538
   19577:	89 58 04             	mov    %ebx,0x4(%eax)
   1957a:	83 c4 10             	add    $0x10,%esp
   1957d:	89 d8                	mov    %ebx,%eax
   1957f:	5b                   	pop    %ebx
   19580:	5e                   	pop    %esi
   19581:	5d                   	pop    %ebp
   19582:	c3                   	ret    
   19583:	90                   	nop
   19584:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   19588:	c7 40 20 02 00 00 00 	movl   $0x2,0x20(%eax)
   1958f:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
   19596:	c7 43 28 00 10 00 00 	movl   $0x1000,0x28(%ebx)
   1959d:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
   195a4:	c7 43 34 00 00 00 00 	movl   $0x0,0x34(%ebx)
   195ab:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   195b2:	eb af                	jmp    19563 <fdopen+0x83>
   195b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   195b8:	c7 40 20 01 00 00 00 	movl   $0x1,0x20(%eax)
   195bf:	eb ce                	jmp    1958f <fdopen+0xaf>
   195c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   195c8:	e8 13 71 ff ff       	call   106e0 <__errno>
   195cd:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   195d3:	eb a5                	jmp    1957a <fdopen+0x9a>
   195d5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   195d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000195e0 <fclose>:
   195e0:	55                   	push   %ebp
   195e1:	89 e5                	mov    %esp,%ebp
   195e3:	57                   	push   %edi
   195e4:	56                   	push   %esi
   195e5:	53                   	push   %ebx
   195e6:	83 ec 2c             	sub    $0x2c,%esp
   195e9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   195ec:	8b 43 24             	mov    0x24(%ebx),%eax
   195ef:	85 c0                	test   %eax,%eax
   195f1:	74 3b                	je     1962e <fclose+0x4e>
   195f3:	8b 4b 20             	mov    0x20(%ebx),%ecx
   195f6:	85 c9                	test   %ecx,%ecx
   195f8:	74 34                	je     1962e <fclose+0x4e>
   195fa:	8b 53 0c             	mov    0xc(%ebx),%edx
   195fd:	85 d2                	test   %edx,%edx
   195ff:	75 2d                	jne    1962e <fclose+0x4e>
   19601:	8b 4b 30             	mov    0x30(%ebx),%ecx
   19604:	89 cf                	mov    %ecx,%edi
   19606:	2b 7b 34             	sub    0x34(%ebx),%edi
   19609:	74 16                	je     19621 <fclose+0x41>
   1960b:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1960e:	83 f8 02             	cmp    $0x2,%eax
   19611:	0f 84 c9 00 00 00    	je     196e0 <fclose+0x100>
   19617:	48                   	dec    %eax
   19618:	0f 84 f2 00 00 00    	je     19710 <fclose+0x130>
   1961e:	8b 43 24             	mov    0x24(%ebx),%eax
   19621:	89 43 30             	mov    %eax,0x30(%ebx)
   19624:	89 43 34             	mov    %eax,0x34(%ebx)
   19627:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1962e:	8b 7b 14             	mov    0x14(%ebx),%edi
   19631:	85 ff                	test   %edi,%edi
   19633:	0f 85 97 00 00 00    	jne    196d0 <fclose+0xf0>
   19639:	8b 43 08             	mov    0x8(%ebx),%eax
   1963c:	85 c0                	test   %eax,%eax
   1963e:	78 16                	js     19656 <fclose+0x76>
   19640:	8b 73 1c             	mov    0x1c(%ebx),%esi
   19643:	85 f6                	test   %esi,%esi
   19645:	74 0f                	je     19656 <fclose+0x76>
   19647:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   1964e:	89 04 24             	mov    %eax,(%esp)
   19651:	e8 6a f9 00 00       	call   28fc0 <fsync>
   19656:	8b 43 18             	mov    0x18(%ebx),%eax
   19659:	85 c0                	test   %eax,%eax
   1965b:	74 08                	je     19665 <fclose+0x85>
   1965d:	89 04 24             	mov    %eax,(%esp)
   19660:	e8 ab 9e 00 00       	call   23510 <async_hangup>
   19665:	8b 43 08             	mov    0x8(%ebx),%eax
   19668:	31 f6                	xor    %esi,%esi
   1966a:	85 c0                	test   %eax,%eax
   1966c:	78 0a                	js     19678 <fclose+0x98>
   1966e:	89 04 24             	mov    %eax,(%esp)
   19671:	e8 7a f3 00 00       	call   289f0 <close>
   19676:	89 c6                	mov    %eax,%esi
   19678:	8b 0b                	mov    (%ebx),%ecx
   1967a:	85 c9                	test   %ecx,%ecx
   1967c:	74 0e                	je     1968c <fclose+0xac>
   1967e:	8b 53 04             	mov    0x4(%ebx),%edx
   19681:	85 d2                	test   %edx,%edx
   19683:	74 07                	je     1968c <fclose+0xac>
   19685:	89 0a                	mov    %ecx,(%edx)
   19687:	8b 03                	mov    (%ebx),%eax
   19689:	89 50 04             	mov    %edx,0x4(%eax)
   1968c:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   19692:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   19699:	81 fb 00 05 03 00    	cmp    $0x30500,%ebx
   1969f:	74 18                	je     196b9 <fclose+0xd9>
   196a1:	81 fb 40 05 03 00    	cmp    $0x30540,%ebx
   196a7:	74 10                	je     196b9 <fclose+0xd9>
   196a9:	81 fb 80 05 03 00    	cmp    $0x30580,%ebx
   196af:	74 08                	je     196b9 <fclose+0xd9>
   196b1:	89 1c 24             	mov    %ebx,(%esp)
   196b4:	e8 27 6b 00 00       	call   201e0 <free>
   196b9:	83 fe 01             	cmp    $0x1,%esi
   196bc:	19 c0                	sbb    %eax,%eax
   196be:	83 c4 2c             	add    $0x2c,%esp
   196c1:	83 f0 ff             	xor    $0xffffffff,%eax
   196c4:	5b                   	pop    %ebx
   196c5:	5e                   	pop    %esi
   196c6:	5f                   	pop    %edi
   196c7:	5d                   	pop    %ebp
   196c8:	c3                   	ret    
   196c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   196d0:	e8 fb 1c 00 00       	call   1b3d0 <klog_update>
   196d5:	e9 7c ff ff ff       	jmp    19656 <fclose+0x76>
   196da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   196e0:	89 f8                	mov    %edi,%eax
   196e2:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   196e9:	00 
   196ea:	f7 d8                	neg    %eax
   196ec:	89 c2                	mov    %eax,%edx
   196ee:	89 44 24 04          	mov    %eax,0x4(%esp)
   196f2:	c1 fa 1f             	sar    $0x1f,%edx
   196f5:	89 54 24 08          	mov    %edx,0x8(%esp)
   196f9:	8b 43 08             	mov    0x8(%ebx),%eax
   196fc:	89 04 24             	mov    %eax,(%esp)
   196ff:	e8 9c f9 00 00       	call   290a0 <lseek>
   19704:	8b 43 2c             	mov    0x2c(%ebx),%eax
   19707:	e9 0b ff ff ff       	jmp    19617 <fclose+0x37>
   1970c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   19710:	8b 53 34             	mov    0x34(%ebx),%edx
   19713:	31 f6                	xor    %esi,%esi
   19715:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   19718:	eb 23                	jmp    1973d <fclose+0x15d>
   1971a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   19720:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   19723:	89 7c 24 04          	mov    %edi,0x4(%esp)
   19727:	01 f0                	add    %esi,%eax
   19729:	89 04 24             	mov    %eax,(%esp)
   1972c:	e8 4f 1c 00 00       	call   1b380 <klog_write>
   19731:	85 c0                	test   %eax,%eax
   19733:	7e 33                	jle    19768 <fclose+0x188>
   19735:	29 c7                	sub    %eax,%edi
   19737:	01 c6                	add    %eax,%esi
   19739:	85 ff                	test   %edi,%edi
   1973b:	74 3b                	je     19778 <fclose+0x198>
   1973d:	8b 43 0c             	mov    0xc(%ebx),%eax
   19740:	85 c0                	test   %eax,%eax
   19742:	75 34                	jne    19778 <fclose+0x198>
   19744:	8b 43 14             	mov    0x14(%ebx),%eax
   19747:	85 c0                	test   %eax,%eax
   19749:	75 d5                	jne    19720 <fclose+0x140>
   1974b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1974e:	89 7c 24 08          	mov    %edi,0x8(%esp)
   19752:	01 f0                	add    %esi,%eax
   19754:	89 44 24 04          	mov    %eax,0x4(%esp)
   19758:	8b 43 08             	mov    0x8(%ebx),%eax
   1975b:	89 04 24             	mov    %eax,(%esp)
   1975e:	e8 7d f4 00 00       	call   28be0 <write>
   19763:	eb cc                	jmp    19731 <fclose+0x151>
   19765:	8d 76 00             	lea    0x0(%esi),%esi
   19768:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   1976f:	eb c8                	jmp    19739 <fclose+0x159>
   19771:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   19778:	85 f6                	test   %esi,%esi
   1977a:	0f 84 9e fe ff ff    	je     1961e <fclose+0x3e>
   19780:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   19787:	e9 92 fe ff ff       	jmp    1961e <fclose+0x3e>
   1978c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00019790 <fread>:
   19790:	55                   	push   %ebp
   19791:	89 e5                	mov    %esp,%ebp
   19793:	57                   	push   %edi
   19794:	56                   	push   %esi
   19795:	53                   	push   %ebx
   19796:	83 ec 2c             	sub    $0x2c,%esp
   19799:	8b 7d 10             	mov    0x10(%ebp),%edi
   1979c:	8b 5d 14             	mov    0x14(%ebp),%ebx
   1979f:	85 ff                	test   %edi,%edi
   197a1:	0f 84 c9 00 00 00    	je     19870 <fread+0xe0>
   197a7:	8b 45 0c             	mov    0xc(%ebp),%eax
   197aa:	85 c0                	test   %eax,%eax
   197ac:	0f 84 be 00 00 00    	je     19870 <fread+0xe0>
   197b2:	8b 43 20             	mov    0x20(%ebx),%eax
   197b5:	85 c0                	test   %eax,%eax
   197b7:	0f 84 08 01 00 00    	je     198c5 <fread+0x135>
   197bd:	83 7b 2c 01          	cmpl   $0x1,0x2c(%ebx)
   197c1:	8b 53 24             	mov    0x24(%ebx),%edx
   197c4:	0f 84 69 01 00 00    	je     19933 <fread+0x1a3>
   197ca:	85 d2                	test   %edx,%edx
   197cc:	0f 84 b0 01 00 00    	je     19982 <fread+0x1f2>
   197d2:	8b 43 0c             	mov    0xc(%ebx),%eax
   197d5:	8b 75 0c             	mov    0xc(%ebp),%esi
   197d8:	0f af fe             	imul   %esi,%edi
   197db:	85 c0                	test   %eax,%eax
   197dd:	0f 85 93 01 00 00    	jne    19976 <fread+0x1e6>
   197e3:	8b 4b 10             	mov    0x10(%ebx),%ecx
   197e6:	85 c9                	test   %ecx,%ecx
   197e8:	0f 85 88 01 00 00    	jne    19976 <fread+0x1e6>
   197ee:	85 ff                	test   %edi,%edi
   197f0:	0f 84 80 01 00 00    	je     19976 <fread+0x1e6>
   197f6:	8b 53 34             	mov    0x34(%ebx),%edx
   197f9:	8b 75 08             	mov    0x8(%ebp),%esi
   197fc:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   19803:	90                   	nop
   19804:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   19808:	39 53 30             	cmp    %edx,0x30(%ebx)
   1980b:	74 72                	je     1987f <fread+0xef>
   1980d:	8b 43 10             	mov    0x10(%ebx),%eax
   19810:	85 c0                	test   %eax,%eax
   19812:	75 4c                	jne    19860 <fread+0xd0>
   19814:	8b 53 34             	mov    0x34(%ebx),%edx
   19817:	8b 43 30             	mov    0x30(%ebx),%eax
   1981a:	29 d0                	sub    %edx,%eax
   1981c:	89 f9                	mov    %edi,%ecx
   1981e:	39 c7                	cmp    %eax,%edi
   19820:	76 02                	jbe    19824 <fread+0x94>
   19822:	89 c1                	mov    %eax,%ecx
   19824:	85 c9                	test   %ecx,%ecx
   19826:	74 52                	je     1987a <fread+0xea>
   19828:	31 c0                	xor    %eax,%eax
   1982a:	eb 07                	jmp    19833 <fread+0xa3>
   1982c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   19830:	8b 53 34             	mov    0x34(%ebx),%edx
   19833:	8a 14 02             	mov    (%edx,%eax,1),%dl
   19836:	88 14 06             	mov    %dl,(%esi,%eax,1)
   19839:	40                   	inc    %eax
   1983a:	39 c8                	cmp    %ecx,%eax
   1983c:	75 f2                	jne    19830 <fread+0xa0>
   1983e:	8b 53 34             	mov    0x34(%ebx),%edx
   19841:	8b 4b 0c             	mov    0xc(%ebx),%ecx
   19844:	01 c2                	add    %eax,%edx
   19846:	01 c6                	add    %eax,%esi
   19848:	29 c7                	sub    %eax,%edi
   1984a:	01 45 e4             	add    %eax,-0x1c(%ebp)
   1984d:	89 53 34             	mov    %edx,0x34(%ebx)
   19850:	85 c9                	test   %ecx,%ecx
   19852:	75 0c                	jne    19860 <fread+0xd0>
   19854:	8b 43 10             	mov    0x10(%ebx),%eax
   19857:	85 c0                	test   %eax,%eax
   19859:	75 05                	jne    19860 <fread+0xd0>
   1985b:	85 ff                	test   %edi,%edi
   1985d:	75 a9                	jne    19808 <fread+0x78>
   1985f:	90                   	nop
   19860:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   19863:	31 d2                	xor    %edx,%edx
   19865:	f7 75 0c             	divl   0xc(%ebp)
   19868:	83 c4 2c             	add    $0x2c,%esp
   1986b:	5b                   	pop    %ebx
   1986c:	5e                   	pop    %esi
   1986d:	5f                   	pop    %edi
   1986e:	5d                   	pop    %ebp
   1986f:	c3                   	ret    
   19870:	31 c0                	xor    %eax,%eax
   19872:	83 c4 2c             	add    $0x2c,%esp
   19875:	5b                   	pop    %ebx
   19876:	5e                   	pop    %esi
   19877:	5f                   	pop    %edi
   19878:	5d                   	pop    %ebp
   19879:	c3                   	ret    
   1987a:	89 53 34             	mov    %edx,0x34(%ebx)
   1987d:	eb d5                	jmp    19854 <fread+0xc4>
   1987f:	8b 43 24             	mov    0x24(%ebx),%eax
   19882:	8b 53 28             	mov    0x28(%ebx),%edx
   19885:	89 43 34             	mov    %eax,0x34(%ebx)
   19888:	89 43 30             	mov    %eax,0x30(%ebx)
   1988b:	89 54 24 08          	mov    %edx,0x8(%esp)
   1988f:	89 44 24 04          	mov    %eax,0x4(%esp)
   19893:	8b 43 08             	mov    0x8(%ebx),%eax
   19896:	89 04 24             	mov    %eax,(%esp)
   19899:	e8 32 f2 00 00       	call   28ad0 <read>
   1989e:	83 f8 00             	cmp    $0x0,%eax
   198a1:	0f 8c c3 00 00 00    	jl     1996a <fread+0x1da>
   198a7:	74 6f                	je     19918 <fread+0x188>
   198a9:	8b 53 30             	mov    0x30(%ebx),%edx
   198ac:	c7 43 2c 02 00 00 00 	movl   $0x2,0x2c(%ebx)
   198b3:	01 c2                	add    %eax,%edx
   198b5:	8b 4b 0c             	mov    0xc(%ebx),%ecx
   198b8:	89 53 30             	mov    %edx,0x30(%ebx)
   198bb:	85 c9                	test   %ecx,%ecx
   198bd:	0f 84 4a ff ff ff    	je     1980d <fread+0x7d>
   198c3:	eb 9b                	jmp    19860 <fread+0xd0>
   198c5:	8b 45 0c             	mov    0xc(%ebp),%eax
   198c8:	31 f6                	xor    %esi,%esi
   198ca:	0f af f8             	imul   %eax,%edi
   198cd:	8d 76 00             	lea    0x0(%esi),%esi
   198d0:	85 ff                	test   %edi,%edi
   198d2:	74 38                	je     1990c <fread+0x17c>
   198d4:	8b 43 0c             	mov    0xc(%ebx),%eax
   198d7:	85 c0                	test   %eax,%eax
   198d9:	75 31                	jne    1990c <fread+0x17c>
   198db:	8b 43 10             	mov    0x10(%ebx),%eax
   198de:	85 c0                	test   %eax,%eax
   198e0:	75 2a                	jne    1990c <fread+0x17c>
   198e2:	8b 45 08             	mov    0x8(%ebp),%eax
   198e5:	89 7c 24 08          	mov    %edi,0x8(%esp)
   198e9:	01 f0                	add    %esi,%eax
   198eb:	89 44 24 04          	mov    %eax,0x4(%esp)
   198ef:	8b 43 08             	mov    0x8(%ebx),%eax
   198f2:	89 04 24             	mov    %eax,(%esp)
   198f5:	e8 d6 f1 00 00       	call   28ad0 <read>
   198fa:	83 f8 00             	cmp    $0x0,%eax
   198fd:	7c 2b                	jl     1992a <fread+0x19a>
   198ff:	75 23                	jne    19924 <fread+0x194>
   19901:	c7 43 10 01 00 00 00 	movl   $0x1,0x10(%ebx)
   19908:	85 ff                	test   %edi,%edi
   1990a:	75 c8                	jne    198d4 <fread+0x144>
   1990c:	89 f0                	mov    %esi,%eax
   1990e:	31 d2                	xor    %edx,%edx
   19910:	f7 75 0c             	divl   0xc(%ebp)
   19913:	e9 5a ff ff ff       	jmp    19872 <fread+0xe2>
   19918:	c7 43 10 01 00 00 00 	movl   $0x1,0x10(%ebx)
   1991f:	8b 4b 0c             	mov    0xc(%ebx),%ecx
   19922:	eb 97                	jmp    198bb <fread+0x12b>
   19924:	29 c7                	sub    %eax,%edi
   19926:	01 c6                	add    %eax,%esi
   19928:	eb a6                	jmp    198d0 <fread+0x140>
   1992a:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   19931:	eb 9d                	jmp    198d0 <fread+0x140>
   19933:	85 d2                	test   %edx,%edx
   19935:	74 4b                	je     19982 <fread+0x1f2>
   19937:	8b 43 0c             	mov    0xc(%ebx),%eax
   1993a:	85 c0                	test   %eax,%eax
   1993c:	75 38                	jne    19976 <fread+0x1e6>
   1993e:	8b 43 34             	mov    0x34(%ebx),%eax
   19941:	8b 4b 30             	mov    0x30(%ebx),%ecx
   19944:	29 c1                	sub    %eax,%ecx
   19946:	74 10                	je     19958 <fread+0x1c8>
   19948:	ba 01 00 00 00       	mov    $0x1,%edx
   1994d:	89 1c 24             	mov    %ebx,(%esp)
   19950:	e8 3b f4 ff ff       	call   18d90 <_fwrite>
   19955:	8b 53 24             	mov    0x24(%ebx),%edx
   19958:	89 53 30             	mov    %edx,0x30(%ebx)
   1995b:	89 53 34             	mov    %edx,0x34(%ebx)
   1995e:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   19965:	e9 60 fe ff ff       	jmp    197ca <fread+0x3a>
   1996a:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   19971:	e9 ea fe ff ff       	jmp    19860 <fread+0xd0>
   19976:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   1997d:	e9 de fe ff ff       	jmp    19860 <fread+0xd0>
   19982:	8b 43 28             	mov    0x28(%ebx),%eax
   19985:	89 04 24             	mov    %eax,(%esp)
   19988:	e8 43 67 00 00       	call   200d0 <malloc>
   1998d:	89 43 24             	mov    %eax,0x24(%ebx)
   19990:	85 c0                	test   %eax,%eax
   19992:	74 0b                	je     1999f <fread+0x20f>
   19994:	89 43 30             	mov    %eax,0x30(%ebx)
   19997:	89 43 34             	mov    %eax,0x34(%ebx)
   1999a:	e9 33 fe ff ff       	jmp    197d2 <fread+0x42>
   1999f:	e8 3c 6d ff ff       	call   106e0 <__errno>
   199a4:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   199aa:	31 c0                	xor    %eax,%eax
   199ac:	e9 c1 fe ff ff       	jmp    19872 <fread+0xe2>
   199b1:	eb 0d                	jmp    199c0 <fgetc>
   199b3:	90                   	nop
   199b4:	90                   	nop
   199b5:	90                   	nop
   199b6:	90                   	nop
   199b7:	90                   	nop
   199b8:	90                   	nop
   199b9:	90                   	nop
   199ba:	90                   	nop
   199bb:	90                   	nop
   199bc:	90                   	nop
   199bd:	90                   	nop
   199be:	90                   	nop
   199bf:	90                   	nop

000199c0 <fgetc>:
   199c0:	55                   	push   %ebp
   199c1:	89 e5                	mov    %esp,%ebp
   199c3:	57                   	push   %edi
   199c4:	56                   	push   %esi
   199c5:	53                   	push   %ebx
   199c6:	83 ec 3c             	sub    $0x3c,%esp
   199c9:	8b 1d bc 06 03 00    	mov    0x306bc,%ebx
   199cf:	85 db                	test   %ebx,%ebx
   199d1:	74 6a                	je     19a3d <fgetc+0x7d>
   199d3:	8b 43 24             	mov    0x24(%ebx),%eax
   199d6:	85 c0                	test   %eax,%eax
   199d8:	74 3b                	je     19a15 <fgetc+0x55>
   199da:	8b 4b 20             	mov    0x20(%ebx),%ecx
   199dd:	85 c9                	test   %ecx,%ecx
   199df:	74 34                	je     19a15 <fgetc+0x55>
   199e1:	8b 53 0c             	mov    0xc(%ebx),%edx
   199e4:	85 d2                	test   %edx,%edx
   199e6:	75 2d                	jne    19a15 <fgetc+0x55>
   199e8:	8b 4b 30             	mov    0x30(%ebx),%ecx
   199eb:	89 cf                	mov    %ecx,%edi
   199ed:	2b 7b 34             	sub    0x34(%ebx),%edi
   199f0:	74 16                	je     19a08 <fgetc+0x48>
   199f2:	8b 43 2c             	mov    0x2c(%ebx),%eax
   199f5:	83 f8 02             	cmp    $0x2,%eax
   199f8:	0f 84 eb 01 00 00    	je     19be9 <fgetc+0x229>
   199fe:	48                   	dec    %eax
   199ff:	0f 84 88 01 00 00    	je     19b8d <fgetc+0x1cd>
   19a05:	8b 43 24             	mov    0x24(%ebx),%eax
   19a08:	89 43 30             	mov    %eax,0x30(%ebx)
   19a0b:	89 43 34             	mov    %eax,0x34(%ebx)
   19a0e:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   19a15:	8b 7b 14             	mov    0x14(%ebx),%edi
   19a18:	85 ff                	test   %edi,%edi
   19a1a:	0f 85 c8 00 00 00    	jne    19ae8 <fgetc+0x128>
   19a20:	8b 43 08             	mov    0x8(%ebx),%eax
   19a23:	85 c0                	test   %eax,%eax
   19a25:	78 16                	js     19a3d <fgetc+0x7d>
   19a27:	8b 73 1c             	mov    0x1c(%ebx),%esi
   19a2a:	85 f6                	test   %esi,%esi
   19a2c:	74 0f                	je     19a3d <fgetc+0x7d>
   19a2e:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   19a35:	89 04 24             	mov    %eax,(%esp)
   19a38:	e8 83 f5 00 00       	call   28fc0 <fsync>
   19a3d:	8b 1d b8 06 03 00    	mov    0x306b8,%ebx
   19a43:	85 db                	test   %ebx,%ebx
   19a45:	74 66                	je     19aad <fgetc+0xed>
   19a47:	8b 43 24             	mov    0x24(%ebx),%eax
   19a4a:	85 c0                	test   %eax,%eax
   19a4c:	74 3b                	je     19a89 <fgetc+0xc9>
   19a4e:	8b 4b 20             	mov    0x20(%ebx),%ecx
   19a51:	85 c9                	test   %ecx,%ecx
   19a53:	74 34                	je     19a89 <fgetc+0xc9>
   19a55:	8b 53 0c             	mov    0xc(%ebx),%edx
   19a58:	85 d2                	test   %edx,%edx
   19a5a:	75 2d                	jne    19a89 <fgetc+0xc9>
   19a5c:	8b 4b 30             	mov    0x30(%ebx),%ecx
   19a5f:	89 cf                	mov    %ecx,%edi
   19a61:	2b 7b 34             	sub    0x34(%ebx),%edi
   19a64:	74 16                	je     19a7c <fgetc+0xbc>
   19a66:	8b 43 2c             	mov    0x2c(%ebx),%eax
   19a69:	83 f8 02             	cmp    $0x2,%eax
   19a6c:	0f 84 ef 00 00 00    	je     19b61 <fgetc+0x1a1>
   19a72:	48                   	dec    %eax
   19a73:	0f 84 84 00 00 00    	je     19afd <fgetc+0x13d>
   19a79:	8b 43 24             	mov    0x24(%ebx),%eax
   19a7c:	89 43 30             	mov    %eax,0x30(%ebx)
   19a7f:	89 43 34             	mov    %eax,0x34(%ebx)
   19a82:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   19a89:	8b 4b 14             	mov    0x14(%ebx),%ecx
   19a8c:	85 c9                	test   %ecx,%ecx
   19a8e:	75 50                	jne    19ae0 <fgetc+0x120>
   19a90:	8b 43 08             	mov    0x8(%ebx),%eax
   19a93:	85 c0                	test   %eax,%eax
   19a95:	78 16                	js     19aad <fgetc+0xed>
   19a97:	8b 53 1c             	mov    0x1c(%ebx),%edx
   19a9a:	85 d2                	test   %edx,%edx
   19a9c:	74 0f                	je     19aad <fgetc+0xed>
   19a9e:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   19aa5:	89 04 24             	mov    %eax,(%esp)
   19aa8:	e8 13 f5 00 00       	call   28fc0 <fsync>
   19aad:	8b 45 08             	mov    0x8(%ebp),%eax
   19ab0:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   19ab7:	00 
   19ab8:	89 44 24 0c          	mov    %eax,0xc(%esp)
   19abc:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   19abf:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   19ac6:	00 
   19ac7:	89 04 24             	mov    %eax,(%esp)
   19aca:	e8 c1 fc ff ff       	call   19790 <fread>
   19acf:	85 c0                	test   %eax,%eax
   19ad1:	74 25                	je     19af8 <fgetc+0x138>
   19ad3:	0f be 45 e4          	movsbl -0x1c(%ebp),%eax
   19ad7:	83 c4 3c             	add    $0x3c,%esp
   19ada:	5b                   	pop    %ebx
   19adb:	5e                   	pop    %esi
   19adc:	5f                   	pop    %edi
   19add:	5d                   	pop    %ebp
   19ade:	c3                   	ret    
   19adf:	90                   	nop
   19ae0:	e8 eb 18 00 00       	call   1b3d0 <klog_update>
   19ae5:	eb c6                	jmp    19aad <fgetc+0xed>
   19ae7:	90                   	nop
   19ae8:	e8 e3 18 00 00       	call   1b3d0 <klog_update>
   19aed:	e9 4b ff ff ff       	jmp    19a3d <fgetc+0x7d>
   19af2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   19af8:	83 c8 ff             	or     $0xffffffff,%eax
   19afb:	eb da                	jmp    19ad7 <fgetc+0x117>
   19afd:	8b 53 34             	mov    0x34(%ebx),%edx
   19b00:	31 f6                	xor    %esi,%esi
   19b02:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   19b05:	eb 22                	jmp    19b29 <fgetc+0x169>
   19b07:	90                   	nop
   19b08:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   19b0b:	89 7c 24 04          	mov    %edi,0x4(%esp)
   19b0f:	01 f0                	add    %esi,%eax
   19b11:	89 04 24             	mov    %eax,(%esp)
   19b14:	e8 67 18 00 00       	call   1b380 <klog_write>
   19b19:	85 c0                	test   %eax,%eax
   19b1b:	7e 3b                	jle    19b58 <fgetc+0x198>
   19b1d:	29 c7                	sub    %eax,%edi
   19b1f:	01 c6                	add    %eax,%esi
   19b21:	85 ff                	test   %edi,%edi
   19b23:	0f 84 00 01 00 00    	je     19c29 <fgetc+0x269>
   19b29:	8b 43 0c             	mov    0xc(%ebx),%eax
   19b2c:	85 c0                	test   %eax,%eax
   19b2e:	0f 85 f5 00 00 00    	jne    19c29 <fgetc+0x269>
   19b34:	8b 43 14             	mov    0x14(%ebx),%eax
   19b37:	85 c0                	test   %eax,%eax
   19b39:	75 cd                	jne    19b08 <fgetc+0x148>
   19b3b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   19b3e:	89 7c 24 08          	mov    %edi,0x8(%esp)
   19b42:	01 f0                	add    %esi,%eax
   19b44:	89 44 24 04          	mov    %eax,0x4(%esp)
   19b48:	8b 43 08             	mov    0x8(%ebx),%eax
   19b4b:	89 04 24             	mov    %eax,(%esp)
   19b4e:	e8 8d f0 00 00       	call   28be0 <write>
   19b53:	eb c4                	jmp    19b19 <fgetc+0x159>
   19b55:	8d 76 00             	lea    0x0(%esi),%esi
   19b58:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   19b5f:	eb c0                	jmp    19b21 <fgetc+0x161>
   19b61:	89 f8                	mov    %edi,%eax
   19b63:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   19b6a:	00 
   19b6b:	f7 d8                	neg    %eax
   19b6d:	89 c2                	mov    %eax,%edx
   19b6f:	89 44 24 04          	mov    %eax,0x4(%esp)
   19b73:	c1 fa 1f             	sar    $0x1f,%edx
   19b76:	89 54 24 08          	mov    %edx,0x8(%esp)
   19b7a:	8b 43 08             	mov    0x8(%ebx),%eax
   19b7d:	89 04 24             	mov    %eax,(%esp)
   19b80:	e8 1b f5 00 00       	call   290a0 <lseek>
   19b85:	8b 43 2c             	mov    0x2c(%ebx),%eax
   19b88:	e9 e5 fe ff ff       	jmp    19a72 <fgetc+0xb2>
   19b8d:	8b 53 34             	mov    0x34(%ebx),%edx
   19b90:	31 f6                	xor    %esi,%esi
   19b92:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   19b95:	eb 1e                	jmp    19bb5 <fgetc+0x1f5>
   19b97:	90                   	nop
   19b98:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   19b9b:	89 7c 24 04          	mov    %edi,0x4(%esp)
   19b9f:	01 f0                	add    %esi,%eax
   19ba1:	89 04 24             	mov    %eax,(%esp)
   19ba4:	e8 d7 17 00 00       	call   1b380 <klog_write>
   19ba9:	85 c0                	test   %eax,%eax
   19bab:	7e 33                	jle    19be0 <fgetc+0x220>
   19bad:	29 c7                	sub    %eax,%edi
   19baf:	01 c6                	add    %eax,%esi
   19bb1:	85 ff                	test   %edi,%edi
   19bb3:	74 60                	je     19c15 <fgetc+0x255>
   19bb5:	8b 43 0c             	mov    0xc(%ebx),%eax
   19bb8:	85 c0                	test   %eax,%eax
   19bba:	75 59                	jne    19c15 <fgetc+0x255>
   19bbc:	8b 43 14             	mov    0x14(%ebx),%eax
   19bbf:	85 c0                	test   %eax,%eax
   19bc1:	75 d5                	jne    19b98 <fgetc+0x1d8>
   19bc3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   19bc6:	89 7c 24 08          	mov    %edi,0x8(%esp)
   19bca:	01 f0                	add    %esi,%eax
   19bcc:	89 44 24 04          	mov    %eax,0x4(%esp)
   19bd0:	8b 43 08             	mov    0x8(%ebx),%eax
   19bd3:	89 04 24             	mov    %eax,(%esp)
   19bd6:	e8 05 f0 00 00       	call   28be0 <write>
   19bdb:	eb cc                	jmp    19ba9 <fgetc+0x1e9>
   19bdd:	8d 76 00             	lea    0x0(%esi),%esi
   19be0:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   19be7:	eb c8                	jmp    19bb1 <fgetc+0x1f1>
   19be9:	89 f8                	mov    %edi,%eax
   19beb:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   19bf2:	00 
   19bf3:	f7 d8                	neg    %eax
   19bf5:	89 c2                	mov    %eax,%edx
   19bf7:	89 44 24 04          	mov    %eax,0x4(%esp)
   19bfb:	c1 fa 1f             	sar    $0x1f,%edx
   19bfe:	89 54 24 08          	mov    %edx,0x8(%esp)
   19c02:	8b 43 08             	mov    0x8(%ebx),%eax
   19c05:	89 04 24             	mov    %eax,(%esp)
   19c08:	e8 93 f4 00 00       	call   290a0 <lseek>
   19c0d:	8b 43 2c             	mov    0x2c(%ebx),%eax
   19c10:	e9 e9 fd ff ff       	jmp    199fe <fgetc+0x3e>
   19c15:	85 f6                	test   %esi,%esi
   19c17:	0f 84 e8 fd ff ff    	je     19a05 <fgetc+0x45>
   19c1d:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   19c24:	e9 dc fd ff ff       	jmp    19a05 <fgetc+0x45>
   19c29:	85 f6                	test   %esi,%esi
   19c2b:	0f 84 48 fe ff ff    	je     19a79 <fgetc+0xb9>
   19c31:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   19c38:	e9 3c fe ff ff       	jmp    19a79 <fgetc+0xb9>
   19c3d:	8d 76 00             	lea    0x0(%esi),%esi

00019c40 <fgets>:
   19c40:	55                   	push   %ebp
   19c41:	89 e5                	mov    %esp,%ebp
   19c43:	57                   	push   %edi
   19c44:	56                   	push   %esi
   19c45:	53                   	push   %ebx
   19c46:	83 ec 4c             	sub    $0x4c,%esp
   19c49:	31 f6                	xor    %esi,%esi
   19c4b:	8b 45 0c             	mov    0xc(%ebp),%eax
   19c4e:	8d 7d e4             	lea    -0x1c(%ebp),%edi
   19c51:	48                   	dec    %eax
   19c52:	89 45 d4             	mov    %eax,-0x2c(%ebp)
   19c55:	e9 cf 00 00 00       	jmp    19d29 <fgets+0xe9>
   19c5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   19c60:	8b 43 08             	mov    0x8(%ebx),%eax
   19c63:	85 c0                	test   %eax,%eax
   19c65:	78 16                	js     19c7d <fgets+0x3d>
   19c67:	8b 53 1c             	mov    0x1c(%ebx),%edx
   19c6a:	85 d2                	test   %edx,%edx
   19c6c:	74 0f                	je     19c7d <fgets+0x3d>
   19c6e:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   19c75:	89 04 24             	mov    %eax,(%esp)
   19c78:	e8 43 f3 00 00       	call   28fc0 <fsync>
   19c7d:	8b 1d b8 06 03 00    	mov    0x306b8,%ebx
   19c83:	85 db                	test   %ebx,%ebx
   19c85:	74 68                	je     19cef <fgets+0xaf>
   19c87:	8b 43 24             	mov    0x24(%ebx),%eax
   19c8a:	85 c0                	test   %eax,%eax
   19c8c:	74 39                	je     19cc7 <fgets+0x87>
   19c8e:	8b 4b 20             	mov    0x20(%ebx),%ecx
   19c91:	85 c9                	test   %ecx,%ecx
   19c93:	74 32                	je     19cc7 <fgets+0x87>
   19c95:	8b 53 0c             	mov    0xc(%ebx),%edx
   19c98:	85 d2                	test   %edx,%edx
   19c9a:	75 2b                	jne    19cc7 <fgets+0x87>
   19c9c:	8b 4b 30             	mov    0x30(%ebx),%ecx
   19c9f:	2b 4b 34             	sub    0x34(%ebx),%ecx
   19ca2:	74 16                	je     19cba <fgets+0x7a>
   19ca4:	8b 43 2c             	mov    0x2c(%ebx),%eax
   19ca7:	83 f8 02             	cmp    $0x2,%eax
   19caa:	0f 84 e0 01 00 00    	je     19e90 <fgets+0x250>
   19cb0:	48                   	dec    %eax
   19cb1:	0f 84 11 02 00 00    	je     19ec8 <fgets+0x288>
   19cb7:	8b 43 24             	mov    0x24(%ebx),%eax
   19cba:	89 43 30             	mov    %eax,0x30(%ebx)
   19cbd:	89 43 34             	mov    %eax,0x34(%ebx)
   19cc0:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   19cc7:	8b 4b 14             	mov    0x14(%ebx),%ecx
   19cca:	85 c9                	test   %ecx,%ecx
   19ccc:	0f 85 de 00 00 00    	jne    19db0 <fgets+0x170>
   19cd2:	8b 43 08             	mov    0x8(%ebx),%eax
   19cd5:	85 c0                	test   %eax,%eax
   19cd7:	78 16                	js     19cef <fgets+0xaf>
   19cd9:	8b 53 1c             	mov    0x1c(%ebx),%edx
   19cdc:	85 d2                	test   %edx,%edx
   19cde:	74 0f                	je     19cef <fgets+0xaf>
   19ce0:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   19ce7:	89 04 24             	mov    %eax,(%esp)
   19cea:	e8 d1 f2 00 00       	call   28fc0 <fsync>
   19cef:	8b 4d 10             	mov    0x10(%ebp),%ecx
   19cf2:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   19cf9:	00 
   19cfa:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   19cfe:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   19d05:	00 
   19d06:	89 3c 24             	mov    %edi,(%esp)
   19d09:	e8 82 fa ff ff       	call   19790 <fread>
   19d0e:	85 c0                	test   %eax,%eax
   19d10:	74 7e                	je     19d90 <fgets+0x150>
   19d12:	8a 45 e4             	mov    -0x1c(%ebp),%al
   19d15:	0f be d0             	movsbl %al,%edx
   19d18:	83 fa ff             	cmp    $0xffffffff,%edx
   19d1b:	74 73                	je     19d90 <fgets+0x150>
   19d1d:	8b 4d 08             	mov    0x8(%ebp),%ecx
   19d20:	88 04 31             	mov    %al,(%ecx,%esi,1)
   19d23:	46                   	inc    %esi
   19d24:	83 fa 0a             	cmp    $0xa,%edx
   19d27:	74 67                	je     19d90 <fgets+0x150>
   19d29:	3b 75 d4             	cmp    -0x2c(%ebp),%esi
   19d2c:	7d 62                	jge    19d90 <fgets+0x150>
   19d2e:	8b 1d bc 06 03 00    	mov    0x306bc,%ebx
   19d34:	85 db                	test   %ebx,%ebx
   19d36:	0f 84 41 ff ff ff    	je     19c7d <fgets+0x3d>
   19d3c:	8b 43 24             	mov    0x24(%ebx),%eax
   19d3f:	85 c0                	test   %eax,%eax
   19d41:	74 35                	je     19d78 <fgets+0x138>
   19d43:	8b 4b 20             	mov    0x20(%ebx),%ecx
   19d46:	85 c9                	test   %ecx,%ecx
   19d48:	74 2e                	je     19d78 <fgets+0x138>
   19d4a:	8b 53 0c             	mov    0xc(%ebx),%edx
   19d4d:	85 d2                	test   %edx,%edx
   19d4f:	75 27                	jne    19d78 <fgets+0x138>
   19d51:	8b 4b 30             	mov    0x30(%ebx),%ecx
   19d54:	2b 4b 34             	sub    0x34(%ebx),%ecx
   19d57:	74 12                	je     19d6b <fgets+0x12b>
   19d59:	8b 43 2c             	mov    0x2c(%ebx),%eax
   19d5c:	83 f8 02             	cmp    $0x2,%eax
   19d5f:	74 77                	je     19dd8 <fgets+0x198>
   19d61:	48                   	dec    %eax
   19d62:	0f 84 a8 00 00 00    	je     19e10 <fgets+0x1d0>
   19d68:	8b 43 24             	mov    0x24(%ebx),%eax
   19d6b:	89 43 30             	mov    %eax,0x30(%ebx)
   19d6e:	89 43 34             	mov    %eax,0x34(%ebx)
   19d71:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   19d78:	8b 4b 14             	mov    0x14(%ebx),%ecx
   19d7b:	85 c9                	test   %ecx,%ecx
   19d7d:	0f 84 dd fe ff ff    	je     19c60 <fgets+0x20>
   19d83:	e8 48 16 00 00       	call   1b3d0 <klog_update>
   19d88:	e9 f0 fe ff ff       	jmp    19c7d <fgets+0x3d>
   19d8d:	8d 76 00             	lea    0x0(%esi),%esi
   19d90:	8b 4d 10             	mov    0x10(%ebp),%ecx
   19d93:	8b 59 0c             	mov    0xc(%ecx),%ebx
   19d96:	85 db                	test   %ebx,%ebx
   19d98:	75 26                	jne    19dc0 <fgets+0x180>
   19d9a:	85 f6                	test   %esi,%esi
   19d9c:	74 22                	je     19dc0 <fgets+0x180>
   19d9e:	8b 45 08             	mov    0x8(%ebp),%eax
   19da1:	c6 04 30 00          	movb   $0x0,(%eax,%esi,1)
   19da5:	83 c4 4c             	add    $0x4c,%esp
   19da8:	5b                   	pop    %ebx
   19da9:	5e                   	pop    %esi
   19daa:	5f                   	pop    %edi
   19dab:	5d                   	pop    %ebp
   19dac:	c3                   	ret    
   19dad:	8d 76 00             	lea    0x0(%esi),%esi
   19db0:	e8 1b 16 00 00       	call   1b3d0 <klog_update>
   19db5:	e9 35 ff ff ff       	jmp    19cef <fgets+0xaf>
   19dba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   19dc0:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)
   19dc7:	8b 45 08             	mov    0x8(%ebp),%eax
   19dca:	83 c4 4c             	add    $0x4c,%esp
   19dcd:	5b                   	pop    %ebx
   19dce:	5e                   	pop    %esi
   19dcf:	5f                   	pop    %edi
   19dd0:	5d                   	pop    %ebp
   19dd1:	c3                   	ret    
   19dd2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   19dd8:	89 c8                	mov    %ecx,%eax
   19dda:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   19de1:	00 
   19de2:	f7 d8                	neg    %eax
   19de4:	89 c2                	mov    %eax,%edx
   19de6:	89 44 24 04          	mov    %eax,0x4(%esp)
   19dea:	c1 fa 1f             	sar    $0x1f,%edx
   19ded:	89 54 24 08          	mov    %edx,0x8(%esp)
   19df1:	8b 43 08             	mov    0x8(%ebx),%eax
   19df4:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
   19df7:	89 04 24             	mov    %eax,(%esp)
   19dfa:	e8 a1 f2 00 00       	call   290a0 <lseek>
   19dff:	8b 43 2c             	mov    0x2c(%ebx),%eax
   19e02:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
   19e05:	e9 57 ff ff ff       	jmp    19d61 <fgets+0x121>
   19e0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   19e10:	8b 53 34             	mov    0x34(%ebx),%edx
   19e13:	89 75 c8             	mov    %esi,-0x38(%ebp)
   19e16:	89 55 cc             	mov    %edx,-0x34(%ebp)
   19e19:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
   19e20:	89 ce                	mov    %ecx,%esi
   19e22:	eb 2e                	jmp    19e52 <fgets+0x212>
   19e24:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   19e28:	8b 45 cc             	mov    -0x34(%ebp),%eax
   19e2b:	8b 55 d0             	mov    -0x30(%ebp),%edx
   19e2e:	01 d0                	add    %edx,%eax
   19e30:	89 74 24 04          	mov    %esi,0x4(%esp)
   19e34:	89 04 24             	mov    %eax,(%esp)
   19e37:	e8 44 15 00 00       	call   1b380 <klog_write>
   19e3c:	85 c0                	test   %eax,%eax
   19e3e:	7e 43                	jle    19e83 <fgets+0x243>
   19e40:	8b 55 d0             	mov    -0x30(%ebp),%edx
   19e43:	29 c6                	sub    %eax,%esi
   19e45:	01 c2                	add    %eax,%edx
   19e47:	89 55 d0             	mov    %edx,-0x30(%ebp)
   19e4a:	85 f6                	test   %esi,%esi
   19e4c:	0f 84 04 01 00 00    	je     19f56 <fgets+0x316>
   19e52:	8b 43 0c             	mov    0xc(%ebx),%eax
   19e55:	85 c0                	test   %eax,%eax
   19e57:	0f 85 f9 00 00 00    	jne    19f56 <fgets+0x316>
   19e5d:	8b 4b 14             	mov    0x14(%ebx),%ecx
   19e60:	85 c9                	test   %ecx,%ecx
   19e62:	75 c4                	jne    19e28 <fgets+0x1e8>
   19e64:	8b 45 cc             	mov    -0x34(%ebp),%eax
   19e67:	8b 4d d0             	mov    -0x30(%ebp),%ecx
   19e6a:	01 c8                	add    %ecx,%eax
   19e6c:	89 74 24 08          	mov    %esi,0x8(%esp)
   19e70:	89 44 24 04          	mov    %eax,0x4(%esp)
   19e74:	8b 43 08             	mov    0x8(%ebx),%eax
   19e77:	89 04 24             	mov    %eax,(%esp)
   19e7a:	e8 61 ed 00 00       	call   28be0 <write>
   19e7f:	85 c0                	test   %eax,%eax
   19e81:	7f bd                	jg     19e40 <fgets+0x200>
   19e83:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   19e8a:	eb be                	jmp    19e4a <fgets+0x20a>
   19e8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   19e90:	89 c8                	mov    %ecx,%eax
   19e92:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   19e99:	00 
   19e9a:	f7 d8                	neg    %eax
   19e9c:	89 c2                	mov    %eax,%edx
   19e9e:	89 44 24 04          	mov    %eax,0x4(%esp)
   19ea2:	c1 fa 1f             	sar    $0x1f,%edx
   19ea5:	89 54 24 08          	mov    %edx,0x8(%esp)
   19ea9:	8b 43 08             	mov    0x8(%ebx),%eax
   19eac:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
   19eaf:	89 04 24             	mov    %eax,(%esp)
   19eb2:	e8 e9 f1 00 00       	call   290a0 <lseek>
   19eb7:	8b 43 2c             	mov    0x2c(%ebx),%eax
   19eba:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
   19ebd:	e9 ee fd ff ff       	jmp    19cb0 <fgets+0x70>
   19ec2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   19ec8:	8b 53 34             	mov    0x34(%ebx),%edx
   19ecb:	89 75 c8             	mov    %esi,-0x38(%ebp)
   19ece:	89 55 cc             	mov    %edx,-0x34(%ebp)
   19ed1:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
   19ed8:	89 ce                	mov    %ecx,%esi
   19eda:	eb 2a                	jmp    19f06 <fgets+0x2c6>
   19edc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   19ee0:	8b 45 cc             	mov    -0x34(%ebp),%eax
   19ee3:	8b 55 d0             	mov    -0x30(%ebp),%edx
   19ee6:	01 d0                	add    %edx,%eax
   19ee8:	89 74 24 04          	mov    %esi,0x4(%esp)
   19eec:	89 04 24             	mov    %eax,(%esp)
   19eef:	e8 8c 14 00 00       	call   1b380 <klog_write>
   19ef4:	85 c0                	test   %eax,%eax
   19ef6:	7e 3b                	jle    19f33 <fgets+0x2f3>
   19ef8:	8b 55 d0             	mov    -0x30(%ebp),%edx
   19efb:	29 c6                	sub    %eax,%esi
   19efd:	01 c2                	add    %eax,%edx
   19eff:	89 55 d0             	mov    %edx,-0x30(%ebp)
   19f02:	85 f6                	test   %esi,%esi
   19f04:	74 36                	je     19f3c <fgets+0x2fc>
   19f06:	8b 43 0c             	mov    0xc(%ebx),%eax
   19f09:	85 c0                	test   %eax,%eax
   19f0b:	75 2f                	jne    19f3c <fgets+0x2fc>
   19f0d:	8b 4b 14             	mov    0x14(%ebx),%ecx
   19f10:	85 c9                	test   %ecx,%ecx
   19f12:	75 cc                	jne    19ee0 <fgets+0x2a0>
   19f14:	8b 45 cc             	mov    -0x34(%ebp),%eax
   19f17:	8b 4d d0             	mov    -0x30(%ebp),%ecx
   19f1a:	01 c8                	add    %ecx,%eax
   19f1c:	89 74 24 08          	mov    %esi,0x8(%esp)
   19f20:	89 44 24 04          	mov    %eax,0x4(%esp)
   19f24:	8b 43 08             	mov    0x8(%ebx),%eax
   19f27:	89 04 24             	mov    %eax,(%esp)
   19f2a:	e8 b1 ec 00 00       	call   28be0 <write>
   19f2f:	85 c0                	test   %eax,%eax
   19f31:	7f c5                	jg     19ef8 <fgets+0x2b8>
   19f33:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   19f3a:	eb c6                	jmp    19f02 <fgets+0x2c2>
   19f3c:	8b 45 d0             	mov    -0x30(%ebp),%eax
   19f3f:	8b 75 c8             	mov    -0x38(%ebp),%esi
   19f42:	85 c0                	test   %eax,%eax
   19f44:	0f 84 6d fd ff ff    	je     19cb7 <fgets+0x77>
   19f4a:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   19f51:	e9 61 fd ff ff       	jmp    19cb7 <fgets+0x77>
   19f56:	8b 45 d0             	mov    -0x30(%ebp),%eax
   19f59:	8b 75 c8             	mov    -0x38(%ebp),%esi
   19f5c:	85 c0                	test   %eax,%eax
   19f5e:	0f 84 04 fe ff ff    	je     19d68 <fgets+0x128>
   19f64:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   19f6b:	e9 f8 fd ff ff       	jmp    19d68 <fgets+0x128>

00019f70 <getchar>:
   19f70:	55                   	push   %ebp
   19f71:	89 e5                	mov    %esp,%ebp
   19f73:	57                   	push   %edi
   19f74:	56                   	push   %esi
   19f75:	53                   	push   %ebx
   19f76:	83 ec 3c             	sub    $0x3c,%esp
   19f79:	8b 1d bc 06 03 00    	mov    0x306bc,%ebx
   19f7f:	8b 35 c0 06 03 00    	mov    0x306c0,%esi
   19f85:	85 db                	test   %ebx,%ebx
   19f87:	74 6a                	je     19ff3 <getchar+0x83>
   19f89:	8b 43 24             	mov    0x24(%ebx),%eax
   19f8c:	85 c0                	test   %eax,%eax
   19f8e:	74 3b                	je     19fcb <getchar+0x5b>
   19f90:	8b 53 20             	mov    0x20(%ebx),%edx
   19f93:	85 d2                	test   %edx,%edx
   19f95:	74 34                	je     19fcb <getchar+0x5b>
   19f97:	8b 7b 0c             	mov    0xc(%ebx),%edi
   19f9a:	85 ff                	test   %edi,%edi
   19f9c:	75 2d                	jne    19fcb <getchar+0x5b>
   19f9e:	8b 4b 30             	mov    0x30(%ebx),%ecx
   19fa1:	89 cf                	mov    %ecx,%edi
   19fa3:	2b 7b 34             	sub    0x34(%ebx),%edi
   19fa6:	74 16                	je     19fbe <getchar+0x4e>
   19fa8:	8b 43 2c             	mov    0x2c(%ebx),%eax
   19fab:	83 f8 02             	cmp    $0x2,%eax
   19fae:	0f 84 1d 02 00 00    	je     1a1d1 <getchar+0x261>
   19fb4:	48                   	dec    %eax
   19fb5:	0f 84 a2 01 00 00    	je     1a15d <getchar+0x1ed>
   19fbb:	8b 43 24             	mov    0x24(%ebx),%eax
   19fbe:	89 43 30             	mov    %eax,0x30(%ebx)
   19fc1:	89 43 34             	mov    %eax,0x34(%ebx)
   19fc4:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   19fcb:	8b 7b 14             	mov    0x14(%ebx),%edi
   19fce:	85 ff                	test   %edi,%edi
   19fd0:	0f 85 ca 00 00 00    	jne    1a0a0 <getchar+0x130>
   19fd6:	8b 43 08             	mov    0x8(%ebx),%eax
   19fd9:	85 c0                	test   %eax,%eax
   19fdb:	78 16                	js     19ff3 <getchar+0x83>
   19fdd:	8b 4b 1c             	mov    0x1c(%ebx),%ecx
   19fe0:	85 c9                	test   %ecx,%ecx
   19fe2:	74 0f                	je     19ff3 <getchar+0x83>
   19fe4:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   19feb:	89 04 24             	mov    %eax,(%esp)
   19fee:	e8 cd ef 00 00       	call   28fc0 <fsync>
   19ff3:	8b 1d b8 06 03 00    	mov    0x306b8,%ebx
   19ff9:	85 db                	test   %ebx,%ebx
   19ffb:	74 66                	je     1a063 <getchar+0xf3>
   19ffd:	8b 43 24             	mov    0x24(%ebx),%eax
   1a000:	85 c0                	test   %eax,%eax
   1a002:	74 3b                	je     1a03f <getchar+0xcf>
   1a004:	8b 53 20             	mov    0x20(%ebx),%edx
   1a007:	85 d2                	test   %edx,%edx
   1a009:	74 34                	je     1a03f <getchar+0xcf>
   1a00b:	8b 7b 0c             	mov    0xc(%ebx),%edi
   1a00e:	85 ff                	test   %edi,%edi
   1a010:	75 2d                	jne    1a03f <getchar+0xcf>
   1a012:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1a015:	89 cf                	mov    %ecx,%edi
   1a017:	2b 7b 34             	sub    0x34(%ebx),%edi
   1a01a:	74 16                	je     1a032 <getchar+0xc2>
   1a01c:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1a01f:	83 f8 02             	cmp    $0x2,%eax
   1a022:	0f 84 09 01 00 00    	je     1a131 <getchar+0x1c1>
   1a028:	48                   	dec    %eax
   1a029:	0f 84 86 00 00 00    	je     1a0b5 <getchar+0x145>
   1a02f:	8b 43 24             	mov    0x24(%ebx),%eax
   1a032:	89 43 30             	mov    %eax,0x30(%ebx)
   1a035:	89 43 34             	mov    %eax,0x34(%ebx)
   1a038:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1a03f:	8b 43 14             	mov    0x14(%ebx),%eax
   1a042:	85 c0                	test   %eax,%eax
   1a044:	75 52                	jne    1a098 <getchar+0x128>
   1a046:	8b 43 08             	mov    0x8(%ebx),%eax
   1a049:	85 c0                	test   %eax,%eax
   1a04b:	78 16                	js     1a063 <getchar+0xf3>
   1a04d:	8b 7b 1c             	mov    0x1c(%ebx),%edi
   1a050:	85 ff                	test   %edi,%edi
   1a052:	74 0f                	je     1a063 <getchar+0xf3>
   1a054:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   1a05b:	89 04 24             	mov    %eax,(%esp)
   1a05e:	e8 5d ef 00 00       	call   28fc0 <fsync>
   1a063:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   1a066:	89 74 24 0c          	mov    %esi,0xc(%esp)
   1a06a:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   1a071:	00 
   1a072:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1a079:	00 
   1a07a:	89 04 24             	mov    %eax,(%esp)
   1a07d:	e8 0e f7 ff ff       	call   19790 <fread>
   1a082:	85 c0                	test   %eax,%eax
   1a084:	74 2a                	je     1a0b0 <getchar+0x140>
   1a086:	0f be 45 e4          	movsbl -0x1c(%ebp),%eax
   1a08a:	83 c4 3c             	add    $0x3c,%esp
   1a08d:	5b                   	pop    %ebx
   1a08e:	5e                   	pop    %esi
   1a08f:	5f                   	pop    %edi
   1a090:	5d                   	pop    %ebp
   1a091:	c3                   	ret    
   1a092:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1a098:	e8 33 13 00 00       	call   1b3d0 <klog_update>
   1a09d:	eb c4                	jmp    1a063 <getchar+0xf3>
   1a09f:	90                   	nop
   1a0a0:	e8 2b 13 00 00       	call   1b3d0 <klog_update>
   1a0a5:	e9 49 ff ff ff       	jmp    19ff3 <getchar+0x83>
   1a0aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1a0b0:	83 c8 ff             	or     $0xffffffff,%eax
   1a0b3:	eb d5                	jmp    1a08a <getchar+0x11a>
   1a0b5:	8b 53 34             	mov    0x34(%ebx),%edx
   1a0b8:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
   1a0bf:	89 55 d0             	mov    %edx,-0x30(%ebp)
   1a0c2:	eb 2e                	jmp    1a0f2 <getchar+0x182>
   1a0c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a0c8:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1a0cb:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1a0ce:	01 d0                	add    %edx,%eax
   1a0d0:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1a0d4:	89 04 24             	mov    %eax,(%esp)
   1a0d7:	e8 a4 12 00 00       	call   1b380 <klog_write>
   1a0dc:	85 c0                	test   %eax,%eax
   1a0de:	7e 48                	jle    1a128 <getchar+0x1b8>
   1a0e0:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1a0e3:	29 c7                	sub    %eax,%edi
   1a0e5:	01 c2                	add    %eax,%edx
   1a0e7:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1a0ea:	85 ff                	test   %edi,%edi
   1a0ec:	0f 84 22 01 00 00    	je     1a214 <getchar+0x2a4>
   1a0f2:	8b 43 0c             	mov    0xc(%ebx),%eax
   1a0f5:	85 c0                	test   %eax,%eax
   1a0f7:	0f 85 17 01 00 00    	jne    1a214 <getchar+0x2a4>
   1a0fd:	8b 4b 14             	mov    0x14(%ebx),%ecx
   1a100:	85 c9                	test   %ecx,%ecx
   1a102:	75 c4                	jne    1a0c8 <getchar+0x158>
   1a104:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1a107:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   1a10a:	01 c8                	add    %ecx,%eax
   1a10c:	89 7c 24 08          	mov    %edi,0x8(%esp)
   1a110:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a114:	8b 43 08             	mov    0x8(%ebx),%eax
   1a117:	89 04 24             	mov    %eax,(%esp)
   1a11a:	e8 c1 ea 00 00       	call   28be0 <write>
   1a11f:	eb bb                	jmp    1a0dc <getchar+0x16c>
   1a121:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a128:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   1a12f:	eb b9                	jmp    1a0ea <getchar+0x17a>
   1a131:	89 f8                	mov    %edi,%eax
   1a133:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   1a13a:	00 
   1a13b:	f7 d8                	neg    %eax
   1a13d:	89 c2                	mov    %eax,%edx
   1a13f:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a143:	c1 fa 1f             	sar    $0x1f,%edx
   1a146:	89 54 24 08          	mov    %edx,0x8(%esp)
   1a14a:	8b 43 08             	mov    0x8(%ebx),%eax
   1a14d:	89 04 24             	mov    %eax,(%esp)
   1a150:	e8 4b ef 00 00       	call   290a0 <lseek>
   1a155:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1a158:	e9 cb fe ff ff       	jmp    1a028 <getchar+0xb8>
   1a15d:	8b 53 34             	mov    0x34(%ebx),%edx
   1a160:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
   1a167:	89 55 d0             	mov    %edx,-0x30(%ebp)
   1a16a:	eb 2a                	jmp    1a196 <getchar+0x226>
   1a16c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a170:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1a173:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1a176:	01 d0                	add    %edx,%eax
   1a178:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1a17c:	89 04 24             	mov    %eax,(%esp)
   1a17f:	e8 fc 11 00 00       	call   1b380 <klog_write>
   1a184:	85 c0                	test   %eax,%eax
   1a186:	7e 40                	jle    1a1c8 <getchar+0x258>
   1a188:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1a18b:	29 c7                	sub    %eax,%edi
   1a18d:	01 c2                	add    %eax,%edx
   1a18f:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1a192:	85 ff                	test   %edi,%edi
   1a194:	74 67                	je     1a1fd <getchar+0x28d>
   1a196:	8b 43 0c             	mov    0xc(%ebx),%eax
   1a199:	85 c0                	test   %eax,%eax
   1a19b:	75 60                	jne    1a1fd <getchar+0x28d>
   1a19d:	8b 4b 14             	mov    0x14(%ebx),%ecx
   1a1a0:	85 c9                	test   %ecx,%ecx
   1a1a2:	75 cc                	jne    1a170 <getchar+0x200>
   1a1a4:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1a1a7:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   1a1aa:	01 c8                	add    %ecx,%eax
   1a1ac:	89 7c 24 08          	mov    %edi,0x8(%esp)
   1a1b0:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a1b4:	8b 43 08             	mov    0x8(%ebx),%eax
   1a1b7:	89 04 24             	mov    %eax,(%esp)
   1a1ba:	e8 21 ea 00 00       	call   28be0 <write>
   1a1bf:	eb c3                	jmp    1a184 <getchar+0x214>
   1a1c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a1c8:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   1a1cf:	eb c1                	jmp    1a192 <getchar+0x222>
   1a1d1:	89 f8                	mov    %edi,%eax
   1a1d3:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   1a1da:	00 
   1a1db:	f7 d8                	neg    %eax
   1a1dd:	89 c2                	mov    %eax,%edx
   1a1df:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a1e3:	c1 fa 1f             	sar    $0x1f,%edx
   1a1e6:	89 54 24 08          	mov    %edx,0x8(%esp)
   1a1ea:	8b 43 08             	mov    0x8(%ebx),%eax
   1a1ed:	89 04 24             	mov    %eax,(%esp)
   1a1f0:	e8 ab ee 00 00       	call   290a0 <lseek>
   1a1f5:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1a1f8:	e9 b7 fd ff ff       	jmp    19fb4 <getchar+0x44>
   1a1fd:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   1a200:	85 c0                	test   %eax,%eax
   1a202:	0f 84 b3 fd ff ff    	je     19fbb <getchar+0x4b>
   1a208:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   1a20f:	e9 a7 fd ff ff       	jmp    19fbb <getchar+0x4b>
   1a214:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   1a217:	85 c0                	test   %eax,%eax
   1a219:	0f 84 10 fe ff ff    	je     1a02f <getchar+0xbf>
   1a21f:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   1a226:	e9 04 fe ff ff       	jmp    1a02f <getchar+0xbf>
   1a22b:	90                   	nop
   1a22c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001a230 <fseek>:
   1a230:	55                   	push   %ebp
   1a231:	89 e5                	mov    %esp,%ebp
   1a233:	57                   	push   %edi
   1a234:	56                   	push   %esi
   1a235:	53                   	push   %ebx
   1a236:	83 ec 3c             	sub    $0x3c,%esp
   1a239:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1a23c:	8b 75 0c             	mov    0xc(%ebp),%esi
   1a23f:	8b 7d 10             	mov    0x10(%ebp),%edi
   1a242:	8b 43 24             	mov    0x24(%ebx),%eax
   1a245:	85 c0                	test   %eax,%eax
   1a247:	74 31                	je     1a27a <fseek+0x4a>
   1a249:	8b 4b 20             	mov    0x20(%ebx),%ecx
   1a24c:	85 c9                	test   %ecx,%ecx
   1a24e:	74 2a                	je     1a27a <fseek+0x4a>
   1a250:	8b 53 0c             	mov    0xc(%ebx),%edx
   1a253:	85 d2                	test   %edx,%edx
   1a255:	75 23                	jne    1a27a <fseek+0x4a>
   1a257:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1a25a:	2b 4b 34             	sub    0x34(%ebx),%ecx
   1a25d:	74 0e                	je     1a26d <fseek+0x3d>
   1a25f:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1a262:	83 f8 02             	cmp    $0x2,%eax
   1a265:	74 49                	je     1a2b0 <fseek+0x80>
   1a267:	48                   	dec    %eax
   1a268:	74 76                	je     1a2e0 <fseek+0xb0>
   1a26a:	8b 43 24             	mov    0x24(%ebx),%eax
   1a26d:	89 43 30             	mov    %eax,0x30(%ebx)
   1a270:	89 43 34             	mov    %eax,0x34(%ebx)
   1a273:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1a27a:	8b 45 14             	mov    0x14(%ebp),%eax
   1a27d:	89 74 24 04          	mov    %esi,0x4(%esp)
   1a281:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1a285:	89 7c 24 08          	mov    %edi,0x8(%esp)
   1a289:	8b 43 08             	mov    0x8(%ebx),%eax
   1a28c:	89 04 24             	mov    %eax,(%esp)
   1a28f:	e8 0c ee 00 00       	call   290a0 <lseek>
   1a294:	21 d0                	and    %edx,%eax
   1a296:	40                   	inc    %eax
   1a297:	0f 84 ac 00 00 00    	je     1a349 <fseek+0x119>
   1a29d:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
   1a2a4:	31 c0                	xor    %eax,%eax
   1a2a6:	83 c4 3c             	add    $0x3c,%esp
   1a2a9:	5b                   	pop    %ebx
   1a2aa:	5e                   	pop    %esi
   1a2ab:	5f                   	pop    %edi
   1a2ac:	5d                   	pop    %ebp
   1a2ad:	c3                   	ret    
   1a2ae:	66 90                	xchg   %ax,%ax
   1a2b0:	89 c8                	mov    %ecx,%eax
   1a2b2:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   1a2b9:	00 
   1a2ba:	f7 d8                	neg    %eax
   1a2bc:	89 c2                	mov    %eax,%edx
   1a2be:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a2c2:	c1 fa 1f             	sar    $0x1f,%edx
   1a2c5:	89 54 24 08          	mov    %edx,0x8(%esp)
   1a2c9:	8b 43 08             	mov    0x8(%ebx),%eax
   1a2cc:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
   1a2cf:	89 04 24             	mov    %eax,(%esp)
   1a2d2:	e8 c9 ed 00 00       	call   290a0 <lseek>
   1a2d7:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1a2da:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   1a2dd:	eb 88                	jmp    1a267 <fseek+0x37>
   1a2df:	90                   	nop
   1a2e0:	8b 53 34             	mov    0x34(%ebx),%edx
   1a2e3:	89 75 d8             	mov    %esi,-0x28(%ebp)
   1a2e6:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   1a2e9:	31 d2                	xor    %edx,%edx
   1a2eb:	89 7d dc             	mov    %edi,-0x24(%ebp)
   1a2ee:	89 d6                	mov    %edx,%esi
   1a2f0:	89 df                	mov    %ebx,%edi
   1a2f2:	89 cb                	mov    %ecx,%ebx
   1a2f4:	eb 1f                	jmp    1a315 <fseek+0xe5>
   1a2f6:	66 90                	xchg   %ax,%ax
   1a2f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1a2fb:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   1a2ff:	01 f0                	add    %esi,%eax
   1a301:	89 04 24             	mov    %eax,(%esp)
   1a304:	e8 77 10 00 00       	call   1b380 <klog_write>
   1a309:	85 c0                	test   %eax,%eax
   1a30b:	7e 33                	jle    1a340 <fseek+0x110>
   1a30d:	29 c3                	sub    %eax,%ebx
   1a30f:	01 c6                	add    %eax,%esi
   1a311:	85 db                	test   %ebx,%ebx
   1a313:	74 3c                	je     1a351 <fseek+0x121>
   1a315:	8b 4f 0c             	mov    0xc(%edi),%ecx
   1a318:	85 c9                	test   %ecx,%ecx
   1a31a:	75 35                	jne    1a351 <fseek+0x121>
   1a31c:	8b 47 14             	mov    0x14(%edi),%eax
   1a31f:	85 c0                	test   %eax,%eax
   1a321:	75 d5                	jne    1a2f8 <fseek+0xc8>
   1a323:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1a326:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   1a32a:	01 f0                	add    %esi,%eax
   1a32c:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a330:	8b 47 08             	mov    0x8(%edi),%eax
   1a333:	89 04 24             	mov    %eax,(%esp)
   1a336:	e8 a5 e8 00 00       	call   28be0 <write>
   1a33b:	eb cc                	jmp    1a309 <fseek+0xd9>
   1a33d:	8d 76 00             	lea    0x0(%esi),%esi
   1a340:	c7 47 0c 01 00 00 00 	movl   $0x1,0xc(%edi)
   1a347:	eb c8                	jmp    1a311 <fseek+0xe1>
   1a349:	83 c8 ff             	or     $0xffffffff,%eax
   1a34c:	e9 55 ff ff ff       	jmp    1a2a6 <fseek+0x76>
   1a351:	89 f2                	mov    %esi,%edx
   1a353:	89 fb                	mov    %edi,%ebx
   1a355:	8b 75 d8             	mov    -0x28(%ebp),%esi
   1a358:	8b 7d dc             	mov    -0x24(%ebp),%edi
   1a35b:	85 d2                	test   %edx,%edx
   1a35d:	0f 84 07 ff ff ff    	je     1a26a <fseek+0x3a>
   1a363:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   1a36a:	e9 fb fe ff ff       	jmp    1a26a <fseek+0x3a>
   1a36f:	90                   	nop

0001a370 <ftell>:
   1a370:	55                   	push   %ebp
   1a371:	89 e5                	mov    %esp,%ebp
   1a373:	57                   	push   %edi
   1a374:	56                   	push   %esi
   1a375:	53                   	push   %ebx
   1a376:	83 ec 2c             	sub    $0x2c,%esp
   1a379:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1a37c:	8b 43 24             	mov    0x24(%ebx),%eax
   1a37f:	85 c0                	test   %eax,%eax
   1a381:	74 33                	je     1a3b6 <ftell+0x46>
   1a383:	8b 4b 20             	mov    0x20(%ebx),%ecx
   1a386:	85 c9                	test   %ecx,%ecx
   1a388:	74 2c                	je     1a3b6 <ftell+0x46>
   1a38a:	8b 53 0c             	mov    0xc(%ebx),%edx
   1a38d:	85 d2                	test   %edx,%edx
   1a38f:	75 25                	jne    1a3b6 <ftell+0x46>
   1a391:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1a394:	89 cf                	mov    %ecx,%edi
   1a396:	2b 7b 34             	sub    0x34(%ebx),%edi
   1a399:	74 0e                	je     1a3a9 <ftell+0x39>
   1a39b:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1a39e:	83 f8 02             	cmp    $0x2,%eax
   1a3a1:	74 45                	je     1a3e8 <ftell+0x78>
   1a3a3:	48                   	dec    %eax
   1a3a4:	74 72                	je     1a418 <ftell+0xa8>
   1a3a6:	8b 43 24             	mov    0x24(%ebx),%eax
   1a3a9:	89 43 30             	mov    %eax,0x30(%ebx)
   1a3ac:	89 43 34             	mov    %eax,0x34(%ebx)
   1a3af:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1a3b6:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   1a3bd:	00 
   1a3be:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   1a3c5:	00 
   1a3c6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   1a3cd:	00 
   1a3ce:	8b 43 08             	mov    0x8(%ebx),%eax
   1a3d1:	89 04 24             	mov    %eax,(%esp)
   1a3d4:	e8 c7 ec 00 00       	call   290a0 <lseek>
   1a3d9:	83 c4 2c             	add    $0x2c,%esp
   1a3dc:	5b                   	pop    %ebx
   1a3dd:	5e                   	pop    %esi
   1a3de:	5f                   	pop    %edi
   1a3df:	5d                   	pop    %ebp
   1a3e0:	c3                   	ret    
   1a3e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a3e8:	89 f8                	mov    %edi,%eax
   1a3ea:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   1a3f1:	00 
   1a3f2:	f7 d8                	neg    %eax
   1a3f4:	89 c2                	mov    %eax,%edx
   1a3f6:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a3fa:	c1 fa 1f             	sar    $0x1f,%edx
   1a3fd:	89 54 24 08          	mov    %edx,0x8(%esp)
   1a401:	8b 43 08             	mov    0x8(%ebx),%eax
   1a404:	89 04 24             	mov    %eax,(%esp)
   1a407:	e8 94 ec 00 00       	call   290a0 <lseek>
   1a40c:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1a40f:	eb 92                	jmp    1a3a3 <ftell+0x33>
   1a411:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a418:	8b 53 34             	mov    0x34(%ebx),%edx
   1a41b:	31 f6                	xor    %esi,%esi
   1a41d:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   1a420:	eb 23                	jmp    1a445 <ftell+0xd5>
   1a422:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1a428:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1a42b:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1a42f:	01 f0                	add    %esi,%eax
   1a431:	89 04 24             	mov    %eax,(%esp)
   1a434:	e8 47 0f 00 00       	call   1b380 <klog_write>
   1a439:	85 c0                	test   %eax,%eax
   1a43b:	7e 33                	jle    1a470 <ftell+0x100>
   1a43d:	29 c7                	sub    %eax,%edi
   1a43f:	01 c6                	add    %eax,%esi
   1a441:	85 ff                	test   %edi,%edi
   1a443:	74 3b                	je     1a480 <ftell+0x110>
   1a445:	8b 43 0c             	mov    0xc(%ebx),%eax
   1a448:	85 c0                	test   %eax,%eax
   1a44a:	75 34                	jne    1a480 <ftell+0x110>
   1a44c:	8b 43 14             	mov    0x14(%ebx),%eax
   1a44f:	85 c0                	test   %eax,%eax
   1a451:	75 d5                	jne    1a428 <ftell+0xb8>
   1a453:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1a456:	89 7c 24 08          	mov    %edi,0x8(%esp)
   1a45a:	01 f0                	add    %esi,%eax
   1a45c:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a460:	8b 43 08             	mov    0x8(%ebx),%eax
   1a463:	89 04 24             	mov    %eax,(%esp)
   1a466:	e8 75 e7 00 00       	call   28be0 <write>
   1a46b:	eb cc                	jmp    1a439 <ftell+0xc9>
   1a46d:	8d 76 00             	lea    0x0(%esi),%esi
   1a470:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   1a477:	eb c8                	jmp    1a441 <ftell+0xd1>
   1a479:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a480:	85 f6                	test   %esi,%esi
   1a482:	0f 84 1e ff ff ff    	je     1a3a6 <ftell+0x36>
   1a488:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   1a48f:	e9 12 ff ff ff       	jmp    1a3a6 <ftell+0x36>
   1a494:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1a49a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0001a4a0 <rewind>:
   1a4a0:	55                   	push   %ebp
   1a4a1:	89 e5                	mov    %esp,%ebp
   1a4a3:	57                   	push   %edi
   1a4a4:	56                   	push   %esi
   1a4a5:	53                   	push   %ebx
   1a4a6:	83 ec 2c             	sub    $0x2c,%esp
   1a4a9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1a4ac:	8b 43 24             	mov    0x24(%ebx),%eax
   1a4af:	85 c0                	test   %eax,%eax
   1a4b1:	74 33                	je     1a4e6 <rewind+0x46>
   1a4b3:	8b 4b 20             	mov    0x20(%ebx),%ecx
   1a4b6:	85 c9                	test   %ecx,%ecx
   1a4b8:	74 2c                	je     1a4e6 <rewind+0x46>
   1a4ba:	8b 53 0c             	mov    0xc(%ebx),%edx
   1a4bd:	85 d2                	test   %edx,%edx
   1a4bf:	75 25                	jne    1a4e6 <rewind+0x46>
   1a4c1:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1a4c4:	89 cf                	mov    %ecx,%edi
   1a4c6:	2b 7b 34             	sub    0x34(%ebx),%edi
   1a4c9:	74 0e                	je     1a4d9 <rewind+0x39>
   1a4cb:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1a4ce:	83 f8 02             	cmp    $0x2,%eax
   1a4d1:	74 4d                	je     1a520 <rewind+0x80>
   1a4d3:	48                   	dec    %eax
   1a4d4:	74 7a                	je     1a550 <rewind+0xb0>
   1a4d6:	8b 43 24             	mov    0x24(%ebx),%eax
   1a4d9:	89 43 30             	mov    %eax,0x30(%ebx)
   1a4dc:	89 43 34             	mov    %eax,0x34(%ebx)
   1a4df:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1a4e6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1a4ed:	00 
   1a4ee:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   1a4f5:	00 
   1a4f6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   1a4fd:	00 
   1a4fe:	8b 43 08             	mov    0x8(%ebx),%eax
   1a501:	89 04 24             	mov    %eax,(%esp)
   1a504:	e8 97 eb 00 00       	call   290a0 <lseek>
   1a509:	21 d0                	and    %edx,%eax
   1a50b:	40                   	inc    %eax
   1a50c:	74 07                	je     1a515 <rewind+0x75>
   1a50e:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
   1a515:	83 c4 2c             	add    $0x2c,%esp
   1a518:	5b                   	pop    %ebx
   1a519:	5e                   	pop    %esi
   1a51a:	5f                   	pop    %edi
   1a51b:	5d                   	pop    %ebp
   1a51c:	c3                   	ret    
   1a51d:	8d 76 00             	lea    0x0(%esi),%esi
   1a520:	89 f8                	mov    %edi,%eax
   1a522:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   1a529:	00 
   1a52a:	f7 d8                	neg    %eax
   1a52c:	89 c2                	mov    %eax,%edx
   1a52e:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a532:	c1 fa 1f             	sar    $0x1f,%edx
   1a535:	89 54 24 08          	mov    %edx,0x8(%esp)
   1a539:	8b 43 08             	mov    0x8(%ebx),%eax
   1a53c:	89 04 24             	mov    %eax,(%esp)
   1a53f:	e8 5c eb 00 00       	call   290a0 <lseek>
   1a544:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1a547:	eb 8a                	jmp    1a4d3 <rewind+0x33>
   1a549:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a550:	8b 53 34             	mov    0x34(%ebx),%edx
   1a553:	31 f6                	xor    %esi,%esi
   1a555:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   1a558:	eb 23                	jmp    1a57d <rewind+0xdd>
   1a55a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1a560:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1a563:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1a567:	01 f0                	add    %esi,%eax
   1a569:	89 04 24             	mov    %eax,(%esp)
   1a56c:	e8 0f 0e 00 00       	call   1b380 <klog_write>
   1a571:	85 c0                	test   %eax,%eax
   1a573:	7e 33                	jle    1a5a8 <rewind+0x108>
   1a575:	29 c7                	sub    %eax,%edi
   1a577:	01 c6                	add    %eax,%esi
   1a579:	85 ff                	test   %edi,%edi
   1a57b:	74 3b                	je     1a5b8 <rewind+0x118>
   1a57d:	8b 43 0c             	mov    0xc(%ebx),%eax
   1a580:	85 c0                	test   %eax,%eax
   1a582:	75 34                	jne    1a5b8 <rewind+0x118>
   1a584:	8b 43 14             	mov    0x14(%ebx),%eax
   1a587:	85 c0                	test   %eax,%eax
   1a589:	75 d5                	jne    1a560 <rewind+0xc0>
   1a58b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1a58e:	89 7c 24 08          	mov    %edi,0x8(%esp)
   1a592:	01 f0                	add    %esi,%eax
   1a594:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a598:	8b 43 08             	mov    0x8(%ebx),%eax
   1a59b:	89 04 24             	mov    %eax,(%esp)
   1a59e:	e8 3d e6 00 00       	call   28be0 <write>
   1a5a3:	eb cc                	jmp    1a571 <rewind+0xd1>
   1a5a5:	8d 76 00             	lea    0x0(%esi),%esi
   1a5a8:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   1a5af:	eb c8                	jmp    1a579 <rewind+0xd9>
   1a5b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a5b8:	85 f6                	test   %esi,%esi
   1a5ba:	0f 84 16 ff ff ff    	je     1a4d6 <rewind+0x36>
   1a5c0:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   1a5c7:	e9 0a ff ff ff       	jmp    1a4d6 <rewind+0x36>
   1a5cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001a5d0 <fflush>:
   1a5d0:	55                   	push   %ebp
   1a5d1:	89 e5                	mov    %esp,%ebp
   1a5d3:	57                   	push   %edi
   1a5d4:	56                   	push   %esi
   1a5d5:	53                   	push   %ebx
   1a5d6:	83 ec 2c             	sub    $0x2c,%esp
   1a5d9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1a5dc:	8b 43 24             	mov    0x24(%ebx),%eax
   1a5df:	85 c0                	test   %eax,%eax
   1a5e1:	74 37                	je     1a61a <fflush+0x4a>
   1a5e3:	8b 4b 20             	mov    0x20(%ebx),%ecx
   1a5e6:	85 c9                	test   %ecx,%ecx
   1a5e8:	74 30                	je     1a61a <fflush+0x4a>
   1a5ea:	8b 53 0c             	mov    0xc(%ebx),%edx
   1a5ed:	85 d2                	test   %edx,%edx
   1a5ef:	75 29                	jne    1a61a <fflush+0x4a>
   1a5f1:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1a5f4:	89 cf                	mov    %ecx,%edi
   1a5f6:	2b 7b 34             	sub    0x34(%ebx),%edi
   1a5f9:	74 12                	je     1a60d <fflush+0x3d>
   1a5fb:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1a5fe:	83 f8 02             	cmp    $0x2,%eax
   1a601:	74 5d                	je     1a660 <fflush+0x90>
   1a603:	48                   	dec    %eax
   1a604:	0f 84 86 00 00 00    	je     1a690 <fflush+0xc0>
   1a60a:	8b 43 24             	mov    0x24(%ebx),%eax
   1a60d:	89 43 30             	mov    %eax,0x30(%ebx)
   1a610:	89 43 34             	mov    %eax,0x34(%ebx)
   1a613:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1a61a:	8b 7b 14             	mov    0x14(%ebx),%edi
   1a61d:	85 ff                	test   %edi,%edi
   1a61f:	75 27                	jne    1a648 <fflush+0x78>
   1a621:	8b 43 08             	mov    0x8(%ebx),%eax
   1a624:	85 c0                	test   %eax,%eax
   1a626:	78 30                	js     1a658 <fflush+0x88>
   1a628:	8b 73 1c             	mov    0x1c(%ebx),%esi
   1a62b:	85 f6                	test   %esi,%esi
   1a62d:	74 29                	je     1a658 <fflush+0x88>
   1a62f:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   1a636:	89 45 08             	mov    %eax,0x8(%ebp)
   1a639:	83 c4 2c             	add    $0x2c,%esp
   1a63c:	5b                   	pop    %ebx
   1a63d:	5e                   	pop    %esi
   1a63e:	5f                   	pop    %edi
   1a63f:	5d                   	pop    %ebp
   1a640:	e9 7b e9 00 00       	jmp    28fc0 <fsync>
   1a645:	8d 76 00             	lea    0x0(%esi),%esi
   1a648:	e8 83 0d 00 00       	call   1b3d0 <klog_update>
   1a64d:	31 c0                	xor    %eax,%eax
   1a64f:	83 c4 2c             	add    $0x2c,%esp
   1a652:	5b                   	pop    %ebx
   1a653:	5e                   	pop    %esi
   1a654:	5f                   	pop    %edi
   1a655:	5d                   	pop    %ebp
   1a656:	c3                   	ret    
   1a657:	90                   	nop
   1a658:	83 c8 ff             	or     $0xffffffff,%eax
   1a65b:	eb f2                	jmp    1a64f <fflush+0x7f>
   1a65d:	8d 76 00             	lea    0x0(%esi),%esi
   1a660:	89 f8                	mov    %edi,%eax
   1a662:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   1a669:	00 
   1a66a:	f7 d8                	neg    %eax
   1a66c:	89 c2                	mov    %eax,%edx
   1a66e:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a672:	c1 fa 1f             	sar    $0x1f,%edx
   1a675:	89 54 24 08          	mov    %edx,0x8(%esp)
   1a679:	8b 43 08             	mov    0x8(%ebx),%eax
   1a67c:	89 04 24             	mov    %eax,(%esp)
   1a67f:	e8 1c ea 00 00       	call   290a0 <lseek>
   1a684:	8b 43 2c             	mov    0x2c(%ebx),%eax
   1a687:	e9 77 ff ff ff       	jmp    1a603 <fflush+0x33>
   1a68c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a690:	8b 53 34             	mov    0x34(%ebx),%edx
   1a693:	31 f6                	xor    %esi,%esi
   1a695:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   1a698:	eb 23                	jmp    1a6bd <fflush+0xed>
   1a69a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1a6a0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1a6a3:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1a6a7:	01 f0                	add    %esi,%eax
   1a6a9:	89 04 24             	mov    %eax,(%esp)
   1a6ac:	e8 cf 0c 00 00       	call   1b380 <klog_write>
   1a6b1:	85 c0                	test   %eax,%eax
   1a6b3:	7e 33                	jle    1a6e8 <fflush+0x118>
   1a6b5:	29 c7                	sub    %eax,%edi
   1a6b7:	01 c6                	add    %eax,%esi
   1a6b9:	85 ff                	test   %edi,%edi
   1a6bb:	74 3b                	je     1a6f8 <fflush+0x128>
   1a6bd:	8b 43 0c             	mov    0xc(%ebx),%eax
   1a6c0:	85 c0                	test   %eax,%eax
   1a6c2:	75 34                	jne    1a6f8 <fflush+0x128>
   1a6c4:	8b 43 14             	mov    0x14(%ebx),%eax
   1a6c7:	85 c0                	test   %eax,%eax
   1a6c9:	75 d5                	jne    1a6a0 <fflush+0xd0>
   1a6cb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1a6ce:	89 7c 24 08          	mov    %edi,0x8(%esp)
   1a6d2:	01 f0                	add    %esi,%eax
   1a6d4:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a6d8:	8b 43 08             	mov    0x8(%ebx),%eax
   1a6db:	89 04 24             	mov    %eax,(%esp)
   1a6de:	e8 fd e4 00 00       	call   28be0 <write>
   1a6e3:	eb cc                	jmp    1a6b1 <fflush+0xe1>
   1a6e5:	8d 76 00             	lea    0x0(%esi),%esi
   1a6e8:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   1a6ef:	eb c8                	jmp    1a6b9 <fflush+0xe9>
   1a6f1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1a6f8:	85 f6                	test   %esi,%esi
   1a6fa:	0f 84 0a ff ff ff    	je     1a60a <fflush+0x3a>
   1a700:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   1a707:	e9 fe fe ff ff       	jmp    1a60a <fflush+0x3a>
   1a70c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001a710 <fwrite.part.5>:
   1a710:	55                   	push   %ebp
   1a711:	89 e5                	mov    %esp,%ebp
   1a713:	57                   	push   %edi
   1a714:	89 c7                	mov    %eax,%edi
   1a716:	89 c8                	mov    %ecx,%eax
   1a718:	0f af c2             	imul   %edx,%eax
   1a71b:	56                   	push   %esi
   1a71c:	53                   	push   %ebx
   1a71d:	83 ec 3c             	sub    $0x3c,%esp
   1a720:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1a723:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1a726:	89 45 e0             	mov    %eax,-0x20(%ebp)
   1a729:	c6 45 d8 00          	movb   $0x0,-0x28(%ebp)
   1a72d:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
   1a734:	8b 53 0c             	mov    0xc(%ebx),%edx
   1a737:	90                   	nop
   1a738:	85 d2                	test   %edx,%edx
   1a73a:	0f 85 00 01 00 00    	jne    1a840 <fwrite.part.5+0x130>
   1a740:	8b 75 e0             	mov    -0x20(%ebp),%esi
   1a743:	85 f6                	test   %esi,%esi
   1a745:	0f 84 f5 00 00 00    	je     1a840 <fwrite.part.5+0x130>
   1a74b:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1a74e:	8b 43 24             	mov    0x24(%ebx),%eax
   1a751:	29 c8                	sub    %ecx,%eax
   1a753:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   1a756:	8b 43 28             	mov    0x28(%ebx),%eax
   1a759:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   1a75c:	01 c6                	add    %eax,%esi
   1a75e:	89 75 e4             	mov    %esi,-0x1c(%ebp)
   1a761:	8b 75 e0             	mov    -0x20(%ebp),%esi
   1a764:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1a767:	39 c6                	cmp    %eax,%esi
   1a769:	76 02                	jbe    1a76d <fwrite.part.5+0x5d>
   1a76b:	89 c6                	mov    %eax,%esi
   1a76d:	85 f6                	test   %esi,%esi
   1a76f:	74 32                	je     1a7a3 <fwrite.part.5+0x93>
   1a771:	31 c0                	xor    %eax,%eax
   1a773:	eb 0b                	jmp    1a780 <fwrite.part.5+0x70>
   1a775:	8d 76 00             	lea    0x0(%esi),%esi
   1a778:	40                   	inc    %eax
   1a779:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1a77c:	39 f0                	cmp    %esi,%eax
   1a77e:	74 20                	je     1a7a0 <fwrite.part.5+0x90>
   1a780:	8a 14 07             	mov    (%edi,%eax,1),%dl
   1a783:	88 14 01             	mov    %dl,(%ecx,%eax,1)
   1a786:	80 fa 0a             	cmp    $0xa,%dl
   1a789:	75 ed                	jne    1a778 <fwrite.part.5+0x68>
   1a78b:	83 7b 20 01          	cmpl   $0x1,0x20(%ebx)
   1a78f:	75 e7                	jne    1a778 <fwrite.part.5+0x68>
   1a791:	40                   	inc    %eax
   1a792:	c6 45 d8 01          	movb   $0x1,-0x28(%ebp)
   1a796:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1a799:	39 f0                	cmp    %esi,%eax
   1a79b:	75 e3                	jne    1a780 <fwrite.part.5+0x70>
   1a79d:	8d 76 00             	lea    0x0(%esi),%esi
   1a7a0:	8b 53 0c             	mov    0xc(%ebx),%edx
   1a7a3:	8b 45 e0             	mov    -0x20(%ebp),%eax
   1a7a6:	01 f1                	add    %esi,%ecx
   1a7a8:	29 f0                	sub    %esi,%eax
   1a7aa:	01 f7                	add    %esi,%edi
   1a7ac:	89 45 e0             	mov    %eax,-0x20(%ebp)
   1a7af:	8b 45 dc             	mov    -0x24(%ebp),%eax
   1a7b2:	01 f0                	add    %esi,%eax
   1a7b4:	89 4b 30             	mov    %ecx,0x30(%ebx)
   1a7b7:	89 45 dc             	mov    %eax,-0x24(%ebp)
   1a7ba:	c7 43 2c 01 00 00 00 	movl   $0x1,0x2c(%ebx)
   1a7c1:	39 75 e4             	cmp    %esi,-0x1c(%ebp)
   1a7c4:	0f 85 6e ff ff ff    	jne    1a738 <fwrite.part.5+0x28>
   1a7ca:	8b 43 24             	mov    0x24(%ebx),%eax
   1a7cd:	c6 45 d8 00          	movb   $0x0,-0x28(%ebp)
   1a7d1:	85 c0                	test   %eax,%eax
   1a7d3:	0f 84 5f ff ff ff    	je     1a738 <fwrite.part.5+0x28>
   1a7d9:	8b 73 20             	mov    0x20(%ebx),%esi
   1a7dc:	85 f6                	test   %esi,%esi
   1a7de:	0f 84 54 ff ff ff    	je     1a738 <fwrite.part.5+0x28>
   1a7e4:	85 d2                	test   %edx,%edx
   1a7e6:	0f 85 4c ff ff ff    	jne    1a738 <fwrite.part.5+0x28>
   1a7ec:	8b 73 34             	mov    0x34(%ebx),%esi
   1a7ef:	29 f1                	sub    %esi,%ecx
   1a7f1:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
   1a7f4:	74 7f                	je     1a875 <fwrite.part.5+0x165>
   1a7f6:	31 c9                	xor    %ecx,%ecx
   1a7f8:	89 7d d8             	mov    %edi,-0x28(%ebp)
   1a7fb:	89 cf                	mov    %ecx,%edi
   1a7fd:	8b 53 14             	mov    0x14(%ebx),%edx
   1a800:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1a803:	85 d2                	test   %edx,%edx
   1a805:	0f 85 98 00 00 00    	jne    1a8a3 <fwrite.part.5+0x193>
   1a80b:	89 44 24 08          	mov    %eax,0x8(%esp)
   1a80f:	8d 04 3e             	lea    (%esi,%edi,1),%eax
   1a812:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a816:	8b 43 08             	mov    0x8(%ebx),%eax
   1a819:	89 04 24             	mov    %eax,(%esp)
   1a81c:	e8 bf e3 00 00       	call   28be0 <write>
   1a821:	85 c0                	test   %eax,%eax
   1a823:	7e 31                	jle    1a856 <fwrite.part.5+0x146>
   1a825:	01 c7                	add    %eax,%edi
   1a827:	29 45 e4             	sub    %eax,-0x1c(%ebp)
   1a82a:	8b 53 0c             	mov    0xc(%ebx),%edx
   1a82d:	74 04                	je     1a833 <fwrite.part.5+0x123>
   1a82f:	85 d2                	test   %edx,%edx
   1a831:	74 ca                	je     1a7fd <fwrite.part.5+0xed>
   1a833:	89 f9                	mov    %edi,%ecx
   1a835:	8b 7d d8             	mov    -0x28(%ebp),%edi
   1a838:	eb 2d                	jmp    1a867 <fwrite.part.5+0x157>
   1a83a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1a840:	80 7d d8 00          	cmpb   $0x0,-0x28(%ebp)
   1a844:	75 45                	jne    1a88b <fwrite.part.5+0x17b>
   1a846:	8b 45 dc             	mov    -0x24(%ebp),%eax
   1a849:	31 d2                	xor    %edx,%edx
   1a84b:	f7 75 d4             	divl   -0x2c(%ebp)
   1a84e:	83 c4 3c             	add    $0x3c,%esp
   1a851:	5b                   	pop    %ebx
   1a852:	5e                   	pop    %esi
   1a853:	5f                   	pop    %edi
   1a854:	5d                   	pop    %ebp
   1a855:	c3                   	ret    
   1a856:	89 f9                	mov    %edi,%ecx
   1a858:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   1a85f:	8b 7d d8             	mov    -0x28(%ebp),%edi
   1a862:	ba 01 00 00 00       	mov    $0x1,%edx
   1a867:	85 c9                	test   %ecx,%ecx
   1a869:	74 07                	je     1a872 <fwrite.part.5+0x162>
   1a86b:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   1a872:	8b 43 24             	mov    0x24(%ebx),%eax
   1a875:	89 43 30             	mov    %eax,0x30(%ebx)
   1a878:	89 43 34             	mov    %eax,0x34(%ebx)
   1a87b:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1a882:	c6 45 d8 00          	movb   $0x0,-0x28(%ebp)
   1a886:	e9 ad fe ff ff       	jmp    1a738 <fwrite.part.5+0x28>
   1a88b:	89 1c 24             	mov    %ebx,(%esp)
   1a88e:	e8 3d fd ff ff       	call   1a5d0 <fflush>
   1a893:	8b 45 dc             	mov    -0x24(%ebp),%eax
   1a896:	31 d2                	xor    %edx,%edx
   1a898:	f7 75 d4             	divl   -0x2c(%ebp)
   1a89b:	83 c4 3c             	add    $0x3c,%esp
   1a89e:	5b                   	pop    %ebx
   1a89f:	5e                   	pop    %esi
   1a8a0:	5f                   	pop    %edi
   1a8a1:	5d                   	pop    %ebp
   1a8a2:	c3                   	ret    
   1a8a3:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a8a7:	8d 04 3e             	lea    (%esi,%edi,1),%eax
   1a8aa:	89 04 24             	mov    %eax,(%esp)
   1a8ad:	e8 ce 0a 00 00       	call   1b380 <klog_write>
   1a8b2:	e9 6a ff ff ff       	jmp    1a821 <fwrite.part.5+0x111>
   1a8b7:	89 f6                	mov    %esi,%esi
   1a8b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001a8c0 <fwrite>:
   1a8c0:	55                   	push   %ebp
   1a8c1:	89 e5                	mov    %esp,%ebp
   1a8c3:	57                   	push   %edi
   1a8c4:	56                   	push   %esi
   1a8c5:	53                   	push   %ebx
   1a8c6:	83 ec 2c             	sub    $0x2c,%esp
   1a8c9:	8b 55 0c             	mov    0xc(%ebp),%edx
   1a8cc:	8b 75 10             	mov    0x10(%ebp),%esi
   1a8cf:	8b 7d 08             	mov    0x8(%ebp),%edi
   1a8d2:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   1a8d5:	8b 5d 14             	mov    0x14(%ebp),%ebx
   1a8d8:	85 f6                	test   %esi,%esi
   1a8da:	74 3c                	je     1a918 <fwrite+0x58>
   1a8dc:	85 d2                	test   %edx,%edx
   1a8de:	74 38                	je     1a918 <fwrite+0x58>
   1a8e0:	8b 43 20             	mov    0x20(%ebx),%eax
   1a8e3:	85 c0                	test   %eax,%eax
   1a8e5:	74 41                	je     1a928 <fwrite+0x68>
   1a8e7:	83 7b 2c 02          	cmpl   $0x2,0x2c(%ebx)
   1a8eb:	8b 43 24             	mov    0x24(%ebx),%eax
   1a8ee:	0f 84 cc 00 00 00    	je     1a9c0 <fwrite+0x100>
   1a8f4:	85 c0                	test   %eax,%eax
   1a8f6:	0f 84 34 01 00 00    	je     1aa30 <fwrite+0x170>
   1a8fc:	89 5d 08             	mov    %ebx,0x8(%ebp)
   1a8ff:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   1a902:	83 c4 2c             	add    $0x2c,%esp
   1a905:	89 f1                	mov    %esi,%ecx
   1a907:	89 f8                	mov    %edi,%eax
   1a909:	5b                   	pop    %ebx
   1a90a:	5e                   	pop    %esi
   1a90b:	5f                   	pop    %edi
   1a90c:	5d                   	pop    %ebp
   1a90d:	e9 fe fd ff ff       	jmp    1a710 <fwrite.part.5>
   1a912:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1a918:	31 f6                	xor    %esi,%esi
   1a91a:	83 c4 2c             	add    $0x2c,%esp
   1a91d:	89 f0                	mov    %esi,%eax
   1a91f:	5b                   	pop    %ebx
   1a920:	5e                   	pop    %esi
   1a921:	5f                   	pop    %edi
   1a922:	5d                   	pop    %ebp
   1a923:	c3                   	ret    
   1a924:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a928:	0f af f2             	imul   %edx,%esi
   1a92b:	85 f6                	test   %esi,%esi
   1a92d:	0f 84 1a 01 00 00    	je     1aa4d <fwrite+0x18d>
   1a933:	8b 43 0c             	mov    0xc(%ebx),%eax
   1a936:	85 c0                	test   %eax,%eax
   1a938:	0f 85 0f 01 00 00    	jne    1aa4d <fwrite+0x18d>
   1a93e:	31 d2                	xor    %edx,%edx
   1a940:	89 7d e0             	mov    %edi,-0x20(%ebp)
   1a943:	89 d7                	mov    %edx,%edi
   1a945:	eb 25                	jmp    1a96c <fwrite+0xac>
   1a947:	90                   	nop
   1a948:	8b 45 e0             	mov    -0x20(%ebp),%eax
   1a94b:	89 74 24 04          	mov    %esi,0x4(%esp)
   1a94f:	01 f8                	add    %edi,%eax
   1a951:	89 04 24             	mov    %eax,(%esp)
   1a954:	e8 27 0a 00 00       	call   1b380 <klog_write>
   1a959:	85 c0                	test   %eax,%eax
   1a95b:	7e 32                	jle    1a98f <fwrite+0xcf>
   1a95d:	29 c6                	sub    %eax,%esi
   1a95f:	01 c7                	add    %eax,%edi
   1a961:	85 f6                	test   %esi,%esi
   1a963:	74 33                	je     1a998 <fwrite+0xd8>
   1a965:	8b 4b 0c             	mov    0xc(%ebx),%ecx
   1a968:	85 c9                	test   %ecx,%ecx
   1a96a:	75 2c                	jne    1a998 <fwrite+0xd8>
   1a96c:	8b 43 14             	mov    0x14(%ebx),%eax
   1a96f:	85 c0                	test   %eax,%eax
   1a971:	75 d5                	jne    1a948 <fwrite+0x88>
   1a973:	8b 45 e0             	mov    -0x20(%ebp),%eax
   1a976:	89 74 24 08          	mov    %esi,0x8(%esp)
   1a97a:	01 f8                	add    %edi,%eax
   1a97c:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a980:	8b 43 08             	mov    0x8(%ebx),%eax
   1a983:	89 04 24             	mov    %eax,(%esp)
   1a986:	e8 55 e2 00 00       	call   28be0 <write>
   1a98b:	85 c0                	test   %eax,%eax
   1a98d:	7f ce                	jg     1a95d <fwrite+0x9d>
   1a98f:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   1a996:	eb c9                	jmp    1a961 <fwrite+0xa1>
   1a998:	89 f8                	mov    %edi,%eax
   1a99a:	85 ff                	test   %edi,%edi
   1a99c:	74 09                	je     1a9a7 <fwrite+0xe7>
   1a99e:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   1a9a5:	89 f8                	mov    %edi,%eax
   1a9a7:	31 d2                	xor    %edx,%edx
   1a9a9:	89 1c 24             	mov    %ebx,(%esp)
   1a9ac:	f7 75 e4             	divl   -0x1c(%ebp)
   1a9af:	89 c6                	mov    %eax,%esi
   1a9b1:	e8 1a fc ff ff       	call   1a5d0 <fflush>
   1a9b6:	e9 5f ff ff ff       	jmp    1a91a <fwrite+0x5a>
   1a9bb:	90                   	nop
   1a9bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1a9c0:	85 c0                	test   %eax,%eax
   1a9c2:	74 6c                	je     1aa30 <fwrite+0x170>
   1a9c4:	8b 53 0c             	mov    0xc(%ebx),%edx
   1a9c7:	85 d2                	test   %edx,%edx
   1a9c9:	0f 85 2d ff ff ff    	jne    1a8fc <fwrite+0x3c>
   1a9cf:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1a9d2:	2b 4b 34             	sub    0x34(%ebx),%ecx
   1a9d5:	74 43                	je     1aa1a <fwrite+0x15a>
   1a9d7:	89 c8                	mov    %ecx,%eax
   1a9d9:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   1a9e0:	00 
   1a9e1:	f7 d8                	neg    %eax
   1a9e3:	89 c2                	mov    %eax,%edx
   1a9e5:	89 44 24 04          	mov    %eax,0x4(%esp)
   1a9e9:	c1 fa 1f             	sar    $0x1f,%edx
   1a9ec:	89 54 24 08          	mov    %edx,0x8(%esp)
   1a9f0:	8b 43 08             	mov    0x8(%ebx),%eax
   1a9f3:	89 4d dc             	mov    %ecx,-0x24(%ebp)
   1a9f6:	89 04 24             	mov    %eax,(%esp)
   1a9f9:	e8 a2 e6 00 00       	call   290a0 <lseek>
   1a9fe:	8b 4d dc             	mov    -0x24(%ebp),%ecx
   1aa01:	83 7b 2c 01          	cmpl   $0x1,0x2c(%ebx)
   1aa05:	75 10                	jne    1aa17 <fwrite+0x157>
   1aa07:	8b 43 34             	mov    0x34(%ebx),%eax
   1aa0a:	ba 01 00 00 00       	mov    $0x1,%edx
   1aa0f:	89 1c 24             	mov    %ebx,(%esp)
   1aa12:	e8 79 e3 ff ff       	call   18d90 <_fwrite>
   1aa17:	8b 43 24             	mov    0x24(%ebx),%eax
   1aa1a:	89 43 30             	mov    %eax,0x30(%ebx)
   1aa1d:	89 43 34             	mov    %eax,0x34(%ebx)
   1aa20:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1aa27:	e9 c8 fe ff ff       	jmp    1a8f4 <fwrite+0x34>
   1aa2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1aa30:	8b 43 28             	mov    0x28(%ebx),%eax
   1aa33:	89 04 24             	mov    %eax,(%esp)
   1aa36:	e8 95 56 00 00       	call   200d0 <malloc>
   1aa3b:	89 43 24             	mov    %eax,0x24(%ebx)
   1aa3e:	85 c0                	test   %eax,%eax
   1aa40:	74 12                	je     1aa54 <fwrite+0x194>
   1aa42:	89 43 30             	mov    %eax,0x30(%ebx)
   1aa45:	89 43 34             	mov    %eax,0x34(%ebx)
   1aa48:	e9 af fe ff ff       	jmp    1a8fc <fwrite+0x3c>
   1aa4d:	31 c0                	xor    %eax,%eax
   1aa4f:	e9 53 ff ff ff       	jmp    1a9a7 <fwrite+0xe7>
   1aa54:	e8 87 5c ff ff       	call   106e0 <__errno>
   1aa59:	31 f6                	xor    %esi,%esi
   1aa5b:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   1aa61:	e9 b4 fe ff ff       	jmp    1a91a <fwrite+0x5a>
   1aa66:	8d 76 00             	lea    0x0(%esi),%esi
   1aa69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001aa70 <fputs>:
   1aa70:	55                   	push   %ebp
   1aa71:	89 e5                	mov    %esp,%ebp
   1aa73:	57                   	push   %edi
   1aa74:	56                   	push   %esi
   1aa75:	53                   	push   %ebx
   1aa76:	83 ec 2c             	sub    $0x2c,%esp
   1aa79:	8b 75 08             	mov    0x8(%ebp),%esi
   1aa7c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   1aa7f:	89 34 24             	mov    %esi,(%esp)
   1aa82:	e8 69 95 ff ff       	call   13ff0 <str_size>
   1aa87:	89 c7                	mov    %eax,%edi
   1aa89:	85 c0                	test   %eax,%eax
   1aa8b:	74 3b                	je     1aac8 <fputs+0x58>
   1aa8d:	8b 43 20             	mov    0x20(%ebx),%eax
   1aa90:	85 c0                	test   %eax,%eax
   1aa92:	74 44                	je     1aad8 <fputs+0x68>
   1aa94:	83 7b 2c 02          	cmpl   $0x2,0x2c(%ebx)
   1aa98:	8b 43 24             	mov    0x24(%ebx),%eax
   1aa9b:	0f 84 d7 00 00 00    	je     1ab78 <fputs+0x108>
   1aaa1:	85 c0                	test   %eax,%eax
   1aaa3:	0f 84 3f 01 00 00    	je     1abe8 <fputs+0x178>
   1aaa9:	89 5d 08             	mov    %ebx,0x8(%ebp)
   1aaac:	83 c4 2c             	add    $0x2c,%esp
   1aaaf:	89 fa                	mov    %edi,%edx
   1aab1:	89 f0                	mov    %esi,%eax
   1aab3:	b9 01 00 00 00       	mov    $0x1,%ecx
   1aab8:	5b                   	pop    %ebx
   1aab9:	5e                   	pop    %esi
   1aaba:	5f                   	pop    %edi
   1aabb:	5d                   	pop    %ebp
   1aabc:	e9 4f fc ff ff       	jmp    1a710 <fwrite.part.5>
   1aac1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1aac8:	31 c0                	xor    %eax,%eax
   1aaca:	83 c4 2c             	add    $0x2c,%esp
   1aacd:	5b                   	pop    %ebx
   1aace:	5e                   	pop    %esi
   1aacf:	5f                   	pop    %edi
   1aad0:	5d                   	pop    %ebp
   1aad1:	c3                   	ret    
   1aad2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1aad8:	89 fa                	mov    %edi,%edx
   1aada:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   1aae1:	eb 2e                	jmp    1ab11 <fputs+0xa1>
   1aae3:	90                   	nop
   1aae4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1aae8:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1aaeb:	89 54 24 04          	mov    %edx,0x4(%esp)
   1aaef:	01 f0                	add    %esi,%eax
   1aaf1:	89 55 e0             	mov    %edx,-0x20(%ebp)
   1aaf4:	89 04 24             	mov    %eax,(%esp)
   1aaf7:	e8 84 08 00 00       	call   1b380 <klog_write>
   1aafc:	8b 55 e0             	mov    -0x20(%ebp),%edx
   1aaff:	85 c0                	test   %eax,%eax
   1ab01:	7e 3e                	jle    1ab41 <fputs+0xd1>
   1ab03:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   1ab06:	29 c2                	sub    %eax,%edx
   1ab08:	01 c1                	add    %eax,%ecx
   1ab0a:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
   1ab0d:	85 d2                	test   %edx,%edx
   1ab0f:	74 3f                	je     1ab50 <fputs+0xe0>
   1ab11:	8b 43 0c             	mov    0xc(%ebx),%eax
   1ab14:	85 c0                	test   %eax,%eax
   1ab16:	75 38                	jne    1ab50 <fputs+0xe0>
   1ab18:	8b 43 14             	mov    0x14(%ebx),%eax
   1ab1b:	85 c0                	test   %eax,%eax
   1ab1d:	75 c9                	jne    1aae8 <fputs+0x78>
   1ab1f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1ab22:	89 54 24 08          	mov    %edx,0x8(%esp)
   1ab26:	01 f0                	add    %esi,%eax
   1ab28:	89 44 24 04          	mov    %eax,0x4(%esp)
   1ab2c:	8b 43 08             	mov    0x8(%ebx),%eax
   1ab2f:	89 55 e0             	mov    %edx,-0x20(%ebp)
   1ab32:	89 04 24             	mov    %eax,(%esp)
   1ab35:	e8 a6 e0 00 00       	call   28be0 <write>
   1ab3a:	8b 55 e0             	mov    -0x20(%ebp),%edx
   1ab3d:	85 c0                	test   %eax,%eax
   1ab3f:	7f c2                	jg     1ab03 <fputs+0x93>
   1ab41:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   1ab48:	eb c3                	jmp    1ab0d <fputs+0x9d>
   1ab4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1ab50:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   1ab53:	85 c9                	test   %ecx,%ecx
   1ab55:	74 07                	je     1ab5e <fputs+0xee>
   1ab57:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   1ab5e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1ab61:	31 d2                	xor    %edx,%edx
   1ab63:	f7 f7                	div    %edi
   1ab65:	89 c6                	mov    %eax,%esi
   1ab67:	89 1c 24             	mov    %ebx,(%esp)
   1ab6a:	e8 61 fa ff ff       	call   1a5d0 <fflush>
   1ab6f:	89 f0                	mov    %esi,%eax
   1ab71:	e9 54 ff ff ff       	jmp    1aaca <fputs+0x5a>
   1ab76:	66 90                	xchg   %ax,%ax
   1ab78:	85 c0                	test   %eax,%eax
   1ab7a:	74 6c                	je     1abe8 <fputs+0x178>
   1ab7c:	8b 53 0c             	mov    0xc(%ebx),%edx
   1ab7f:	85 d2                	test   %edx,%edx
   1ab81:	0f 85 22 ff ff ff    	jne    1aaa9 <fputs+0x39>
   1ab87:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1ab8a:	2b 4b 34             	sub    0x34(%ebx),%ecx
   1ab8d:	74 43                	je     1abd2 <fputs+0x162>
   1ab8f:	89 c8                	mov    %ecx,%eax
   1ab91:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   1ab98:	00 
   1ab99:	f7 d8                	neg    %eax
   1ab9b:	89 c2                	mov    %eax,%edx
   1ab9d:	89 44 24 04          	mov    %eax,0x4(%esp)
   1aba1:	c1 fa 1f             	sar    $0x1f,%edx
   1aba4:	89 54 24 08          	mov    %edx,0x8(%esp)
   1aba8:	8b 43 08             	mov    0x8(%ebx),%eax
   1abab:	89 4d e0             	mov    %ecx,-0x20(%ebp)
   1abae:	89 04 24             	mov    %eax,(%esp)
   1abb1:	e8 ea e4 00 00       	call   290a0 <lseek>
   1abb6:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   1abb9:	83 7b 2c 01          	cmpl   $0x1,0x2c(%ebx)
   1abbd:	75 10                	jne    1abcf <fputs+0x15f>
   1abbf:	8b 43 34             	mov    0x34(%ebx),%eax
   1abc2:	ba 01 00 00 00       	mov    $0x1,%edx
   1abc7:	89 1c 24             	mov    %ebx,(%esp)
   1abca:	e8 c1 e1 ff ff       	call   18d90 <_fwrite>
   1abcf:	8b 43 24             	mov    0x24(%ebx),%eax
   1abd2:	89 43 30             	mov    %eax,0x30(%ebx)
   1abd5:	89 43 34             	mov    %eax,0x34(%ebx)
   1abd8:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1abdf:	e9 bd fe ff ff       	jmp    1aaa1 <fputs+0x31>
   1abe4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1abe8:	8b 43 28             	mov    0x28(%ebx),%eax
   1abeb:	89 04 24             	mov    %eax,(%esp)
   1abee:	e8 dd 54 00 00       	call   200d0 <malloc>
   1abf3:	89 43 24             	mov    %eax,0x24(%ebx)
   1abf6:	85 c0                	test   %eax,%eax
   1abf8:	74 0b                	je     1ac05 <fputs+0x195>
   1abfa:	89 43 30             	mov    %eax,0x30(%ebx)
   1abfd:	89 43 34             	mov    %eax,0x34(%ebx)
   1ac00:	e9 a4 fe ff ff       	jmp    1aaa9 <fputs+0x39>
   1ac05:	e8 d6 5a ff ff       	call   106e0 <__errno>
   1ac0a:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   1ac10:	31 c0                	xor    %eax,%eax
   1ac12:	e9 b3 fe ff ff       	jmp    1aaca <fputs+0x5a>
   1ac17:	89 f6                	mov    %esi,%esi
   1ac19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001ac20 <puts>:
   1ac20:	55                   	push   %ebp
   1ac21:	89 e5                	mov    %esp,%ebp
   1ac23:	57                   	push   %edi
   1ac24:	56                   	push   %esi
   1ac25:	53                   	push   %ebx
   1ac26:	83 ec 2c             	sub    $0x2c,%esp
   1ac29:	8b 75 08             	mov    0x8(%ebp),%esi
   1ac2c:	8b 1d bc 06 03 00    	mov    0x306bc,%ebx
   1ac32:	89 34 24             	mov    %esi,(%esp)
   1ac35:	e8 b6 93 ff ff       	call   13ff0 <str_size>
   1ac3a:	89 c7                	mov    %eax,%edi
   1ac3c:	85 c0                	test   %eax,%eax
   1ac3e:	74 38                	je     1ac78 <puts+0x58>
   1ac40:	8b 43 20             	mov    0x20(%ebx),%eax
   1ac43:	85 c0                	test   %eax,%eax
   1ac45:	74 41                	je     1ac88 <puts+0x68>
   1ac47:	83 7b 2c 02          	cmpl   $0x2,0x2c(%ebx)
   1ac4b:	8b 43 24             	mov    0x24(%ebx),%eax
   1ac4e:	0f 84 d4 00 00 00    	je     1ad28 <puts+0x108>
   1ac54:	85 c0                	test   %eax,%eax
   1ac56:	0f 84 3c 01 00 00    	je     1ad98 <puts+0x178>
   1ac5c:	89 5d 08             	mov    %ebx,0x8(%ebp)
   1ac5f:	83 c4 2c             	add    $0x2c,%esp
   1ac62:	89 fa                	mov    %edi,%edx
   1ac64:	89 f0                	mov    %esi,%eax
   1ac66:	b9 01 00 00 00       	mov    $0x1,%ecx
   1ac6b:	5b                   	pop    %ebx
   1ac6c:	5e                   	pop    %esi
   1ac6d:	5f                   	pop    %edi
   1ac6e:	5d                   	pop    %ebp
   1ac6f:	e9 9c fa ff ff       	jmp    1a710 <fwrite.part.5>
   1ac74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ac78:	31 c0                	xor    %eax,%eax
   1ac7a:	83 c4 2c             	add    $0x2c,%esp
   1ac7d:	5b                   	pop    %ebx
   1ac7e:	5e                   	pop    %esi
   1ac7f:	5f                   	pop    %edi
   1ac80:	5d                   	pop    %ebp
   1ac81:	c3                   	ret    
   1ac82:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1ac88:	89 fa                	mov    %edi,%edx
   1ac8a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   1ac91:	eb 2e                	jmp    1acc1 <puts+0xa1>
   1ac93:	90                   	nop
   1ac94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ac98:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1ac9b:	89 54 24 04          	mov    %edx,0x4(%esp)
   1ac9f:	01 f0                	add    %esi,%eax
   1aca1:	89 55 e0             	mov    %edx,-0x20(%ebp)
   1aca4:	89 04 24             	mov    %eax,(%esp)
   1aca7:	e8 d4 06 00 00       	call   1b380 <klog_write>
   1acac:	8b 55 e0             	mov    -0x20(%ebp),%edx
   1acaf:	85 c0                	test   %eax,%eax
   1acb1:	7e 3e                	jle    1acf1 <puts+0xd1>
   1acb3:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   1acb6:	29 c2                	sub    %eax,%edx
   1acb8:	01 c1                	add    %eax,%ecx
   1acba:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
   1acbd:	85 d2                	test   %edx,%edx
   1acbf:	74 3f                	je     1ad00 <puts+0xe0>
   1acc1:	8b 43 0c             	mov    0xc(%ebx),%eax
   1acc4:	85 c0                	test   %eax,%eax
   1acc6:	75 38                	jne    1ad00 <puts+0xe0>
   1acc8:	8b 43 14             	mov    0x14(%ebx),%eax
   1accb:	85 c0                	test   %eax,%eax
   1accd:	75 c9                	jne    1ac98 <puts+0x78>
   1accf:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1acd2:	89 54 24 08          	mov    %edx,0x8(%esp)
   1acd6:	01 f0                	add    %esi,%eax
   1acd8:	89 44 24 04          	mov    %eax,0x4(%esp)
   1acdc:	8b 43 08             	mov    0x8(%ebx),%eax
   1acdf:	89 55 e0             	mov    %edx,-0x20(%ebp)
   1ace2:	89 04 24             	mov    %eax,(%esp)
   1ace5:	e8 f6 de 00 00       	call   28be0 <write>
   1acea:	8b 55 e0             	mov    -0x20(%ebp),%edx
   1aced:	85 c0                	test   %eax,%eax
   1acef:	7f c2                	jg     1acb3 <puts+0x93>
   1acf1:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   1acf8:	eb c3                	jmp    1acbd <puts+0x9d>
   1acfa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1ad00:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   1ad03:	85 c9                	test   %ecx,%ecx
   1ad05:	74 07                	je     1ad0e <puts+0xee>
   1ad07:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   1ad0e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1ad11:	31 d2                	xor    %edx,%edx
   1ad13:	f7 f7                	div    %edi
   1ad15:	89 c6                	mov    %eax,%esi
   1ad17:	89 1c 24             	mov    %ebx,(%esp)
   1ad1a:	e8 b1 f8 ff ff       	call   1a5d0 <fflush>
   1ad1f:	89 f0                	mov    %esi,%eax
   1ad21:	e9 54 ff ff ff       	jmp    1ac7a <puts+0x5a>
   1ad26:	66 90                	xchg   %ax,%ax
   1ad28:	85 c0                	test   %eax,%eax
   1ad2a:	74 6c                	je     1ad98 <puts+0x178>
   1ad2c:	8b 53 0c             	mov    0xc(%ebx),%edx
   1ad2f:	85 d2                	test   %edx,%edx
   1ad31:	0f 85 25 ff ff ff    	jne    1ac5c <puts+0x3c>
   1ad37:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1ad3a:	2b 4b 34             	sub    0x34(%ebx),%ecx
   1ad3d:	74 43                	je     1ad82 <puts+0x162>
   1ad3f:	89 c8                	mov    %ecx,%eax
   1ad41:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   1ad48:	00 
   1ad49:	f7 d8                	neg    %eax
   1ad4b:	89 c2                	mov    %eax,%edx
   1ad4d:	89 44 24 04          	mov    %eax,0x4(%esp)
   1ad51:	c1 fa 1f             	sar    $0x1f,%edx
   1ad54:	89 54 24 08          	mov    %edx,0x8(%esp)
   1ad58:	8b 43 08             	mov    0x8(%ebx),%eax
   1ad5b:	89 4d e0             	mov    %ecx,-0x20(%ebp)
   1ad5e:	89 04 24             	mov    %eax,(%esp)
   1ad61:	e8 3a e3 00 00       	call   290a0 <lseek>
   1ad66:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   1ad69:	83 7b 2c 01          	cmpl   $0x1,0x2c(%ebx)
   1ad6d:	75 10                	jne    1ad7f <puts+0x15f>
   1ad6f:	8b 43 34             	mov    0x34(%ebx),%eax
   1ad72:	ba 01 00 00 00       	mov    $0x1,%edx
   1ad77:	89 1c 24             	mov    %ebx,(%esp)
   1ad7a:	e8 11 e0 ff ff       	call   18d90 <_fwrite>
   1ad7f:	8b 43 24             	mov    0x24(%ebx),%eax
   1ad82:	89 43 30             	mov    %eax,0x30(%ebx)
   1ad85:	89 43 34             	mov    %eax,0x34(%ebx)
   1ad88:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1ad8f:	e9 c0 fe ff ff       	jmp    1ac54 <puts+0x34>
   1ad94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ad98:	8b 43 28             	mov    0x28(%ebx),%eax
   1ad9b:	89 04 24             	mov    %eax,(%esp)
   1ad9e:	e8 2d 53 00 00       	call   200d0 <malloc>
   1ada3:	89 43 24             	mov    %eax,0x24(%ebx)
   1ada6:	85 c0                	test   %eax,%eax
   1ada8:	74 0b                	je     1adb5 <puts+0x195>
   1adaa:	89 43 30             	mov    %eax,0x30(%ebx)
   1adad:	89 43 34             	mov    %eax,0x34(%ebx)
   1adb0:	e9 a7 fe ff ff       	jmp    1ac5c <puts+0x3c>
   1adb5:	e8 26 59 ff ff       	call   106e0 <__errno>
   1adba:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   1adc0:	31 c0                	xor    %eax,%eax
   1adc2:	e9 b3 fe ff ff       	jmp    1ac7a <puts+0x5a>
   1adc7:	89 f6                	mov    %esi,%esi
   1adc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001add0 <fputc>:
   1add0:	55                   	push   %ebp
   1add1:	89 e5                	mov    %esp,%ebp
   1add3:	57                   	push   %edi
   1add4:	56                   	push   %esi
   1add5:	53                   	push   %ebx
   1add6:	83 ec 3c             	sub    $0x3c,%esp
   1add9:	8d 45 e0             	lea    -0x20(%ebp),%eax
   1addc:	8d 7d e4             	lea    -0x1c(%ebp),%edi
   1addf:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   1ade2:	89 44 24 08          	mov    %eax,0x8(%esp)
   1ade6:	8b 45 08             	mov    0x8(%ebp),%eax
   1ade9:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)
   1adf0:	00 
   1adf1:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1adf5:	89 04 24             	mov    %eax,(%esp)
   1adf8:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
   1adff:	e8 fc 90 ff ff       	call   13f00 <chr_encode>
   1ae04:	85 c0                	test   %eax,%eax
   1ae06:	0f 85 ac 00 00 00    	jne    1aeb8 <fputc+0xe8>
   1ae0c:	8b 75 e0             	mov    -0x20(%ebp),%esi
   1ae0f:	85 f6                	test   %esi,%esi
   1ae11:	74 34                	je     1ae47 <fputc+0x77>
   1ae13:	8b 43 20             	mov    0x20(%ebx),%eax
   1ae16:	85 c0                	test   %eax,%eax
   1ae18:	74 3e                	je     1ae58 <fputc+0x88>
   1ae1a:	83 7b 2c 02          	cmpl   $0x2,0x2c(%ebx)
   1ae1e:	8b 43 24             	mov    0x24(%ebx),%eax
   1ae21:	0f 84 c9 00 00 00    	je     1aef0 <fputc+0x120>
   1ae27:	85 c0                	test   %eax,%eax
   1ae29:	0f 84 31 01 00 00    	je     1af60 <fputc+0x190>
   1ae2f:	ba 01 00 00 00       	mov    $0x1,%edx
   1ae34:	89 1c 24             	mov    %ebx,(%esp)
   1ae37:	89 f1                	mov    %esi,%ecx
   1ae39:	89 f8                	mov    %edi,%eax
   1ae3b:	e8 d0 f8 ff ff       	call   1a710 <fwrite.part.5>
   1ae40:	89 c2                	mov    %eax,%edx
   1ae42:	39 55 e0             	cmp    %edx,-0x20(%ebp)
   1ae45:	77 71                	ja     1aeb8 <fputc+0xe8>
   1ae47:	8b 45 08             	mov    0x8(%ebp),%eax
   1ae4a:	83 c4 3c             	add    $0x3c,%esp
   1ae4d:	5b                   	pop    %ebx
   1ae4e:	5e                   	pop    %esi
   1ae4f:	5f                   	pop    %edi
   1ae50:	5d                   	pop    %ebp
   1ae51:	c3                   	ret    
   1ae52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1ae58:	31 d2                	xor    %edx,%edx
   1ae5a:	eb 25                	jmp    1ae81 <fputc+0xb1>
   1ae5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ae60:	8d 04 17             	lea    (%edi,%edx,1),%eax
   1ae63:	89 74 24 04          	mov    %esi,0x4(%esp)
   1ae67:	89 04 24             	mov    %eax,(%esp)
   1ae6a:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1ae6d:	e8 0e 05 00 00       	call   1b380 <klog_write>
   1ae72:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1ae75:	85 c0                	test   %eax,%eax
   1ae77:	7e 36                	jle    1aeaf <fputc+0xdf>
   1ae79:	29 c6                	sub    %eax,%esi
   1ae7b:	01 c2                	add    %eax,%edx
   1ae7d:	85 f6                	test   %esi,%esi
   1ae7f:	74 4f                	je     1aed0 <fputc+0x100>
   1ae81:	8b 4b 0c             	mov    0xc(%ebx),%ecx
   1ae84:	85 c9                	test   %ecx,%ecx
   1ae86:	75 48                	jne    1aed0 <fputc+0x100>
   1ae88:	8b 43 14             	mov    0x14(%ebx),%eax
   1ae8b:	85 c0                	test   %eax,%eax
   1ae8d:	75 d1                	jne    1ae60 <fputc+0x90>
   1ae8f:	8d 04 17             	lea    (%edi,%edx,1),%eax
   1ae92:	89 74 24 08          	mov    %esi,0x8(%esp)
   1ae96:	89 44 24 04          	mov    %eax,0x4(%esp)
   1ae9a:	8b 43 08             	mov    0x8(%ebx),%eax
   1ae9d:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1aea0:	89 04 24             	mov    %eax,(%esp)
   1aea3:	e8 38 dd 00 00       	call   28be0 <write>
   1aea8:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1aeab:	85 c0                	test   %eax,%eax
   1aead:	7f ca                	jg     1ae79 <fputc+0xa9>
   1aeaf:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   1aeb6:	eb c5                	jmp    1ae7d <fputc+0xad>
   1aeb8:	c7 45 08 ff ff ff ff 	movl   $0xffffffff,0x8(%ebp)
   1aebf:	8b 45 08             	mov    0x8(%ebp),%eax
   1aec2:	83 c4 3c             	add    $0x3c,%esp
   1aec5:	5b                   	pop    %ebx
   1aec6:	5e                   	pop    %esi
   1aec7:	5f                   	pop    %edi
   1aec8:	5d                   	pop    %ebp
   1aec9:	c3                   	ret    
   1aeca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1aed0:	85 d2                	test   %edx,%edx
   1aed2:	74 07                	je     1aedb <fputc+0x10b>
   1aed4:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   1aedb:	89 1c 24             	mov    %ebx,(%esp)
   1aede:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1aee1:	e8 ea f6 ff ff       	call   1a5d0 <fflush>
   1aee6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1aee9:	e9 54 ff ff ff       	jmp    1ae42 <fputc+0x72>
   1aeee:	66 90                	xchg   %ax,%ax
   1aef0:	85 c0                	test   %eax,%eax
   1aef2:	74 6c                	je     1af60 <fputc+0x190>
   1aef4:	8b 53 0c             	mov    0xc(%ebx),%edx
   1aef7:	85 d2                	test   %edx,%edx
   1aef9:	0f 85 30 ff ff ff    	jne    1ae2f <fputc+0x5f>
   1aeff:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1af02:	2b 4b 34             	sub    0x34(%ebx),%ecx
   1af05:	74 43                	je     1af4a <fputc+0x17a>
   1af07:	89 c8                	mov    %ecx,%eax
   1af09:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   1af10:	00 
   1af11:	f7 d8                	neg    %eax
   1af13:	89 c2                	mov    %eax,%edx
   1af15:	89 44 24 04          	mov    %eax,0x4(%esp)
   1af19:	c1 fa 1f             	sar    $0x1f,%edx
   1af1c:	89 54 24 08          	mov    %edx,0x8(%esp)
   1af20:	8b 43 08             	mov    0x8(%ebx),%eax
   1af23:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
   1af26:	89 04 24             	mov    %eax,(%esp)
   1af29:	e8 72 e1 00 00       	call   290a0 <lseek>
   1af2e:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   1af31:	83 7b 2c 01          	cmpl   $0x1,0x2c(%ebx)
   1af35:	75 10                	jne    1af47 <fputc+0x177>
   1af37:	8b 43 34             	mov    0x34(%ebx),%eax
   1af3a:	ba 01 00 00 00       	mov    $0x1,%edx
   1af3f:	89 1c 24             	mov    %ebx,(%esp)
   1af42:	e8 49 de ff ff       	call   18d90 <_fwrite>
   1af47:	8b 43 24             	mov    0x24(%ebx),%eax
   1af4a:	89 43 30             	mov    %eax,0x30(%ebx)
   1af4d:	89 43 34             	mov    %eax,0x34(%ebx)
   1af50:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1af57:	e9 cb fe ff ff       	jmp    1ae27 <fputc+0x57>
   1af5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1af60:	8b 43 28             	mov    0x28(%ebx),%eax
   1af63:	89 04 24             	mov    %eax,(%esp)
   1af66:	e8 65 51 00 00       	call   200d0 <malloc>
   1af6b:	89 43 24             	mov    %eax,0x24(%ebx)
   1af6e:	85 c0                	test   %eax,%eax
   1af70:	74 0b                	je     1af7d <fputc+0x1ad>
   1af72:	89 43 30             	mov    %eax,0x30(%ebx)
   1af75:	89 43 34             	mov    %eax,0x34(%ebx)
   1af78:	e9 b2 fe ff ff       	jmp    1ae2f <fputc+0x5f>
   1af7d:	e8 5e 57 ff ff       	call   106e0 <__errno>
   1af82:	31 d2                	xor    %edx,%edx
   1af84:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   1af8a:	e9 b3 fe ff ff       	jmp    1ae42 <fputc+0x72>
   1af8f:	90                   	nop

0001af90 <putchar>:
   1af90:	55                   	push   %ebp
   1af91:	89 e5                	mov    %esp,%ebp
   1af93:	57                   	push   %edi
   1af94:	56                   	push   %esi
   1af95:	53                   	push   %ebx
   1af96:	83 ec 3c             	sub    $0x3c,%esp
   1af99:	8d 45 e0             	lea    -0x20(%ebp),%eax
   1af9c:	8d 7d e4             	lea    -0x1c(%ebp),%edi
   1af9f:	8b 1d bc 06 03 00    	mov    0x306bc,%ebx
   1afa5:	89 44 24 08          	mov    %eax,0x8(%esp)
   1afa9:	8b 45 08             	mov    0x8(%ebp),%eax
   1afac:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)
   1afb3:	00 
   1afb4:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1afb8:	89 04 24             	mov    %eax,(%esp)
   1afbb:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
   1afc2:	e8 39 8f ff ff       	call   13f00 <chr_encode>
   1afc7:	85 c0                	test   %eax,%eax
   1afc9:	0f 85 a9 00 00 00    	jne    1b078 <putchar+0xe8>
   1afcf:	8b 75 e0             	mov    -0x20(%ebp),%esi
   1afd2:	85 f6                	test   %esi,%esi
   1afd4:	74 34                	je     1b00a <putchar+0x7a>
   1afd6:	8b 43 20             	mov    0x20(%ebx),%eax
   1afd9:	85 c0                	test   %eax,%eax
   1afdb:	74 3b                	je     1b018 <putchar+0x88>
   1afdd:	83 7b 2c 02          	cmpl   $0x2,0x2c(%ebx)
   1afe1:	8b 43 24             	mov    0x24(%ebx),%eax
   1afe4:	0f 84 c6 00 00 00    	je     1b0b0 <putchar+0x120>
   1afea:	85 c0                	test   %eax,%eax
   1afec:	0f 84 2e 01 00 00    	je     1b120 <putchar+0x190>
   1aff2:	ba 01 00 00 00       	mov    $0x1,%edx
   1aff7:	89 1c 24             	mov    %ebx,(%esp)
   1affa:	89 f1                	mov    %esi,%ecx
   1affc:	89 f8                	mov    %edi,%eax
   1affe:	e8 0d f7 ff ff       	call   1a710 <fwrite.part.5>
   1b003:	89 c2                	mov    %eax,%edx
   1b005:	39 55 e0             	cmp    %edx,-0x20(%ebp)
   1b008:	77 6e                	ja     1b078 <putchar+0xe8>
   1b00a:	8b 45 08             	mov    0x8(%ebp),%eax
   1b00d:	83 c4 3c             	add    $0x3c,%esp
   1b010:	5b                   	pop    %ebx
   1b011:	5e                   	pop    %esi
   1b012:	5f                   	pop    %edi
   1b013:	5d                   	pop    %ebp
   1b014:	c3                   	ret    
   1b015:	8d 76 00             	lea    0x0(%esi),%esi
   1b018:	31 d2                	xor    %edx,%edx
   1b01a:	eb 25                	jmp    1b041 <putchar+0xb1>
   1b01c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1b020:	8d 04 17             	lea    (%edi,%edx,1),%eax
   1b023:	89 74 24 04          	mov    %esi,0x4(%esp)
   1b027:	89 04 24             	mov    %eax,(%esp)
   1b02a:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1b02d:	e8 4e 03 00 00       	call   1b380 <klog_write>
   1b032:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1b035:	85 c0                	test   %eax,%eax
   1b037:	7e 36                	jle    1b06f <putchar+0xdf>
   1b039:	29 c6                	sub    %eax,%esi
   1b03b:	01 c2                	add    %eax,%edx
   1b03d:	85 f6                	test   %esi,%esi
   1b03f:	74 4f                	je     1b090 <putchar+0x100>
   1b041:	8b 4b 0c             	mov    0xc(%ebx),%ecx
   1b044:	85 c9                	test   %ecx,%ecx
   1b046:	75 48                	jne    1b090 <putchar+0x100>
   1b048:	8b 43 14             	mov    0x14(%ebx),%eax
   1b04b:	85 c0                	test   %eax,%eax
   1b04d:	75 d1                	jne    1b020 <putchar+0x90>
   1b04f:	8d 04 17             	lea    (%edi,%edx,1),%eax
   1b052:	89 74 24 08          	mov    %esi,0x8(%esp)
   1b056:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b05a:	8b 43 08             	mov    0x8(%ebx),%eax
   1b05d:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1b060:	89 04 24             	mov    %eax,(%esp)
   1b063:	e8 78 db 00 00       	call   28be0 <write>
   1b068:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1b06b:	85 c0                	test   %eax,%eax
   1b06d:	7f ca                	jg     1b039 <putchar+0xa9>
   1b06f:	c7 43 0c 01 00 00 00 	movl   $0x1,0xc(%ebx)
   1b076:	eb c5                	jmp    1b03d <putchar+0xad>
   1b078:	c7 45 08 ff ff ff ff 	movl   $0xffffffff,0x8(%ebp)
   1b07f:	8b 45 08             	mov    0x8(%ebp),%eax
   1b082:	83 c4 3c             	add    $0x3c,%esp
   1b085:	5b                   	pop    %ebx
   1b086:	5e                   	pop    %esi
   1b087:	5f                   	pop    %edi
   1b088:	5d                   	pop    %ebp
   1b089:	c3                   	ret    
   1b08a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1b090:	85 d2                	test   %edx,%edx
   1b092:	74 07                	je     1b09b <putchar+0x10b>
   1b094:	c7 43 1c 01 00 00 00 	movl   $0x1,0x1c(%ebx)
   1b09b:	89 1c 24             	mov    %ebx,(%esp)
   1b09e:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1b0a1:	e8 2a f5 ff ff       	call   1a5d0 <fflush>
   1b0a6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1b0a9:	e9 57 ff ff ff       	jmp    1b005 <putchar+0x75>
   1b0ae:	66 90                	xchg   %ax,%ax
   1b0b0:	85 c0                	test   %eax,%eax
   1b0b2:	74 6c                	je     1b120 <putchar+0x190>
   1b0b4:	8b 53 0c             	mov    0xc(%ebx),%edx
   1b0b7:	85 d2                	test   %edx,%edx
   1b0b9:	0f 85 33 ff ff ff    	jne    1aff2 <putchar+0x62>
   1b0bf:	8b 4b 30             	mov    0x30(%ebx),%ecx
   1b0c2:	2b 4b 34             	sub    0x34(%ebx),%ecx
   1b0c5:	74 43                	je     1b10a <putchar+0x17a>
   1b0c7:	89 c8                	mov    %ecx,%eax
   1b0c9:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
   1b0d0:	00 
   1b0d1:	f7 d8                	neg    %eax
   1b0d3:	89 c2                	mov    %eax,%edx
   1b0d5:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b0d9:	c1 fa 1f             	sar    $0x1f,%edx
   1b0dc:	89 54 24 08          	mov    %edx,0x8(%esp)
   1b0e0:	8b 43 08             	mov    0x8(%ebx),%eax
   1b0e3:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
   1b0e6:	89 04 24             	mov    %eax,(%esp)
   1b0e9:	e8 b2 df 00 00       	call   290a0 <lseek>
   1b0ee:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   1b0f1:	83 7b 2c 01          	cmpl   $0x1,0x2c(%ebx)
   1b0f5:	75 10                	jne    1b107 <putchar+0x177>
   1b0f7:	8b 43 34             	mov    0x34(%ebx),%eax
   1b0fa:	ba 01 00 00 00       	mov    $0x1,%edx
   1b0ff:	89 1c 24             	mov    %ebx,(%esp)
   1b102:	e8 89 dc ff ff       	call   18d90 <_fwrite>
   1b107:	8b 43 24             	mov    0x24(%ebx),%eax
   1b10a:	89 43 30             	mov    %eax,0x30(%ebx)
   1b10d:	89 43 34             	mov    %eax,0x34(%ebx)
   1b110:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   1b117:	e9 ce fe ff ff       	jmp    1afea <putchar+0x5a>
   1b11c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1b120:	8b 43 28             	mov    0x28(%ebx),%eax
   1b123:	89 04 24             	mov    %eax,(%esp)
   1b126:	e8 a5 4f 00 00       	call   200d0 <malloc>
   1b12b:	89 43 24             	mov    %eax,0x24(%ebx)
   1b12e:	85 c0                	test   %eax,%eax
   1b130:	74 0b                	je     1b13d <putchar+0x1ad>
   1b132:	89 43 30             	mov    %eax,0x30(%ebx)
   1b135:	89 43 34             	mov    %eax,0x34(%ebx)
   1b138:	e9 b5 fe ff ff       	jmp    1aff2 <putchar+0x62>
   1b13d:	e8 9e 55 ff ff       	call   106e0 <__errno>
   1b142:	31 d2                	xor    %edx,%edx
   1b144:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   1b14a:	e9 b6 fe ff ff       	jmp    1b005 <putchar+0x75>
   1b14f:	90                   	nop

0001b150 <feof>:
   1b150:	55                   	push   %ebp
   1b151:	89 e5                	mov    %esp,%ebp
   1b153:	8b 45 08             	mov    0x8(%ebp),%eax
   1b156:	5d                   	pop    %ebp
   1b157:	8b 40 10             	mov    0x10(%eax),%eax
   1b15a:	c3                   	ret    
   1b15b:	90                   	nop
   1b15c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001b160 <ferror>:
   1b160:	55                   	push   %ebp
   1b161:	89 e5                	mov    %esp,%ebp
   1b163:	8b 45 08             	mov    0x8(%ebp),%eax
   1b166:	5d                   	pop    %ebp
   1b167:	8b 40 0c             	mov    0xc(%eax),%eax
   1b16a:	c3                   	ret    
   1b16b:	90                   	nop
   1b16c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001b170 <clearerr>:
   1b170:	55                   	push   %ebp
   1b171:	89 e5                	mov    %esp,%ebp
   1b173:	8b 45 08             	mov    0x8(%ebp),%eax
   1b176:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   1b17d:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   1b184:	5d                   	pop    %ebp
   1b185:	c3                   	ret    
   1b186:	8d 76 00             	lea    0x0(%esi),%esi
   1b189:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001b190 <fileno>:
   1b190:	55                   	push   %ebp
   1b191:	89 e5                	mov    %esp,%ebp
   1b193:	83 ec 08             	sub    $0x8,%esp
   1b196:	8b 45 08             	mov    0x8(%ebp),%eax
   1b199:	8b 50 14             	mov    0x14(%eax),%edx
   1b19c:	85 d2                	test   %edx,%edx
   1b19e:	75 08                	jne    1b1a8 <fileno+0x18>
   1b1a0:	8b 40 08             	mov    0x8(%eax),%eax
   1b1a3:	c9                   	leave  
   1b1a4:	c3                   	ret    
   1b1a5:	8d 76 00             	lea    0x0(%esi),%esi
   1b1a8:	e8 33 55 ff ff       	call   106e0 <__errno>
   1b1ad:	c7 00 fa fe ff ff    	movl   $0xfffffefa,(%eax)
   1b1b3:	83 c8 ff             	or     $0xffffffff,%eax
   1b1b6:	c9                   	leave  
   1b1b7:	c3                   	ret    
   1b1b8:	90                   	nop
   1b1b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001b1c0 <fsession>:
   1b1c0:	55                   	push   %ebp
   1b1c1:	89 e5                	mov    %esp,%ebp
   1b1c3:	53                   	push   %ebx
   1b1c4:	83 ec 14             	sub    $0x14,%esp
   1b1c7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   1b1ca:	8b 53 08             	mov    0x8(%ebx),%edx
   1b1cd:	85 d2                	test   %edx,%edx
   1b1cf:	78 27                	js     1b1f8 <fsession+0x38>
   1b1d1:	8b 43 18             	mov    0x18(%ebx),%eax
   1b1d4:	85 c0                	test   %eax,%eax
   1b1d6:	74 08                	je     1b1e0 <fsession+0x20>
   1b1d8:	83 c4 14             	add    $0x14,%esp
   1b1db:	5b                   	pop    %ebx
   1b1dc:	5d                   	pop    %ebp
   1b1dd:	c3                   	ret    
   1b1de:	66 90                	xchg   %ax,%ax
   1b1e0:	8b 45 08             	mov    0x8(%ebp),%eax
   1b1e3:	89 54 24 04          	mov    %edx,0x4(%esp)
   1b1e7:	89 04 24             	mov    %eax,(%esp)
   1b1ea:	e8 31 ed 00 00       	call   29f20 <fd_session>
   1b1ef:	89 43 18             	mov    %eax,0x18(%ebx)
   1b1f2:	eb e4                	jmp    1b1d8 <fsession+0x18>
   1b1f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1b1f8:	31 c0                	xor    %eax,%eax
   1b1fa:	eb dc                	jmp    1b1d8 <fsession+0x18>
   1b1fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001b200 <fhandle>:
   1b200:	55                   	push   %ebp
   1b201:	89 e5                	mov    %esp,%ebp
   1b203:	8b 45 08             	mov    0x8(%ebp),%eax
   1b206:	8b 40 08             	mov    0x8(%eax),%eax
   1b209:	85 c0                	test   %eax,%eax
   1b20b:	78 0b                	js     1b218 <fhandle+0x18>
   1b20d:	8b 55 0c             	mov    0xc(%ebp),%edx
   1b210:	89 02                	mov    %eax,(%edx)
   1b212:	31 c0                	xor    %eax,%eax
   1b214:	5d                   	pop    %ebp
   1b215:	c3                   	ret    
   1b216:	66 90                	xchg   %ax,%ax
   1b218:	83 c8 ff             	or     $0xffffffff,%eax
   1b21b:	5d                   	pop    %ebp
   1b21c:	c3                   	ret    
   1b21d:	66 90                	xchg   %ax,%ax
   1b21f:	90                   	nop

0001b220 <fprintf>:
   1b220:	55                   	push   %ebp
   1b221:	89 e5                	mov    %esp,%ebp
   1b223:	83 ec 18             	sub    $0x18,%esp
   1b226:	8d 45 10             	lea    0x10(%ebp),%eax
   1b229:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b22d:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b230:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b234:	8b 45 08             	mov    0x8(%ebp),%eax
   1b237:	89 04 24             	mov    %eax,(%esp)
   1b23a:	e8 71 03 00 00       	call   1b5b0 <vfprintf>
   1b23f:	c9                   	leave  
   1b240:	c3                   	ret    
   1b241:	eb 0d                	jmp    1b250 <printf>
   1b243:	90                   	nop
   1b244:	90                   	nop
   1b245:	90                   	nop
   1b246:	90                   	nop
   1b247:	90                   	nop
   1b248:	90                   	nop
   1b249:	90                   	nop
   1b24a:	90                   	nop
   1b24b:	90                   	nop
   1b24c:	90                   	nop
   1b24d:	90                   	nop
   1b24e:	90                   	nop
   1b24f:	90                   	nop

0001b250 <printf>:
   1b250:	55                   	push   %ebp
   1b251:	89 e5                	mov    %esp,%ebp
   1b253:	83 ec 18             	sub    $0x18,%esp
   1b256:	8d 45 0c             	lea    0xc(%ebp),%eax
   1b259:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b25d:	8b 45 08             	mov    0x8(%ebp),%eax
   1b260:	89 04 24             	mov    %eax,(%esp)
   1b263:	e8 a8 03 00 00       	call   1b610 <vprintf>
   1b268:	c9                   	leave  
   1b269:	c3                   	ret    
   1b26a:	66 90                	xchg   %ax,%ax
   1b26c:	66 90                	xchg   %ax,%ax
   1b26e:	66 90                	xchg   %ax,%ax

0001b270 <klog_vprintf_wstr_write>:
   1b270:	55                   	push   %ebp
   1b271:	89 e5                	mov    %esp,%ebp
   1b273:	57                   	push   %edi
   1b274:	56                   	push   %esi
   1b275:	53                   	push   %ebx
   1b276:	83 ec 3c             	sub    $0x3c,%esp
   1b279:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b27c:	8b 75 08             	mov    0x8(%ebp),%esi
   1b27f:	85 c0                	test   %eax,%eax
   1b281:	0f 84 8e 00 00 00    	je     1b315 <klog_vprintf_wstr_write+0xa5>
   1b287:	31 ff                	xor    %edi,%edi
   1b289:	8d 5d e4             	lea    -0x1c(%ebp),%ebx
   1b28c:	eb 0f                	jmp    1b29d <klog_vprintf_wstr_write+0x2d>
   1b28e:	66 90                	xchg   %ax,%ax
   1b290:	47                   	inc    %edi
   1b291:	8d 04 bd 00 00 00 00 	lea    0x0(,%edi,4),%eax
   1b298:	39 45 0c             	cmp    %eax,0xc(%ebp)
   1b29b:	76 6e                	jbe    1b30b <klog_vprintf_wstr_write+0x9b>
   1b29d:	8d 45 e0             	lea    -0x20(%ebp),%eax
   1b2a0:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)
   1b2a7:	00 
   1b2a8:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b2ac:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   1b2b0:	8b 04 be             	mov    (%esi,%edi,4),%eax
   1b2b3:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
   1b2ba:	89 04 24             	mov    %eax,(%esp)
   1b2bd:	e8 3e 8c ff ff       	call   13f00 <chr_encode>
   1b2c2:	85 c0                	test   %eax,%eax
   1b2c4:	75 ca                	jne    1b290 <klog_vprintf_wstr_write+0x20>
   1b2c6:	8b 45 e0             	mov    -0x20(%ebp),%eax
   1b2c9:	47                   	inc    %edi
   1b2ca:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   1b2d1:	00 
   1b2d2:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1b2d9:	00 
   1b2da:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   1b2e1:	00 
   1b2e2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1b2e9:	00 
   1b2ea:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b2ee:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   1b2f2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   1b2f9:	ff 15 54 06 03 00    	call   *0x30654
   1b2ff:	8d 04 bd 00 00 00 00 	lea    0x0(,%edi,4),%eax
   1b306:	39 45 0c             	cmp    %eax,0xc(%ebp)
   1b309:	77 92                	ja     1b29d <klog_vprintf_wstr_write+0x2d>
   1b30b:	89 f8                	mov    %edi,%eax
   1b30d:	83 c4 3c             	add    $0x3c,%esp
   1b310:	5b                   	pop    %ebx
   1b311:	5e                   	pop    %esi
   1b312:	5f                   	pop    %edi
   1b313:	5d                   	pop    %ebp
   1b314:	c3                   	ret    
   1b315:	31 c0                	xor    %eax,%eax
   1b317:	eb f4                	jmp    1b30d <klog_vprintf_wstr_write+0x9d>
   1b319:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001b320 <klog_vprintf_str_write>:
   1b320:	55                   	push   %ebp
   1b321:	89 e5                	mov    %esp,%ebp
   1b323:	53                   	push   %ebx
   1b324:	83 ec 24             	sub    $0x24,%esp
   1b327:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1b32a:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b32d:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   1b331:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   1b338:	00 
   1b339:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1b340:	00 
   1b341:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   1b348:	00 
   1b349:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1b350:	00 
   1b351:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b355:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   1b35c:	ff 15 54 06 03 00    	call   *0x30654
   1b362:	89 5d 08             	mov    %ebx,0x8(%ebp)
   1b365:	89 c2                	mov    %eax,%edx
   1b367:	83 f2 ff             	xor    $0xffffffff,%edx
   1b36a:	c1 fa 1f             	sar    $0x1f,%edx
   1b36d:	21 d0                	and    %edx,%eax
   1b36f:	89 45 0c             	mov    %eax,0xc(%ebp)
   1b372:	83 c4 24             	add    $0x24,%esp
   1b375:	5b                   	pop    %ebx
   1b376:	5d                   	pop    %ebp
   1b377:	e9 54 8f ff ff       	jmp    142d0 <str_nlength>
   1b37c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001b380 <klog_write>:
   1b380:	55                   	push   %ebp
   1b381:	89 e5                	mov    %esp,%ebp
   1b383:	83 ec 28             	sub    $0x28,%esp
   1b386:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b389:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   1b390:	00 
   1b391:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b395:	8b 45 08             	mov    0x8(%ebp),%eax
   1b398:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1b39f:	00 
   1b3a0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   1b3a7:	00 
   1b3a8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1b3af:	00 
   1b3b0:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b3b4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   1b3bb:	ff 15 54 06 03 00    	call   *0x30654
   1b3c1:	c9                   	leave  
   1b3c2:	89 c2                	mov    %eax,%edx
   1b3c4:	83 f2 ff             	xor    $0xffffffff,%edx
   1b3c7:	c1 fa 1f             	sar    $0x1f,%edx
   1b3ca:	21 d0                	and    %edx,%eax
   1b3cc:	c3                   	ret    
   1b3cd:	8d 76 00             	lea    0x0(%esi),%esi

0001b3d0 <klog_update>:
   1b3d0:	55                   	push   %ebp
   1b3d1:	89 e5                	mov    %esp,%ebp
   1b3d3:	83 ec 28             	sub    $0x28,%esp
   1b3d6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   1b3dd:	00 
   1b3de:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1b3e5:	00 
   1b3e6:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   1b3ed:	00 
   1b3ee:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1b3f5:	00 
   1b3f6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   1b3fd:	00 
   1b3fe:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   1b405:	00 
   1b406:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   1b40d:	ff 15 54 06 03 00    	call   *0x30654
   1b413:	c9                   	leave  
   1b414:	c3                   	ret    
   1b415:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1b419:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001b420 <klog_command>:
   1b420:	55                   	push   %ebp
   1b421:	89 e5                	mov    %esp,%ebp
   1b423:	83 ec 28             	sub    $0x28,%esp
   1b426:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b429:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   1b430:	00 
   1b431:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b435:	8b 45 08             	mov    0x8(%ebp),%eax
   1b438:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   1b43f:	00 
   1b440:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   1b447:	00 
   1b448:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1b44f:	00 
   1b450:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b454:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)
   1b45b:	ff 15 54 06 03 00    	call   *0x30654
   1b461:	c9                   	leave  
   1b462:	c3                   	ret    
   1b463:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1b469:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001b470 <klog_printf>:
   1b470:	55                   	push   %ebp
   1b471:	89 e5                	mov    %esp,%ebp
   1b473:	83 ec 28             	sub    $0x28,%esp
   1b476:	8d 45 0c             	lea    0xc(%ebp),%eax
   1b479:	c7 45 ec 20 b3 01 00 	movl   $0x1b320,-0x14(%ebp)
   1b480:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b484:	8d 45 ec             	lea    -0x14(%ebp),%eax
   1b487:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b48b:	8b 45 08             	mov    0x8(%ebp),%eax
   1b48e:	89 04 24             	mov    %eax,(%esp)
   1b491:	c7 45 f0 70 b2 01 00 	movl   $0x1b270,-0x10(%ebp)
   1b498:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
   1b49f:	e8 ec 12 00 00       	call   1c790 <printf_core>
   1b4a4:	c9                   	leave  
   1b4a5:	c3                   	ret    
   1b4a6:	8d 76 00             	lea    0x0(%esi),%esi
   1b4a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001b4b0 <klog_vprintf>:
   1b4b0:	55                   	push   %ebp
   1b4b1:	89 e5                	mov    %esp,%ebp
   1b4b3:	83 ec 28             	sub    $0x28,%esp
   1b4b6:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b4b9:	c7 45 ec 20 b3 01 00 	movl   $0x1b320,-0x14(%ebp)
   1b4c0:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b4c4:	8d 45 ec             	lea    -0x14(%ebp),%eax
   1b4c7:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b4cb:	8b 45 08             	mov    0x8(%ebp),%eax
   1b4ce:	89 04 24             	mov    %eax,(%esp)
   1b4d1:	c7 45 f0 70 b2 01 00 	movl   $0x1b270,-0x10(%ebp)
   1b4d8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
   1b4df:	e8 ac 12 00 00       	call   1c790 <printf_core>
   1b4e4:	c9                   	leave  
   1b4e5:	c3                   	ret    
   1b4e6:	66 90                	xchg   %ax,%ax
   1b4e8:	66 90                	xchg   %ax,%ax
   1b4ea:	66 90                	xchg   %ax,%ax
   1b4ec:	66 90                	xchg   %ax,%ax
   1b4ee:	66 90                	xchg   %ax,%ax

0001b4f0 <snprintf>:
   1b4f0:	55                   	push   %ebp
   1b4f1:	89 e5                	mov    %esp,%ebp
   1b4f3:	83 ec 18             	sub    $0x18,%esp
   1b4f6:	8d 45 14             	lea    0x14(%ebp),%eax
   1b4f9:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1b4fd:	8b 45 10             	mov    0x10(%ebp),%eax
   1b500:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b504:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b507:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b50b:	8b 45 08             	mov    0x8(%ebp),%eax
   1b50e:	89 04 24             	mov    %eax,(%esp)
   1b511:	e8 da 02 00 00       	call   1b7f0 <vsnprintf>
   1b516:	c9                   	leave  
   1b517:	c3                   	ret    
   1b518:	66 90                	xchg   %ax,%ax
   1b51a:	66 90                	xchg   %ax,%ax
   1b51c:	66 90                	xchg   %ax,%ax
   1b51e:	66 90                	xchg   %ax,%ax

0001b520 <vprintf_wstr_write>:
   1b520:	55                   	push   %ebp
   1b521:	89 e5                	mov    %esp,%ebp
   1b523:	57                   	push   %edi
   1b524:	56                   	push   %esi
   1b525:	53                   	push   %ebx
   1b526:	83 ec 1c             	sub    $0x1c,%esp
   1b529:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b52c:	8b 75 08             	mov    0x8(%ebp),%esi
   1b52f:	8b 7d 10             	mov    0x10(%ebp),%edi
   1b532:	85 c0                	test   %eax,%eax
   1b534:	74 34                	je     1b56a <vprintf_wstr_write+0x4a>
   1b536:	31 db                	xor    %ebx,%ebx
   1b538:	eb 13                	jmp    1b54d <vprintf_wstr_write+0x2d>
   1b53a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1b540:	43                   	inc    %ebx
   1b541:	8d 04 9d 00 00 00 00 	lea    0x0(,%ebx,4),%eax
   1b548:	39 45 0c             	cmp    %eax,0xc(%ebp)
   1b54b:	76 13                	jbe    1b560 <vprintf_wstr_write+0x40>
   1b54d:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1b551:	8b 04 9e             	mov    (%esi,%ebx,4),%eax
   1b554:	89 04 24             	mov    %eax,(%esp)
   1b557:	e8 74 f8 ff ff       	call   1add0 <fputc>
   1b55c:	85 c0                	test   %eax,%eax
   1b55e:	7f e0                	jg     1b540 <vprintf_wstr_write+0x20>
   1b560:	89 d8                	mov    %ebx,%eax
   1b562:	83 c4 1c             	add    $0x1c,%esp
   1b565:	5b                   	pop    %ebx
   1b566:	5e                   	pop    %esi
   1b567:	5f                   	pop    %edi
   1b568:	5d                   	pop    %ebp
   1b569:	c3                   	ret    
   1b56a:	31 c0                	xor    %eax,%eax
   1b56c:	eb f4                	jmp    1b562 <vprintf_wstr_write+0x42>
   1b56e:	66 90                	xchg   %ax,%ax

0001b570 <vprintf_str_write>:
   1b570:	55                   	push   %ebp
   1b571:	89 e5                	mov    %esp,%ebp
   1b573:	53                   	push   %ebx
   1b574:	83 ec 14             	sub    $0x14,%esp
   1b577:	8b 45 10             	mov    0x10(%ebp),%eax
   1b57a:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1b57d:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1b581:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b584:	89 1c 24             	mov    %ebx,(%esp)
   1b587:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b58b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1b592:	00 
   1b593:	e8 28 f3 ff ff       	call   1a8c0 <fwrite>
   1b598:	89 5d 08             	mov    %ebx,0x8(%ebp)
   1b59b:	89 45 0c             	mov    %eax,0xc(%ebp)
   1b59e:	83 c4 14             	add    $0x14,%esp
   1b5a1:	5b                   	pop    %ebx
   1b5a2:	5d                   	pop    %ebp
   1b5a3:	e9 28 8d ff ff       	jmp    142d0 <str_nlength>
   1b5a8:	90                   	nop
   1b5a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001b5b0 <vfprintf>:
   1b5b0:	55                   	push   %ebp
   1b5b1:	89 e5                	mov    %esp,%ebp
   1b5b3:	83 ec 38             	sub    $0x38,%esp
   1b5b6:	8b 45 08             	mov    0x8(%ebp),%eax
   1b5b9:	c7 04 24 b8 05 03 00 	movl   $0x305b8,(%esp)
   1b5c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
   1b5c3:	c7 45 ec 70 b5 01 00 	movl   $0x1b570,-0x14(%ebp)
   1b5ca:	c7 45 f0 20 b5 01 00 	movl   $0x1b520,-0x10(%ebp)
   1b5d1:	e8 ea bc ff ff       	call   172c0 <fibril_mutex_lock>
   1b5d6:	8b 45 10             	mov    0x10(%ebp),%eax
   1b5d9:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b5dd:	8d 45 ec             	lea    -0x14(%ebp),%eax
   1b5e0:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b5e4:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b5e7:	89 04 24             	mov    %eax,(%esp)
   1b5ea:	e8 a1 11 00 00       	call   1c790 <printf_core>
   1b5ef:	c7 04 24 b8 05 03 00 	movl   $0x305b8,(%esp)
   1b5f6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   1b5f9:	e8 e2 bd ff ff       	call   173e0 <fibril_mutex_unlock>
   1b5fe:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1b601:	c9                   	leave  
   1b602:	c3                   	ret    
   1b603:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1b609:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001b610 <vprintf>:
   1b610:	55                   	push   %ebp
   1b611:	89 e5                	mov    %esp,%ebp
   1b613:	83 ec 38             	sub    $0x38,%esp
   1b616:	a1 bc 06 03 00       	mov    0x306bc,%eax
   1b61b:	c7 04 24 b8 05 03 00 	movl   $0x305b8,(%esp)
   1b622:	89 45 f4             	mov    %eax,-0xc(%ebp)
   1b625:	c7 45 ec 70 b5 01 00 	movl   $0x1b570,-0x14(%ebp)
   1b62c:	c7 45 f0 20 b5 01 00 	movl   $0x1b520,-0x10(%ebp)
   1b633:	e8 88 bc ff ff       	call   172c0 <fibril_mutex_lock>
   1b638:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b63b:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b63f:	8d 45 ec             	lea    -0x14(%ebp),%eax
   1b642:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b646:	8b 45 08             	mov    0x8(%ebp),%eax
   1b649:	89 04 24             	mov    %eax,(%esp)
   1b64c:	e8 3f 11 00 00       	call   1c790 <printf_core>
   1b651:	c7 04 24 b8 05 03 00 	movl   $0x305b8,(%esp)
   1b658:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   1b65b:	e8 80 bd ff ff       	call   173e0 <fibril_mutex_unlock>
   1b660:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1b663:	c9                   	leave  
   1b664:	c3                   	ret    
   1b665:	66 90                	xchg   %ax,%ax
   1b667:	66 90                	xchg   %ax,%ax
   1b669:	66 90                	xchg   %ax,%ax
   1b66b:	66 90                	xchg   %ax,%ax
   1b66d:	66 90                	xchg   %ax,%ax
   1b66f:	90                   	nop

0001b670 <vsnprintf_wstr_write>:
   1b670:	55                   	push   %ebp
   1b671:	89 e5                	mov    %esp,%ebp
   1b673:	57                   	push   %edi
   1b674:	56                   	push   %esi
   1b675:	53                   	push   %ebx
   1b676:	83 ec 2c             	sub    $0x2c,%esp
   1b679:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b67c:	8b 75 08             	mov    0x8(%ebp),%esi
   1b67f:	c1 e8 02             	shr    $0x2,%eax
   1b682:	8b 5d 10             	mov    0x10(%ebp),%ebx
   1b685:	89 45 e0             	mov    %eax,-0x20(%ebp)
   1b688:	74 4a                	je     1b6d4 <vsnprintf_wstr_write+0x64>
   1b68a:	8b 03                	mov    (%ebx),%eax
   1b68c:	89 c2                	mov    %eax,%edx
   1b68e:	2b 53 04             	sub    0x4(%ebx),%edx
   1b691:	74 4b                	je     1b6de <vsnprintf_wstr_write+0x6e>
   1b693:	4a                   	dec    %edx
   1b694:	74 5a                	je     1b6f0 <vsnprintf_wstr_write+0x80>
   1b696:	8d 53 04             	lea    0x4(%ebx),%edx
   1b699:	31 ff                	xor    %edi,%edi
   1b69b:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   1b69e:	eb 12                	jmp    1b6b2 <vsnprintf_wstr_write+0x42>
   1b6a0:	47                   	inc    %edi
   1b6a1:	3b 7d e0             	cmp    -0x20(%ebp),%edi
   1b6a4:	74 2e                	je     1b6d4 <vsnprintf_wstr_write+0x64>
   1b6a6:	8b 03                	mov    (%ebx),%eax
   1b6a8:	89 c1                	mov    %eax,%ecx
   1b6aa:	2b 4b 04             	sub    0x4(%ebx),%ecx
   1b6ad:	74 2f                	je     1b6de <vsnprintf_wstr_write+0x6e>
   1b6af:	49                   	dec    %ecx
   1b6b0:	74 3e                	je     1b6f0 <vsnprintf_wstr_write+0x80>
   1b6b2:	48                   	dec    %eax
   1b6b3:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   1b6b6:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1b6ba:	89 54 24 08          	mov    %edx,0x8(%esp)
   1b6be:	8b 43 08             	mov    0x8(%ebx),%eax
   1b6c1:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b6c5:	8b 04 be             	mov    (%esi,%edi,4),%eax
   1b6c8:	89 04 24             	mov    %eax,(%esp)
   1b6cb:	e8 30 88 ff ff       	call   13f00 <chr_encode>
   1b6d0:	85 c0                	test   %eax,%eax
   1b6d2:	74 cc                	je     1b6a0 <vsnprintf_wstr_write+0x30>
   1b6d4:	8b 53 08             	mov    0x8(%ebx),%edx
   1b6d7:	8b 43 04             	mov    0x4(%ebx),%eax
   1b6da:	c6 04 02 00          	movb   $0x0,(%edx,%eax,1)
   1b6de:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b6e1:	83 c4 2c             	add    $0x2c,%esp
   1b6e4:	5b                   	pop    %ebx
   1b6e5:	5e                   	pop    %esi
   1b6e6:	5f                   	pop    %edi
   1b6e7:	5d                   	pop    %ebp
   1b6e8:	c3                   	ret    
   1b6e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1b6f0:	8b 53 08             	mov    0x8(%ebx),%edx
   1b6f3:	c6 44 02 ff 00       	movb   $0x0,-0x1(%edx,%eax,1)
   1b6f8:	8b 03                	mov    (%ebx),%eax
   1b6fa:	89 43 04             	mov    %eax,0x4(%ebx)
   1b6fd:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b700:	83 c4 2c             	add    $0x2c,%esp
   1b703:	5b                   	pop    %ebx
   1b704:	5e                   	pop    %esi
   1b705:	5f                   	pop    %edi
   1b706:	5d                   	pop    %ebp
   1b707:	c3                   	ret    
   1b708:	90                   	nop
   1b709:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001b710 <vsnprintf_str_write>:
   1b710:	55                   	push   %ebp
   1b711:	89 e5                	mov    %esp,%ebp
   1b713:	57                   	push   %edi
   1b714:	56                   	push   %esi
   1b715:	53                   	push   %ebx
   1b716:	83 ec 2c             	sub    $0x2c,%esp
   1b719:	8b 7d 10             	mov    0x10(%ebp),%edi
   1b71c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   1b71f:	8b 0f                	mov    (%edi),%ecx
   1b721:	8b 47 04             	mov    0x4(%edi),%eax
   1b724:	89 ce                	mov    %ecx,%esi
   1b726:	29 c6                	sub    %eax,%esi
   1b728:	74 63                	je     1b78d <vsnprintf_str_write+0x7d>
   1b72a:	83 fe 01             	cmp    $0x1,%esi
   1b72d:	74 69                	je     1b798 <vsnprintf_str_write+0x88>
   1b72f:	39 de                	cmp    %ebx,%esi
   1b731:	77 7d                	ja     1b7b0 <vsnprintf_str_write+0xa0>
   1b733:	8d 77 04             	lea    0x4(%edi),%esi
   1b736:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   1b73d:	89 f0                	mov    %esi,%eax
   1b73f:	89 de                	mov    %ebx,%esi
   1b741:	89 c3                	mov    %eax,%ebx
   1b743:	90                   	nop
   1b744:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1b748:	8b 55 08             	mov    0x8(%ebp),%edx
   1b74b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   1b74e:	89 14 24             	mov    %edx,(%esp)
   1b751:	89 74 24 08          	mov    %esi,0x8(%esp)
   1b755:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b759:	e8 52 84 ff ff       	call   13bb0 <str_decode>
   1b75e:	8b 0f                	mov    (%edi),%ecx
   1b760:	49                   	dec    %ecx
   1b761:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   1b765:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   1b769:	8b 4f 08             	mov    0x8(%edi),%ecx
   1b76c:	89 04 24             	mov    %eax,(%esp)
   1b76f:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1b773:	e8 88 87 ff ff       	call   13f00 <chr_encode>
   1b778:	85 c0                	test   %eax,%eax
   1b77a:	75 05                	jne    1b781 <vsnprintf_str_write+0x71>
   1b77c:	3b 75 e4             	cmp    -0x1c(%ebp),%esi
   1b77f:	77 c7                	ja     1b748 <vsnprintf_str_write+0x38>
   1b781:	8b 4f 08             	mov    0x8(%edi),%ecx
   1b784:	8b 47 04             	mov    0x4(%edi),%eax
   1b787:	89 f3                	mov    %esi,%ebx
   1b789:	c6 04 01 00          	movb   $0x0,(%ecx,%eax,1)
   1b78d:	83 c4 2c             	add    $0x2c,%esp
   1b790:	89 d8                	mov    %ebx,%eax
   1b792:	5b                   	pop    %ebx
   1b793:	5e                   	pop    %esi
   1b794:	5f                   	pop    %edi
   1b795:	5d                   	pop    %ebp
   1b796:	c3                   	ret    
   1b797:	90                   	nop
   1b798:	8b 47 08             	mov    0x8(%edi),%eax
   1b79b:	c6 44 08 ff 00       	movb   $0x0,-0x1(%eax,%ecx,1)
   1b7a0:	8b 07                	mov    (%edi),%eax
   1b7a2:	89 47 04             	mov    %eax,0x4(%edi)
   1b7a5:	83 c4 2c             	add    $0x2c,%esp
   1b7a8:	89 d8                	mov    %ebx,%eax
   1b7aa:	5b                   	pop    %ebx
   1b7ab:	5e                   	pop    %esi
   1b7ac:	5f                   	pop    %edi
   1b7ad:	5d                   	pop    %ebp
   1b7ae:	c3                   	ret    
   1b7af:	90                   	nop
   1b7b0:	8b 55 08             	mov    0x8(%ebp),%edx
   1b7b3:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   1b7b7:	89 54 24 04          	mov    %edx,0x4(%esp)
   1b7bb:	8b 57 08             	mov    0x8(%edi),%edx
   1b7be:	01 d0                	add    %edx,%eax
   1b7c0:	89 04 24             	mov    %eax,(%esp)
   1b7c3:	e8 18 7a ff ff       	call   131e0 <memcpy>
   1b7c8:	8b 47 04             	mov    0x4(%edi),%eax
   1b7cb:	01 d8                	add    %ebx,%eax
   1b7cd:	8b 57 08             	mov    0x8(%edi),%edx
   1b7d0:	89 47 04             	mov    %eax,0x4(%edi)
   1b7d3:	c6 04 02 00          	movb   $0x0,(%edx,%eax,1)
   1b7d7:	83 c4 2c             	add    $0x2c,%esp
   1b7da:	89 d8                	mov    %ebx,%eax
   1b7dc:	5b                   	pop    %ebx
   1b7dd:	5e                   	pop    %esi
   1b7de:	5f                   	pop    %edi
   1b7df:	5d                   	pop    %ebp
   1b7e0:	c3                   	ret    
   1b7e1:	eb 0d                	jmp    1b7f0 <vsnprintf>
   1b7e3:	90                   	nop
   1b7e4:	90                   	nop
   1b7e5:	90                   	nop
   1b7e6:	90                   	nop
   1b7e7:	90                   	nop
   1b7e8:	90                   	nop
   1b7e9:	90                   	nop
   1b7ea:	90                   	nop
   1b7eb:	90                   	nop
   1b7ec:	90                   	nop
   1b7ed:	90                   	nop
   1b7ee:	90                   	nop
   1b7ef:	90                   	nop

0001b7f0 <vsnprintf>:
   1b7f0:	55                   	push   %ebp
   1b7f1:	89 e5                	mov    %esp,%ebp
   1b7f3:	83 ec 38             	sub    $0x38,%esp
   1b7f6:	8b 45 0c             	mov    0xc(%ebp),%eax
   1b7f9:	8b 55 08             	mov    0x8(%ebp),%edx
   1b7fc:	8d 4d e0             	lea    -0x20(%ebp),%ecx
   1b7ff:	89 45 e0             	mov    %eax,-0x20(%ebp)
   1b802:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   1b809:	89 55 e8             	mov    %edx,-0x18(%ebp)
   1b80c:	c7 45 ec 10 b7 01 00 	movl   $0x1b710,-0x14(%ebp)
   1b813:	c7 45 f0 70 b6 01 00 	movl   $0x1b670,-0x10(%ebp)
   1b81a:	89 4d f4             	mov    %ecx,-0xc(%ebp)
   1b81d:	85 c0                	test   %eax,%eax
   1b81f:	74 03                	je     1b824 <vsnprintf+0x34>
   1b821:	c6 02 00             	movb   $0x0,(%edx)
   1b824:	8b 45 14             	mov    0x14(%ebp),%eax
   1b827:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b82b:	8d 45 ec             	lea    -0x14(%ebp),%eax
   1b82e:	89 44 24 04          	mov    %eax,0x4(%esp)
   1b832:	8b 45 10             	mov    0x10(%ebp),%eax
   1b835:	89 04 24             	mov    %eax,(%esp)
   1b838:	e8 53 0f 00 00       	call   1c790 <printf_core>
   1b83d:	c9                   	leave  
   1b83e:	c3                   	ret    
   1b83f:	90                   	nop

0001b840 <print_double_str_scient>:
   1b840:	55                   	push   %ebp
   1b841:	89 e5                	mov    %esp,%ebp
   1b843:	57                   	push   %edi
   1b844:	56                   	push   %esi
   1b845:	53                   	push   %ebx
   1b846:	83 ec 6c             	sub    $0x6c,%esp
   1b849:	8b 58 08             	mov    0x8(%eax),%ebx
   1b84c:	8b 70 04             	mov    0x4(%eax),%esi
   1b84f:	89 5d c4             	mov    %ebx,-0x3c(%ebp)
   1b852:	8b 18                	mov    (%eax),%ebx
   1b854:	8b 7d 0c             	mov    0xc(%ebp),%edi
   1b857:	89 5d ac             	mov    %ebx,-0x54(%ebp)
   1b85a:	85 f6                	test   %esi,%esi
   1b85c:	0f 8e 14 04 00 00    	jle    1bc76 <print_double_str_scient+0x436>
   1b862:	b3 2d                	mov    $0x2d,%bl
   1b864:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)
   1b868:	0f 84 b2 03 00 00    	je     1bc20 <print_double_str_scient+0x3e0>
   1b86e:	88 5d cc             	mov    %bl,-0x34(%ebp)
   1b871:	85 d2                	test   %edx,%edx
   1b873:	0f 8e cf 03 00 00    	jle    1bc48 <print_double_str_scient+0x408>
   1b879:	c6 45 ab 01          	movb   $0x1,-0x55(%ebp)
   1b87d:	c7 45 b8 01 00 00 00 	movl   $0x1,-0x48(%ebp)
   1b884:	8d 46 ff             	lea    -0x1(%esi),%eax
   1b887:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
   1b88e:	89 45 b0             	mov    %eax,-0x50(%ebp)
   1b891:	f7 45 08 00 02 00 00 	testl  $0x200,0x8(%ebp)
   1b898:	75 05                	jne    1b89f <print_double_str_scient+0x5f>
   1b89a:	29 c2                	sub    %eax,%edx
   1b89c:	89 55 bc             	mov    %edx,-0x44(%ebp)
   1b89f:	8b 45 bc             	mov    -0x44(%ebp),%eax
   1b8a2:	8b 55 b0             	mov    -0x50(%ebp),%edx
   1b8a5:	01 c2                	add    %eax,%edx
   1b8a7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   1b8aa:	89 55 a4             	mov    %edx,-0x5c(%ebp)
   1b8ad:	8b 55 b8             	mov    -0x48(%ebp),%edx
   1b8b0:	8d 74 06 ff          	lea    -0x1(%esi,%eax,1),%esi
   1b8b4:	89 f0                	mov    %esi,%eax
   1b8b6:	89 75 b4             	mov    %esi,-0x4c(%ebp)
   1b8b9:	c1 f8 1f             	sar    $0x1f,%eax
   1b8bc:	31 c6                	xor    %eax,%esi
   1b8be:	29 c6                	sub    %eax,%esi
   1b8c0:	83 fe 64             	cmp    $0x64,%esi
   1b8c3:	89 75 c0             	mov    %esi,-0x40(%ebp)
   1b8c6:	0f 9d c0             	setge  %al
   1b8c9:	25 ff 00 00 00       	and    $0xff,%eax
   1b8ce:	80 fb 01             	cmp    $0x1,%bl
   1b8d1:	19 f6                	sbb    %esi,%esi
   1b8d3:	8d 74 32 02          	lea    0x2(%edx,%esi,1),%esi
   1b8d7:	8b 55 a4             	mov    -0x5c(%ebp),%edx
   1b8da:	01 f2                	add    %esi,%edx
   1b8dc:	8d 44 10 04          	lea    0x4(%eax,%edx,1),%eax
   1b8e0:	29 c1                	sub    %eax,%ecx
   1b8e2:	89 c8                	mov    %ecx,%eax
   1b8e4:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
   1b8e7:	83 f0 ff             	xor    $0xffffffff,%eax
   1b8ea:	8b 55 c4             	mov    -0x3c(%ebp),%edx
   1b8ed:	c1 f8 1f             	sar    $0x1f,%eax
   1b8f0:	21 c2                	and    %eax,%edx
   1b8f2:	f6 45 08 14          	testb  $0x14,0x8(%ebp)
   1b8f6:	89 55 c4             	mov    %edx,-0x3c(%ebp)
   1b8f9:	75 55                	jne    1b950 <print_double_str_scient+0x110>
   1b8fb:	8b 75 c4             	mov    -0x3c(%ebp),%esi
   1b8fe:	c6 45 d0 20          	movb   $0x20,-0x30(%ebp)
   1b902:	85 f6                	test   %esi,%esi
   1b904:	0f 84 d9 02 00 00    	je     1bbe3 <print_double_str_scient+0x3a3>
   1b90a:	31 db                	xor    %ebx,%ebx
   1b90c:	8d 75 d0             	lea    -0x30(%ebp),%esi
   1b90f:	eb 11                	jmp    1b922 <print_double_str_scient+0xe2>
   1b911:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1b918:	43                   	inc    %ebx
   1b919:	3b 5d c4             	cmp    -0x3c(%ebp),%ebx
   1b91c:	0f 84 be 02 00 00    	je     1bbe0 <print_double_str_scient+0x3a0>
   1b922:	8b 47 08             	mov    0x8(%edi),%eax
   1b925:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1b92c:	00 
   1b92d:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b931:	89 34 24             	mov    %esi,(%esp)
   1b934:	ff 17                	call   *(%edi)
   1b936:	85 c0                	test   %eax,%eax
   1b938:	79 de                	jns    1b918 <print_double_str_scient+0xd8>
   1b93a:	c7 45 c0 ff ff ff ff 	movl   $0xffffffff,-0x40(%ebp)
   1b941:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1b944:	83 c4 6c             	add    $0x6c,%esp
   1b947:	5b                   	pop    %ebx
   1b948:	5e                   	pop    %esi
   1b949:	5f                   	pop    %edi
   1b94a:	5d                   	pop    %ebp
   1b94b:	c3                   	ret    
   1b94c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1b950:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
   1b957:	84 db                	test   %bl,%bl
   1b959:	0f 85 92 02 00 00    	jne    1bbf1 <print_double_str_scient+0x3b1>
   1b95f:	f6 45 08 04          	testb  $0x4,0x8(%ebp)
   1b963:	74 3e                	je     1b9a3 <print_double_str_scient+0x163>
   1b965:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
   1b968:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)
   1b96c:	85 c9                	test   %ecx,%ecx
   1b96e:	74 28                	je     1b998 <print_double_str_scient+0x158>
   1b970:	31 db                	xor    %ebx,%ebx
   1b972:	8d 75 d4             	lea    -0x2c(%ebp),%esi
   1b975:	eb 07                	jmp    1b97e <print_double_str_scient+0x13e>
   1b977:	90                   	nop
   1b978:	43                   	inc    %ebx
   1b979:	3b 5d c4             	cmp    -0x3c(%ebp),%ebx
   1b97c:	74 1a                	je     1b998 <print_double_str_scient+0x158>
   1b97e:	8b 47 08             	mov    0x8(%edi),%eax
   1b981:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1b988:	00 
   1b989:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b98d:	89 34 24             	mov    %esi,(%esp)
   1b990:	ff 17                	call   *(%edi)
   1b992:	85 c0                	test   %eax,%eax
   1b994:	79 e2                	jns    1b978 <print_double_str_scient+0x138>
   1b996:	eb a2                	jmp    1b93a <print_double_str_scient+0xfa>
   1b998:	8b 55 b8             	mov    -0x48(%ebp),%edx
   1b99b:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
   1b99e:	01 da                	add    %ebx,%edx
   1b9a0:	89 55 b8             	mov    %edx,-0x48(%ebp)
   1b9a3:	8b 47 08             	mov    0x8(%edi),%eax
   1b9a6:	8b 5d ac             	mov    -0x54(%ebp),%ebx
   1b9a9:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b9ad:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1b9b4:	00 
   1b9b5:	89 1c 24             	mov    %ebx,(%esp)
   1b9b8:	ff 17                	call   *(%edi)
   1b9ba:	85 c0                	test   %eax,%eax
   1b9bc:	0f 88 78 ff ff ff    	js     1b93a <print_double_str_scient+0xfa>
   1b9c2:	8b 55 b8             	mov    -0x48(%ebp),%edx
   1b9c5:	01 d0                	add    %edx,%eax
   1b9c7:	89 45 b8             	mov    %eax,-0x48(%ebp)
   1b9ca:	80 7d ab 00          	cmpb   $0x0,-0x55(%ebp)
   1b9ce:	0f 84 a7 00 00 00    	je     1ba7b <print_double_str_scient+0x23b>
   1b9d4:	8b 47 08             	mov    0x8(%edi),%eax
   1b9d7:	c6 45 e0 2e          	movb   $0x2e,-0x20(%ebp)
   1b9db:	89 44 24 08          	mov    %eax,0x8(%esp)
   1b9df:	8d 45 e0             	lea    -0x20(%ebp),%eax
   1b9e2:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1b9e9:	00 
   1b9ea:	89 04 24             	mov    %eax,(%esp)
   1b9ed:	ff 17                	call   *(%edi)
   1b9ef:	85 c0                	test   %eax,%eax
   1b9f1:	0f 88 43 ff ff ff    	js     1b93a <print_double_str_scient+0xfa>
   1b9f7:	8b 4d b8             	mov    -0x48(%ebp),%ecx
   1b9fa:	8b 75 b0             	mov    -0x50(%ebp),%esi
   1b9fd:	01 c8                	add    %ecx,%eax
   1b9ff:	85 f6                	test   %esi,%esi
   1ba01:	89 45 b8             	mov    %eax,-0x48(%ebp)
   1ba04:	74 26                	je     1ba2c <print_double_str_scient+0x1ec>
   1ba06:	8b 47 08             	mov    0x8(%edi),%eax
   1ba09:	8b 75 b0             	mov    -0x50(%ebp),%esi
   1ba0c:	89 44 24 08          	mov    %eax,0x8(%esp)
   1ba10:	89 d8                	mov    %ebx,%eax
   1ba12:	40                   	inc    %eax
   1ba13:	89 74 24 04          	mov    %esi,0x4(%esp)
   1ba17:	89 04 24             	mov    %eax,(%esp)
   1ba1a:	ff 17                	call   *(%edi)
   1ba1c:	85 c0                	test   %eax,%eax
   1ba1e:	0f 88 16 ff ff ff    	js     1b93a <print_double_str_scient+0xfa>
   1ba24:	8b 55 b8             	mov    -0x48(%ebp),%edx
   1ba27:	01 c2                	add    %eax,%edx
   1ba29:	89 55 b8             	mov    %edx,-0x48(%ebp)
   1ba2c:	31 db                	xor    %ebx,%ebx
   1ba2e:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)
   1ba32:	8d 75 d8             	lea    -0x28(%ebp),%esi
   1ba35:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)
   1ba39:	7f 0b                	jg     1ba46 <print_double_str_scient+0x206>
   1ba3b:	eb 26                	jmp    1ba63 <print_double_str_scient+0x223>
   1ba3d:	8d 76 00             	lea    0x0(%esi),%esi
   1ba40:	43                   	inc    %ebx
   1ba41:	3b 5d bc             	cmp    -0x44(%ebp),%ebx
   1ba44:	74 2a                	je     1ba70 <print_double_str_scient+0x230>
   1ba46:	8b 47 08             	mov    0x8(%edi),%eax
   1ba49:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1ba50:	00 
   1ba51:	89 44 24 08          	mov    %eax,0x8(%esp)
   1ba55:	89 34 24             	mov    %esi,(%esp)
   1ba58:	ff 17                	call   *(%edi)
   1ba5a:	85 c0                	test   %eax,%eax
   1ba5c:	79 e2                	jns    1ba40 <print_double_str_scient+0x200>
   1ba5e:	e9 d7 fe ff ff       	jmp    1b93a <print_double_str_scient+0xfa>
   1ba63:	0f 8c d1 fe ff ff    	jl     1b93a <print_double_str_scient+0xfa>
   1ba69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1ba70:	8b 75 b8             	mov    -0x48(%ebp),%esi
   1ba73:	8b 5d bc             	mov    -0x44(%ebp),%ebx
   1ba76:	01 f3                	add    %esi,%ebx
   1ba78:	89 5d b8             	mov    %ebx,-0x48(%ebp)
   1ba7b:	8b 45 08             	mov    0x8(%ebp),%eax
   1ba7e:	25 80 00 00 00       	and    $0x80,%eax
   1ba83:	83 f8 01             	cmp    $0x1,%eax
   1ba86:	19 c0                	sbb    %eax,%eax
   1ba88:	83 e0 20             	and    $0x20,%eax
   1ba8b:	83 c0 45             	add    $0x45,%eax
   1ba8e:	88 45 dc             	mov    %al,-0x24(%ebp)
   1ba91:	8b 47 08             	mov    0x8(%edi),%eax
   1ba94:	89 44 24 08          	mov    %eax,0x8(%esp)
   1ba98:	8d 45 dc             	lea    -0x24(%ebp),%eax
   1ba9b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1baa2:	00 
   1baa3:	89 04 24             	mov    %eax,(%esp)
   1baa6:	ff 17                	call   *(%edi)
   1baa8:	89 c3                	mov    %eax,%ebx
   1baaa:	85 c0                	test   %eax,%eax
   1baac:	0f 88 88 fe ff ff    	js     1b93a <print_double_str_scient+0xfa>
   1bab2:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   1bab5:	8d 75 e0             	lea    -0x20(%ebp),%esi
   1bab8:	c1 f8 1f             	sar    $0x1f,%eax
   1babb:	83 e0 02             	and    $0x2,%eax
   1babe:	83 c0 2b             	add    $0x2b,%eax
   1bac1:	88 45 e0             	mov    %al,-0x20(%ebp)
   1bac4:	8b 47 08             	mov    0x8(%edi),%eax
   1bac7:	89 44 24 08          	mov    %eax,0x8(%esp)
   1bacb:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1bad2:	00 
   1bad3:	89 34 24             	mov    %esi,(%esp)
   1bad6:	ff 17                	call   *(%edi)
   1bad8:	85 c0                	test   %eax,%eax
   1bada:	0f 88 5a fe ff ff    	js     1b93a <print_double_str_scient+0xfa>
   1bae0:	01 d8                	add    %ebx,%eax
   1bae2:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
   1bae7:	89 45 b0             	mov    %eax,-0x50(%ebp)
   1baea:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1baed:	f7 ea                	imul   %edx
   1baef:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   1baf2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   1baf9:	c1 fb 1f             	sar    $0x1f,%ebx
   1bafc:	c1 fa 05             	sar    $0x5,%edx
   1baff:	89 5d bc             	mov    %ebx,-0x44(%ebp)
   1bb02:	29 da                	sub    %ebx,%edx
   1bb04:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   1bb07:	8d 04 92             	lea    (%edx,%edx,4),%eax
   1bb0a:	8d 4a 30             	lea    0x30(%edx),%ecx
   1bb0d:	88 4d e4             	mov    %cl,-0x1c(%ebp)
   1bb10:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1bb13:	c1 e0 02             	shl    $0x2,%eax
   1bb16:	29 c3                	sub    %eax,%ebx
   1bb18:	89 5d b4             	mov    %ebx,-0x4c(%ebp)
   1bb1b:	bb 67 66 66 66       	mov    $0x66666667,%ebx
   1bb20:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   1bb23:	f7 eb                	imul   %ebx
   1bb25:	c1 fa 02             	sar    $0x2,%edx
   1bb28:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   1bb2b:	c1 f8 1f             	sar    $0x1f,%eax
   1bb2e:	29 c2                	sub    %eax,%edx
   1bb30:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1bb33:	83 c2 30             	add    $0x30,%edx
   1bb36:	88 55 e5             	mov    %dl,-0x1b(%ebp)
   1bb39:	f7 eb                	imul   %ebx
   1bb3b:	c1 fa 02             	sar    $0x2,%edx
   1bb3e:	8b 5d bc             	mov    -0x44(%ebp),%ebx
   1bb41:	29 da                	sub    %ebx,%edx
   1bb43:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   1bb46:	8d 04 92             	lea    (%edx,%edx,4),%eax
   1bb49:	01 c0                	add    %eax,%eax
   1bb4b:	29 c3                	sub    %eax,%ebx
   1bb4d:	89 d8                	mov    %ebx,%eax
   1bb4f:	8b 5f 08             	mov    0x8(%edi),%ebx
   1bb52:	83 c0 30             	add    $0x30,%eax
   1bb55:	80 f9 30             	cmp    $0x30,%cl
   1bb58:	0f 94 c2             	sete   %dl
   1bb5b:	81 e2 ff 00 00 00    	and    $0xff,%edx
   1bb61:	88 45 e6             	mov    %al,-0x1a(%ebp)
   1bb64:	80 f9 30             	cmp    $0x30,%cl
   1bb67:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   1bb6b:	0f 95 c0             	setne  %al
   1bb6e:	25 ff 00 00 00       	and    $0xff,%eax
   1bb73:	83 c0 02             	add    $0x2,%eax
   1bb76:	89 44 24 04          	mov    %eax,0x4(%esp)
   1bb7a:	8d 44 15 e4          	lea    -0x1c(%ebp,%edx,1),%eax
   1bb7e:	89 04 24             	mov    %eax,(%esp)
   1bb81:	ff 17                	call   *(%edi)
   1bb83:	85 c0                	test   %eax,%eax
   1bb85:	0f 88 af fd ff ff    	js     1b93a <print_double_str_scient+0xfa>
   1bb8b:	8b 5d b0             	mov    -0x50(%ebp),%ebx
   1bb8e:	8b 55 b8             	mov    -0x48(%ebp),%edx
   1bb91:	01 d8                	add    %ebx,%eax
   1bb93:	01 d0                	add    %edx,%eax
   1bb95:	f6 45 08 10          	testb  $0x10,0x8(%ebp)
   1bb99:	89 45 c0             	mov    %eax,-0x40(%ebp)
   1bb9c:	0f 84 a2 fd ff ff    	je     1b944 <print_double_str_scient+0x104>
   1bba2:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
   1bba5:	c6 45 e0 20          	movb   $0x20,-0x20(%ebp)
   1bba9:	85 c9                	test   %ecx,%ecx
   1bbab:	0f 84 af 00 00 00    	je     1bc60 <print_double_str_scient+0x420>
   1bbb1:	31 db                	xor    %ebx,%ebx
   1bbb3:	eb 0d                	jmp    1bbc2 <print_double_str_scient+0x382>
   1bbb5:	8d 76 00             	lea    0x0(%esi),%esi
   1bbb8:	43                   	inc    %ebx
   1bbb9:	3b 5d c4             	cmp    -0x3c(%ebp),%ebx
   1bbbc:	0f 84 9e 00 00 00    	je     1bc60 <print_double_str_scient+0x420>
   1bbc2:	8b 47 08             	mov    0x8(%edi),%eax
   1bbc5:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1bbcc:	00 
   1bbcd:	89 44 24 08          	mov    %eax,0x8(%esp)
   1bbd1:	89 34 24             	mov    %esi,(%esp)
   1bbd4:	ff 17                	call   *(%edi)
   1bbd6:	85 c0                	test   %eax,%eax
   1bbd8:	79 de                	jns    1bbb8 <print_double_str_scient+0x378>
   1bbda:	e9 5b fd ff ff       	jmp    1b93a <print_double_str_scient+0xfa>
   1bbdf:	90                   	nop
   1bbe0:	8a 5d cc             	mov    -0x34(%ebp),%bl
   1bbe3:	8b 75 c4             	mov    -0x3c(%ebp),%esi
   1bbe6:	84 db                	test   %bl,%bl
   1bbe8:	89 75 b8             	mov    %esi,-0x48(%ebp)
   1bbeb:	0f 84 6e fd ff ff    	je     1b95f <print_double_str_scient+0x11f>
   1bbf1:	8b 47 08             	mov    0x8(%edi),%eax
   1bbf4:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1bbfb:	00 
   1bbfc:	89 44 24 08          	mov    %eax,0x8(%esp)
   1bc00:	8d 45 cc             	lea    -0x34(%ebp),%eax
   1bc03:	89 04 24             	mov    %eax,(%esp)
   1bc06:	ff 17                	call   *(%edi)
   1bc08:	85 c0                	test   %eax,%eax
   1bc0a:	0f 88 2a fd ff ff    	js     1b93a <print_double_str_scient+0xfa>
   1bc10:	8b 5d b8             	mov    -0x48(%ebp),%ebx
   1bc13:	01 c3                	add    %eax,%ebx
   1bc15:	89 5d b8             	mov    %ebx,-0x48(%ebp)
   1bc18:	e9 42 fd ff ff       	jmp    1b95f <print_double_str_scient+0x11f>
   1bc1d:	8d 76 00             	lea    0x0(%esi),%esi
   1bc20:	b3 2b                	mov    $0x2b,%bl
   1bc22:	f6 45 08 20          	testb  $0x20,0x8(%ebp)
   1bc26:	0f 85 42 fc ff ff    	jne    1b86e <print_double_str_scient+0x2e>
   1bc2c:	8b 45 08             	mov    0x8(%ebp),%eax
   1bc2f:	83 e0 40             	and    $0x40,%eax
   1bc32:	83 f8 01             	cmp    $0x1,%eax
   1bc35:	19 db                	sbb    %ebx,%ebx
   1bc37:	83 f3 ff             	xor    $0xffffffff,%ebx
   1bc3a:	83 e3 20             	and    $0x20,%ebx
   1bc3d:	85 d2                	test   %edx,%edx
   1bc3f:	88 5d cc             	mov    %bl,-0x34(%ebp)
   1bc42:	0f 8f 31 fc ff ff    	jg     1b879 <print_double_str_scient+0x39>
   1bc48:	8b 45 08             	mov    0x8(%ebp),%eax
   1bc4b:	83 e0 01             	and    $0x1,%eax
   1bc4e:	88 45 ab             	mov    %al,-0x55(%ebp)
   1bc51:	89 45 b8             	mov    %eax,-0x48(%ebp)
   1bc54:	e9 2b fc ff ff       	jmp    1b884 <print_double_str_scient+0x44>
   1bc59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1bc60:	8b 75 c4             	mov    -0x3c(%ebp),%esi
   1bc63:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1bc66:	01 f0                	add    %esi,%eax
   1bc68:	89 45 c0             	mov    %eax,-0x40(%ebp)
   1bc6b:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1bc6e:	83 c4 6c             	add    $0x6c,%esp
   1bc71:	5b                   	pop    %ebx
   1bc72:	5e                   	pop    %esi
   1bc73:	5f                   	pop    %edi
   1bc74:	5d                   	pop    %ebp
   1bc75:	c3                   	ret    
   1bc76:	c7 44 24 08 b0 03 00 	movl   $0x3b0,0x8(%esp)
   1bc7d:	00 
   1bc7e:	c7 44 24 04 83 dc 02 	movl   $0x2dc83,0x4(%esp)
   1bc85:	00 
   1bc86:	c7 04 24 9c dc 02 00 	movl   $0x2dc9c,(%esp)
   1bc8d:	e8 1e ec 00 00       	call   2a8b0 <assert_abort>
   1bc92:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1bc99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001bca0 <print_double_str_fixed>:
   1bca0:	55                   	push   %ebp
   1bca1:	89 e5                	mov    %esp,%ebp
   1bca3:	57                   	push   %edi
   1bca4:	56                   	push   %esi
   1bca5:	53                   	push   %ebx
   1bca6:	83 ec 6c             	sub    $0x6c,%esp
   1bca9:	8b 58 04             	mov    0x4(%eax),%ebx
   1bcac:	8b 38                	mov    (%eax),%edi
   1bcae:	89 7d a0             	mov    %edi,-0x60(%ebp)
   1bcb1:	8b 75 0c             	mov    0xc(%ebp),%esi
   1bcb4:	89 5d b8             	mov    %ebx,-0x48(%ebp)
   1bcb7:	8b 78 08             	mov    0x8(%eax),%edi
   1bcba:	85 db                	test   %ebx,%ebx
   1bcbc:	0f 8e 71 04 00 00    	jle    1c133 <print_double_str_fixed+0x493>
   1bcc2:	85 d2                	test   %edx,%edx
   1bcc4:	0f 88 4d 04 00 00    	js     1c117 <print_double_str_fixed+0x477>
   1bcca:	89 fb                	mov    %edi,%ebx
   1bccc:	f7 db                	neg    %ebx
   1bcce:	85 ff                	test   %edi,%edi
   1bcd0:	0f 88 3a 03 00 00    	js     1c010 <print_double_str_fixed+0x370>
   1bcd6:	03 7d b8             	add    -0x48(%ebp),%edi
   1bcd9:	89 7d b4             	mov    %edi,-0x4c(%ebp)
   1bcdc:	89 7d c0             	mov    %edi,-0x40(%ebp)
   1bcdf:	85 ff                	test   %edi,%edi
   1bce1:	0f 8e 69 03 00 00    	jle    1c050 <print_double_str_fixed+0x3b0>
   1bce7:	80 78 0c 00          	cmpb   $0x0,0xc(%eax)
   1bceb:	0f 84 8f 02 00 00    	je     1bf80 <print_double_str_fixed+0x2e0>
   1bcf1:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)
   1bcf8:	b0 2d                	mov    $0x2d,%al
   1bcfa:	89 df                	mov    %ebx,%edi
   1bcfc:	88 45 cc             	mov    %al,-0x34(%ebp)
   1bcff:	83 f7 ff             	xor    $0xffffffff,%edi
   1bd02:	c1 ff 1f             	sar    $0x1f,%edi
   1bd05:	21 df                	and    %ebx,%edi
   1bd07:	89 fb                	mov    %edi,%ebx
   1bd09:	89 7d a8             	mov    %edi,-0x58(%ebp)
   1bd0c:	2b 5d b8             	sub    -0x48(%ebp),%ebx
   1bd0f:	89 5d bc             	mov    %ebx,-0x44(%ebp)
   1bd12:	83 f3 ff             	xor    $0xffffffff,%ebx
   1bd15:	c1 fb 1f             	sar    $0x1f,%ebx
   1bd18:	21 5d bc             	and    %ebx,-0x44(%ebp)
   1bd1b:	3b 7d b8             	cmp    -0x48(%ebp),%edi
   1bd1e:	7e 06                	jle    1bd26 <print_double_str_fixed+0x86>
   1bd20:	8b 5d b8             	mov    -0x48(%ebp),%ebx
   1bd23:	89 5d a8             	mov    %ebx,-0x58(%ebp)
   1bd26:	c7 45 b0 00 00 00 00 	movl   $0x0,-0x50(%ebp)
   1bd2d:	f7 45 08 00 02 00 00 	testl  $0x200,0x8(%ebp)
   1bd34:	75 05                	jne    1bd3b <print_double_str_fixed+0x9b>
   1bd36:	29 fa                	sub    %edi,%edx
   1bd38:	89 55 b0             	mov    %edx,-0x50(%ebp)
   1bd3b:	8b 5d bc             	mov    -0x44(%ebp),%ebx
   1bd3e:	8b 7d a8             	mov    -0x58(%ebp),%edi
   1bd41:	01 fb                	add    %edi,%ebx
   1bd43:	8b 55 b0             	mov    -0x50(%ebp),%edx
   1bd46:	01 d3                	add    %edx,%ebx
   1bd48:	85 db                	test   %ebx,%ebx
   1bd4a:	0f 8e b0 02 00 00    	jle    1c000 <print_double_str_fixed+0x360>
   1bd50:	c6 45 a7 01          	movb   $0x1,-0x59(%ebp)
   1bd54:	ba 01 00 00 00       	mov    $0x1,%edx
   1bd59:	8b 7d c0             	mov    -0x40(%ebp),%edi
   1bd5c:	03 7d c4             	add    -0x3c(%ebp),%edi
   1bd5f:	01 fa                	add    %edi,%edx
   1bd61:	01 da                	add    %ebx,%edx
   1bd63:	29 d1                	sub    %edx,%ecx
   1bd65:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
   1bd68:	83 f1 ff             	xor    $0xffffffff,%ecx
   1bd6b:	c1 f9 1f             	sar    $0x1f,%ecx
   1bd6e:	8b 55 c4             	mov    -0x3c(%ebp),%edx
   1bd71:	21 ca                	and    %ecx,%edx
   1bd73:	f6 45 08 14          	testb  $0x14,0x8(%ebp)
   1bd77:	89 55 c4             	mov    %edx,-0x3c(%ebp)
   1bd7a:	75 5c                	jne    1bdd8 <print_double_str_fixed+0x138>
   1bd7c:	8b 7d c4             	mov    -0x3c(%ebp),%edi
   1bd7f:	c6 45 d0 20          	movb   $0x20,-0x30(%ebp)
   1bd83:	85 ff                	test   %edi,%edi
   1bd85:	0f 84 48 01 00 00    	je     1bed3 <print_double_str_fixed+0x233>
   1bd8b:	31 db                	xor    %ebx,%ebx
   1bd8d:	8d 7d d0             	lea    -0x30(%ebp),%edi
   1bd90:	eb 10                	jmp    1bda2 <print_double_str_fixed+0x102>
   1bd92:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1bd98:	43                   	inc    %ebx
   1bd99:	3b 5d c4             	cmp    -0x3c(%ebp),%ebx
   1bd9c:	0f 84 2e 01 00 00    	je     1bed0 <print_double_str_fixed+0x230>
   1bda2:	8b 46 08             	mov    0x8(%esi),%eax
   1bda5:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1bdac:	00 
   1bdad:	89 44 24 08          	mov    %eax,0x8(%esp)
   1bdb1:	89 3c 24             	mov    %edi,(%esp)
   1bdb4:	ff 16                	call   *(%esi)
   1bdb6:	85 c0                	test   %eax,%eax
   1bdb8:	79 de                	jns    1bd98 <print_double_str_fixed+0xf8>
   1bdba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1bdc0:	c7 45 c0 ff ff ff ff 	movl   $0xffffffff,-0x40(%ebp)
   1bdc7:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1bdca:	83 c4 6c             	add    $0x6c,%esp
   1bdcd:	5b                   	pop    %ebx
   1bdce:	5e                   	pop    %esi
   1bdcf:	5f                   	pop    %edi
   1bdd0:	5d                   	pop    %ebp
   1bdd1:	c3                   	ret    
   1bdd2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1bdd8:	c7 45 ac 00 00 00 00 	movl   $0x0,-0x54(%ebp)
   1bddf:	84 c0                	test   %al,%al
   1bde1:	0f 85 fa 00 00 00    	jne    1bee1 <print_double_str_fixed+0x241>
   1bde7:	f6 45 08 04          	testb  $0x4,0x8(%ebp)
   1bdeb:	74 3e                	je     1be2b <print_double_str_fixed+0x18b>
   1bded:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
   1bdf0:	c6 45 d4 30          	movb   $0x30,-0x2c(%ebp)
   1bdf4:	85 c9                	test   %ecx,%ecx
   1bdf6:	74 28                	je     1be20 <print_double_str_fixed+0x180>
   1bdf8:	31 db                	xor    %ebx,%ebx
   1bdfa:	8d 7d d4             	lea    -0x2c(%ebp),%edi
   1bdfd:	eb 07                	jmp    1be06 <print_double_str_fixed+0x166>
   1bdff:	90                   	nop
   1be00:	43                   	inc    %ebx
   1be01:	3b 5d c4             	cmp    -0x3c(%ebp),%ebx
   1be04:	74 1a                	je     1be20 <print_double_str_fixed+0x180>
   1be06:	8b 46 08             	mov    0x8(%esi),%eax
   1be09:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1be10:	00 
   1be11:	89 44 24 08          	mov    %eax,0x8(%esp)
   1be15:	89 3c 24             	mov    %edi,(%esp)
   1be18:	ff 16                	call   *(%esi)
   1be1a:	85 c0                	test   %eax,%eax
   1be1c:	79 e2                	jns    1be00 <print_double_str_fixed+0x160>
   1be1e:	eb a0                	jmp    1bdc0 <print_double_str_fixed+0x120>
   1be20:	8b 45 ac             	mov    -0x54(%ebp),%eax
   1be23:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
   1be26:	01 d8                	add    %ebx,%eax
   1be28:	89 45 ac             	mov    %eax,-0x54(%ebp)
   1be2b:	8b 7d b4             	mov    -0x4c(%ebp),%edi
   1be2e:	3b 7d b8             	cmp    -0x48(%ebp),%edi
   1be31:	7f 6d                	jg     1bea0 <print_double_str_fixed+0x200>
   1be33:	85 ff                	test   %edi,%edi
   1be35:	7e 70                	jle    1bea7 <print_double_str_fixed+0x207>
   1be37:	8b 46 08             	mov    0x8(%esi),%eax
   1be3a:	8b 55 a0             	mov    -0x60(%ebp),%edx
   1be3d:	89 44 24 08          	mov    %eax,0x8(%esp)
   1be41:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1be45:	89 14 24             	mov    %edx,(%esp)
   1be48:	ff 16                	call   *(%esi)
   1be4a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   1be4d:	85 c0                	test   %eax,%eax
   1be4f:	0f 88 6b ff ff ff    	js     1bdc0 <print_double_str_fixed+0x120>
   1be55:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   1be58:	c6 45 d8 30          	movb   $0x30,-0x28(%ebp)
   1be5c:	29 fb                	sub    %edi,%ebx
   1be5e:	8d 7d d8             	lea    -0x28(%ebp),%edi
   1be61:	89 5d c0             	mov    %ebx,-0x40(%ebp)
   1be64:	31 db                	xor    %ebx,%ebx
   1be66:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)
   1be6a:	7f 16                	jg     1be82 <print_double_str_fixed+0x1e2>
   1be6c:	e9 9c 00 00 00       	jmp    1bf0d <print_double_str_fixed+0x26d>
   1be71:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1be78:	43                   	inc    %ebx
   1be79:	3b 5d c0             	cmp    -0x40(%ebp),%ebx
   1be7c:	0f 84 96 00 00 00    	je     1bf18 <print_double_str_fixed+0x278>
   1be82:	8b 46 08             	mov    0x8(%esi),%eax
   1be85:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1be8c:	00 
   1be8d:	89 44 24 08          	mov    %eax,0x8(%esp)
   1be91:	89 3c 24             	mov    %edi,(%esp)
   1be94:	ff 16                	call   *(%esi)
   1be96:	85 c0                	test   %eax,%eax
   1be98:	79 de                	jns    1be78 <print_double_str_fixed+0x1d8>
   1be9a:	e9 21 ff ff ff       	jmp    1bdc0 <print_double_str_fixed+0x120>
   1be9f:	90                   	nop
   1bea0:	8b 7d b8             	mov    -0x48(%ebp),%edi
   1bea3:	85 ff                	test   %edi,%edi
   1bea5:	7f 90                	jg     1be37 <print_double_str_fixed+0x197>
   1bea7:	8b 46 08             	mov    0x8(%esi),%eax
   1beaa:	8d 7d e4             	lea    -0x1c(%ebp),%edi
   1bead:	c6 45 e4 30          	movb   $0x30,-0x1c(%ebp)
   1beb1:	89 44 24 08          	mov    %eax,0x8(%esp)
   1beb5:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1bebc:	00 
   1bebd:	89 3c 24             	mov    %edi,(%esp)
   1bec0:	ff 16                	call   *(%esi)
   1bec2:	89 45 c0             	mov    %eax,-0x40(%ebp)
   1bec5:	85 c0                	test   %eax,%eax
   1bec7:	79 5a                	jns    1bf23 <print_double_str_fixed+0x283>
   1bec9:	e9 f2 fe ff ff       	jmp    1bdc0 <print_double_str_fixed+0x120>
   1bece:	66 90                	xchg   %ax,%ax
   1bed0:	8a 45 cc             	mov    -0x34(%ebp),%al
   1bed3:	8b 55 c4             	mov    -0x3c(%ebp),%edx
   1bed6:	84 c0                	test   %al,%al
   1bed8:	89 55 ac             	mov    %edx,-0x54(%ebp)
   1bedb:	0f 84 06 ff ff ff    	je     1bde7 <print_double_str_fixed+0x147>
   1bee1:	8b 46 08             	mov    0x8(%esi),%eax
   1bee4:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1beeb:	00 
   1beec:	89 44 24 08          	mov    %eax,0x8(%esp)
   1bef0:	8d 45 cc             	lea    -0x34(%ebp),%eax
   1bef3:	89 04 24             	mov    %eax,(%esp)
   1bef6:	ff 16                	call   *(%esi)
   1bef8:	85 c0                	test   %eax,%eax
   1befa:	0f 88 c0 fe ff ff    	js     1bdc0 <print_double_str_fixed+0x120>
   1bf00:	8b 5d ac             	mov    -0x54(%ebp),%ebx
   1bf03:	01 c3                	add    %eax,%ebx
   1bf05:	89 5d ac             	mov    %ebx,-0x54(%ebp)
   1bf08:	e9 da fe ff ff       	jmp    1bde7 <print_double_str_fixed+0x147>
   1bf0d:	0f 8c ad fe ff ff    	jl     1bdc0 <print_double_str_fixed+0x120>
   1bf13:	90                   	nop
   1bf14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1bf18:	8b 55 ac             	mov    -0x54(%ebp),%edx
   1bf1b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   1bf1e:	01 c2                	add    %eax,%edx
   1bf20:	89 55 ac             	mov    %edx,-0x54(%ebp)
   1bf23:	8b 7d c0             	mov    -0x40(%ebp),%edi
   1bf26:	8b 55 ac             	mov    -0x54(%ebp),%edx
   1bf29:	01 fa                	add    %edi,%edx
   1bf2b:	89 55 c0             	mov    %edx,-0x40(%ebp)
   1bf2e:	80 7d a7 00          	cmpb   $0x0,-0x59(%ebp)
   1bf32:	75 64                	jne    1bf98 <print_double_str_fixed+0x2f8>
   1bf34:	f6 45 08 10          	testb  $0x10,0x8(%ebp)
   1bf38:	0f 84 89 fe ff ff    	je     1bdc7 <print_double_str_fixed+0x127>
   1bf3e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   1bf41:	c6 45 e4 20          	movb   $0x20,-0x1c(%ebp)
   1bf45:	85 c0                	test   %eax,%eax
   1bf47:	0f 84 eb 00 00 00    	je     1c038 <print_double_str_fixed+0x398>
   1bf4d:	31 db                	xor    %ebx,%ebx
   1bf4f:	8d 7d e4             	lea    -0x1c(%ebp),%edi
   1bf52:	eb 0e                	jmp    1bf62 <print_double_str_fixed+0x2c2>
   1bf54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1bf58:	43                   	inc    %ebx
   1bf59:	3b 5d c4             	cmp    -0x3c(%ebp),%ebx
   1bf5c:	0f 84 d6 00 00 00    	je     1c038 <print_double_str_fixed+0x398>
   1bf62:	8b 46 08             	mov    0x8(%esi),%eax
   1bf65:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1bf6c:	00 
   1bf6d:	89 44 24 08          	mov    %eax,0x8(%esp)
   1bf71:	89 3c 24             	mov    %edi,(%esp)
   1bf74:	ff 16                	call   *(%esi)
   1bf76:	85 c0                	test   %eax,%eax
   1bf78:	79 de                	jns    1bf58 <print_double_str_fixed+0x2b8>
   1bf7a:	e9 41 fe ff ff       	jmp    1bdc0 <print_double_str_fixed+0x120>
   1bf7f:	90                   	nop
   1bf80:	f6 45 08 20          	testb  $0x20,0x8(%ebp)
   1bf84:	0f 84 6e 01 00 00    	je     1c0f8 <print_double_str_fixed+0x458>
   1bf8a:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)
   1bf91:	b0 2b                	mov    $0x2b,%al
   1bf93:	e9 62 fd ff ff       	jmp    1bcfa <print_double_str_fixed+0x5a>
   1bf98:	8b 46 08             	mov    0x8(%esi),%eax
   1bf9b:	8d 7d e4             	lea    -0x1c(%ebp),%edi
   1bf9e:	c6 45 e4 2e          	movb   $0x2e,-0x1c(%ebp)
   1bfa2:	89 44 24 08          	mov    %eax,0x8(%esp)
   1bfa6:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1bfad:	00 
   1bfae:	89 3c 24             	mov    %edi,(%esp)
   1bfb1:	ff 16                	call   *(%esi)
   1bfb3:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   1bfb6:	85 c0                	test   %eax,%eax
   1bfb8:	0f 88 02 fe ff ff    	js     1bdc0 <print_double_str_fixed+0x120>
   1bfbe:	8b 5d bc             	mov    -0x44(%ebp),%ebx
   1bfc1:	c6 45 dc 30          	movb   $0x30,-0x24(%ebp)
   1bfc5:	85 db                	test   %ebx,%ebx
   1bfc7:	0f 84 93 00 00 00    	je     1c060 <print_double_str_fixed+0x3c0>
   1bfcd:	31 db                	xor    %ebx,%ebx
   1bfcf:	8d 7d dc             	lea    -0x24(%ebp),%edi
   1bfd2:	eb 0e                	jmp    1bfe2 <print_double_str_fixed+0x342>
   1bfd4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1bfd8:	43                   	inc    %ebx
   1bfd9:	3b 5d bc             	cmp    -0x44(%ebp),%ebx
   1bfdc:	0f 84 7e 00 00 00    	je     1c060 <print_double_str_fixed+0x3c0>
   1bfe2:	8b 46 08             	mov    0x8(%esi),%eax
   1bfe5:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1bfec:	00 
   1bfed:	89 44 24 08          	mov    %eax,0x8(%esp)
   1bff1:	89 3c 24             	mov    %edi,(%esp)
   1bff4:	ff 16                	call   *(%esi)
   1bff6:	85 c0                	test   %eax,%eax
   1bff8:	79 de                	jns    1bfd8 <print_double_str_fixed+0x338>
   1bffa:	e9 c1 fd ff ff       	jmp    1bdc0 <print_double_str_fixed+0x120>
   1bfff:	90                   	nop
   1c000:	8b 55 08             	mov    0x8(%ebp),%edx
   1c003:	83 e2 01             	and    $0x1,%edx
   1c006:	88 55 a7             	mov    %dl,-0x59(%ebp)
   1c009:	e9 4b fd ff ff       	jmp    1bd59 <print_double_str_fixed+0xb9>
   1c00e:	66 90                	xchg   %ax,%ax
   1c010:	39 da                	cmp    %ebx,%edx
   1c012:	0f 8d be fc ff ff    	jge    1bcd6 <print_double_str_fixed+0x36>
   1c018:	c7 44 24 08 c6 02 00 	movl   $0x2c6,0x8(%esp)
   1c01f:	00 
   1c020:	c7 44 24 04 83 dc 02 	movl   $0x2dc83,0x4(%esp)
   1c027:	00 
   1c028:	c7 04 24 08 dd 02 00 	movl   $0x2dd08,(%esp)
   1c02f:	e8 7c e8 00 00       	call   2a8b0 <assert_abort>
   1c034:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c038:	8b 7d c4             	mov    -0x3c(%ebp),%edi
   1c03b:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   1c03e:	01 f9                	add    %edi,%ecx
   1c040:	89 4d c0             	mov    %ecx,-0x40(%ebp)
   1c043:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1c046:	83 c4 6c             	add    $0x6c,%esp
   1c049:	5b                   	pop    %ebx
   1c04a:	5e                   	pop    %esi
   1c04b:	5f                   	pop    %edi
   1c04c:	5d                   	pop    %ebp
   1c04d:	c3                   	ret    
   1c04e:	66 90                	xchg   %ax,%ax
   1c050:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)
   1c057:	e9 8b fc ff ff       	jmp    1bce7 <print_double_str_fixed+0x47>
   1c05c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c060:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1c063:	8b 5d b4             	mov    -0x4c(%ebp),%ebx
   1c066:	01 d8                	add    %ebx,%eax
   1c068:	8b 7d bc             	mov    -0x44(%ebp),%edi
   1c06b:	01 f8                	add    %edi,%eax
   1c06d:	89 45 c0             	mov    %eax,-0x40(%ebp)
   1c070:	8b 45 a8             	mov    -0x58(%ebp),%eax
   1c073:	85 c0                	test   %eax,%eax
   1c075:	74 2d                	je     1c0a4 <print_double_str_fixed+0x404>
   1c077:	8b 46 08             	mov    0x8(%esi),%eax
   1c07a:	8b 5d a8             	mov    -0x58(%ebp),%ebx
   1c07d:	89 44 24 08          	mov    %eax,0x8(%esp)
   1c081:	8b 45 b8             	mov    -0x48(%ebp),%eax
   1c084:	29 d8                	sub    %ebx,%eax
   1c086:	8b 4d a0             	mov    -0x60(%ebp),%ecx
   1c089:	01 c8                	add    %ecx,%eax
   1c08b:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   1c08f:	89 04 24             	mov    %eax,(%esp)
   1c092:	ff 16                	call   *(%esi)
   1c094:	85 c0                	test   %eax,%eax
   1c096:	0f 88 24 fd ff ff    	js     1bdc0 <print_double_str_fixed+0x120>
   1c09c:	8b 55 c0             	mov    -0x40(%ebp),%edx
   1c09f:	01 c2                	add    %eax,%edx
   1c0a1:	89 55 c0             	mov    %edx,-0x40(%ebp)
   1c0a4:	31 db                	xor    %ebx,%ebx
   1c0a6:	c6 45 e0 30          	movb   $0x30,-0x20(%ebp)
   1c0aa:	8d 7d e0             	lea    -0x20(%ebp),%edi
   1c0ad:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
   1c0b1:	7f 0b                	jg     1c0be <print_double_str_fixed+0x41e>
   1c0b3:	eb 26                	jmp    1c0db <print_double_str_fixed+0x43b>
   1c0b5:	8d 76 00             	lea    0x0(%esi),%esi
   1c0b8:	43                   	inc    %ebx
   1c0b9:	3b 5d b0             	cmp    -0x50(%ebp),%ebx
   1c0bc:	74 2a                	je     1c0e8 <print_double_str_fixed+0x448>
   1c0be:	8b 46 08             	mov    0x8(%esi),%eax
   1c0c1:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1c0c8:	00 
   1c0c9:	89 44 24 08          	mov    %eax,0x8(%esp)
   1c0cd:	89 3c 24             	mov    %edi,(%esp)
   1c0d0:	ff 16                	call   *(%esi)
   1c0d2:	85 c0                	test   %eax,%eax
   1c0d4:	79 e2                	jns    1c0b8 <print_double_str_fixed+0x418>
   1c0d6:	e9 e5 fc ff ff       	jmp    1bdc0 <print_double_str_fixed+0x120>
   1c0db:	0f 8c df fc ff ff    	jl     1bdc0 <print_double_str_fixed+0x120>
   1c0e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c0e8:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1c0eb:	8b 7d b0             	mov    -0x50(%ebp),%edi
   1c0ee:	01 c7                	add    %eax,%edi
   1c0f0:	89 7d c0             	mov    %edi,-0x40(%ebp)
   1c0f3:	e9 3c fe ff ff       	jmp    1bf34 <print_double_str_fixed+0x294>
   1c0f8:	8b 45 08             	mov    0x8(%ebp),%eax
   1c0fb:	83 e0 40             	and    $0x40,%eax
   1c0fe:	83 f8 01             	cmp    $0x1,%eax
   1c101:	19 ff                	sbb    %edi,%edi
   1c103:	47                   	inc    %edi
   1c104:	83 f8 01             	cmp    $0x1,%eax
   1c107:	19 c0                	sbb    %eax,%eax
   1c109:	89 7d c4             	mov    %edi,-0x3c(%ebp)
   1c10c:	83 f0 ff             	xor    $0xffffffff,%eax
   1c10f:	83 e0 20             	and    $0x20,%eax
   1c112:	e9 e3 fb ff ff       	jmp    1bcfa <print_double_str_fixed+0x5a>
   1c117:	c7 44 24 08 c5 02 00 	movl   $0x2c5,0x8(%esp)
   1c11e:	00 
   1c11f:	c7 44 24 04 83 dc 02 	movl   $0x2dc83,0x4(%esp)
   1c126:	00 
   1c127:	c7 04 24 a4 dc 02 00 	movl   $0x2dca4,(%esp)
   1c12e:	e8 7d e7 00 00       	call   2a8b0 <assert_abort>
   1c133:	c7 44 24 08 c4 02 00 	movl   $0x2c4,0x8(%esp)
   1c13a:	00 
   1c13b:	c7 44 24 04 83 dc 02 	movl   $0x2dc83,0x4(%esp)
   1c142:	00 
   1c143:	c7 04 24 9c dc 02 00 	movl   $0x2dc9c,(%esp)
   1c14a:	e8 61 e7 00 00       	call   2a8b0 <assert_abort>
   1c14f:	90                   	nop

0001c150 <print_special.isra.8>:
   1c150:	55                   	push   %ebp
   1c151:	89 e5                	mov    %esp,%ebp
   1c153:	57                   	push   %edi
   1c154:	56                   	push   %esi
   1c155:	53                   	push   %ebx
   1c156:	83 ec 3c             	sub    $0x3c,%esp
   1c159:	84 c0                	test   %al,%al
   1c15b:	8b 75 0c             	mov    0xc(%ebp),%esi
   1c15e:	8b 7d 10             	mov    0x10(%ebp),%edi
   1c161:	0f 84 8f 01 00 00    	je     1c2f6 <print_special.isra.8+0x1a6>
   1c167:	b0 2d                	mov    $0x2d,%al
   1c169:	84 d2                	test   %dl,%dl
   1c16b:	0f 84 47 01 00 00    	je     1c2b8 <print_special.isra.8+0x168>
   1c171:	88 45 dc             	mov    %al,-0x24(%ebp)
   1c174:	f7 c6 80 00 00 00    	test   $0x80,%esi
   1c17a:	74 7c                	je     1c1f8 <print_special.isra.8+0xa8>
   1c17c:	c7 45 d0 b3 dc 02 00 	movl   $0x2dcb3,-0x30(%ebp)
   1c183:	84 c9                	test   %cl,%cl
   1c185:	0f 85 0d 01 00 00    	jne    1c298 <print_special.isra.8+0x148>
   1c18b:	3c 01                	cmp    $0x1,%al
   1c18d:	8b 55 08             	mov    0x8(%ebp),%edx
   1c190:	19 c9                	sbb    %ecx,%ecx
   1c192:	83 c1 04             	add    $0x4,%ecx
   1c195:	29 ca                	sub    %ecx,%edx
   1c197:	89 d1                	mov    %edx,%ecx
   1c199:	83 f1 ff             	xor    $0xffffffff,%ecx
   1c19c:	c1 f9 1f             	sar    $0x1f,%ecx
   1c19f:	21 ca                	and    %ecx,%edx
   1c1a1:	83 e6 10             	and    $0x10,%esi
   1c1a4:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1c1a7:	89 75 cc             	mov    %esi,-0x34(%ebp)
   1c1aa:	75 64                	jne    1c210 <print_special.isra.8+0xc0>
   1c1ac:	c6 45 e4 20          	movb   $0x20,-0x1c(%ebp)
   1c1b0:	85 d2                	test   %edx,%edx
   1c1b2:	0f 84 f3 00 00 00    	je     1c2ab <print_special.isra.8+0x15b>
   1c1b8:	31 db                	xor    %ebx,%ebx
   1c1ba:	8d 75 e4             	lea    -0x1c(%ebp),%esi
   1c1bd:	eb 0b                	jmp    1c1ca <print_special.isra.8+0x7a>
   1c1bf:	90                   	nop
   1c1c0:	43                   	inc    %ebx
   1c1c1:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx
   1c1c4:	0f 84 de 00 00 00    	je     1c2a8 <print_special.isra.8+0x158>
   1c1ca:	8b 47 08             	mov    0x8(%edi),%eax
   1c1cd:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1c1d4:	00 
   1c1d5:	89 44 24 08          	mov    %eax,0x8(%esp)
   1c1d9:	89 34 24             	mov    %esi,(%esp)
   1c1dc:	ff 17                	call   *(%edi)
   1c1de:	85 c0                	test   %eax,%eax
   1c1e0:	79 de                	jns    1c1c0 <print_special.isra.8+0x70>
   1c1e2:	c7 45 d0 ff ff ff ff 	movl   $0xffffffff,-0x30(%ebp)
   1c1e9:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1c1ec:	83 c4 3c             	add    $0x3c,%esp
   1c1ef:	5b                   	pop    %ebx
   1c1f0:	5e                   	pop    %esi
   1c1f1:	5f                   	pop    %edi
   1c1f2:	5d                   	pop    %ebp
   1c1f3:	c3                   	ret    
   1c1f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c1f8:	c7 45 d0 b7 dc 02 00 	movl   $0x2dcb7,-0x30(%ebp)
   1c1ff:	84 c9                	test   %cl,%cl
   1c201:	74 88                	je     1c18b <print_special.isra.8+0x3b>
   1c203:	c7 45 d0 bb dc 02 00 	movl   $0x2dcbb,-0x30(%ebp)
   1c20a:	e9 7c ff ff ff       	jmp    1c18b <print_special.isra.8+0x3b>
   1c20f:	90                   	nop
   1c210:	31 db                	xor    %ebx,%ebx
   1c212:	84 c0                	test   %al,%al
   1c214:	74 1d                	je     1c233 <print_special.isra.8+0xe3>
   1c216:	8b 47 08             	mov    0x8(%edi),%eax
   1c219:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1c220:	00 
   1c221:	89 44 24 08          	mov    %eax,0x8(%esp)
   1c225:	8d 45 dc             	lea    -0x24(%ebp),%eax
   1c228:	89 04 24             	mov    %eax,(%esp)
   1c22b:	ff 17                	call   *(%edi)
   1c22d:	85 c0                	test   %eax,%eax
   1c22f:	78 b1                	js     1c1e2 <print_special.isra.8+0x92>
   1c231:	01 c3                	add    %eax,%ebx
   1c233:	8b 47 08             	mov    0x8(%edi),%eax
   1c236:	8b 55 d0             	mov    -0x30(%ebp),%edx
   1c239:	89 44 24 08          	mov    %eax,0x8(%esp)
   1c23d:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)
   1c244:	00 
   1c245:	89 14 24             	mov    %edx,(%esp)
   1c248:	ff 17                	call   *(%edi)
   1c24a:	85 c0                	test   %eax,%eax
   1c24c:	78 94                	js     1c1e2 <print_special.isra.8+0x92>
   1c24e:	01 d8                	add    %ebx,%eax
   1c250:	8b 4d cc             	mov    -0x34(%ebp),%ecx
   1c253:	89 45 d0             	mov    %eax,-0x30(%ebp)
   1c256:	85 c9                	test   %ecx,%ecx
   1c258:	74 92                	je     1c1ec <print_special.isra.8+0x9c>
   1c25a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1c25d:	c6 45 e0 20          	movb   $0x20,-0x20(%ebp)
   1c261:	85 d2                	test   %edx,%edx
   1c263:	74 7b                	je     1c2e0 <print_special.isra.8+0x190>
   1c265:	31 db                	xor    %ebx,%ebx
   1c267:	8d 75 e0             	lea    -0x20(%ebp),%esi
   1c26a:	eb 0a                	jmp    1c276 <print_special.isra.8+0x126>
   1c26c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c270:	43                   	inc    %ebx
   1c271:	3b 5d d4             	cmp    -0x2c(%ebp),%ebx
   1c274:	74 6a                	je     1c2e0 <print_special.isra.8+0x190>
   1c276:	8b 47 08             	mov    0x8(%edi),%eax
   1c279:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1c280:	00 
   1c281:	89 44 24 08          	mov    %eax,0x8(%esp)
   1c285:	89 34 24             	mov    %esi,(%esp)
   1c288:	ff 17                	call   *(%edi)
   1c28a:	85 c0                	test   %eax,%eax
   1c28c:	79 e2                	jns    1c270 <print_special.isra.8+0x120>
   1c28e:	e9 4f ff ff ff       	jmp    1c1e2 <print_special.isra.8+0x92>
   1c293:	90                   	nop
   1c294:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c298:	c7 45 d0 bf dc 02 00 	movl   $0x2dcbf,-0x30(%ebp)
   1c29f:	e9 e7 fe ff ff       	jmp    1c18b <print_special.isra.8+0x3b>
   1c2a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c2a8:	8a 45 dc             	mov    -0x24(%ebp),%al
   1c2ab:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
   1c2ae:	e9 5f ff ff ff       	jmp    1c212 <print_special.isra.8+0xc2>
   1c2b3:	90                   	nop
   1c2b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c2b8:	b0 2b                	mov    $0x2b,%al
   1c2ba:	f7 c6 20 00 00 00    	test   $0x20,%esi
   1c2c0:	0f 85 ab fe ff ff    	jne    1c171 <print_special.isra.8+0x21>
   1c2c6:	89 f0                	mov    %esi,%eax
   1c2c8:	83 e0 40             	and    $0x40,%eax
   1c2cb:	83 f8 01             	cmp    $0x1,%eax
   1c2ce:	19 c0                	sbb    %eax,%eax
   1c2d0:	83 f0 ff             	xor    $0xffffffff,%eax
   1c2d3:	83 e0 20             	and    $0x20,%eax
   1c2d6:	e9 96 fe ff ff       	jmp    1c171 <print_special.isra.8+0x21>
   1c2db:	90                   	nop
   1c2dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c2e0:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1c2e3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1c2e6:	01 d0                	add    %edx,%eax
   1c2e8:	89 45 d0             	mov    %eax,-0x30(%ebp)
   1c2eb:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1c2ee:	83 c4 3c             	add    $0x3c,%esp
   1c2f1:	5b                   	pop    %ebx
   1c2f2:	5e                   	pop    %esi
   1c2f3:	5f                   	pop    %edi
   1c2f4:	5d                   	pop    %ebp
   1c2f5:	c3                   	ret    
   1c2f6:	c7 44 24 08 53 02 00 	movl   $0x253,0x8(%esp)
   1c2fd:	00 
   1c2fe:	c7 44 24 04 83 dc 02 	movl   $0x2dc83,0x4(%esp)
   1c305:	00 
   1c306:	c7 04 24 c3 dc 02 00 	movl   $0x2dcc3,(%esp)
   1c30d:	e8 9e e5 00 00       	call   2a8b0 <assert_abort>
   1c312:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c319:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001c320 <print_double_scientific>:
   1c320:	55                   	push   %ebp
   1c321:	89 e5                	mov    %esp,%ebp
   1c323:	57                   	push   %edi
   1c324:	56                   	push   %esi
   1c325:	53                   	push   %ebx
   1c326:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
   1c32c:	89 cf                	mov    %ecx,%edi
   1c32e:	dd 45 08             	fldl   0x8(%ebp)
   1c331:	89 45 a4             	mov    %eax,-0x5c(%ebp)
   1c334:	89 55 9c             	mov    %edx,-0x64(%ebp)
   1c337:	f6 c1 10             	test   $0x10,%cl
   1c33a:	74 03                	je     1c33f <print_double_scientific+0x1f>
   1c33c:	83 e7 fb             	and    $0xfffffffb,%edi
   1c33f:	8d 45 bc             	lea    -0x44(%ebp),%eax
   1c342:	dd 5c 24 04          	fstpl  0x4(%esp)
   1c346:	89 04 24             	mov    %eax,(%esp)
   1c349:	e8 12 1b 00 00       	call   1de60 <extract_ieee_double>
   1c34e:	80 7d bc 00          	cmpb   $0x0,-0x44(%ebp)
   1c352:	50                   	push   %eax
   1c353:	8a 45 be             	mov    -0x42(%ebp),%al
   1c356:	0f 85 9c 01 00 00    	jne    1c4f8 <print_double_scientific+0x1d8>
   1c35c:	8d 55 d0             	lea    -0x30(%ebp),%edx
   1c35f:	8b 75 a4             	mov    -0x5c(%ebp),%esi
   1c362:	88 45 b8             	mov    %al,-0x48(%ebp)
   1c365:	89 55 ac             	mov    %edx,-0x54(%ebp)
   1c368:	8d 45 b4             	lea    -0x4c(%ebp),%eax
   1c36b:	85 f6                	test   %esi,%esi
   1c36d:	0f 88 3d 01 00 00    	js     1c4b0 <print_double_scientific+0x190>
   1c373:	89 44 24 24          	mov    %eax,0x24(%esp)
   1c377:	8b 45 a4             	mov    -0x5c(%ebp),%eax
   1c37a:	83 c0 02             	add    $0x2,%eax
   1c37d:	89 54 24 1c          	mov    %edx,0x1c(%esp)
   1c381:	89 44 24 14          	mov    %eax,0x14(%esp)
   1c385:	8b 45 bc             	mov    -0x44(%ebp),%eax
   1c388:	89 04 24             	mov    %eax,(%esp)
   1c38b:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1c38e:	89 44 24 04          	mov    %eax,0x4(%esp)
   1c392:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   1c395:	89 44 24 08          	mov    %eax,0x8(%esp)
   1c399:	8b 45 c8             	mov    -0x38(%ebp),%eax
   1c39c:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1c3a0:	8b 45 cc             	mov    -0x34(%ebp),%eax
   1c3a3:	c7 44 24 20 15 00 00 	movl   $0x15,0x20(%esp)
   1c3aa:	00 
   1c3ab:	c7 44 24 18 ff ff ff 	movl   $0xffffffff,0x18(%esp)
   1c3b2:	ff 
   1c3b3:	89 44 24 10          	mov    %eax,0x10(%esp)
   1c3b7:	89 55 98             	mov    %edx,-0x68(%ebp)
   1c3ba:	e8 b1 2b 00 00       	call   1ef70 <double_to_fixed_str>
   1c3bf:	8b 55 98             	mov    -0x68(%ebp),%edx
   1c3c2:	89 45 b0             	mov    %eax,-0x50(%ebp)
   1c3c5:	85 c0                	test   %eax,%eax
   1c3c7:	0f 8e 5e 01 00 00    	jle    1c52b <print_double_scientific+0x20b>
   1c3cd:	8d 48 ff             	lea    -0x1(%eax),%ecx
   1c3d0:	8b 5d b4             	mov    -0x4c(%ebp),%ebx
   1c3d3:	43                   	inc    %ebx
   1c3d4:	89 ce                	mov    %ecx,%esi
   1c3d6:	8d 04 0a             	lea    (%edx,%ecx,1),%eax
   1c3d9:	89 5d a0             	mov    %ebx,-0x60(%ebp)
   1c3dc:	89 5d b4             	mov    %ebx,-0x4c(%ebp)
   1c3df:	89 4d b0             	mov    %ecx,-0x50(%ebp)
   1c3e2:	8d 58 ff             	lea    -0x1(%eax),%ebx
   1c3e5:	80 38 34             	cmpb   $0x34,(%eax)
   1c3e8:	7e 56                	jle    1c440 <print_double_scientific+0x120>
   1c3ea:	39 d3                	cmp    %edx,%ebx
   1c3ec:	72 1c                	jb     1c40a <print_double_scientific+0xea>
   1c3ee:	80 78 ff 39          	cmpb   $0x39,-0x1(%eax)
   1c3f2:	75 64                	jne    1c458 <print_double_scientific+0x138>
   1c3f4:	8d 45 cf             	lea    -0x31(%ebp),%eax
   1c3f7:	eb 0c                	jmp    1c405 <print_double_scientific+0xe5>
   1c3f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c400:	80 3b 39             	cmpb   $0x39,(%ebx)
   1c403:	75 53                	jne    1c458 <print_double_scientific+0x138>
   1c405:	4b                   	dec    %ebx
   1c406:	39 c3                	cmp    %eax,%ebx
   1c408:	75 f6                	jne    1c400 <print_double_scientific+0xe0>
   1c40a:	8b 45 a0             	mov    -0x60(%ebp),%eax
   1c40d:	c6 45 d0 31          	movb   $0x31,-0x30(%ebp)
   1c411:	01 c8                	add    %ecx,%eax
   1c413:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
   1c41a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   1c41d:	8d 76 00             	lea    0x0(%esi),%esi
   1c420:	8b 55 10             	mov    0x10(%ebp),%edx
   1c423:	89 3c 24             	mov    %edi,(%esp)
   1c426:	89 54 24 04          	mov    %edx,0x4(%esp)
   1c42a:	8b 4d 9c             	mov    -0x64(%ebp),%ecx
   1c42d:	8b 55 a4             	mov    -0x5c(%ebp),%edx
   1c430:	8d 45 ac             	lea    -0x54(%ebp),%eax
   1c433:	e8 08 f4 ff ff       	call   1b840 <print_double_str_scient>
   1c438:	8d 65 f4             	lea    -0xc(%ebp),%esp
   1c43b:	5b                   	pop    %ebx
   1c43c:	5e                   	pop    %esi
   1c43d:	5f                   	pop    %edi
   1c43e:	5d                   	pop    %ebp
   1c43f:	c3                   	ret    
   1c440:	39 d3                	cmp    %edx,%ebx
   1c442:	73 2a                	jae    1c46e <print_double_scientific+0x14e>
   1c444:	c6 45 d0 30          	movb   $0x30,-0x30(%ebp)
   1c448:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
   1c44f:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
   1c456:	eb c8                	jmp    1c420 <print_double_scientific+0x100>
   1c458:	fe 03                	incb   (%ebx)
   1c45a:	29 d3                	sub    %edx,%ebx
   1c45c:	89 c8                	mov    %ecx,%eax
   1c45e:	8d 73 01             	lea    0x1(%ebx),%esi
   1c461:	29 f0                	sub    %esi,%eax
   1c463:	8b 5d a0             	mov    -0x60(%ebp),%ebx
   1c466:	01 d8                	add    %ebx,%eax
   1c468:	89 75 b0             	mov    %esi,-0x50(%ebp)
   1c46b:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   1c46e:	f7 c7 00 02 00 00    	test   $0x200,%edi
   1c474:	74 aa                	je     1c420 <print_double_scientific+0x100>
   1c476:	83 fe 01             	cmp    $0x1,%esi
   1c479:	7e a5                	jle    1c420 <print_double_scientific+0x100>
   1c47b:	80 7c 35 cf 30       	cmpb   $0x30,-0x31(%ebp,%esi,1)
   1c480:	75 9e                	jne    1c420 <print_double_scientific+0x100>
   1c482:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   1c485:	40                   	inc    %eax
   1c486:	eb 0c                	jmp    1c494 <print_double_scientific+0x174>
   1c488:	40                   	inc    %eax
   1c489:	80 7c 35 cf 30       	cmpb   $0x30,-0x31(%ebp,%esi,1)
   1c48e:	0f 85 8c 00 00 00    	jne    1c520 <print_double_scientific+0x200>
   1c494:	4e                   	dec    %esi
   1c495:	89 c2                	mov    %eax,%edx
   1c497:	83 fe 01             	cmp    $0x1,%esi
   1c49a:	75 ec                	jne    1c488 <print_double_scientific+0x168>
   1c49c:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
   1c4a3:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   1c4a6:	e9 75 ff ff ff       	jmp    1c420 <print_double_scientific+0x100>
   1c4ab:	90                   	nop
   1c4ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c4b0:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1c4b4:	8b 45 bc             	mov    -0x44(%ebp),%eax
   1c4b7:	89 04 24             	mov    %eax,(%esp)
   1c4ba:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1c4bd:	89 44 24 04          	mov    %eax,0x4(%esp)
   1c4c1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   1c4c4:	89 44 24 08          	mov    %eax,0x8(%esp)
   1c4c8:	8b 45 c8             	mov    -0x38(%ebp),%eax
   1c4cb:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1c4cf:	8b 45 cc             	mov    -0x34(%ebp),%eax
   1c4d2:	c7 44 24 18 15 00 00 	movl   $0x15,0x18(%esp)
   1c4d9:	00 
   1c4da:	89 54 24 14          	mov    %edx,0x14(%esp)
   1c4de:	89 44 24 10          	mov    %eax,0x10(%esp)
   1c4e2:	e8 69 1a 00 00       	call   1df50 <double_to_short_str>
   1c4e7:	89 45 b0             	mov    %eax,-0x50(%ebp)
   1c4ea:	48                   	dec    %eax
   1c4eb:	89 45 a4             	mov    %eax,-0x5c(%ebp)
   1c4ee:	e9 2d ff ff ff       	jmp    1c420 <print_double_scientific+0x100>
   1c4f3:	90                   	nop
   1c4f4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c4f8:	8b 55 10             	mov    0x10(%ebp),%edx
   1c4fb:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1c4ff:	89 54 24 08          	mov    %edx,0x8(%esp)
   1c503:	8b 55 9c             	mov    -0x64(%ebp),%edx
   1c506:	89 14 24             	mov    %edx,(%esp)
   1c509:	8a 4d bf             	mov    -0x41(%ebp),%cl
   1c50c:	88 c2                	mov    %al,%dl
   1c50e:	b0 01                	mov    $0x1,%al
   1c510:	e8 3b fc ff ff       	call   1c150 <print_special.isra.8>
   1c515:	8d 65 f4             	lea    -0xc(%ebp),%esp
   1c518:	5b                   	pop    %ebx
   1c519:	5e                   	pop    %esi
   1c51a:	5f                   	pop    %edi
   1c51b:	5d                   	pop    %ebp
   1c51c:	c3                   	ret    
   1c51d:	8d 76 00             	lea    0x0(%esi),%esi
   1c520:	89 75 b0             	mov    %esi,-0x50(%ebp)
   1c523:	89 55 b4             	mov    %edx,-0x4c(%ebp)
   1c526:	e9 f5 fe ff ff       	jmp    1c420 <print_double_scientific+0x100>
   1c52b:	c7 44 24 08 92 02 00 	movl   $0x292,0x8(%esp)
   1c532:	00 
   1c533:	c7 44 24 04 83 dc 02 	movl   $0x2dc83,0x4(%esp)
   1c53a:	00 
   1c53b:	c7 04 24 d2 dc 02 00 	movl   $0x2dcd2,(%esp)
   1c542:	e8 69 e3 00 00       	call   2a8b0 <assert_abort>
   1c547:	89 f6                	mov    %esi,%esi
   1c549:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0001c550 <print_double_fixed>:
   1c550:	55                   	push   %ebp
   1c551:	89 e5                	mov    %esp,%ebp
   1c553:	57                   	push   %edi
   1c554:	56                   	push   %esi
   1c555:	53                   	push   %ebx
   1c556:	81 ec 9c 00 00 00    	sub    $0x9c,%esp
   1c55c:	89 c7                	mov    %eax,%edi
   1c55e:	dd 45 08             	fldl   0x8(%ebp)
   1c561:	89 55 9c             	mov    %edx,-0x64(%ebp)
   1c564:	f6 c1 10             	test   $0x10,%cl
   1c567:	74 03                	je     1c56c <print_double_fixed+0x1c>
   1c569:	83 e1 fb             	and    $0xfffffffb,%ecx
   1c56c:	f6 c1 01             	test   $0x1,%cl
   1c56f:	74 03                	je     1c574 <print_double_fixed+0x24>
   1c571:	80 e5 fd             	and    $0xfd,%ch
   1c574:	8d 45 bc             	lea    -0x44(%ebp),%eax
   1c577:	89 4d 98             	mov    %ecx,-0x68(%ebp)
   1c57a:	dd 5c 24 04          	fstpl  0x4(%esp)
   1c57e:	89 04 24             	mov    %eax,(%esp)
   1c581:	e8 da 18 00 00       	call   1de60 <extract_ieee_double>
   1c586:	8a 45 be             	mov    -0x42(%ebp),%al
   1c589:	80 7d bc 00          	cmpb   $0x0,-0x44(%ebp)
   1c58d:	56                   	push   %esi
   1c58e:	8b 4d 98             	mov    -0x68(%ebp),%ecx
   1c591:	0f 85 a9 01 00 00    	jne    1c740 <print_double_fixed+0x1f0>
   1c597:	8d 55 d0             	lea    -0x30(%ebp),%edx
   1c59a:	88 45 b8             	mov    %al,-0x48(%ebp)
   1c59d:	89 55 ac             	mov    %edx,-0x54(%ebp)
   1c5a0:	8d 45 b4             	lea    -0x4c(%ebp),%eax
   1c5a3:	85 ff                	test   %edi,%edi
   1c5a5:	0f 88 3d 01 00 00    	js     1c6e8 <print_double_fixed+0x198>
   1c5ab:	89 44 24 24          	mov    %eax,0x24(%esp)
   1c5af:	8d 47 01             	lea    0x1(%edi),%eax
   1c5b2:	89 44 24 18          	mov    %eax,0x18(%esp)
   1c5b6:	8b 45 bc             	mov    -0x44(%ebp),%eax
   1c5b9:	89 04 24             	mov    %eax,(%esp)
   1c5bc:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1c5bf:	89 44 24 04          	mov    %eax,0x4(%esp)
   1c5c3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   1c5c6:	89 44 24 08          	mov    %eax,0x8(%esp)
   1c5ca:	8b 45 c8             	mov    -0x38(%ebp),%eax
   1c5cd:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1c5d1:	8b 45 cc             	mov    -0x34(%ebp),%eax
   1c5d4:	89 54 24 1c          	mov    %edx,0x1c(%esp)
   1c5d8:	c7 44 24 20 15 00 00 	movl   $0x15,0x20(%esp)
   1c5df:	00 
   1c5e0:	c7 44 24 14 ff ff ff 	movl   $0xffffffff,0x14(%esp)
   1c5e7:	ff 
   1c5e8:	89 44 24 10          	mov    %eax,0x10(%esp)
   1c5ec:	89 55 94             	mov    %edx,-0x6c(%ebp)
   1c5ef:	89 4d 98             	mov    %ecx,-0x68(%ebp)
   1c5f2:	e8 79 29 00 00       	call   1ef70 <double_to_fixed_str>
   1c5f7:	8b 55 94             	mov    -0x6c(%ebp),%edx
   1c5fa:	89 45 b0             	mov    %eax,-0x50(%ebp)
   1c5fd:	85 c0                	test   %eax,%eax
   1c5ff:	8b 4d 98             	mov    -0x68(%ebp),%ecx
   1c602:	0f 8e 6b 01 00 00    	jle    1c773 <print_double_fixed+0x223>
   1c608:	48                   	dec    %eax
   1c609:	8b 5d b4             	mov    -0x4c(%ebp),%ebx
   1c60c:	89 45 a4             	mov    %eax,-0x5c(%ebp)
   1c60f:	01 d0                	add    %edx,%eax
   1c611:	43                   	inc    %ebx
   1c612:	8b 75 a4             	mov    -0x5c(%ebp),%esi
   1c615:	89 5d a0             	mov    %ebx,-0x60(%ebp)
   1c618:	89 5d b4             	mov    %ebx,-0x4c(%ebp)
   1c61b:	89 75 b0             	mov    %esi,-0x50(%ebp)
   1c61e:	8d 58 ff             	lea    -0x1(%eax),%ebx
   1c621:	80 38 34             	cmpb   $0x34,(%eax)
   1c624:	7e 52                	jle    1c678 <print_double_fixed+0x128>
   1c626:	39 d3                	cmp    %edx,%ebx
   1c628:	72 18                	jb     1c642 <print_double_fixed+0xf2>
   1c62a:	80 78 ff 39          	cmpb   $0x39,-0x1(%eax)
   1c62e:	75 60                	jne    1c690 <print_double_fixed+0x140>
   1c630:	8d 45 cf             	lea    -0x31(%ebp),%eax
   1c633:	eb 08                	jmp    1c63d <print_double_fixed+0xed>
   1c635:	8d 76 00             	lea    0x0(%esi),%esi
   1c638:	80 3b 39             	cmpb   $0x39,(%ebx)
   1c63b:	75 53                	jne    1c690 <print_double_fixed+0x140>
   1c63d:	4b                   	dec    %ebx
   1c63e:	39 c3                	cmp    %eax,%ebx
   1c640:	75 f6                	jne    1c638 <print_double_fixed+0xe8>
   1c642:	8b 45 a4             	mov    -0x5c(%ebp),%eax
   1c645:	8b 55 a0             	mov    -0x60(%ebp),%edx
   1c648:	01 d0                	add    %edx,%eax
   1c64a:	c6 45 d0 31          	movb   $0x31,-0x30(%ebp)
   1c64e:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   1c651:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
   1c658:	8b 55 10             	mov    0x10(%ebp),%edx
   1c65b:	89 0c 24             	mov    %ecx,(%esp)
   1c65e:	89 54 24 04          	mov    %edx,0x4(%esp)
   1c662:	8b 4d 9c             	mov    -0x64(%ebp),%ecx
   1c665:	89 fa                	mov    %edi,%edx
   1c667:	8d 45 ac             	lea    -0x54(%ebp),%eax
   1c66a:	e8 31 f6 ff ff       	call   1bca0 <print_double_str_fixed>
   1c66f:	8d 65 f4             	lea    -0xc(%ebp),%esp
   1c672:	5b                   	pop    %ebx
   1c673:	5e                   	pop    %esi
   1c674:	5f                   	pop    %edi
   1c675:	5d                   	pop    %ebp
   1c676:	c3                   	ret    
   1c677:	90                   	nop
   1c678:	39 d3                	cmp    %edx,%ebx
   1c67a:	73 2b                	jae    1c6a7 <print_double_fixed+0x157>
   1c67c:	c6 45 d0 30          	movb   $0x30,-0x30(%ebp)
   1c680:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
   1c687:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
   1c68e:	eb c8                	jmp    1c658 <print_double_fixed+0x108>
   1c690:	fe 03                	incb   (%ebx)
   1c692:	29 d3                	sub    %edx,%ebx
   1c694:	8b 45 a4             	mov    -0x5c(%ebp),%eax
   1c697:	8d 73 01             	lea    0x1(%ebx),%esi
   1c69a:	29 f0                	sub    %esi,%eax
   1c69c:	8b 5d a0             	mov    -0x60(%ebp),%ebx
   1c69f:	01 d8                	add    %ebx,%eax
   1c6a1:	89 75 b0             	mov    %esi,-0x50(%ebp)
   1c6a4:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   1c6a7:	f6 c5 02             	test   $0x2,%ch
   1c6aa:	74 ac                	je     1c658 <print_double_fixed+0x108>
   1c6ac:	83 fe 01             	cmp    $0x1,%esi
   1c6af:	7e a7                	jle    1c658 <print_double_fixed+0x108>
   1c6b1:	80 7c 35 cf 30       	cmpb   $0x30,-0x31(%ebp,%esi,1)
   1c6b6:	75 a0                	jne    1c658 <print_double_fixed+0x108>
   1c6b8:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   1c6bb:	40                   	inc    %eax
   1c6bc:	eb 0e                	jmp    1c6cc <print_double_fixed+0x17c>
   1c6be:	66 90                	xchg   %ax,%ax
   1c6c0:	40                   	inc    %eax
   1c6c1:	80 7c 35 cf 30       	cmpb   $0x30,-0x31(%ebp,%esi,1)
   1c6c6:	0f 85 9c 00 00 00    	jne    1c768 <print_double_fixed+0x218>
   1c6cc:	4e                   	dec    %esi
   1c6cd:	89 c2                	mov    %eax,%edx
   1c6cf:	83 fe 01             	cmp    $0x1,%esi
   1c6d2:	75 ec                	jne    1c6c0 <print_double_fixed+0x170>
   1c6d4:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)
   1c6db:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   1c6de:	e9 75 ff ff ff       	jmp    1c658 <print_double_fixed+0x108>
   1c6e3:	90                   	nop
   1c6e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c6e8:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1c6ec:	8b 45 bc             	mov    -0x44(%ebp),%eax
   1c6ef:	89 04 24             	mov    %eax,(%esp)
   1c6f2:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1c6f5:	89 44 24 04          	mov    %eax,0x4(%esp)
   1c6f9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   1c6fc:	89 44 24 08          	mov    %eax,0x8(%esp)
   1c700:	8b 45 c8             	mov    -0x38(%ebp),%eax
   1c703:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1c707:	8b 45 cc             	mov    -0x34(%ebp),%eax
   1c70a:	c7 44 24 18 15 00 00 	movl   $0x15,0x18(%esp)
   1c711:	00 
   1c712:	89 54 24 14          	mov    %edx,0x14(%esp)
   1c716:	89 44 24 10          	mov    %eax,0x10(%esp)
   1c71a:	89 4d 98             	mov    %ecx,-0x68(%ebp)
   1c71d:	e8 2e 18 00 00       	call   1df50 <double_to_short_str>
   1c722:	8b 7d b4             	mov    -0x4c(%ebp),%edi
   1c725:	f7 df                	neg    %edi
   1c727:	89 45 b0             	mov    %eax,-0x50(%ebp)
   1c72a:	89 f8                	mov    %edi,%eax
   1c72c:	83 f0 ff             	xor    $0xffffffff,%eax
   1c72f:	8b 4d 98             	mov    -0x68(%ebp),%ecx
   1c732:	c1 f8 1f             	sar    $0x1f,%eax
   1c735:	21 c7                	and    %eax,%edi
   1c737:	e9 1c ff ff ff       	jmp    1c658 <print_double_fixed+0x108>
   1c73c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c740:	8b 55 10             	mov    0x10(%ebp),%edx
   1c743:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1c747:	89 54 24 08          	mov    %edx,0x8(%esp)
   1c74b:	8b 55 9c             	mov    -0x64(%ebp),%edx
   1c74e:	89 14 24             	mov    %edx,(%esp)
   1c751:	8a 4d bf             	mov    -0x41(%ebp),%cl
   1c754:	88 c2                	mov    %al,%dl
   1c756:	b0 01                	mov    $0x1,%al
   1c758:	e8 f3 f9 ff ff       	call   1c150 <print_special.isra.8>
   1c75d:	8d 65 f4             	lea    -0xc(%ebp),%esp
   1c760:	5b                   	pop    %ebx
   1c761:	5e                   	pop    %esi
   1c762:	5f                   	pop    %edi
   1c763:	5d                   	pop    %ebp
   1c764:	c3                   	ret    
   1c765:	8d 76 00             	lea    0x0(%esi),%esi
   1c768:	89 75 b0             	mov    %esi,-0x50(%ebp)
   1c76b:	89 55 b4             	mov    %edx,-0x4c(%ebp)
   1c76e:	e9 e5 fe ff ff       	jmp    1c658 <print_double_fixed+0x108>
   1c773:	c7 44 24 08 92 02 00 	movl   $0x292,0x8(%esp)
   1c77a:	00 
   1c77b:	c7 44 24 04 83 dc 02 	movl   $0x2dc83,0x4(%esp)
   1c782:	00 
   1c783:	c7 04 24 d2 dc 02 00 	movl   $0x2dcd2,(%esp)
   1c78a:	e8 21 e1 00 00       	call   2a8b0 <assert_abort>
   1c78f:	90                   	nop

0001c790 <printf_core>:
   1c790:	55                   	push   %ebp
   1c791:	89 e5                	mov    %esp,%ebp
   1c793:	57                   	push   %edi
   1c794:	56                   	push   %esi
   1c795:	53                   	push   %ebx
   1c796:	81 ec 1c 01 00 00    	sub    $0x11c,%esp
   1c79c:	31 f6                	xor    %esi,%esi
   1c79e:	8b 7d 0c             	mov    0xc(%ebp),%edi
   1c7a1:	c7 85 70 ff ff ff 00 	movl   $0x0,-0x90(%ebp)
   1c7a8:	00 00 00 
   1c7ab:	c7 85 50 ff ff ff 00 	movl   $0x0,-0xb0(%ebp)
   1c7b2:	00 00 00 
   1c7b5:	c7 85 38 ff ff ff 00 	movl   $0x0,-0xc8(%ebp)
   1c7bc:	00 00 00 
   1c7bf:	eb 13                	jmp    1c7d4 <printf_core+0x44>
   1c7c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1c7c8:	8b 95 70 ff ff ff    	mov    -0x90(%ebp),%edx
   1c7ce:	89 95 50 ff ff ff    	mov    %edx,-0xb0(%ebp)
   1c7d4:	8d 8d 70 ff ff ff    	lea    -0x90(%ebp),%ecx
   1c7da:	8b 45 08             	mov    0x8(%ebp),%eax
   1c7dd:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1c7e4:	ff 
   1c7e5:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1c7e9:	89 04 24             	mov    %eax,(%esp)
   1c7ec:	e8 bf 73 ff ff       	call   13bb0 <str_decode>
   1c7f1:	85 c0                	test   %eax,%eax
   1c7f3:	0f 84 a7 01 00 00    	je     1c9a0 <printf_core+0x210>
   1c7f9:	83 f8 25             	cmp    $0x25,%eax
   1c7fc:	75 ca                	jne    1c7c8 <printf_core+0x38>
   1c7fe:	3b b5 50 ff ff ff    	cmp    -0xb0(%ebp),%esi
   1c804:	0f 82 b6 01 00 00    	jb     1c9c0 <printf_core+0x230>
   1c80a:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%ebp)
   1c811:	00 00 00 
   1c814:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c818:	8d 8d 70 ff ff ff    	lea    -0x90(%ebp),%ecx
   1c81e:	8b 45 08             	mov    0x8(%ebp),%eax
   1c821:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1c828:	ff 
   1c829:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1c82d:	89 04 24             	mov    %eax,(%esp)
   1c830:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1c836:	e8 75 73 ff ff       	call   13bb0 <str_decode>
   1c83b:	8d 50 e0             	lea    -0x20(%eax),%edx
   1c83e:	83 fa 10             	cmp    $0x10,%edx
   1c841:	0f 86 a9 00 00 00    	jbe    1c8f0 <printf_core+0x160>
   1c847:	8d 50 d0             	lea    -0x30(%eax),%edx
   1c84a:	31 db                	xor    %ebx,%ebx
   1c84c:	83 fa 09             	cmp    $0x9,%edx
   1c84f:	0f 87 f3 00 00 00    	ja     1c948 <printf_core+0x1b8>
   1c855:	89 bd 4c ff ff ff    	mov    %edi,-0xb4(%ebp)
   1c85b:	8b 75 08             	mov    0x8(%ebp),%esi
   1c85e:	89 df                	mov    %ebx,%edi
   1c860:	8d 04 bf             	lea    (%edi,%edi,4),%eax
   1c863:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1c86a:	ff 
   1c86b:	89 34 24             	mov    %esi,(%esp)
   1c86e:	8b 9d 70 ff ff ff    	mov    -0x90(%ebp),%ebx
   1c874:	8d 3c 42             	lea    (%edx,%eax,2),%edi
   1c877:	8d 95 70 ff ff ff    	lea    -0x90(%ebp),%edx
   1c87d:	89 54 24 04          	mov    %edx,0x4(%esp)
   1c881:	e8 2a 73 ff ff       	call   13bb0 <str_decode>
   1c886:	85 c0                	test   %eax,%eax
   1c888:	0f 84 42 07 00 00    	je     1cfd0 <printf_core+0x840>
   1c88e:	8d 50 d0             	lea    -0x30(%eax),%edx
   1c891:	83 fa 09             	cmp    $0x9,%edx
   1c894:	76 ca                	jbe    1c860 <printf_core+0xd0>
   1c896:	89 de                	mov    %ebx,%esi
   1c898:	89 fb                	mov    %edi,%ebx
   1c89a:	8b bd 4c ff ff ff    	mov    -0xb4(%ebp),%edi
   1c8a0:	c7 85 3c ff ff ff ff 	movl   $0xffffffff,-0xc4(%ebp)
   1c8a7:	ff ff ff 
   1c8aa:	83 f8 2e             	cmp    $0x2e,%eax
   1c8ad:	0f 84 2d 07 00 00    	je     1cfe0 <printf_core+0x850>
   1c8b3:	83 f8 6c             	cmp    $0x6c,%eax
   1c8b6:	0f 84 cc 01 00 00    	je     1ca88 <printf_core+0x2f8>
   1c8bc:	83 f8 7a             	cmp    $0x7a,%eax
   1c8bf:	0f 84 93 01 00 00    	je     1ca58 <printf_core+0x2c8>
   1c8c5:	b9 02 00 00 00       	mov    $0x2,%ecx
   1c8ca:	83 f8 68             	cmp    $0x68,%eax
   1c8cd:	0f 84 25 01 00 00    	je     1c9f8 <printf_core+0x268>
   1c8d3:	8d 50 db             	lea    -0x25(%eax),%edx
   1c8d6:	83 fa 53             	cmp    $0x53,%edx
   1c8d9:	0f 86 b9 00 00 00    	jbe    1c998 <printf_core+0x208>
   1c8df:	8b b5 50 ff ff ff    	mov    -0xb0(%ebp),%esi
   1c8e5:	e9 de fe ff ff       	jmp    1c7c8 <printf_core+0x38>
   1c8ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1c8f0:	ff 24 95 30 dd 02 00 	jmp    *0x2dd30(,%edx,4)
   1c8f7:	90                   	nop
   1c8f8:	83 8d 54 ff ff ff 04 	orl    $0x4,-0xac(%ebp)
   1c8ff:	e9 14 ff ff ff       	jmp    1c818 <printf_core+0x88>
   1c904:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c908:	83 8d 54 ff ff ff 10 	orl    $0x10,-0xac(%ebp)
   1c90f:	e9 04 ff ff ff       	jmp    1c818 <printf_core+0x88>
   1c914:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c918:	83 8d 54 ff ff ff 20 	orl    $0x20,-0xac(%ebp)
   1c91f:	e9 f4 fe ff ff       	jmp    1c818 <printf_core+0x88>
   1c924:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c928:	83 8d 54 ff ff ff 01 	orl    $0x1,-0xac(%ebp)
   1c92f:	e9 e4 fe ff ff       	jmp    1c818 <printf_core+0x88>
   1c934:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c938:	83 8d 54 ff ff ff 40 	orl    $0x40,-0xac(%ebp)
   1c93f:	e9 d4 fe ff ff       	jmp    1c818 <printf_core+0x88>
   1c944:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1c948:	83 f8 2a             	cmp    $0x2a,%eax
   1c94b:	0f 85 4f ff ff ff    	jne    1c8a0 <printf_core+0x110>
   1c951:	8d 8d 70 ff ff ff    	lea    -0x90(%ebp),%ecx
   1c957:	8b 45 08             	mov    0x8(%ebp),%eax
   1c95a:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1c95e:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1c965:	ff 
   1c966:	89 04 24             	mov    %eax,(%esp)
   1c969:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1c96f:	e8 3c 72 ff ff       	call   13bb0 <str_decode>
   1c974:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1c977:	8b 19                	mov    (%ecx),%ebx
   1c979:	83 c1 04             	add    $0x4,%ecx
   1c97c:	89 4d 10             	mov    %ecx,0x10(%ebp)
   1c97f:	85 db                	test   %ebx,%ebx
   1c981:	0f 89 19 ff ff ff    	jns    1c8a0 <printf_core+0x110>
   1c987:	f7 db                	neg    %ebx
   1c989:	83 8d 54 ff ff ff 10 	orl    $0x10,-0xac(%ebp)
   1c990:	e9 0b ff ff ff       	jmp    1c8a0 <printf_core+0x110>
   1c995:	8d 76 00             	lea    0x0(%esi),%esi
   1c998:	ff 24 95 74 dd 02 00 	jmp    *0x2dd74(,%edx,4)
   1c99f:	90                   	nop
   1c9a0:	39 b5 50 ff ff ff    	cmp    %esi,-0xb0(%ebp)
   1c9a6:	0f 87 3c 01 00 00    	ja     1cae8 <printf_core+0x358>
   1c9ac:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
   1c9b2:	8d 65 f4             	lea    -0xc(%ebp),%esp
   1c9b5:	5b                   	pop    %ebx
   1c9b6:	5e                   	pop    %esi
   1c9b7:	5f                   	pop    %edi
   1c9b8:	5d                   	pop    %ebp
   1c9b9:	c3                   	ret    
   1c9ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1c9c0:	8b 47 08             	mov    0x8(%edi),%eax
   1c9c3:	8b 4d 08             	mov    0x8(%ebp),%ecx
   1c9c6:	89 44 24 08          	mov    %eax,0x8(%esp)
   1c9ca:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
   1c9d0:	29 f0                	sub    %esi,%eax
   1c9d2:	01 ce                	add    %ecx,%esi
   1c9d4:	89 44 24 04          	mov    %eax,0x4(%esp)
   1c9d8:	89 34 24             	mov    %esi,(%esp)
   1c9db:	ff 17                	call   *(%edi)
   1c9dd:	85 c0                	test   %eax,%eax
   1c9df:	0f 88 6d 0d 00 00    	js     1d752 <printf_core+0xfc2>
   1c9e5:	8b 95 38 ff ff ff    	mov    -0xc8(%ebp),%edx
   1c9eb:	01 c2                	add    %eax,%edx
   1c9ed:	89 95 38 ff ff ff    	mov    %edx,-0xc8(%ebp)
   1c9f3:	e9 12 fe ff ff       	jmp    1c80a <printf_core+0x7a>
   1c9f8:	8d 85 70 ff ff ff    	lea    -0x90(%ebp),%eax
   1c9fe:	8b 55 08             	mov    0x8(%ebp),%edx
   1ca01:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1ca08:	ff 
   1ca09:	89 44 24 04          	mov    %eax,0x4(%esp)
   1ca0d:	89 14 24             	mov    %edx,(%esp)
   1ca10:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1ca16:	e8 95 71 ff ff       	call   13bb0 <str_decode>
   1ca1b:	b9 01 00 00 00       	mov    $0x1,%ecx
   1ca20:	83 f8 68             	cmp    $0x68,%eax
   1ca23:	0f 85 aa fe ff ff    	jne    1c8d3 <printf_core+0x143>
   1ca29:	8d 8d 70 ff ff ff    	lea    -0x90(%ebp),%ecx
   1ca2f:	8b 45 08             	mov    0x8(%ebp),%eax
   1ca32:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1ca36:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1ca3d:	ff 
   1ca3e:	89 04 24             	mov    %eax,(%esp)
   1ca41:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1ca47:	e8 64 71 ff ff       	call   13bb0 <str_decode>
   1ca4c:	31 c9                	xor    %ecx,%ecx
   1ca4e:	e9 80 fe ff ff       	jmp    1c8d3 <printf_core+0x143>
   1ca53:	90                   	nop
   1ca54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ca58:	8d 8d 70 ff ff ff    	lea    -0x90(%ebp),%ecx
   1ca5e:	8b 45 08             	mov    0x8(%ebp),%eax
   1ca61:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1ca65:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1ca6c:	ff 
   1ca6d:	89 04 24             	mov    %eax,(%esp)
   1ca70:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1ca76:	e8 35 71 ff ff       	call   13bb0 <str_decode>
   1ca7b:	b9 06 00 00 00       	mov    $0x6,%ecx
   1ca80:	e9 4e fe ff ff       	jmp    1c8d3 <printf_core+0x143>
   1ca85:	8d 76 00             	lea    0x0(%esi),%esi
   1ca88:	8b 4d 08             	mov    0x8(%ebp),%ecx
   1ca8b:	8d 95 70 ff ff ff    	lea    -0x90(%ebp),%edx
   1ca91:	89 0c 24             	mov    %ecx,(%esp)
   1ca94:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1ca9b:	ff 
   1ca9c:	89 54 24 04          	mov    %edx,0x4(%esp)
   1caa0:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1caa6:	e8 05 71 ff ff       	call   13bb0 <str_decode>
   1caab:	b9 03 00 00 00       	mov    $0x3,%ecx
   1cab0:	83 f8 6c             	cmp    $0x6c,%eax
   1cab3:	0f 85 1a fe ff ff    	jne    1c8d3 <printf_core+0x143>
   1cab9:	8d 85 70 ff ff ff    	lea    -0x90(%ebp),%eax
   1cabf:	8b 55 08             	mov    0x8(%ebp),%edx
   1cac2:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1cac9:	ff 
   1caca:	89 44 24 04          	mov    %eax,0x4(%esp)
   1cace:	89 14 24             	mov    %edx,(%esp)
   1cad1:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1cad7:	e8 d4 70 ff ff       	call   13bb0 <str_decode>
   1cadc:	b9 04 00 00 00       	mov    $0x4,%ecx
   1cae1:	e9 ed fd ff ff       	jmp    1c8d3 <printf_core+0x143>
   1cae6:	66 90                	xchg   %ax,%ax
   1cae8:	8b 47 08             	mov    0x8(%edi),%eax
   1caeb:	89 44 24 08          	mov    %eax,0x8(%esp)
   1caef:	8b 85 50 ff ff ff    	mov    -0xb0(%ebp),%eax
   1caf5:	29 f0                	sub    %esi,%eax
   1caf7:	89 44 24 04          	mov    %eax,0x4(%esp)
   1cafb:	8b 45 08             	mov    0x8(%ebp),%eax
   1cafe:	01 c6                	add    %eax,%esi
   1cb00:	89 34 24             	mov    %esi,(%esp)
   1cb03:	ff 17                	call   *(%edi)
   1cb05:	85 c0                	test   %eax,%eax
   1cb07:	0f 88 45 0c 00 00    	js     1d752 <printf_core+0xfc2>
   1cb0d:	8b bd 38 ff ff ff    	mov    -0xc8(%ebp),%edi
   1cb13:	01 c7                	add    %eax,%edi
   1cb15:	89 bd 38 ff ff ff    	mov    %edi,-0xc8(%ebp)
   1cb1b:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
   1cb21:	8d 65 f4             	lea    -0xc(%ebp),%esp
   1cb24:	5b                   	pop    %ebx
   1cb25:	5e                   	pop    %esi
   1cb26:	5f                   	pop    %edi
   1cb27:	5d                   	pop    %ebp
   1cb28:	c3                   	ret    
   1cb29:	81 8d 54 ff ff ff 80 	orl    $0x80,-0xac(%ebp)
   1cb30:	00 00 00 
   1cb33:	83 8d 54 ff ff ff 05 	orl    $0x5,-0xac(%ebp)
   1cb3a:	c7 85 30 ff ff ff 10 	movl   $0x10,-0xd0(%ebp)
   1cb41:	00 00 00 
   1cb44:	c7 85 48 ff ff ff 10 	movl   $0x10,-0xb8(%ebp)
   1cb4b:	00 00 00 
   1cb4e:	8b 55 10             	mov    0x10(%ebp),%edx
   1cb51:	8b 75 10             	mov    0x10(%ebp),%esi
   1cb54:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1cb5a:	83 c6 04             	add    $0x4,%esi
   1cb5d:	8b 02                	mov    (%edx),%eax
   1cb5f:	83 e1 02             	and    $0x2,%ecx
   1cb62:	31 d2                	xor    %edx,%edx
   1cb64:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
   1cb6a:	89 95 44 ff ff ff    	mov    %edx,-0xbc(%ebp)
   1cb70:	89 8d 34 ff ff ff    	mov    %ecx,-0xcc(%ebp)
   1cb76:	89 75 10             	mov    %esi,0x10(%ebp)
   1cb79:	c7 85 3c ff ff ff 08 	movl   $0x8,-0xc4(%ebp)
   1cb80:	00 00 00 
   1cb83:	90                   	nop
   1cb84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1cb88:	be ed dc 02 00       	mov    $0x2dced,%esi
   1cb8d:	f6 85 54 ff ff ff 80 	testb  $0x80,-0xac(%ebp)
   1cb94:	74 05                	je     1cb9b <printf_core+0x40b>
   1cb96:	be dc dc 02 00       	mov    $0x2dcdc,%esi
   1cb9b:	8b 85 44 ff ff ff    	mov    -0xbc(%ebp),%eax
   1cba1:	c6 45 e4 00          	movb   $0x0,-0x1c(%ebp)
   1cba5:	0b 85 40 ff ff ff    	or     -0xc0(%ebp),%eax
   1cbab:	0f 85 f7 02 00 00    	jne    1cea8 <printf_core+0x718>
   1cbb1:	8d 4d e2             	lea    -0x1e(%ebp),%ecx
   1cbb4:	c6 45 e3 30          	movb   $0x30,-0x1d(%ebp)
   1cbb8:	c7 85 4c ff ff ff 01 	movl   $0x1,-0xb4(%ebp)
   1cbbf:	00 00 00 
   1cbc2:	89 8d 50 ff ff ff    	mov    %ecx,-0xb0(%ebp)
   1cbc8:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1cbce:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
   1cbd4:	83 e1 01             	and    $0x1,%ecx
   1cbd7:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%ebp)
   1cbdd:	74 31                	je     1cc10 <printf_core+0x480>
   1cbdf:	83 bd 30 ff ff ff 08 	cmpl   $0x8,-0xd0(%ebp)
   1cbe6:	0f 84 14 09 00 00    	je     1d500 <printf_core+0xd70>
   1cbec:	83 bd 30 ff ff ff 10 	cmpl   $0x10,-0xd0(%ebp)
   1cbf3:	0f 84 84 04 00 00    	je     1d07d <printf_core+0x8ed>
   1cbf9:	83 bd 30 ff ff ff 02 	cmpl   $0x2,-0xd0(%ebp)
   1cc00:	0f 84 7d 04 00 00    	je     1d083 <printf_core+0x8f3>
   1cc06:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
   1cc0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1cc10:	8b 95 34 ff ff ff    	mov    -0xcc(%ebp),%edx
   1cc16:	85 d2                	test   %edx,%edx
   1cc18:	0f 84 72 02 00 00    	je     1ce90 <printf_core+0x700>
   1cc1e:	f7 85 54 ff ff ff 00 	testl  $0x100,-0xac(%ebp)
   1cc25:	01 00 00 
   1cc28:	0f 84 62 04 00 00    	je     1d090 <printf_core+0x900>
   1cc2e:	40                   	inc    %eax
   1cc2f:	c7 85 2c ff ff ff 2d 	movl   $0x2d,-0xd4(%ebp)
   1cc36:	00 00 00 
   1cc39:	c6 85 34 ff ff ff 2d 	movb   $0x2d,-0xcc(%ebp)
   1cc40:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1cc46:	31 d2                	xor    %edx,%edx
   1cc48:	83 e1 10             	and    $0x10,%ecx
   1cc4b:	74 20                	je     1cc6d <printf_core+0x4dd>
   1cc4d:	8b b5 54 ff ff ff    	mov    -0xac(%ebp),%esi
   1cc53:	89 ca                	mov    %ecx,%edx
   1cc55:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1cc5b:	83 e6 fb             	and    $0xfffffffb,%esi
   1cc5e:	83 e1 01             	and    $0x1,%ecx
   1cc61:	89 b5 54 ff ff ff    	mov    %esi,-0xac(%ebp)
   1cc67:	89 8d 40 ff ff ff    	mov    %ecx,-0xc0(%ebp)
   1cc6d:	f6 85 54 ff ff ff 04 	testb  $0x4,-0xac(%ebp)
   1cc74:	74 12                	je     1cc88 <printf_core+0x4f8>
   1cc76:	39 c3                	cmp    %eax,%ebx
   1cc78:	7e 0e                	jle    1cc88 <printf_core+0x4f8>
   1cc7a:	8b 8d 3c ff ff ff    	mov    -0xc4(%ebp),%ecx
   1cc80:	85 c9                	test   %ecx,%ecx
   1cc82:	0f 84 28 01 00 00    	je     1cdb0 <printf_core+0x620>
   1cc88:	8b b5 4c ff ff ff    	mov    -0xb4(%ebp),%esi
   1cc8e:	39 b5 3c ff ff ff    	cmp    %esi,-0xc4(%ebp)
   1cc94:	7d 06                	jge    1cc9c <printf_core+0x50c>
   1cc96:	89 b5 3c ff ff ff    	mov    %esi,-0xc4(%ebp)
   1cc9c:	8b b5 3c ff ff ff    	mov    -0xc4(%ebp),%esi
   1cca2:	8b 8d 4c ff ff ff    	mov    -0xb4(%ebp),%ecx
   1cca8:	01 f0                	add    %esi,%eax
   1ccaa:	31 f6                	xor    %esi,%esi
   1ccac:	29 c1                	sub    %eax,%ecx
   1ccae:	89 c8                	mov    %ecx,%eax
   1ccb0:	01 d8                	add    %ebx,%eax
   1ccb2:	85 d2                	test   %edx,%edx
   1ccb4:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
   1ccba:	89 c3                	mov    %eax,%ebx
   1ccbc:	0f 84 b5 00 00 00    	je     1cd77 <printf_core+0x5e7>
   1ccc2:	80 bd 34 ff ff ff 00 	cmpb   $0x0,-0xcc(%ebp)
   1ccc9:	0f 85 b1 02 00 00    	jne    1cf80 <printf_core+0x7f0>
   1cccf:	8b 85 40 ff ff ff    	mov    -0xc0(%ebp),%eax
   1ccd5:	85 c0                	test   %eax,%eax
   1ccd7:	74 27                	je     1cd00 <printf_core+0x570>
   1ccd9:	83 bd 30 ff ff ff 08 	cmpl   $0x8,-0xd0(%ebp)
   1cce0:	0f 84 4a 09 00 00    	je     1d630 <printf_core+0xea0>
   1cce6:	83 bd 30 ff ff ff 10 	cmpl   $0x10,-0xd0(%ebp)
   1cced:	0f 84 a0 08 00 00    	je     1d593 <printf_core+0xe03>
   1ccf3:	83 bd 30 ff ff ff 02 	cmpl   $0x2,-0xd0(%ebp)
   1ccfa:	0f 84 0c 08 00 00    	je     1d50c <printf_core+0xd7c>
   1cd00:	8b 9d 3c ff ff ff    	mov    -0xc4(%ebp),%ebx
   1cd06:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
   1cd0c:	29 c3                	sub    %eax,%ebx
   1cd0e:	eb 17                	jmp    1cd27 <printf_core+0x597>
   1cd10:	8d 85 6e ff ff ff    	lea    -0x92(%ebp),%eax
   1cd16:	89 04 24             	mov    %eax,(%esp)
   1cd19:	ff 17                	call   *(%edi)
   1cd1b:	48                   	dec    %eax
   1cd1c:	0f 94 c0             	sete   %al
   1cd1f:	25 ff 00 00 00       	and    $0xff,%eax
   1cd24:	4b                   	dec    %ebx
   1cd25:	01 c6                	add    %eax,%esi
   1cd27:	85 db                	test   %ebx,%ebx
   1cd29:	0f 8e 99 00 00 00    	jle    1cdc8 <printf_core+0x638>
   1cd2f:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)
   1cd36:	c6 85 6e ff ff ff 30 	movb   $0x30,-0x92(%ebp)
   1cd3d:	e8 be 77 ff ff       	call   14500 <ascii_check>
   1cd42:	84 c0                	test   %al,%al
   1cd44:	8b 47 08             	mov    0x8(%edi),%eax
   1cd47:	89 44 24 08          	mov    %eax,0x8(%esp)
   1cd4b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1cd52:	00 
   1cd53:	75 bb                	jne    1cd10 <printf_core+0x580>
   1cd55:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1cd5c:	ff 17                	call   *(%edi)
   1cd5e:	eb bb                	jmp    1cd1b <printf_core+0x58b>
   1cd60:	8d 85 65 ff ff ff    	lea    -0x9b(%ebp),%eax
   1cd66:	89 04 24             	mov    %eax,(%esp)
   1cd69:	ff 17                	call   *(%edi)
   1cd6b:	48                   	dec    %eax
   1cd6c:	0f 94 c0             	sete   %al
   1cd6f:	25 ff 00 00 00       	and    $0xff,%eax
   1cd74:	4b                   	dec    %ebx
   1cd75:	01 c6                	add    %eax,%esi
   1cd77:	85 db                	test   %ebx,%ebx
   1cd79:	0f 8e d1 01 00 00    	jle    1cf50 <printf_core+0x7c0>
   1cd7f:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
   1cd86:	c6 85 65 ff ff ff 20 	movb   $0x20,-0x9b(%ebp)
   1cd8d:	e8 6e 77 ff ff       	call   14500 <ascii_check>
   1cd92:	84 c0                	test   %al,%al
   1cd94:	8b 47 08             	mov    0x8(%edi),%eax
   1cd97:	89 44 24 08          	mov    %eax,0x8(%esp)
   1cd9b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1cda2:	00 
   1cda3:	75 bb                	jne    1cd60 <printf_core+0x5d0>
   1cda5:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1cdac:	ff 17                	call   *(%edi)
   1cdae:	eb bb                	jmp    1cd6b <printf_core+0x5db>
   1cdb0:	89 d9                	mov    %ebx,%ecx
   1cdb2:	8b b5 4c ff ff ff    	mov    -0xb4(%ebp),%esi
   1cdb8:	29 c1                	sub    %eax,%ecx
   1cdba:	01 f1                	add    %esi,%ecx
   1cdbc:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%ebp)
   1cdc2:	e9 c1 fe ff ff       	jmp    1cc88 <printf_core+0x4f8>
   1cdc7:	90                   	nop
   1cdc8:	8b 9d 50 ff ff ff    	mov    -0xb0(%ebp),%ebx
   1cdce:	43                   	inc    %ebx
   1cdcf:	0f 84 91 09 00 00    	je     1d766 <printf_core+0xfd6>
   1cdd5:	8b 0f                	mov    (%edi),%ecx
   1cdd7:	8b 57 08             	mov    0x8(%edi),%edx
   1cdda:	89 1c 24             	mov    %ebx,(%esp)
   1cddd:	89 95 20 ff ff ff    	mov    %edx,-0xe0(%ebp)
   1cde3:	89 8d 1c ff ff ff    	mov    %ecx,-0xe4(%ebp)
   1cde9:	e8 02 72 ff ff       	call   13ff0 <str_size>
   1cdee:	8b 95 20 ff ff ff    	mov    -0xe0(%ebp),%edx
   1cdf4:	89 44 24 04          	mov    %eax,0x4(%esp)
   1cdf8:	89 54 24 08          	mov    %edx,0x8(%esp)
   1cdfc:	89 1c 24             	mov    %ebx,(%esp)
   1cdff:	8b 8d 1c ff ff ff    	mov    -0xe4(%ebp),%ecx
   1ce05:	ff d1                	call   *%ecx
   1ce07:	85 c0                	test   %eax,%eax
   1ce09:	7e 02                	jle    1ce0d <printf_core+0x67d>
   1ce0b:	01 c6                	add    %eax,%esi
   1ce0d:	8b 9d 48 ff ff ff    	mov    -0xb8(%ebp),%ebx
   1ce13:	eb 1a                	jmp    1ce2f <printf_core+0x69f>
   1ce15:	8d 76 00             	lea    0x0(%esi),%esi
   1ce18:	8d 95 6f ff ff ff    	lea    -0x91(%ebp),%edx
   1ce1e:	89 14 24             	mov    %edx,(%esp)
   1ce21:	ff 17                	call   *(%edi)
   1ce23:	48                   	dec    %eax
   1ce24:	0f 94 c0             	sete   %al
   1ce27:	25 ff 00 00 00       	and    $0xff,%eax
   1ce2c:	4b                   	dec    %ebx
   1ce2d:	01 c6                	add    %eax,%esi
   1ce2f:	85 db                	test   %ebx,%ebx
   1ce31:	7e 35                	jle    1ce68 <printf_core+0x6d8>
   1ce33:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
   1ce3a:	c6 85 6f ff ff ff 20 	movb   $0x20,-0x91(%ebp)
   1ce41:	e8 ba 76 ff ff       	call   14500 <ascii_check>
   1ce46:	84 c0                	test   %al,%al
   1ce48:	8b 47 08             	mov    0x8(%edi),%eax
   1ce4b:	89 44 24 08          	mov    %eax,0x8(%esp)
   1ce4f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1ce56:	00 
   1ce57:	75 bf                	jne    1ce18 <printf_core+0x688>
   1ce59:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1ce60:	ff 17                	call   *(%edi)
   1ce62:	eb bf                	jmp    1ce23 <printf_core+0x693>
   1ce64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ce68:	85 f6                	test   %esi,%esi
   1ce6a:	0f 88 e2 08 00 00    	js     1d752 <printf_core+0xfc2>
   1ce70:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
   1ce76:	01 f0                	add    %esi,%eax
   1ce78:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1ce7e:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
   1ce84:	89 b5 50 ff ff ff    	mov    %esi,-0xb0(%ebp)
   1ce8a:	e9 45 f9 ff ff       	jmp    1c7d4 <printf_core+0x44>
   1ce8f:	90                   	nop
   1ce90:	c7 85 2c ff ff ff 00 	movl   $0x0,-0xd4(%ebp)
   1ce97:	00 00 00 
   1ce9a:	c6 85 34 ff ff ff 00 	movb   $0x0,-0xcc(%ebp)
   1cea1:	e9 9a fd ff ff       	jmp    1cc40 <printf_core+0x4b0>
   1cea6:	66 90                	xchg   %ax,%ax
   1cea8:	8d 4d e3             	lea    -0x1d(%ebp),%ecx
   1ceab:	89 9d 2c ff ff ff    	mov    %ebx,-0xd4(%ebp)
   1ceb1:	89 bd 28 ff ff ff    	mov    %edi,-0xd8(%ebp)
   1ceb7:	89 f3                	mov    %esi,%ebx
   1ceb9:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%ebp)
   1cec0:	00 00 00 
   1cec3:	89 8d 50 ff ff ff    	mov    %ecx,-0xb0(%ebp)
   1cec9:	8b b5 40 ff ff ff    	mov    -0xc0(%ebp),%esi
   1cecf:	8b bd 44 ff ff ff    	mov    -0xbc(%ebp),%edi
   1ced5:	8d 76 00             	lea    0x0(%esi),%esi
   1ced8:	8b 8d 48 ff ff ff    	mov    -0xb8(%ebp),%ecx
   1cede:	89 34 24             	mov    %esi,(%esp)
   1cee1:	89 4c 24 08          	mov    %ecx,0x8(%esp)
   1cee5:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1cee9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1cef0:	00 
   1cef1:	e8 2a f9 00 00       	call   2c820 <__umoddi3>
   1cef6:	8b 8d 50 ff ff ff    	mov    -0xb0(%ebp),%ecx
   1cefc:	8a 04 03             	mov    (%ebx,%eax,1),%al
   1ceff:	88 01                	mov    %al,(%ecx)
   1cf01:	49                   	dec    %ecx
   1cf02:	89 8d 50 ff ff ff    	mov    %ecx,-0xb0(%ebp)
   1cf08:	8b 8d 4c ff ff ff    	mov    -0xb4(%ebp),%ecx
   1cf0e:	41                   	inc    %ecx
   1cf0f:	89 34 24             	mov    %esi,(%esp)
   1cf12:	89 8d 4c ff ff ff    	mov    %ecx,-0xb4(%ebp)
   1cf18:	8b 8d 48 ff ff ff    	mov    -0xb8(%ebp),%ecx
   1cf1e:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1cf22:	89 4c 24 08          	mov    %ecx,0x8(%esp)
   1cf26:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   1cf2d:	00 
   1cf2e:	e8 6d f6 00 00       	call   2c5a0 <__udivdi3>
   1cf33:	89 c6                	mov    %eax,%esi
   1cf35:	89 d0                	mov    %edx,%eax
   1cf37:	89 d7                	mov    %edx,%edi
   1cf39:	09 f0                	or     %esi,%eax
   1cf3b:	75 9b                	jne    1ced8 <printf_core+0x748>
   1cf3d:	8b 9d 2c ff ff ff    	mov    -0xd4(%ebp),%ebx
   1cf43:	8b bd 28 ff ff ff    	mov    -0xd8(%ebp),%edi
   1cf49:	e9 7a fc ff ff       	jmp    1cbc8 <printf_core+0x438>
   1cf4e:	66 90                	xchg   %ax,%ax
   1cf50:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
   1cf56:	8b 95 48 ff ff ff    	mov    -0xb8(%ebp),%edx
   1cf5c:	83 f0 ff             	xor    $0xffffffff,%eax
   1cf5f:	8b 8d 48 ff ff ff    	mov    -0xb8(%ebp),%ecx
   1cf65:	c1 f8 1f             	sar    $0x1f,%eax
   1cf68:	4a                   	dec    %edx
   1cf69:	21 c8                	and    %ecx,%eax
   1cf6b:	29 c2                	sub    %eax,%edx
   1cf6d:	89 95 48 ff ff ff    	mov    %edx,-0xb8(%ebp)
   1cf73:	80 bd 34 ff ff ff 00 	cmpb   $0x0,-0xcc(%ebp)
   1cf7a:	0f 84 4f fd ff ff    	je     1cccf <printf_core+0x53f>
   1cf80:	8b 8d 2c ff ff ff    	mov    -0xd4(%ebp),%ecx
   1cf86:	8a 95 34 ff ff ff    	mov    -0xcc(%ebp),%dl
   1cf8c:	89 0c 24             	mov    %ecx,(%esp)
   1cf8f:	88 95 66 ff ff ff    	mov    %dl,-0x9a(%ebp)
   1cf95:	e8 66 75 ff ff       	call   14500 <ascii_check>
   1cf9a:	84 c0                	test   %al,%al
   1cf9c:	8b 47 08             	mov    0x8(%edi),%eax
   1cf9f:	89 44 24 08          	mov    %eax,0x8(%esp)
   1cfa3:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1cfaa:	00 
   1cfab:	0f 84 b2 06 00 00    	je     1d663 <printf_core+0xed3>
   1cfb1:	8d 85 66 ff ff ff    	lea    -0x9a(%ebp),%eax
   1cfb7:	89 04 24             	mov    %eax,(%esp)
   1cfba:	ff 17                	call   *(%edi)
   1cfbc:	48                   	dec    %eax
   1cfbd:	0f 94 c0             	sete   %al
   1cfc0:	25 ff 00 00 00       	and    $0xff,%eax
   1cfc5:	01 c6                	add    %eax,%esi
   1cfc7:	e9 03 fd ff ff       	jmp    1cccf <printf_core+0x53f>
   1cfcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1cfd0:	8b bd 4c ff ff ff    	mov    -0xb4(%ebp),%edi
   1cfd6:	e9 04 f9 ff ff       	jmp    1c8df <printf_core+0x14f>
   1cfdb:	90                   	nop
   1cfdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1cfe0:	8b 55 08             	mov    0x8(%ebp),%edx
   1cfe3:	8d 85 70 ff ff ff    	lea    -0x90(%ebp),%eax
   1cfe9:	89 14 24             	mov    %edx,(%esp)
   1cfec:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1cff3:	ff 
   1cff4:	89 44 24 04          	mov    %eax,0x4(%esp)
   1cff8:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1cffe:	e8 ad 6b ff ff       	call   13bb0 <str_decode>
   1d003:	8d 50 d0             	lea    -0x30(%eax),%edx
   1d006:	83 fa 09             	cmp    $0x9,%edx
   1d009:	0f 87 ae 00 00 00    	ja     1d0bd <printf_core+0x92d>
   1d00f:	89 9d 48 ff ff ff    	mov    %ebx,-0xb8(%ebp)
   1d015:	89 bd 4c ff ff ff    	mov    %edi,-0xb4(%ebp)
   1d01b:	c7 85 3c ff ff ff 00 	movl   $0x0,-0xc4(%ebp)
   1d022:	00 00 00 
   1d025:	31 db                	xor    %ebx,%ebx
   1d027:	8b 7d 08             	mov    0x8(%ebp),%edi
   1d02a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1d030:	8d 04 9b             	lea    (%ebx,%ebx,4),%eax
   1d033:	8d 8d 70 ff ff ff    	lea    -0x90(%ebp),%ecx
   1d039:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1d040:	ff 
   1d041:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1d045:	89 3c 24             	mov    %edi,(%esp)
   1d048:	8d 1c 42             	lea    (%edx,%eax,2),%ebx
   1d04b:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1d051:	e8 5a 6b ff ff       	call   13bb0 <str_decode>
   1d056:	85 c0                	test   %eax,%eax
   1d058:	0f 84 72 ff ff ff    	je     1cfd0 <printf_core+0x840>
   1d05e:	8d 50 d0             	lea    -0x30(%eax),%edx
   1d061:	83 fa 09             	cmp    $0x9,%edx
   1d064:	76 ca                	jbe    1d030 <printf_core+0x8a0>
   1d066:	89 9d 3c ff ff ff    	mov    %ebx,-0xc4(%ebp)
   1d06c:	8b bd 4c ff ff ff    	mov    -0xb4(%ebp),%edi
   1d072:	8b 9d 48 ff ff ff    	mov    -0xb8(%ebp),%ebx
   1d078:	e9 36 f8 ff ff       	jmp    1c8b3 <printf_core+0x123>
   1d07d:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
   1d083:	83 c0 02             	add    $0x2,%eax
   1d086:	e9 85 fb ff ff       	jmp    1cc10 <printf_core+0x480>
   1d08b:	90                   	nop
   1d08c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1d090:	f6 85 54 ff ff ff 20 	testb  $0x20,-0xac(%ebp)
   1d097:	75 7f                	jne    1d118 <printf_core+0x988>
   1d099:	f6 85 54 ff ff ff 40 	testb  $0x40,-0xac(%ebp)
   1d0a0:	0f 84 ea fd ff ff    	je     1ce90 <printf_core+0x700>
   1d0a6:	40                   	inc    %eax
   1d0a7:	c7 85 2c ff ff ff 20 	movl   $0x20,-0xd4(%ebp)
   1d0ae:	00 00 00 
   1d0b1:	c6 85 34 ff ff ff 20 	movb   $0x20,-0xcc(%ebp)
   1d0b8:	e9 83 fb ff ff       	jmp    1cc40 <printf_core+0x4b0>
   1d0bd:	83 f8 2a             	cmp    $0x2a,%eax
   1d0c0:	0f 85 ed f7 ff ff    	jne    1c8b3 <printf_core+0x123>
   1d0c6:	8b 55 08             	mov    0x8(%ebp),%edx
   1d0c9:	8d 85 70 ff ff ff    	lea    -0x90(%ebp),%eax
   1d0cf:	89 14 24             	mov    %edx,(%esp)
   1d0d2:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
   1d0d9:	ff 
   1d0da:	89 44 24 04          	mov    %eax,0x4(%esp)
   1d0de:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1d0e4:	e8 c7 6a ff ff       	call   13bb0 <str_decode>
   1d0e9:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1d0ec:	8b 55 10             	mov    0x10(%ebp),%edx
   1d0ef:	8b 09                	mov    (%ecx),%ecx
   1d0f1:	83 c2 04             	add    $0x4,%edx
   1d0f4:	89 8d 3c ff ff ff    	mov    %ecx,-0xc4(%ebp)
   1d0fa:	89 55 10             	mov    %edx,0x10(%ebp)
   1d0fd:	85 c9                	test   %ecx,%ecx
   1d0ff:	0f 89 ae f7 ff ff    	jns    1c8b3 <printf_core+0x123>
   1d105:	c7 85 3c ff ff ff ff 	movl   $0xffffffff,-0xc4(%ebp)
   1d10c:	ff ff ff 
   1d10f:	e9 9f f7 ff ff       	jmp    1c8b3 <printf_core+0x123>
   1d114:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1d118:	40                   	inc    %eax
   1d119:	c7 85 2c ff ff ff 2b 	movl   $0x2b,-0xd4(%ebp)
   1d120:	00 00 00 
   1d123:	c6 85 34 ff ff ff 2b 	movb   $0x2b,-0xcc(%ebp)
   1d12a:	e9 11 fb ff ff       	jmp    1cc40 <printf_core+0x4b0>
   1d12f:	81 8d 54 ff ff ff 80 	orl    $0x80,-0xac(%ebp)
   1d136:	00 00 00 
   1d139:	c7 85 30 ff ff ff 10 	movl   $0x10,-0xd0(%ebp)
   1d140:	00 00 00 
   1d143:	c7 85 48 ff ff ff 10 	movl   $0x10,-0xb8(%ebp)
   1d14a:	00 00 00 
   1d14d:	8d 76 00             	lea    0x0(%esi),%esi
   1d150:	83 f9 06             	cmp    $0x6,%ecx
   1d153:	77 0b                	ja     1d160 <printf_core+0x9d0>
   1d155:	ff 24 8d c4 de 02 00 	jmp    *0x2dec4(,%ecx,4)
   1d15c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1d160:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1d166:	83 e1 02             	and    $0x2,%ecx
   1d169:	89 8d 34 ff ff ff    	mov    %ecx,-0xcc(%ebp)
   1d16f:	0f 84 7b 03 00 00    	je     1d4f0 <printf_core+0xd60>
   1d175:	8b 75 10             	mov    0x10(%ebp),%esi
   1d178:	8b 45 10             	mov    0x10(%ebp),%eax
   1d17b:	83 c0 04             	add    $0x4,%eax
   1d17e:	8b 16                	mov    (%esi),%edx
   1d180:	85 d2                	test   %edx,%edx
   1d182:	0f 88 03 06 00 00    	js     1d78b <printf_core+0xffb>
   1d188:	89 45 10             	mov    %eax,0x10(%ebp)
   1d18b:	89 95 40 ff ff ff    	mov    %edx,-0xc0(%ebp)
   1d191:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%ebp)
   1d198:	00 00 00 
   1d19b:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
   1d1a1:	8b b5 3c ff ff ff    	mov    -0xc4(%ebp),%esi
   1d1a7:	83 f0 ff             	xor    $0xffffffff,%eax
   1d1aa:	c1 f8 1f             	sar    $0x1f,%eax
   1d1ad:	21 c6                	and    %eax,%esi
   1d1af:	89 b5 3c ff ff ff    	mov    %esi,-0xc4(%ebp)
   1d1b5:	e9 ce f9 ff ff       	jmp    1cb88 <printf_core+0x3f8>
   1d1ba:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1d1c0:	83 e1 02             	and    $0x2,%ecx
   1d1c3:	89 8d 34 ff ff ff    	mov    %ecx,-0xcc(%ebp)
   1d1c9:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1d1cc:	0f 84 ca 05 00 00    	je     1d79c <printf_core+0x100c>
   1d1d2:	8b 55 10             	mov    0x10(%ebp),%edx
   1d1d5:	83 c1 08             	add    $0x8,%ecx
   1d1d8:	8b 02                	mov    (%edx),%eax
   1d1da:	8b 52 04             	mov    0x4(%edx),%edx
   1d1dd:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
   1d1e3:	89 95 44 ff ff ff    	mov    %edx,-0xbc(%ebp)
   1d1e9:	85 d2                	test   %edx,%edx
   1d1eb:	0f 88 e6 0a 00 00    	js     1dcd7 <printf_core+0x1547>
   1d1f1:	89 4d 10             	mov    %ecx,0x10(%ebp)
   1d1f4:	eb a5                	jmp    1d19b <printf_core+0xa0b>
   1d1f6:	8b 55 10             	mov    0x10(%ebp),%edx
   1d1f9:	8b 75 10             	mov    0x10(%ebp),%esi
   1d1fc:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1d202:	83 c6 04             	add    $0x4,%esi
   1d205:	8b 02                	mov    (%edx),%eax
   1d207:	83 e1 02             	and    $0x2,%ecx
   1d20a:	31 d2                	xor    %edx,%edx
   1d20c:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
   1d212:	89 95 44 ff ff ff    	mov    %edx,-0xbc(%ebp)
   1d218:	89 8d 34 ff ff ff    	mov    %ecx,-0xcc(%ebp)
   1d21e:	89 75 10             	mov    %esi,0x10(%ebp)
   1d221:	e9 75 ff ff ff       	jmp    1d19b <printf_core+0xa0b>
   1d226:	c7 85 30 ff ff ff 02 	movl   $0x2,-0xd0(%ebp)
   1d22d:	00 00 00 
   1d230:	c7 85 48 ff ff ff 02 	movl   $0x2,-0xb8(%ebp)
   1d237:	00 00 00 
   1d23a:	e9 11 ff ff ff       	jmp    1d150 <printf_core+0x9c0>
   1d23f:	83 f9 03             	cmp    $0x3,%ecx
   1d242:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1d245:	0f 84 95 08 00 00    	je     1dae0 <printf_core+0x1350>
   1d24b:	8b 55 10             	mov    0x10(%ebp),%edx
   1d24e:	83 c1 04             	add    $0x4,%ecx
   1d251:	89 8d 4c ff ff ff    	mov    %ecx,-0xb4(%ebp)
   1d257:	f6 85 54 ff ff ff 10 	testb  $0x10,-0xac(%ebp)
   1d25e:	8a 12                	mov    (%edx),%dl
   1d260:	c7 85 54 ff ff ff 00 	movl   $0x0,-0xac(%ebp)
   1d267:	00 00 00 
   1d26a:	88 95 50 ff ff ff    	mov    %dl,-0xb0(%ebp)
   1d270:	0f 85 2d 04 00 00    	jne    1d6a3 <printf_core+0xf13>
   1d276:	8d b5 62 ff ff ff    	lea    -0x9e(%ebp),%esi
   1d27c:	eb 1f                	jmp    1d29d <printf_core+0xb0d>
   1d27e:	66 90                	xchg   %ax,%ax
   1d280:	89 34 24             	mov    %esi,(%esp)
   1d283:	ff 17                	call   *(%edi)
   1d285:	85 c0                	test   %eax,%eax
   1d287:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1d28d:	0f 9f c0             	setg   %al
   1d290:	25 ff 00 00 00       	and    $0xff,%eax
   1d295:	01 c1                	add    %eax,%ecx
   1d297:	89 8d 54 ff ff ff    	mov    %ecx,-0xac(%ebp)
   1d29d:	4b                   	dec    %ebx
   1d29e:	85 db                	test   %ebx,%ebx
   1d2a0:	0f 8e fd 03 00 00    	jle    1d6a3 <printf_core+0xf13>
   1d2a6:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
   1d2ad:	c6 85 62 ff ff ff 20 	movb   $0x20,-0x9e(%ebp)
   1d2b4:	e8 47 72 ff ff       	call   14500 <ascii_check>
   1d2b9:	84 c0                	test   %al,%al
   1d2bb:	8b 47 08             	mov    0x8(%edi),%eax
   1d2be:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d2c2:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1d2c9:	00 
   1d2ca:	75 b4                	jne    1d280 <printf_core+0xaf0>
   1d2cc:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1d2d3:	ff 17                	call   *(%edi)
   1d2d5:	eb ae                	jmp    1d285 <printf_core+0xaf5>
   1d2d7:	83 8d 54 ff ff ff 02 	orl    $0x2,-0xac(%ebp)
   1d2de:	c7 85 30 ff ff ff 0a 	movl   $0xa,-0xd0(%ebp)
   1d2e5:	00 00 00 
   1d2e8:	c7 85 48 ff ff ff 0a 	movl   $0xa,-0xb8(%ebp)
   1d2ef:	00 00 00 
   1d2f2:	e9 59 fe ff ff       	jmp    1d150 <printf_core+0x9c0>
   1d2f7:	8b b5 3c ff ff ff    	mov    -0xc4(%ebp),%esi
   1d2fd:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
   1d303:	83 f6 ff             	xor    $0xffffffff,%esi
   1d306:	c1 fe 1f             	sar    $0x1f,%esi
   1d309:	21 c6                	and    %eax,%esi
   1d30b:	83 f9 03             	cmp    $0x3,%ecx
   1d30e:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1d311:	0f 84 de 06 00 00    	je     1d9f5 <printf_core+0x1265>
   1d317:	83 c1 04             	add    $0x4,%ecx
   1d31a:	89 8d 48 ff ff ff    	mov    %ecx,-0xb8(%ebp)
   1d320:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1d323:	8b 09                	mov    (%ecx),%ecx
   1d325:	89 8d 50 ff ff ff    	mov    %ecx,-0xb0(%ebp)
   1d32b:	85 c9                	test   %ecx,%ecx
   1d32d:	0f 84 60 09 00 00    	je     1dc93 <printf_core+0x1503>
   1d333:	89 0c 24             	mov    %ecx,(%esp)
   1d336:	e8 95 6e ff ff       	call   141d0 <str_length>
   1d33b:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
   1d341:	39 c6                	cmp    %eax,%esi
   1d343:	77 08                	ja     1d34d <printf_core+0xbbd>
   1d345:	85 f6                	test   %esi,%esi
   1d347:	0f 85 93 01 00 00    	jne    1d4e0 <printf_core+0xd50>
   1d34d:	8b b5 4c ff ff ff    	mov    -0xb4(%ebp),%esi
   1d353:	29 f3                	sub    %esi,%ebx
   1d355:	31 f6                	xor    %esi,%esi
   1d357:	89 9d 3c ff ff ff    	mov    %ebx,-0xc4(%ebp)
   1d35d:	f6 85 54 ff ff ff 10 	testb  $0x10,-0xac(%ebp)
   1d364:	0f 84 3d 01 00 00    	je     1d4a7 <printf_core+0xd17>
   1d36a:	8b 95 50 ff ff ff    	mov    -0xb0(%ebp),%edx
   1d370:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
   1d376:	89 14 24             	mov    %edx,(%esp)
   1d379:	89 44 24 04          	mov    %eax,0x4(%esp)
   1d37d:	e8 ae 6c ff ff       	call   14030 <str_lsize>
   1d382:	8b 57 08             	mov    0x8(%edi),%edx
   1d385:	8b 8d 50 ff ff ff    	mov    -0xb0(%ebp),%ecx
   1d38b:	89 54 24 08          	mov    %edx,0x8(%esp)
   1d38f:	89 44 24 04          	mov    %eax,0x4(%esp)
   1d393:	89 0c 24             	mov    %ecx,(%esp)
   1d396:	ff 17                	call   *(%edi)
   1d398:	85 c0                	test   %eax,%eax
   1d39a:	0f 88 2e 09 00 00    	js     1dcce <printf_core+0x153e>
   1d3a0:	01 c6                	add    %eax,%esi
   1d3a2:	8b 9d 3c ff ff ff    	mov    -0xc4(%ebp),%ebx
   1d3a8:	eb 1d                	jmp    1d3c7 <printf_core+0xc37>
   1d3aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1d3b0:	8d 85 5f ff ff ff    	lea    -0xa1(%ebp),%eax
   1d3b6:	89 04 24             	mov    %eax,(%esp)
   1d3b9:	ff 17                	call   *(%edi)
   1d3bb:	48                   	dec    %eax
   1d3bc:	0f 94 c0             	sete   %al
   1d3bf:	25 ff 00 00 00       	and    $0xff,%eax
   1d3c4:	4b                   	dec    %ebx
   1d3c5:	01 c6                	add    %eax,%esi
   1d3c7:	85 db                	test   %ebx,%ebx
   1d3c9:	0f 8e a2 02 00 00    	jle    1d671 <printf_core+0xee1>
   1d3cf:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
   1d3d6:	c6 85 5f ff ff ff 20 	movb   $0x20,-0xa1(%ebp)
   1d3dd:	e8 1e 71 ff ff       	call   14500 <ascii_check>
   1d3e2:	84 c0                	test   %al,%al
   1d3e4:	8b 47 08             	mov    0x8(%edi),%eax
   1d3e7:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d3eb:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1d3f2:	00 
   1d3f3:	75 bb                	jne    1d3b0 <printf_core+0xc20>
   1d3f5:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1d3fc:	ff 17                	call   *(%edi)
   1d3fe:	eb bb                	jmp    1d3bb <printf_core+0xc2b>
   1d400:	c7 85 30 ff ff ff 0a 	movl   $0xa,-0xd0(%ebp)
   1d407:	00 00 00 
   1d40a:	c7 85 48 ff ff ff 0a 	movl   $0xa,-0xb8(%ebp)
   1d411:	00 00 00 
   1d414:	e9 37 fd ff ff       	jmp    1d150 <printf_core+0x9c0>
   1d419:	c7 85 30 ff ff ff 08 	movl   $0x8,-0xd0(%ebp)
   1d420:	00 00 00 
   1d423:	c7 85 48 ff ff ff 08 	movl   $0x8,-0xb8(%ebp)
   1d42a:	00 00 00 
   1d42d:	e9 1e fd ff ff       	jmp    1d150 <printf_core+0x9c0>
   1d432:	8b 75 10             	mov    0x10(%ebp),%esi
   1d435:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1d438:	83 c6 08             	add    $0x8,%esi
   1d43b:	83 e8 45             	sub    $0x45,%eax
   1d43e:	89 b5 4c ff ff ff    	mov    %esi,-0xb4(%ebp)
   1d444:	3c 22                	cmp    $0x22,%al
   1d446:	dd 01                	fldl   (%ecx)
   1d448:	0f 86 6d 03 00 00    	jbe    1d7bb <printf_core+0x102b>
   1d44e:	dd d8                	fstp   %st(0)
   1d450:	eb 02                	jmp    1d454 <printf_core+0xcc4>
   1d452:	dd d8                	fstp   %st(0)
   1d454:	c7 44 24 08 d6 04 00 	movl   $0x4d6,0x8(%esp)
   1d45b:	00 
   1d45c:	c7 44 24 04 83 dc 02 	movl   $0x2dc83,0x4(%esp)
   1d463:	00 
   1d464:	c7 04 24 c4 cd 02 00 	movl   $0x2cdc4,(%esp)
   1d46b:	e8 40 d4 00 00       	call   2a8b0 <assert_abort>
   1d470:	c7 85 30 ff ff ff 10 	movl   $0x10,-0xd0(%ebp)
   1d477:	00 00 00 
   1d47a:	c7 85 48 ff ff ff 10 	movl   $0x10,-0xb8(%ebp)
   1d481:	00 00 00 
   1d484:	e9 c7 fc ff ff       	jmp    1d150 <printf_core+0x9c0>
   1d489:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d490:	8d 8d 5e ff ff ff    	lea    -0xa2(%ebp),%ecx
   1d496:	89 0c 24             	mov    %ecx,(%esp)
   1d499:	ff 17                	call   *(%edi)
   1d49b:	48                   	dec    %eax
   1d49c:	0f 94 c0             	sete   %al
   1d49f:	25 ff 00 00 00       	and    $0xff,%eax
   1d4a4:	4b                   	dec    %ebx
   1d4a5:	01 c6                	add    %eax,%esi
   1d4a7:	85 db                	test   %ebx,%ebx
   1d4a9:	0f 8e 1e 05 00 00    	jle    1d9cd <printf_core+0x123d>
   1d4af:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
   1d4b6:	c6 85 5e ff ff ff 20 	movb   $0x20,-0xa2(%ebp)
   1d4bd:	e8 3e 70 ff ff       	call   14500 <ascii_check>
   1d4c2:	84 c0                	test   %al,%al
   1d4c4:	8b 47 08             	mov    0x8(%edi),%eax
   1d4c7:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d4cb:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1d4d2:	00 
   1d4d3:	75 bb                	jne    1d490 <printf_core+0xd00>
   1d4d5:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1d4dc:	ff 17                	call   *(%edi)
   1d4de:	eb bb                	jmp    1d49b <printf_core+0xd0b>
   1d4e0:	89 b5 4c ff ff ff    	mov    %esi,-0xb4(%ebp)
   1d4e6:	e9 62 fe ff ff       	jmp    1d34d <printf_core+0xbbd>
   1d4eb:	90                   	nop
   1d4ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1d4f0:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1d4f3:	8b 11                	mov    (%ecx),%edx
   1d4f5:	83 c1 04             	add    $0x4,%ecx
   1d4f8:	89 4d 10             	mov    %ecx,0x10(%ebp)
   1d4fb:	e9 8b fc ff ff       	jmp    1d18b <printf_core+0x9fb>
   1d500:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
   1d506:	40                   	inc    %eax
   1d507:	e9 04 f7 ff ff       	jmp    1cc10 <printf_core+0x480>
   1d50c:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)
   1d513:	c6 85 67 ff ff ff 30 	movb   $0x30,-0x99(%ebp)
   1d51a:	e8 e1 6f ff ff       	call   14500 <ascii_check>
   1d51f:	84 c0                	test   %al,%al
   1d521:	8b 47 08             	mov    0x8(%edi),%eax
   1d524:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d528:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1d52f:	00 
   1d530:	0f 84 89 04 00 00    	je     1d9bf <printf_core+0x122f>
   1d536:	8d 85 67 ff ff ff    	lea    -0x99(%ebp),%eax
   1d53c:	89 04 24             	mov    %eax,(%esp)
   1d53f:	ff 17                	call   *(%edi)
   1d541:	48                   	dec    %eax
   1d542:	0f 94 c0             	sete   %al
   1d545:	25 ff 00 00 00       	and    $0xff,%eax
   1d54a:	01 c6                	add    %eax,%esi
   1d54c:	f6 85 54 ff ff ff 80 	testb  $0x80,-0xac(%ebp)
   1d553:	0f 84 e4 03 00 00    	je     1d93d <printf_core+0x11ad>
   1d559:	c7 04 24 42 00 00 00 	movl   $0x42,(%esp)
   1d560:	c6 85 68 ff ff ff 42 	movb   $0x42,-0x98(%ebp)
   1d567:	e8 94 6f ff ff       	call   14500 <ascii_check>
   1d56c:	84 c0                	test   %al,%al
   1d56e:	8b 47 08             	mov    0x8(%edi),%eax
   1d571:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d575:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1d57c:	00 
   1d57d:	0f 84 8d 00 00 00    	je     1d610 <printf_core+0xe80>
   1d583:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
   1d589:	89 04 24             	mov    %eax,(%esp)
   1d58c:	ff 17                	call   *(%edi)
   1d58e:	e9 86 00 00 00       	jmp    1d619 <printf_core+0xe89>
   1d593:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)
   1d59a:	c6 85 6b ff ff ff 30 	movb   $0x30,-0x95(%ebp)
   1d5a1:	e8 5a 6f ff ff       	call   14500 <ascii_check>
   1d5a6:	84 c0                	test   %al,%al
   1d5a8:	8b 47 08             	mov    0x8(%edi),%eax
   1d5ab:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d5af:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1d5b6:	00 
   1d5b7:	0f 84 f4 03 00 00    	je     1d9b1 <printf_core+0x1221>
   1d5bd:	8d 85 6b ff ff ff    	lea    -0x95(%ebp),%eax
   1d5c3:	89 04 24             	mov    %eax,(%esp)
   1d5c6:	ff 17                	call   *(%edi)
   1d5c8:	48                   	dec    %eax
   1d5c9:	0f 94 c0             	sete   %al
   1d5cc:	25 ff 00 00 00       	and    $0xff,%eax
   1d5d1:	01 c6                	add    %eax,%esi
   1d5d3:	f6 85 54 ff ff ff 80 	testb  $0x80,-0xac(%ebp)
   1d5da:	0f 84 97 03 00 00    	je     1d977 <printf_core+0x11e7>
   1d5e0:	c7 04 24 58 00 00 00 	movl   $0x58,(%esp)
   1d5e7:	c6 85 6c ff ff ff 58 	movb   $0x58,-0x94(%ebp)
   1d5ee:	e8 0d 6f ff ff       	call   14500 <ascii_check>
   1d5f3:	84 c0                	test   %al,%al
   1d5f5:	8b 47 08             	mov    0x8(%edi),%eax
   1d5f8:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d5fc:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1d603:	00 
   1d604:	0f 85 d3 05 00 00    	jne    1dbdd <printf_core+0x144d>
   1d60a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1d610:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1d617:	ff 17                	call   *(%edi)
   1d619:	48                   	dec    %eax
   1d61a:	0f 94 c0             	sete   %al
   1d61d:	25 ff 00 00 00       	and    $0xff,%eax
   1d622:	01 c6                	add    %eax,%esi
   1d624:	e9 d7 f6 ff ff       	jmp    1cd00 <printf_core+0x570>
   1d629:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1d630:	c7 04 24 6f 00 00 00 	movl   $0x6f,(%esp)
   1d637:	c6 85 6a ff ff ff 6f 	movb   $0x6f,-0x96(%ebp)
   1d63e:	e8 bd 6e ff ff       	call   14500 <ascii_check>
   1d643:	84 c0                	test   %al,%al
   1d645:	8b 47 08             	mov    0x8(%edi),%eax
   1d648:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d64c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1d653:	00 
   1d654:	74 ba                	je     1d610 <printf_core+0xe80>
   1d656:	8d 85 6a ff ff ff    	lea    -0x96(%ebp),%eax
   1d65c:	89 04 24             	mov    %eax,(%esp)
   1d65f:	ff 17                	call   *(%edi)
   1d661:	eb b6                	jmp    1d619 <printf_core+0xe89>
   1d663:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1d66a:	ff 17                	call   *(%edi)
   1d66c:	e9 4b f9 ff ff       	jmp    1cfbc <printf_core+0x82c>
   1d671:	89 f0                	mov    %esi,%eax
   1d673:	8b 95 48 ff ff ff    	mov    -0xb8(%ebp),%edx
   1d679:	85 c0                	test   %eax,%eax
   1d67b:	89 55 10             	mov    %edx,0x10(%ebp)
   1d67e:	0f 88 ce 00 00 00    	js     1d752 <printf_core+0xfc2>
   1d684:	8b 9d 38 ff ff ff    	mov    -0xc8(%ebp),%ebx
   1d68a:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1d690:	01 c3                	add    %eax,%ebx
   1d692:	89 b5 50 ff ff ff    	mov    %esi,-0xb0(%ebp)
   1d698:	89 9d 38 ff ff ff    	mov    %ebx,-0xc8(%ebp)
   1d69e:	e9 31 f1 ff ff       	jmp    1c7d4 <printf_core+0x44>
   1d6a3:	8a 8d 50 ff ff ff    	mov    -0xb0(%ebp),%cl
   1d6a9:	8d 77 08             	lea    0x8(%edi),%esi
   1d6ac:	0f be c1             	movsbl %cl,%eax
   1d6af:	89 04 24             	mov    %eax,(%esp)
   1d6b2:	88 8d 63 ff ff ff    	mov    %cl,-0x9d(%ebp)
   1d6b8:	e8 43 6e ff ff       	call   14500 <ascii_check>
   1d6bd:	84 c0                	test   %al,%al
   1d6bf:	8b 47 08             	mov    0x8(%edi),%eax
   1d6c2:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d6c6:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1d6cd:	00 
   1d6ce:	74 60                	je     1d730 <printf_core+0xfa0>
   1d6d0:	8d 85 63 ff ff ff    	lea    -0x9d(%ebp),%eax
   1d6d6:	89 04 24             	mov    %eax,(%esp)
   1d6d9:	ff 17                	call   *(%edi)
   1d6db:	90                   	nop
   1d6dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1d6e0:	85 c0                	test   %eax,%eax
   1d6e2:	8b 95 54 ff ff ff    	mov    -0xac(%ebp),%edx
   1d6e8:	0f 9f c0             	setg   %al
   1d6eb:	25 ff 00 00 00       	and    $0xff,%eax
   1d6f0:	4b                   	dec    %ebx
   1d6f1:	01 c2                	add    %eax,%edx
   1d6f3:	85 db                	test   %ebx,%ebx
   1d6f5:	89 95 54 ff ff ff    	mov    %edx,-0xac(%ebp)
   1d6fb:	7e 3e                	jle    1d73b <printf_core+0xfab>
   1d6fd:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
   1d704:	c6 85 64 ff ff ff 20 	movb   $0x20,-0x9c(%ebp)
   1d70b:	e8 f0 6d ff ff       	call   14500 <ascii_check>
   1d710:	84 c0                	test   %al,%al
   1d712:	8b 06                	mov    (%esi),%eax
   1d714:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d718:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1d71f:	00 
   1d720:	74 0e                	je     1d730 <printf_core+0xfa0>
   1d722:	8d 85 64 ff ff ff    	lea    -0x9c(%ebp),%eax
   1d728:	89 04 24             	mov    %eax,(%esp)
   1d72b:	ff 17                	call   *(%edi)
   1d72d:	eb b1                	jmp    1d6e0 <printf_core+0xf50>
   1d72f:	90                   	nop
   1d730:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1d737:	ff 17                	call   *(%edi)
   1d739:	eb a5                	jmp    1d6e0 <printf_core+0xf50>
   1d73b:	8b b5 54 ff ff ff    	mov    -0xac(%ebp),%esi
   1d741:	8b 95 4c ff ff ff    	mov    -0xb4(%ebp),%edx
   1d747:	85 f6                	test   %esi,%esi
   1d749:	89 55 10             	mov    %edx,0x10(%ebp)
   1d74c:	0f 89 1e f7 ff ff    	jns    1ce70 <printf_core+0x6e0>
   1d752:	f7 9d 38 ff ff ff    	negl   -0xc8(%ebp)
   1d758:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
   1d75e:	8d 65 f4             	lea    -0xc(%ebp),%esp
   1d761:	5b                   	pop    %ebx
   1d762:	5e                   	pop    %esi
   1d763:	5f                   	pop    %edi
   1d764:	5d                   	pop    %ebp
   1d765:	c3                   	ret    
   1d766:	c7 04 24 fe dc 02 00 	movl   $0x2dcfe,(%esp)
   1d76d:	e8 7e 68 ff ff       	call   13ff0 <str_size>
   1d772:	8b 57 08             	mov    0x8(%edi),%edx
   1d775:	89 54 24 08          	mov    %edx,0x8(%esp)
   1d779:	89 44 24 04          	mov    %eax,0x4(%esp)
   1d77d:	c7 04 24 fe dc 02 00 	movl   $0x2dcfe,(%esp)
   1d784:	ff 17                	call   *(%edi)
   1d786:	e9 7c f6 ff ff       	jmp    1ce07 <printf_core+0x677>
   1d78b:	f7 da                	neg    %edx
   1d78d:	81 8d 54 ff ff ff 00 	orl    $0x100,-0xac(%ebp)
   1d794:	01 00 00 
   1d797:	e9 ec f9 ff ff       	jmp    1d188 <printf_core+0x9f8>
   1d79c:	8b 75 10             	mov    0x10(%ebp),%esi
   1d79f:	8b 11                	mov    (%ecx),%edx
   1d7a1:	83 c6 08             	add    $0x8,%esi
   1d7a4:	8b 49 04             	mov    0x4(%ecx),%ecx
   1d7a7:	89 95 40 ff ff ff    	mov    %edx,-0xc0(%ebp)
   1d7ad:	89 8d 44 ff ff ff    	mov    %ecx,-0xbc(%ebp)
   1d7b3:	89 75 10             	mov    %esi,0x10(%ebp)
   1d7b6:	e9 e0 f9 ff ff       	jmp    1d19b <printf_core+0xa0b>
   1d7bb:	25 ff 00 00 00       	and    $0xff,%eax
   1d7c0:	ff 24 85 e0 de 02 00 	jmp    *0x2dee0(,%eax,4)
   1d7c7:	81 8d 54 ff ff ff 80 	orl    $0x80,-0xac(%ebp)
   1d7ce:	00 00 00 
   1d7d1:	dd 54 24 04          	fstl   0x4(%esp)
   1d7d5:	8d 45 8c             	lea    -0x74(%ebp),%eax
   1d7d8:	89 04 24             	mov    %eax,(%esp)
   1d7db:	dd 9d 08 ff ff ff    	fstpl  -0xf8(%ebp)
   1d7e1:	e8 7a 06 00 00       	call   1de60 <extract_ieee_double>
   1d7e6:	8a 55 8e             	mov    -0x72(%ebp),%dl
   1d7e9:	80 7d 8c 00          	cmpb   $0x0,-0x74(%ebp)
   1d7ed:	50                   	push   %eax
   1d7ee:	dd 85 08 ff ff ff    	fldl   -0xf8(%ebp)
   1d7f4:	0f 85 68 04 00 00    	jne    1dc62 <printf_core+0x14d2>
   1d7fa:	8b b5 3c ff ff ff    	mov    -0xc4(%ebp),%esi
   1d800:	8d 85 78 ff ff ff    	lea    -0x88(%ebp),%eax
   1d806:	85 f6                	test   %esi,%esi
   1d808:	0f 88 16 05 00 00    	js     1dd24 <printf_core+0x1594>
   1d80e:	89 44 24 24          	mov    %eax,0x24(%esp)
   1d812:	8d 45 a0             	lea    -0x60(%ebp),%eax
   1d815:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1d819:	8b 45 8c             	mov    -0x74(%ebp),%eax
   1d81c:	89 04 24             	mov    %eax,(%esp)
   1d81f:	8b 45 90             	mov    -0x70(%ebp),%eax
   1d822:	89 44 24 04          	mov    %eax,0x4(%esp)
   1d826:	8b 45 94             	mov    -0x6c(%ebp),%eax
   1d829:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d82d:	8b 45 98             	mov    -0x68(%ebp),%eax
   1d830:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1d834:	8b 45 9c             	mov    -0x64(%ebp),%eax
   1d837:	c7 44 24 20 15 00 00 	movl   $0x15,0x20(%esp)
   1d83e:	00 
   1d83f:	c7 44 24 18 ff ff ff 	movl   $0xffffffff,0x18(%esp)
   1d846:	ff 
   1d847:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   1d84e:	00 
   1d84f:	89 44 24 10          	mov    %eax,0x10(%esp)
   1d853:	dd 9d 08 ff ff ff    	fstpl  -0xf8(%ebp)
   1d859:	e8 12 17 00 00       	call   1ef70 <double_to_fixed_str>
   1d85e:	85 c0                	test   %eax,%eax
   1d860:	dd 85 08 ff ff ff    	fldl   -0xf8(%ebp)
   1d866:	0f 8e d2 05 00 00    	jle    1de3e <printf_core+0x16ae>
   1d86c:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
   1d872:	85 c0                	test   %eax,%eax
   1d874:	0f 8e 5b 05 00 00    	jle    1ddd5 <printf_core+0x1645>
   1d87a:	8b 95 78 ff ff ff    	mov    -0x88(%ebp),%edx
   1d880:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1d886:	80 cd 02             	or     $0x2,%ch
   1d889:	83 fa fc             	cmp    $0xfffffffc,%edx
   1d88c:	7c 08                	jl     1d896 <printf_core+0x1106>
   1d88e:	39 d0                	cmp    %edx,%eax
   1d890:	0f 8f 49 05 00 00    	jg     1dddf <printf_core+0x164f>
   1d896:	dd 1c 24             	fstpl  (%esp)
   1d899:	48                   	dec    %eax
   1d89a:	89 7c 24 08          	mov    %edi,0x8(%esp)
   1d89e:	89 da                	mov    %ebx,%edx
   1d8a0:	e8 7b ea ff ff       	call   1c320 <print_double_scientific>
   1d8a5:	eb 32                	jmp    1d8d9 <printf_core+0x1149>
   1d8a7:	81 8d 54 ff ff ff 80 	orl    $0x80,-0xac(%ebp)
   1d8ae:	00 00 00 
   1d8b1:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
   1d8b7:	85 c0                	test   %eax,%eax
   1d8b9:	0f 88 c5 03 00 00    	js     1dc84 <printf_core+0x14f4>
   1d8bf:	dd 1c 24             	fstpl  (%esp)
   1d8c2:	89 7c 24 08          	mov    %edi,0x8(%esp)
   1d8c6:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1d8cc:	89 da                	mov    %ebx,%edx
   1d8ce:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
   1d8d4:	e8 77 ec ff ff       	call   1c550 <print_double_fixed>
   1d8d9:	85 c0                	test   %eax,%eax
   1d8db:	0f 88 71 fe ff ff    	js     1d752 <printf_core+0xfc2>
   1d8e1:	8b 95 38 ff ff ff    	mov    -0xc8(%ebp),%edx
   1d8e7:	8b b5 70 ff ff ff    	mov    -0x90(%ebp),%esi
   1d8ed:	01 c2                	add    %eax,%edx
   1d8ef:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
   1d8f5:	89 95 38 ff ff ff    	mov    %edx,-0xc8(%ebp)
   1d8fb:	89 b5 50 ff ff ff    	mov    %esi,-0xb0(%ebp)
   1d901:	89 45 10             	mov    %eax,0x10(%ebp)
   1d904:	e9 cb ee ff ff       	jmp    1c7d4 <printf_core+0x44>
   1d909:	81 8d 54 ff ff ff 80 	orl    $0x80,-0xac(%ebp)
   1d910:	00 00 00 
   1d913:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
   1d919:	85 c0                	test   %eax,%eax
   1d91b:	0f 88 32 03 00 00    	js     1dc53 <printf_core+0x14c3>
   1d921:	dd 1c 24             	fstpl  (%esp)
   1d924:	89 7c 24 08          	mov    %edi,0x8(%esp)
   1d928:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1d92e:	89 da                	mov    %ebx,%edx
   1d930:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
   1d936:	e8 e5 e9 ff ff       	call   1c320 <print_double_scientific>
   1d93b:	eb 9c                	jmp    1d8d9 <printf_core+0x1149>
   1d93d:	c7 04 24 62 00 00 00 	movl   $0x62,(%esp)
   1d944:	c6 85 69 ff ff ff 62 	movb   $0x62,-0x97(%ebp)
   1d94b:	e8 b0 6b ff ff       	call   14500 <ascii_check>
   1d950:	84 c0                	test   %al,%al
   1d952:	8b 47 08             	mov    0x8(%edi),%eax
   1d955:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d959:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1d960:	00 
   1d961:	0f 84 a9 fc ff ff    	je     1d610 <printf_core+0xe80>
   1d967:	8d 85 69 ff ff ff    	lea    -0x97(%ebp),%eax
   1d96d:	89 04 24             	mov    %eax,(%esp)
   1d970:	ff 17                	call   *(%edi)
   1d972:	e9 a2 fc ff ff       	jmp    1d619 <printf_core+0xe89>
   1d977:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)
   1d97e:	c6 85 6d ff ff ff 78 	movb   $0x78,-0x93(%ebp)
   1d985:	e8 76 6b ff ff       	call   14500 <ascii_check>
   1d98a:	84 c0                	test   %al,%al
   1d98c:	8b 47 08             	mov    0x8(%edi),%eax
   1d98f:	89 44 24 08          	mov    %eax,0x8(%esp)
   1d993:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1d99a:	00 
   1d99b:	0f 84 6f fc ff ff    	je     1d610 <printf_core+0xe80>
   1d9a1:	8d 85 6d ff ff ff    	lea    -0x93(%ebp),%eax
   1d9a7:	89 04 24             	mov    %eax,(%esp)
   1d9aa:	ff 17                	call   *(%edi)
   1d9ac:	e9 68 fc ff ff       	jmp    1d619 <printf_core+0xe89>
   1d9b1:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1d9b8:	ff 17                	call   *(%edi)
   1d9ba:	e9 09 fc ff ff       	jmp    1d5c8 <printf_core+0xe38>
   1d9bf:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1d9c6:	ff 17                	call   *(%edi)
   1d9c8:	e9 74 fb ff ff       	jmp    1d541 <printf_core+0xdb1>
   1d9cd:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
   1d9d3:	8b 95 3c ff ff ff    	mov    -0xc4(%ebp),%edx
   1d9d9:	83 f0 ff             	xor    $0xffffffff,%eax
   1d9dc:	8b 8d 3c ff ff ff    	mov    -0xc4(%ebp),%ecx
   1d9e2:	c1 f8 1f             	sar    $0x1f,%eax
   1d9e5:	4a                   	dec    %edx
   1d9e6:	21 c8                	and    %ecx,%eax
   1d9e8:	29 c2                	sub    %eax,%edx
   1d9ea:	89 95 3c ff ff ff    	mov    %edx,-0xc4(%ebp)
   1d9f0:	e9 75 f9 ff ff       	jmp    1d36a <printf_core+0xbda>
   1d9f5:	83 c1 04             	add    $0x4,%ecx
   1d9f8:	89 8d 48 ff ff ff    	mov    %ecx,-0xb8(%ebp)
   1d9fe:	8b 4d 10             	mov    0x10(%ebp),%ecx
   1da01:	8b 09                	mov    (%ecx),%ecx
   1da03:	89 8d 50 ff ff ff    	mov    %ecx,-0xb0(%ebp)
   1da09:	85 c9                	test   %ecx,%ecx
   1da0b:	0f 84 82 02 00 00    	je     1dc93 <printf_core+0x1503>
   1da11:	89 0c 24             	mov    %ecx,(%esp)
   1da14:	e8 97 68 ff ff       	call   142b0 <wstr_length>
   1da19:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%ebp)
   1da1f:	39 c6                	cmp    %eax,%esi
   1da21:	77 0a                	ja     1da2d <printf_core+0x129d>
   1da23:	85 f6                	test   %esi,%esi
   1da25:	74 06                	je     1da2d <printf_core+0x129d>
   1da27:	89 b5 4c ff ff ff    	mov    %esi,-0xb4(%ebp)
   1da2d:	8b b5 4c ff ff ff    	mov    -0xb4(%ebp),%esi
   1da33:	29 f3                	sub    %esi,%ebx
   1da35:	31 f6                	xor    %esi,%esi
   1da37:	89 9d 3c ff ff ff    	mov    %ebx,-0xc4(%ebp)
   1da3d:	f6 85 54 ff ff ff 10 	testb  $0x10,-0xac(%ebp)
   1da44:	0f 84 ba 01 00 00    	je     1dc04 <printf_core+0x1474>
   1da4a:	8b 95 50 ff ff ff    	mov    -0xb0(%ebp),%edx
   1da50:	8b 85 4c ff ff ff    	mov    -0xb4(%ebp),%eax
   1da56:	89 14 24             	mov    %edx,(%esp)
   1da59:	89 44 24 04          	mov    %eax,0x4(%esp)
   1da5d:	e8 2e 67 ff ff       	call   14190 <wstr_lsize>
   1da62:	8b 57 08             	mov    0x8(%edi),%edx
   1da65:	8b 8d 50 ff ff ff    	mov    -0xb0(%ebp),%ecx
   1da6b:	89 54 24 08          	mov    %edx,0x8(%esp)
   1da6f:	89 44 24 04          	mov    %eax,0x4(%esp)
   1da73:	89 0c 24             	mov    %ecx,(%esp)
   1da76:	ff 57 04             	call   *0x4(%edi)
   1da79:	85 c0                	test   %eax,%eax
   1da7b:	0f 88 4d 02 00 00    	js     1dcce <printf_core+0x153e>
   1da81:	01 c6                	add    %eax,%esi
   1da83:	8b 9d 3c ff ff ff    	mov    -0xc4(%ebp),%ebx
   1da89:	eb 1c                	jmp    1daa7 <printf_core+0x1317>
   1da8b:	90                   	nop
   1da8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1da90:	8d 85 5d ff ff ff    	lea    -0xa3(%ebp),%eax
   1da96:	89 04 24             	mov    %eax,(%esp)
   1da99:	ff 17                	call   *(%edi)
   1da9b:	48                   	dec    %eax
   1da9c:	0f 94 c0             	sete   %al
   1da9f:	25 ff 00 00 00       	and    $0xff,%eax
   1daa4:	4b                   	dec    %ebx
   1daa5:	01 c6                	add    %eax,%esi
   1daa7:	85 db                	test   %ebx,%ebx
   1daa9:	0f 8e c2 fb ff ff    	jle    1d671 <printf_core+0xee1>
   1daaf:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
   1dab6:	c6 85 5d ff ff ff 20 	movb   $0x20,-0xa3(%ebp)
   1dabd:	e8 3e 6a ff ff       	call   14500 <ascii_check>
   1dac2:	84 c0                	test   %al,%al
   1dac4:	8b 47 08             	mov    0x8(%edi),%eax
   1dac7:	89 44 24 08          	mov    %eax,0x8(%esp)
   1dacb:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1dad2:	00 
   1dad3:	75 bb                	jne    1da90 <printf_core+0x1300>
   1dad5:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1dadc:	ff 17                	call   *(%edi)
   1dade:	eb bb                	jmp    1da9b <printf_core+0x130b>
   1dae0:	8b 75 10             	mov    0x10(%ebp),%esi
   1dae3:	83 c1 04             	add    $0x4,%ecx
   1dae6:	89 8d 4c ff ff ff    	mov    %ecx,-0xb4(%ebp)
   1daec:	8b 36                	mov    (%esi),%esi
   1daee:	89 b5 50 ff ff ff    	mov    %esi,-0xb0(%ebp)
   1daf4:	31 f6                	xor    %esi,%esi
   1daf6:	f6 85 54 ff ff ff 10 	testb  $0x10,-0xac(%ebp)
   1dafd:	0f 84 a0 00 00 00    	je     1dba3 <printf_core+0x1413>
   1db03:	8b 95 50 ff ff ff    	mov    -0xb0(%ebp),%edx
   1db09:	89 14 24             	mov    %edx,(%esp)
   1db0c:	89 95 74 ff ff ff    	mov    %edx,-0x8c(%ebp)
   1db12:	e8 f9 69 ff ff       	call   14510 <chr_check>
   1db17:	84 c0                	test   %al,%al
   1db19:	8b 47 08             	mov    0x8(%edi),%eax
   1db1c:	89 44 24 08          	mov    %eax,0x8(%esp)
   1db20:	0f 84 17 01 00 00    	je     1dc3d <printf_core+0x14ad>
   1db26:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
   1db2c:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
   1db33:	00 
   1db34:	89 04 24             	mov    %eax,(%esp)
   1db37:	ff 57 04             	call   *0x4(%edi)
   1db3a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1db40:	85 c0                	test   %eax,%eax
   1db42:	0f 9f c0             	setg   %al
   1db45:	25 ff 00 00 00       	and    $0xff,%eax
   1db4a:	4b                   	dec    %ebx
   1db4b:	01 c6                	add    %eax,%esi
   1db4d:	85 db                	test   %ebx,%ebx
   1db4f:	0f 8e ec fb ff ff    	jle    1d741 <printf_core+0xfb1>
   1db55:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
   1db5c:	c6 85 61 ff ff ff 20 	movb   $0x20,-0x9f(%ebp)
   1db63:	e8 98 69 ff ff       	call   14500 <ascii_check>
   1db68:	84 c0                	test   %al,%al
   1db6a:	8b 47 08             	mov    0x8(%edi),%eax
   1db6d:	89 44 24 08          	mov    %eax,0x8(%esp)
   1db71:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1db78:	00 
   1db79:	0f 84 41 01 00 00    	je     1dcc0 <printf_core+0x1530>
   1db7f:	8d 8d 61 ff ff ff    	lea    -0x9f(%ebp),%ecx
   1db85:	89 0c 24             	mov    %ecx,(%esp)
   1db88:	ff 17                	call   *(%edi)
   1db8a:	eb b4                	jmp    1db40 <printf_core+0x13b0>
   1db8c:	8d 85 60 ff ff ff    	lea    -0xa0(%ebp),%eax
   1db92:	89 04 24             	mov    %eax,(%esp)
   1db95:	ff 17                	call   *(%edi)
   1db97:	85 c0                	test   %eax,%eax
   1db99:	0f 9f c0             	setg   %al
   1db9c:	25 ff 00 00 00       	and    $0xff,%eax
   1dba1:	01 c6                	add    %eax,%esi
   1dba3:	4b                   	dec    %ebx
   1dba4:	85 db                	test   %ebx,%ebx
   1dba6:	0f 8e 57 ff ff ff    	jle    1db03 <printf_core+0x1373>
   1dbac:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
   1dbb3:	c6 85 60 ff ff ff 20 	movb   $0x20,-0xa0(%ebp)
   1dbba:	e8 41 69 ff ff       	call   14500 <ascii_check>
   1dbbf:	84 c0                	test   %al,%al
   1dbc1:	8b 47 08             	mov    0x8(%edi),%eax
   1dbc4:	89 44 24 08          	mov    %eax,0x8(%esp)
   1dbc8:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1dbcf:	00 
   1dbd0:	75 ba                	jne    1db8c <printf_core+0x13fc>
   1dbd2:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1dbd9:	ff 17                	call   *(%edi)
   1dbdb:	eb ba                	jmp    1db97 <printf_core+0x1407>
   1dbdd:	8d 85 6c ff ff ff    	lea    -0x94(%ebp),%eax
   1dbe3:	89 04 24             	mov    %eax,(%esp)
   1dbe6:	ff 17                	call   *(%edi)
   1dbe8:	e9 2c fa ff ff       	jmp    1d619 <printf_core+0xe89>
   1dbed:	8d 8d 5c ff ff ff    	lea    -0xa4(%ebp),%ecx
   1dbf3:	89 0c 24             	mov    %ecx,(%esp)
   1dbf6:	ff 17                	call   *(%edi)
   1dbf8:	48                   	dec    %eax
   1dbf9:	0f 94 c0             	sete   %al
   1dbfc:	25 ff 00 00 00       	and    $0xff,%eax
   1dc01:	4b                   	dec    %ebx
   1dc02:	01 c6                	add    %eax,%esi
   1dc04:	85 db                	test   %ebx,%ebx
   1dc06:	0f 8e f0 00 00 00    	jle    1dcfc <printf_core+0x156c>
   1dc0c:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)
   1dc13:	c6 85 5c ff ff ff 20 	movb   $0x20,-0xa4(%ebp)
   1dc1a:	e8 e1 68 ff ff       	call   14500 <ascii_check>
   1dc1f:	84 c0                	test   %al,%al
   1dc21:	8b 47 08             	mov    0x8(%edi),%eax
   1dc24:	89 44 24 08          	mov    %eax,0x8(%esp)
   1dc28:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1dc2f:	00 
   1dc30:	75 bb                	jne    1dbed <printf_core+0x145d>
   1dc32:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1dc39:	ff 17                	call   *(%edi)
   1dc3b:	eb bb                	jmp    1dbf8 <printf_core+0x1468>
   1dc3d:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   1dc44:	00 
   1dc45:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1dc4c:	ff 17                	call   *(%edi)
   1dc4e:	e9 ed fe ff ff       	jmp    1db40 <printf_core+0x13b0>
   1dc53:	c7 85 3c ff ff ff 06 	movl   $0x6,-0xc4(%ebp)
   1dc5a:	00 00 00 
   1dc5d:	e9 bf fc ff ff       	jmp    1d921 <printf_core+0x1191>
   1dc62:	dd d8                	fstp   %st(0)
   1dc64:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1dc6a:	89 7c 24 08          	mov    %edi,0x8(%esp)
   1dc6e:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1dc72:	89 1c 24             	mov    %ebx,(%esp)
   1dc75:	8a 4d 8f             	mov    -0x71(%ebp),%cl
   1dc78:	b0 01                	mov    $0x1,%al
   1dc7a:	e8 d1 e4 ff ff       	call   1c150 <print_special.isra.8>
   1dc7f:	e9 55 fc ff ff       	jmp    1d8d9 <printf_core+0x1149>
   1dc84:	c7 85 3c ff ff ff 06 	movl   $0x6,-0xc4(%ebp)
   1dc8b:	00 00 00 
   1dc8e:	e9 2c fc ff ff       	jmp    1d8bf <printf_core+0x112f>
   1dc93:	8b 77 08             	mov    0x8(%edi),%esi
   1dc96:	8b 1f                	mov    (%edi),%ebx
   1dc98:	c7 04 24 fe dc 02 00 	movl   $0x2dcfe,(%esp)
   1dc9f:	e8 4c 63 ff ff       	call   13ff0 <str_size>
   1dca4:	89 74 24 08          	mov    %esi,0x8(%esp)
   1dca8:	89 44 24 04          	mov    %eax,0x4(%esp)
   1dcac:	c7 04 24 fe dc 02 00 	movl   $0x2dcfe,(%esp)
   1dcb3:	ff d3                	call   *%ebx
   1dcb5:	e9 b9 f9 ff ff       	jmp    1d673 <printf_core+0xee3>
   1dcba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1dcc0:	c7 04 24 6c df 02 00 	movl   $0x2df6c,(%esp)
   1dcc7:	ff 17                	call   *(%edi)
   1dcc9:	e9 72 fe ff ff       	jmp    1db40 <printf_core+0x13b0>
   1dcce:	89 f0                	mov    %esi,%eax
   1dcd0:	f7 d8                	neg    %eax
   1dcd2:	e9 9c f9 ff ff       	jmp    1d673 <printf_core+0xee3>
   1dcd7:	f7 d8                	neg    %eax
   1dcd9:	83 d2 00             	adc    $0x0,%edx
   1dcdc:	89 85 40 ff ff ff    	mov    %eax,-0xc0(%ebp)
   1dce2:	f7 da                	neg    %edx
   1dce4:	89 95 44 ff ff ff    	mov    %edx,-0xbc(%ebp)
   1dcea:	89 4d 10             	mov    %ecx,0x10(%ebp)
   1dced:	81 8d 54 ff ff ff 00 	orl    $0x100,-0xac(%ebp)
   1dcf4:	01 00 00 
   1dcf7:	e9 9f f4 ff ff       	jmp    1d19b <printf_core+0xa0b>
   1dcfc:	8b 85 3c ff ff ff    	mov    -0xc4(%ebp),%eax
   1dd02:	8b 95 3c ff ff ff    	mov    -0xc4(%ebp),%edx
   1dd08:	83 f0 ff             	xor    $0xffffffff,%eax
   1dd0b:	8b 8d 3c ff ff ff    	mov    -0xc4(%ebp),%ecx
   1dd11:	c1 f8 1f             	sar    $0x1f,%eax
   1dd14:	4a                   	dec    %edx
   1dd15:	21 c8                	and    %ecx,%eax
   1dd17:	29 c2                	sub    %eax,%edx
   1dd19:	89 95 3c ff ff ff    	mov    %edx,-0xc4(%ebp)
   1dd1f:	e9 26 fd ff ff       	jmp    1da4a <printf_core+0x12ba>
   1dd24:	dd d8                	fstp   %st(0)
   1dd26:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   1dd2a:	8b 45 8c             	mov    -0x74(%ebp),%eax
   1dd2d:	89 04 24             	mov    %eax,(%esp)
   1dd30:	8b 45 90             	mov    -0x70(%ebp),%eax
   1dd33:	89 44 24 04          	mov    %eax,0x4(%esp)
   1dd37:	8b 45 94             	mov    -0x6c(%ebp),%eax
   1dd3a:	89 44 24 08          	mov    %eax,0x8(%esp)
   1dd3e:	8b 45 98             	mov    -0x68(%ebp),%eax
   1dd41:	89 44 24 0c          	mov    %eax,0xc(%esp)
   1dd45:	8d 75 a0             	lea    -0x60(%ebp),%esi
   1dd48:	8b 45 9c             	mov    -0x64(%ebp),%eax
   1dd4b:	c7 44 24 18 15 00 00 	movl   $0x15,0x18(%esp)
   1dd52:	00 
   1dd53:	89 74 24 14          	mov    %esi,0x14(%esp)
   1dd57:	89 44 24 10          	mov    %eax,0x10(%esp)
   1dd5b:	88 95 20 ff ff ff    	mov    %dl,-0xe0(%ebp)
   1dd61:	e8 ea 01 00 00       	call   1df50 <double_to_short_str>
   1dd66:	8a 95 20 ff ff ff    	mov    -0xe0(%ebp),%dl
   1dd6c:	85 c0                	test   %eax,%eax
   1dd6e:	0f 8e ae 00 00 00    	jle    1de22 <printf_core+0x1692>
   1dd74:	f6 85 54 ff ff ff 10 	testb  $0x10,-0xac(%ebp)
   1dd7b:	74 0f                	je     1dd8c <printf_core+0x15fc>
   1dd7d:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1dd83:	83 e1 fb             	and    $0xfffffffb,%ecx
   1dd86:	89 8d 54 ff ff ff    	mov    %ecx,-0xac(%ebp)
   1dd8c:	88 55 88             	mov    %dl,-0x78(%ebp)
   1dd8f:	8b 95 78 ff ff ff    	mov    -0x88(%ebp),%edx
   1dd95:	89 b5 7c ff ff ff    	mov    %esi,-0x84(%ebp)
   1dd9b:	89 45 80             	mov    %eax,-0x80(%ebp)
   1dd9e:	89 55 84             	mov    %edx,-0x7c(%ebp)
   1dda1:	83 f8 0f             	cmp    $0xf,%eax
   1dda4:	7f 0d                	jg     1ddb3 <printf_core+0x1623>
   1dda6:	83 fa fa             	cmp    $0xfffffffa,%edx
   1dda9:	7c 08                	jl     1ddb3 <printf_core+0x1623>
   1ddab:	8d 0c 10             	lea    (%eax,%edx,1),%ecx
   1ddae:	83 f9 0f             	cmp    $0xf,%ecx
   1ddb1:	7e 44                	jle    1ddf7 <printf_core+0x1667>
   1ddb3:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1ddb9:	8d 50 ff             	lea    -0x1(%eax),%edx
   1ddbc:	89 0c 24             	mov    %ecx,(%esp)
   1ddbf:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1ddc3:	89 d9                	mov    %ebx,%ecx
   1ddc5:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
   1ddcb:	e8 70 da ff ff       	call   1b840 <print_double_str_scient>
   1ddd0:	e9 04 fb ff ff       	jmp    1d8d9 <printf_core+0x1149>
   1ddd5:	b8 01 00 00 00       	mov    $0x1,%eax
   1ddda:	e9 9b fa ff ff       	jmp    1d87a <printf_core+0x10ea>
   1dddf:	83 f2 ff             	xor    $0xffffffff,%edx
   1dde2:	89 7c 24 08          	mov    %edi,0x8(%esp)
   1dde6:	dd 1c 24             	fstpl  (%esp)
   1dde9:	01 d0                	add    %edx,%eax
   1ddeb:	89 da                	mov    %ebx,%edx
   1dded:	e8 5e e7 ff ff       	call   1c550 <print_double_fixed>
   1ddf2:	e9 e2 fa ff ff       	jmp    1d8d9 <printf_core+0x1149>
   1ddf7:	f7 da                	neg    %edx
   1ddf9:	89 d0                	mov    %edx,%eax
   1ddfb:	8b 8d 54 ff ff ff    	mov    -0xac(%ebp),%ecx
   1de01:	83 f0 ff             	xor    $0xffffffff,%eax
   1de04:	89 0c 24             	mov    %ecx,(%esp)
   1de07:	c1 f8 1f             	sar    $0x1f,%eax
   1de0a:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1de0e:	21 c2                	and    %eax,%edx
   1de10:	89 d9                	mov    %ebx,%ecx
   1de12:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
   1de18:	e8 83 de ff ff       	call   1bca0 <print_double_str_fixed>
   1de1d:	e9 b7 fa ff ff       	jmp    1d8d9 <printf_core+0x1149>
   1de22:	c7 44 24 08 8d 04 00 	movl   $0x48d,0x8(%esp)
   1de29:	00 
   1de2a:	c7 44 24 04 83 dc 02 	movl   $0x2dc83,0x4(%esp)
   1de31:	00 
   1de32:	c7 04 24 9c dc 02 00 	movl   $0x2dc9c,(%esp)
   1de39:	e8 72 ca 00 00       	call   2a8b0 <assert_abort>
   1de3e:	dd d8                	fstp   %st(0)
   1de40:	c7 44 24 08 7d 04 00 	movl   $0x47d,0x8(%esp)
   1de47:	00 
   1de48:	c7 44 24 04 83 dc 02 	movl   $0x2dc83,0x4(%esp)
   1de4f:	00 
   1de50:	c7 04 24 9c dc 02 00 	movl   $0x2dc9c,(%esp)
   1de57:	e8 54 ca 00 00       	call   2a8b0 <assert_abort>
   1de5c:	66 90                	xchg   %ax,%ax
   1de5e:	66 90                	xchg   %ax,%ax

0001de60 <extract_ieee_double>:
   1de60:	55                   	push   %ebp
   1de61:	89 e5                	mov    %esp,%ebp
   1de63:	57                   	push   %edi
   1de64:	56                   	push   %esi
   1de65:	53                   	push   %ebx
   1de66:	83 ec 24             	sub    $0x24,%esp
   1de69:	8b 75 10             	mov    0x10(%ebp),%esi
   1de6c:	8b 7d 0c             	mov    0xc(%ebp),%edi
   1de6f:	89 f2                	mov    %esi,%edx
   1de71:	89 f3                	mov    %esi,%ebx
   1de73:	c1 ea 1f             	shr    $0x1f,%edx
   1de76:	81 e3 ff ff 0f 00    	and    $0xfffff,%ebx
   1de7c:	88 55 e0             	mov    %dl,-0x20(%ebp)
   1de7f:	89 f2                	mov    %esi,%edx
   1de81:	81 e2 00 00 f0 7f    	and    $0x7ff00000,%edx
   1de87:	8b 45 08             	mov    0x8(%ebp),%eax
   1de8a:	c1 ea 14             	shr    $0x14,%edx
   1de8d:	89 f9                	mov    %edi,%ecx
   1de8f:	81 fa ff 07 00 00    	cmp    $0x7ff,%edx
   1de95:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1de98:	0f 94 45 de          	sete   -0x22(%ebp)
   1de9c:	0f 84 86 00 00 00    	je     1df28 <extract_ieee_double+0xc8>
   1dea2:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1dea5:	89 fe                	mov    %edi,%esi
   1dea7:	85 d2                	test   %edx,%edx
   1dea9:	89 df                	mov    %ebx,%edi
   1deab:	0f 94 45 df          	sete   -0x21(%ebp)
   1deaf:	74 5f                	je     1df10 <extract_ieee_double+0xb0>
   1deb1:	83 c6 00             	add    $0x0,%esi
   1deb4:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1deb7:	81 d7 00 00 10 00    	adc    $0x100000,%edi
   1debd:	81 ea 33 04 00 00    	sub    $0x433,%edx
   1dec3:	89 55 d8             	mov    %edx,-0x28(%ebp)
   1dec6:	89 ca                	mov    %ecx,%edx
   1dec8:	83 7d d4 01          	cmpl   $0x1,-0x2c(%ebp)
   1decc:	0f 95 45 dd          	setne  -0x23(%ebp)
   1ded0:	09 da                	or     %ebx,%edx
   1ded2:	0f 94 c1             	sete   %cl
   1ded5:	20 4d dd             	and    %cl,-0x23(%ebp)
   1ded8:	31 db                	xor    %ebx,%ebx
   1deda:	31 c9                	xor    %ecx,%ecx
   1dedc:	8a 55 de             	mov    -0x22(%ebp),%dl
   1dedf:	88 48 01             	mov    %cl,0x1(%eax)
   1dee2:	88 10                	mov    %dl,(%eax)
   1dee4:	8a 55 e0             	mov    -0x20(%ebp),%dl
   1dee7:	88 50 02             	mov    %dl,0x2(%eax)
   1deea:	8a 55 df             	mov    -0x21(%ebp),%dl
   1deed:	88 50 04             	mov    %dl,0x4(%eax)
   1def0:	8a 55 dd             	mov    -0x23(%ebp),%dl
   1def3:	88 50 05             	mov    %dl,0x5(%eax)
   1def6:	8b 55 d8             	mov    -0x28(%ebp),%edx
   1def9:	88 58 03             	mov    %bl,0x3(%eax)
   1defc:	89 70 08             	mov    %esi,0x8(%eax)
   1deff:	89 78 0c             	mov    %edi,0xc(%eax)
   1df02:	89 50 10             	mov    %edx,0x10(%eax)
   1df05:	83 c4 24             	add    $0x24,%esp
   1df08:	5b                   	pop    %ebx
   1df09:	5e                   	pop    %esi
   1df0a:	5f                   	pop    %edi
   1df0b:	5d                   	pop    %ebp
   1df0c:	c2 04 00             	ret    $0x4
   1df0f:	90                   	nop
   1df10:	c7 45 d8 ce fb ff ff 	movl   $0xfffffbce,-0x28(%ebp)
   1df17:	c6 45 dd 00          	movb   $0x0,-0x23(%ebp)
   1df1b:	31 c9                	xor    %ecx,%ecx
   1df1d:	31 db                	xor    %ebx,%ebx
   1df1f:	eb bb                	jmp    1dedc <extract_ieee_double+0x7c>
   1df21:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1df28:	09 d9                	or     %ebx,%ecx
   1df2a:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
   1df31:	0f 94 c3             	sete   %bl
   1df34:	0f 95 c1             	setne  %cl
   1df37:	c6 45 dd 00          	movb   $0x0,-0x23(%ebp)
   1df3b:	31 f6                	xor    %esi,%esi
   1df3d:	31 ff                	xor    %edi,%edi
   1df3f:	c6 45 df 01          	movb   $0x1,-0x21(%ebp)
   1df43:	eb 97                	jmp    1dedc <extract_ieee_double+0x7c>
   1df45:	66 90                	xchg   %ax,%ax
   1df47:	66 90                	xchg   %ax,%ax
   1df49:	66 90                	xchg   %ax,%ax
   1df4b:	66 90                	xchg   %ax,%ax
   1df4d:	66 90                	xchg   %ax,%ax
   1df4f:	90                   	nop

0001df50 <double_to_short_str>:
   1df50:	55                   	push   %ebp
   1df51:	89 e5                	mov    %esp,%ebp
   1df53:	57                   	push   %edi
   1df54:	56                   	push   %esi
   1df55:	53                   	push   %ebx
   1df56:	81 ec 9c 00 00 00    	sub    $0x9c,%esp
   1df5c:	8b 45 10             	mov    0x10(%ebp),%eax
   1df5f:	8b 55 14             	mov    0x14(%ebp),%edx
   1df62:	80 7d 08 00          	cmpb   $0x0,0x8(%ebp)
   1df66:	0f 85 cc 03 00 00    	jne    1e338 <double_to_short_str+0x3e8>
   1df6c:	89 d1                	mov    %edx,%ecx
   1df6e:	09 c1                	or     %eax,%ecx
   1df70:	75 36                	jne    1dfa8 <double_to_short_str+0x58>
   1df72:	83 7d 20 01          	cmpl   $0x1,0x20(%ebp)
   1df76:	0f 86 bc 03 00 00    	jbe    1e338 <double_to_short_str+0x3e8>
   1df7c:	8b 5d 1c             	mov    0x1c(%ebp),%ebx
   1df7f:	8b 75 24             	mov    0x24(%ebp),%esi
   1df82:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)
   1df89:	c6 03 30             	movb   $0x30,(%ebx)
   1df8c:	c6 43 01 00          	movb   $0x0,0x1(%ebx)
   1df90:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
   1df96:	8b 45 a0             	mov    -0x60(%ebp),%eax
   1df99:	81 c4 9c 00 00 00    	add    $0x9c,%esp
   1df9f:	5b                   	pop    %ebx
   1dfa0:	5e                   	pop    %esi
   1dfa1:	5f                   	pop    %edi
   1dfa2:	5d                   	pop    %ebp
   1dfa3:	c3                   	ret    
   1dfa4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1dfa8:	8b 7d 18             	mov    0x18(%ebp),%edi
   1dfab:	8a 5d 0d             	mov    0xd(%ebp),%bl
   1dfae:	89 7d d0             	mov    %edi,-0x30(%ebp)
   1dfb1:	85 d2                	test   %edx,%edx
   1dfb3:	0f 88 e6 0e 00 00    	js     1ee9f <double_to_short_str+0xf4f>
   1dfb9:	89 c6                	mov    %eax,%esi
   1dfbb:	89 d7                	mov    %edx,%edi
   1dfbd:	0f a4 f7 01          	shld   $0x1,%esi,%edi
   1dfc1:	01 f6                	add    %esi,%esi
   1dfc3:	89 7d bc             	mov    %edi,-0x44(%ebp)
   1dfc6:	89 75 b8             	mov    %esi,-0x48(%ebp)
   1dfc9:	83 c6 01             	add    $0x1,%esi
   1dfcc:	83 d7 00             	adc    $0x0,%edi
   1dfcf:	89 75 98             	mov    %esi,-0x68(%ebp)
   1dfd2:	89 7d 9c             	mov    %edi,-0x64(%ebp)
   1dfd5:	8b 7d d0             	mov    -0x30(%ebp),%edi
   1dfd8:	4f                   	dec    %edi
   1dfd9:	84 db                	test   %bl,%bl
   1dfdb:	89 7d c0             	mov    %edi,-0x40(%ebp)
   1dfde:	0f 84 6c 03 00 00    	je     1e350 <double_to_short_str+0x400>
   1dfe4:	89 c6                	mov    %eax,%esi
   1dfe6:	89 d7                	mov    %edx,%edi
   1dfe8:	0f a4 f7 02          	shld   $0x2,%esi,%edi
   1dfec:	c1 e6 02             	shl    $0x2,%esi
   1dfef:	89 7d cc             	mov    %edi,-0x34(%ebp)
   1dff2:	89 75 c8             	mov    %esi,-0x38(%ebp)
   1dff5:	8b 7d d0             	mov    -0x30(%ebp),%edi
   1dff8:	83 45 c8 ff          	addl   $0xffffffff,-0x38(%ebp)
   1dffc:	83 55 cc ff          	adcl   $0xffffffff,-0x34(%ebp)
   1e000:	83 ef 02             	sub    $0x2,%edi
   1e003:	89 7d b0             	mov    %edi,-0x50(%ebp)
   1e006:	f7 45 9c 00 00 c0 ff 	testl  $0xffc00000,-0x64(%ebp)
   1e00d:	0f 85 36 0e 00 00    	jne    1ee49 <double_to_short_str+0xef9>
   1e013:	8b 4d d0             	mov    -0x30(%ebp),%ecx
   1e016:	8b 75 98             	mov    -0x68(%ebp),%esi
   1e019:	83 e9 0b             	sub    $0xb,%ecx
   1e01c:	8b 7d 9c             	mov    -0x64(%ebp),%edi
   1e01f:	90                   	nop
   1e020:	0f a4 f7 0a          	shld   $0xa,%esi,%edi
   1e024:	c1 e6 0a             	shl    $0xa,%esi
   1e027:	89 cb                	mov    %ecx,%ebx
   1e029:	83 e9 0a             	sub    $0xa,%ecx
   1e02c:	f7 c7 00 00 c0 ff    	test   $0xffc00000,%edi
   1e032:	74 ec                	je     1e020 <double_to_short_str+0xd0>
   1e034:	89 75 98             	mov    %esi,-0x68(%ebp)
   1e037:	89 7d 9c             	mov    %edi,-0x64(%ebp)
   1e03a:	89 5d b8             	mov    %ebx,-0x48(%ebp)
   1e03d:	8b 7d 9c             	mov    -0x64(%ebp),%edi
   1e040:	85 ff                	test   %edi,%edi
   1e042:	78 22                	js     1e066 <double_to_short_str+0x116>
   1e044:	8b 4d b8             	mov    -0x48(%ebp),%ecx
   1e047:	8b 75 98             	mov    -0x68(%ebp),%esi
   1e04a:	49                   	dec    %ecx
   1e04b:	8b 7d 9c             	mov    -0x64(%ebp),%edi
   1e04e:	66 90                	xchg   %ax,%ax
   1e050:	0f a4 f7 01          	shld   $0x1,%esi,%edi
   1e054:	89 cb                	mov    %ecx,%ebx
   1e056:	01 f6                	add    %esi,%esi
   1e058:	49                   	dec    %ecx
   1e059:	85 ff                	test   %edi,%edi
   1e05b:	79 f3                	jns    1e050 <double_to_short_str+0x100>
   1e05d:	89 75 98             	mov    %esi,-0x68(%ebp)
   1e060:	89 7d 9c             	mov    %edi,-0x64(%ebp)
   1e063:	89 5d b8             	mov    %ebx,-0x48(%ebp)
   1e066:	8b 5d b8             	mov    -0x48(%ebp),%ebx
   1e069:	8b 7d b0             	mov    -0x50(%ebp),%edi
   1e06c:	29 df                	sub    %ebx,%edi
   1e06e:	8b 75 cc             	mov    -0x34(%ebp),%esi
   1e071:	89 f9                	mov    %edi,%ecx
   1e073:	8b 5d c8             	mov    -0x38(%ebp),%ebx
   1e076:	0f a5 de             	shld   %cl,%ebx,%esi
   1e079:	d3 e3                	shl    %cl,%ebx
   1e07b:	f6 c1 20             	test   $0x20,%cl
   1e07e:	74 04                	je     1e084 <double_to_short_str+0x134>
   1e080:	89 de                	mov    %ebx,%esi
   1e082:	31 db                	xor    %ebx,%ebx
   1e084:	89 75 cc             	mov    %esi,-0x34(%ebp)
   1e087:	8b 7d c0             	mov    -0x40(%ebp),%edi
   1e08a:	8b 75 b8             	mov    -0x48(%ebp),%esi
   1e08d:	89 5d c8             	mov    %ebx,-0x38(%ebp)
   1e090:	29 f7                	sub    %esi,%edi
   1e092:	89 f9                	mov    %edi,%ecx
   1e094:	89 ce                	mov    %ecx,%esi
   1e096:	c1 ee 05             	shr    $0x5,%esi
   1e099:	83 e6 01             	and    $0x1,%esi
   1e09c:	89 f3                	mov    %esi,%ebx
   1e09e:	83 f3 01             	xor    $0x1,%ebx
   1e0a1:	d3 e3                	shl    %cl,%ebx
   1e0a3:	d3 e6                	shl    %cl,%esi
   1e0a5:	89 5d a8             	mov    %ebx,-0x58(%ebp)
   1e0a8:	89 75 ac             	mov    %esi,-0x54(%ebp)
   1e0ab:	f7 c2 00 00 c0 ff    	test   $0xffc00000,%edx
   1e0b1:	75 3a                	jne    1e0ed <double_to_short_str+0x19d>
   1e0b3:	8b 4d d0             	mov    -0x30(%ebp),%ecx
   1e0b6:	8b 75 98             	mov    -0x68(%ebp),%esi
   1e0b9:	8b 7d 9c             	mov    -0x64(%ebp),%edi
   1e0bc:	8b 5d b8             	mov    -0x48(%ebp),%ebx
   1e0bf:	90                   	nop
   1e0c0:	0f a4 c2 0a          	shld   $0xa,%eax,%edx
   1e0c4:	c1 e0 0a             	shl    $0xa,%eax
   1e0c7:	83 e9 0a             	sub    $0xa,%ecx
   1e0ca:	f7 c2 00 00 c0 ff    	test   $0xffc00000,%edx
   1e0d0:	74 ee                	je     1e0c0 <double_to_short_str+0x170>
   1e0d2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
   1e0d5:	89 7d 9c             	mov    %edi,-0x64(%ebp)
   1e0d8:	8b 7d d0             	mov    -0x30(%ebp),%edi
   1e0db:	89 75 98             	mov    %esi,-0x68(%ebp)
   1e0de:	4f                   	dec    %edi
   1e0df:	89 5d b8             	mov    %ebx,-0x48(%ebp)
   1e0e2:	89 7d c0             	mov    %edi,-0x40(%ebp)
   1e0e5:	85 d2                	test   %edx,%edx
   1e0e7:	0f 88 54 0d 00 00    	js     1ee41 <double_to_short_str+0xef1>
   1e0ed:	8b 75 98             	mov    -0x68(%ebp),%esi
   1e0f0:	8b 7d 9c             	mov    -0x64(%ebp),%edi
   1e0f3:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   1e0f6:	89 7d c4             	mov    %edi,-0x3c(%ebp)
   1e0f9:	89 75 c0             	mov    %esi,-0x40(%ebp)
   1e0fc:	8b 5d b8             	mov    -0x48(%ebp),%ebx
   1e0ff:	90                   	nop
   1e100:	0f a4 c2 01          	shld   $0x1,%eax,%edx
   1e104:	89 ce                	mov    %ecx,%esi
   1e106:	01 c0                	add    %eax,%eax
   1e108:	49                   	dec    %ecx
   1e109:	85 d2                	test   %edx,%edx
   1e10b:	79 f3                	jns    1e100 <double_to_short_str+0x1b0>
   1e10d:	8b 55 c4             	mov    -0x3c(%ebp),%edx
   1e110:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e113:	89 55 9c             	mov    %edx,-0x64(%ebp)
   1e116:	89 45 98             	mov    %eax,-0x68(%ebp)
   1e119:	89 5d b8             	mov    %ebx,-0x48(%ebp)
   1e11c:	89 f2                	mov    %esi,%edx
   1e11e:	39 55 b8             	cmp    %edx,-0x48(%ebp)
   1e121:	0f 85 b0 0d 00 00    	jne    1eed7 <double_to_short_str+0xf87>
   1e127:	8d 45 d8             	lea    -0x28(%ebp),%eax
   1e12a:	8b 55 b8             	mov    -0x48(%ebp),%edx
   1e12d:	89 44 24 08          	mov    %eax,0x8(%esp)
   1e131:	8d 45 dc             	lea    -0x24(%ebp),%eax
   1e134:	89 44 24 04          	mov    %eax,0x4(%esp)
   1e138:	b8 85 ff ff ff       	mov    $0xffffff85,%eax
   1e13d:	29 d0                	sub    %edx,%eax
   1e13f:	89 04 24             	mov    %eax,(%esp)
   1e142:	e8 39 d1 00 00       	call   2b280 <get_power_of_ten>
   1e147:	8b 5d b8             	mov    -0x48(%ebp),%ebx
   1e14a:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   1e14d:	01 cb                	add    %ecx,%ebx
   1e14f:	83 fb 85             	cmp    $0xffffff85,%ebx
   1e152:	0f 8c f4 0d 00 00    	jl     1ef4c <double_to_short_str+0xffc>
   1e158:	83 fb a1             	cmp    $0xffffffa1,%ebx
   1e15b:	0f 8d cf 0d 00 00    	jge    1ef30 <double_to_short_str+0xfe0>
   1e161:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   1e164:	8b 75 dc             	mov    -0x24(%ebp),%esi
   1e167:	89 4d b8             	mov    %ecx,-0x48(%ebp)
   1e16a:	85 c9                	test   %ecx,%ecx
   1e16c:	0f 89 b9 0d 00 00    	jns    1ef2b <double_to_short_str+0xfdb>
   1e172:	8b 7d 9c             	mov    -0x64(%ebp),%edi
   1e175:	89 f0                	mov    %esi,%eax
   1e177:	f7 e7                	mul    %edi
   1e179:	8b 4d 98             	mov    -0x68(%ebp),%ecx
   1e17c:	89 45 90             	mov    %eax,-0x70(%ebp)
   1e17f:	8b 45 b8             	mov    -0x48(%ebp),%eax
   1e182:	89 55 94             	mov    %edx,-0x6c(%ebp)
   1e185:	f7 e1                	mul    %ecx
   1e187:	89 45 88             	mov    %eax,-0x78(%ebp)
   1e18a:	89 f0                	mov    %esi,%eax
   1e18c:	89 55 8c             	mov    %edx,-0x74(%ebp)
   1e18f:	f7 e1                	mul    %ecx
   1e191:	89 d0                	mov    %edx,%eax
   1e193:	31 d2                	xor    %edx,%edx
   1e195:	89 45 c0             	mov    %eax,-0x40(%ebp)
   1e198:	8b 45 90             	mov    -0x70(%ebp),%eax
   1e19b:	89 55 c4             	mov    %edx,-0x3c(%ebp)
   1e19e:	31 d2                	xor    %edx,%edx
   1e1a0:	01 45 c0             	add    %eax,-0x40(%ebp)
   1e1a3:	8b 4d c8             	mov    -0x38(%ebp),%ecx
   1e1a6:	11 55 c4             	adc    %edx,-0x3c(%ebp)
   1e1a9:	8b 55 cc             	mov    -0x34(%ebp),%edx
   1e1ac:	81 45 c0 00 00 00 80 	addl   $0x80000000,-0x40(%ebp)
   1e1b3:	89 d0                	mov    %edx,%eax
   1e1b5:	89 95 6c ff ff ff    	mov    %edx,-0x94(%ebp)
   1e1bb:	83 55 c4 00          	adcl   $0x0,-0x3c(%ebp)
   1e1bf:	83 c3 40             	add    $0x40,%ebx
   1e1c2:	f7 e6                	mul    %esi
   1e1c4:	89 45 80             	mov    %eax,-0x80(%ebp)
   1e1c7:	8b 45 b8             	mov    -0x48(%ebp),%eax
   1e1ca:	89 55 84             	mov    %edx,-0x7c(%ebp)
   1e1cd:	89 5d a4             	mov    %ebx,-0x5c(%ebp)
   1e1d0:	f7 e1                	mul    %ecx
   1e1d2:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)
   1e1d8:	89 f0                	mov    %esi,%eax
   1e1da:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
   1e1e0:	f7 e1                	mul    %ecx
   1e1e2:	89 d0                	mov    %edx,%eax
   1e1e4:	31 d2                	xor    %edx,%edx
   1e1e6:	89 45 b0             	mov    %eax,-0x50(%ebp)
   1e1e9:	8b 45 80             	mov    -0x80(%ebp),%eax
   1e1ec:	89 55 b4             	mov    %edx,-0x4c(%ebp)
   1e1ef:	31 d2                	xor    %edx,%edx
   1e1f1:	01 45 b0             	add    %eax,-0x50(%ebp)
   1e1f4:	89 f0                	mov    %esi,%eax
   1e1f6:	11 55 b4             	adc    %edx,-0x4c(%ebp)
   1e1f9:	8b 4d ac             	mov    -0x54(%ebp),%ecx
   1e1fc:	81 45 b0 00 00 00 80 	addl   $0x80000000,-0x50(%ebp)
   1e203:	83 55 b4 00          	adcl   $0x0,-0x4c(%ebp)
   1e207:	8b 5d a8             	mov    -0x58(%ebp),%ebx
   1e20a:	f7 e1                	mul    %ecx
   1e20c:	89 45 a8             	mov    %eax,-0x58(%ebp)
   1e20f:	8b 45 b8             	mov    -0x48(%ebp),%eax
   1e212:	89 55 ac             	mov    %edx,-0x54(%ebp)
   1e215:	f7 e3                	mul    %ebx
   1e217:	89 85 70 ff ff ff    	mov    %eax,-0x90(%ebp)
   1e21d:	89 f0                	mov    %esi,%eax
   1e21f:	89 95 74 ff ff ff    	mov    %edx,-0x8c(%ebp)
   1e225:	f7 e3                	mul    %ebx
   1e227:	89 d6                	mov    %edx,%esi
   1e229:	8b 45 a8             	mov    -0x58(%ebp),%eax
   1e22c:	89 f3                	mov    %esi,%ebx
   1e22e:	31 d2                	xor    %edx,%edx
   1e230:	31 f6                	xor    %esi,%esi
   1e232:	01 c3                	add    %eax,%ebx
   1e234:	11 d6                	adc    %edx,%esi
   1e236:	81 c3 00 00 00 80    	add    $0x80000000,%ebx
   1e23c:	83 d6 00             	adc    $0x0,%esi
   1e23f:	8b 95 74 ff ff ff    	mov    -0x8c(%ebp),%edx
   1e245:	89 d0                	mov    %edx,%eax
   1e247:	31 d2                	xor    %edx,%edx
   1e249:	89 55 cc             	mov    %edx,-0x34(%ebp)
   1e24c:	8b 55 ac             	mov    -0x54(%ebp),%edx
   1e24f:	89 45 c8             	mov    %eax,-0x38(%ebp)
   1e252:	89 d0                	mov    %edx,%eax
   1e254:	31 d2                	xor    %edx,%edx
   1e256:	01 45 c8             	add    %eax,-0x38(%ebp)
   1e259:	11 55 cc             	adc    %edx,-0x34(%ebp)
   1e25c:	8b 45 b8             	mov    -0x48(%ebp),%eax
   1e25f:	f7 e1                	mul    %ecx
   1e261:	01 45 c8             	add    %eax,-0x38(%ebp)
   1e264:	8b 85 70 ff ff ff    	mov    -0x90(%ebp),%eax
   1e26a:	11 55 cc             	adc    %edx,-0x34(%ebp)
   1e26d:	31 d2                	xor    %edx,%edx
   1e26f:	01 c3                	add    %eax,%ebx
   1e271:	11 d6                	adc    %edx,%esi
   1e273:	89 f3                	mov    %esi,%ebx
   1e275:	31 f6                	xor    %esi,%esi
   1e277:	01 5d c8             	add    %ebx,-0x38(%ebp)
   1e27a:	11 75 cc             	adc    %esi,-0x34(%ebp)
   1e27d:	8b 45 b8             	mov    -0x48(%ebp),%eax
   1e280:	f7 e7                	mul    %edi
   1e282:	89 45 d0             	mov    %eax,-0x30(%ebp)
   1e285:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1e288:	83 45 d0 ff          	addl   $0xffffffff,-0x30(%ebp)
   1e28c:	83 55 d4 ff          	adcl   $0xffffffff,-0x2c(%ebp)
   1e290:	8b 55 8c             	mov    -0x74(%ebp),%edx
   1e293:	89 d0                	mov    %edx,%eax
   1e295:	31 d2                	xor    %edx,%edx
   1e297:	01 45 d0             	add    %eax,-0x30(%ebp)
   1e29a:	11 55 d4             	adc    %edx,-0x2c(%ebp)
   1e29d:	8b 55 94             	mov    -0x6c(%ebp),%edx
   1e2a0:	89 d0                	mov    %edx,%eax
   1e2a2:	31 d2                	xor    %edx,%edx
   1e2a4:	01 45 d0             	add    %eax,-0x30(%ebp)
   1e2a7:	8b 45 88             	mov    -0x78(%ebp),%eax
   1e2aa:	11 55 d4             	adc    %edx,-0x2c(%ebp)
   1e2ad:	31 d2                	xor    %edx,%edx
   1e2af:	01 45 c0             	add    %eax,-0x40(%ebp)
   1e2b2:	8b 85 6c ff ff ff    	mov    -0x94(%ebp),%eax
   1e2b8:	11 55 c4             	adc    %edx,-0x3c(%ebp)
   1e2bb:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
   1e2be:	89 d9                	mov    %ebx,%ecx
   1e2c0:	31 db                	xor    %ebx,%ebx
   1e2c2:	01 4d d0             	add    %ecx,-0x30(%ebp)
   1e2c5:	11 5d d4             	adc    %ebx,-0x2c(%ebp)
   1e2c8:	f7 65 b8             	mull   -0x48(%ebp)
   1e2cb:	89 45 c0             	mov    %eax,-0x40(%ebp)
   1e2ce:	8b 9d 7c ff ff ff    	mov    -0x84(%ebp),%ebx
   1e2d4:	83 45 c0 01          	addl   $0x1,-0x40(%ebp)
   1e2d8:	89 55 c4             	mov    %edx,-0x3c(%ebp)
   1e2db:	89 d9                	mov    %ebx,%ecx
   1e2dd:	83 55 c4 00          	adcl   $0x0,-0x3c(%ebp)
   1e2e1:	31 db                	xor    %ebx,%ebx
   1e2e3:	01 4d c0             	add    %ecx,-0x40(%ebp)
   1e2e6:	11 5d c4             	adc    %ebx,-0x3c(%ebp)
   1e2e9:	8b 5d 84             	mov    -0x7c(%ebp),%ebx
   1e2ec:	89 d9                	mov    %ebx,%ecx
   1e2ee:	31 db                	xor    %ebx,%ebx
   1e2f0:	01 4d c0             	add    %ecx,-0x40(%ebp)
   1e2f3:	8b 8d 78 ff ff ff    	mov    -0x88(%ebp),%ecx
   1e2f9:	11 5d c4             	adc    %ebx,-0x3c(%ebp)
   1e2fc:	31 db                	xor    %ebx,%ebx
   1e2fe:	01 4d b0             	add    %ecx,-0x50(%ebp)
   1e301:	11 5d b4             	adc    %ebx,-0x4c(%ebp)
   1e304:	8b 5d b4             	mov    -0x4c(%ebp),%ebx
   1e307:	89 d9                	mov    %ebx,%ecx
   1e309:	31 db                	xor    %ebx,%ebx
   1e30b:	01 4d c0             	add    %ecx,-0x40(%ebp)
   1e30e:	11 5d c4             	adc    %ebx,-0x3c(%ebp)
   1e311:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
   1e314:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)
   1e317:	77 5f                	ja     1e378 <double_to_short_str+0x428>
   1e319:	73 55                	jae    1e370 <double_to_short_str+0x420>
   1e31b:	c7 44 24 08 86 00 00 	movl   $0x86,0x8(%esp)
   1e322:	00 
   1e323:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1e32a:	00 
   1e32b:	c7 04 24 fc e0 02 00 	movl   $0x2e0fc,(%esp)
   1e332:	e8 79 c5 00 00       	call   2a8b0 <assert_abort>
   1e337:	90                   	nop
   1e338:	c7 45 a0 ff ff ff ff 	movl   $0xffffffff,-0x60(%ebp)
   1e33f:	8b 45 a0             	mov    -0x60(%ebp),%eax
   1e342:	81 c4 9c 00 00 00    	add    $0x9c,%esp
   1e348:	5b                   	pop    %ebx
   1e349:	5e                   	pop    %esi
   1e34a:	5f                   	pop    %edi
   1e34b:	5d                   	pop    %ebp
   1e34c:	c3                   	ret    
   1e34d:	8d 76 00             	lea    0x0(%esi),%esi
   1e350:	8b 5d b8             	mov    -0x48(%ebp),%ebx
   1e353:	8b 75 bc             	mov    -0x44(%ebp),%esi
   1e356:	83 c3 ff             	add    $0xffffffff,%ebx
   1e359:	89 7d b0             	mov    %edi,-0x50(%ebp)
   1e35c:	83 d6 ff             	adc    $0xffffffff,%esi
   1e35f:	89 5d c8             	mov    %ebx,-0x38(%ebp)
   1e362:	89 75 cc             	mov    %esi,-0x34(%ebp)
   1e365:	e9 9c fc ff ff       	jmp    1e006 <double_to_short_str+0xb6>
   1e36a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1e370:	8b 75 c0             	mov    -0x40(%ebp),%esi
   1e373:	39 75 d0             	cmp    %esi,-0x30(%ebp)
   1e376:	72 a3                	jb     1e31b <double_to_short_str+0x3cb>
   1e378:	8b 5d d0             	mov    -0x30(%ebp),%ebx
   1e37b:	8b 75 d4             	mov    -0x2c(%ebp),%esi
   1e37e:	2b 5d c0             	sub    -0x40(%ebp),%ebx
   1e381:	8b 7d d4             	mov    -0x2c(%ebp),%edi
   1e384:	1b 75 c4             	sbb    -0x3c(%ebp),%esi
   1e387:	89 5d b8             	mov    %ebx,-0x48(%ebp)
   1e38a:	89 75 bc             	mov    %esi,-0x44(%ebp)
   1e38d:	8b 75 d8             	mov    -0x28(%ebp),%esi
   1e390:	89 75 80             	mov    %esi,-0x80(%ebp)
   1e393:	0b 7d d0             	or     -0x30(%ebp),%edi
   1e396:	0f 84 73 0b 00 00    	je     1ef0f <double_to_short_str+0xfbf>
   1e39c:	8b 45 bc             	mov    -0x44(%ebp),%eax
   1e39f:	39 45 cc             	cmp    %eax,-0x34(%ebp)
   1e3a2:	72 2c                	jb     1e3d0 <double_to_short_str+0x480>
   1e3a4:	76 22                	jbe    1e3c8 <double_to_short_str+0x478>
   1e3a6:	c7 44 24 08 5a 01 00 	movl   $0x15a,0x8(%esp)
   1e3ad:	00 
   1e3ae:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1e3b5:	00 
   1e3b6:	c7 04 24 1c e1 02 00 	movl   $0x2e11c,(%esp)
   1e3bd:	e8 ee c4 00 00       	call   2a8b0 <assert_abort>
   1e3c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1e3c8:	8b 55 b8             	mov    -0x48(%ebp),%edx
   1e3cb:	39 55 c8             	cmp    %edx,-0x38(%ebp)
   1e3ce:	77 d6                	ja     1e3a6 <double_to_short_str+0x456>
   1e3d0:	83 7d 20 01          	cmpl   $0x1,0x20(%ebp)
   1e3d4:	0f 86 5e ff ff ff    	jbe    1e338 <double_to_short_str+0x3e8>
   1e3da:	8b 4d a4             	mov    -0x5c(%ebp),%ecx
   1e3dd:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1e3e0:	f7 d9                	neg    %ecx
   1e3e2:	89 4d a4             	mov    %ecx,-0x5c(%ebp)
   1e3e5:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1e3e8:	8a 4d a4             	mov    -0x5c(%ebp),%cl
   1e3eb:	89 ce                	mov    %ecx,%esi
   1e3ed:	c1 ee 05             	shr    $0x5,%esi
   1e3f0:	83 e6 01             	and    $0x1,%esi
   1e3f3:	89 f3                	mov    %esi,%ebx
   1e3f5:	83 f3 01             	xor    $0x1,%ebx
   1e3f8:	d3 e3                	shl    %cl,%ebx
   1e3fa:	d3 e6                	shl    %cl,%esi
   1e3fc:	0f ad d0             	shrd   %cl,%edx,%eax
   1e3ff:	89 5d b0             	mov    %ebx,-0x50(%ebp)
   1e402:	89 75 b4             	mov    %esi,-0x4c(%ebp)
   1e405:	d3 ea                	shr    %cl,%edx
   1e407:	f6 c1 20             	test   $0x20,%cl
   1e40a:	74 02                	je     1e40e <double_to_short_str+0x4be>
   1e40c:	89 d0                	mov    %edx,%eax
   1e40e:	8b 75 b0             	mov    -0x50(%ebp),%esi
   1e411:	8b 7d b4             	mov    -0x4c(%ebp),%edi
   1e414:	83 c6 ff             	add    $0xffffffff,%esi
   1e417:	89 c3                	mov    %eax,%ebx
   1e419:	83 d7 ff             	adc    $0xffffffff,%edi
   1e41c:	89 75 90             	mov    %esi,-0x70(%ebp)
   1e41f:	89 7d 94             	mov    %edi,-0x6c(%ebp)
   1e422:	8b 45 90             	mov    -0x70(%ebp),%eax
   1e425:	8b 75 d0             	mov    -0x30(%ebp),%esi
   1e428:	8b 7d d4             	mov    -0x2c(%ebp),%edi
   1e42b:	21 c6                	and    %eax,%esi
   1e42d:	8b 45 94             	mov    -0x6c(%ebp),%eax
   1e430:	21 c7                	and    %eax,%edi
   1e432:	89 d8                	mov    %ebx,%eax
   1e434:	c1 e8 09             	shr    $0x9,%eax
   1e437:	ba 83 4b 04 00       	mov    $0x44b83,%edx
   1e43c:	f7 e2                	mul    %edx
   1e43e:	c1 ea 07             	shr    $0x7,%edx
   1e441:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
   1e448:	89 d0                	mov    %edx,%eax
   1e44a:	c1 e0 05             	shl    $0x5,%eax
   1e44d:	29 d0                	sub    %edx,%eax
   1e44f:	89 c1                	mov    %eax,%ecx
   1e451:	c1 e1 06             	shl    $0x6,%ecx
   1e454:	29 c1                	sub    %eax,%ecx
   1e456:	8d 04 ca             	lea    (%edx,%ecx,8),%eax
   1e459:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1e45c:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1e45f:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1e462:	c1 e0 09             	shl    $0x9,%eax
   1e465:	29 c3                	sub    %eax,%ebx
   1e467:	85 d2                	test   %edx,%edx
   1e469:	74 0f                	je     1e47a <double_to_short_str+0x52a>
   1e46b:	8b 45 1c             	mov    0x1c(%ebp),%eax
   1e46e:	83 c2 30             	add    $0x30,%edx
   1e471:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)
   1e478:	88 10                	mov    %dl,(%eax)
   1e47a:	8a 4d a4             	mov    -0x5c(%ebp),%cl
   1e47d:	89 d8                	mov    %ebx,%eax
   1e47f:	31 d2                	xor    %edx,%edx
   1e481:	0f a5 c2             	shld   %cl,%eax,%edx
   1e484:	d3 e0                	shl    %cl,%eax
   1e486:	f6 c1 20             	test   $0x20,%cl
   1e489:	74 04                	je     1e48f <double_to_short_str+0x53f>
   1e48b:	89 c2                	mov    %eax,%edx
   1e48d:	31 c0                	xor    %eax,%eax
   1e48f:	01 f0                	add    %esi,%eax
   1e491:	11 fa                	adc    %edi,%edx
   1e493:	3b 55 bc             	cmp    -0x44(%ebp),%edx
   1e496:	0f 83 2c 01 00 00    	jae    1e5c8 <double_to_short_str+0x678>
   1e49c:	b9 00 ca 9a 3b       	mov    $0x3b9aca00,%ecx
   1e4a1:	bb 09 00 00 00       	mov    $0x9,%ebx
   1e4a6:	66 90                	xchg   %ax,%ax
   1e4a8:	8b 75 c0             	mov    -0x40(%ebp),%esi
   1e4ab:	39 75 20             	cmp    %esi,0x20(%ebp)
   1e4ae:	0f 86 3f 0a 00 00    	jbe    1eef3 <double_to_short_str+0xfa3>
   1e4b4:	85 f6                	test   %esi,%esi
   1e4b6:	0f 84 37 0a 00 00    	je     1eef3 <double_to_short_str+0xfa3>
   1e4bc:	8b 75 80             	mov    -0x80(%ebp),%esi
   1e4bf:	8b 7d 24             	mov    0x24(%ebp),%edi
   1e4c2:	29 f3                	sub    %esi,%ebx
   1e4c4:	8b 75 1c             	mov    0x1c(%ebp),%esi
   1e4c7:	89 1f                	mov    %ebx,(%edi)
   1e4c9:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   1e4cc:	89 5d a0             	mov    %ebx,-0x60(%ebp)
   1e4cf:	39 55 cc             	cmp    %edx,-0x34(%ebp)
   1e4d2:	c6 04 1e 00          	movb   $0x0,(%esi,%ebx,1)
   1e4d6:	0f 82 ba fa ff ff    	jb     1df96 <double_to_short_str+0x46>
   1e4dc:	77 09                	ja     1e4e7 <double_to_short_str+0x597>
   1e4de:	39 45 c8             	cmp    %eax,-0x38(%ebp)
   1e4e1:	0f 86 af fa ff ff    	jbe    1df96 <double_to_short_str+0x46>
   1e4e7:	89 4d 98             	mov    %ecx,-0x68(%ebp)
   1e4ea:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%ebp)
   1e4f1:	8a 4d a4             	mov    -0x5c(%ebp),%cl
   1e4f4:	8b 5d 98             	mov    -0x68(%ebp),%ebx
   1e4f7:	8b 75 9c             	mov    -0x64(%ebp),%esi
   1e4fa:	0f a5 de             	shld   %cl,%ebx,%esi
   1e4fd:	d3 e3                	shl    %cl,%ebx
   1e4ff:	f6 c1 20             	test   $0x20,%cl
   1e502:	74 04                	je     1e508 <double_to_short_str+0x5b8>
   1e504:	89 de                	mov    %ebx,%esi
   1e506:	31 db                	xor    %ebx,%ebx
   1e508:	89 5d 98             	mov    %ebx,-0x68(%ebp)
   1e50b:	01 c3                	add    %eax,%ebx
   1e50d:	89 75 9c             	mov    %esi,-0x64(%ebp)
   1e510:	89 5d b0             	mov    %ebx,-0x50(%ebp)
   1e513:	11 d6                	adc    %edx,%esi
   1e515:	89 75 b4             	mov    %esi,-0x4c(%ebp)
   1e518:	39 75 bc             	cmp    %esi,-0x44(%ebp)
   1e51b:	77 0f                	ja     1e52c <double_to_short_str+0x5dc>
   1e51d:	0f 82 73 fa ff ff    	jb     1df96 <double_to_short_str+0x46>
   1e523:	39 5d b8             	cmp    %ebx,-0x48(%ebp)
   1e526:	0f 86 6a fa ff ff    	jbe    1df96 <double_to_short_str+0x46>
   1e52c:	8b 5d b4             	mov    -0x4c(%ebp),%ebx
   1e52f:	39 5d cc             	cmp    %ebx,-0x34(%ebp)
   1e532:	77 12                	ja     1e546 <double_to_short_str+0x5f6>
   1e534:	0f 82 1a 09 00 00    	jb     1ee54 <double_to_short_str+0xf04>
   1e53a:	8b 75 b0             	mov    -0x50(%ebp),%esi
   1e53d:	39 75 c8             	cmp    %esi,-0x38(%ebp)
   1e540:	0f 86 0e 09 00 00    	jbe    1ee54 <double_to_short_str+0xf04>
   1e546:	8b 75 1c             	mov    0x1c(%ebp),%esi
   1e549:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   1e54c:	8d 5c 1e ff          	lea    -0x1(%esi,%ebx,1),%ebx
   1e550:	89 5d a8             	mov    %ebx,-0x58(%ebp)
   1e553:	8a 0b                	mov    (%ebx),%cl
   1e555:	88 4d d0             	mov    %cl,-0x30(%ebp)
   1e558:	80 f9 30             	cmp    $0x30,%cl
   1e55b:	0f 8e 00 08 00 00    	jle    1ed61 <double_to_short_str+0xe11>
   1e561:	8b 75 9c             	mov    -0x64(%ebp),%esi
   1e564:	0b 75 98             	or     -0x68(%ebp),%esi
   1e567:	0f 84 16 09 00 00    	je     1ee83 <double_to_short_str+0xf33>
   1e56d:	8b 4d 98             	mov    -0x68(%ebp),%ecx
   1e570:	8b 5d 9c             	mov    -0x64(%ebp),%ebx
   1e573:	0f a4 cb 01          	shld   $0x1,%ecx,%ebx
   1e577:	01 c9                	add    %ecx,%ecx
   1e579:	8b 75 c8             	mov    -0x38(%ebp),%esi
   1e57c:	01 c1                	add    %eax,%ecx
   1e57e:	8b 7d cc             	mov    -0x34(%ebp),%edi
   1e581:	11 d3                	adc    %edx,%ebx
   1e583:	29 c6                	sub    %eax,%esi
   1e585:	19 d7                	sbb    %edx,%edi
   1e587:	89 f0                	mov    %esi,%eax
   1e589:	2b 45 98             	sub    -0x68(%ebp),%eax
   1e58c:	89 fa                	mov    %edi,%edx
   1e58e:	1b 55 9c             	sbb    -0x64(%ebp),%edx
   1e591:	89 c6                	mov    %eax,%esi
   1e593:	89 d7                	mov    %edx,%edi
   1e595:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   1e598:	fe 4d d0             	decb   -0x30(%ebp)
   1e59b:	39 45 cc             	cmp    %eax,-0x34(%ebp)
   1e59e:	0f 87 dc 07 00 00    	ja     1ed80 <double_to_short_str+0xe30>
   1e5a4:	72 0c                	jb     1e5b2 <double_to_short_str+0x662>
   1e5a6:	8b 55 b0             	mov    -0x50(%ebp),%edx
   1e5a9:	39 55 c8             	cmp    %edx,-0x38(%ebp)
   1e5ac:	0f 87 ce 07 00 00    	ja     1ed80 <double_to_short_str+0xe30>
   1e5b2:	8b 5d a8             	mov    -0x58(%ebp),%ebx
   1e5b5:	8a 4d d0             	mov    -0x30(%ebp),%cl
   1e5b8:	8b 45 a0             	mov    -0x60(%ebp),%eax
   1e5bb:	88 0b                	mov    %cl,(%ebx)
   1e5bd:	81 c4 9c 00 00 00    	add    $0x9c,%esp
   1e5c3:	5b                   	pop    %ebx
   1e5c4:	5e                   	pop    %esi
   1e5c5:	5f                   	pop    %edi
   1e5c6:	5d                   	pop    %ebp
   1e5c7:	c3                   	ret    
   1e5c8:	77 09                	ja     1e5d3 <double_to_short_str+0x683>
   1e5ca:	3b 45 b8             	cmp    -0x48(%ebp),%eax
   1e5cd:	0f 86 c9 fe ff ff    	jbe    1e49c <double_to_short_str+0x54c>
   1e5d3:	89 d8                	mov    %ebx,%eax
   1e5d5:	ba 89 3b e6 55       	mov    $0x55e63b89,%edx
   1e5da:	f7 e2                	mul    %edx
   1e5dc:	c1 ea 19             	shr    $0x19,%edx
   1e5df:	89 d0                	mov    %edx,%eax
   1e5e1:	c1 e0 05             	shl    $0x5,%eax
   1e5e4:	29 d0                	sub    %edx,%eax
   1e5e6:	89 c1                	mov    %eax,%ecx
   1e5e8:	c1 e1 06             	shl    $0x6,%ecx
   1e5eb:	29 c1                	sub    %eax,%ecx
   1e5ed:	8d 04 ca             	lea    (%edx,%ecx,8),%eax
   1e5f0:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1e5f3:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1e5f6:	c1 e0 08             	shl    $0x8,%eax
   1e5f9:	29 c3                	sub    %eax,%ebx
   1e5fb:	f6 45 c0 01          	testb  $0x1,-0x40(%ebp)
   1e5ff:	75 04                	jne    1e605 <double_to_short_str+0x6b5>
   1e601:	85 d2                	test   %edx,%edx
   1e603:	74 53                	je     1e658 <double_to_short_str+0x708>
   1e605:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e608:	83 c0 02             	add    $0x2,%eax
   1e60b:	39 45 20             	cmp    %eax,0x20(%ebp)
   1e60e:	0f 82 24 fd ff ff    	jb     1e338 <double_to_short_str+0x3e8>
   1e614:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   1e617:	8b 45 1c             	mov    0x1c(%ebp),%eax
   1e61a:	83 c2 30             	add    $0x30,%edx
   1e61d:	88 14 08             	mov    %dl,(%eax,%ecx,1)
   1e620:	41                   	inc    %ecx
   1e621:	89 4d c0             	mov    %ecx,-0x40(%ebp)
   1e624:	8a 4d a4             	mov    -0x5c(%ebp),%cl
   1e627:	89 d8                	mov    %ebx,%eax
   1e629:	31 d2                	xor    %edx,%edx
   1e62b:	0f a5 c2             	shld   %cl,%eax,%edx
   1e62e:	d3 e0                	shl    %cl,%eax
   1e630:	f6 c1 20             	test   $0x20,%cl
   1e633:	74 04                	je     1e639 <double_to_short_str+0x6e9>
   1e635:	89 c2                	mov    %eax,%edx
   1e637:	31 c0                	xor    %eax,%eax
   1e639:	01 f0                	add    %esi,%eax
   1e63b:	11 fa                	adc    %edi,%edx
   1e63d:	39 55 bc             	cmp    %edx,-0x44(%ebp)
   1e640:	76 26                	jbe    1e668 <double_to_short_str+0x718>
   1e642:	b9 00 e1 f5 05       	mov    $0x5f5e100,%ecx
   1e647:	bb 08 00 00 00       	mov    $0x8,%ebx
   1e64c:	e9 57 fe ff ff       	jmp    1e4a8 <double_to_short_str+0x558>
   1e651:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e658:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
   1e65f:	eb c3                	jmp    1e624 <double_to_short_str+0x6d4>
   1e661:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e668:	72 05                	jb     1e66f <double_to_short_str+0x71f>
   1e66a:	39 45 b8             	cmp    %eax,-0x48(%ebp)
   1e66d:	73 d3                	jae    1e642 <double_to_short_str+0x6f2>
   1e66f:	89 d8                	mov    %ebx,%eax
   1e671:	ba 6b ca 5f 6b       	mov    $0x6b5fca6b,%edx
   1e676:	f7 e2                	mul    %edx
   1e678:	c1 ea 16             	shr    $0x16,%edx
   1e67b:	89 d0                	mov    %edx,%eax
   1e67d:	c1 e0 05             	shl    $0x5,%eax
   1e680:	29 d0                	sub    %edx,%eax
   1e682:	89 c1                	mov    %eax,%ecx
   1e684:	c1 e1 06             	shl    $0x6,%ecx
   1e687:	29 c1                	sub    %eax,%ecx
   1e689:	8d 04 ca             	lea    (%edx,%ecx,8),%eax
   1e68c:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1e68f:	c1 e0 07             	shl    $0x7,%eax
   1e692:	29 c3                	sub    %eax,%ebx
   1e694:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e697:	85 c0                	test   %eax,%eax
   1e699:	75 04                	jne    1e69f <double_to_short_str+0x74f>
   1e69b:	85 d2                	test   %edx,%edx
   1e69d:	74 51                	je     1e6f0 <double_to_short_str+0x7a0>
   1e69f:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e6a2:	83 c0 02             	add    $0x2,%eax
   1e6a5:	39 45 20             	cmp    %eax,0x20(%ebp)
   1e6a8:	0f 82 8a fc ff ff    	jb     1e338 <double_to_short_str+0x3e8>
   1e6ae:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   1e6b1:	8b 45 1c             	mov    0x1c(%ebp),%eax
   1e6b4:	83 c2 30             	add    $0x30,%edx
   1e6b7:	88 14 08             	mov    %dl,(%eax,%ecx,1)
   1e6ba:	41                   	inc    %ecx
   1e6bb:	89 4d c0             	mov    %ecx,-0x40(%ebp)
   1e6be:	8a 4d a4             	mov    -0x5c(%ebp),%cl
   1e6c1:	89 d8                	mov    %ebx,%eax
   1e6c3:	31 d2                	xor    %edx,%edx
   1e6c5:	0f a5 c2             	shld   %cl,%eax,%edx
   1e6c8:	d3 e0                	shl    %cl,%eax
   1e6ca:	f6 c1 20             	test   $0x20,%cl
   1e6cd:	74 04                	je     1e6d3 <double_to_short_str+0x783>
   1e6cf:	89 c2                	mov    %eax,%edx
   1e6d1:	31 c0                	xor    %eax,%eax
   1e6d3:	01 f0                	add    %esi,%eax
   1e6d5:	11 fa                	adc    %edi,%edx
   1e6d7:	39 55 bc             	cmp    %edx,-0x44(%ebp)
   1e6da:	76 24                	jbe    1e700 <double_to_short_str+0x7b0>
   1e6dc:	b9 80 96 98 00       	mov    $0x989680,%ecx
   1e6e1:	bb 07 00 00 00       	mov    $0x7,%ebx
   1e6e6:	e9 bd fd ff ff       	jmp    1e4a8 <double_to_short_str+0x558>
   1e6eb:	90                   	nop
   1e6ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1e6f0:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
   1e6f7:	eb c5                	jmp    1e6be <double_to_short_str+0x76e>
   1e6f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e700:	72 05                	jb     1e707 <double_to_short_str+0x7b7>
   1e702:	39 45 b8             	cmp    %eax,-0x48(%ebp)
   1e705:	73 d5                	jae    1e6dc <double_to_short_str+0x78c>
   1e707:	89 d8                	mov    %ebx,%eax
   1e709:	ba 83 de 1b 43       	mov    $0x431bde83,%edx
   1e70e:	f7 e2                	mul    %edx
   1e710:	c1 ea 12             	shr    $0x12,%edx
   1e713:	89 d0                	mov    %edx,%eax
   1e715:	c1 e0 05             	shl    $0x5,%eax
   1e718:	29 d0                	sub    %edx,%eax
   1e71a:	89 c1                	mov    %eax,%ecx
   1e71c:	c1 e1 06             	shl    $0x6,%ecx
   1e71f:	29 c1                	sub    %eax,%ecx
   1e721:	8d 04 ca             	lea    (%edx,%ecx,8),%eax
   1e724:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   1e727:	c1 e0 06             	shl    $0x6,%eax
   1e72a:	29 c3                	sub    %eax,%ebx
   1e72c:	85 c9                	test   %ecx,%ecx
   1e72e:	75 04                	jne    1e734 <double_to_short_str+0x7e4>
   1e730:	85 d2                	test   %edx,%edx
   1e732:	74 4c                	je     1e780 <double_to_short_str+0x830>
   1e734:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e737:	83 c0 02             	add    $0x2,%eax
   1e73a:	39 45 20             	cmp    %eax,0x20(%ebp)
   1e73d:	0f 82 f5 fb ff ff    	jb     1e338 <double_to_short_str+0x3e8>
   1e743:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   1e746:	8b 45 1c             	mov    0x1c(%ebp),%eax
   1e749:	83 c2 30             	add    $0x30,%edx
   1e74c:	88 14 08             	mov    %dl,(%eax,%ecx,1)
   1e74f:	41                   	inc    %ecx
   1e750:	89 4d c0             	mov    %ecx,-0x40(%ebp)
   1e753:	8a 4d a4             	mov    -0x5c(%ebp),%cl
   1e756:	89 d8                	mov    %ebx,%eax
   1e758:	31 d2                	xor    %edx,%edx
   1e75a:	0f a5 c2             	shld   %cl,%eax,%edx
   1e75d:	d3 e0                	shl    %cl,%eax
   1e75f:	f6 c1 20             	test   $0x20,%cl
   1e762:	74 04                	je     1e768 <double_to_short_str+0x818>
   1e764:	89 c2                	mov    %eax,%edx
   1e766:	31 c0                	xor    %eax,%eax
   1e768:	01 f0                	add    %esi,%eax
   1e76a:	11 fa                	adc    %edi,%edx
   1e76c:	39 55 bc             	cmp    %edx,-0x44(%ebp)
   1e76f:	76 1f                	jbe    1e790 <double_to_short_str+0x840>
   1e771:	b9 40 42 0f 00       	mov    $0xf4240,%ecx
   1e776:	bb 06 00 00 00       	mov    $0x6,%ebx
   1e77b:	e9 28 fd ff ff       	jmp    1e4a8 <double_to_short_str+0x558>
   1e780:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
   1e787:	eb ca                	jmp    1e753 <double_to_short_str+0x803>
   1e789:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e790:	72 05                	jb     1e797 <double_to_short_str+0x847>
   1e792:	39 45 b8             	cmp    %eax,-0x48(%ebp)
   1e795:	73 da                	jae    1e771 <double_to_short_str+0x821>
   1e797:	89 d8                	mov    %ebx,%eax
   1e799:	ba c5 5a 7c 0a       	mov    $0xa7c5ac5,%edx
   1e79e:	c1 e8 05             	shr    $0x5,%eax
   1e7a1:	f7 e2                	mul    %edx
   1e7a3:	c1 ea 07             	shr    $0x7,%edx
   1e7a6:	8d 04 52             	lea    (%edx,%edx,2),%eax
   1e7a9:	89 c1                	mov    %eax,%ecx
   1e7ab:	c1 e1 06             	shl    $0x6,%ecx
   1e7ae:	01 c8                	add    %ecx,%eax
   1e7b0:	8d 04 82             	lea    (%edx,%eax,4),%eax
   1e7b3:	8d 04 82             	lea    (%edx,%eax,4),%eax
   1e7b6:	c1 e0 05             	shl    $0x5,%eax
   1e7b9:	29 c3                	sub    %eax,%ebx
   1e7bb:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e7be:	85 c0                	test   %eax,%eax
   1e7c0:	75 04                	jne    1e7c6 <double_to_short_str+0x876>
   1e7c2:	85 d2                	test   %edx,%edx
   1e7c4:	74 52                	je     1e818 <double_to_short_str+0x8c8>
   1e7c6:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e7c9:	83 c0 02             	add    $0x2,%eax
   1e7cc:	39 45 20             	cmp    %eax,0x20(%ebp)
   1e7cf:	0f 82 63 fb ff ff    	jb     1e338 <double_to_short_str+0x3e8>
   1e7d5:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e7d8:	8b 4d 1c             	mov    0x1c(%ebp),%ecx
   1e7db:	83 c2 30             	add    $0x30,%edx
   1e7de:	88 14 01             	mov    %dl,(%ecx,%eax,1)
   1e7e1:	40                   	inc    %eax
   1e7e2:	89 45 c0             	mov    %eax,-0x40(%ebp)
   1e7e5:	8a 4d a4             	mov    -0x5c(%ebp),%cl
   1e7e8:	89 d8                	mov    %ebx,%eax
   1e7ea:	31 d2                	xor    %edx,%edx
   1e7ec:	0f a5 c2             	shld   %cl,%eax,%edx
   1e7ef:	d3 e0                	shl    %cl,%eax
   1e7f1:	f6 c1 20             	test   $0x20,%cl
   1e7f4:	74 04                	je     1e7fa <double_to_short_str+0x8aa>
   1e7f6:	89 c2                	mov    %eax,%edx
   1e7f8:	31 c0                	xor    %eax,%eax
   1e7fa:	01 f0                	add    %esi,%eax
   1e7fc:	11 fa                	adc    %edi,%edx
   1e7fe:	39 55 bc             	cmp    %edx,-0x44(%ebp)
   1e801:	76 25                	jbe    1e828 <double_to_short_str+0x8d8>
   1e803:	b9 a0 86 01 00       	mov    $0x186a0,%ecx
   1e808:	bb 05 00 00 00       	mov    $0x5,%ebx
   1e80d:	e9 96 fc ff ff       	jmp    1e4a8 <double_to_short_str+0x558>
   1e812:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1e818:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
   1e81f:	eb c4                	jmp    1e7e5 <double_to_short_str+0x895>
   1e821:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e828:	72 05                	jb     1e82f <double_to_short_str+0x8df>
   1e82a:	39 45 b8             	cmp    %eax,-0x48(%ebp)
   1e82d:	73 d4                	jae    1e803 <double_to_short_str+0x8b3>
   1e82f:	89 d8                	mov    %ebx,%eax
   1e831:	ba 59 17 b7 d1       	mov    $0xd1b71759,%edx
   1e836:	f7 e2                	mul    %edx
   1e838:	c1 ea 0d             	shr    $0xd,%edx
   1e83b:	8d 04 92             	lea    (%edx,%edx,4),%eax
   1e83e:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1e841:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1e844:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1e847:	c1 e0 04             	shl    $0x4,%eax
   1e84a:	29 c3                	sub    %eax,%ebx
   1e84c:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e84f:	85 c0                	test   %eax,%eax
   1e851:	75 04                	jne    1e857 <double_to_short_str+0x907>
   1e853:	85 d2                	test   %edx,%edx
   1e855:	74 51                	je     1e8a8 <double_to_short_str+0x958>
   1e857:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e85a:	83 c0 02             	add    $0x2,%eax
   1e85d:	39 45 20             	cmp    %eax,0x20(%ebp)
   1e860:	0f 82 d2 fa ff ff    	jb     1e338 <double_to_short_str+0x3e8>
   1e866:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   1e869:	8b 45 1c             	mov    0x1c(%ebp),%eax
   1e86c:	83 c2 30             	add    $0x30,%edx
   1e86f:	88 14 08             	mov    %dl,(%eax,%ecx,1)
   1e872:	41                   	inc    %ecx
   1e873:	89 4d c0             	mov    %ecx,-0x40(%ebp)
   1e876:	8a 4d a4             	mov    -0x5c(%ebp),%cl
   1e879:	89 d8                	mov    %ebx,%eax
   1e87b:	31 d2                	xor    %edx,%edx
   1e87d:	0f a5 c2             	shld   %cl,%eax,%edx
   1e880:	d3 e0                	shl    %cl,%eax
   1e882:	f6 c1 20             	test   $0x20,%cl
   1e885:	74 04                	je     1e88b <double_to_short_str+0x93b>
   1e887:	89 c2                	mov    %eax,%edx
   1e889:	31 c0                	xor    %eax,%eax
   1e88b:	01 f0                	add    %esi,%eax
   1e88d:	11 fa                	adc    %edi,%edx
   1e88f:	39 55 bc             	cmp    %edx,-0x44(%ebp)
   1e892:	76 24                	jbe    1e8b8 <double_to_short_str+0x968>
   1e894:	b9 10 27 00 00       	mov    $0x2710,%ecx
   1e899:	bb 04 00 00 00       	mov    $0x4,%ebx
   1e89e:	e9 05 fc ff ff       	jmp    1e4a8 <double_to_short_str+0x558>
   1e8a3:	90                   	nop
   1e8a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1e8a8:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
   1e8af:	eb c5                	jmp    1e876 <double_to_short_str+0x926>
   1e8b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e8b8:	72 05                	jb     1e8bf <double_to_short_str+0x96f>
   1e8ba:	39 45 b8             	cmp    %eax,-0x48(%ebp)
   1e8bd:	73 d5                	jae    1e894 <double_to_short_str+0x944>
   1e8bf:	89 d8                	mov    %ebx,%eax
   1e8c1:	ba d3 4d 62 10       	mov    $0x10624dd3,%edx
   1e8c6:	f7 e2                	mul    %edx
   1e8c8:	c1 ea 06             	shr    $0x6,%edx
   1e8cb:	8d 04 92             	lea    (%edx,%edx,4),%eax
   1e8ce:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1e8d1:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1e8d4:	c1 e0 03             	shl    $0x3,%eax
   1e8d7:	29 c3                	sub    %eax,%ebx
   1e8d9:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e8dc:	85 c0                	test   %eax,%eax
   1e8de:	75 04                	jne    1e8e4 <double_to_short_str+0x994>
   1e8e0:	85 d2                	test   %edx,%edx
   1e8e2:	74 4c                	je     1e930 <double_to_short_str+0x9e0>
   1e8e4:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e8e7:	83 c0 02             	add    $0x2,%eax
   1e8ea:	39 45 20             	cmp    %eax,0x20(%ebp)
   1e8ed:	0f 82 45 fa ff ff    	jb     1e338 <double_to_short_str+0x3e8>
   1e8f3:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   1e8f6:	8b 45 1c             	mov    0x1c(%ebp),%eax
   1e8f9:	83 c2 30             	add    $0x30,%edx
   1e8fc:	88 14 08             	mov    %dl,(%eax,%ecx,1)
   1e8ff:	41                   	inc    %ecx
   1e900:	89 4d c0             	mov    %ecx,-0x40(%ebp)
   1e903:	8a 4d a4             	mov    -0x5c(%ebp),%cl
   1e906:	89 d8                	mov    %ebx,%eax
   1e908:	31 d2                	xor    %edx,%edx
   1e90a:	0f a5 c2             	shld   %cl,%eax,%edx
   1e90d:	d3 e0                	shl    %cl,%eax
   1e90f:	f6 c1 20             	test   $0x20,%cl
   1e912:	74 04                	je     1e918 <double_to_short_str+0x9c8>
   1e914:	89 c2                	mov    %eax,%edx
   1e916:	31 c0                	xor    %eax,%eax
   1e918:	01 f0                	add    %esi,%eax
   1e91a:	11 fa                	adc    %edi,%edx
   1e91c:	39 55 bc             	cmp    %edx,-0x44(%ebp)
   1e91f:	76 1f                	jbe    1e940 <double_to_short_str+0x9f0>
   1e921:	b9 e8 03 00 00       	mov    $0x3e8,%ecx
   1e926:	bb 03 00 00 00       	mov    $0x3,%ebx
   1e92b:	e9 78 fb ff ff       	jmp    1e4a8 <double_to_short_str+0x558>
   1e930:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
   1e937:	eb ca                	jmp    1e903 <double_to_short_str+0x9b3>
   1e939:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e940:	72 05                	jb     1e947 <double_to_short_str+0x9f7>
   1e942:	39 45 b8             	cmp    %eax,-0x48(%ebp)
   1e945:	73 da                	jae    1e921 <double_to_short_str+0x9d1>
   1e947:	89 d8                	mov    %ebx,%eax
   1e949:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
   1e94e:	f7 e2                	mul    %edx
   1e950:	c1 ea 05             	shr    $0x5,%edx
   1e953:	8d 04 92             	lea    (%edx,%edx,4),%eax
   1e956:	8d 04 80             	lea    (%eax,%eax,4),%eax
   1e959:	c1 e0 02             	shl    $0x2,%eax
   1e95c:	29 c3                	sub    %eax,%ebx
   1e95e:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e961:	85 c0                	test   %eax,%eax
   1e963:	75 04                	jne    1e969 <double_to_short_str+0xa19>
   1e965:	85 d2                	test   %edx,%edx
   1e967:	74 4f                	je     1e9b8 <double_to_short_str+0xa68>
   1e969:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e96c:	83 c0 02             	add    $0x2,%eax
   1e96f:	39 45 20             	cmp    %eax,0x20(%ebp)
   1e972:	0f 82 c0 f9 ff ff    	jb     1e338 <double_to_short_str+0x3e8>
   1e978:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   1e97b:	8b 45 1c             	mov    0x1c(%ebp),%eax
   1e97e:	83 c2 30             	add    $0x30,%edx
   1e981:	88 14 08             	mov    %dl,(%eax,%ecx,1)
   1e984:	41                   	inc    %ecx
   1e985:	89 4d c0             	mov    %ecx,-0x40(%ebp)
   1e988:	8a 4d a4             	mov    -0x5c(%ebp),%cl
   1e98b:	89 d8                	mov    %ebx,%eax
   1e98d:	31 d2                	xor    %edx,%edx
   1e98f:	0f a5 c2             	shld   %cl,%eax,%edx
   1e992:	d3 e0                	shl    %cl,%eax
   1e994:	f6 c1 20             	test   $0x20,%cl
   1e997:	74 04                	je     1e99d <double_to_short_str+0xa4d>
   1e999:	89 c2                	mov    %eax,%edx
   1e99b:	31 c0                	xor    %eax,%eax
   1e99d:	01 f0                	add    %esi,%eax
   1e99f:	11 fa                	adc    %edi,%edx
   1e9a1:	39 55 bc             	cmp    %edx,-0x44(%ebp)
   1e9a4:	76 22                	jbe    1e9c8 <double_to_short_str+0xa78>
   1e9a6:	b9 64 00 00 00       	mov    $0x64,%ecx
   1e9ab:	bb 02 00 00 00       	mov    $0x2,%ebx
   1e9b0:	e9 f3 fa ff ff       	jmp    1e4a8 <double_to_short_str+0x558>
   1e9b5:	8d 76 00             	lea    0x0(%esi),%esi
   1e9b8:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
   1e9bf:	eb c7                	jmp    1e988 <double_to_short_str+0xa38>
   1e9c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1e9c8:	0f 83 fe 02 00 00    	jae    1eccc <double_to_short_str+0xd7c>
   1e9ce:	89 d8                	mov    %ebx,%eax
   1e9d0:	ba cd cc cc cc       	mov    $0xcccccccd,%edx
   1e9d5:	f7 e2                	mul    %edx
   1e9d7:	c1 ea 03             	shr    $0x3,%edx
   1e9da:	8d 04 92             	lea    (%edx,%edx,4),%eax
   1e9dd:	01 c0                	add    %eax,%eax
   1e9df:	29 c3                	sub    %eax,%ebx
   1e9e1:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1e9e4:	85 c0                	test   %eax,%eax
   1e9e6:	75 38                	jne    1ea20 <double_to_short_str+0xad0>
   1e9e8:	85 d2                	test   %edx,%edx
   1e9ea:	75 34                	jne    1ea20 <double_to_short_str+0xad0>
   1e9ec:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
   1e9f3:	8a 4d a4             	mov    -0x5c(%ebp),%cl
   1e9f6:	89 d8                	mov    %ebx,%eax
   1e9f8:	31 d2                	xor    %edx,%edx
   1e9fa:	0f a5 c2             	shld   %cl,%eax,%edx
   1e9fd:	d3 e0                	shl    %cl,%eax
   1e9ff:	f6 c1 20             	test   $0x20,%cl
   1ea02:	74 04                	je     1ea08 <double_to_short_str+0xab8>
   1ea04:	89 c2                	mov    %eax,%edx
   1ea06:	31 c0                	xor    %eax,%eax
   1ea08:	01 f0                	add    %esi,%eax
   1ea0a:	11 fa                	adc    %edi,%edx
   1ea0c:	39 55 bc             	cmp    %edx,-0x44(%ebp)
   1ea0f:	76 37                	jbe    1ea48 <double_to_short_str+0xaf8>
   1ea11:	b9 0a 00 00 00       	mov    $0xa,%ecx
   1ea16:	bb 01 00 00 00       	mov    $0x1,%ebx
   1ea1b:	e9 88 fa ff ff       	jmp    1e4a8 <double_to_short_str+0x558>
   1ea20:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1ea23:	83 c0 02             	add    $0x2,%eax
   1ea26:	39 45 20             	cmp    %eax,0x20(%ebp)
   1ea29:	0f 82 09 f9 ff ff    	jb     1e338 <double_to_short_str+0x3e8>
   1ea2f:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   1ea32:	8b 45 1c             	mov    0x1c(%ebp),%eax
   1ea35:	83 c2 30             	add    $0x30,%edx
   1ea38:	88 14 08             	mov    %dl,(%eax,%ecx,1)
   1ea3b:	41                   	inc    %ecx
   1ea3c:	89 4d c0             	mov    %ecx,-0x40(%ebp)
   1ea3f:	eb b2                	jmp    1e9f3 <double_to_short_str+0xaa3>
   1ea41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1ea48:	0f 83 8c 02 00 00    	jae    1ecda <double_to_short_str+0xd8a>
   1ea4e:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1ea51:	85 c0                	test   %eax,%eax
   1ea53:	75 04                	jne    1ea59 <double_to_short_str+0xb09>
   1ea55:	85 db                	test   %ebx,%ebx
   1ea57:	74 3f                	je     1ea98 <double_to_short_str+0xb48>
   1ea59:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1ea5c:	83 c0 02             	add    $0x2,%eax
   1ea5f:	39 45 20             	cmp    %eax,0x20(%ebp)
   1ea62:	0f 82 d0 f8 ff ff    	jb     1e338 <double_to_short_str+0x3e8>
   1ea68:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1ea6b:	8b 55 1c             	mov    0x1c(%ebp),%edx
   1ea6e:	83 c3 30             	add    $0x30,%ebx
   1ea71:	88 1c 02             	mov    %bl,(%edx,%eax,1)
   1ea74:	40                   	inc    %eax
   1ea75:	89 45 c0             	mov    %eax,-0x40(%ebp)
   1ea78:	39 7d bc             	cmp    %edi,-0x44(%ebp)
   1ea7b:	72 2b                	jb     1eaa8 <double_to_short_str+0xb58>
   1ea7d:	77 05                	ja     1ea84 <double_to_short_str+0xb34>
   1ea7f:	39 75 b8             	cmp    %esi,-0x48(%ebp)
   1ea82:	72 24                	jb     1eaa8 <double_to_short_str+0xb58>
   1ea84:	89 f0                	mov    %esi,%eax
   1ea86:	89 fa                	mov    %edi,%edx
   1ea88:	b9 01 00 00 00       	mov    $0x1,%ecx
   1ea8d:	31 db                	xor    %ebx,%ebx
   1ea8f:	e9 14 fa ff ff       	jmp    1e4a8 <double_to_short_str+0x558>
   1ea94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ea98:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
   1ea9f:	eb d7                	jmp    1ea78 <double_to_short_str+0xb28>
   1eaa1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1eaa8:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
   1eaaf:	90                   	nop
   1eab0:	89 f0                	mov    %esi,%eax
   1eab2:	89 f1                	mov    %esi,%ecx
   1eab4:	89 fa                	mov    %edi,%edx
   1eab6:	89 fb                	mov    %edi,%ebx
   1eab8:	0f a4 cb 03          	shld   $0x3,%ecx,%ebx
   1eabc:	0f a4 c2 01          	shld   $0x1,%eax,%edx
   1eac0:	c1 e1 03             	shl    $0x3,%ecx
   1eac3:	01 c0                	add    %eax,%eax
   1eac5:	01 c8                	add    %ecx,%eax
   1eac7:	8b 75 bc             	mov    -0x44(%ebp),%esi
   1eaca:	11 da                	adc    %ebx,%edx
   1eacc:	8b 5d b8             	mov    -0x48(%ebp),%ebx
   1eacf:	0f a4 de 01          	shld   $0x1,%ebx,%esi
   1ead3:	01 db                	add    %ebx,%ebx
   1ead5:	8b 4d b8             	mov    -0x48(%ebp),%ecx
   1ead8:	89 5d a8             	mov    %ebx,-0x58(%ebp)
   1eadb:	8b 5d bc             	mov    -0x44(%ebp),%ebx
   1eade:	0f a4 cb 03          	shld   $0x3,%ecx,%ebx
   1eae2:	c1 e1 03             	shl    $0x3,%ecx
   1eae5:	89 75 ac             	mov    %esi,-0x54(%ebp)
   1eae8:	01 4d a8             	add    %ecx,-0x58(%ebp)
   1eaeb:	8b 4d c8             	mov    -0x38(%ebp),%ecx
   1eaee:	11 5d ac             	adc    %ebx,-0x54(%ebp)
   1eaf1:	8b 75 a8             	mov    -0x58(%ebp),%esi
   1eaf4:	8b 5d c8             	mov    -0x38(%ebp),%ebx
   1eaf7:	89 75 b8             	mov    %esi,-0x48(%ebp)
   1eafa:	8b 75 cc             	mov    -0x34(%ebp),%esi
   1eafd:	8b 7d ac             	mov    -0x54(%ebp),%edi
   1eb00:	0f a4 de 01          	shld   $0x1,%ebx,%esi
   1eb04:	01 db                	add    %ebx,%ebx
   1eb06:	89 75 d4             	mov    %esi,-0x2c(%ebp)
   1eb09:	89 5d d0             	mov    %ebx,-0x30(%ebp)
   1eb0c:	8b 5d cc             	mov    -0x34(%ebp),%ebx
   1eb0f:	0f a4 cb 03          	shld   $0x3,%ecx,%ebx
   1eb13:	c1 e1 03             	shl    $0x3,%ecx
   1eb16:	89 7d bc             	mov    %edi,-0x44(%ebp)
   1eb19:	01 4d d0             	add    %ecx,-0x30(%ebp)
   1eb1c:	8a 4d a4             	mov    -0x5c(%ebp),%cl
   1eb1f:	11 5d d4             	adc    %ebx,-0x2c(%ebp)
   1eb22:	8b 75 d0             	mov    -0x30(%ebp),%esi
   1eb25:	8b 7d d4             	mov    -0x2c(%ebp),%edi
   1eb28:	89 75 c8             	mov    %esi,-0x38(%ebp)
   1eb2b:	89 c3                	mov    %eax,%ebx
   1eb2d:	89 d6                	mov    %edx,%esi
   1eb2f:	0f ad f3             	shrd   %cl,%esi,%ebx
   1eb32:	89 7d cc             	mov    %edi,-0x34(%ebp)
   1eb35:	d3 ee                	shr    %cl,%esi
   1eb37:	f6 c1 20             	test   $0x20,%cl
   1eb3a:	74 04                	je     1eb40 <double_to_short_str+0xbf0>
   1eb3c:	89 f3                	mov    %esi,%ebx
   1eb3e:	31 f6                	xor    %esi,%esi
   1eb40:	8b 4d 88             	mov    -0x78(%ebp),%ecx
   1eb43:	89 75 9c             	mov    %esi,-0x64(%ebp)
   1eb46:	8b 75 90             	mov    -0x70(%ebp),%esi
   1eb49:	49                   	dec    %ecx
   1eb4a:	21 c6                	and    %eax,%esi
   1eb4c:	8b 7d 94             	mov    -0x6c(%ebp),%edi
   1eb4f:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1eb52:	21 d7                	and    %edx,%edi
   1eb54:	89 5d 98             	mov    %ebx,-0x68(%ebp)
   1eb57:	89 4d 88             	mov    %ecx,-0x78(%ebp)
   1eb5a:	85 c0                	test   %eax,%eax
   1eb5c:	75 08                	jne    1eb66 <double_to_short_str+0xc16>
   1eb5e:	85 db                	test   %ebx,%ebx
   1eb60:	0f 84 8a 00 00 00    	je     1ebf0 <double_to_short_str+0xca0>
   1eb66:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1eb69:	83 c0 02             	add    $0x2,%eax
   1eb6c:	39 45 20             	cmp    %eax,0x20(%ebp)
   1eb6f:	0f 82 c3 f7 ff ff    	jb     1e338 <double_to_short_str+0x3e8>
   1eb75:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   1eb78:	8b 45 1c             	mov    0x1c(%ebp),%eax
   1eb7b:	8a 4d 98             	mov    -0x68(%ebp),%cl
   1eb7e:	83 c1 30             	add    $0x30,%ecx
   1eb81:	88 0c 18             	mov    %cl,(%eax,%ebx,1)
   1eb84:	43                   	inc    %ebx
   1eb85:	89 5d c0             	mov    %ebx,-0x40(%ebp)
   1eb88:	0f 94 c0             	sete   %al
   1eb8b:	39 7d ac             	cmp    %edi,-0x54(%ebp)
   1eb8e:	0f 82 1c ff ff ff    	jb     1eab0 <double_to_short_str+0xb60>
   1eb94:	76 6a                	jbe    1ec00 <double_to_short_str+0xcb0>
   1eb96:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   1eb99:	39 5d 20             	cmp    %ebx,0x20(%ebp)
   1eb9c:	0f 86 19 03 00 00    	jbe    1eebb <double_to_short_str+0xf6b>
   1eba2:	84 c0                	test   %al,%al
   1eba4:	0f 85 11 03 00 00    	jne    1eebb <double_to_short_str+0xf6b>
   1ebaa:	8b 55 80             	mov    -0x80(%ebp),%edx
   1ebad:	8b 45 88             	mov    -0x78(%ebp),%eax
   1ebb0:	29 d0                	sub    %edx,%eax
   1ebb2:	8b 55 24             	mov    0x24(%ebp),%edx
   1ebb5:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   1ebb8:	39 7d d4             	cmp    %edi,-0x2c(%ebp)
   1ebbb:	89 02                	mov    %eax,(%edx)
   1ebbd:	8b 45 1c             	mov    0x1c(%ebp),%eax
   1ebc0:	89 5d a0             	mov    %ebx,-0x60(%ebp)
   1ebc3:	c6 04 18 00          	movb   $0x0,(%eax,%ebx,1)
   1ebc7:	73 47                	jae    1ec10 <double_to_short_str+0xcc0>
   1ebc9:	83 7d c0 15          	cmpl   $0x15,-0x40(%ebp)
   1ebcd:	0f 8e c3 f3 ff ff    	jle    1df96 <double_to_short_str+0x46>
   1ebd3:	c7 44 24 08 11 02 00 	movl   $0x211,0x8(%esp)
   1ebda:	00 
   1ebdb:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1ebe2:	00 
   1ebe3:	c7 04 24 10 e0 02 00 	movl   $0x2e010,(%esp)
   1ebea:	e8 c1 bc 00 00       	call   2a8b0 <assert_abort>
   1ebef:	90                   	nop
   1ebf0:	b0 01                	mov    $0x1,%al
   1ebf2:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
   1ebf9:	eb 90                	jmp    1eb8b <double_to_short_str+0xc3b>
   1ebfb:	90                   	nop
   1ebfc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ec00:	39 75 a8             	cmp    %esi,-0x58(%ebp)
   1ec03:	0f 82 a7 fe ff ff    	jb     1eab0 <double_to_short_str+0xb60>
   1ec09:	eb 8b                	jmp    1eb96 <double_to_short_str+0xc46>
   1ec0b:	90                   	nop
   1ec0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ec10:	0f 86 d2 00 00 00    	jbe    1ece8 <double_to_short_str+0xd98>
   1ec16:	8b 55 b0             	mov    -0x50(%ebp),%edx
   1ec19:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
   1ec1c:	01 f2                	add    %esi,%edx
   1ec1e:	8b 5d ac             	mov    -0x54(%ebp),%ebx
   1ec21:	11 f9                	adc    %edi,%ecx
   1ec23:	89 55 b8             	mov    %edx,-0x48(%ebp)
   1ec26:	89 4d bc             	mov    %ecx,-0x44(%ebp)
   1ec29:	39 d9                	cmp    %ebx,%ecx
   1ec2b:	72 09                	jb     1ec36 <double_to_short_str+0xce6>
   1ec2d:	77 9a                	ja     1ebc9 <double_to_short_str+0xc79>
   1ec2f:	8b 45 a8             	mov    -0x58(%ebp),%eax
   1ec32:	39 c2                	cmp    %eax,%edx
   1ec34:	73 93                	jae    1ebc9 <double_to_short_str+0xc79>
   1ec36:	8b 45 bc             	mov    -0x44(%ebp),%eax
   1ec39:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
   1ec3c:	77 12                	ja     1ec50 <double_to_short_str+0xd00>
   1ec3e:	0f 82 ce 01 00 00    	jb     1ee12 <double_to_short_str+0xec2>
   1ec44:	8b 55 b8             	mov    -0x48(%ebp),%edx
   1ec47:	39 55 d0             	cmp    %edx,-0x30(%ebp)
   1ec4a:	0f 86 c2 01 00 00    	jbe    1ee12 <double_to_short_str+0xec2>
   1ec50:	8b 45 1c             	mov    0x1c(%ebp),%eax
   1ec53:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   1ec56:	8d 5c 18 ff          	lea    -0x1(%eax,%ebx,1),%ebx
   1ec5a:	89 5d a4             	mov    %ebx,-0x5c(%ebp)
   1ec5d:	8a 03                	mov    (%ebx),%al
   1ec5f:	3c 30                	cmp    $0x30,%al
   1ec61:	0f 8e fa 00 00 00    	jle    1ed61 <double_to_short_str+0xe11>
   1ec67:	8b 55 b4             	mov    -0x4c(%ebp),%edx
   1ec6a:	0b 55 b0             	or     -0x50(%ebp),%edx
   1ec6d:	0f 84 10 02 00 00    	je     1ee83 <double_to_short_str+0xf33>
   1ec73:	8b 4d b0             	mov    -0x50(%ebp),%ecx
   1ec76:	8b 5d b4             	mov    -0x4c(%ebp),%ebx
   1ec79:	48                   	dec    %eax
   1ec7a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1ec7d:	0f a4 cb 01          	shld   $0x1,%ecx,%ebx
   1ec81:	01 c9                	add    %ecx,%ecx
   1ec83:	88 45 c8             	mov    %al,-0x38(%ebp)
   1ec86:	01 f1                	add    %esi,%ecx
   1ec88:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1ec8b:	11 fb                	adc    %edi,%ebx
   1ec8d:	2b 45 b0             	sub    -0x50(%ebp),%eax
   1ec90:	1b 55 b4             	sbb    -0x4c(%ebp),%edx
   1ec93:	29 f0                	sub    %esi,%eax
   1ec95:	19 fa                	sbb    %edi,%edx
   1ec97:	89 c6                	mov    %eax,%esi
   1ec99:	89 d7                	mov    %edx,%edi
   1ec9b:	8a 45 c8             	mov    -0x38(%ebp),%al
   1ec9e:	8b 55 bc             	mov    -0x44(%ebp),%edx
   1eca1:	88 45 90             	mov    %al,-0x70(%ebp)
   1eca4:	39 55 d4             	cmp    %edx,-0x2c(%ebp)
   1eca7:	77 0a                	ja     1ecb3 <double_to_short_str+0xd63>
   1eca9:	72 6d                	jb     1ed18 <double_to_short_str+0xdc8>
   1ecab:	8b 45 b8             	mov    -0x48(%ebp),%eax
   1ecae:	39 45 d0             	cmp    %eax,-0x30(%ebp)
   1ecb1:	76 65                	jbe    1ed18 <double_to_short_str+0xdc8>
   1ecb3:	39 5d ac             	cmp    %ebx,-0x54(%ebp)
   1ecb6:	77 70                	ja     1ed28 <double_to_short_str+0xdd8>
   1ecb8:	72 05                	jb     1ecbf <double_to_short_str+0xd6f>
   1ecba:	39 4d a8             	cmp    %ecx,-0x58(%ebp)
   1ecbd:	77 69                	ja     1ed28 <double_to_short_str+0xdd8>
   1ecbf:	8b 75 a4             	mov    -0x5c(%ebp),%esi
   1ecc2:	8a 5d c8             	mov    -0x38(%ebp),%bl
   1ecc5:	88 1e                	mov    %bl,(%esi)
   1ecc7:	e9 fd fe ff ff       	jmp    1ebc9 <double_to_short_str+0xc79>
   1eccc:	39 45 b8             	cmp    %eax,-0x48(%ebp)
   1eccf:	0f 83 d1 fc ff ff    	jae    1e9a6 <double_to_short_str+0xa56>
   1ecd5:	e9 f4 fc ff ff       	jmp    1e9ce <double_to_short_str+0xa7e>
   1ecda:	39 45 b8             	cmp    %eax,-0x48(%ebp)
   1ecdd:	0f 83 2e fd ff ff    	jae    1ea11 <double_to_short_str+0xac1>
   1ece3:	e9 66 fd ff ff       	jmp    1ea4e <double_to_short_str+0xafe>
   1ece8:	39 75 d0             	cmp    %esi,-0x30(%ebp)
   1eceb:	0f 86 d8 fe ff ff    	jbe    1ebc9 <double_to_short_str+0xc79>
   1ecf1:	e9 20 ff ff ff       	jmp    1ec16 <double_to_short_str+0xcc6>
   1ecf6:	66 90                	xchg   %ax,%ax
   1ecf8:	8b 45 b8             	mov    -0x48(%ebp),%eax
   1ecfb:	8b 55 bc             	mov    -0x44(%ebp),%edx
   1ecfe:	2b 45 d0             	sub    -0x30(%ebp),%eax
   1ed01:	1b 55 d4             	sbb    -0x2c(%ebp),%edx
   1ed04:	89 45 98             	mov    %eax,-0x68(%ebp)
   1ed07:	89 55 9c             	mov    %edx,-0x64(%ebp)
   1ed0a:	39 fa                	cmp    %edi,%edx
   1ed0c:	72 2a                	jb     1ed38 <double_to_short_str+0xde8>
   1ed0e:	77 08                	ja     1ed18 <double_to_short_str+0xdc8>
   1ed10:	39 f0                	cmp    %esi,%eax
   1ed12:	72 24                	jb     1ed38 <double_to_short_str+0xde8>
   1ed14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ed18:	8b 4d a4             	mov    -0x5c(%ebp),%ecx
   1ed1b:	8a 55 c8             	mov    -0x38(%ebp),%dl
   1ed1e:	88 11                	mov    %dl,(%ecx)
   1ed20:	e9 a4 fe ff ff       	jmp    1ebc9 <double_to_short_str+0xc79>
   1ed25:	8d 76 00             	lea    0x0(%esi),%esi
   1ed28:	39 5d d4             	cmp    %ebx,-0x2c(%ebp)
   1ed2b:	77 0b                	ja     1ed38 <double_to_short_str+0xde8>
   1ed2d:	72 c9                	jb     1ecf8 <double_to_short_str+0xda8>
   1ed2f:	39 4d d0             	cmp    %ecx,-0x30(%ebp)
   1ed32:	76 c4                	jbe    1ecf8 <double_to_short_str+0xda8>
   1ed34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1ed38:	8b 45 b0             	mov    -0x50(%ebp),%eax
   1ed3b:	fe 4d c8             	decb   -0x38(%ebp)
   1ed3e:	01 45 b8             	add    %eax,-0x48(%ebp)
   1ed41:	8b 55 b4             	mov    -0x4c(%ebp),%edx
   1ed44:	11 55 bc             	adc    %edx,-0x44(%ebp)
   1ed47:	01 c1                	add    %eax,%ecx
   1ed49:	11 d3                	adc    %edx,%ebx
   1ed4b:	29 c6                	sub    %eax,%esi
   1ed4d:	19 d7                	sbb    %edx,%edi
   1ed4f:	80 7d c8 2f          	cmpb   $0x2f,-0x38(%ebp)
   1ed53:	0f 85 42 ff ff ff    	jne    1ec9b <double_to_short_str+0xd4b>
   1ed59:	8b 55 a4             	mov    -0x5c(%ebp),%edx
   1ed5c:	8a 45 90             	mov    -0x70(%ebp),%al
   1ed5f:	88 02                	mov    %al,(%edx)
   1ed61:	c7 44 24 08 1b 01 00 	movl   $0x11b,0x8(%esp)
   1ed68:	00 
   1ed69:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1ed70:	00 
   1ed71:	c7 04 24 ea df 02 00 	movl   $0x2dfea,(%esp)
   1ed78:	e8 33 bb 00 00       	call   2a8b0 <assert_abort>
   1ed7d:	8d 76 00             	lea    0x0(%esi),%esi
   1ed80:	39 5d bc             	cmp    %ebx,-0x44(%ebp)
   1ed83:	77 23                	ja     1eda8 <double_to_short_str+0xe58>
   1ed85:	72 05                	jb     1ed8c <double_to_short_str+0xe3c>
   1ed87:	39 4d b8             	cmp    %ecx,-0x48(%ebp)
   1ed8a:	77 1c                	ja     1eda8 <double_to_short_str+0xe58>
   1ed8c:	8b 55 a8             	mov    -0x58(%ebp),%edx
   1ed8f:	8a 45 d0             	mov    -0x30(%ebp),%al
   1ed92:	88 02                	mov    %al,(%edx)
   1ed94:	8b 45 a0             	mov    -0x60(%ebp),%eax
   1ed97:	81 c4 9c 00 00 00    	add    $0x9c,%esp
   1ed9d:	5b                   	pop    %ebx
   1ed9e:	5e                   	pop    %esi
   1ed9f:	5f                   	pop    %edi
   1eda0:	5d                   	pop    %ebp
   1eda1:	c3                   	ret    
   1eda2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1eda8:	39 5d cc             	cmp    %ebx,-0x34(%ebp)
   1edab:	77 0b                	ja     1edb8 <double_to_short_str+0xe68>
   1edad:	72 31                	jb     1ede0 <double_to_short_str+0xe90>
   1edaf:	39 4d c8             	cmp    %ecx,-0x38(%ebp)
   1edb2:	76 2c                	jbe    1ede0 <double_to_short_str+0xe90>
   1edb4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1edb8:	8b 45 98             	mov    -0x68(%ebp),%eax
   1edbb:	8b 55 9c             	mov    -0x64(%ebp),%edx
   1edbe:	01 45 b0             	add    %eax,-0x50(%ebp)
   1edc1:	11 55 b4             	adc    %edx,-0x4c(%ebp)
   1edc4:	01 c1                	add    %eax,%ecx
   1edc6:	11 d3                	adc    %edx,%ebx
   1edc8:	29 c6                	sub    %eax,%esi
   1edca:	19 d7                	sbb    %edx,%edi
   1edcc:	80 7d d0 30          	cmpb   $0x30,-0x30(%ebp)
   1edd0:	0f 85 bf f7 ff ff    	jne    1e595 <double_to_short_str+0x645>
   1edd6:	8b 7d a8             	mov    -0x58(%ebp),%edi
   1edd9:	c6 07 30             	movb   $0x30,(%edi)
   1eddc:	eb 83                	jmp    1ed61 <double_to_short_str+0xe11>
   1edde:	66 90                	xchg   %ax,%ax
   1ede0:	8b 45 b0             	mov    -0x50(%ebp),%eax
   1ede3:	8b 55 b4             	mov    -0x4c(%ebp),%edx
   1ede6:	2b 45 c8             	sub    -0x38(%ebp),%eax
   1ede9:	1b 55 cc             	sbb    -0x34(%ebp),%edx
   1edec:	89 45 c0             	mov    %eax,-0x40(%ebp)
   1edef:	89 55 c4             	mov    %edx,-0x3c(%ebp)
   1edf2:	39 fa                	cmp    %edi,%edx
   1edf4:	72 c2                	jb     1edb8 <double_to_short_str+0xe68>
   1edf6:	77 04                	ja     1edfc <double_to_short_str+0xeac>
   1edf8:	39 f0                	cmp    %esi,%eax
   1edfa:	72 bc                	jb     1edb8 <double_to_short_str+0xe68>
   1edfc:	8b 4d a8             	mov    -0x58(%ebp),%ecx
   1edff:	8a 55 d0             	mov    -0x30(%ebp),%dl
   1ee02:	8b 45 a0             	mov    -0x60(%ebp),%eax
   1ee05:	88 11                	mov    %dl,(%ecx)
   1ee07:	81 c4 9c 00 00 00    	add    $0x9c,%esp
   1ee0d:	5b                   	pop    %ebx
   1ee0e:	5e                   	pop    %esi
   1ee0f:	5f                   	pop    %edi
   1ee10:	5d                   	pop    %ebp
   1ee11:	c3                   	ret    
   1ee12:	89 f1                	mov    %esi,%ecx
   1ee14:	89 fb                	mov    %edi,%ebx
   1ee16:	2b 4d d0             	sub    -0x30(%ebp),%ecx
   1ee19:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1ee1c:	1b 5d d4             	sbb    -0x2c(%ebp),%ebx
   1ee1f:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   1ee22:	29 f0                	sub    %esi,%eax
   1ee24:	19 fa                	sbb    %edi,%edx
   1ee26:	39 d3                	cmp    %edx,%ebx
   1ee28:	0f 82 22 fe ff ff    	jb     1ec50 <double_to_short_str+0xd00>
   1ee2e:	0f 87 95 fd ff ff    	ja     1ebc9 <double_to_short_str+0xc79>
   1ee34:	39 c1                	cmp    %eax,%ecx
   1ee36:	0f 82 14 fe ff ff    	jb     1ec50 <double_to_short_str+0xd00>
   1ee3c:	e9 88 fd ff ff       	jmp    1ebc9 <double_to_short_str+0xc79>
   1ee41:	8b 55 d0             	mov    -0x30(%ebp),%edx
   1ee44:	e9 d5 f2 ff ff       	jmp    1e11e <double_to_short_str+0x1ce>
   1ee49:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   1ee4c:	89 5d b8             	mov    %ebx,-0x48(%ebp)
   1ee4f:	e9 e9 f1 ff ff       	jmp    1e03d <double_to_short_str+0xed>
   1ee54:	89 c6                	mov    %eax,%esi
   1ee56:	89 d7                	mov    %edx,%edi
   1ee58:	2b 75 c8             	sub    -0x38(%ebp),%esi
   1ee5b:	8b 4d c8             	mov    -0x38(%ebp),%ecx
   1ee5e:	1b 7d cc             	sbb    -0x34(%ebp),%edi
   1ee61:	8b 5d cc             	mov    -0x34(%ebp),%ebx
   1ee64:	29 c1                	sub    %eax,%ecx
   1ee66:	19 d3                	sbb    %edx,%ebx
   1ee68:	39 df                	cmp    %ebx,%edi
   1ee6a:	0f 82 d6 f6 ff ff    	jb     1e546 <double_to_short_str+0x5f6>
   1ee70:	0f 87 20 f1 ff ff    	ja     1df96 <double_to_short_str+0x46>
   1ee76:	39 ce                	cmp    %ecx,%esi
   1ee78:	0f 82 c8 f6 ff ff    	jb     1e546 <double_to_short_str+0x5f6>
   1ee7e:	e9 13 f1 ff ff       	jmp    1df96 <double_to_short_str+0x46>
   1ee83:	c7 44 24 08 1c 01 00 	movl   $0x11c,0x8(%esp)
   1ee8a:	00 
   1ee8b:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1ee92:	00 
   1ee93:	c7 04 24 fd df 02 00 	movl   $0x2dffd,(%esp)
   1ee9a:	e8 11 ba 00 00       	call   2a8b0 <assert_abort>
   1ee9f:	c7 44 24 08 99 00 00 	movl   $0x99,0x8(%esp)
   1eea6:	00 
   1eea7:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1eeae:	00 
   1eeaf:	c7 04 24 96 df 02 00 	movl   $0x2df96,(%esp)
   1eeb6:	e8 f5 b9 00 00       	call   2a8b0 <assert_abort>
   1eebb:	c7 44 24 08 c2 01 00 	movl   $0x1c2,0x8(%esp)
   1eec2:	00 
   1eec3:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1eeca:	00 
   1eecb:	c7 04 24 d0 df 02 00 	movl   $0x2dfd0,(%esp)
   1eed2:	e8 d9 b9 00 00       	call   2a8b0 <assert_abort>
   1eed7:	c7 44 24 08 ce 00 00 	movl   $0xce,0x8(%esp)
   1eede:	00 
   1eedf:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1eee6:	00 
   1eee7:	c7 04 24 44 e0 02 00 	movl   $0x2e044,(%esp)
   1eeee:	e8 bd b9 00 00       	call   2a8b0 <assert_abort>
   1eef3:	c7 44 24 08 95 01 00 	movl   $0x195,0x8(%esp)
   1eefa:	00 
   1eefb:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1ef02:	00 
   1ef03:	c7 04 24 d0 df 02 00 	movl   $0x2dfd0,(%esp)
   1ef0a:	e8 a1 b9 00 00       	call   2a8b0 <assert_abort>
   1ef0f:	c7 44 24 08 56 01 00 	movl   $0x156,0x8(%esp)
   1ef16:	00 
   1ef17:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1ef1e:	00 
   1ef1f:	c7 04 24 b2 df 02 00 	movl   $0x2dfb2,(%esp)
   1ef26:	e8 85 b9 00 00       	call   2a8b0 <assert_abort>
   1ef2b:	e8 05 05 00 00       	call   1f435 <multiply.part.1>
   1ef30:	c7 44 24 08 df 00 00 	movl   $0xdf,0x8(%esp)
   1ef37:	00 
   1ef38:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1ef3f:	00 
   1ef40:	c7 04 24 bc e0 02 00 	movl   $0x2e0bc,(%esp)
   1ef47:	e8 64 b9 00 00       	call   2a8b0 <assert_abort>
   1ef4c:	c7 44 24 08 de 00 00 	movl   $0xde,0x8(%esp)
   1ef53:	00 
   1ef54:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1ef5b:	00 
   1ef5c:	c7 04 24 7c e0 02 00 	movl   $0x2e07c,(%esp)
   1ef63:	e8 48 b9 00 00       	call   2a8b0 <assert_abort>
   1ef68:	90                   	nop
   1ef69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0001ef70 <double_to_fixed_str>:
   1ef70:	55                   	push   %ebp
   1ef71:	89 e5                	mov    %esp,%ebp
   1ef73:	57                   	push   %edi
   1ef74:	56                   	push   %esi
   1ef75:	53                   	push   %ebx
   1ef76:	83 ec 6c             	sub    $0x6c,%esp
   1ef79:	8b 75 10             	mov    0x10(%ebp),%esi
   1ef7c:	8b 7d 14             	mov    0x14(%ebp),%edi
   1ef7f:	80 7d 08 00          	cmpb   $0x0,0x8(%ebp)
   1ef83:	0f 85 97 03 00 00    	jne    1f320 <double_to_fixed_str+0x3b0>
   1ef89:	89 f8                	mov    %edi,%eax
   1ef8b:	09 f0                	or     %esi,%eax
   1ef8d:	75 31                	jne    1efc0 <double_to_fixed_str+0x50>
   1ef8f:	83 7d 28 01          	cmpl   $0x1,0x28(%ebp)
   1ef93:	0f 86 87 03 00 00    	jbe    1f320 <double_to_fixed_str+0x3b0>
   1ef99:	8b 5d 24             	mov    0x24(%ebp),%ebx
   1ef9c:	8b 75 2c             	mov    0x2c(%ebp),%esi
   1ef9f:	b8 01 00 00 00       	mov    $0x1,%eax
   1efa4:	c6 03 30             	movb   $0x30,(%ebx)
   1efa7:	c6 43 01 00          	movb   $0x0,0x1(%ebx)
   1efab:	c7 06 00 00 00 00    	movl   $0x0,(%esi)
   1efb1:	83 c4 6c             	add    $0x6c,%esp
   1efb4:	5b                   	pop    %ebx
   1efb5:	5e                   	pop    %esi
   1efb6:	5f                   	pop    %edi
   1efb7:	5d                   	pop    %ebp
   1efb8:	c3                   	ret    
   1efb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1efc0:	8b 5d 18             	mov    0x18(%ebp),%ebx
   1efc3:	f7 c7 00 00 c0 ff    	test   $0xffc00000,%edi
   1efc9:	75 17                	jne    1efe2 <double_to_fixed_str+0x72>
   1efcb:	90                   	nop
   1efcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1efd0:	0f a4 f7 0a          	shld   $0xa,%esi,%edi
   1efd4:	c1 e6 0a             	shl    $0xa,%esi
   1efd7:	83 eb 0a             	sub    $0xa,%ebx
   1efda:	f7 c7 00 00 c0 ff    	test   $0xffc00000,%edi
   1efe0:	74 ee                	je     1efd0 <double_to_fixed_str+0x60>
   1efe2:	85 ff                	test   %edi,%edi
   1efe4:	78 17                	js     1effd <double_to_fixed_str+0x8d>
   1efe6:	8d 43 ff             	lea    -0x1(%ebx),%eax
   1efe9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1eff0:	0f a4 f7 01          	shld   $0x1,%esi,%edi
   1eff4:	89 c3                	mov    %eax,%ebx
   1eff6:	01 f6                	add    %esi,%esi
   1eff8:	48                   	dec    %eax
   1eff9:	85 ff                	test   %edi,%edi
   1effb:	79 f3                	jns    1eff0 <double_to_fixed_str+0x80>
   1effd:	8d 45 d8             	lea    -0x28(%ebp),%eax
   1f000:	89 44 24 08          	mov    %eax,0x8(%esp)
   1f004:	8d 45 dc             	lea    -0x24(%ebp),%eax
   1f007:	89 44 24 04          	mov    %eax,0x4(%esp)
   1f00b:	b8 85 ff ff ff       	mov    $0xffffff85,%eax
   1f010:	29 d8                	sub    %ebx,%eax
   1f012:	89 04 24             	mov    %eax,(%esp)
   1f015:	e8 66 c2 00 00       	call   2b280 <get_power_of_ten>
   1f01a:	8b 4d dc             	mov    -0x24(%ebp),%ecx
   1f01d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
   1f020:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1f023:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   1f026:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   1f029:	85 c9                	test   %ecx,%ecx
   1f02b:	0f 89 75 03 00 00    	jns    1f3a6 <double_to_fixed_str+0x436>
   1f031:	89 f8                	mov    %edi,%eax
   1f033:	89 7d b8             	mov    %edi,-0x48(%ebp)
   1f036:	f7 65 d0             	mull   -0x30(%ebp)
   1f039:	89 45 c8             	mov    %eax,-0x38(%ebp)
   1f03c:	89 f0                	mov    %esi,%eax
   1f03e:	89 55 cc             	mov    %edx,-0x34(%ebp)
   1f041:	f7 e1                	mul    %ecx
   1f043:	89 45 c0             	mov    %eax,-0x40(%ebp)
   1f046:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1f049:	89 55 c4             	mov    %edx,-0x3c(%ebp)
   1f04c:	f7 e6                	mul    %esi
   1f04e:	89 d0                	mov    %edx,%eax
   1f050:	31 d2                	xor    %edx,%edx
   1f052:	89 45 d0             	mov    %eax,-0x30(%ebp)
   1f055:	8b 45 c8             	mov    -0x38(%ebp),%eax
   1f058:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1f05b:	31 d2                	xor    %edx,%edx
   1f05d:	01 45 d0             	add    %eax,-0x30(%ebp)
   1f060:	8b 7d c4             	mov    -0x3c(%ebp),%edi
   1f063:	11 55 d4             	adc    %edx,-0x2c(%ebp)
   1f066:	8b 55 cc             	mov    -0x34(%ebp),%edx
   1f069:	81 45 d0 00 00 00 80 	addl   $0x80000000,-0x30(%ebp)
   1f070:	89 d0                	mov    %edx,%eax
   1f072:	89 fe                	mov    %edi,%esi
   1f074:	83 55 d4 00          	adcl   $0x0,-0x2c(%ebp)
   1f078:	31 d2                	xor    %edx,%edx
   1f07a:	31 ff                	xor    %edi,%edi
   1f07c:	01 c6                	add    %eax,%esi
   1f07e:	11 d7                	adc    %edx,%edi
   1f080:	8b 45 b8             	mov    -0x48(%ebp),%eax
   1f083:	f7 e1                	mul    %ecx
   1f085:	01 c6                	add    %eax,%esi
   1f087:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1f08a:	11 d7                	adc    %edx,%edi
   1f08c:	31 d2                	xor    %edx,%edx
   1f08e:	01 45 d0             	add    %eax,-0x30(%ebp)
   1f091:	11 55 d4             	adc    %edx,-0x2c(%ebp)
   1f094:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   1f097:	89 ca                	mov    %ecx,%edx
   1f099:	31 c9                	xor    %ecx,%ecx
   1f09b:	01 d6                	add    %edx,%esi
   1f09d:	11 cf                	adc    %ecx,%edi
   1f09f:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
   1f0a2:	01 cb                	add    %ecx,%ebx
   1f0a4:	8b 4d d8             	mov    -0x28(%ebp),%ecx
   1f0a7:	89 4d ac             	mov    %ecx,-0x54(%ebp)
   1f0aa:	8d 43 40             	lea    0x40(%ebx),%eax
   1f0ad:	83 7d 28 01          	cmpl   $0x1,0x28(%ebp)
   1f0b1:	0f 86 69 02 00 00    	jbe    1f320 <double_to_fixed_str+0x3b0>
   1f0b7:	8b 55 1c             	mov    0x1c(%ebp),%edx
   1f0ba:	85 d2                	test   %edx,%edx
   1f0bc:	0f 84 5e 02 00 00    	je     1f320 <double_to_fixed_str+0x3b0>
   1f0c2:	83 c3 7b             	add    $0x7b,%ebx
   1f0c5:	83 fb 1b             	cmp    $0x1b,%ebx
   1f0c8:	0f 87 dd 02 00 00    	ja     1f3ab <double_to_fixed_str+0x43b>
   1f0ce:	89 fb                	mov    %edi,%ebx
   1f0d0:	09 f3                	or     %esi,%ebx
   1f0d2:	0f 84 ef 02 00 00    	je     1f3c7 <double_to_fixed_str+0x457>
   1f0d8:	f7 d8                	neg    %eax
   1f0da:	89 45 b0             	mov    %eax,-0x50(%ebp)
   1f0dd:	89 fa                	mov    %edi,%edx
   1f0df:	8a 4d b0             	mov    -0x50(%ebp),%cl
   1f0e2:	89 f0                	mov    %esi,%eax
   1f0e4:	0f ad d0             	shrd   %cl,%edx,%eax
   1f0e7:	d3 ea                	shr    %cl,%edx
   1f0e9:	f6 c1 20             	test   $0x20,%cl
   1f0ec:	74 02                	je     1f0f0 <double_to_fixed_str+0x180>
   1f0ee:	89 d0                	mov    %edx,%eax
   1f0f0:	89 45 d0             	mov    %eax,-0x30(%ebp)
   1f0f3:	31 c0                	xor    %eax,%eax
   1f0f5:	31 d2                	xor    %edx,%edx
   1f0f7:	f6 c1 20             	test   $0x20,%cl
   1f0fa:	0f 94 c0             	sete   %al
   1f0fd:	0f 95 c2             	setne  %dl
   1f100:	d3 e0                	shl    %cl,%eax
   1f102:	89 45 b8             	mov    %eax,-0x48(%ebp)
   1f105:	d3 e2                	shl    %cl,%edx
   1f107:	83 45 b8 ff          	addl   $0xffffffff,-0x48(%ebp)
   1f10b:	89 55 bc             	mov    %edx,-0x44(%ebp)
   1f10e:	8b 4d b8             	mov    -0x48(%ebp),%ecx
   1f111:	83 55 bc ff          	adcl   $0xffffffff,-0x44(%ebp)
   1f115:	21 f1                	and    %esi,%ecx
   1f117:	8b 5d bc             	mov    -0x44(%ebp),%ebx
   1f11a:	89 4d b4             	mov    %ecx,-0x4c(%ebp)
   1f11d:	21 fb                	and    %edi,%ebx
   1f11f:	8b 4d 20             	mov    0x20(%ebp),%ecx
   1f122:	89 5d a8             	mov    %ebx,-0x58(%ebp)
   1f125:	85 c9                	test   %ecx,%ecx
   1f127:	0f 88 53 02 00 00    	js     1f380 <double_to_fixed_str+0x410>
   1f12d:	8b 45 20             	mov    0x20(%ebp),%eax
   1f130:	8b 55 ac             	mov    -0x54(%ebp),%edx
   1f133:	29 d0                	sub    %edx,%eax
   1f135:	8d 78 0a             	lea    0xa(%eax),%edi
   1f138:	8b 75 1c             	mov    0x1c(%ebp),%esi
   1f13b:	b9 00 ca 9a 3b       	mov    $0x3b9aca00,%ecx
   1f140:	89 75 c8             	mov    %esi,-0x38(%ebp)
   1f143:	bb 0a 00 00 00       	mov    $0xa,%ebx
   1f148:	31 f6                	xor    %esi,%esi
   1f14a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1f150:	8b 45 c8             	mov    -0x38(%ebp),%eax
   1f153:	85 c0                	test   %eax,%eax
   1f155:	74 59                	je     1f1b0 <double_to_fixed_str+0x240>
   1f157:	85 db                	test   %ebx,%ebx
   1f159:	7e 55                	jle    1f1b0 <double_to_fixed_str+0x240>
   1f15b:	85 ff                	test   %edi,%edi
   1f15d:	7e 51                	jle    1f1b0 <double_to_fixed_str+0x240>
   1f15f:	8b 45 d0             	mov    -0x30(%ebp),%eax
   1f162:	31 d2                	xor    %edx,%edx
   1f164:	f7 f1                	div    %ecx
   1f166:	89 45 c0             	mov    %eax,-0x40(%ebp)
   1f169:	b8 cd cc cc cc       	mov    $0xcccccccd,%eax
   1f16e:	89 55 d0             	mov    %edx,-0x30(%ebp)
   1f171:	4b                   	dec    %ebx
   1f172:	f7 e1                	mul    %ecx
   1f174:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1f177:	89 d1                	mov    %edx,%ecx
   1f179:	c1 e9 03             	shr    $0x3,%ecx
   1f17c:	4f                   	dec    %edi
   1f17d:	85 c0                	test   %eax,%eax
   1f17f:	75 08                	jne    1f189 <double_to_fixed_str+0x219>
   1f181:	85 f6                	test   %esi,%esi
   1f183:	0f 84 7f 01 00 00    	je     1f308 <double_to_fixed_str+0x398>
   1f189:	8d 46 02             	lea    0x2(%esi),%eax
   1f18c:	39 45 28             	cmp    %eax,0x28(%ebp)
   1f18f:	0f 82 8b 01 00 00    	jb     1f320 <double_to_fixed_str+0x3b0>
   1f195:	8a 45 c0             	mov    -0x40(%ebp),%al
   1f198:	8b 55 24             	mov    0x24(%ebp),%edx
   1f19b:	83 c0 30             	add    $0x30,%eax
   1f19e:	88 04 32             	mov    %al,(%edx,%esi,1)
   1f1a1:	8b 45 c8             	mov    -0x38(%ebp),%eax
   1f1a4:	48                   	dec    %eax
   1f1a5:	46                   	inc    %esi
   1f1a6:	89 45 c8             	mov    %eax,-0x38(%ebp)
   1f1a9:	8b 45 c8             	mov    -0x38(%ebp),%eax
   1f1ac:	85 c0                	test   %eax,%eax
   1f1ae:	75 a7                	jne    1f157 <double_to_fixed_str+0x1e7>
   1f1b0:	29 fb                	sub    %edi,%ebx
   1f1b2:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)
   1f1b9:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
   1f1c0:	89 5d c0             	mov    %ebx,-0x40(%ebp)
   1f1c3:	89 75 9c             	mov    %esi,-0x64(%ebp)
   1f1c6:	8b 55 a8             	mov    -0x58(%ebp),%edx
   1f1c9:	89 d8                	mov    %ebx,%eax
   1f1cb:	90                   	nop
   1f1cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f1d0:	8b 5d c8             	mov    -0x38(%ebp),%ebx
   1f1d3:	01 f8                	add    %edi,%eax
   1f1d5:	85 db                	test   %ebx,%ebx
   1f1d7:	74 07                	je     1f1e0 <double_to_fixed_str+0x270>
   1f1d9:	3b 55 d4             	cmp    -0x2c(%ebp),%edx
   1f1dc:	77 7a                	ja     1f258 <double_to_fixed_str+0x2e8>
   1f1de:	73 70                	jae    1f250 <double_to_fixed_str+0x2e0>
   1f1e0:	8b 75 9c             	mov    -0x64(%ebp),%esi
   1f1e3:	39 75 28             	cmp    %esi,0x28(%ebp)
   1f1e6:	0f 86 f7 01 00 00    	jbe    1f3e3 <double_to_fixed_str+0x473>
   1f1ec:	85 f6                	test   %esi,%esi
   1f1ee:	0f 84 3c 01 00 00    	je     1f330 <double_to_fixed_str+0x3c0>
   1f1f4:	8b 55 ac             	mov    -0x54(%ebp),%edx
   1f1f7:	8b 4d 20             	mov    0x20(%ebp),%ecx
   1f1fa:	29 d0                	sub    %edx,%eax
   1f1fc:	8b 55 2c             	mov    0x2c(%ebp),%edx
   1f1ff:	85 c9                	test   %ecx,%ecx
   1f201:	89 02                	mov    %eax,(%edx)
   1f203:	78 0d                	js     1f212 <double_to_fixed_str+0x2a2>
   1f205:	8b 55 20             	mov    0x20(%ebp),%edx
   1f208:	f7 da                	neg    %edx
   1f20a:	39 d0                	cmp    %edx,%eax
   1f20c:	0f 8c 78 01 00 00    	jl     1f38a <double_to_fixed_str+0x41a>
   1f212:	8b 5d 24             	mov    0x24(%ebp),%ebx
   1f215:	89 f0                	mov    %esi,%eax
   1f217:	39 75 1c             	cmp    %esi,0x1c(%ebp)
   1f21a:	c6 04 33 00          	movb   $0x0,(%ebx,%esi,1)
   1f21e:	0f 8c 03 02 00 00    	jl     1f427 <double_to_fixed_str+0x4b7>
   1f224:	83 fe 15             	cmp    $0x15,%esi
   1f227:	0f 8e 84 fd ff ff    	jle    1efb1 <double_to_fixed_str+0x41>
   1f22d:	c7 44 24 08 0e 03 00 	movl   $0x30e,0x8(%esp)
   1f234:	00 
   1f235:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1f23c:	00 
   1f23d:	c7 04 24 10 e0 02 00 	movl   $0x2e010,(%esp)
   1f244:	e8 67 b6 00 00       	call   2a8b0 <assert_abort>
   1f249:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1f250:	8b 75 d0             	mov    -0x30(%ebp),%esi
   1f253:	39 75 b4             	cmp    %esi,-0x4c(%ebp)
   1f256:	72 88                	jb     1f1e0 <double_to_fixed_str+0x270>
   1f258:	85 ff                	test   %edi,%edi
   1f25a:	7e 84                	jle    1f1e0 <double_to_fixed_str+0x270>
   1f25c:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
   1f25f:	89 d3                	mov    %edx,%ebx
   1f261:	89 c8                	mov    %ecx,%eax
   1f263:	8b 75 d4             	mov    -0x2c(%ebp),%esi
   1f266:	0f a4 cb 03          	shld   $0x3,%ecx,%ebx
   1f26a:	0f a4 c2 01          	shld   $0x1,%eax,%edx
   1f26e:	c1 e1 03             	shl    $0x3,%ecx
   1f271:	01 c0                	add    %eax,%eax
   1f273:	01 c8                	add    %ecx,%eax
   1f275:	11 da                	adc    %ebx,%edx
   1f277:	8b 5d d0             	mov    -0x30(%ebp),%ebx
   1f27a:	0f a4 de 01          	shld   $0x1,%ebx,%esi
   1f27e:	01 db                	add    %ebx,%ebx
   1f280:	89 75 a4             	mov    %esi,-0x5c(%ebp)
   1f283:	89 5d a0             	mov    %ebx,-0x60(%ebp)
   1f286:	8b 75 d4             	mov    -0x2c(%ebp),%esi
   1f289:	8b 5d d0             	mov    -0x30(%ebp),%ebx
   1f28c:	8b 4d a0             	mov    -0x60(%ebp),%ecx
   1f28f:	0f a4 de 03          	shld   $0x3,%ebx,%esi
   1f293:	c1 e3 03             	shl    $0x3,%ebx
   1f296:	89 75 d4             	mov    %esi,-0x2c(%ebp)
   1f299:	89 5d d0             	mov    %ebx,-0x30(%ebp)
   1f29c:	8b 5d a4             	mov    -0x5c(%ebp),%ebx
   1f29f:	01 4d d0             	add    %ecx,-0x30(%ebp)
   1f2a2:	89 d6                	mov    %edx,%esi
   1f2a4:	11 5d d4             	adc    %ebx,-0x2c(%ebp)
   1f2a7:	8a 4d b0             	mov    -0x50(%ebp),%cl
   1f2aa:	89 c3                	mov    %eax,%ebx
   1f2ac:	0f ad f3             	shrd   %cl,%esi,%ebx
   1f2af:	d3 ee                	shr    %cl,%esi
   1f2b1:	f6 c1 20             	test   $0x20,%cl
   1f2b4:	74 04                	je     1f2ba <double_to_fixed_str+0x34a>
   1f2b6:	89 f3                	mov    %esi,%ebx
   1f2b8:	31 f6                	xor    %esi,%esi
   1f2ba:	89 75 a4             	mov    %esi,-0x5c(%ebp)
   1f2bd:	8b 75 b8             	mov    -0x48(%ebp),%esi
   1f2c0:	21 c6                	and    %eax,%esi
   1f2c2:	8b 45 bc             	mov    -0x44(%ebp),%eax
   1f2c5:	21 c2                	and    %eax,%edx
   1f2c7:	4f                   	dec    %edi
   1f2c8:	89 5d a0             	mov    %ebx,-0x60(%ebp)
   1f2cb:	89 75 b4             	mov    %esi,-0x4c(%ebp)
   1f2ce:	85 db                	test   %ebx,%ebx
   1f2d0:	75 07                	jne    1f2d9 <double_to_fixed_str+0x369>
   1f2d2:	8b 45 9c             	mov    -0x64(%ebp),%eax
   1f2d5:	85 c0                	test   %eax,%eax
   1f2d7:	74 37                	je     1f310 <double_to_fixed_str+0x3a0>
   1f2d9:	8b 45 9c             	mov    -0x64(%ebp),%eax
   1f2dc:	83 c0 02             	add    $0x2,%eax
   1f2df:	39 45 28             	cmp    %eax,0x28(%ebp)
   1f2e2:	72 3c                	jb     1f320 <double_to_fixed_str+0x3b0>
   1f2e4:	8b 45 9c             	mov    -0x64(%ebp),%eax
   1f2e7:	8a 4d a0             	mov    -0x60(%ebp),%cl
   1f2ea:	8b 5d 24             	mov    0x24(%ebp),%ebx
   1f2ed:	8b 75 c8             	mov    -0x38(%ebp),%esi
   1f2f0:	83 c1 30             	add    $0x30,%ecx
   1f2f3:	4e                   	dec    %esi
   1f2f4:	88 0c 03             	mov    %cl,(%ebx,%eax,1)
   1f2f7:	40                   	inc    %eax
   1f2f8:	89 45 9c             	mov    %eax,-0x64(%ebp)
   1f2fb:	89 75 c8             	mov    %esi,-0x38(%ebp)
   1f2fe:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1f301:	e9 ca fe ff ff       	jmp    1f1d0 <double_to_fixed_str+0x260>
   1f306:	66 90                	xchg   %ax,%ax
   1f308:	31 f6                	xor    %esi,%esi
   1f30a:	e9 41 fe ff ff       	jmp    1f150 <double_to_fixed_str+0x1e0>
   1f30f:	90                   	nop
   1f310:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%ebp)
   1f317:	8b 45 c0             	mov    -0x40(%ebp),%eax
   1f31a:	e9 b1 fe ff ff       	jmp    1f1d0 <double_to_fixed_str+0x260>
   1f31f:	90                   	nop
   1f320:	83 c4 6c             	add    $0x6c,%esp
   1f323:	83 c8 ff             	or     $0xffffffff,%eax
   1f326:	5b                   	pop    %ebx
   1f327:	5e                   	pop    %esi
   1f328:	5f                   	pop    %edi
   1f329:	5d                   	pop    %ebp
   1f32a:	c3                   	ret    
   1f32b:	90                   	nop
   1f32c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f330:	85 ff                	test   %edi,%edi
   1f332:	7e 1c                	jle    1f350 <double_to_fixed_str+0x3e0>
   1f334:	c7 44 24 08 a5 02 00 	movl   $0x2a5,0x8(%esp)
   1f33b:	00 
   1f33c:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1f343:	00 
   1f344:	c7 04 24 b4 e1 02 00 	movl   $0x2e1b4,(%esp)
   1f34b:	e8 60 b5 00 00       	call   2a8b0 <assert_abort>
   1f350:	8b 5d 24             	mov    0x24(%ebp),%ebx
   1f353:	8b 4d 2c             	mov    0x2c(%ebp),%ecx
   1f356:	8b 45 1c             	mov    0x1c(%ebp),%eax
   1f359:	c7 01 00 00 00 00    	movl   $0x0,(%ecx)
   1f35f:	85 c0                	test   %eax,%eax
   1f361:	c6 03 30             	movb   $0x30,(%ebx)
   1f364:	c6 43 01 00          	movb   $0x0,0x1(%ebx)
   1f368:	0f 8e 91 00 00 00    	jle    1f3ff <double_to_fixed_str+0x48f>
   1f36e:	83 c4 6c             	add    $0x6c,%esp
   1f371:	b8 01 00 00 00       	mov    $0x1,%eax
   1f376:	5b                   	pop    %ebx
   1f377:	5e                   	pop    %esi
   1f378:	5f                   	pop    %edi
   1f379:	5d                   	pop    %ebp
   1f37a:	c3                   	ret    
   1f37b:	90                   	nop
   1f37c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f380:	bf ff ff ff 7f       	mov    $0x7fffffff,%edi
   1f385:	e9 ae fd ff ff       	jmp    1f138 <double_to_fixed_str+0x1c8>
   1f38a:	c7 44 24 08 9f 02 00 	movl   $0x29f,0x8(%esp)
   1f391:	00 
   1f392:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1f399:	00 
   1f39a:	c7 04 24 84 e1 02 00 	movl   $0x2e184,(%esp)
   1f3a1:	e8 0a b5 00 00       	call   2a8b0 <assert_abort>
   1f3a6:	e8 8a 00 00 00       	call   1f435 <multiply.part.1>
   1f3ab:	c7 44 24 08 3c 02 00 	movl   $0x23c,0x8(%esp)
   1f3b2:	00 
   1f3b3:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1f3ba:	00 
   1f3bb:	c7 04 24 48 e1 02 00 	movl   $0x2e148,(%esp)
   1f3c2:	e8 e9 b4 00 00       	call   2a8b0 <assert_abort>
   1f3c7:	c7 44 24 08 3d 02 00 	movl   $0x23d,0x8(%esp)
   1f3ce:	00 
   1f3cf:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1f3d6:	00 
   1f3d7:	c7 04 24 2a e0 02 00 	movl   $0x2e02a,(%esp)
   1f3de:	e8 cd b4 00 00       	call   2a8b0 <assert_abort>
   1f3e3:	c7 44 24 08 9b 02 00 	movl   $0x29b,0x8(%esp)
   1f3ea:	00 
   1f3eb:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1f3f2:	00 
   1f3f3:	c7 04 24 db df 02 00 	movl   $0x2dfdb,(%esp)
   1f3fa:	e8 b1 b4 00 00       	call   2a8b0 <assert_abort>
   1f3ff:	8b 75 1c             	mov    0x1c(%ebp),%esi
   1f402:	83 ee 00             	sub    $0x0,%esi
   1f405:	0f 88 63 ff ff ff    	js     1f36e <double_to_fixed_str+0x3fe>
   1f40b:	c7 44 24 08 ad 02 00 	movl   $0x2ad,0x8(%esp)
   1f412:	00 
   1f413:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1f41a:	00 
   1f41b:	c7 04 24 e8 e1 02 00 	movl   $0x2e1e8,(%esp)
   1f422:	e8 89 b4 00 00       	call   2a8b0 <assert_abort>
   1f427:	8b 55 1c             	mov    0x1c(%ebp),%edx
   1f42a:	83 ea 00             	sub    $0x0,%edx
   1f42d:	0f 88 f1 fd ff ff    	js     1f224 <double_to_fixed_str+0x2b4>
   1f433:	eb d6                	jmp    1f40b <double_to_fixed_str+0x49b>

0001f435 <multiply.part.1>:
   1f435:	55                   	push   %ebp
   1f436:	89 e5                	mov    %esp,%ebp
   1f438:	83 ec 18             	sub    $0x18,%esp
   1f43b:	c7 44 24 08 55 00 00 	movl   $0x55,0x8(%esp)
   1f442:	00 
   1f443:	c7 44 24 04 6d df 02 	movl   $0x2df6d,0x4(%esp)
   1f44a:	00 
   1f44b:	c7 04 24 85 df 02 00 	movl   $0x2df85,(%esp)
   1f452:	e8 59 b4 00 00       	call   2a8b0 <assert_abort>
   1f457:	66 90                	xchg   %ax,%ax
   1f459:	66 90                	xchg   %ax,%ax
   1f45b:	66 90                	xchg   %ax,%ax
   1f45d:	66 90                	xchg   %ax,%ax
   1f45f:	90                   	nop

0001f460 <area_check>:
   1f460:	55                   	push   %ebp
   1f461:	89 e5                	mov    %esp,%ebp
   1f463:	83 ec 18             	sub    $0x18,%esp
   1f466:	81 78 10 fe ca ef be 	cmpl   $0xbeefcafe,0x10(%eax)
   1f46d:	75 26                	jne    1f495 <area_check+0x35>
   1f46f:	8b 10                	mov    (%eax),%edx
   1f471:	39 c2                	cmp    %eax,%edx
   1f473:	0f 85 bc 00 00 00    	jne    1f535 <area_check+0xd5>
   1f479:	8b 42 04             	mov    0x4(%edx),%eax
   1f47c:	39 c2                	cmp    %eax,%edx
   1f47e:	0f 83 89 00 00 00    	jae    1f50d <area_check+0xad>
   1f484:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
   1f48a:	75 59                	jne    1f4e5 <area_check+0x85>
   1f48c:	a9 ff 0f 00 00       	test   $0xfff,%eax
   1f491:	75 2a                	jne    1f4bd <area_check+0x5d>
   1f493:	c9                   	leave  
   1f494:	c3                   	ret    
   1f495:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1f49c:	e8 8f 98 ff ff       	call   18d30 <futex_up>
   1f4a1:	c7 44 24 08 10 01 00 	movl   $0x110,0x8(%esp)
   1f4a8:	00 
   1f4a9:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1f4b0:	00 
   1f4b1:	c7 04 24 08 e3 02 00 	movl   $0x2e308,(%esp)
   1f4b8:	e8 f3 b3 00 00       	call   2a8b0 <assert_abort>
   1f4bd:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1f4c4:	e8 67 98 ff ff       	call   18d30 <futex_up>
   1f4c9:	c7 44 24 08 14 01 00 	movl   $0x114,0x8(%esp)
   1f4d0:	00 
   1f4d1:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1f4d8:	00 
   1f4d9:	c7 04 24 54 e3 02 00 	movl   $0x2e354,(%esp)
   1f4e0:	e8 cb b3 00 00       	call   2a8b0 <assert_abort>
   1f4e5:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1f4ec:	e8 3f 98 ff ff       	call   18d30 <futex_up>
   1f4f1:	c7 44 24 08 13 01 00 	movl   $0x113,0x8(%esp)
   1f4f8:	00 
   1f4f9:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1f500:	00 
   1f501:	c7 04 24 28 e3 02 00 	movl   $0x2e328,(%esp)
   1f508:	e8 a3 b3 00 00       	call   2a8b0 <assert_abort>
   1f50d:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1f514:	e8 17 98 ff ff       	call   18d30 <futex_up>
   1f519:	c7 44 24 08 12 01 00 	movl   $0x112,0x8(%esp)
   1f520:	00 
   1f521:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1f528:	00 
   1f529:	c7 04 24 3a e2 02 00 	movl   $0x2e23a,(%esp)
   1f530:	e8 7b b3 00 00       	call   2a8b0 <assert_abort>
   1f535:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1f53c:	e8 ef 97 ff ff       	call   18d30 <futex_up>
   1f541:	c7 44 24 08 11 01 00 	movl   $0x111,0x8(%esp)
   1f548:	00 
   1f549:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1f550:	00 
   1f551:	c7 04 24 26 e2 02 00 	movl   $0x2e226,(%esp)
   1f558:	e8 53 b3 00 00       	call   2a8b0 <assert_abort>
   1f55d:	8d 76 00             	lea    0x0(%esi),%esi

0001f560 <heap_shrink>:
   1f560:	55                   	push   %ebp
   1f561:	89 c1                	mov    %eax,%ecx
   1f563:	89 e5                	mov    %esp,%ebp
   1f565:	57                   	push   %edi
   1f566:	56                   	push   %esi
   1f567:	53                   	push   %ebx
   1f568:	83 ec 3c             	sub    $0x3c,%esp
   1f56b:	89 4d dc             	mov    %ecx,-0x24(%ebp)
   1f56e:	e8 ed fe ff ff       	call   1f460 <area_check>
   1f573:	8b 4d dc             	mov    -0x24(%ebp),%ecx
   1f576:	8b 41 04             	mov    0x4(%ecx),%eax
   1f579:	89 c3                	mov    %eax,%ebx
   1f57b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   1f57e:	83 eb 08             	sub    $0x8,%ebx
   1f581:	8b 33                	mov    (%ebx),%esi
   1f583:	29 f3                	sub    %esi,%ebx
   1f585:	8d 73 08             	lea    0x8(%ebx),%esi
   1f588:	81 7e 0c 01 01 ef be 	cmpl   $0xbeef0101,0xc(%esi)
   1f58f:	0f 85 8b 01 00 00    	jne    1f720 <heap_shrink+0x1c0>
   1f595:	8b 53 08             	mov    0x8(%ebx),%edx
   1f598:	8d 44 16 f8          	lea    -0x8(%esi,%edx,1),%eax
   1f59c:	81 78 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%eax)
   1f5a3:	0f 85 a4 01 00 00    	jne    1f74d <heap_shrink+0x1ed>
   1f5a9:	3b 10                	cmp    (%eax),%edx
   1f5ab:	0f 85 74 01 00 00    	jne    1f725 <heap_shrink+0x1c5>
   1f5b1:	8b 7e 08             	mov    0x8(%esi),%edi
   1f5b4:	39 cf                	cmp    %ecx,%edi
   1f5b6:	0f 85 b9 01 00 00    	jne    1f775 <heap_shrink+0x215>
   1f5bc:	80 7e 04 00          	cmpb   $0x0,0x4(%esi)
   1f5c0:	75 16                	jne    1f5d8 <heap_shrink+0x78>
   1f5c2:	c7 05 cc 06 03 00 00 	movl   $0x0,0x306cc
   1f5c9:	00 00 00 
   1f5cc:	83 c4 3c             	add    $0x3c,%esp
   1f5cf:	5b                   	pop    %ebx
   1f5d0:	5e                   	pop    %esi
   1f5d1:	5f                   	pop    %edi
   1f5d2:	5d                   	pop    %ebp
   1f5d3:	c3                   	ret    
   1f5d4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f5d8:	8d 4f 23             	lea    0x23(%edi),%ecx
   1f5db:	83 e1 f0             	and    $0xfffffff0,%ecx
   1f5de:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
   1f5e1:	81 79 0c 01 01 ef be 	cmpl   $0xbeef0101,0xc(%ecx)
   1f5e8:	0f 85 32 01 00 00    	jne    1f720 <heap_shrink+0x1c0>
   1f5ee:	8b 01                	mov    (%ecx),%eax
   1f5f0:	89 45 d8             	mov    %eax,-0x28(%ebp)
   1f5f3:	8d 4c 01 f8          	lea    -0x8(%ecx,%eax,1),%ecx
   1f5f7:	89 4d e0             	mov    %ecx,-0x20(%ebp)
   1f5fa:	81 79 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%ecx)
   1f601:	0f 85 46 01 00 00    	jne    1f74d <heap_shrink+0x1ed>
   1f607:	3b 01                	cmp    (%ecx),%eax
   1f609:	0f 85 16 01 00 00    	jne    1f725 <heap_shrink+0x1c5>
   1f60f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   1f612:	3b 78 08             	cmp    0x8(%eax),%edi
   1f615:	0f 85 82 01 00 00    	jne    1f79d <heap_shrink+0x23d>
   1f61b:	81 e2 00 f0 ff ff    	and    $0xfffff000,%edx
   1f621:	39 75 d4             	cmp    %esi,-0x2c(%ebp)
   1f624:	74 6a                	je     1f690 <heap_shrink+0x130>
   1f626:	81 fa ff ff 03 00    	cmp    $0x3ffff,%edx
   1f62c:	76 94                	jbe    1f5c2 <heap_shrink+0x62>
   1f62e:	8b 0f                	mov    (%edi),%ecx
   1f630:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1f633:	29 c8                	sub    %ecx,%eax
   1f635:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   1f63c:	00 
   1f63d:	29 d0                	sub    %edx,%eax
   1f63f:	89 0c 24             	mov    %ecx,(%esp)
   1f642:	89 44 24 04          	mov    %eax,0x4(%esp)
   1f646:	8d 14 01             	lea    (%ecx,%eax,1),%edx
   1f649:	89 55 dc             	mov    %edx,-0x24(%ebp)
   1f64c:	e8 8f b9 00 00       	call   2afe0 <as_area_resize>
   1f651:	8b 55 dc             	mov    -0x24(%ebp),%edx
   1f654:	85 c0                	test   %eax,%eax
   1f656:	0f 85 69 01 00 00    	jne    1f7c5 <heap_shrink+0x265>
   1f65c:	89 d0                	mov    %edx,%eax
   1f65e:	89 57 04             	mov    %edx,0x4(%edi)
   1f661:	29 f0                	sub    %esi,%eax
   1f663:	0f 84 59 ff ff ff    	je     1f5c2 <heap_shrink+0x62>
   1f669:	83 f8 17             	cmp    $0x17,%eax
   1f66c:	76 5a                	jbe    1f6c8 <heap_shrink+0x168>
   1f66e:	89 43 08             	mov    %eax,0x8(%ebx)
   1f671:	c6 46 04 01          	movb   $0x1,0x4(%esi)
   1f675:	89 7e 08             	mov    %edi,0x8(%esi)
   1f678:	c7 46 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%esi)
   1f67f:	89 42 f8             	mov    %eax,-0x8(%edx)
   1f682:	c7 42 fc 02 02 ef be 	movl   $0xbeef0202,-0x4(%edx)
   1f689:	e9 34 ff ff ff       	jmp    1f5c2 <heap_shrink+0x62>
   1f68e:	66 90                	xchg   %ax,%ax
   1f690:	8b 5f 08             	mov    0x8(%edi),%ebx
   1f693:	8b 77 0c             	mov    0xc(%edi),%esi
   1f696:	85 db                	test   %ebx,%ebx
   1f698:	74 76                	je     1f710 <heap_shrink+0x1b0>
   1f69a:	89 d8                	mov    %ebx,%eax
   1f69c:	e8 bf fd ff ff       	call   1f460 <area_check>
   1f6a1:	89 73 0c             	mov    %esi,0xc(%ebx)
   1f6a4:	85 f6                	test   %esi,%esi
   1f6a6:	74 70                	je     1f718 <heap_shrink+0x1b8>
   1f6a8:	89 f0                	mov    %esi,%eax
   1f6aa:	e8 b1 fd ff ff       	call   1f460 <area_check>
   1f6af:	89 5e 08             	mov    %ebx,0x8(%esi)
   1f6b2:	8b 07                	mov    (%edi),%eax
   1f6b4:	89 04 24             	mov    %eax,(%esp)
   1f6b7:	e8 74 b9 00 00       	call   2b030 <as_area_destroy>
   1f6bc:	e9 01 ff ff ff       	jmp    1f5c2 <heap_shrink+0x62>
   1f6c1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1f6c8:	8b 13                	mov    (%ebx),%edx
   1f6ca:	29 d3                	sub    %edx,%ebx
   1f6cc:	8d 53 08             	lea    0x8(%ebx),%edx
   1f6cf:	81 7b 14 01 01 ef be 	cmpl   $0xbeef0101,0x14(%ebx)
   1f6d6:	75 48                	jne    1f720 <heap_shrink+0x1c0>
   1f6d8:	8b 4b 08             	mov    0x8(%ebx),%ecx
   1f6db:	8d 5c 0a f8          	lea    -0x8(%edx,%ecx,1),%ebx
   1f6df:	81 7b 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%ebx)
   1f6e6:	75 65                	jne    1f74d <heap_shrink+0x1ed>
   1f6e8:	3b 0b                	cmp    (%ebx),%ecx
   1f6ea:	75 39                	jne    1f725 <heap_shrink+0x1c5>
   1f6ec:	01 c8                	add    %ecx,%eax
   1f6ee:	89 7a 08             	mov    %edi,0x8(%edx)
   1f6f1:	89 02                	mov    %eax,(%edx)
   1f6f3:	c7 42 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%edx)
   1f6fa:	8d 54 02 f8          	lea    -0x8(%edx,%eax,1),%edx
   1f6fe:	89 02                	mov    %eax,(%edx)
   1f700:	c7 42 04 02 02 ef be 	movl   $0xbeef0202,0x4(%edx)
   1f707:	e9 b6 fe ff ff       	jmp    1f5c2 <heap_shrink+0x62>
   1f70c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f710:	89 35 c8 06 03 00    	mov    %esi,0x306c8
   1f716:	eb 8c                	jmp    1f6a4 <heap_shrink+0x144>
   1f718:	89 1d c4 06 03 00    	mov    %ebx,0x306c4
   1f71e:	eb 92                	jmp    1f6b2 <heap_shrink+0x152>
   1f720:	e8 2b 11 00 00       	call   20850 <block_check.part.0>
   1f725:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1f72c:	e8 ff 95 ff ff       	call   18d30 <futex_up>
   1f731:	c7 44 24 08 02 01 00 	movl   $0x102,0x8(%esp)
   1f738:	00 
   1f739:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1f740:	00 
   1f741:	c7 04 24 52 e2 02 00 	movl   $0x2e252,(%esp)
   1f748:	e8 63 b1 00 00       	call   2a8b0 <assert_abort>
   1f74d:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1f754:	e8 d7 95 ff ff       	call   18d30 <futex_up>
   1f759:	c7 44 24 08 01 01 00 	movl   $0x101,0x8(%esp)
   1f760:	00 
   1f761:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1f768:	00 
   1f769:	c7 04 24 a8 e3 02 00 	movl   $0x2e3a8,(%esp)
   1f770:	e8 3b b1 00 00       	call   2a8b0 <assert_abort>
   1f775:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1f77c:	e8 af 95 ff ff       	call   18d30 <futex_up>
   1f781:	c7 44 24 08 85 01 00 	movl   $0x185,0x8(%esp)
   1f788:	00 
   1f789:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1f790:	00 
   1f791:	c7 04 24 6b e2 02 00 	movl   $0x2e26b,(%esp)
   1f798:	e8 13 b1 00 00       	call   2a8b0 <assert_abort>
   1f79d:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1f7a4:	e8 87 95 ff ff       	call   18d30 <futex_up>
   1f7a9:	c7 44 24 08 92 01 00 	movl   $0x192,0x8(%esp)
   1f7b0:	00 
   1f7b1:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1f7b8:	00 
   1f7b9:	c7 04 24 83 e2 02 00 	movl   $0x2e283,(%esp)
   1f7c0:	e8 eb b0 00 00       	call   2a8b0 <assert_abort>
   1f7c5:	e8 c6 09 ff ff       	call   10190 <abort>
   1f7ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0001f7d0 <malloc_area>:
   1f7d0:	55                   	push   %ebp
   1f7d1:	89 e5                	mov    %esp,%ebp
   1f7d3:	57                   	push   %edi
   1f7d4:	56                   	push   %esi
   1f7d5:	53                   	push   %ebx
   1f7d6:	83 ec 4c             	sub    $0x4c,%esp
   1f7d9:	89 d3                	mov    %edx,%ebx
   1f7db:	89 45 cc             	mov    %eax,-0x34(%ebp)
   1f7de:	89 4d dc             	mov    %ecx,-0x24(%ebp)
   1f7e1:	e8 7a fc ff ff       	call   1f460 <area_check>
   1f7e6:	8b 45 cc             	mov    -0x34(%ebp),%eax
   1f7e9:	83 c0 23             	add    $0x23,%eax
   1f7ec:	89 45 c8             	mov    %eax,-0x38(%ebp)
   1f7ef:	83 e0 f0             	and    $0xfffffff0,%eax
   1f7f2:	89 45 d0             	mov    %eax,-0x30(%ebp)
   1f7f5:	39 d8                	cmp    %ebx,%eax
   1f7f7:	0f 87 ff 03 00 00    	ja     1fbfc <malloc_area+0x42c>
   1f7fd:	8b 45 cc             	mov    -0x34(%ebp),%eax
   1f800:	8b 40 04             	mov    0x4(%eax),%eax
   1f803:	89 45 e0             	mov    %eax,-0x20(%ebp)
   1f806:	39 c3                	cmp    %eax,%ebx
   1f808:	0f 83 16 04 00 00    	jae    1fc24 <malloc_area+0x454>
   1f80e:	81 7b 0c 01 01 ef be 	cmpl   $0xbeef0101,0xc(%ebx)
   1f815:	0f 85 64 03 00 00    	jne    1fb7f <malloc_area+0x3af>
   1f81b:	8b 0b                	mov    (%ebx),%ecx
   1f81d:	89 de                	mov    %ebx,%esi
   1f81f:	8d 44 0b f8          	lea    -0x8(%ebx,%ecx,1),%eax
   1f823:	81 78 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%eax)
   1f82a:	0f 85 7c 03 00 00    	jne    1fbac <malloc_area+0x3dc>
   1f830:	3b 08                	cmp    (%eax),%ecx
   1f832:	0f 85 4c 03 00 00    	jne    1fb84 <malloc_area+0x3b4>
   1f838:	8b 45 dc             	mov    -0x24(%ebp),%eax
   1f83b:	85 c0                	test   %eax,%eax
   1f83d:	0f 95 45 c7          	setne  -0x39(%ebp)
   1f841:	0f 85 92 02 00 00    	jne    1fad9 <malloc_area+0x309>
   1f847:	89 da                	mov    %ebx,%edx
   1f849:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   1f84c:	4b                   	dec    %ebx
   1f84d:	89 5d d8             	mov    %ebx,-0x28(%ebp)
   1f850:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   1f853:	f7 db                	neg    %ebx
   1f855:	89 5d d4             	mov    %ebx,-0x2c(%ebp)
   1f858:	80 7a 04 00          	cmpb   $0x0,0x4(%edx)
   1f85c:	74 62                	je     1f8c0 <malloc_area+0xf0>
   1f85e:	39 4d 08             	cmp    %ecx,0x8(%ebp)
   1f861:	77 5d                	ja     1f8c0 <malloc_area+0xf0>
   1f863:	8d 7e 10             	lea    0x10(%esi),%edi
   1f866:	8b 5d d8             	mov    -0x28(%ebp),%ebx
   1f869:	01 fb                	add    %edi,%ebx
   1f86b:	89 f8                	mov    %edi,%eax
   1f86d:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
   1f870:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
   1f873:	21 5d e4             	and    %ebx,-0x1c(%ebp)
   1f876:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   1f879:	39 df                	cmp    %ebx,%edi
   1f87b:	0f 84 91 00 00 00    	je     1f912 <malloc_area+0x142>
   1f881:	89 d8                	mov    %ebx,%eax
   1f883:	29 f8                	sub    %edi,%eax
   1f885:	89 c7                	mov    %eax,%edi
   1f887:	8b 45 08             	mov    0x8(%ebp),%eax
   1f88a:	01 f8                	add    %edi,%eax
   1f88c:	39 c8                	cmp    %ecx,%eax
   1f88e:	77 30                	ja     1f8c0 <malloc_area+0xf0>
   1f890:	39 55 d0             	cmp    %edx,-0x30(%ebp)
   1f893:	0f 82 09 01 00 00    	jb     1f9a2 <malloc_area+0x1d2>
   1f899:	83 ff 17             	cmp    $0x17,%edi
   1f89c:	0f 87 8c 00 00 00    	ja     1f92e <malloc_area+0x15e>
   1f8a2:	29 df                	sub    %ebx,%edi
   1f8a4:	8b 75 0c             	mov    0xc(%ebp),%esi
   1f8a7:	90                   	nop
   1f8a8:	01 f3                	add    %esi,%ebx
   1f8aa:	8d 04 3b             	lea    (%ebx,%edi,1),%eax
   1f8ad:	83 f8 17             	cmp    $0x17,%eax
   1f8b0:	76 f6                	jbe    1f8a8 <malloc_area+0xd8>
   1f8b2:	8b 75 08             	mov    0x8(%ebp),%esi
   1f8b5:	01 c6                	add    %eax,%esi
   1f8b7:	39 ce                	cmp    %ecx,%esi
   1f8b9:	76 71                	jbe    1f92c <malloc_area+0x15c>
   1f8bb:	90                   	nop
   1f8bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f8c0:	01 ca                	add    %ecx,%edx
   1f8c2:	39 55 e0             	cmp    %edx,-0x20(%ebp)
   1f8c5:	76 41                	jbe    1f908 <malloc_area+0x138>
   1f8c7:	81 7a 0c 01 01 ef be 	cmpl   $0xbeef0101,0xc(%edx)
   1f8ce:	0f 85 ab 02 00 00    	jne    1fb7f <malloc_area+0x3af>
   1f8d4:	8b 0a                	mov    (%edx),%ecx
   1f8d6:	89 d6                	mov    %edx,%esi
   1f8d8:	8d 44 0a f8          	lea    -0x8(%edx,%ecx,1),%eax
   1f8dc:	81 78 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%eax)
   1f8e3:	0f 85 c3 02 00 00    	jne    1fbac <malloc_area+0x3dc>
   1f8e9:	3b 08                	cmp    (%eax),%ecx
   1f8eb:	0f 85 93 02 00 00    	jne    1fb84 <malloc_area+0x3b4>
   1f8f1:	39 55 dc             	cmp    %edx,-0x24(%ebp)
   1f8f4:	0f 85 5e ff ff ff    	jne    1f858 <malloc_area+0x88>
   1f8fa:	80 7d c7 00          	cmpb   $0x0,-0x39(%ebp)
   1f8fe:	0f 84 54 ff ff ff    	je     1f858 <malloc_area+0x88>
   1f904:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1f908:	31 c0                	xor    %eax,%eax
   1f90a:	83 c4 4c             	add    $0x4c,%esp
   1f90d:	5b                   	pop    %ebx
   1f90e:	5e                   	pop    %esi
   1f90f:	5f                   	pop    %edi
   1f910:	5d                   	pop    %ebp
   1f911:	c3                   	ret    
   1f912:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1f915:	83 c3 18             	add    $0x18,%ebx
   1f918:	39 cb                	cmp    %ecx,%ebx
   1f91a:	0f 82 41 01 00 00    	jb     1fa61 <malloc_area+0x291>
   1f920:	c6 42 04 00          	movb   $0x0,0x4(%edx)
   1f924:	89 15 cc 06 03 00    	mov    %edx,0x306cc
   1f92a:	eb de                	jmp    1f90a <malloc_area+0x13a>
   1f92c:	89 c7                	mov    %eax,%edi
   1f92e:	8b 55 d0             	mov    -0x30(%ebp),%edx
   1f931:	8b 45 c8             	mov    -0x38(%ebp),%eax
   1f934:	8b 75 cc             	mov    -0x34(%ebp),%esi
   1f937:	83 e0 f0             	and    $0xfffffff0,%eax
   1f93a:	89 3a                	mov    %edi,(%edx)
   1f93c:	c6 42 04 01          	movb   $0x1,0x4(%edx)
   1f940:	89 72 08             	mov    %esi,0x8(%edx)
   1f943:	c7 42 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%edx)
   1f94a:	8d 54 3a f8          	lea    -0x8(%edx,%edi,1),%edx
   1f94e:	01 f8                	add    %edi,%eax
   1f950:	29 f9                	sub    %edi,%ecx
   1f952:	89 3a                	mov    %edi,(%edx)
   1f954:	c7 42 04 02 02 ef be 	movl   $0xbeef0202,0x4(%edx)
   1f95b:	8b 55 cc             	mov    -0x34(%ebp),%edx
   1f95e:	89 08                	mov    %ecx,(%eax)
   1f960:	89 50 08             	mov    %edx,0x8(%eax)
   1f963:	8d 14 01             	lea    (%ecx,%eax,1),%edx
   1f966:	c6 40 04 01          	movb   $0x1,0x4(%eax)
   1f96a:	c7 40 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%eax)
   1f971:	39 4d 08             	cmp    %ecx,0x8(%ebp)
   1f974:	89 4a f8             	mov    %ecx,-0x8(%edx)
   1f977:	c7 42 fc 02 02 ef be 	movl   $0xbeef0202,-0x4(%edx)
   1f97e:	0f 87 50 02 00 00    	ja     1fbd4 <malloc_area+0x404>
   1f984:	8b 55 08             	mov    0x8(%ebp),%edx
   1f987:	83 c2 18             	add    $0x18,%edx
   1f98a:	39 d1                	cmp    %edx,%ecx
   1f98c:	0f 87 9f 01 00 00    	ja     1fb31 <malloc_area+0x361>
   1f992:	c6 40 04 00          	movb   $0x0,0x4(%eax)
   1f996:	a3 cc 06 03 00       	mov    %eax,0x306cc
   1f99b:	89 d8                	mov    %ebx,%eax
   1f99d:	e9 68 ff ff ff       	jmp    1f90a <malloc_area+0x13a>
   1f9a2:	89 d3                	mov    %edx,%ebx
   1f9a4:	8b 42 f8             	mov    -0x8(%edx),%eax
   1f9a7:	29 c3                	sub    %eax,%ebx
   1f9a9:	89 5d d8             	mov    %ebx,-0x28(%ebp)
   1f9ac:	81 7b 0c 01 01 ef be 	cmpl   $0xbeef0101,0xc(%ebx)
   1f9b3:	0f 85 c6 01 00 00    	jne    1fb7f <malloc_area+0x3af>
   1f9b9:	8b 03                	mov    (%ebx),%eax
   1f9bb:	8b 5d d8             	mov    -0x28(%ebp),%ebx
   1f9be:	89 45 e0             	mov    %eax,-0x20(%ebp)
   1f9c1:	8d 5c 03 f8          	lea    -0x8(%ebx,%eax,1),%ebx
   1f9c5:	89 5d dc             	mov    %ebx,-0x24(%ebp)
   1f9c8:	81 7b 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%ebx)
   1f9cf:	0f 85 d7 01 00 00    	jne    1fbac <malloc_area+0x3dc>
   1f9d5:	89 c3                	mov    %eax,%ebx
   1f9d7:	8b 45 dc             	mov    -0x24(%ebp),%eax
   1f9da:	3b 18                	cmp    (%eax),%ebx
   1f9dc:	0f 85 a2 01 00 00    	jne    1fb84 <malloc_area+0x3b4>
   1f9e2:	8b 5d d8             	mov    -0x28(%ebp),%ebx
   1f9e5:	29 f9                	sub    %edi,%ecx
   1f9e7:	8d 04 3a             	lea    (%edx,%edi,1),%eax
   1f9ea:	80 7b 04 00          	cmpb   $0x0,0x4(%ebx)
   1f9ee:	0f 85 b9 00 00 00    	jne    1faad <malloc_area+0x2dd>
   1f9f4:	83 ff 17             	cmp    $0x17,%edi
   1f9f7:	0f 86 b0 00 00 00    	jbe    1faad <malloc_area+0x2dd>
   1f9fd:	01 fe                	add    %edi,%esi
   1f9ff:	8b 5d cc             	mov    -0x34(%ebp),%ebx
   1fa02:	89 3a                	mov    %edi,(%edx)
   1fa04:	c6 42 04 01          	movb   $0x1,0x4(%edx)
   1fa08:	89 5a 08             	mov    %ebx,0x8(%edx)
   1fa0b:	c7 42 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%edx)
   1fa12:	89 7e f8             	mov    %edi,-0x8(%esi)
   1fa15:	c7 46 fc 02 02 ef be 	movl   $0xbeef0202,-0x4(%esi)
   1fa1c:	8d 54 08 f8          	lea    -0x8(%eax,%ecx,1),%edx
   1fa20:	89 08                	mov    %ecx,(%eax)
   1fa22:	c6 40 04 01          	movb   $0x1,0x4(%eax)
   1fa26:	89 58 08             	mov    %ebx,0x8(%eax)
   1fa29:	c7 40 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%eax)
   1fa30:	39 4d 08             	cmp    %ecx,0x8(%ebp)
   1fa33:	89 0a                	mov    %ecx,(%edx)
   1fa35:	c7 42 04 02 02 ef be 	movl   $0xbeef0202,0x4(%edx)
   1fa3c:	0f 87 92 01 00 00    	ja     1fbd4 <malloc_area+0x404>
   1fa42:	8b 55 08             	mov    0x8(%ebp),%edx
   1fa45:	83 c2 18             	add    $0x18,%edx
   1fa48:	39 d1                	cmp    %edx,%ecx
   1fa4a:	0f 87 98 00 00 00    	ja     1fae8 <malloc_area+0x318>
   1fa50:	c6 40 04 00          	movb   $0x0,0x4(%eax)
   1fa54:	a3 cc 06 03 00       	mov    %eax,0x306cc
   1fa59:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1fa5c:	e9 a9 fe ff ff       	jmp    1f90a <malloc_area+0x13a>
   1fa61:	2b 4d 08             	sub    0x8(%ebp),%ecx
   1fa64:	8b 5d 08             	mov    0x8(%ebp),%ebx
   1fa67:	01 d3                	add    %edx,%ebx
   1fa69:	8b 7a 08             	mov    0x8(%edx),%edi
   1fa6c:	89 0b                	mov    %ecx,(%ebx)
   1fa6e:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   1fa72:	c7 43 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%ebx)
   1fa79:	89 7b 08             	mov    %edi,0x8(%ebx)
   1fa7c:	8d 5c 0b f8          	lea    -0x8(%ebx,%ecx,1),%ebx
   1fa80:	89 0b                	mov    %ecx,(%ebx)
   1fa82:	8b 4d 08             	mov    0x8(%ebp),%ecx
   1fa85:	c7 43 04 02 02 ef be 	movl   $0xbeef0202,0x4(%ebx)
   1fa8c:	89 0a                	mov    %ecx,(%edx)
   1fa8e:	89 cb                	mov    %ecx,%ebx
   1fa90:	8d 4c 0e f8          	lea    -0x8(%esi,%ecx,1),%ecx
   1fa94:	c6 42 04 00          	movb   $0x0,0x4(%edx)
   1fa98:	c7 42 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%edx)
   1fa9f:	89 19                	mov    %ebx,(%ecx)
   1faa1:	c7 41 04 02 02 ef be 	movl   $0xbeef0202,0x4(%ecx)
   1faa8:	e9 77 fe ff ff       	jmp    1f924 <malloc_area+0x154>
   1faad:	8b 55 e0             	mov    -0x20(%ebp),%edx
   1fab0:	8b 75 d8             	mov    -0x28(%ebp),%esi
   1fab3:	01 d7                	add    %edx,%edi
   1fab5:	8b 55 cc             	mov    -0x34(%ebp),%edx
   1fab8:	89 56 08             	mov    %edx,0x8(%esi)
   1fabb:	89 3e                	mov    %edi,(%esi)
   1fabd:	8d 54 3e f8          	lea    -0x8(%esi,%edi,1),%edx
   1fac1:	c7 46 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%esi)
   1fac8:	8b 5d cc             	mov    -0x34(%ebp),%ebx
   1facb:	89 3a                	mov    %edi,(%edx)
   1facd:	c7 42 04 02 02 ef be 	movl   $0xbeef0202,0x4(%edx)
   1fad4:	e9 43 ff ff ff       	jmp    1fa1c <malloc_area+0x24c>
   1fad9:	3b 5d dc             	cmp    -0x24(%ebp),%ebx
   1fadc:	0f 85 65 fd ff ff    	jne    1f847 <malloc_area+0x77>
   1fae2:	e9 21 fe ff ff       	jmp    1f908 <malloc_area+0x138>
   1fae7:	90                   	nop
   1fae8:	8b 75 08             	mov    0x8(%ebp),%esi
   1faeb:	8b 55 08             	mov    0x8(%ebp),%edx
   1faee:	01 c2                	add    %eax,%edx
   1faf0:	29 f1                	sub    %esi,%ecx
   1faf2:	8b 75 08             	mov    0x8(%ebp),%esi
   1faf5:	89 0a                	mov    %ecx,(%edx)
   1faf7:	c6 42 04 01          	movb   $0x1,0x4(%edx)
   1fafb:	c7 42 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%edx)
   1fb02:	89 5a 08             	mov    %ebx,0x8(%edx)
   1fb05:	8d 54 0a f8          	lea    -0x8(%edx,%ecx,1),%edx
   1fb09:	89 0a                	mov    %ecx,(%edx)
   1fb0b:	c7 42 04 02 02 ef be 	movl   $0xbeef0202,0x4(%edx)
   1fb12:	8d 54 30 f8          	lea    -0x8(%eax,%esi,1),%edx
   1fb16:	89 30                	mov    %esi,(%eax)
   1fb18:	c6 40 04 00          	movb   $0x0,0x4(%eax)
   1fb1c:	c7 40 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%eax)
   1fb23:	89 32                	mov    %esi,(%edx)
   1fb25:	c7 42 04 02 02 ef be 	movl   $0xbeef0202,0x4(%edx)
   1fb2c:	e9 23 ff ff ff       	jmp    1fa54 <malloc_area+0x284>
   1fb31:	8b 55 08             	mov    0x8(%ebp),%edx
   1fb34:	8b 7d 08             	mov    0x8(%ebp),%edi
   1fb37:	01 c2                	add    %eax,%edx
   1fb39:	29 f9                	sub    %edi,%ecx
   1fb3b:	8b 75 cc             	mov    -0x34(%ebp),%esi
   1fb3e:	89 0a                	mov    %ecx,(%edx)
   1fb40:	c6 42 04 01          	movb   $0x1,0x4(%edx)
   1fb44:	c7 42 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%edx)
   1fb4b:	89 72 08             	mov    %esi,0x8(%edx)
   1fb4e:	8d 54 0a f8          	lea    -0x8(%edx,%ecx,1),%edx
   1fb52:	89 0a                	mov    %ecx,(%edx)
   1fb54:	c7 42 04 02 02 ef be 	movl   $0xbeef0202,0x4(%edx)
   1fb5b:	8b 55 08             	mov    0x8(%ebp),%edx
   1fb5e:	c6 40 04 00          	movb   $0x0,0x4(%eax)
   1fb62:	89 10                	mov    %edx,(%eax)
   1fb64:	89 d1                	mov    %edx,%ecx
   1fb66:	8d 54 10 f8          	lea    -0x8(%eax,%edx,1),%edx
   1fb6a:	c7 40 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%eax)
   1fb71:	89 0a                	mov    %ecx,(%edx)
   1fb73:	c7 42 04 02 02 ef be 	movl   $0xbeef0202,0x4(%edx)
   1fb7a:	e9 17 fe ff ff       	jmp    1f996 <malloc_area+0x1c6>
   1fb7f:	e8 cc 0c 00 00       	call   20850 <block_check.part.0>
   1fb84:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1fb8b:	e8 a0 91 ff ff       	call   18d30 <futex_up>
   1fb90:	c7 44 24 08 02 01 00 	movl   $0x102,0x8(%esp)
   1fb97:	00 
   1fb98:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1fb9f:	00 
   1fba0:	c7 04 24 52 e2 02 00 	movl   $0x2e252,(%esp)
   1fba7:	e8 04 ad 00 00       	call   2a8b0 <assert_abort>
   1fbac:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1fbb3:	e8 78 91 ff ff       	call   18d30 <futex_up>
   1fbb8:	c7 44 24 08 01 01 00 	movl   $0x101,0x8(%esp)
   1fbbf:	00 
   1fbc0:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1fbc7:	00 
   1fbc8:	c7 04 24 a8 e3 02 00 	movl   $0x2e3a8,(%esp)
   1fbcf:	e8 dc ac 00 00       	call   2a8b0 <assert_abort>
   1fbd4:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1fbdb:	e8 50 91 ff ff       	call   18d30 <futex_up>
   1fbe0:	c7 44 24 08 f5 01 00 	movl   $0x1f5,0x8(%esp)
   1fbe7:	00 
   1fbe8:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1fbef:	00 
   1fbf0:	c7 04 24 9c e2 02 00 	movl   $0x2e29c,(%esp)
   1fbf7:	e8 b4 ac 00 00       	call   2a8b0 <assert_abort>
   1fbfc:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1fc03:	e8 28 91 ff ff       	call   18d30 <futex_up>
   1fc08:	c7 44 24 08 19 02 00 	movl   $0x219,0x8(%esp)
   1fc0f:	00 
   1fc10:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1fc17:	00 
   1fc18:	c7 04 24 d0 e3 02 00 	movl   $0x2e3d0,(%esp)
   1fc1f:	e8 8c ac 00 00       	call   2a8b0 <assert_abort>
   1fc24:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1fc2b:	e8 00 91 ff ff       	call   18d30 <futex_up>
   1fc30:	c7 44 24 08 1a 02 00 	movl   $0x21a,0x8(%esp)
   1fc37:	00 
   1fc38:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1fc3f:	00 
   1fc40:	c7 04 24 10 e4 02 00 	movl   $0x2e410,(%esp)
   1fc47:	e8 64 ac 00 00       	call   2a8b0 <assert_abort>
   1fc4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001fc50 <malloc_internal>:
   1fc50:	55                   	push   %ebp
   1fc51:	89 e5                	mov    %esp,%ebp
   1fc53:	57                   	push   %edi
   1fc54:	56                   	push   %esi
   1fc55:	53                   	push   %ebx
   1fc56:	83 ec 3c             	sub    $0x3c,%esp
   1fc59:	89 45 dc             	mov    %eax,-0x24(%ebp)
   1fc5c:	8b 1d c8 06 03 00    	mov    0x306c8,%ebx
   1fc62:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   1fc65:	85 db                	test   %ebx,%ebx
   1fc67:	0f 84 0f 03 00 00    	je     1ff7c <malloc_internal+0x32c>
   1fc6d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   1fc70:	85 d2                	test   %edx,%edx
   1fc72:	0f 84 c8 00 00 00    	je     1fd40 <malloc_internal+0xf0>
   1fc78:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1fc7b:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   1fc7e:	c1 e0 04             	shl    $0x4,%eax
   1fc81:	ba 10 00 00 00       	mov    $0x10,%edx
   1fc86:	89 45 e0             	mov    %eax,-0x20(%ebp)
   1fc89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   1fc90:	89 cf                	mov    %ecx,%edi
   1fc92:	89 d0                	mov    %edx,%eax
   1fc94:	29 d7                	sub    %edx,%edi
   1fc96:	29 c8                	sub    %ecx,%eax
   1fc98:	89 ce                	mov    %ecx,%esi
   1fc9a:	39 ca                	cmp    %ecx,%edx
   1fc9c:	73 02                	jae    1fca0 <malloc_internal+0x50>
   1fc9e:	89 fe                	mov    %edi,%esi
   1fca0:	39 ca                	cmp    %ecx,%edx
   1fca2:	73 02                	jae    1fca6 <malloc_internal+0x56>
   1fca4:	89 d0                	mov    %edx,%eax
   1fca6:	89 c2                	mov    %eax,%edx
   1fca8:	89 f1                	mov    %esi,%ecx
   1fcaa:	85 c0                	test   %eax,%eax
   1fcac:	75 e2                	jne    1fc90 <malloc_internal+0x40>
   1fcae:	8b 45 e0             	mov    -0x20(%ebp),%eax
   1fcb1:	31 d2                	xor    %edx,%edx
   1fcb3:	f7 f6                	div    %esi
   1fcb5:	89 45 e0             	mov    %eax,-0x20(%ebp)
   1fcb8:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
   1fcbb:	0f 87 7f 00 00 00    	ja     1fd40 <malloc_internal+0xf0>
   1fcc1:	8b 55 dc             	mov    -0x24(%ebp),%edx
   1fcc4:	8b 3d cc 06 03 00    	mov    0x306cc,%edi
   1fcca:	83 c2 0f             	add    $0xf,%edx
   1fccd:	83 e2 f0             	and    $0xfffffff0,%edx
   1fcd0:	89 d6                	mov    %edx,%esi
   1fcd2:	89 55 dc             	mov    %edx,-0x24(%ebp)
   1fcd5:	83 c6 18             	add    $0x18,%esi
   1fcd8:	85 ff                	test   %edi,%edi
   1fcda:	74 32                	je     1fd0e <malloc_internal+0xbe>
   1fcdc:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   1fcdf:	8b 47 08             	mov    0x8(%edi),%eax
   1fce2:	89 fa                	mov    %edi,%edx
   1fce4:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1fce8:	89 34 24             	mov    %esi,(%esp)
   1fceb:	31 c9                	xor    %ecx,%ecx
   1fced:	e8 de fa ff ff       	call   1f7d0 <malloc_area>
   1fcf2:	85 c0                	test   %eax,%eax
   1fcf4:	74 0a                	je     1fd00 <malloc_internal+0xb0>
   1fcf6:	83 c4 3c             	add    $0x3c,%esp
   1fcf9:	5b                   	pop    %ebx
   1fcfa:	5e                   	pop    %esi
   1fcfb:	5f                   	pop    %edi
   1fcfc:	5d                   	pop    %ebp
   1fcfd:	c3                   	ret    
   1fcfe:	66 90                	xchg   %ax,%ax
   1fd00:	8b 1d c8 06 03 00    	mov    0x306c8,%ebx
   1fd06:	85 db                	test   %ebx,%ebx
   1fd08:	0f 84 e2 00 00 00    	je     1fdf0 <malloc_internal+0x1a0>
   1fd0e:	89 7d e4             	mov    %edi,-0x1c(%ebp)
   1fd11:	8b 7d e0             	mov    -0x20(%ebp),%edi
   1fd14:	eb 09                	jmp    1fd1f <malloc_internal+0xcf>
   1fd16:	66 90                	xchg   %ax,%ax
   1fd18:	8b 5b 0c             	mov    0xc(%ebx),%ebx
   1fd1b:	85 db                	test   %ebx,%ebx
   1fd1d:	74 31                	je     1fd50 <malloc_internal+0x100>
   1fd1f:	8d 53 23             	lea    0x23(%ebx),%edx
   1fd22:	89 7c 24 04          	mov    %edi,0x4(%esp)
   1fd26:	83 e2 f0             	and    $0xfffffff0,%edx
   1fd29:	89 34 24             	mov    %esi,(%esp)
   1fd2c:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   1fd2f:	89 d8                	mov    %ebx,%eax
   1fd31:	e8 9a fa ff ff       	call   1f7d0 <malloc_area>
   1fd36:	85 c0                	test   %eax,%eax
   1fd38:	74 de                	je     1fd18 <malloc_internal+0xc8>
   1fd3a:	eb ba                	jmp    1fcf6 <malloc_internal+0xa6>
   1fd3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   1fd40:	83 c4 3c             	add    $0x3c,%esp
   1fd43:	31 c0                	xor    %eax,%eax
   1fd45:	5b                   	pop    %ebx
   1fd46:	5e                   	pop    %esi
   1fd47:	5f                   	pop    %edi
   1fd48:	5d                   	pop    %ebp
   1fd49:	c3                   	ret    
   1fd4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1fd50:	8b 1d c8 06 03 00    	mov    0x306c8,%ebx
   1fd56:	85 db                	test   %ebx,%ebx
   1fd58:	0f 84 92 00 00 00    	je     1fdf0 <malloc_internal+0x1a0>
   1fd5e:	8b 55 e0             	mov    -0x20(%ebp),%edx
   1fd61:	01 f2                	add    %esi,%edx
   1fd63:	75 53                	jne    1fdb8 <malloc_internal+0x168>
   1fd65:	8b 7b 04             	mov    0x4(%ebx),%edi
   1fd68:	8b 4f f8             	mov    -0x8(%edi),%ecx
   1fd6b:	8b 45 e0             	mov    -0x20(%ebp),%eax
   1fd6e:	89 fa                	mov    %edi,%edx
   1fd70:	89 44 24 04          	mov    %eax,0x4(%esp)
   1fd74:	29 ca                	sub    %ecx,%edx
   1fd76:	89 34 24             	mov    %esi,(%esp)
   1fd79:	31 c9                	xor    %ecx,%ecx
   1fd7b:	89 d8                	mov    %ebx,%eax
   1fd7d:	e8 4e fa ff ff       	call   1f7d0 <malloc_area>
   1fd82:	85 c0                	test   %eax,%eax
   1fd84:	0f 85 6c ff ff ff    	jne    1fcf6 <malloc_internal+0xa6>
   1fd8a:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1fd91:	e8 9a 8f ff ff       	call   18d30 <futex_up>
   1fd96:	c7 44 24 08 a8 02 00 	movl   $0x2a8,0x8(%esp)
   1fd9d:	00 
   1fd9e:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1fda5:	00 
   1fda6:	c7 04 24 d3 e2 02 00 	movl   $0x2e2d3,(%esp)
   1fdad:	e8 fe aa 00 00       	call   2a8b0 <assert_abort>
   1fdb2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   1fdb8:	89 75 e4             	mov    %esi,-0x1c(%ebp)
   1fdbb:	89 d6                	mov    %edx,%esi
   1fdbd:	8d 76 00             	lea    0x0(%esi),%esi
   1fdc0:	89 d8                	mov    %ebx,%eax
   1fdc2:	e8 99 f6 ff ff       	call   1f460 <area_check>
   1fdc7:	8b 03                	mov    (%ebx),%eax
   1fdc9:	8b 53 04             	mov    0x4(%ebx),%edx
   1fdcc:	29 c2                	sub    %eax,%edx
   1fdce:	8d 8c 16 ff 0f 00 00 	lea    0xfff(%esi,%edx,1),%ecx
   1fdd5:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx
   1fddb:	8d 3c 08             	lea    (%eax,%ecx,1),%edi
   1fdde:	39 f8                	cmp    %edi,%eax
   1fde0:	0f 86 e2 00 00 00    	jbe    1fec8 <malloc_internal+0x278>
   1fde6:	8b 5b 0c             	mov    0xc(%ebx),%ebx
   1fde9:	85 db                	test   %ebx,%ebx
   1fdeb:	75 d3                	jne    1fdc0 <malloc_internal+0x170>
   1fded:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   1fdf0:	8b 55 dc             	mov    -0x24(%ebp),%edx
   1fdf3:	8b 45 e0             	mov    -0x20(%ebp),%eax
   1fdf6:	c7 44 24 08 0b 00 00 	movl   $0xb,0x8(%esp)
   1fdfd:	00 
   1fdfe:	c7 04 24 ff ff ff ff 	movl   $0xffffffff,(%esp)
   1fe05:	8d 5c 02 3b          	lea    0x3b(%edx,%eax,1),%ebx
   1fe09:	83 e3 f0             	and    $0xfffffff0,%ebx
   1fe0c:	81 c3 ff 0f 00 00    	add    $0xfff,%ebx
   1fe12:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx
   1fe18:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   1fe1c:	e8 6f b1 00 00       	call   2af90 <as_area_create>
   1fe21:	83 f8 ff             	cmp    $0xffffffff,%eax
   1fe24:	0f 84 16 ff ff ff    	je     1fd40 <malloc_internal+0xf0>
   1fe2a:	8d 50 23             	lea    0x23(%eax),%edx
   1fe2d:	8d 0c 18             	lea    (%eax,%ebx,1),%ecx
   1fe30:	83 e2 f0             	and    $0xfffffff0,%edx
   1fe33:	89 48 04             	mov    %ecx,0x4(%eax)
   1fe36:	29 d1                	sub    %edx,%ecx
   1fe38:	89 00                	mov    %eax,(%eax)
   1fe3a:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
   1fe41:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   1fe48:	8d 5c 0a f8          	lea    -0x8(%edx,%ecx,1),%ebx
   1fe4c:	c7 40 10 fe ca ef be 	movl   $0xbeefcafe,0x10(%eax)
   1fe53:	89 0a                	mov    %ecx,(%edx)
   1fe55:	c6 42 04 01          	movb   $0x1,0x4(%edx)
   1fe59:	89 42 08             	mov    %eax,0x8(%edx)
   1fe5c:	c7 42 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%edx)
   1fe63:	89 0b                	mov    %ecx,(%ebx)
   1fe65:	8b 0d c4 06 03 00    	mov    0x306c4,%ecx
   1fe6b:	c7 43 04 02 02 ef be 	movl   $0xbeef0202,0x4(%ebx)
   1fe72:	85 c9                	test   %ecx,%ecx
   1fe74:	0f 84 f3 00 00 00    	je     1ff6d <malloc_internal+0x31d>
   1fe7a:	89 48 08             	mov    %ecx,0x8(%eax)
   1fe7d:	89 41 0c             	mov    %eax,0xc(%ecx)
   1fe80:	a3 c4 06 03 00       	mov    %eax,0x306c4
   1fe85:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   1fe88:	89 34 24             	mov    %esi,(%esp)
   1fe8b:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1fe8f:	31 c9                	xor    %ecx,%ecx
   1fe91:	e8 3a f9 ff ff       	call   1f7d0 <malloc_area>
   1fe96:	85 c0                	test   %eax,%eax
   1fe98:	0f 85 58 fe ff ff    	jne    1fcf6 <malloc_internal+0xa6>
   1fe9e:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1fea5:	e8 86 8e ff ff       	call   18d30 <futex_up>
   1feaa:	c7 44 24 08 b4 02 00 	movl   $0x2b4,0x8(%esp)
   1feb1:	00 
   1feb2:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1feb9:	00 
   1feba:	c7 04 24 d3 e2 02 00 	movl   $0x2e2d3,(%esp)
   1fec1:	e8 ea a9 00 00       	call   2a8b0 <assert_abort>
   1fec6:	66 90                	xchg   %ax,%ax
   1fec8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   1fecf:	00 
   1fed0:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   1fed4:	89 04 24             	mov    %eax,(%esp)
   1fed7:	89 7d d8             	mov    %edi,-0x28(%ebp)
   1feda:	e8 01 b1 00 00       	call   2afe0 <as_area_resize>
   1fedf:	8b 55 d8             	mov    -0x28(%ebp),%edx
   1fee2:	85 c0                	test   %eax,%eax
   1fee4:	0f 85 fc fe ff ff    	jne    1fde6 <malloc_internal+0x196>
   1feea:	8b 43 04             	mov    0x4(%ebx),%eax
   1feed:	89 f9                	mov    %edi,%ecx
   1feef:	89 45 dc             	mov    %eax,-0x24(%ebp)
   1fef2:	89 d7                	mov    %edx,%edi
   1fef4:	8b 55 dc             	mov    -0x24(%ebp),%edx
   1fef7:	83 e8 08             	sub    $0x8,%eax
   1fefa:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   1fefd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   1ff00:	8b 42 f8             	mov    -0x8(%edx),%eax
   1ff03:	29 c2                	sub    %eax,%edx
   1ff05:	80 7a 04 00          	cmpb   $0x0,0x4(%edx)
   1ff09:	74 35                	je     1ff40 <malloc_internal+0x2f0>
   1ff0b:	89 c8                	mov    %ecx,%eax
   1ff0d:	2b 45 dc             	sub    -0x24(%ebp),%eax
   1ff10:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   1ff13:	03 02                	add    (%edx),%eax
   1ff15:	0f 84 89 00 00 00    	je     1ffa4 <malloc_internal+0x354>
   1ff1b:	89 02                	mov    %eax,(%edx)
   1ff1d:	c6 42 04 01          	movb   $0x1,0x4(%edx)
   1ff21:	89 5a 08             	mov    %ebx,0x8(%edx)
   1ff24:	c7 42 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%edx)
   1ff2b:	8d 54 02 f8          	lea    -0x8(%edx,%eax,1),%edx
   1ff2f:	89 02                	mov    %eax,(%edx)
   1ff31:	c7 42 04 02 02 ef be 	movl   $0xbeef0202,0x4(%edx)
   1ff38:	89 4b 04             	mov    %ecx,0x4(%ebx)
   1ff3b:	e9 28 fe ff ff       	jmp    1fd68 <malloc_internal+0x118>
   1ff40:	89 ca                	mov    %ecx,%edx
   1ff42:	2b 55 dc             	sub    -0x24(%ebp),%edx
   1ff45:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   1ff48:	74 ee                	je     1ff38 <malloc_internal+0x2e8>
   1ff4a:	8b 45 dc             	mov    -0x24(%ebp),%eax
   1ff4d:	89 10                	mov    %edx,(%eax)
   1ff4f:	c6 40 04 01          	movb   $0x1,0x4(%eax)
   1ff53:	89 58 08             	mov    %ebx,0x8(%eax)
   1ff56:	c7 40 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%eax)
   1ff5d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   1ff60:	01 d0                	add    %edx,%eax
   1ff62:	89 10                	mov    %edx,(%eax)
   1ff64:	c7 40 04 02 02 ef be 	movl   $0xbeef0202,0x4(%eax)
   1ff6b:	eb cb                	jmp    1ff38 <malloc_internal+0x2e8>
   1ff6d:	a3 c8 06 03 00       	mov    %eax,0x306c8
   1ff72:	a3 c4 06 03 00       	mov    %eax,0x306c4
   1ff77:	e9 09 ff ff ff       	jmp    1fe85 <malloc_internal+0x235>
   1ff7c:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1ff83:	e8 a8 8d ff ff       	call   18d30 <futex_up>
   1ff88:	c7 44 24 08 c7 02 00 	movl   $0x2c7,0x8(%esp)
   1ff8f:	00 
   1ff90:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1ff97:	00 
   1ff98:	c7 04 24 ae e2 02 00 	movl   $0x2e2ae,(%esp)
   1ff9f:	e8 0c a9 00 00       	call   2a8b0 <assert_abort>
   1ffa4:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   1ffab:	e8 80 8d ff ff       	call   18d30 <futex_up>
   1ffb0:	c7 44 24 08 65 01 00 	movl   $0x165,0x8(%esp)
   1ffb7:	00 
   1ffb8:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   1ffbf:	00 
   1ffc0:	c7 04 24 c6 e2 02 00 	movl   $0x2e2c6,(%esp)
   1ffc7:	e8 e4 a8 00 00       	call   2a8b0 <assert_abort>
   1ffcc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0001ffd0 <__malloc_init>:
   1ffd0:	55                   	push   %ebp
   1ffd1:	89 e5                	mov    %esp,%ebp
   1ffd3:	83 ec 18             	sub    $0x18,%esp
   1ffd6:	c7 44 24 08 0b 00 00 	movl   $0xb,0x8(%esp)
   1ffdd:	00 
   1ffde:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)
   1ffe5:	00 
   1ffe6:	c7 04 24 ff ff ff ff 	movl   $0xffffffff,(%esp)
   1ffed:	e8 9e af 00 00       	call   2af90 <as_area_create>
   1fff2:	83 f8 ff             	cmp    $0xffffffff,%eax
   1fff5:	74 61                	je     20058 <__malloc_init+0x88>
   1fff7:	8d 50 23             	lea    0x23(%eax),%edx
   1fffa:	8d 88 00 10 00 00    	lea    0x1000(%eax),%ecx
   20000:	83 e2 f0             	and    $0xfffffff0,%edx
   20003:	89 48 04             	mov    %ecx,0x4(%eax)
   20006:	29 d1                	sub    %edx,%ecx
   20008:	89 00                	mov    %eax,(%eax)
   2000a:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
   20011:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   20018:	c7 40 10 fe ca ef be 	movl   $0xbeefcafe,0x10(%eax)
   2001f:	89 0a                	mov    %ecx,(%edx)
   20021:	c6 42 04 01          	movb   $0x1,0x4(%edx)
   20025:	89 42 08             	mov    %eax,0x8(%edx)
   20028:	c7 42 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%edx)
   2002f:	8d 54 0a f8          	lea    -0x8(%edx,%ecx,1),%edx
   20033:	89 0a                	mov    %ecx,(%edx)
   20035:	c7 42 04 02 02 ef be 	movl   $0xbeef0202,0x4(%edx)
   2003c:	8b 15 c4 06 03 00    	mov    0x306c4,%edx
   20042:	85 d2                	test   %edx,%edx
   20044:	74 1a                	je     20060 <__malloc_init+0x90>
   20046:	89 50 08             	mov    %edx,0x8(%eax)
   20049:	89 42 0c             	mov    %eax,0xc(%edx)
   2004c:	a3 c4 06 03 00       	mov    %eax,0x306c4
   20051:	c9                   	leave  
   20052:	c3                   	ret    
   20053:	90                   	nop
   20054:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   20058:	e8 33 01 ff ff       	call   10190 <abort>
   2005d:	8d 76 00             	lea    0x0(%esi),%esi
   20060:	a3 c8 06 03 00       	mov    %eax,0x306c8
   20065:	a3 c4 06 03 00       	mov    %eax,0x306c4
   2006a:	c9                   	leave  
   2006b:	c3                   	ret    
   2006c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00020070 <calloc>:
   20070:	55                   	push   %ebp
   20071:	89 e5                	mov    %esp,%ebp
   20073:	56                   	push   %esi
   20074:	53                   	push   %ebx
   20075:	83 ec 10             	sub    $0x10,%esp
   20078:	8b 4d 08             	mov    0x8(%ebp),%ecx
   2007b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   2007e:	0f af d9             	imul   %ecx,%ebx
   20081:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   20088:	e8 43 8c ff ff       	call   18cd0 <futex_down>
   2008d:	ba 10 00 00 00       	mov    $0x10,%edx
   20092:	89 d8                	mov    %ebx,%eax
   20094:	e8 b7 fb ff ff       	call   1fc50 <malloc_internal>
   20099:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   200a0:	89 c6                	mov    %eax,%esi
   200a2:	e8 89 8c ff ff       	call   18d30 <futex_up>
   200a7:	85 f6                	test   %esi,%esi
   200a9:	74 14                	je     200bf <calloc+0x4f>
   200ab:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   200af:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   200b6:	00 
   200b7:	89 34 24             	mov    %esi,(%esp)
   200ba:	e8 a1 2f ff ff       	call   13060 <memset>
   200bf:	83 c4 10             	add    $0x10,%esp
   200c2:	89 f0                	mov    %esi,%eax
   200c4:	5b                   	pop    %ebx
   200c5:	5e                   	pop    %esi
   200c6:	5d                   	pop    %ebp
   200c7:	c3                   	ret    
   200c8:	90                   	nop
   200c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000200d0 <malloc>:
   200d0:	55                   	push   %ebp
   200d1:	89 e5                	mov    %esp,%ebp
   200d3:	53                   	push   %ebx
   200d4:	83 ec 14             	sub    $0x14,%esp
   200d7:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   200de:	e8 ed 8b ff ff       	call   18cd0 <futex_down>
   200e3:	ba 10 00 00 00       	mov    $0x10,%edx
   200e8:	8b 45 08             	mov    0x8(%ebp),%eax
   200eb:	e8 60 fb ff ff       	call   1fc50 <malloc_internal>
   200f0:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   200f7:	89 c3                	mov    %eax,%ebx
   200f9:	e8 32 8c ff ff       	call   18d30 <futex_up>
   200fe:	83 c4 14             	add    $0x14,%esp
   20101:	89 d8                	mov    %ebx,%eax
   20103:	5b                   	pop    %ebx
   20104:	5d                   	pop    %ebp
   20105:	c3                   	ret    
   20106:	8d 76 00             	lea    0x0(%esi),%esi
   20109:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00020110 <memalign>:
   20110:	55                   	push   %ebp
   20111:	89 e5                	mov    %esp,%ebp
   20113:	53                   	push   %ebx
   20114:	83 ec 14             	sub    $0x14,%esp
   20117:	8b 45 08             	mov    0x8(%ebp),%eax
   2011a:	85 c0                	test   %eax,%eax
   2011c:	0f 84 a6 00 00 00    	je     201c8 <memalign+0xb8>
   20122:	83 f8 04             	cmp    $0x4,%eax
   20125:	0f 82 85 00 00 00    	jb     201b0 <memalign+0xa0>
   2012b:	48                   	dec    %eax
   2012c:	89 c2                	mov    %eax,%edx
   2012e:	c1 ea 10             	shr    $0x10,%edx
   20131:	75 6d                	jne    201a0 <memalign+0x90>
   20133:	89 c2                	mov    %eax,%edx
   20135:	bb 08 00 00 00       	mov    $0x8,%ebx
   2013a:	31 c9                	xor    %ecx,%ecx
   2013c:	89 d0                	mov    %edx,%eax
   2013e:	c1 e8 08             	shr    $0x8,%eax
   20141:	75 04                	jne    20147 <memalign+0x37>
   20143:	89 cb                	mov    %ecx,%ebx
   20145:	89 d0                	mov    %edx,%eax
   20147:	89 c2                	mov    %eax,%edx
   20149:	c1 ea 04             	shr    $0x4,%edx
   2014c:	74 05                	je     20153 <memalign+0x43>
   2014e:	83 c3 04             	add    $0x4,%ebx
   20151:	89 d0                	mov    %edx,%eax
   20153:	89 c2                	mov    %eax,%edx
   20155:	c1 ea 02             	shr    $0x2,%edx
   20158:	74 05                	je     2015f <memalign+0x4f>
   2015a:	83 c3 02             	add    $0x2,%ebx
   2015d:	89 d0                	mov    %edx,%eax
   2015f:	d1 e8                	shr    %eax
   20161:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   20168:	83 f8 01             	cmp    $0x1,%eax
   2016b:	83 db ff             	sbb    $0xffffffff,%ebx
   2016e:	e8 5d 8b ff ff       	call   18cd0 <futex_down>
   20173:	8d 4b 01             	lea    0x1(%ebx),%ecx
   20176:	ba 01 00 00 00       	mov    $0x1,%edx
   2017b:	d3 e2                	shl    %cl,%edx
   2017d:	8b 45 0c             	mov    0xc(%ebp),%eax
   20180:	e8 cb fa ff ff       	call   1fc50 <malloc_internal>
   20185:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   2018c:	89 c3                	mov    %eax,%ebx
   2018e:	e8 9d 8b ff ff       	call   18d30 <futex_up>
   20193:	83 c4 14             	add    $0x14,%esp
   20196:	89 d8                	mov    %ebx,%eax
   20198:	5b                   	pop    %ebx
   20199:	5d                   	pop    %ebp
   2019a:	c3                   	ret    
   2019b:	90                   	nop
   2019c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   201a0:	bb 18 00 00 00       	mov    $0x18,%ebx
   201a5:	b9 10 00 00 00       	mov    $0x10,%ecx
   201aa:	eb 90                	jmp    2013c <memalign+0x2c>
   201ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   201b0:	b8 04 00 00 00       	mov    $0x4,%eax
   201b5:	48                   	dec    %eax
   201b6:	89 c2                	mov    %eax,%edx
   201b8:	c1 ea 10             	shr    $0x10,%edx
   201bb:	75 e3                	jne    201a0 <memalign+0x90>
   201bd:	e9 71 ff ff ff       	jmp    20133 <memalign+0x23>
   201c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   201c8:	83 c4 14             	add    $0x14,%esp
   201cb:	31 db                	xor    %ebx,%ebx
   201cd:	89 d8                	mov    %ebx,%eax
   201cf:	5b                   	pop    %ebx
   201d0:	5d                   	pop    %ebp
   201d1:	c3                   	ret    
   201d2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   201d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000201e0 <free>:
   201e0:	55                   	push   %ebp
   201e1:	89 e5                	mov    %esp,%ebp
   201e3:	57                   	push   %edi
   201e4:	56                   	push   %esi
   201e5:	53                   	push   %ebx
   201e6:	83 ec 2c             	sub    $0x2c,%esp
   201e9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   201ec:	85 db                	test   %ebx,%ebx
   201ee:	0f 84 64 01 00 00    	je     20358 <free+0x178>
   201f4:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   201fb:	8d 73 f0             	lea    -0x10(%ebx),%esi
   201fe:	e8 cd 8a ff ff       	call   18cd0 <futex_down>
   20203:	81 7b fc 01 01 ef be 	cmpl   $0xbeef0101,-0x4(%ebx)
   2020a:	0f 85 a0 01 00 00    	jne    203b0 <free+0x1d0>
   20210:	8b 53 f0             	mov    -0x10(%ebx),%edx
   20213:	8d 44 16 f8          	lea    -0x8(%esi,%edx,1),%eax
   20217:	81 78 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%eax)
   2021e:	0f 85 64 01 00 00    	jne    20388 <free+0x1a8>
   20224:	3b 10                	cmp    (%eax),%edx
   20226:	0f 85 34 01 00 00    	jne    20360 <free+0x180>
   2022c:	80 7b f4 00          	cmpb   $0x0,-0xc(%ebx)
   20230:	0f 85 cf 01 00 00    	jne    20405 <free+0x225>
   20236:	8b 7b f8             	mov    -0x8(%ebx),%edi
   20239:	89 f8                	mov    %edi,%eax
   2023b:	e8 20 f2 ff ff       	call   1f460 <area_check>
   20240:	8d 47 23             	lea    0x23(%edi),%eax
   20243:	83 e0 f0             	and    $0xfffffff0,%eax
   20246:	39 c6                	cmp    %eax,%esi
   20248:	0f 82 8f 01 00 00    	jb     203dd <free+0x1fd>
   2024e:	8b 57 04             	mov    0x4(%edi),%edx
   20251:	39 d6                	cmp    %edx,%esi
   20253:	0f 83 5c 01 00 00    	jae    203b5 <free+0x1d5>
   20259:	8b 4b f0             	mov    -0x10(%ebx),%ecx
   2025c:	c6 43 f4 01          	movb   $0x1,-0xc(%ebx)
   20260:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
   20263:	01 f1                	add    %esi,%ecx
   20265:	89 4d d8             	mov    %ecx,-0x28(%ebp)
   20268:	39 ca                	cmp    %ecx,%edx
   2026a:	77 24                	ja     20290 <free+0xb0>
   2026c:	39 c6                	cmp    %eax,%esi
   2026e:	0f 87 8c 00 00 00    	ja     20300 <free+0x120>
   20274:	89 f8                	mov    %edi,%eax
   20276:	e8 e5 f2 ff ff       	call   1f560 <heap_shrink>
   2027b:	c7 45 08 c8 05 03 00 	movl   $0x305c8,0x8(%ebp)
   20282:	83 c4 2c             	add    $0x2c,%esp
   20285:	5b                   	pop    %ebx
   20286:	5e                   	pop    %esi
   20287:	5f                   	pop    %edi
   20288:	5d                   	pop    %ebp
   20289:	e9 a2 8a ff ff       	jmp    18d30 <futex_up>
   2028e:	66 90                	xchg   %ax,%ax
   20290:	81 79 0c 01 01 ef be 	cmpl   $0xbeef0101,0xc(%ecx)
   20297:	0f 85 13 01 00 00    	jne    203b0 <free+0x1d0>
   2029d:	8b 11                	mov    (%ecx),%edx
   2029f:	89 55 dc             	mov    %edx,-0x24(%ebp)
   202a2:	8d 4c 11 f8          	lea    -0x8(%ecx,%edx,1),%ecx
   202a6:	89 4d e0             	mov    %ecx,-0x20(%ebp)
   202a9:	81 79 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%ecx)
   202b0:	0f 85 d2 00 00 00    	jne    20388 <free+0x1a8>
   202b6:	3b 11                	cmp    (%ecx),%edx
   202b8:	0f 85 a2 00 00 00    	jne    20360 <free+0x180>
   202be:	8b 55 d8             	mov    -0x28(%ebp),%edx
   202c1:	80 7a 04 00          	cmpb   $0x0,0x4(%edx)
   202c5:	74 a5                	je     2026c <free+0x8c>
   202c7:	8b 4d dc             	mov    -0x24(%ebp),%ecx
   202ca:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   202cd:	01 ca                	add    %ecx,%edx
   202cf:	89 7b f8             	mov    %edi,-0x8(%ebx)
   202d2:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   202d5:	c7 43 fc 01 01 ef be 	movl   $0xbeef0101,-0x4(%ebx)
   202dc:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   202df:	39 c6                	cmp    %eax,%esi
   202e1:	89 53 f0             	mov    %edx,-0x10(%ebx)
   202e4:	89 d1                	mov    %edx,%ecx
   202e6:	8d 54 16 f8          	lea    -0x8(%esi,%edx,1),%edx
   202ea:	89 0a                	mov    %ecx,(%edx)
   202ec:	c7 42 04 02 02 ef be 	movl   $0xbeef0202,0x4(%edx)
   202f3:	0f 86 7b ff ff ff    	jbe    20274 <free+0x94>
   202f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   20300:	8b 43 e8             	mov    -0x18(%ebx),%eax
   20303:	29 c6                	sub    %eax,%esi
   20305:	81 7e 0c 01 01 ef be 	cmpl   $0xbeef0101,0xc(%esi)
   2030c:	0f 85 9e 00 00 00    	jne    203b0 <free+0x1d0>
   20312:	8b 06                	mov    (%esi),%eax
   20314:	8d 54 06 f8          	lea    -0x8(%esi,%eax,1),%edx
   20318:	81 7a 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%edx)
   2031f:	75 67                	jne    20388 <free+0x1a8>
   20321:	3b 02                	cmp    (%edx),%eax
   20323:	75 3b                	jne    20360 <free+0x180>
   20325:	80 7e 04 00          	cmpb   $0x0,0x4(%esi)
   20329:	0f 84 45 ff ff ff    	je     20274 <free+0x94>
   2032f:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   20332:	c6 46 04 01          	movb   $0x1,0x4(%esi)
   20336:	01 d8                	add    %ebx,%eax
   20338:	89 7e 08             	mov    %edi,0x8(%esi)
   2033b:	89 06                	mov    %eax,(%esi)
   2033d:	c7 46 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%esi)
   20344:	8d 54 06 f8          	lea    -0x8(%esi,%eax,1),%edx
   20348:	89 02                	mov    %eax,(%edx)
   2034a:	c7 42 04 02 02 ef be 	movl   $0xbeef0202,0x4(%edx)
   20351:	e9 1e ff ff ff       	jmp    20274 <free+0x94>
   20356:	66 90                	xchg   %ax,%ax
   20358:	83 c4 2c             	add    $0x2c,%esp
   2035b:	5b                   	pop    %ebx
   2035c:	5e                   	pop    %esi
   2035d:	5f                   	pop    %edi
   2035e:	5d                   	pop    %ebp
   2035f:	c3                   	ret    
   20360:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   20367:	e8 c4 89 ff ff       	call   18d30 <futex_up>
   2036c:	c7 44 24 08 02 01 00 	movl   $0x102,0x8(%esp)
   20373:	00 
   20374:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   2037b:	00 
   2037c:	c7 04 24 52 e2 02 00 	movl   $0x2e252,(%esp)
   20383:	e8 28 a5 00 00       	call   2a8b0 <assert_abort>
   20388:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   2038f:	e8 9c 89 ff ff       	call   18d30 <futex_up>
   20394:	c7 44 24 08 01 01 00 	movl   $0x101,0x8(%esp)
   2039b:	00 
   2039c:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   203a3:	00 
   203a4:	c7 04 24 a8 e3 02 00 	movl   $0x2e3a8,(%esp)
   203ab:	e8 00 a5 00 00       	call   2a8b0 <assert_abort>
   203b0:	e8 9b 04 00 00       	call   20850 <block_check.part.0>
   203b5:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   203bc:	e8 6f 89 ff ff       	call   18d30 <futex_up>
   203c1:	c7 44 24 08 9b 03 00 	movl   $0x39b,0x8(%esp)
   203c8:	00 
   203c9:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   203d0:	00 
   203d1:	c7 04 24 ec e2 02 00 	movl   $0x2e2ec,(%esp)
   203d8:	e8 d3 a4 00 00       	call   2a8b0 <assert_abort>
   203dd:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   203e4:	e8 47 89 ff ff       	call   18d30 <futex_up>
   203e9:	c7 44 24 08 9a 03 00 	movl   $0x39a,0x8(%esp)
   203f0:	00 
   203f1:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   203f8:	00 
   203f9:	c7 04 24 34 e4 02 00 	movl   $0x2e434,(%esp)
   20400:	e8 ab a4 00 00       	call   2a8b0 <assert_abort>
   20405:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   2040c:	e8 1f 89 ff ff       	call   18d30 <futex_up>
   20411:	c7 44 24 08 95 03 00 	movl   $0x395,0x8(%esp)
   20418:	00 
   20419:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   20420:	00 
   20421:	c7 04 24 e0 e2 02 00 	movl   $0x2e2e0,(%esp)
   20428:	e8 83 a4 00 00       	call   2a8b0 <assert_abort>
   2042d:	8d 76 00             	lea    0x0(%esi),%esi

00020430 <realloc>:
   20430:	55                   	push   %ebp
   20431:	89 e5                	mov    %esp,%ebp
   20433:	57                   	push   %edi
   20434:	56                   	push   %esi
   20435:	53                   	push   %ebx
   20436:	83 ec 3c             	sub    $0x3c,%esp
   20439:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2043c:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   20443:	85 db                	test   %ebx,%ebx
   20445:	0f 84 25 02 00 00    	je     20670 <realloc+0x240>
   2044b:	e8 80 88 ff ff       	call   18cd0 <futex_down>
   20450:	8d 73 f0             	lea    -0x10(%ebx),%esi
   20453:	81 7b fc 01 01 ef be 	cmpl   $0xbeef0101,-0x4(%ebx)
   2045a:	0f 85 62 02 00 00    	jne    206c2 <realloc+0x292>
   20460:	8b 53 f0             	mov    -0x10(%ebx),%edx
   20463:	8d 44 16 f8          	lea    -0x8(%esi,%edx,1),%eax
   20467:	81 78 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%eax)
   2046e:	0f 85 7b 02 00 00    	jne    206ef <realloc+0x2bf>
   20474:	3b 10                	cmp    (%eax),%edx
   20476:	0f 85 4b 02 00 00    	jne    206c7 <realloc+0x297>
   2047c:	80 7b f4 00          	cmpb   $0x0,-0xc(%ebx)
   20480:	0f 85 b9 02 00 00    	jne    2073f <realloc+0x30f>
   20486:	8b 7b f8             	mov    -0x8(%ebx),%edi
   20489:	89 f8                	mov    %edi,%eax
   2048b:	e8 d0 ef ff ff       	call   1f460 <area_check>
   20490:	8d 47 23             	lea    0x23(%edi),%eax
   20493:	83 e0 f0             	and    $0xfffffff0,%eax
   20496:	39 c6                	cmp    %eax,%esi
   20498:	0f 82 79 02 00 00    	jb     20717 <realloc+0x2e7>
   2049e:	8b 57 04             	mov    0x4(%edi),%edx
   204a1:	39 d6                	cmp    %edx,%esi
   204a3:	0f 83 f1 01 00 00    	jae    2069a <realloc+0x26a>
   204a9:	8b 45 0c             	mov    0xc(%ebp),%eax
   204ac:	83 c0 0f             	add    $0xf,%eax
   204af:	83 e0 f0             	and    $0xfffffff0,%eax
   204b2:	8d 48 18             	lea    0x18(%eax),%ecx
   204b5:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
   204b8:	8b 4b f0             	mov    -0x10(%ebx),%ecx
   204bb:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
   204be:	39 4d d4             	cmp    %ecx,-0x2c(%ebp)
   204c1:	73 2d                	jae    204f0 <realloc+0xc0>
   204c3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   204c6:	29 c1                	sub    %eax,%ecx
   204c8:	83 f9 17             	cmp    $0x17,%ecx
   204cb:	0f 87 4f 01 00 00    	ja     20620 <realloc+0x1f0>
   204d1:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   204d8:	89 de                	mov    %ebx,%esi
   204da:	e8 51 88 ff ff       	call   18d30 <futex_up>
   204df:	83 c4 3c             	add    $0x3c,%esp
   204e2:	89 f0                	mov    %esi,%eax
   204e4:	5b                   	pop    %ebx
   204e5:	5e                   	pop    %esi
   204e6:	5f                   	pop    %edi
   204e7:	5d                   	pop    %ebp
   204e8:	c3                   	ret    
   204e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   204f0:	01 f1                	add    %esi,%ecx
   204f2:	89 4d e0             	mov    %ecx,-0x20(%ebp)
   204f5:	39 ca                	cmp    %ecx,%edx
   204f7:	76 10                	jbe    20509 <realloc+0xd9>
   204f9:	8b 11                	mov    (%ecx),%edx
   204fb:	89 55 d8             	mov    %edx,-0x28(%ebp)
   204fe:	03 55 e4             	add    -0x1c(%ebp),%edx
   20501:	89 55 dc             	mov    %edx,-0x24(%ebp)
   20504:	39 55 d4             	cmp    %edx,-0x2c(%ebp)
   20507:	76 5f                	jbe    20568 <realloc+0x138>
   20509:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   20510:	e8 1b 88 ff ff       	call   18d30 <futex_up>
   20515:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   2051c:	e8 af 87 ff ff       	call   18cd0 <futex_down>
   20521:	ba 10 00 00 00       	mov    $0x10,%edx
   20526:	8b 45 0c             	mov    0xc(%ebp),%eax
   20529:	e8 22 f7 ff ff       	call   1fc50 <malloc_internal>
   2052e:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   20535:	89 c6                	mov    %eax,%esi
   20537:	e8 f4 87 ff ff       	call   18d30 <futex_up>
   2053c:	85 f6                	test   %esi,%esi
   2053e:	74 9f                	je     204df <realloc+0xaf>
   20540:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   20543:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   20547:	83 e9 18             	sub    $0x18,%ecx
   2054a:	89 34 24             	mov    %esi,(%esp)
   2054d:	89 4c 24 08          	mov    %ecx,0x8(%esp)
   20551:	e8 8a 2c ff ff       	call   131e0 <memcpy>
   20556:	89 1c 24             	mov    %ebx,(%esp)
   20559:	e8 82 fc ff ff       	call   201e0 <free>
   2055e:	83 c4 3c             	add    $0x3c,%esp
   20561:	89 f0                	mov    %esi,%eax
   20563:	5b                   	pop    %ebx
   20564:	5e                   	pop    %esi
   20565:	5f                   	pop    %edi
   20566:	5d                   	pop    %ebp
   20567:	c3                   	ret    
   20568:	80 79 04 00          	cmpb   $0x0,0x4(%ecx)
   2056c:	74 9b                	je     20509 <realloc+0xd9>
   2056e:	81 79 0c 01 01 ef be 	cmpl   $0xbeef0101,0xc(%ecx)
   20575:	0f 85 47 01 00 00    	jne    206c2 <realloc+0x292>
   2057b:	8b 55 d8             	mov    -0x28(%ebp),%edx
   2057e:	8d 54 11 f8          	lea    -0x8(%ecx,%edx,1),%edx
   20582:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   20585:	81 7a 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%edx)
   2058c:	0f 85 5d 01 00 00    	jne    206ef <realloc+0x2bf>
   20592:	8b 4d d8             	mov    -0x28(%ebp),%ecx
   20595:	3b 0a                	cmp    (%edx),%ecx
   20597:	0f 85 2a 01 00 00    	jne    206c7 <realloc+0x297>
   2059d:	8b 55 dc             	mov    -0x24(%ebp),%edx
   205a0:	83 c0 30             	add    $0x30,%eax
   205a3:	89 53 f0             	mov    %edx,-0x10(%ebx)
   205a6:	c6 43 f4 00          	movb   $0x0,-0xc(%ebx)
   205aa:	8d 4c 16 f8          	lea    -0x8(%esi,%edx,1),%ecx
   205ae:	89 7b f8             	mov    %edi,-0x8(%ebx)
   205b1:	c7 43 fc 01 01 ef be 	movl   $0xbeef0101,-0x4(%ebx)
   205b8:	39 c2                	cmp    %eax,%edx
   205ba:	89 11                	mov    %edx,(%ecx)
   205bc:	c7 41 04 02 02 ef be 	movl   $0xbeef0202,0x4(%ecx)
   205c3:	76 47                	jbe    2060c <realloc+0x1dc>
   205c5:	89 d1                	mov    %edx,%ecx
   205c7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   205ca:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   205cd:	01 f0                	add    %esi,%eax
   205cf:	29 d1                	sub    %edx,%ecx
   205d1:	89 08                	mov    %ecx,(%eax)
   205d3:	c6 40 04 01          	movb   $0x1,0x4(%eax)
   205d7:	c7 40 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%eax)
   205de:	89 78 08             	mov    %edi,0x8(%eax)
   205e1:	8d 44 08 f8          	lea    -0x8(%eax,%ecx,1),%eax
   205e5:	89 08                	mov    %ecx,(%eax)
   205e7:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   205ea:	c7 40 04 02 02 ef be 	movl   $0xbeef0202,0x4(%eax)
   205f1:	89 4b f0             	mov    %ecx,-0x10(%ebx)
   205f4:	8d 44 0e f8          	lea    -0x8(%esi,%ecx,1),%eax
   205f8:	c6 43 f4 00          	movb   $0x0,-0xc(%ebx)
   205fc:	c7 43 fc 01 01 ef be 	movl   $0xbeef0101,-0x4(%ebx)
   20603:	89 08                	mov    %ecx,(%eax)
   20605:	c7 40 04 02 02 ef be 	movl   $0xbeef0202,0x4(%eax)
   2060c:	c7 05 cc 06 03 00 00 	movl   $0x0,0x306cc
   20613:	00 00 00 
   20616:	e9 b6 fe ff ff       	jmp    204d1 <realloc+0xa1>
   2061b:	90                   	nop
   2061c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   20620:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   20623:	c6 43 f4 00          	movb   $0x0,-0xc(%ebx)
   20627:	89 c2                	mov    %eax,%edx
   20629:	89 43 f0             	mov    %eax,-0x10(%ebx)
   2062c:	01 d6                	add    %edx,%esi
   2062e:	8d 44 03 e8          	lea    -0x18(%ebx,%eax,1),%eax
   20632:	89 7b f8             	mov    %edi,-0x8(%ebx)
   20635:	c7 43 fc 01 01 ef be 	movl   $0xbeef0101,-0x4(%ebx)
   2063c:	89 10                	mov    %edx,(%eax)
   2063e:	c7 40 04 02 02 ef be 	movl   $0xbeef0202,0x4(%eax)
   20645:	8d 44 0e f8          	lea    -0x8(%esi,%ecx,1),%eax
   20649:	89 0e                	mov    %ecx,(%esi)
   2064b:	c6 46 04 01          	movb   $0x1,0x4(%esi)
   2064f:	89 7e 08             	mov    %edi,0x8(%esi)
   20652:	c7 46 0c 01 01 ef be 	movl   $0xbeef0101,0xc(%esi)
   20659:	89 08                	mov    %ecx,(%eax)
   2065b:	c7 40 04 02 02 ef be 	movl   $0xbeef0202,0x4(%eax)
   20662:	89 f8                	mov    %edi,%eax
   20664:	e8 f7 ee ff ff       	call   1f560 <heap_shrink>
   20669:	e9 63 fe ff ff       	jmp    204d1 <realloc+0xa1>
   2066e:	66 90                	xchg   %ax,%ax
   20670:	e8 5b 86 ff ff       	call   18cd0 <futex_down>
   20675:	ba 10 00 00 00       	mov    $0x10,%edx
   2067a:	8b 45 0c             	mov    0xc(%ebp),%eax
   2067d:	e8 ce f5 ff ff       	call   1fc50 <malloc_internal>
   20682:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   20689:	89 c6                	mov    %eax,%esi
   2068b:	e8 a0 86 ff ff       	call   18d30 <futex_up>
   20690:	83 c4 3c             	add    $0x3c,%esp
   20693:	89 f0                	mov    %esi,%eax
   20695:	5b                   	pop    %ebx
   20696:	5e                   	pop    %esi
   20697:	5f                   	pop    %edi
   20698:	5d                   	pop    %ebp
   20699:	c3                   	ret    
   2069a:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   206a1:	e8 8a 86 ff ff       	call   18d30 <futex_up>
   206a6:	c7 44 24 08 4b 03 00 	movl   $0x34b,0x8(%esp)
   206ad:	00 
   206ae:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   206b5:	00 
   206b6:	c7 04 24 ec e2 02 00 	movl   $0x2e2ec,(%esp)
   206bd:	e8 ee a1 00 00       	call   2a8b0 <assert_abort>
   206c2:	e8 89 01 00 00       	call   20850 <block_check.part.0>
   206c7:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   206ce:	e8 5d 86 ff ff       	call   18d30 <futex_up>
   206d3:	c7 44 24 08 02 01 00 	movl   $0x102,0x8(%esp)
   206da:	00 
   206db:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   206e2:	00 
   206e3:	c7 04 24 52 e2 02 00 	movl   $0x2e252,(%esp)
   206ea:	e8 c1 a1 00 00       	call   2a8b0 <assert_abort>
   206ef:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   206f6:	e8 35 86 ff ff       	call   18d30 <futex_up>
   206fb:	c7 44 24 08 01 01 00 	movl   $0x101,0x8(%esp)
   20702:	00 
   20703:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   2070a:	00 
   2070b:	c7 04 24 a8 e3 02 00 	movl   $0x2e3a8,(%esp)
   20712:	e8 99 a1 00 00       	call   2a8b0 <assert_abort>
   20717:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   2071e:	e8 0d 86 ff ff       	call   18d30 <futex_up>
   20723:	c7 44 24 08 4a 03 00 	movl   $0x34a,0x8(%esp)
   2072a:	00 
   2072b:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   20732:	00 
   20733:	c7 04 24 34 e4 02 00 	movl   $0x2e434,(%esp)
   2073a:	e8 71 a1 00 00       	call   2a8b0 <assert_abort>
   2073f:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   20746:	e8 e5 85 ff ff       	call   18d30 <futex_up>
   2074b:	c7 44 24 08 45 03 00 	movl   $0x345,0x8(%esp)
   20752:	00 
   20753:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   2075a:	00 
   2075b:	c7 04 24 e0 e2 02 00 	movl   $0x2e2e0,(%esp)
   20762:	e8 49 a1 00 00       	call   2a8b0 <assert_abort>
   20767:	89 f6                	mov    %esi,%esi
   20769:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00020770 <heap_check>:
   20770:	55                   	push   %ebp
   20771:	89 e5                	mov    %esp,%ebp
   20773:	56                   	push   %esi
   20774:	53                   	push   %ebx
   20775:	83 ec 10             	sub    $0x10,%esp
   20778:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   2077f:	e8 4c 85 ff ff       	call   18cd0 <futex_down>
   20784:	8b 35 c8 06 03 00    	mov    0x306c8,%esi
   2078a:	85 f6                	test   %esi,%esi
   2078c:	0f 84 ad 00 00 00    	je     2083f <heap_check+0xcf>
   20792:	81 7e 10 fe ca ef be 	cmpl   $0xbeefcafe,0x10(%esi)
   20799:	75 67                	jne    20802 <heap_check+0x92>
   2079b:	8b 06                	mov    (%esi),%eax
   2079d:	39 f0                	cmp    %esi,%eax
   2079f:	75 61                	jne    20802 <heap_check+0x92>
   207a1:	8b 4e 04             	mov    0x4(%esi),%ecx
   207a4:	39 ce                	cmp    %ecx,%esi
   207a6:	73 5a                	jae    20802 <heap_check+0x92>
   207a8:	89 ca                	mov    %ecx,%edx
   207aa:	09 f2                	or     %esi,%edx
   207ac:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
   207b2:	75 4e                	jne    20802 <heap_check+0x92>
   207b4:	83 c6 23             	add    $0x23,%esi
   207b7:	83 e6 f0             	and    $0xfffffff0,%esi
   207ba:	89 f3                	mov    %esi,%ebx
   207bc:	39 f1                	cmp    %esi,%ecx
   207be:	76 58                	jbe    20818 <heap_check+0xa8>
   207c0:	81 7e 0c 01 01 ef be 	cmpl   $0xbeef0101,0xc(%esi)
   207c7:	75 5f                	jne    20828 <heap_check+0xb8>
   207c9:	8b 16                	mov    (%esi),%edx
   207cb:	8d 74 16 f8          	lea    -0x8(%esi,%edx,1),%esi
   207cf:	81 7e 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%esi)
   207d6:	74 26                	je     207fe <heap_check+0x8e>
   207d8:	eb 28                	jmp    20802 <heap_check+0x92>
   207da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   207e0:	01 d3                	add    %edx,%ebx
   207e2:	39 d9                	cmp    %ebx,%ecx
   207e4:	76 32                	jbe    20818 <heap_check+0xa8>
   207e6:	81 7b 0c 01 01 ef be 	cmpl   $0xbeef0101,0xc(%ebx)
   207ed:	75 39                	jne    20828 <heap_check+0xb8>
   207ef:	8b 13                	mov    (%ebx),%edx
   207f1:	8d 74 13 f8          	lea    -0x8(%ebx,%edx,1),%esi
   207f5:	81 7e 04 02 02 ef be 	cmpl   $0xbeef0202,0x4(%esi)
   207fc:	75 04                	jne    20802 <heap_check+0x92>
   207fe:	3b 16                	cmp    (%esi),%edx
   20800:	74 de                	je     207e0 <heap_check+0x70>
   20802:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   20809:	e8 22 85 ff ff       	call   18d30 <futex_up>
   2080e:	83 c4 10             	add    $0x10,%esp
   20811:	89 f0                	mov    %esi,%eax
   20813:	5b                   	pop    %ebx
   20814:	5e                   	pop    %esi
   20815:	5d                   	pop    %ebp
   20816:	c3                   	ret    
   20817:	90                   	nop
   20818:	8b 70 0c             	mov    0xc(%eax),%esi
   2081b:	85 f6                	test   %esi,%esi
   2081d:	0f 85 6f ff ff ff    	jne    20792 <heap_check+0x22>
   20823:	eb dd                	jmp    20802 <heap_check+0x92>
   20825:	8d 76 00             	lea    0x0(%esi),%esi
   20828:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   2082f:	89 de                	mov    %ebx,%esi
   20831:	e8 fa 84 ff ff       	call   18d30 <futex_up>
   20836:	83 c4 10             	add    $0x10,%esp
   20839:	89 f0                	mov    %esi,%eax
   2083b:	5b                   	pop    %ebx
   2083c:	5e                   	pop    %esi
   2083d:	5d                   	pop    %ebp
   2083e:	c3                   	ret    
   2083f:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   20846:	83 ce ff             	or     $0xffffffff,%esi
   20849:	e8 e2 84 ff ff       	call   18d30 <futex_up>
   2084e:	eb be                	jmp    2080e <heap_check+0x9e>

00020850 <block_check.part.0>:
   20850:	55                   	push   %ebp
   20851:	89 e5                	mov    %esp,%ebp
   20853:	83 ec 18             	sub    $0x18,%esp
   20856:	c7 04 24 c8 05 03 00 	movl   $0x305c8,(%esp)
   2085d:	e8 ce 84 ff ff       	call   18d30 <futex_up>
   20862:	c7 44 24 08 fd 00 00 	movl   $0xfd,0x8(%esp)
   20869:	00 
   2086a:	c7 44 24 04 15 e2 02 	movl   $0x2e215,0x4(%esp)
   20871:	00 
   20872:	c7 04 24 80 e3 02 00 	movl   $0x2e380,(%esp)
   20879:	e8 32 a0 00 00       	call   2a8b0 <assert_abort>
   2087e:	66 90                	xchg   %ax,%ax

00020880 <service_register>:
   20880:	55                   	push   %ebp
   20881:	89 e5                	mov    %esp,%ebp
   20883:	53                   	push   %ebx
   20884:	83 ec 34             	sub    $0x34,%esp
   20887:	a1 8c 06 03 00       	mov    0x3068c,%eax
   2088c:	89 04 24             	mov    %eax,(%esp)
   2088f:	e8 7c 2d 00 00       	call   23610 <async_exchange_begin>
   20894:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2089b:	00 
   2089c:	89 c3                	mov    %eax,%ebx
   2089e:	8b 45 08             	mov    0x8(%ebp),%eax
   208a1:	89 1c 24             	mov    %ebx,(%esp)
   208a4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   208ab:	00 
   208ac:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   208b3:	00 
   208b4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   208bb:	00 
   208bc:	89 44 24 04          	mov    %eax,0x4(%esp)
   208c0:	e8 eb 24 00 00       	call   22db0 <async_connect_to_me>
   208c5:	89 1c 24             	mov    %ebx,(%esp)
   208c8:	89 45 f4             	mov    %eax,-0xc(%ebp)
   208cb:	e8 b0 30 00 00       	call   23980 <async_exchange_end>
   208d0:	8b 45 f4             	mov    -0xc(%ebp),%eax
   208d3:	83 c4 34             	add    $0x34,%esp
   208d6:	5b                   	pop    %ebx
   208d7:	5d                   	pop    %ebp
   208d8:	c3                   	ret    
   208d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000208e0 <service_connect>:
   208e0:	55                   	push   %ebp
   208e1:	89 e5                	mov    %esp,%ebp
   208e3:	57                   	push   %edi
   208e4:	56                   	push   %esi
   208e5:	53                   	push   %ebx
   208e6:	83 ec 3c             	sub    $0x3c,%esp
   208e9:	a1 8c 06 03 00       	mov    0x3068c,%eax
   208ee:	8b 75 10             	mov    0x10(%ebp),%esi
   208f1:	89 04 24             	mov    %eax,(%esp)
   208f4:	8b 7d 14             	mov    0x14(%ebp),%edi
   208f7:	e8 14 2d 00 00       	call   23610 <async_exchange_begin>
   208fc:	89 c3                	mov    %eax,%ebx
   208fe:	85 c0                	test   %eax,%eax
   20900:	74 56                	je     20958 <service_connect+0x78>
   20902:	8b 45 0c             	mov    0xc(%ebp),%eax
   20905:	89 7c 24 10          	mov    %edi,0x10(%esp)
   20909:	89 44 24 08          	mov    %eax,0x8(%esp)
   2090d:	8b 45 08             	mov    0x8(%ebp),%eax
   20910:	89 74 24 0c          	mov    %esi,0xc(%esp)
   20914:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   20918:	89 04 24             	mov    %eax,(%esp)
   2091b:	e8 80 29 00 00       	call   232a0 <async_connect_me_to>
   20920:	89 1c 24             	mov    %ebx,(%esp)
   20923:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   20926:	e8 55 30 00 00       	call   23980 <async_exchange_end>
   2092b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2092e:	85 c0                	test   %eax,%eax
   20930:	74 26                	je     20958 <service_connect+0x78>
   20932:	89 04 24             	mov    %eax,(%esp)
   20935:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2093c:	00 
   2093d:	89 7c 24 08          	mov    %edi,0x8(%esp)
   20941:	89 74 24 04          	mov    %esi,0x4(%esp)
   20945:	e8 26 2a 00 00       	call   23370 <async_sess_args_set>
   2094a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2094d:	83 c4 3c             	add    $0x3c,%esp
   20950:	5b                   	pop    %ebx
   20951:	5e                   	pop    %esi
   20952:	5f                   	pop    %edi
   20953:	5d                   	pop    %ebp
   20954:	c3                   	ret    
   20955:	8d 76 00             	lea    0x0(%esi),%esi
   20958:	31 c0                	xor    %eax,%eax
   2095a:	eb f1                	jmp    2094d <service_connect+0x6d>
   2095c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00020960 <service_connect_blocking>:
   20960:	55                   	push   %ebp
   20961:	89 e5                	mov    %esp,%ebp
   20963:	57                   	push   %edi
   20964:	56                   	push   %esi
   20965:	53                   	push   %ebx
   20966:	83 ec 3c             	sub    $0x3c,%esp
   20969:	a1 8c 06 03 00       	mov    0x3068c,%eax
   2096e:	8b 75 10             	mov    0x10(%ebp),%esi
   20971:	89 04 24             	mov    %eax,(%esp)
   20974:	8b 7d 14             	mov    0x14(%ebp),%edi
   20977:	e8 94 2c 00 00       	call   23610 <async_exchange_begin>
   2097c:	89 c3                	mov    %eax,%ebx
   2097e:	85 c0                	test   %eax,%eax
   20980:	74 56                	je     209d8 <service_connect_blocking+0x78>
   20982:	8b 45 0c             	mov    0xc(%ebp),%eax
   20985:	89 7c 24 10          	mov    %edi,0x10(%esp)
   20989:	89 44 24 08          	mov    %eax,0x8(%esp)
   2098d:	8b 45 08             	mov    0x8(%ebp),%eax
   20990:	89 74 24 0c          	mov    %esi,0xc(%esp)
   20994:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   20998:	89 04 24             	mov    %eax,(%esp)
   2099b:	e8 f0 29 00 00       	call   23390 <async_connect_me_to_blocking>
   209a0:	89 1c 24             	mov    %ebx,(%esp)
   209a3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   209a6:	e8 d5 2f 00 00       	call   23980 <async_exchange_end>
   209ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   209ae:	85 c0                	test   %eax,%eax
   209b0:	74 26                	je     209d8 <service_connect_blocking+0x78>
   209b2:	89 04 24             	mov    %eax,(%esp)
   209b5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   209bc:	00 
   209bd:	89 7c 24 08          	mov    %edi,0x8(%esp)
   209c1:	89 74 24 04          	mov    %esi,0x4(%esp)
   209c5:	e8 a6 29 00 00       	call   23370 <async_sess_args_set>
   209ca:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   209cd:	83 c4 3c             	add    $0x3c,%esp
   209d0:	5b                   	pop    %ebx
   209d1:	5e                   	pop    %esi
   209d2:	5f                   	pop    %edi
   209d3:	5d                   	pop    %ebp
   209d4:	c3                   	ret    
   209d5:	8d 76 00             	lea    0x0(%esi),%esi
   209d8:	31 c0                	xor    %eax,%eax
   209da:	eb f1                	jmp    209cd <service_connect_blocking+0x6d>
   209dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000209e0 <service_bind>:
   209e0:	55                   	push   %ebp
   209e1:	89 e5                	mov    %esp,%ebp
   209e3:	57                   	push   %edi
   209e4:	56                   	push   %esi
   209e5:	53                   	push   %ebx
   209e6:	83 ec 2c             	sub    $0x2c,%esp
   209e9:	a1 8c 06 03 00       	mov    0x3068c,%eax
   209ee:	89 04 24             	mov    %eax,(%esp)
   209f1:	e8 1a 2c 00 00       	call   23610 <async_exchange_begin>
   209f6:	89 c6                	mov    %eax,%esi
   209f8:	85 c0                	test   %eax,%eax
   209fa:	0f 84 a8 00 00 00    	je     20aa8 <service_bind+0xc8>
   20a00:	8b 45 08             	mov    0x8(%ebp),%eax
   20a03:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   20a0a:	00 
   20a0b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   20a12:	00 
   20a13:	89 44 24 08          	mov    %eax,0x8(%esp)
   20a17:	89 74 24 04          	mov    %esi,0x4(%esp)
   20a1b:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   20a22:	e8 69 29 00 00       	call   23390 <async_connect_me_to_blocking>
   20a27:	89 34 24             	mov    %esi,(%esp)
   20a2a:	89 c3                	mov    %eax,%ebx
   20a2c:	e8 4f 2f 00 00       	call   23980 <async_exchange_end>
   20a31:	85 db                	test   %ebx,%ebx
   20a33:	74 73                	je     20aa8 <service_bind+0xc8>
   20a35:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   20a3c:	00 
   20a3d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   20a44:	00 
   20a45:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   20a4c:	00 
   20a4d:	89 1c 24             	mov    %ebx,(%esp)
   20a50:	e8 1b 29 00 00       	call   23370 <async_sess_args_set>
   20a55:	89 1c 24             	mov    %ebx,(%esp)
   20a58:	e8 b3 2b 00 00       	call   23610 <async_exchange_begin>
   20a5d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   20a64:	00 
   20a65:	89 c6                	mov    %eax,%esi
   20a67:	8b 45 18             	mov    0x18(%ebp),%eax
   20a6a:	89 44 24 10          	mov    %eax,0x10(%esp)
   20a6e:	8b 45 14             	mov    0x14(%ebp),%eax
   20a71:	89 44 24 0c          	mov    %eax,0xc(%esp)
   20a75:	8b 45 10             	mov    0x10(%ebp),%eax
   20a78:	89 44 24 08          	mov    %eax,0x8(%esp)
   20a7c:	8b 45 0c             	mov    0xc(%ebp),%eax
   20a7f:	89 44 24 04          	mov    %eax,0x4(%esp)
   20a83:	89 34 24             	mov    %esi,(%esp)
   20a86:	e8 25 23 00 00       	call   22db0 <async_connect_to_me>
   20a8b:	89 34 24             	mov    %esi,(%esp)
   20a8e:	89 c7                	mov    %eax,%edi
   20a90:	e8 eb 2e 00 00       	call   23980 <async_exchange_end>
   20a95:	85 ff                	test   %edi,%edi
   20a97:	75 17                	jne    20ab0 <service_bind+0xd0>
   20a99:	83 c4 2c             	add    $0x2c,%esp
   20a9c:	89 d8                	mov    %ebx,%eax
   20a9e:	5b                   	pop    %ebx
   20a9f:	5e                   	pop    %esi
   20aa0:	5f                   	pop    %edi
   20aa1:	5d                   	pop    %ebp
   20aa2:	c3                   	ret    
   20aa3:	90                   	nop
   20aa4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   20aa8:	31 db                	xor    %ebx,%ebx
   20aaa:	eb ed                	jmp    20a99 <service_bind+0xb9>
   20aac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   20ab0:	89 1c 24             	mov    %ebx,(%esp)
   20ab3:	31 db                	xor    %ebx,%ebx
   20ab5:	e8 56 2a 00 00       	call   23510 <async_hangup>
   20aba:	e8 21 fc fe ff       	call   106e0 <__errno>
   20abf:	89 38                	mov    %edi,(%eax)
   20ac1:	eb d6                	jmp    20a99 <service_bind+0xb9>
   20ac3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   20ac9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00020ad0 <ns_ping>:
   20ad0:	55                   	push   %ebp
   20ad1:	89 e5                	mov    %esp,%ebp
   20ad3:	53                   	push   %ebx
   20ad4:	83 ec 44             	sub    $0x44,%esp
   20ad7:	a1 8c 06 03 00       	mov    0x3068c,%eax
   20adc:	89 04 24             	mov    %eax,(%esp)
   20adf:	e8 2c 2b 00 00       	call   23610 <async_exchange_begin>
   20ae4:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   20aeb:	00 
   20aec:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   20af3:	00 
   20af4:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   20afb:	00 
   20afc:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   20b03:	00 
   20b04:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   20b0b:	00 
   20b0c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   20b13:	00 
   20b14:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   20b1b:	00 
   20b1c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   20b23:	00 
   20b24:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   20b2b:	00 
   20b2c:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)
   20b33:	00 
   20b34:	89 04 24             	mov    %eax,(%esp)
   20b37:	89 c3                	mov    %eax,%ebx
   20b39:	e8 82 1a 00 00       	call   225c0 <async_req_fast>
   20b3e:	89 1c 24             	mov    %ebx,(%esp)
   20b41:	89 45 f4             	mov    %eax,-0xc(%ebp)
   20b44:	e8 37 2e 00 00       	call   23980 <async_exchange_end>
   20b49:	8b 45 f4             	mov    -0xc(%ebp),%eax
   20b4c:	83 c4 44             	add    $0x44,%esp
   20b4f:	5b                   	pop    %ebx
   20b50:	5d                   	pop    %ebp
   20b51:	c3                   	ret    
   20b52:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   20b59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00020b60 <ns_intro>:
   20b60:	55                   	push   %ebp
   20b61:	89 e5                	mov    %esp,%ebp
   20b63:	57                   	push   %edi
   20b64:	56                   	push   %esi
   20b65:	53                   	push   %ebx
   20b66:	83 ec 4c             	sub    $0x4c,%esp
   20b69:	a1 8c 06 03 00       	mov    0x3068c,%eax
   20b6e:	8b 75 08             	mov    0x8(%ebp),%esi
   20b71:	89 04 24             	mov    %eax,(%esp)
   20b74:	8b 7d 0c             	mov    0xc(%ebp),%edi
   20b77:	e8 94 2a 00 00       	call   23610 <async_exchange_begin>
   20b7c:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   20b80:	89 74 24 08          	mov    %esi,0x8(%esp)
   20b84:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   20b8b:	00 
   20b8c:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   20b93:	00 
   20b94:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   20b9b:	00 
   20b9c:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   20ba3:	00 
   20ba4:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   20bab:	00 
   20bac:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   20bb3:	00 
   20bb4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   20bbb:	00 
   20bbc:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)
   20bc3:	00 
   20bc4:	89 04 24             	mov    %eax,(%esp)
   20bc7:	89 c3                	mov    %eax,%ebx
   20bc9:	e8 f2 19 00 00       	call   225c0 <async_req_fast>
   20bce:	89 1c 24             	mov    %ebx,(%esp)
   20bd1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   20bd4:	e8 a7 2d 00 00       	call   23980 <async_exchange_end>
   20bd9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   20bdc:	83 c4 4c             	add    $0x4c,%esp
   20bdf:	5b                   	pop    %ebx
   20be0:	5e                   	pop    %esi
   20be1:	5f                   	pop    %edi
   20be2:	5d                   	pop    %ebp
   20be3:	c3                   	ret    
   20be4:	66 90                	xchg   %ax,%ax
   20be6:	66 90                	xchg   %ax,%ax
   20be8:	66 90                	xchg   %ax,%ax
   20bea:	66 90                	xchg   %ax,%ax
   20bec:	66 90                	xchg   %ax,%ax
   20bee:	66 90                	xchg   %ax,%ax

00020bf0 <default_client_data_constructor>:
   20bf0:	55                   	push   %ebp
   20bf1:	31 c0                	xor    %eax,%eax
   20bf3:	89 e5                	mov    %esp,%ebp
   20bf5:	5d                   	pop    %ebp
   20bf6:	c3                   	ret    
   20bf7:	89 f6                	mov    %esi,%esi
   20bf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00020c00 <default_client_data_destructor>:
   20c00:	55                   	push   %ebp
   20c01:	89 e5                	mov    %esp,%ebp
   20c03:	5d                   	pop    %ebp
   20c04:	c3                   	ret    
   20c05:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   20c09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00020c10 <default_interrupt_received>:
   20c10:	55                   	push   %ebp
   20c11:	89 e5                	mov    %esp,%ebp
   20c13:	5d                   	pop    %ebp
   20c14:	c3                   	ret    
   20c15:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   20c19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00020c20 <client_key_hash>:
   20c20:	55                   	push   %ebp
   20c21:	89 e5                	mov    %esp,%ebp
   20c23:	8b 45 08             	mov    0x8(%ebp),%eax
   20c26:	5d                   	pop    %ebp
   20c27:	8b 00                	mov    (%eax),%eax
   20c29:	c3                   	ret    
   20c2a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00020c30 <client_hash>:
   20c30:	55                   	push   %ebp
   20c31:	89 e5                	mov    %esp,%ebp
   20c33:	8b 45 08             	mov    0x8(%ebp),%eax
   20c36:	5d                   	pop    %ebp
   20c37:	8b 40 08             	mov    0x8(%eax),%eax
   20c3a:	c3                   	ret    
   20c3b:	90                   	nop
   20c3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00020c40 <client_key_equal>:
   20c40:	55                   	push   %ebp
   20c41:	89 e5                	mov    %esp,%ebp
   20c43:	8b 45 0c             	mov    0xc(%ebp),%eax
   20c46:	8b 4d 08             	mov    0x8(%ebp),%ecx
   20c49:	5d                   	pop    %ebp
   20c4a:	8b 50 08             	mov    0x8(%eax),%edx
   20c4d:	8b 40 0c             	mov    0xc(%eax),%eax
   20c50:	33 41 04             	xor    0x4(%ecx),%eax
   20c53:	33 11                	xor    (%ecx),%edx
   20c55:	09 c2                	or     %eax,%edx
   20c57:	0f 94 c0             	sete   %al
   20c5a:	c3                   	ret    
   20c5b:	90                   	nop
   20c5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00020c60 <conn_key_hash>:
   20c60:	55                   	push   %ebp
   20c61:	89 e5                	mov    %esp,%ebp
   20c63:	8b 45 08             	mov    0x8(%ebp),%eax
   20c66:	5d                   	pop    %ebp
   20c67:	8b 00                	mov    (%eax),%eax
   20c69:	c3                   	ret    
   20c6a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00020c70 <conn_hash>:
   20c70:	55                   	push   %ebp
   20c71:	89 e5                	mov    %esp,%ebp
   20c73:	8b 45 08             	mov    0x8(%ebp),%eax
   20c76:	5d                   	pop    %ebp
   20c77:	8b 40 10             	mov    0x10(%eax),%eax
   20c7a:	c3                   	ret    
   20c7b:	90                   	nop
   20c7c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00020c80 <conn_key_equal>:
   20c80:	55                   	push   %ebp
   20c81:	89 e5                	mov    %esp,%ebp
   20c83:	8b 45 08             	mov    0x8(%ebp),%eax
   20c86:	8b 55 0c             	mov    0xc(%ebp),%edx
   20c89:	5d                   	pop    %ebp
   20c8a:	8b 08                	mov    (%eax),%ecx
   20c8c:	39 4a 10             	cmp    %ecx,0x10(%edx)
   20c8f:	0f 94 c0             	sete   %al
   20c92:	c3                   	ret    
   20c93:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   20c99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00020ca0 <default_client_connection>:
   20ca0:	55                   	push   %ebp
   20ca1:	89 e5                	mov    %esp,%ebp
   20ca3:	83 ec 28             	sub    $0x28,%esp
   20ca6:	8b 45 08             	mov    0x8(%ebp),%eax
   20ca9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   20cb0:	00 
   20cb1:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   20cb8:	00 
   20cb9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   20cc0:	00 
   20cc1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   20cc8:	00 
   20cc9:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%esp)
   20cd0:	ff 
   20cd1:	89 04 24             	mov    %eax,(%esp)
   20cd4:	e8 97 af 00 00       	call   2bc70 <ipc_answer_fast>
   20cd9:	c9                   	leave  
   20cda:	c3                   	ret    
   20cdb:	90                   	nop
   20cdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00020ce0 <handle_expired_timeouts>:
   20ce0:	55                   	push   %ebp
   20ce1:	89 e5                	mov    %esp,%ebp
   20ce3:	56                   	push   %esi
   20ce4:	53                   	push   %ebx
   20ce5:	83 ec 20             	sub    $0x20,%esp
   20ce8:	8d 75 f0             	lea    -0x10(%ebp),%esi
   20ceb:	89 34 24             	mov    %esi,(%esp)
   20cee:	e8 6d 64 00 00       	call   27160 <getuptime>
   20cf3:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   20cfa:	e8 d1 7f ff ff       	call   18cd0 <futex_down>
   20cff:	90                   	nop
   20d00:	a1 e4 05 03 00       	mov    0x305e4,%eax
   20d05:	3d e0 05 03 00       	cmp    $0x305e0,%eax
   20d0a:	74 66                	je     20d72 <handle_expired_timeouts+0x92>
   20d0c:	85 c0                	test   %eax,%eax
   20d0e:	74 62                	je     20d72 <handle_expired_timeouts+0x92>
   20d10:	8d 58 f4             	lea    -0xc(%eax),%ebx
   20d13:	83 c0 0c             	add    $0xc,%eax
   20d16:	89 74 24 04          	mov    %esi,0x4(%esp)
   20d1a:	89 04 24             	mov    %eax,(%esp)
   20d1d:	e8 de 63 00 00       	call   27100 <tv_gt>
   20d22:	85 c0                	test   %eax,%eax
   20d24:	75 4c                	jne    20d72 <handle_expired_timeouts+0x92>
   20d26:	8b 53 0c             	mov    0xc(%ebx),%edx
   20d29:	85 d2                	test   %edx,%edx
   20d2b:	74 0f                	je     20d3c <handle_expired_timeouts+0x5c>
   20d2d:	8b 43 10             	mov    0x10(%ebx),%eax
   20d30:	85 c0                	test   %eax,%eax
   20d32:	74 08                	je     20d3c <handle_expired_timeouts+0x5c>
   20d34:	89 10                	mov    %edx,(%eax)
   20d36:	8b 53 0c             	mov    0xc(%ebx),%edx
   20d39:	89 42 04             	mov    %eax,0x4(%edx)
   20d3c:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
   20d43:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
   20d4a:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   20d4e:	c6 43 14 01          	movb   $0x1,0x14(%ebx)
   20d52:	80 7b 04 00          	cmpb   $0x0,0x4(%ebx)
   20d56:	75 a8                	jne    20d00 <handle_expired_timeouts+0x20>
   20d58:	8b 03                	mov    (%ebx),%eax
   20d5a:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   20d5e:	89 04 24             	mov    %eax,(%esp)
   20d61:	e8 ba 61 ff ff       	call   16f20 <fibril_add_ready>
   20d66:	a1 e4 05 03 00       	mov    0x305e4,%eax
   20d6b:	3d e0 05 03 00       	cmp    $0x305e0,%eax
   20d70:	75 9a                	jne    20d0c <handle_expired_timeouts+0x2c>
   20d72:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   20d79:	e8 b2 7f ff ff       	call   18d30 <futex_up>
   20d7e:	83 c4 20             	add    $0x20,%esp
   20d81:	5b                   	pop    %ebx
   20d82:	5e                   	pop    %esi
   20d83:	5d                   	pop    %ebp
   20d84:	c3                   	ret    
   20d85:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   20d89:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00020d90 <notification_fibril>:
   20d90:	55                   	push   %ebp
   20d91:	89 e5                	mov    %esp,%ebp
   20d93:	53                   	push   %ebx
   20d94:	83 ec 14             	sub    $0x14,%esp
   20d97:	8b 5d 08             	mov    0x8(%ebp),%ebx
   20d9a:	85 db                	test   %ebx,%ebx
   20d9c:	74 23                	je     20dc1 <notification_fibril+0x31>
   20d9e:	8d 43 0c             	lea    0xc(%ebx),%eax
   20da1:	89 44 24 04          	mov    %eax,0x4(%esp)
   20da5:	8b 43 08             	mov    0x8(%ebx),%eax
   20da8:	89 04 24             	mov    %eax,(%esp)
   20dab:	ff 15 dc 05 03 00    	call   *0x305dc
   20db1:	89 1c 24             	mov    %ebx,(%esp)
   20db4:	e8 27 f4 ff ff       	call   201e0 <free>
   20db9:	83 c4 14             	add    $0x14,%esp
   20dbc:	31 c0                	xor    %eax,%eax
   20dbe:	5b                   	pop    %ebx
   20dbf:	5d                   	pop    %ebp
   20dc0:	c3                   	ret    
   20dc1:	c7 44 24 08 2a 02 00 	movl   $0x22a,0x8(%esp)
   20dc8:	00 
   20dc9:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   20dd0:	00 
   20dd1:	c7 04 24 8a e4 02 00 	movl   $0x2e48a,(%esp)
   20dd8:	e8 d3 9a 00 00       	call   2a8b0 <assert_abort>
   20ddd:	8d 76 00             	lea    0x0(%esi),%esi

00020de0 <reply_received>:
   20de0:	55                   	push   %ebp
   20de1:	89 e5                	mov    %esp,%ebp
   20de3:	57                   	push   %edi
   20de4:	56                   	push   %esi
   20de5:	53                   	push   %ebx
   20de6:	83 ec 1c             	sub    $0x1c,%esp
   20de9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   20dec:	8b 7d 0c             	mov    0xc(%ebp),%edi
   20def:	8b 75 10             	mov    0x10(%ebp),%esi
   20df2:	85 db                	test   %ebx,%ebx
   20df4:	0f 84 a1 00 00 00    	je     20e9b <reply_received+0xbb>
   20dfa:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   20e01:	e8 ca 7e ff ff       	call   18cd0 <futex_down>
   20e06:	8b 43 30             	mov    0x30(%ebx),%eax
   20e09:	89 7b 34             	mov    %edi,0x34(%ebx)
   20e0c:	85 c0                	test   %eax,%eax
   20e0e:	74 0d                	je     20e1d <reply_received+0x3d>
   20e10:	85 f6                	test   %esi,%esi
   20e12:	74 09                	je     20e1d <reply_received+0x3d>
   20e14:	b9 09 00 00 00       	mov    $0x9,%ecx
   20e19:	89 c7                	mov    %eax,%edi
   20e1b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
   20e1d:	80 7b 08 00          	cmpb   $0x0,0x8(%ebx)
   20e21:	74 24                	je     20e47 <reply_received+0x67>
   20e23:	8b 53 0c             	mov    0xc(%ebx),%edx
   20e26:	85 d2                	test   %edx,%edx
   20e28:	74 0f                	je     20e39 <reply_received+0x59>
   20e2a:	8b 43 10             	mov    0x10(%ebx),%eax
   20e2d:	85 c0                	test   %eax,%eax
   20e2f:	74 08                	je     20e39 <reply_received+0x59>
   20e31:	89 10                	mov    %edx,(%eax)
   20e33:	8b 53 0c             	mov    0xc(%ebx),%edx
   20e36:	89 42 04             	mov    %eax,0x4(%edx)
   20e39:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
   20e40:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
   20e47:	c6 43 2c 01          	movb   $0x1,0x2c(%ebx)
   20e4b:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   20e4f:	74 1f                	je     20e70 <reply_received+0x90>
   20e51:	80 7b 04 00          	cmpb   $0x0,0x4(%ebx)
   20e55:	74 60                	je     20eb7 <reply_received+0xd7>
   20e57:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   20e5b:	75 76                	jne    20ed3 <reply_received+0xf3>
   20e5d:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   20e61:	89 1c 24             	mov    %ebx,(%esp)
   20e64:	e8 77 f3 ff ff       	call   201e0 <free>
   20e69:	eb 1d                	jmp    20e88 <reply_received+0xa8>
   20e6b:	90                   	nop
   20e6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   20e70:	80 7b 04 00          	cmpb   $0x0,0x4(%ebx)
   20e74:	75 12                	jne    20e88 <reply_received+0xa8>
   20e76:	8b 03                	mov    (%ebx),%eax
   20e78:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   20e7c:	89 04 24             	mov    %eax,(%esp)
   20e7f:	e8 9c 60 ff ff       	call   16f20 <fibril_add_ready>
   20e84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   20e88:	c7 45 08 cc 05 03 00 	movl   $0x305cc,0x8(%ebp)
   20e8f:	83 c4 1c             	add    $0x1c,%esp
   20e92:	5b                   	pop    %ebx
   20e93:	5e                   	pop    %esi
   20e94:	5f                   	pop    %edi
   20e95:	5d                   	pop    %ebp
   20e96:	e9 95 7e ff ff       	jmp    18d30 <futex_up>
   20e9b:	c7 44 24 08 6b 04 00 	movl   $0x46b,0x8(%esp)
   20ea2:	00 
   20ea3:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   20eaa:	00 
   20eab:	c7 04 24 8a e4 02 00 	movl   $0x2e48a,(%esp)
   20eb2:	e8 f9 99 00 00       	call   2a8b0 <assert_abort>
   20eb7:	c7 44 24 08 7f 04 00 	movl   $0x47f,0x8(%esp)
   20ebe:	00 
   20ebf:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   20ec6:	00 
   20ec7:	c7 04 24 95 e4 02 00 	movl   $0x2e495,(%esp)
   20ece:	e8 dd 99 00 00       	call   2a8b0 <assert_abort>
   20ed3:	e8 a9 45 00 00       	call   25481 <amsg_destroy.part.0>
   20ed8:	90                   	nop
   20ed9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00020ee0 <connection_fibril>:
   20ee0:	55                   	push   %ebp
   20ee1:	89 e5                	mov    %esp,%ebp
   20ee3:	53                   	push   %ebx
   20ee4:	83 ec 34             	sub    $0x34,%esp
   20ee7:	8b 45 08             	mov    0x8(%ebp),%eax
   20eea:	85 c0                	test   %eax,%eax
   20eec:	0f 84 54 02 00 00    	je     21146 <connection_fibril+0x266>
   20ef2:	8b 50 38             	mov    0x38(%eax),%edx
   20ef5:	65 a3 fc ff ff ff    	mov    %eax,%gs:0xfffffffc
   20efb:	8b 40 34             	mov    0x34(%eax),%eax
   20efe:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   20f05:	89 55 f4             	mov    %edx,-0xc(%ebp)
   20f08:	89 45 f0             	mov    %eax,-0x10(%ebp)
   20f0b:	e8 c0 7d ff ff       	call   18cd0 <futex_down>
   20f10:	8d 45 f0             	lea    -0x10(%ebp),%eax
   20f13:	89 44 24 04          	mov    %eax,0x4(%esp)
   20f17:	c7 04 24 d4 06 03 00 	movl   $0x306d4,(%esp)
   20f1e:	e8 5d 54 00 00       	call   26380 <hash_table_find>
   20f23:	89 c3                	mov    %eax,%ebx
   20f25:	85 c0                	test   %eax,%eax
   20f27:	0f 84 4b 01 00 00    	je     21078 <connection_fibril+0x198>
   20f2d:	f0 ff 40 10          	lock incl 0x10(%eax)
   20f31:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   20f38:	e8 f3 7d ff ff       	call   18d30 <futex_up>
   20f3d:	65 a1 fc ff ff ff    	mov    %gs:0xfffffffc,%eax
   20f43:	8b 50 74             	mov    0x74(%eax),%edx
   20f46:	89 58 40             	mov    %ebx,0x40(%eax)
   20f49:	89 54 24 08          	mov    %edx,0x8(%esp)
   20f4d:	8d 50 50             	lea    0x50(%eax),%edx
   20f50:	89 54 24 04          	mov    %edx,0x4(%esp)
   20f54:	8b 50 4c             	mov    0x4c(%eax),%edx
   20f57:	89 14 24             	mov    %edx,(%esp)
   20f5a:	ff 50 7c             	call   *0x7c(%eax)
   20f5d:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   20f64:	e8 67 7d ff ff       	call   18cd0 <futex_down>
   20f69:	83 c8 ff             	or     $0xffffffff,%eax
   20f6c:	f0 0f c1 43 10       	lock xadd %eax,0x10(%ebx)
   20f71:	48                   	dec    %eax
   20f72:	0f 84 48 01 00 00    	je     210c0 <connection_fibril+0x1e0>
   20f78:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   20f7f:	e8 ac 7d ff ff       	call   18d30 <futex_up>
   20f84:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   20f8b:	e8 40 7d ff ff       	call   18cd0 <futex_down>
   20f90:	65 a1 fc ff ff ff    	mov    %gs:0xfffffffc,%eax
   20f96:	83 c0 3c             	add    $0x3c,%eax
   20f99:	c7 04 24 f0 06 03 00 	movl   $0x306f0,(%esp)
   20fa0:	89 44 24 04          	mov    %eax,0x4(%esp)
   20fa4:	e8 27 55 00 00       	call   264d0 <hash_table_remove>
   20fa9:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   20fb0:	e8 7b 7d ff ff       	call   18d30 <futex_up>
   20fb5:	eb 5d                	jmp    21014 <connection_fibril+0x134>
   20fb7:	90                   	nop
   20fb8:	8b 13                	mov    (%ebx),%edx
   20fba:	85 d2                	test   %edx,%edx
   20fbc:	74 0e                	je     20fcc <connection_fibril+0xec>
   20fbe:	8b 43 04             	mov    0x4(%ebx),%eax
   20fc1:	85 c0                	test   %eax,%eax
   20fc3:	74 07                	je     20fcc <connection_fibril+0xec>
   20fc5:	89 10                	mov    %edx,(%eax)
   20fc7:	8b 13                	mov    (%ebx),%edx
   20fc9:	89 42 04             	mov    %eax,0x4(%edx)
   20fcc:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   20fd2:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   20fd9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   20fe0:	00 
   20fe1:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   20fe8:	00 
   20fe9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   20ff0:	00 
   20ff1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   20ff8:	00 
   20ff9:	c7 44 24 04 f9 ff ff 	movl   $0xfffffff9,0x4(%esp)
   21000:	ff 
   21001:	8b 43 08             	mov    0x8(%ebx),%eax
   21004:	89 04 24             	mov    %eax,(%esp)
   21007:	e8 64 ac 00 00       	call   2bc70 <ipc_answer_fast>
   2100c:	89 1c 24             	mov    %ebx,(%esp)
   2100f:	e8 cc f1 ff ff       	call   201e0 <free>
   21014:	65 a1 fc ff ff ff    	mov    %gs:0xfffffffc,%eax
   2101a:	8b 58 48             	mov    0x48(%eax),%ebx
   2101d:	8d 50 44             	lea    0x44(%eax),%edx
   21020:	39 d3                	cmp    %edx,%ebx
   21022:	75 94                	jne    20fb8 <connection_fibril+0xd8>
   21024:	8b 50 78             	mov    0x78(%eax),%edx
   21027:	85 d2                	test   %edx,%edx
   21029:	75 15                	jne    21040 <connection_fibril+0x160>
   2102b:	89 04 24             	mov    %eax,(%esp)
   2102e:	e8 ad f1 ff ff       	call   201e0 <free>
   21033:	83 c4 34             	add    $0x34,%esp
   21036:	31 c0                	xor    %eax,%eax
   21038:	5b                   	pop    %ebx
   21039:	5d                   	pop    %ebp
   2103a:	c3                   	ret    
   2103b:	90                   	nop
   2103c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   21040:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   21047:	00 
   21048:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2104f:	00 
   21050:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   21057:	00 
   21058:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2105f:	00 
   21060:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   21067:	00 
   21068:	89 14 24             	mov    %edx,(%esp)
   2106b:	e8 00 ac 00 00       	call   2bc70 <ipc_answer_fast>
   21070:	65 a1 fc ff ff ff    	mov    %gs:0xfffffffc,%eax
   21076:	eb b3                	jmp    2102b <connection_fibril+0x14b>
   21078:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
   2107f:	e8 4c f0 ff ff       	call   200d0 <malloc>
   21084:	89 c3                	mov    %eax,%ebx
   21086:	85 c0                	test   %eax,%eax
   21088:	74 72                	je     210fc <connection_fibril+0x21c>
   2108a:	8b 45 f0             	mov    -0x10(%ebp),%eax
   2108d:	8b 55 f4             	mov    -0xc(%ebp),%edx
   21090:	89 43 08             	mov    %eax,0x8(%ebx)
   21093:	89 53 0c             	mov    %edx,0xc(%ebx)
   21096:	ff 15 d0 05 03 00    	call   *0x305d0
   2109c:	c7 43 10 01 00 00 00 	movl   $0x1,0x10(%ebx)
   210a3:	89 43 14             	mov    %eax,0x14(%ebx)
   210a6:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   210aa:	c7 04 24 d4 06 03 00 	movl   $0x306d4,(%esp)
   210b1:	e8 9a 50 00 00       	call   26150 <hash_table_insert>
   210b6:	e9 76 fe ff ff       	jmp    20f31 <connection_fibril+0x51>
   210bb:	90                   	nop
   210bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   210c0:	8d 43 08             	lea    0x8(%ebx),%eax
   210c3:	c7 04 24 d4 06 03 00 	movl   $0x306d4,(%esp)
   210ca:	89 44 24 04          	mov    %eax,0x4(%esp)
   210ce:	e8 fd 53 00 00       	call   264d0 <hash_table_remove>
   210d3:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   210da:	e8 51 7c ff ff       	call   18d30 <futex_up>
   210df:	8b 43 14             	mov    0x14(%ebx),%eax
   210e2:	85 c0                	test   %eax,%eax
   210e4:	74 09                	je     210ef <connection_fibril+0x20f>
   210e6:	89 04 24             	mov    %eax,(%esp)
   210e9:	ff 15 d4 05 03 00    	call   *0x305d4
   210ef:	89 1c 24             	mov    %ebx,(%esp)
   210f2:	e8 e9 f0 ff ff       	call   201e0 <free>
   210f7:	e9 88 fe ff ff       	jmp    20f84 <connection_fibril+0xa4>
   210fc:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21103:	e8 28 7c ff ff       	call   18d30 <futex_up>
   21108:	65 a1 fc ff ff ff    	mov    %gs:0xfffffffc,%eax
   2110e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   21115:	00 
   21116:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2111d:	00 
   2111e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   21125:	00 
   21126:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2112d:	00 
   2112e:	c7 44 24 04 fe ff ff 	movl   $0xfffffffe,0x4(%esp)
   21135:	ff 
   21136:	8b 40 4c             	mov    0x4c(%eax),%eax
   21139:	89 04 24             	mov    %eax,(%esp)
   2113c:	e8 2f ab 00 00       	call   2bc70 <ipc_answer_fast>
   21141:	e9 ed fe ff ff       	jmp    21033 <connection_fibril+0x153>
   21146:	c7 44 24 08 0b 03 00 	movl   $0x30b,0x8(%esp)
   2114d:	00 
   2114e:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   21155:	00 
   21156:	c7 04 24 8a e4 02 00 	movl   $0x2e48a,(%esp)
   2115d:	e8 4e 97 00 00       	call   2a8b0 <assert_abort>
   21162:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   21169:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00021170 <async_connect_me_to_internal>:
   21170:	55                   	push   %ebp
   21171:	89 e5                	mov    %esp,%ebp
   21173:	57                   	push   %edi
   21174:	56                   	push   %esi
   21175:	53                   	push   %ebx
   21176:	83 ec 7c             	sub    $0x7c,%esp
   21179:	89 c6                	mov    %eax,%esi
   2117b:	89 4d b4             	mov    %ecx,-0x4c(%ebp)
   2117e:	89 d7                	mov    %edx,%edi
   21180:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   21187:	e8 44 ef ff ff       	call   200d0 <malloc>
   2118c:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
   2118f:	89 c3                	mov    %eax,%ebx
   21191:	85 c0                	test   %eax,%eax
   21193:	0f 84 07 01 00 00    	je     212a0 <async_connect_me_to_internal+0x130>
   21199:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   2119d:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   211a1:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   211a8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   211af:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   211b6:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   211bd:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   211c1:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   211c8:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   211cf:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   211d5:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   211d9:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   211dd:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   211e1:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   211e8:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   211eb:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   211ef:	89 43 30             	mov    %eax,0x30(%ebx)
   211f2:	8b 45 0c             	mov    0xc(%ebp),%eax
   211f5:	89 44 24 14          	mov    %eax,0x14(%esp)
   211f9:	8b 45 08             	mov    0x8(%ebp),%eax
   211fc:	89 44 24 10          	mov    %eax,0x10(%esp)
   21200:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   21207:	00 
   21208:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   2120f:	00 
   21210:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   21214:	89 7c 24 08          	mov    %edi,0x8(%esp)
   21218:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
   2121f:	00 
   21220:	89 34 24             	mov    %esi,(%esp)
   21223:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   21227:	e8 14 a6 00 00       	call   2b840 <ipc_call_async_fast>
   2122c:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21233:	e8 98 7a ff ff       	call   18cd0 <futex_down>
   21238:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   2123c:	0f 85 8a 00 00 00    	jne    212cc <async_connect_me_to_internal+0x15c>
   21242:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   21246:	75 68                	jne    212b0 <async_connect_me_to_internal+0x140>
   21248:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   2124c:	75 42                	jne    21290 <async_connect_me_to_internal+0x120>
   2124e:	e8 dd 5d ff ff       	call   17030 <fibril_get_id>
   21253:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2125a:	89 03                	mov    %eax,(%ebx)
   2125c:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   21260:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   21264:	e8 87 58 ff ff       	call   16af0 <fibril_switch>
   21269:	8b 73 34             	mov    0x34(%ebx),%esi
   2126c:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   21270:	75 39                	jne    212ab <async_connect_me_to_internal+0x13b>
   21272:	89 1c 24             	mov    %ebx,(%esp)
   21275:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   21279:	e8 62 ef ff ff       	call   201e0 <free>
   2127e:	89 f0                	mov    %esi,%eax
   21280:	85 f6                	test   %esi,%esi
   21282:	75 03                	jne    21287 <async_connect_me_to_internal+0x117>
   21284:	8b 45 d8             	mov    -0x28(%ebp),%eax
   21287:	83 c4 7c             	add    $0x7c,%esp
   2128a:	5b                   	pop    %ebx
   2128b:	5e                   	pop    %esi
   2128c:	5f                   	pop    %edi
   2128d:	5d                   	pop    %ebp
   2128e:	c3                   	ret    
   2128f:	90                   	nop
   21290:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21297:	e8 94 7a ff ff       	call   18d30 <futex_up>
   2129c:	eb cb                	jmp    21269 <async_connect_me_to_internal+0xf9>
   2129e:	66 90                	xchg   %ax,%ax
   212a0:	83 c4 7c             	add    $0x7c,%esp
   212a3:	83 c8 ff             	or     $0xffffffff,%eax
   212a6:	5b                   	pop    %ebx
   212a7:	5e                   	pop    %esi
   212a8:	5f                   	pop    %edi
   212a9:	5d                   	pop    %ebp
   212aa:	c3                   	ret    
   212ab:	e8 d1 41 00 00       	call   25481 <amsg_destroy.part.0>
   212b0:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   212b7:	00 
   212b8:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   212bf:	00 
   212c0:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   212c7:	e8 e4 95 00 00       	call   2a8b0 <assert_abort>
   212cc:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   212d3:	00 
   212d4:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   212db:	00 
   212dc:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   212e3:	e8 c8 95 00 00       	call   2a8b0 <assert_abort>
   212e8:	90                   	nop
   212e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000212f0 <awaiter_initialize>:
   212f0:	55                   	push   %ebp
   212f1:	89 e5                	mov    %esp,%ebp
   212f3:	8b 45 08             	mov    0x8(%ebp),%eax
   212f6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   212fc:	c6 40 04 00          	movb   $0x0,0x4(%eax)
   21300:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   21304:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   21308:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   2130f:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   21316:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   2131d:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   21324:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   21328:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   2132f:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   21336:	5d                   	pop    %ebp
   21337:	c3                   	ret    
   21338:	90                   	nop
   21339:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00021340 <async_set_client_data_constructor>:
   21340:	55                   	push   %ebp
   21341:	89 e5                	mov    %esp,%ebp
   21343:	83 ec 18             	sub    $0x18,%esp
   21346:	81 3d d0 05 03 00 f0 	cmpl   $0x20bf0,0x305d0
   2134d:	0b 02 00 
   21350:	75 0a                	jne    2135c <async_set_client_data_constructor+0x1c>
   21352:	8b 45 08             	mov    0x8(%ebp),%eax
   21355:	a3 d0 05 03 00       	mov    %eax,0x305d0
   2135a:	c9                   	leave  
   2135b:	c3                   	ret    
   2135c:	c7 44 24 08 38 01 00 	movl   $0x138,0x8(%esp)
   21363:	00 
   21364:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2136b:	00 
   2136c:	c7 04 24 f8 e4 02 00 	movl   $0x2e4f8,(%esp)
   21373:	e8 38 95 00 00       	call   2a8b0 <assert_abort>
   21378:	90                   	nop
   21379:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00021380 <async_set_client_data_destructor>:
   21380:	55                   	push   %ebp
   21381:	89 e5                	mov    %esp,%ebp
   21383:	83 ec 18             	sub    $0x18,%esp
   21386:	81 3d d4 05 03 00 00 	cmpl   $0x20c00,0x305d4
   2138d:	0c 02 00 
   21390:	75 0a                	jne    2139c <async_set_client_data_destructor+0x1c>
   21392:	8b 45 08             	mov    0x8(%ebp),%eax
   21395:	a3 d4 05 03 00       	mov    %eax,0x305d4
   2139a:	c9                   	leave  
   2139b:	c3                   	ret    
   2139c:	c7 44 24 08 3e 01 00 	movl   $0x13e,0x8(%esp)
   213a3:	00 
   213a4:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   213ab:	00 
   213ac:	c7 04 24 34 e5 02 00 	movl   $0x2e534,(%esp)
   213b3:	e8 f8 94 00 00       	call   2a8b0 <assert_abort>
   213b8:	90                   	nop
   213b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000213c0 <async_set_client_connection>:
   213c0:	55                   	push   %ebp
   213c1:	89 e5                	mov    %esp,%ebp
   213c3:	83 ec 18             	sub    $0x18,%esp
   213c6:	81 3d d8 05 03 00 a0 	cmpl   $0x20ca0,0x305d8
   213cd:	0c 02 00 
   213d0:	75 0a                	jne    213dc <async_set_client_connection+0x1c>
   213d2:	8b 45 08             	mov    0x8(%ebp),%eax
   213d5:	a3 d8 05 03 00       	mov    %eax,0x305d8
   213da:	c9                   	leave  
   213db:	c3                   	ret    
   213dc:	c7 44 24 08 68 01 00 	movl   $0x168,0x8(%esp)
   213e3:	00 
   213e4:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   213eb:	00 
   213ec:	c7 04 24 70 e5 02 00 	movl   $0x2e570,(%esp)
   213f3:	e8 b8 94 00 00       	call   2a8b0 <assert_abort>
   213f8:	90                   	nop
   213f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00021400 <async_set_interrupt_received>:
   21400:	55                   	push   %ebp
   21401:	89 e5                	mov    %esp,%ebp
   21403:	8b 45 08             	mov    0x8(%ebp),%eax
   21406:	5d                   	pop    %ebp
   21407:	a3 dc 05 03 00       	mov    %eax,0x305dc
   2140c:	c3                   	ret    
   2140d:	8d 76 00             	lea    0x0(%esi),%esi

00021410 <async_insert_timeout>:
   21410:	55                   	push   %ebp
   21411:	89 e5                	mov    %esp,%ebp
   21413:	57                   	push   %edi
   21414:	56                   	push   %esi
   21415:	53                   	push   %ebx
   21416:	83 ec 1c             	sub    $0x1c,%esp
   21419:	8b 7d 08             	mov    0x8(%ebp),%edi
   2141c:	85 ff                	test   %edi,%edi
   2141e:	74 5f                	je     2147f <async_insert_timeout+0x6f>
   21420:	8b 1d e4 05 03 00    	mov    0x305e4,%ebx
   21426:	c6 47 14 00          	movb   $0x0,0x14(%edi)
   2142a:	c6 47 08 01          	movb   $0x1,0x8(%edi)
   2142e:	8d 77 18             	lea    0x18(%edi),%esi
   21431:	81 fb e0 05 03 00    	cmp    $0x305e0,%ebx
   21437:	75 12                	jne    2144b <async_insert_timeout+0x3b>
   21439:	eb 3d                	jmp    21478 <async_insert_timeout+0x68>
   2143b:	90                   	nop
   2143c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   21440:	8b 5b 04             	mov    0x4(%ebx),%ebx
   21443:	81 fb e0 05 03 00    	cmp    $0x305e0,%ebx
   21449:	74 2d                	je     21478 <async_insert_timeout+0x68>
   2144b:	8d 43 0c             	lea    0xc(%ebx),%eax
   2144e:	89 74 24 04          	mov    %esi,0x4(%esp)
   21452:	89 04 24             	mov    %eax,(%esp)
   21455:	e8 d6 5c 00 00       	call   27130 <tv_gteq>
   2145a:	85 c0                	test   %eax,%eax
   2145c:	74 e2                	je     21440 <async_insert_timeout+0x30>
   2145e:	8b 13                	mov    (%ebx),%edx
   21460:	8d 47 0c             	lea    0xc(%edi),%eax
   21463:	89 57 0c             	mov    %edx,0xc(%edi)
   21466:	89 5f 10             	mov    %ebx,0x10(%edi)
   21469:	8b 13                	mov    (%ebx),%edx
   2146b:	89 03                	mov    %eax,(%ebx)
   2146d:	89 42 04             	mov    %eax,0x4(%edx)
   21470:	83 c4 1c             	add    $0x1c,%esp
   21473:	5b                   	pop    %ebx
   21474:	5e                   	pop    %esi
   21475:	5f                   	pop    %edi
   21476:	5d                   	pop    %ebp
   21477:	c3                   	ret    
   21478:	bb e0 05 03 00       	mov    $0x305e0,%ebx
   2147d:	eb df                	jmp    2145e <async_insert_timeout+0x4e>
   2147f:	c7 44 24 08 d1 01 00 	movl   $0x1d1,0x8(%esp)
   21486:	00 
   21487:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2148e:	00 
   2148f:	c7 04 24 b4 e4 02 00 	movl   $0x2e4b4,(%esp)
   21496:	e8 15 94 00 00       	call   2a8b0 <assert_abort>
   2149b:	90                   	nop
   2149c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000214a0 <async_get_call_timeout.constprop.11>:
   214a0:	55                   	push   %ebp
   214a1:	89 e5                	mov    %esp,%ebp
   214a3:	57                   	push   %edi
   214a4:	56                   	push   %esi
   214a5:	53                   	push   %ebx
   214a6:	83 ec 2c             	sub    $0x2c,%esp
   214a9:	89 c3                	mov    %eax,%ebx
   214ab:	85 c0                	test   %eax,%eax
   214ad:	0f 84 05 01 00 00    	je     215b8 <async_get_call_timeout.constprop.11+0x118>
   214b3:	65 8b 3d fc ff ff ff 	mov    %gs:0xfffffffc,%edi
   214ba:	85 ff                	test   %edi,%edi
   214bc:	0f 84 da 00 00 00    	je     2159c <async_get_call_timeout.constprop.11+0xfc>
   214c2:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   214c9:	8d 77 44             	lea    0x44(%edi),%esi
   214cc:	e8 ff 77 ff ff       	call   18cd0 <futex_down>
   214d1:	8b 47 48             	mov    0x48(%edi),%eax
   214d4:	c6 47 08 00          	movb   $0x0,0x8(%edi)
   214d8:	39 c6                	cmp    %eax,%esi
   214da:	74 27                	je     21503 <async_get_call_timeout.constprop.11+0x63>
   214dc:	eb 6a                	jmp    21548 <async_get_call_timeout.constprop.11+0xa8>
   214de:	66 90                	xchg   %ax,%ax
   214e0:	c6 47 04 00          	movb   $0x0,0x4(%edi)
   214e4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   214eb:	e8 00 56 ff ff       	call   16af0 <fibril_switch>
   214f0:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   214f7:	e8 d4 77 ff ff       	call   18cd0 <futex_down>
   214fc:	8b 47 48             	mov    0x48(%edi),%eax
   214ff:	39 f0                	cmp    %esi,%eax
   21501:	75 45                	jne    21548 <async_get_call_timeout.constprop.11+0xa8>
   21503:	8b 47 78             	mov    0x78(%edi),%eax
   21506:	85 c0                	test   %eax,%eax
   21508:	74 d6                	je     214e0 <async_get_call_timeout.constprop.11+0x40>
   2150a:	89 1c 24             	mov    %ebx,(%esp)
   2150d:	c7 44 24 08 24 00 00 	movl   $0x24,0x8(%esp)
   21514:	00 
   21515:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2151c:	00 
   2151d:	e8 3e 1b ff ff       	call   13060 <memset>
   21522:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   21528:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2152f:	e8 fc 77 ff ff       	call   18d30 <futex_up>
   21534:	8b 57 78             	mov    0x78(%edi),%edx
   21537:	83 c4 2c             	add    $0x2c,%esp
   2153a:	89 d0                	mov    %edx,%eax
   2153c:	5b                   	pop    %ebx
   2153d:	5e                   	pop    %esi
   2153e:	5f                   	pop    %edi
   2153f:	5d                   	pop    %ebp
   21540:	c3                   	ret    
   21541:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   21548:	8b 08                	mov    (%eax),%ecx
   2154a:	85 c9                	test   %ecx,%ecx
   2154c:	74 0e                	je     2155c <async_get_call_timeout.constprop.11+0xbc>
   2154e:	8b 50 04             	mov    0x4(%eax),%edx
   21551:	85 d2                	test   %edx,%edx
   21553:	74 07                	je     2155c <async_get_call_timeout.constprop.11+0xbc>
   21555:	89 0a                	mov    %ecx,(%edx)
   21557:	8b 08                	mov    (%eax),%ecx
   21559:	89 51 04             	mov    %edx,0x4(%ecx)
   2155c:	8d 70 0c             	lea    0xc(%eax),%esi
   2155f:	89 df                	mov    %ebx,%edi
   21561:	b9 09 00 00 00       	mov    $0x9,%ecx
   21566:	8b 50 08             	mov    0x8(%eax),%edx
   21569:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   2156f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   21576:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
   21578:	89 04 24             	mov    %eax,(%esp)
   2157b:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   2157e:	e8 5d ec ff ff       	call   201e0 <free>
   21583:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2158a:	e8 a1 77 ff ff       	call   18d30 <futex_up>
   2158f:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   21592:	83 c4 2c             	add    $0x2c,%esp
   21595:	89 d0                	mov    %edx,%eax
   21597:	5b                   	pop    %ebx
   21598:	5e                   	pop    %esi
   21599:	5f                   	pop    %edi
   2159a:	5d                   	pop    %ebp
   2159b:	c3                   	ret    
   2159c:	c7 44 24 08 69 02 00 	movl   $0x269,0x8(%esp)
   215a3:	00 
   215a4:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   215ab:	00 
   215ac:	c7 04 24 bc e4 02 00 	movl   $0x2e4bc,(%esp)
   215b3:	e8 f8 92 00 00       	call   2a8b0 <assert_abort>
   215b8:	c7 44 24 08 68 02 00 	movl   $0x268,0x8(%esp)
   215bf:	00 
   215c0:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   215c7:	00 
   215c8:	c7 04 24 b7 e4 02 00 	movl   $0x2e4b7,(%esp)
   215cf:	e8 dc 92 00 00       	call   2a8b0 <assert_abort>
   215d4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   215da:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000215e0 <async_get_call_timeout>:
   215e0:	55                   	push   %ebp
   215e1:	89 e5                	mov    %esp,%ebp
   215e3:	57                   	push   %edi
   215e4:	56                   	push   %esi
   215e5:	53                   	push   %ebx
   215e6:	83 ec 2c             	sub    $0x2c,%esp
   215e9:	8b 7d 08             	mov    0x8(%ebp),%edi
   215ec:	85 ff                	test   %edi,%edi
   215ee:	0f 84 cf 01 00 00    	je     217c3 <async_get_call_timeout+0x1e3>
   215f4:	65 8b 1d fc ff ff ff 	mov    %gs:0xfffffffc,%ebx
   215fb:	85 db                	test   %ebx,%ebx
   215fd:	0f 84 dc 01 00 00    	je     217df <async_get_call_timeout+0x1ff>
   21603:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2160a:	e8 c1 76 ff ff       	call   18cd0 <futex_down>
   2160f:	8b 75 0c             	mov    0xc(%ebp),%esi
   21612:	85 f6                	test   %esi,%esi
   21614:	0f 85 8a 01 00 00    	jne    217a4 <async_get_call_timeout+0x1c4>
   2161a:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   2161e:	8d 53 44             	lea    0x44(%ebx),%edx
   21621:	8b 43 48             	mov    0x48(%ebx),%eax
   21624:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   21627:	8d 53 0c             	lea    0xc(%ebx),%edx
   2162a:	8d 73 18             	lea    0x18(%ebx),%esi
   2162d:	89 55 e0             	mov    %edx,-0x20(%ebp)
   21630:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
   21633:	75 36                	jne    2166b <async_get_call_timeout+0x8b>
   21635:	8b 4b 78             	mov    0x78(%ebx),%ecx
   21638:	85 c9                	test   %ecx,%ecx
   2163a:	0f 85 27 01 00 00    	jne    21767 <async_get_call_timeout+0x187>
   21640:	8b 55 0c             	mov    0xc(%ebp),%edx
   21643:	85 d2                	test   %edx,%edx
   21645:	75 79                	jne    216c0 <async_get_call_timeout+0xe0>
   21647:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   2164b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   21652:	e8 99 54 ff ff       	call   16af0 <fibril_switch>
   21657:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2165e:	e8 6d 76 ff ff       	call   18cd0 <futex_down>
   21663:	8b 43 48             	mov    0x48(%ebx),%eax
   21666:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
   21669:	74 ca                	je     21635 <async_get_call_timeout+0x55>
   2166b:	8b 08                	mov    (%eax),%ecx
   2166d:	85 c9                	test   %ecx,%ecx
   2166f:	74 0e                	je     2167f <async_get_call_timeout+0x9f>
   21671:	8b 50 04             	mov    0x4(%eax),%edx
   21674:	85 d2                	test   %edx,%edx
   21676:	74 07                	je     2167f <async_get_call_timeout+0x9f>
   21678:	89 0a                	mov    %ecx,(%edx)
   2167a:	8b 08                	mov    (%eax),%ecx
   2167c:	89 51 04             	mov    %edx,0x4(%ecx)
   2167f:	8d 70 0c             	lea    0xc(%eax),%esi
   21682:	8b 7d 08             	mov    0x8(%ebp),%edi
   21685:	b9 09 00 00 00       	mov    $0x9,%ecx
   2168a:	8b 58 08             	mov    0x8(%eax),%ebx
   2168d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   21693:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   2169a:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
   2169c:	89 04 24             	mov    %eax,(%esp)
   2169f:	e8 3c eb ff ff       	call   201e0 <free>
   216a4:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   216ab:	e8 80 76 ff ff       	call   18d30 <futex_up>
   216b0:	83 c4 2c             	add    $0x2c,%esp
   216b3:	89 d8                	mov    %ebx,%eax
   216b5:	5b                   	pop    %ebx
   216b6:	5e                   	pop    %esi
   216b7:	5f                   	pop    %edi
   216b8:	5d                   	pop    %ebp
   216b9:	c3                   	ret    
   216ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   216c0:	8b 3d e4 05 03 00    	mov    0x305e4,%edi
   216c6:	c6 43 14 00          	movb   $0x0,0x14(%ebx)
   216ca:	c6 43 08 01          	movb   $0x1,0x8(%ebx)
   216ce:	81 ff e0 05 03 00    	cmp    $0x305e0,%edi
   216d4:	75 15                	jne    216eb <async_get_call_timeout+0x10b>
   216d6:	e9 85 00 00 00       	jmp    21760 <async_get_call_timeout+0x180>
   216db:	90                   	nop
   216dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   216e0:	8b 7f 04             	mov    0x4(%edi),%edi
   216e3:	81 ff e0 05 03 00    	cmp    $0x305e0,%edi
   216e9:	74 75                	je     21760 <async_get_call_timeout+0x180>
   216eb:	8d 47 0c             	lea    0xc(%edi),%eax
   216ee:	89 74 24 04          	mov    %esi,0x4(%esp)
   216f2:	89 04 24             	mov    %eax,(%esp)
   216f5:	e8 36 5a 00 00       	call   27130 <tv_gteq>
   216fa:	85 c0                	test   %eax,%eax
   216fc:	74 e2                	je     216e0 <async_get_call_timeout+0x100>
   216fe:	8b 07                	mov    (%edi),%eax
   21700:	8b 55 e0             	mov    -0x20(%ebp),%edx
   21703:	89 43 0c             	mov    %eax,0xc(%ebx)
   21706:	89 7b 10             	mov    %edi,0x10(%ebx)
   21709:	8b 07                	mov    (%edi),%eax
   2170b:	89 17                	mov    %edx,(%edi)
   2170d:	89 50 04             	mov    %edx,0x4(%eax)
   21710:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   21714:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2171b:	e8 d0 53 ff ff       	call   16af0 <fibril_switch>
   21720:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21727:	e8 a4 75 ff ff       	call   18cd0 <futex_down>
   2172c:	8b 43 48             	mov    0x48(%ebx),%eax
   2172f:	80 7b 14 00          	cmpb   $0x0,0x14(%ebx)
   21733:	0f 84 f7 fe ff ff    	je     21630 <async_get_call_timeout+0x50>
   21739:	3b 45 e4             	cmp    -0x1c(%ebp),%eax
   2173c:	0f 85 ee fe ff ff    	jne    21630 <async_get_call_timeout+0x50>
   21742:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21749:	31 db                	xor    %ebx,%ebx
   2174b:	e8 e0 75 ff ff       	call   18d30 <futex_up>
   21750:	83 c4 2c             	add    $0x2c,%esp
   21753:	89 d8                	mov    %ebx,%eax
   21755:	5b                   	pop    %ebx
   21756:	5e                   	pop    %esi
   21757:	5f                   	pop    %edi
   21758:	5d                   	pop    %ebp
   21759:	c3                   	ret    
   2175a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   21760:	bf e0 05 03 00       	mov    $0x305e0,%edi
   21765:	eb 97                	jmp    216fe <async_get_call_timeout+0x11e>
   21767:	8b 45 08             	mov    0x8(%ebp),%eax
   2176a:	c7 44 24 08 24 00 00 	movl   $0x24,0x8(%esp)
   21771:	00 
   21772:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   21779:	00 
   2177a:	89 04 24             	mov    %eax,(%esp)
   2177d:	e8 de 18 ff ff       	call   13060 <memset>
   21782:	8b 55 08             	mov    0x8(%ebp),%edx
   21785:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   2178b:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21792:	e8 99 75 ff ff       	call   18d30 <futex_up>
   21797:	8b 5b 78             	mov    0x78(%ebx),%ebx
   2179a:	83 c4 2c             	add    $0x2c,%esp
   2179d:	89 d8                	mov    %ebx,%eax
   2179f:	5b                   	pop    %ebx
   217a0:	5e                   	pop    %esi
   217a1:	5f                   	pop    %edi
   217a2:	5d                   	pop    %ebp
   217a3:	c3                   	ret    
   217a4:	8d 73 18             	lea    0x18(%ebx),%esi
   217a7:	89 34 24             	mov    %esi,(%esp)
   217aa:	e8 b1 59 00 00       	call   27160 <getuptime>
   217af:	8b 55 0c             	mov    0xc(%ebp),%edx
   217b2:	89 54 24 04          	mov    %edx,0x4(%esp)
   217b6:	89 34 24             	mov    %esi,(%esp)
   217b9:	e8 a2 58 00 00       	call   27060 <tv_add>
   217be:	e9 5b fe ff ff       	jmp    2161e <async_get_call_timeout+0x3e>
   217c3:	c7 44 24 08 68 02 00 	movl   $0x268,0x8(%esp)
   217ca:	00 
   217cb:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   217d2:	00 
   217d3:	c7 04 24 b7 e4 02 00 	movl   $0x2e4b7,(%esp)
   217da:	e8 d1 90 00 00       	call   2a8b0 <assert_abort>
   217df:	c7 44 24 08 69 02 00 	movl   $0x269,0x8(%esp)
   217e6:	00 
   217e7:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   217ee:	00 
   217ef:	c7 04 24 bc e4 02 00 	movl   $0x2e4bc,(%esp)
   217f6:	e8 b5 90 00 00       	call   2a8b0 <assert_abort>
   217fb:	90                   	nop
   217fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00021800 <async_get_client_data>:
   21800:	65 a1 fc ff ff ff    	mov    %gs:0xfffffffc,%eax
   21806:	85 c0                	test   %eax,%eax
   21808:	74 07                	je     21811 <async_get_client_data+0x11>
   2180a:	8b 40 40             	mov    0x40(%eax),%eax
   2180d:	8b 40 14             	mov    0x14(%eax),%eax
   21810:	c3                   	ret    
   21811:	55                   	push   %ebp
   21812:	89 e5                	mov    %esp,%ebp
   21814:	83 ec 18             	sub    $0x18,%esp
   21817:	c7 44 24 08 e0 02 00 	movl   $0x2e0,0x8(%esp)
   2181e:	00 
   2181f:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   21826:	00 
   21827:	c7 04 24 bc e4 02 00 	movl   $0x2e4bc,(%esp)
   2182e:	e8 7d 90 00 00       	call   2a8b0 <assert_abort>
   21833:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   21839:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00021840 <async_get_client_data_by_id>:
   21840:	55                   	push   %ebp
   21841:	89 e5                	mov    %esp,%ebp
   21843:	56                   	push   %esi
   21844:	53                   	push   %ebx
   21845:	83 ec 20             	sub    $0x20,%esp
   21848:	8b 55 0c             	mov    0xc(%ebp),%edx
   2184b:	8b 45 08             	mov    0x8(%ebp),%eax
   2184e:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21855:	89 55 f4             	mov    %edx,-0xc(%ebp)
   21858:	89 45 f0             	mov    %eax,-0x10(%ebp)
   2185b:	e8 70 74 ff ff       	call   18cd0 <futex_down>
   21860:	8d 45 f0             	lea    -0x10(%ebp),%eax
   21863:	c7 04 24 d4 06 03 00 	movl   $0x306d4,(%esp)
   2186a:	89 44 24 04          	mov    %eax,0x4(%esp)
   2186e:	e8 0d 4b 00 00       	call   26380 <hash_table_find>
   21873:	89 c3                	mov    %eax,%ebx
   21875:	85 c0                	test   %eax,%eax
   21877:	74 27                	je     218a0 <async_get_client_data_by_id+0x60>
   21879:	f0 ff 40 10          	lock incl 0x10(%eax)
   2187d:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21884:	e8 a7 74 ff ff       	call   18d30 <futex_up>
   21889:	8b 73 14             	mov    0x14(%ebx),%esi
   2188c:	85 f6                	test   %esi,%esi
   2188e:	74 27                	je     218b7 <async_get_client_data_by_id+0x77>
   21890:	83 c4 20             	add    $0x20,%esp
   21893:	89 f0                	mov    %esi,%eax
   21895:	5b                   	pop    %ebx
   21896:	5e                   	pop    %esi
   21897:	5d                   	pop    %ebp
   21898:	c3                   	ret    
   21899:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   218a0:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   218a7:	31 f6                	xor    %esi,%esi
   218a9:	e8 82 74 ff ff       	call   18d30 <futex_up>
   218ae:	83 c4 20             	add    $0x20,%esp
   218b1:	89 f0                	mov    %esi,%eax
   218b3:	5b                   	pop    %ebx
   218b4:	5e                   	pop    %esi
   218b5:	5d                   	pop    %ebp
   218b6:	c3                   	ret    
   218b7:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   218be:	e8 0d 74 ff ff       	call   18cd0 <futex_down>
   218c3:	83 c8 ff             	or     $0xffffffff,%eax
   218c6:	f0 0f c1 43 10       	lock xadd %eax,0x10(%ebx)
   218cb:	48                   	dec    %eax
   218cc:	74 0e                	je     218dc <async_get_client_data_by_id+0x9c>
   218ce:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   218d5:	e8 56 74 ff ff       	call   18d30 <futex_up>
   218da:	eb b4                	jmp    21890 <async_get_client_data_by_id+0x50>
   218dc:	8d 43 08             	lea    0x8(%ebx),%eax
   218df:	c7 04 24 d4 06 03 00 	movl   $0x306d4,(%esp)
   218e6:	89 44 24 04          	mov    %eax,0x4(%esp)
   218ea:	e8 e1 4b 00 00       	call   264d0 <hash_table_remove>
   218ef:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   218f6:	e8 35 74 ff ff       	call   18d30 <futex_up>
   218fb:	8b 43 14             	mov    0x14(%ebx),%eax
   218fe:	85 c0                	test   %eax,%eax
   21900:	74 09                	je     2190b <async_get_client_data_by_id+0xcb>
   21902:	89 04 24             	mov    %eax,(%esp)
   21905:	ff 15 d4 05 03 00    	call   *0x305d4
   2190b:	89 1c 24             	mov    %ebx,(%esp)
   2190e:	e8 cd e8 ff ff       	call   201e0 <free>
   21913:	e9 78 ff ff ff       	jmp    21890 <async_get_client_data_by_id+0x50>
   21918:	90                   	nop
   21919:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00021920 <async_put_client_data_by_id>:
   21920:	55                   	push   %ebp
   21921:	89 e5                	mov    %esp,%ebp
   21923:	53                   	push   %ebx
   21924:	83 ec 24             	sub    $0x24,%esp
   21927:	8b 55 0c             	mov    0xc(%ebp),%edx
   2192a:	8b 45 08             	mov    0x8(%ebp),%eax
   2192d:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21934:	89 55 f4             	mov    %edx,-0xc(%ebp)
   21937:	89 45 f0             	mov    %eax,-0x10(%ebp)
   2193a:	e8 91 73 ff ff       	call   18cd0 <futex_down>
   2193f:	8d 45 f0             	lea    -0x10(%ebp),%eax
   21942:	c7 04 24 d4 06 03 00 	movl   $0x306d4,(%esp)
   21949:	89 44 24 04          	mov    %eax,0x4(%esp)
   2194d:	e8 2e 4a 00 00       	call   26380 <hash_table_find>
   21952:	89 c3                	mov    %eax,%ebx
   21954:	85 c0                	test   %eax,%eax
   21956:	74 70                	je     219c8 <async_put_client_data_by_id+0xa8>
   21958:	f0 ff 40 10          	lock incl 0x10(%eax)
   2195c:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21963:	e8 c8 73 ff ff       	call   18d30 <futex_up>
   21968:	8b 43 14             	mov    0x14(%ebx),%eax
   2196b:	85 c0                	test   %eax,%eax
   2196d:	0f 84 f9 00 00 00    	je     21a6c <async_put_client_data_by_id+0x14c>
   21973:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2197a:	e8 51 73 ff ff       	call   18cd0 <futex_down>
   2197f:	83 c8 ff             	or     $0xffffffff,%eax
   21982:	f0 0f c1 43 10       	lock xadd %eax,0x10(%ebx)
   21987:	48                   	dec    %eax
   21988:	0f 84 a2 00 00 00    	je     21a30 <async_put_client_data_by_id+0x110>
   2198e:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21995:	e8 96 73 ff ff       	call   18d30 <futex_up>
   2199a:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   219a1:	e8 2a 73 ff ff       	call   18cd0 <futex_down>
   219a6:	83 c8 ff             	or     $0xffffffff,%eax
   219a9:	f0 0f c1 43 10       	lock xadd %eax,0x10(%ebx)
   219ae:	48                   	dec    %eax
   219af:	74 3f                	je     219f0 <async_put_client_data_by_id+0xd0>
   219b1:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   219b8:	e8 73 73 ff ff       	call   18d30 <futex_up>
   219bd:	83 c4 24             	add    $0x24,%esp
   219c0:	5b                   	pop    %ebx
   219c1:	5d                   	pop    %ebp
   219c2:	c3                   	ret    
   219c3:	90                   	nop
   219c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   219c8:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   219cf:	e8 5c 73 ff ff       	call   18d30 <futex_up>
   219d4:	c7 44 24 08 f5 02 00 	movl   $0x2f5,0x8(%esp)
   219db:	00 
   219dc:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   219e3:	00 
   219e4:	c7 04 24 db e4 02 00 	movl   $0x2e4db,(%esp)
   219eb:	e8 c0 8e 00 00       	call   2a8b0 <assert_abort>
   219f0:	8d 43 08             	lea    0x8(%ebx),%eax
   219f3:	c7 04 24 d4 06 03 00 	movl   $0x306d4,(%esp)
   219fa:	89 44 24 04          	mov    %eax,0x4(%esp)
   219fe:	e8 cd 4a 00 00       	call   264d0 <hash_table_remove>
   21a03:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21a0a:	e8 21 73 ff ff       	call   18d30 <futex_up>
   21a0f:	8b 43 14             	mov    0x14(%ebx),%eax
   21a12:	85 c0                	test   %eax,%eax
   21a14:	74 09                	je     21a1f <async_put_client_data_by_id+0xff>
   21a16:	89 04 24             	mov    %eax,(%esp)
   21a19:	ff 15 d4 05 03 00    	call   *0x305d4
   21a1f:	89 1c 24             	mov    %ebx,(%esp)
   21a22:	e8 b9 e7 ff ff       	call   201e0 <free>
   21a27:	83 c4 24             	add    $0x24,%esp
   21a2a:	5b                   	pop    %ebx
   21a2b:	5d                   	pop    %ebp
   21a2c:	c3                   	ret    
   21a2d:	8d 76 00             	lea    0x0(%esi),%esi
   21a30:	8d 43 08             	lea    0x8(%ebx),%eax
   21a33:	c7 04 24 d4 06 03 00 	movl   $0x306d4,(%esp)
   21a3a:	89 44 24 04          	mov    %eax,0x4(%esp)
   21a3e:	e8 8d 4a 00 00       	call   264d0 <hash_table_remove>
   21a43:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21a4a:	e8 e1 72 ff ff       	call   18d30 <futex_up>
   21a4f:	8b 43 14             	mov    0x14(%ebx),%eax
   21a52:	85 c0                	test   %eax,%eax
   21a54:	74 09                	je     21a5f <async_put_client_data_by_id+0x13f>
   21a56:	89 04 24             	mov    %eax,(%esp)
   21a59:	ff 15 d4 05 03 00    	call   *0x305d4
   21a5f:	89 1c 24             	mov    %ebx,(%esp)
   21a62:	e8 79 e7 ff ff       	call   201e0 <free>
   21a67:	e9 2e ff ff ff       	jmp    2199a <async_put_client_data_by_id+0x7a>
   21a6c:	c7 44 24 08 f6 02 00 	movl   $0x2f6,0x8(%esp)
   21a73:	00 
   21a74:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   21a7b:	00 
   21a7c:	c7 04 24 ce e4 02 00 	movl   $0x2e4ce,(%esp)
   21a83:	e8 28 8e 00 00       	call   2a8b0 <assert_abort>
   21a88:	90                   	nop
   21a89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00021a90 <async_new_connection>:
   21a90:	55                   	push   %ebp
   21a91:	89 e5                	mov    %esp,%ebp
   21a93:	57                   	push   %edi
   21a94:	56                   	push   %esi
   21a95:	53                   	push   %ebx
   21a96:	83 ec 2c             	sub    $0x2c,%esp
   21a99:	8b 75 08             	mov    0x8(%ebp),%esi
   21a9c:	8b 7d 0c             	mov    0xc(%ebp),%edi
   21a9f:	c7 04 24 80 00 00 00 	movl   $0x80,(%esp)
   21aa6:	e8 25 e6 ff ff       	call   200d0 <malloc>
   21aab:	89 c3                	mov    %eax,%ebx
   21aad:	85 c0                	test   %eax,%eax
   21aaf:	74 64                	je     21b15 <async_new_connection+0x85>
   21ab1:	89 70 34             	mov    %esi,0x34(%eax)
   21ab4:	89 78 38             	mov    %edi,0x38(%eax)
   21ab7:	8b 45 10             	mov    0x10(%ebp),%eax
   21aba:	c7 43 78 00 00 00 00 	movl   $0x0,0x78(%ebx)
   21ac1:	89 43 3c             	mov    %eax,0x3c(%ebx)
   21ac4:	8d 43 44             	lea    0x44(%ebx),%eax
   21ac7:	89 43 44             	mov    %eax,0x44(%ebx)
   21aca:	89 43 48             	mov    %eax,0x48(%ebx)
   21acd:	8b 45 14             	mov    0x14(%ebp),%eax
   21ad0:	89 43 4c             	mov    %eax,0x4c(%ebx)
   21ad3:	8b 45 20             	mov    0x20(%ebp),%eax
   21ad6:	89 43 74             	mov    %eax,0x74(%ebx)
   21ad9:	8b 45 18             	mov    0x18(%ebp),%eax
   21adc:	85 c0                	test   %eax,%eax
   21ade:	74 0d                	je     21aed <async_new_connection+0x5d>
   21ae0:	8d 7b 50             	lea    0x50(%ebx),%edi
   21ae3:	b9 09 00 00 00       	mov    $0x9,%ecx
   21ae8:	8b 75 18             	mov    0x18(%ebp),%esi
   21aeb:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
   21aed:	8b 45 1c             	mov    0x1c(%ebp),%eax
   21af0:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   21af4:	c7 04 24 e0 0e 02 00 	movl   $0x20ee0,(%esp)
   21afb:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   21aff:	89 43 7c             	mov    %eax,0x7c(%ebx)
   21b02:	e8 d9 52 ff ff       	call   16de0 <fibril_create>
   21b07:	89 03                	mov    %eax,(%ebx)
   21b09:	85 c0                	test   %eax,%eax
   21b0b:	75 1b                	jne    21b28 <async_new_connection+0x98>
   21b0d:	89 1c 24             	mov    %ebx,(%esp)
   21b10:	e8 cb e6 ff ff       	call   201e0 <free>
   21b15:	8b 45 14             	mov    0x14(%ebp),%eax
   21b18:	85 c0                	test   %eax,%eax
   21b1a:	75 4c                	jne    21b68 <async_new_connection+0xd8>
   21b1c:	83 c4 2c             	add    $0x2c,%esp
   21b1f:	31 c0                	xor    %eax,%eax
   21b21:	5b                   	pop    %ebx
   21b22:	5e                   	pop    %esi
   21b23:	5f                   	pop    %edi
   21b24:	5d                   	pop    %ebp
   21b25:	c3                   	ret    
   21b26:	66 90                	xchg   %ax,%ax
   21b28:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21b2f:	e8 9c 71 ff ff       	call   18cd0 <futex_down>
   21b34:	8d 43 2c             	lea    0x2c(%ebx),%eax
   21b37:	89 44 24 04          	mov    %eax,0x4(%esp)
   21b3b:	c7 04 24 f0 06 03 00 	movl   $0x306f0,(%esp)
   21b42:	e8 09 46 00 00       	call   26150 <hash_table_insert>
   21b47:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21b4e:	e8 dd 71 ff ff       	call   18d30 <futex_up>
   21b53:	8b 03                	mov    (%ebx),%eax
   21b55:	89 04 24             	mov    %eax,(%esp)
   21b58:	e8 c3 53 ff ff       	call   16f20 <fibril_add_ready>
   21b5d:	8b 03                	mov    (%ebx),%eax
   21b5f:	83 c4 2c             	add    $0x2c,%esp
   21b62:	5b                   	pop    %ebx
   21b63:	5e                   	pop    %esi
   21b64:	5f                   	pop    %edi
   21b65:	5d                   	pop    %ebp
   21b66:	c3                   	ret    
   21b67:	90                   	nop
   21b68:	8b 45 14             	mov    0x14(%ebp),%eax
   21b6b:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   21b72:	00 
   21b73:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   21b7a:	00 
   21b7b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   21b82:	00 
   21b83:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   21b8a:	00 
   21b8b:	c7 44 24 04 fe ff ff 	movl   $0xfffffffe,0x4(%esp)
   21b92:	ff 
   21b93:	89 04 24             	mov    %eax,(%esp)
   21b96:	e8 d5 a0 00 00       	call   2bc70 <ipc_answer_fast>
   21b9b:	e9 7c ff ff ff       	jmp    21b1c <async_new_connection+0x8c>

00021ba0 <async_manager_fibril>:
   21ba0:	55                   	push   %ebp
   21ba1:	89 e5                	mov    %esp,%ebp
   21ba3:	57                   	push   %edi
   21ba4:	56                   	push   %esi
   21ba5:	53                   	push   %ebx
   21ba6:	83 ec 6c             	sub    $0x6c,%esp
   21ba9:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21bb0:	e8 7b 71 ff ff       	call   18d30 <futex_up>
   21bb5:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   21bb8:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   21bbb:	90                   	nop
   21bbc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   21bc0:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   21bc7:	e8 24 4f ff ff       	call   16af0 <fibril_switch>
   21bcc:	85 c0                	test   %eax,%eax
   21bce:	0f 85 6c 01 00 00    	jne    21d40 <async_manager_fibril+0x1a0>
   21bd4:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21bdb:	e8 f0 70 ff ff       	call   18cd0 <futex_down>
   21be0:	8b 1d e4 05 03 00    	mov    0x305e4,%ebx
   21be6:	81 fb e0 05 03 00    	cmp    $0x305e0,%ebx
   21bec:	0f 84 9e 01 00 00    	je     21d90 <async_manager_fibril+0x1f0>
   21bf2:	8d 55 bc             	lea    -0x44(%ebp),%edx
   21bf5:	83 c3 0c             	add    $0xc,%ebx
   21bf8:	89 14 24             	mov    %edx,(%esp)
   21bfb:	e8 60 55 00 00       	call   27160 <getuptime>
   21c00:	8d 45 bc             	lea    -0x44(%ebp),%eax
   21c03:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   21c07:	89 04 24             	mov    %eax,(%esp)
   21c0a:	e8 21 55 00 00       	call   27130 <tv_gteq>
   21c0f:	85 c0                	test   %eax,%eax
   21c11:	0f 84 41 01 00 00    	je     21d58 <async_manager_fibril+0x1b8>
   21c17:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21c1e:	e8 0d 71 ff ff       	call   18d30 <futex_up>
   21c23:	e8 b8 f0 ff ff       	call   20ce0 <handle_expired_timeouts>
   21c28:	31 c0                	xor    %eax,%eax
   21c2a:	ba 01 00 00 00       	mov    $0x1,%edx
   21c2f:	f0 ff 05 d0 06 03 00 	lock incl 0x306d0
   21c36:	89 44 24 04          	mov    %eax,0x4(%esp)
   21c3a:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   21c3d:	89 54 24 08          	mov    %edx,0x8(%esp)
   21c41:	89 04 24             	mov    %eax,(%esp)
   21c44:	e8 d7 a0 00 00       	call   2bd20 <ipc_wait_cycle>
   21c49:	89 c3                	mov    %eax,%ebx
   21c4b:	f0 ff 0d d0 06 03 00 	lock decl 0x306d0
   21c52:	85 c0                	test   %eax,%eax
   21c54:	0f 84 26 01 00 00    	je     21d80 <async_manager_fibril+0x1e0>
   21c5a:	a8 01                	test   $0x1,%al
   21c5c:	0f 85 5e ff ff ff    	jne    21bc0 <async_manager_fibril+0x20>
   21c62:	a8 02                	test   $0x2,%al
   21c64:	0f 85 7e 01 00 00    	jne    21de8 <async_manager_fibril+0x248>
   21c6a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   21c6d:	83 f8 02             	cmp    $0x2,%eax
   21c70:	0f 84 32 01 00 00    	je     21da8 <async_manager_fibril+0x208>
   21c76:	83 f8 04             	cmp    $0x4,%eax
   21c79:	0f 84 29 01 00 00    	je     21da8 <async_manager_fibril+0x208>
   21c7f:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21c86:	e8 45 70 ff ff       	call   18cd0 <futex_down>
   21c8b:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   21c8e:	89 44 24 04          	mov    %eax,0x4(%esp)
   21c92:	c7 04 24 f0 06 03 00 	movl   $0x306f0,(%esp)
   21c99:	e8 e2 46 00 00       	call   26380 <hash_table_find>
   21c9e:	89 45 b0             	mov    %eax,-0x50(%ebp)
   21ca1:	85 c0                	test   %eax,%eax
   21ca3:	0f 84 af 01 00 00    	je     21e58 <async_manager_fibril+0x2b8>
   21ca9:	89 c2                	mov    %eax,%edx
   21cab:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)
   21cb2:	83 ea 2c             	sub    $0x2c,%edx
   21cb5:	89 55 ac             	mov    %edx,-0x54(%ebp)
   21cb8:	e8 13 e4 ff ff       	call   200d0 <malloc>
   21cbd:	8b 55 ac             	mov    -0x54(%ebp),%edx
   21cc0:	85 c0                	test   %eax,%eax
   21cc2:	0f 84 90 01 00 00    	je     21e58 <async_manager_fibril+0x2b8>
   21cc8:	89 58 08             	mov    %ebx,0x8(%eax)
   21ccb:	8d 78 0c             	lea    0xc(%eax),%edi
   21cce:	8b 75 b4             	mov    -0x4c(%ebp),%esi
   21cd1:	b9 09 00 00 00       	mov    $0x9,%ecx
   21cd6:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
   21cd8:	8b 4d b0             	mov    -0x50(%ebp),%ecx
   21cdb:	83 c1 18             	add    $0x18,%ecx
   21cde:	89 48 04             	mov    %ecx,0x4(%eax)
   21ce1:	8b 4a 44             	mov    0x44(%edx),%ecx
   21ce4:	89 08                	mov    %ecx,(%eax)
   21ce6:	8b 4a 44             	mov    0x44(%edx),%ecx
   21ce9:	89 42 44             	mov    %eax,0x44(%edx)
   21cec:	89 41 04             	mov    %eax,0x4(%ecx)
   21cef:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   21cf2:	85 c0                	test   %eax,%eax
   21cf4:	75 03                	jne    21cf9 <async_manager_fibril+0x159>
   21cf6:	89 5a 78             	mov    %ebx,0x78(%edx)
   21cf9:	80 7a 04 00          	cmpb   $0x0,0x4(%edx)
   21cfd:	75 41                	jne    21d40 <async_manager_fibril+0x1a0>
   21cff:	80 7a 08 00          	cmpb   $0x0,0x8(%edx)
   21d03:	74 28                	je     21d2d <async_manager_fibril+0x18d>
   21d05:	8b 4a 0c             	mov    0xc(%edx),%ecx
   21d08:	c6 42 08 00          	movb   $0x0,0x8(%edx)
   21d0c:	85 c9                	test   %ecx,%ecx
   21d0e:	74 0f                	je     21d1f <async_manager_fibril+0x17f>
   21d10:	8b 42 10             	mov    0x10(%edx),%eax
   21d13:	85 c0                	test   %eax,%eax
   21d15:	74 08                	je     21d1f <async_manager_fibril+0x17f>
   21d17:	89 08                	mov    %ecx,(%eax)
   21d19:	8b 4a 0c             	mov    0xc(%edx),%ecx
   21d1c:	89 41 04             	mov    %eax,0x4(%ecx)
   21d1f:	c7 42 0c 00 00 00 00 	movl   $0x0,0xc(%edx)
   21d26:	c7 42 10 00 00 00 00 	movl   $0x0,0x10(%edx)
   21d2d:	c6 42 04 01          	movb   $0x1,0x4(%edx)
   21d31:	8b 55 b0             	mov    -0x50(%ebp),%edx
   21d34:	8b 42 d4             	mov    -0x2c(%edx),%eax
   21d37:	89 04 24             	mov    %eax,(%esp)
   21d3a:	e8 e1 51 ff ff       	call   16f20 <fibril_add_ready>
   21d3f:	90                   	nop
   21d40:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21d47:	e8 e4 6f ff ff       	call   18d30 <futex_up>
   21d4c:	e9 6f fe ff ff       	jmp    21bc0 <async_manager_fibril+0x20>
   21d51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   21d58:	8d 55 bc             	lea    -0x44(%ebp),%edx
   21d5b:	89 1c 24             	mov    %ebx,(%esp)
   21d5e:	89 54 24 04          	mov    %edx,0x4(%esp)
   21d62:	e8 59 53 00 00       	call   270c0 <tv_sub>
   21d67:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21d6e:	89 c3                	mov    %eax,%ebx
   21d70:	e8 bb 6f ff ff       	call   18d30 <futex_up>
   21d75:	89 d8                	mov    %ebx,%eax
   21d77:	31 d2                	xor    %edx,%edx
   21d79:	e9 b1 fe ff ff       	jmp    21c2f <async_manager_fibril+0x8f>
   21d7e:	66 90                	xchg   %ax,%ax
   21d80:	e8 5b ef ff ff       	call   20ce0 <handle_expired_timeouts>
   21d85:	e9 36 fe ff ff       	jmp    21bc0 <async_manager_fibril+0x20>
   21d8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   21d90:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21d97:	e8 94 6f ff ff       	call   18d30 <futex_up>
   21d9c:	31 c0                	xor    %eax,%eax
   21d9e:	31 d2                	xor    %edx,%edx
   21da0:	e9 8a fe ff ff       	jmp    21c2f <async_manager_fibril+0x8f>
   21da5:	8d 76 00             	lea    0x0(%esi),%esi
   21da8:	a1 d8 05 03 00       	mov    0x305d8,%eax
   21dad:	8d 55 c4             	lea    -0x3c(%ebp),%edx
   21db0:	89 44 24 14          	mov    %eax,0x14(%esp)
   21db4:	8b 45 d8             	mov    -0x28(%ebp),%eax
   21db7:	89 54 24 10          	mov    %edx,0x10(%esp)
   21dbb:	89 44 24 08          	mov    %eax,0x8(%esp)
   21dbf:	8b 55 e0             	mov    -0x20(%ebp),%edx
   21dc2:	8b 45 dc             	mov    -0x24(%ebp),%eax
   21dc5:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   21dcc:	00 
   21dcd:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
   21dd1:	89 04 24             	mov    %eax,(%esp)
   21dd4:	89 54 24 04          	mov    %edx,0x4(%esp)
   21dd8:	e8 b3 fc ff ff       	call   21a90 <async_new_connection>
   21ddd:	e9 de fd ff ff       	jmp    21bc0 <async_manager_fibril+0x20>
   21de2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   21de8:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21def:	e8 dc 6e ff ff       	call   18cd0 <futex_down>
   21df4:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)
   21dfb:	e8 d0 e2 ff ff       	call   200d0 <malloc>
   21e00:	85 c0                	test   %eax,%eax
   21e02:	0f 84 38 ff ff ff    	je     21d40 <async_manager_fibril+0x1a0>
   21e08:	89 58 08             	mov    %ebx,0x8(%eax)
   21e0b:	8d 78 0c             	lea    0xc(%eax),%edi
   21e0e:	8b 75 b4             	mov    -0x4c(%ebp),%esi
   21e11:	b9 09 00 00 00       	mov    $0x9,%ecx
   21e16:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
   21e18:	89 44 24 04          	mov    %eax,0x4(%esp)
   21e1c:	c7 04 24 90 0d 02 00 	movl   $0x20d90,(%esp)
   21e23:	89 45 ac             	mov    %eax,-0x54(%ebp)
   21e26:	e8 b5 4f ff ff       	call   16de0 <fibril_create>
   21e2b:	8b 55 ac             	mov    -0x54(%ebp),%edx
   21e2e:	85 c0                	test   %eax,%eax
   21e30:	74 0d                	je     21e3f <async_manager_fibril+0x29f>
   21e32:	89 04 24             	mov    %eax,(%esp)
   21e35:	e8 e6 50 ff ff       	call   16f20 <fibril_add_ready>
   21e3a:	e9 01 ff ff ff       	jmp    21d40 <async_manager_fibril+0x1a0>
   21e3f:	89 14 24             	mov    %edx,(%esp)
   21e42:	e8 99 e3 ff ff       	call   201e0 <free>
   21e47:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21e4e:	e8 dd 6e ff ff       	call   18d30 <futex_up>
   21e53:	e9 68 fd ff ff       	jmp    21bc0 <async_manager_fibril+0x20>
   21e58:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   21e5f:	e8 cc 6e ff ff       	call   18d30 <futex_up>
   21e64:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   21e6b:	00 
   21e6c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   21e73:	00 
   21e74:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   21e7b:	00 
   21e7c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   21e83:	00 
   21e84:	c7 44 24 04 f9 ff ff 	movl   $0xfffffff9,0x4(%esp)
   21e8b:	ff 
   21e8c:	89 1c 24             	mov    %ebx,(%esp)
   21e8f:	e8 dc 9d 00 00       	call   2bc70 <ipc_answer_fast>
   21e94:	e9 27 fd ff ff       	jmp    21bc0 <async_manager_fibril+0x20>
   21e99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00021ea0 <async_create_manager>:
   21ea0:	55                   	push   %ebp
   21ea1:	89 e5                	mov    %esp,%ebp
   21ea3:	83 ec 18             	sub    $0x18,%esp
   21ea6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   21ead:	00 
   21eae:	c7 04 24 a0 1b 02 00 	movl   $0x21ba0,(%esp)
   21eb5:	e8 26 4f ff ff       	call   16de0 <fibril_create>
   21eba:	85 c0                	test   %eax,%eax
   21ebc:	75 02                	jne    21ec0 <async_create_manager+0x20>
   21ebe:	c9                   	leave  
   21ebf:	c3                   	ret    
   21ec0:	89 04 24             	mov    %eax,(%esp)
   21ec3:	e8 c8 50 ff ff       	call   16f90 <fibril_add_manager>
   21ec8:	c9                   	leave  
   21ec9:	c3                   	ret    
   21eca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00021ed0 <async_destroy_manager>:
   21ed0:	55                   	push   %ebp
   21ed1:	89 e5                	mov    %esp,%ebp
   21ed3:	5d                   	pop    %ebp
   21ed4:	e9 07 51 ff ff       	jmp    16fe0 <fibril_remove_manager>
   21ed9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00021ee0 <__async_init>:
   21ee0:	55                   	push   %ebp
   21ee1:	89 e5                	mov    %esp,%ebp
   21ee3:	83 ec 18             	sub    $0x18,%esp
   21ee6:	c7 44 24 0c e8 05 03 	movl   $0x305e8,0xc(%esp)
   21eed:	00 
   21eee:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   21ef5:	00 
   21ef6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   21efd:	00 
   21efe:	c7 04 24 d4 06 03 00 	movl   $0x306d4,(%esp)
   21f05:	e8 66 3e 00 00       	call   25d70 <hash_table_create>
   21f0a:	84 c0                	test   %al,%al
   21f0c:	0f 84 95 00 00 00    	je     21fa7 <__async_init+0xc7>
   21f12:	c7 44 24 0c fc 05 03 	movl   $0x305fc,0xc(%esp)
   21f19:	00 
   21f1a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   21f21:	00 
   21f22:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   21f29:	00 
   21f2a:	c7 04 24 f0 06 03 00 	movl   $0x306f0,(%esp)
   21f31:	e8 3a 3e 00 00       	call   25d70 <hash_table_create>
   21f36:	84 c0                	test   %al,%al
   21f38:	74 6d                	je     21fa7 <__async_init+0xc7>
   21f3a:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)
   21f41:	e8 8a e1 ff ff       	call   200d0 <malloc>
   21f46:	a3 8c 06 03 00       	mov    %eax,0x3068c
   21f4b:	85 c0                	test   %eax,%eax
   21f4d:	74 58                	je     21fa7 <__async_init+0xc7>
   21f4f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
   21f56:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   21f5d:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   21f64:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
   21f6b:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   21f72:	83 c0 30             	add    $0x30,%eax
   21f75:	89 04 24             	mov    %eax,(%esp)
   21f78:	e8 23 53 ff ff       	call   172a0 <fibril_mutex_initialize>
   21f7d:	a1 8c 06 03 00       	mov    0x3068c,%eax
   21f82:	c7 40 40 00 00 00 00 	movl   $0x0,0x40(%eax)
   21f89:	89 00                	mov    %eax,(%eax)
   21f8b:	89 40 04             	mov    %eax,0x4(%eax)
   21f8e:	83 c0 1c             	add    $0x1c,%eax
   21f91:	89 04 24             	mov    %eax,(%esp)
   21f94:	e8 07 53 ff ff       	call   172a0 <fibril_mutex_initialize>
   21f99:	a1 8c 06 03 00       	mov    0x3068c,%eax
   21f9e:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%eax)
   21fa5:	c9                   	leave  
   21fa6:	c3                   	ret    
   21fa7:	e8 e4 e1 fe ff       	call   10190 <abort>
   21fac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00021fb0 <async_send_fast>:
   21fb0:	55                   	push   %ebp
   21fb1:	89 e5                	mov    %esp,%ebp
   21fb3:	56                   	push   %esi
   21fb4:	53                   	push   %ebx
   21fb5:	83 ec 30             	sub    $0x30,%esp
   21fb8:	8b 75 08             	mov    0x8(%ebp),%esi
   21fbb:	85 f6                	test   %esi,%esi
   21fbd:	0f 84 bd 00 00 00    	je     22080 <async_send_fast+0xd0>
   21fc3:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   21fca:	e8 01 e1 ff ff       	call   200d0 <malloc>
   21fcf:	89 c3                	mov    %eax,%ebx
   21fd1:	85 c0                	test   %eax,%eax
   21fd3:	0f 84 a7 00 00 00    	je     22080 <async_send_fast+0xd0>
   21fd9:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   21fdd:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   21fe1:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   21fe8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   21fef:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   21ff6:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   21ffd:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   22001:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   22008:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   2200f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   22015:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   22019:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   2201d:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   22021:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   22028:	8b 45 20             	mov    0x20(%ebp),%eax
   2202b:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   2202f:	89 43 30             	mov    %eax,0x30(%ebx)
   22032:	8b 45 1c             	mov    0x1c(%ebp),%eax
   22035:	89 44 24 14          	mov    %eax,0x14(%esp)
   22039:	8b 45 18             	mov    0x18(%ebp),%eax
   2203c:	89 44 24 10          	mov    %eax,0x10(%esp)
   22040:	8b 45 14             	mov    0x14(%ebp),%eax
   22043:	89 44 24 0c          	mov    %eax,0xc(%esp)
   22047:	8b 45 10             	mov    0x10(%ebp),%eax
   2204a:	89 44 24 08          	mov    %eax,0x8(%esp)
   2204e:	8b 45 0c             	mov    0xc(%ebp),%eax
   22051:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   22058:	00 
   22059:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   22060:	00 
   22061:	89 44 24 04          	mov    %eax,0x4(%esp)
   22065:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   22069:	8b 46 14             	mov    0x14(%esi),%eax
   2206c:	89 04 24             	mov    %eax,(%esp)
   2206f:	e8 cc 97 00 00       	call   2b840 <ipc_call_async_fast>
   22074:	83 c4 30             	add    $0x30,%esp
   22077:	89 d8                	mov    %ebx,%eax
   22079:	5b                   	pop    %ebx
   2207a:	5e                   	pop    %esi
   2207b:	5d                   	pop    %ebp
   2207c:	c3                   	ret    
   2207d:	8d 76 00             	lea    0x0(%esi),%esi
   22080:	83 c4 30             	add    $0x30,%esp
   22083:	31 c0                	xor    %eax,%eax
   22085:	5b                   	pop    %ebx
   22086:	5e                   	pop    %esi
   22087:	5d                   	pop    %ebp
   22088:	c3                   	ret    
   22089:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022090 <async_send_slow>:
   22090:	55                   	push   %ebp
   22091:	89 e5                	mov    %esp,%ebp
   22093:	56                   	push   %esi
   22094:	53                   	push   %ebx
   22095:	83 ec 30             	sub    $0x30,%esp
   22098:	8b 75 08             	mov    0x8(%ebp),%esi
   2209b:	85 f6                	test   %esi,%esi
   2209d:	0f 84 c5 00 00 00    	je     22168 <async_send_slow+0xd8>
   220a3:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   220aa:	e8 21 e0 ff ff       	call   200d0 <malloc>
   220af:	89 c3                	mov    %eax,%ebx
   220b1:	85 c0                	test   %eax,%eax
   220b3:	0f 84 af 00 00 00    	je     22168 <async_send_slow+0xd8>
   220b9:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   220bd:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   220c1:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   220c8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   220cf:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   220d6:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   220dd:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   220e1:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   220e8:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   220ef:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   220f5:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   220f9:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   220fd:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   22101:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   22108:	8b 45 24             	mov    0x24(%ebp),%eax
   2210b:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
   2210f:	89 43 30             	mov    %eax,0x30(%ebx)
   22112:	8b 45 20             	mov    0x20(%ebp),%eax
   22115:	89 44 24 18          	mov    %eax,0x18(%esp)
   22119:	8b 45 1c             	mov    0x1c(%ebp),%eax
   2211c:	89 44 24 14          	mov    %eax,0x14(%esp)
   22120:	8b 45 18             	mov    0x18(%ebp),%eax
   22123:	89 44 24 10          	mov    %eax,0x10(%esp)
   22127:	8b 45 14             	mov    0x14(%ebp),%eax
   2212a:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2212e:	8b 45 10             	mov    0x10(%ebp),%eax
   22131:	89 44 24 08          	mov    %eax,0x8(%esp)
   22135:	8b 45 0c             	mov    0xc(%ebp),%eax
   22138:	c7 44 24 24 01 00 00 	movl   $0x1,0x24(%esp)
   2213f:	00 
   22140:	c7 44 24 20 e0 0d 02 	movl   $0x20de0,0x20(%esp)
   22147:	00 
   22148:	89 44 24 04          	mov    %eax,0x4(%esp)
   2214c:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   22150:	8b 46 14             	mov    0x14(%esi),%eax
   22153:	89 04 24             	mov    %eax,(%esp)
   22156:	e8 35 99 00 00       	call   2ba90 <ipc_call_async_slow>
   2215b:	83 c4 30             	add    $0x30,%esp
   2215e:	89 d8                	mov    %ebx,%eax
   22160:	5b                   	pop    %ebx
   22161:	5e                   	pop    %esi
   22162:	5d                   	pop    %ebp
   22163:	c3                   	ret    
   22164:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   22168:	83 c4 30             	add    $0x30,%esp
   2216b:	31 c0                	xor    %eax,%eax
   2216d:	5b                   	pop    %ebx
   2216e:	5e                   	pop    %esi
   2216f:	5d                   	pop    %ebp
   22170:	c3                   	ret    
   22171:	eb 0d                	jmp    22180 <async_wait_for>
   22173:	90                   	nop
   22174:	90                   	nop
   22175:	90                   	nop
   22176:	90                   	nop
   22177:	90                   	nop
   22178:	90                   	nop
   22179:	90                   	nop
   2217a:	90                   	nop
   2217b:	90                   	nop
   2217c:	90                   	nop
   2217d:	90                   	nop
   2217e:	90                   	nop
   2217f:	90                   	nop

00022180 <async_wait_for>:
   22180:	55                   	push   %ebp
   22181:	89 e5                	mov    %esp,%ebp
   22183:	56                   	push   %esi
   22184:	53                   	push   %ebx
   22185:	83 ec 10             	sub    $0x10,%esp
   22188:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2218b:	8b 75 0c             	mov    0xc(%ebp),%esi
   2218e:	85 db                	test   %ebx,%ebx
   22190:	0f 84 a5 00 00 00    	je     2223b <async_wait_for+0xbb>
   22196:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2219d:	e8 2e 6b ff ff       	call   18cd0 <futex_down>
   221a2:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   221a6:	75 77                	jne    2221f <async_wait_for+0x9f>
   221a8:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   221ac:	75 55                	jne    22203 <async_wait_for+0x83>
   221ae:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   221b2:	75 3c                	jne    221f0 <async_wait_for+0x70>
   221b4:	e8 77 4e ff ff       	call   17030 <fibril_get_id>
   221b9:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   221bd:	89 03                	mov    %eax,(%ebx)
   221bf:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   221c3:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   221ca:	e8 21 49 ff ff       	call   16af0 <fibril_switch>
   221cf:	85 f6                	test   %esi,%esi
   221d1:	74 05                	je     221d8 <async_wait_for+0x58>
   221d3:	8b 43 34             	mov    0x34(%ebx),%eax
   221d6:	89 06                	mov    %eax,(%esi)
   221d8:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   221dc:	75 20                	jne    221fe <async_wait_for+0x7e>
   221de:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   221e2:	89 5d 08             	mov    %ebx,0x8(%ebp)
   221e5:	83 c4 10             	add    $0x10,%esp
   221e8:	5b                   	pop    %ebx
   221e9:	5e                   	pop    %esi
   221ea:	5d                   	pop    %ebp
   221eb:	e9 f0 df ff ff       	jmp    201e0 <free>
   221f0:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   221f7:	e8 34 6b ff ff       	call   18d30 <futex_up>
   221fc:	eb d1                	jmp    221cf <async_wait_for+0x4f>
   221fe:	e8 7e 32 00 00       	call   25481 <amsg_destroy.part.0>
   22203:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   2220a:	00 
   2220b:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   22212:	00 
   22213:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   2221a:	e8 91 86 00 00       	call   2a8b0 <assert_abort>
   2221f:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   22226:	00 
   22227:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2222e:	00 
   2222f:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   22236:	e8 75 86 00 00       	call   2a8b0 <assert_abort>
   2223b:	c7 44 24 08 dc 04 00 	movl   $0x4dc,0x8(%esp)
   22242:	00 
   22243:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2224a:	00 
   2224b:	c7 04 24 e2 e4 02 00 	movl   $0x2e4e2,(%esp)
   22252:	e8 59 86 00 00       	call   2a8b0 <assert_abort>
   22257:	89 f6                	mov    %esi,%esi
   22259:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00022260 <async_wait_timeout>:
   22260:	55                   	push   %ebp
   22261:	89 e5                	mov    %esp,%ebp
   22263:	57                   	push   %edi
   22264:	56                   	push   %esi
   22265:	53                   	push   %ebx
   22266:	83 ec 1c             	sub    $0x1c,%esp
   22269:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2226c:	85 db                	test   %ebx,%ebx
   2226e:	0f 84 3e 01 00 00    	je     223b2 <async_wait_timeout+0x152>
   22274:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2227b:	e8 50 6a ff ff       	call   18cd0 <futex_down>
   22280:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   22284:	0f 85 0c 01 00 00    	jne    22396 <async_wait_timeout+0x136>
   2228a:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   2228e:	0f 85 e1 00 00 00    	jne    22375 <async_wait_timeout+0x115>
   22294:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   22298:	0f 85 c2 00 00 00    	jne    22360 <async_wait_timeout+0x100>
   2229e:	8d 73 18             	lea    0x18(%ebx),%esi
   222a1:	89 34 24             	mov    %esi,(%esp)
   222a4:	e8 b7 4e 00 00       	call   27160 <getuptime>
   222a9:	8b 45 10             	mov    0x10(%ebp),%eax
   222ac:	83 f0 ff             	xor    $0xffffffff,%eax
   222af:	8b 55 10             	mov    0x10(%ebp),%edx
   222b2:	c1 f8 1f             	sar    $0x1f,%eax
   222b5:	89 34 24             	mov    %esi,(%esp)
   222b8:	21 d0                	and    %edx,%eax
   222ba:	89 44 24 04          	mov    %eax,0x4(%esp)
   222be:	e8 9d 4d 00 00       	call   27060 <tv_add>
   222c3:	e8 68 4d ff ff       	call   17030 <fibril_get_id>
   222c8:	8b 3d e4 05 03 00    	mov    0x305e4,%edi
   222ce:	89 03                	mov    %eax,(%ebx)
   222d0:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   222d4:	c6 43 14 00          	movb   $0x0,0x14(%ebx)
   222d8:	c6 43 08 01          	movb   $0x1,0x8(%ebx)
   222dc:	81 ff e0 05 03 00    	cmp    $0x305e0,%edi
   222e2:	75 0f                	jne    222f3 <async_wait_timeout+0x93>
   222e4:	eb 72                	jmp    22358 <async_wait_timeout+0xf8>
   222e6:	66 90                	xchg   %ax,%ax
   222e8:	8b 7f 04             	mov    0x4(%edi),%edi
   222eb:	81 ff e0 05 03 00    	cmp    $0x305e0,%edi
   222f1:	74 65                	je     22358 <async_wait_timeout+0xf8>
   222f3:	8d 47 0c             	lea    0xc(%edi),%eax
   222f6:	89 74 24 04          	mov    %esi,0x4(%esp)
   222fa:	89 04 24             	mov    %eax,(%esp)
   222fd:	e8 2e 4e 00 00       	call   27130 <tv_gteq>
   22302:	85 c0                	test   %eax,%eax
   22304:	74 e2                	je     222e8 <async_wait_timeout+0x88>
   22306:	8b 0f                	mov    (%edi),%ecx
   22308:	8d 43 0c             	lea    0xc(%ebx),%eax
   2230b:	89 4b 0c             	mov    %ecx,0xc(%ebx)
   2230e:	89 7b 10             	mov    %edi,0x10(%ebx)
   22311:	8b 0f                	mov    (%edi),%ecx
   22313:	89 07                	mov    %eax,(%edi)
   22315:	89 41 04             	mov    %eax,0x4(%ecx)
   22318:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2231f:	e8 cc 47 ff ff       	call   16af0 <fibril_switch>
   22324:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   22328:	74 44                	je     2236e <async_wait_timeout+0x10e>
   2232a:	8b 45 0c             	mov    0xc(%ebp),%eax
   2232d:	85 c0                	test   %eax,%eax
   2232f:	74 08                	je     22339 <async_wait_timeout+0xd9>
   22331:	8b 55 0c             	mov    0xc(%ebp),%edx
   22334:	8b 43 34             	mov    0x34(%ebx),%eax
   22337:	89 02                	mov    %eax,(%edx)
   22339:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   2233d:	75 52                	jne    22391 <async_wait_timeout+0x131>
   2233f:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   22343:	89 1c 24             	mov    %ebx,(%esp)
   22346:	e8 95 de ff ff       	call   201e0 <free>
   2234b:	31 c0                	xor    %eax,%eax
   2234d:	83 c4 1c             	add    $0x1c,%esp
   22350:	5b                   	pop    %ebx
   22351:	5e                   	pop    %esi
   22352:	5f                   	pop    %edi
   22353:	5d                   	pop    %ebp
   22354:	c3                   	ret    
   22355:	8d 76 00             	lea    0x0(%esi),%esi
   22358:	bf e0 05 03 00       	mov    $0x305e0,%edi
   2235d:	eb a7                	jmp    22306 <async_wait_timeout+0xa6>
   2235f:	90                   	nop
   22360:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   22367:	e8 c4 69 ff ff       	call   18d30 <futex_up>
   2236c:	eb bc                	jmp    2232a <async_wait_timeout+0xca>
   2236e:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
   22373:	eb d8                	jmp    2234d <async_wait_timeout+0xed>
   22375:	c7 44 24 08 11 05 00 	movl   $0x511,0x8(%esp)
   2237c:	00 
   2237d:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   22384:	00 
   22385:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   2238c:	e8 1f 85 00 00       	call   2a8b0 <assert_abort>
   22391:	e8 eb 30 00 00       	call   25481 <amsg_destroy.part.0>
   22396:	c7 44 24 08 10 05 00 	movl   $0x510,0x8(%esp)
   2239d:	00 
   2239e:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   223a5:	00 
   223a6:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   223ad:	e8 fe 84 00 00       	call   2a8b0 <assert_abort>
   223b2:	c7 44 24 08 0a 05 00 	movl   $0x50a,0x8(%esp)
   223b9:	00 
   223ba:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   223c1:	00 
   223c2:	c7 04 24 e2 e4 02 00 	movl   $0x2e4e2,(%esp)
   223c9:	e8 e2 84 00 00       	call   2a8b0 <assert_abort>
   223ce:	66 90                	xchg   %ax,%ax

000223d0 <async_forget>:
   223d0:	55                   	push   %ebp
   223d1:	89 e5                	mov    %esp,%ebp
   223d3:	53                   	push   %ebx
   223d4:	83 ec 14             	sub    $0x14,%esp
   223d7:	8b 5d 08             	mov    0x8(%ebp),%ebx
   223da:	85 db                	test   %ebx,%ebx
   223dc:	0f 84 8a 00 00 00    	je     2246c <async_forget+0x9c>
   223e2:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   223e6:	75 68                	jne    22450 <async_forget+0x80>
   223e8:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   223ec:	75 46                	jne    22434 <async_forget+0x64>
   223ee:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   223f5:	e8 d6 68 ff ff       	call   18cd0 <futex_down>
   223fa:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   223fe:	75 20                	jne    22420 <async_forget+0x50>
   22400:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
   22407:	c6 43 2d 01          	movb   $0x1,0x2d(%ebx)
   2240b:	c7 45 08 cc 05 03 00 	movl   $0x305cc,0x8(%ebp)
   22412:	83 c4 14             	add    $0x14,%esp
   22415:	5b                   	pop    %ebx
   22416:	5d                   	pop    %ebp
   22417:	e9 14 69 ff ff       	jmp    18d30 <futex_up>
   2241c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   22420:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   22424:	75 62                	jne    22488 <async_forget+0xb8>
   22426:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   2242a:	89 1c 24             	mov    %ebx,(%esp)
   2242d:	e8 ae dd ff ff       	call   201e0 <free>
   22432:	eb d7                	jmp    2240b <async_forget+0x3b>
   22434:	c7 44 24 08 56 05 00 	movl   $0x556,0x8(%esp)
   2243b:	00 
   2243c:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   22443:	00 
   22444:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   2244b:	e8 60 84 00 00       	call   2a8b0 <assert_abort>
   22450:	c7 44 24 08 55 05 00 	movl   $0x555,0x8(%esp)
   22457:	00 
   22458:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2245f:	00 
   22460:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   22467:	e8 44 84 00 00       	call   2a8b0 <assert_abort>
   2246c:	c7 44 24 08 54 05 00 	movl   $0x554,0x8(%esp)
   22473:	00 
   22474:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2247b:	00 
   2247c:	c7 04 24 e9 e4 02 00 	movl   $0x2e4e9,(%esp)
   22483:	e8 28 84 00 00       	call   2a8b0 <assert_abort>
   22488:	e8 f4 2f 00 00       	call   25481 <amsg_destroy.part.0>
   2248d:	8d 76 00             	lea    0x0(%esi),%esi

00022490 <async_usleep>:
   22490:	55                   	push   %ebp
   22491:	89 e5                	mov    %esp,%ebp
   22493:	57                   	push   %edi
   22494:	56                   	push   %esi
   22495:	53                   	push   %ebx
   22496:	83 ec 1c             	sub    $0x1c,%esp
   22499:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2249c:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   224a3:	e8 28 dc ff ff       	call   200d0 <malloc>
   224a8:	89 c6                	mov    %eax,%esi
   224aa:	85 c0                	test   %eax,%eax
   224ac:	0f 84 fe 00 00 00    	je     225b0 <async_usleep+0x120>
   224b2:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   224b6:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   224ba:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   224be:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
   224c5:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   224cc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   224d2:	c6 40 04 00          	movb   $0x0,0x4(%eax)
   224d6:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   224da:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   224de:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   224e5:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   224ec:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   224f3:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   224fa:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   224fe:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   22505:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   2250c:	e8 1f 4b ff ff       	call   17030 <fibril_get_id>
   22511:	8d 7e 18             	lea    0x18(%esi),%edi
   22514:	89 3c 24             	mov    %edi,(%esp)
   22517:	89 06                	mov    %eax,(%esi)
   22519:	e8 42 4c 00 00       	call   27160 <getuptime>
   2251e:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   22522:	89 3c 24             	mov    %edi,(%esp)
   22525:	e8 36 4b 00 00       	call   27060 <tv_add>
   2252a:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   22531:	e8 9a 67 ff ff       	call   18cd0 <futex_down>
   22536:	8b 1d e4 05 03 00    	mov    0x305e4,%ebx
   2253c:	c6 46 14 00          	movb   $0x0,0x14(%esi)
   22540:	c6 46 08 01          	movb   $0x1,0x8(%esi)
   22544:	81 fb e0 05 03 00    	cmp    $0x305e0,%ebx
   2254a:	75 0f                	jne    2255b <async_usleep+0xcb>
   2254c:	eb 5a                	jmp    225a8 <async_usleep+0x118>
   2254e:	66 90                	xchg   %ax,%ax
   22550:	8b 5b 04             	mov    0x4(%ebx),%ebx
   22553:	81 fb e0 05 03 00    	cmp    $0x305e0,%ebx
   22559:	74 4d                	je     225a8 <async_usleep+0x118>
   2255b:	8d 43 0c             	lea    0xc(%ebx),%eax
   2255e:	89 7c 24 04          	mov    %edi,0x4(%esp)
   22562:	89 04 24             	mov    %eax,(%esp)
   22565:	e8 c6 4b 00 00       	call   27130 <tv_gteq>
   2256a:	85 c0                	test   %eax,%eax
   2256c:	74 e2                	je     22550 <async_usleep+0xc0>
   2256e:	8b 13                	mov    (%ebx),%edx
   22570:	8d 46 0c             	lea    0xc(%esi),%eax
   22573:	89 56 0c             	mov    %edx,0xc(%esi)
   22576:	89 5e 10             	mov    %ebx,0x10(%esi)
   22579:	8b 13                	mov    (%ebx),%edx
   2257b:	89 03                	mov    %eax,(%ebx)
   2257d:	89 42 04             	mov    %eax,0x4(%edx)
   22580:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   22587:	e8 64 45 ff ff       	call   16af0 <fibril_switch>
   2258c:	80 7e 2e 00          	cmpb   $0x0,0x2e(%esi)
   22590:	75 26                	jne    225b8 <async_usleep+0x128>
   22592:	89 75 08             	mov    %esi,0x8(%ebp)
   22595:	c6 46 2e 01          	movb   $0x1,0x2e(%esi)
   22599:	83 c4 1c             	add    $0x1c,%esp
   2259c:	5b                   	pop    %ebx
   2259d:	5e                   	pop    %esi
   2259e:	5f                   	pop    %edi
   2259f:	5d                   	pop    %ebp
   225a0:	e9 3b dc ff ff       	jmp    201e0 <free>
   225a5:	8d 76 00             	lea    0x0(%esi),%esi
   225a8:	bb e0 05 03 00       	mov    $0x305e0,%ebx
   225ad:	eb bf                	jmp    2256e <async_usleep+0xde>
   225af:	90                   	nop
   225b0:	83 c4 1c             	add    $0x1c,%esp
   225b3:	5b                   	pop    %ebx
   225b4:	5e                   	pop    %esi
   225b5:	5f                   	pop    %edi
   225b6:	5d                   	pop    %ebp
   225b7:	c3                   	ret    
   225b8:	e8 c4 2e 00 00       	call   25481 <amsg_destroy.part.0>
   225bd:	8d 76 00             	lea    0x0(%esi),%esi

000225c0 <async_req_fast>:
   225c0:	55                   	push   %ebp
   225c1:	89 e5                	mov    %esp,%ebp
   225c3:	56                   	push   %esi
   225c4:	53                   	push   %ebx
   225c5:	83 ec 70             	sub    $0x70,%esp
   225c8:	8b 75 08             	mov    0x8(%ebp),%esi
   225cb:	85 f6                	test   %esi,%esi
   225cd:	0f 84 5d 01 00 00    	je     22730 <async_req_fast+0x170>
   225d3:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   225da:	e8 f1 da ff ff       	call   200d0 <malloc>
   225df:	89 c3                	mov    %eax,%ebx
   225e1:	85 c0                	test   %eax,%eax
   225e3:	0f 84 77 01 00 00    	je     22760 <async_req_fast+0x1a0>
   225e9:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   225ed:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   225f1:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   225f8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   225ff:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   22606:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   2260d:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   22611:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   22618:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   2261f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   22625:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   22629:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   2262d:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   22631:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   22638:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   2263b:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   2263f:	89 43 30             	mov    %eax,0x30(%ebx)
   22642:	8b 45 1c             	mov    0x1c(%ebp),%eax
   22645:	89 44 24 14          	mov    %eax,0x14(%esp)
   22649:	8b 45 18             	mov    0x18(%ebp),%eax
   2264c:	89 44 24 10          	mov    %eax,0x10(%esp)
   22650:	8b 45 14             	mov    0x14(%ebp),%eax
   22653:	89 44 24 0c          	mov    %eax,0xc(%esp)
   22657:	8b 45 10             	mov    0x10(%ebp),%eax
   2265a:	89 44 24 08          	mov    %eax,0x8(%esp)
   2265e:	8b 45 0c             	mov    0xc(%ebp),%eax
   22661:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   22668:	00 
   22669:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   22670:	00 
   22671:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   22675:	89 44 24 04          	mov    %eax,0x4(%esp)
   22679:	8b 46 14             	mov    0x14(%esi),%eax
   2267c:	89 04 24             	mov    %eax,(%esp)
   2267f:	e8 bc 91 00 00       	call   2b840 <ipc_call_async_fast>
   22684:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2268b:	e8 40 66 ff ff       	call   18cd0 <futex_down>
   22690:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   22694:	0f 85 e7 00 00 00    	jne    22781 <async_req_fast+0x1c1>
   2269a:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   2269e:	0f 85 f9 00 00 00    	jne    2279d <async_req_fast+0x1dd>
   226a4:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   226a8:	0f 84 92 00 00 00    	je     22740 <async_req_fast+0x180>
   226ae:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   226b5:	e8 76 66 ff ff       	call   18d30 <futex_up>
   226ba:	8b 43 34             	mov    0x34(%ebx),%eax
   226bd:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   226c1:	0f 85 b5 00 00 00    	jne    2277c <async_req_fast+0x1bc>
   226c7:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   226cb:	89 1c 24             	mov    %ebx,(%esp)
   226ce:	89 45 c4             	mov    %eax,-0x3c(%ebp)
   226d1:	e8 0a db ff ff       	call   201e0 <free>
   226d6:	8b 4d 20             	mov    0x20(%ebp),%ecx
   226d9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   226dc:	85 c9                	test   %ecx,%ecx
   226de:	74 08                	je     226e8 <async_req_fast+0x128>
   226e0:	8b 4d 20             	mov    0x20(%ebp),%ecx
   226e3:	8b 55 d8             	mov    -0x28(%ebp),%edx
   226e6:	89 11                	mov    %edx,(%ecx)
   226e8:	8b 55 24             	mov    0x24(%ebp),%edx
   226eb:	85 d2                	test   %edx,%edx
   226ed:	74 08                	je     226f7 <async_req_fast+0x137>
   226ef:	8b 4d 24             	mov    0x24(%ebp),%ecx
   226f2:	8b 55 dc             	mov    -0x24(%ebp),%edx
   226f5:	89 11                	mov    %edx,(%ecx)
   226f7:	8b 75 28             	mov    0x28(%ebp),%esi
   226fa:	85 f6                	test   %esi,%esi
   226fc:	74 08                	je     22706 <async_req_fast+0x146>
   226fe:	8b 4d 28             	mov    0x28(%ebp),%ecx
   22701:	8b 55 e0             	mov    -0x20(%ebp),%edx
   22704:	89 11                	mov    %edx,(%ecx)
   22706:	8b 5d 2c             	mov    0x2c(%ebp),%ebx
   22709:	85 db                	test   %ebx,%ebx
   2270b:	74 08                	je     22715 <async_req_fast+0x155>
   2270d:	8b 4d 2c             	mov    0x2c(%ebp),%ecx
   22710:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   22713:	89 11                	mov    %edx,(%ecx)
   22715:	8b 4d 30             	mov    0x30(%ebp),%ecx
   22718:	85 c9                	test   %ecx,%ecx
   2271a:	74 08                	je     22724 <async_req_fast+0x164>
   2271c:	8b 4d 30             	mov    0x30(%ebp),%ecx
   2271f:	8b 55 e8             	mov    -0x18(%ebp),%edx
   22722:	89 11                	mov    %edx,(%ecx)
   22724:	83 c4 70             	add    $0x70,%esp
   22727:	5b                   	pop    %ebx
   22728:	5e                   	pop    %esi
   22729:	5d                   	pop    %ebp
   2272a:	c3                   	ret    
   2272b:	90                   	nop
   2272c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   22730:	83 c4 70             	add    $0x70,%esp
   22733:	83 c8 ff             	or     $0xffffffff,%eax
   22736:	5b                   	pop    %ebx
   22737:	5e                   	pop    %esi
   22738:	5d                   	pop    %ebp
   22739:	c3                   	ret    
   2273a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   22740:	e8 eb 48 ff ff       	call   17030 <fibril_get_id>
   22745:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   22749:	89 03                	mov    %eax,(%ebx)
   2274b:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   2274f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   22756:	e8 95 43 ff ff       	call   16af0 <fibril_switch>
   2275b:	e9 5a ff ff ff       	jmp    226ba <async_req_fast+0xfa>
   22760:	c7 44 24 08 dc 04 00 	movl   $0x4dc,0x8(%esp)
   22767:	00 
   22768:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2276f:	00 
   22770:	c7 04 24 e2 e4 02 00 	movl   $0x2e4e2,(%esp)
   22777:	e8 34 81 00 00       	call   2a8b0 <assert_abort>
   2277c:	e8 00 2d 00 00       	call   25481 <amsg_destroy.part.0>
   22781:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   22788:	00 
   22789:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   22790:	00 
   22791:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   22798:	e8 13 81 00 00       	call   2a8b0 <assert_abort>
   2279d:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   227a4:	00 
   227a5:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   227ac:	00 
   227ad:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   227b4:	e8 f7 80 00 00       	call   2a8b0 <assert_abort>
   227b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000227c0 <async_req_slow>:
   227c0:	55                   	push   %ebp
   227c1:	89 e5                	mov    %esp,%ebp
   227c3:	56                   	push   %esi
   227c4:	53                   	push   %ebx
   227c5:	83 ec 70             	sub    $0x70,%esp
   227c8:	8b 75 08             	mov    0x8(%ebp),%esi
   227cb:	85 f6                	test   %esi,%esi
   227cd:	0f 84 65 01 00 00    	je     22938 <async_req_slow+0x178>
   227d3:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   227da:	e8 f1 d8 ff ff       	call   200d0 <malloc>
   227df:	89 c3                	mov    %eax,%ebx
   227e1:	85 c0                	test   %eax,%eax
   227e3:	0f 84 7f 01 00 00    	je     22968 <async_req_slow+0x1a8>
   227e9:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   227ed:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   227f1:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   227f8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   227ff:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   22806:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   2280d:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   22811:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   22818:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   2281f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   22825:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   22829:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   2282d:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   22831:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   22838:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   2283b:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   2283f:	89 43 30             	mov    %eax,0x30(%ebx)
   22842:	8b 45 20             	mov    0x20(%ebp),%eax
   22845:	89 44 24 18          	mov    %eax,0x18(%esp)
   22849:	8b 45 1c             	mov    0x1c(%ebp),%eax
   2284c:	89 44 24 14          	mov    %eax,0x14(%esp)
   22850:	8b 45 18             	mov    0x18(%ebp),%eax
   22853:	89 44 24 10          	mov    %eax,0x10(%esp)
   22857:	8b 45 14             	mov    0x14(%ebp),%eax
   2285a:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2285e:	8b 45 10             	mov    0x10(%ebp),%eax
   22861:	89 44 24 08          	mov    %eax,0x8(%esp)
   22865:	8b 45 0c             	mov    0xc(%ebp),%eax
   22868:	c7 44 24 24 01 00 00 	movl   $0x1,0x24(%esp)
   2286f:	00 
   22870:	c7 44 24 20 e0 0d 02 	movl   $0x20de0,0x20(%esp)
   22877:	00 
   22878:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
   2287c:	89 44 24 04          	mov    %eax,0x4(%esp)
   22880:	8b 46 14             	mov    0x14(%esi),%eax
   22883:	89 04 24             	mov    %eax,(%esp)
   22886:	e8 05 92 00 00       	call   2ba90 <ipc_call_async_slow>
   2288b:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   22892:	e8 39 64 ff ff       	call   18cd0 <futex_down>
   22897:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   2289b:	0f 85 e8 00 00 00    	jne    22989 <async_req_slow+0x1c9>
   228a1:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   228a5:	0f 85 fa 00 00 00    	jne    229a5 <async_req_slow+0x1e5>
   228ab:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   228af:	0f 84 93 00 00 00    	je     22948 <async_req_slow+0x188>
   228b5:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   228bc:	e8 6f 64 ff ff       	call   18d30 <futex_up>
   228c1:	8b 43 34             	mov    0x34(%ebx),%eax
   228c4:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   228c8:	0f 85 b6 00 00 00    	jne    22984 <async_req_slow+0x1c4>
   228ce:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   228d2:	89 1c 24             	mov    %ebx,(%esp)
   228d5:	89 45 c4             	mov    %eax,-0x3c(%ebp)
   228d8:	e8 03 d9 ff ff       	call   201e0 <free>
   228dd:	8b 5d 24             	mov    0x24(%ebp),%ebx
   228e0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   228e3:	85 db                	test   %ebx,%ebx
   228e5:	74 08                	je     228ef <async_req_slow+0x12f>
   228e7:	8b 4d 24             	mov    0x24(%ebp),%ecx
   228ea:	8b 55 d8             	mov    -0x28(%ebp),%edx
   228ed:	89 11                	mov    %edx,(%ecx)
   228ef:	8b 4d 28             	mov    0x28(%ebp),%ecx
   228f2:	85 c9                	test   %ecx,%ecx
   228f4:	74 08                	je     228fe <async_req_slow+0x13e>
   228f6:	8b 4d 28             	mov    0x28(%ebp),%ecx
   228f9:	8b 55 dc             	mov    -0x24(%ebp),%edx
   228fc:	89 11                	mov    %edx,(%ecx)
   228fe:	8b 55 2c             	mov    0x2c(%ebp),%edx
   22901:	85 d2                	test   %edx,%edx
   22903:	74 08                	je     2290d <async_req_slow+0x14d>
   22905:	8b 4d 2c             	mov    0x2c(%ebp),%ecx
   22908:	8b 55 e0             	mov    -0x20(%ebp),%edx
   2290b:	89 11                	mov    %edx,(%ecx)
   2290d:	8b 75 30             	mov    0x30(%ebp),%esi
   22910:	85 f6                	test   %esi,%esi
   22912:	74 08                	je     2291c <async_req_slow+0x15c>
   22914:	8b 4d 30             	mov    0x30(%ebp),%ecx
   22917:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   2291a:	89 11                	mov    %edx,(%ecx)
   2291c:	8b 5d 34             	mov    0x34(%ebp),%ebx
   2291f:	85 db                	test   %ebx,%ebx
   22921:	74 08                	je     2292b <async_req_slow+0x16b>
   22923:	8b 4d 34             	mov    0x34(%ebp),%ecx
   22926:	8b 55 e8             	mov    -0x18(%ebp),%edx
   22929:	89 11                	mov    %edx,(%ecx)
   2292b:	83 c4 70             	add    $0x70,%esp
   2292e:	5b                   	pop    %ebx
   2292f:	5e                   	pop    %esi
   22930:	5d                   	pop    %ebp
   22931:	c3                   	ret    
   22932:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   22938:	83 c4 70             	add    $0x70,%esp
   2293b:	83 c8 ff             	or     $0xffffffff,%eax
   2293e:	5b                   	pop    %ebx
   2293f:	5e                   	pop    %esi
   22940:	5d                   	pop    %ebp
   22941:	c3                   	ret    
   22942:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   22948:	e8 e3 46 ff ff       	call   17030 <fibril_get_id>
   2294d:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   22951:	89 03                	mov    %eax,(%ebx)
   22953:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   22957:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2295e:	e8 8d 41 ff ff       	call   16af0 <fibril_switch>
   22963:	e9 59 ff ff ff       	jmp    228c1 <async_req_slow+0x101>
   22968:	c7 44 24 08 dc 04 00 	movl   $0x4dc,0x8(%esp)
   2296f:	00 
   22970:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   22977:	00 
   22978:	c7 04 24 e2 e4 02 00 	movl   $0x2e4e2,(%esp)
   2297f:	e8 2c 7f 00 00       	call   2a8b0 <assert_abort>
   22984:	e8 f8 2a 00 00       	call   25481 <amsg_destroy.part.0>
   22989:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   22990:	00 
   22991:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   22998:	00 
   22999:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   229a0:	e8 0b 7f 00 00       	call   2a8b0 <assert_abort>
   229a5:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   229ac:	00 
   229ad:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   229b4:	00 
   229b5:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   229bc:	e8 ef 7e 00 00       	call   2a8b0 <assert_abort>
   229c1:	eb 0d                	jmp    229d0 <async_msg_0>
   229c3:	90                   	nop
   229c4:	90                   	nop
   229c5:	90                   	nop
   229c6:	90                   	nop
   229c7:	90                   	nop
   229c8:	90                   	nop
   229c9:	90                   	nop
   229ca:	90                   	nop
   229cb:	90                   	nop
   229cc:	90                   	nop
   229cd:	90                   	nop
   229ce:	90                   	nop
   229cf:	90                   	nop

000229d0 <async_msg_0>:
   229d0:	55                   	push   %ebp
   229d1:	89 e5                	mov    %esp,%ebp
   229d3:	83 ec 38             	sub    $0x38,%esp
   229d6:	8b 45 08             	mov    0x8(%ebp),%eax
   229d9:	85 c0                	test   %eax,%eax
   229db:	74 4a                	je     22a27 <async_msg_0+0x57>
   229dd:	8b 55 0c             	mov    0xc(%ebp),%edx
   229e0:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   229e7:	00 
   229e8:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   229ef:	00 
   229f0:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   229f7:	00 
   229f8:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   229ff:	00 
   22a00:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   22a07:	00 
   22a08:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   22a0f:	00 
   22a10:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   22a17:	00 
   22a18:	89 54 24 04          	mov    %edx,0x4(%esp)
   22a1c:	8b 40 14             	mov    0x14(%eax),%eax
   22a1f:	89 04 24             	mov    %eax,(%esp)
   22a22:	e8 19 8e 00 00       	call   2b840 <ipc_call_async_fast>
   22a27:	c9                   	leave  
   22a28:	c3                   	ret    
   22a29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022a30 <async_msg_1>:
   22a30:	55                   	push   %ebp
   22a31:	89 e5                	mov    %esp,%ebp
   22a33:	83 ec 38             	sub    $0x38,%esp
   22a36:	8b 45 08             	mov    0x8(%ebp),%eax
   22a39:	85 c0                	test   %eax,%eax
   22a3b:	74 49                	je     22a86 <async_msg_1+0x56>
   22a3d:	8b 55 10             	mov    0x10(%ebp),%edx
   22a40:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   22a47:	00 
   22a48:	89 54 24 08          	mov    %edx,0x8(%esp)
   22a4c:	8b 55 0c             	mov    0xc(%ebp),%edx
   22a4f:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   22a56:	00 
   22a57:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   22a5e:	00 
   22a5f:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   22a66:	00 
   22a67:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   22a6e:	00 
   22a6f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   22a76:	00 
   22a77:	89 54 24 04          	mov    %edx,0x4(%esp)
   22a7b:	8b 40 14             	mov    0x14(%eax),%eax
   22a7e:	89 04 24             	mov    %eax,(%esp)
   22a81:	e8 ba 8d 00 00       	call   2b840 <ipc_call_async_fast>
   22a86:	c9                   	leave  
   22a87:	c3                   	ret    
   22a88:	90                   	nop
   22a89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022a90 <async_msg_2>:
   22a90:	55                   	push   %ebp
   22a91:	89 e5                	mov    %esp,%ebp
   22a93:	83 ec 38             	sub    $0x38,%esp
   22a96:	8b 45 08             	mov    0x8(%ebp),%eax
   22a99:	85 c0                	test   %eax,%eax
   22a9b:	74 48                	je     22ae5 <async_msg_2+0x55>
   22a9d:	8b 55 14             	mov    0x14(%ebp),%edx
   22aa0:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   22aa7:	00 
   22aa8:	89 54 24 0c          	mov    %edx,0xc(%esp)
   22aac:	8b 55 10             	mov    0x10(%ebp),%edx
   22aaf:	89 54 24 08          	mov    %edx,0x8(%esp)
   22ab3:	8b 55 0c             	mov    0xc(%ebp),%edx
   22ab6:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   22abd:	00 
   22abe:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   22ac5:	00 
   22ac6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   22acd:	00 
   22ace:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   22ad5:	00 
   22ad6:	89 54 24 04          	mov    %edx,0x4(%esp)
   22ada:	8b 40 14             	mov    0x14(%eax),%eax
   22add:	89 04 24             	mov    %eax,(%esp)
   22ae0:	e8 5b 8d 00 00       	call   2b840 <ipc_call_async_fast>
   22ae5:	c9                   	leave  
   22ae6:	c3                   	ret    
   22ae7:	89 f6                	mov    %esi,%esi
   22ae9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00022af0 <async_msg_3>:
   22af0:	55                   	push   %ebp
   22af1:	89 e5                	mov    %esp,%ebp
   22af3:	83 ec 38             	sub    $0x38,%esp
   22af6:	8b 45 08             	mov    0x8(%ebp),%eax
   22af9:	85 c0                	test   %eax,%eax
   22afb:	74 47                	je     22b44 <async_msg_3+0x54>
   22afd:	8b 55 18             	mov    0x18(%ebp),%edx
   22b00:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   22b07:	00 
   22b08:	89 54 24 10          	mov    %edx,0x10(%esp)
   22b0c:	8b 55 14             	mov    0x14(%ebp),%edx
   22b0f:	89 54 24 0c          	mov    %edx,0xc(%esp)
   22b13:	8b 55 10             	mov    0x10(%ebp),%edx
   22b16:	89 54 24 08          	mov    %edx,0x8(%esp)
   22b1a:	8b 55 0c             	mov    0xc(%ebp),%edx
   22b1d:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   22b24:	00 
   22b25:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   22b2c:	00 
   22b2d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   22b34:	00 
   22b35:	89 54 24 04          	mov    %edx,0x4(%esp)
   22b39:	8b 40 14             	mov    0x14(%eax),%eax
   22b3c:	89 04 24             	mov    %eax,(%esp)
   22b3f:	e8 fc 8c 00 00       	call   2b840 <ipc_call_async_fast>
   22b44:	c9                   	leave  
   22b45:	c3                   	ret    
   22b46:	8d 76 00             	lea    0x0(%esi),%esi
   22b49:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00022b50 <async_msg_4>:
   22b50:	55                   	push   %ebp
   22b51:	89 e5                	mov    %esp,%ebp
   22b53:	83 ec 38             	sub    $0x38,%esp
   22b56:	8b 45 08             	mov    0x8(%ebp),%eax
   22b59:	85 c0                	test   %eax,%eax
   22b5b:	74 46                	je     22ba3 <async_msg_4+0x53>
   22b5d:	8b 55 1c             	mov    0x1c(%ebp),%edx
   22b60:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   22b67:	00 
   22b68:	89 54 24 14          	mov    %edx,0x14(%esp)
   22b6c:	8b 55 18             	mov    0x18(%ebp),%edx
   22b6f:	89 54 24 10          	mov    %edx,0x10(%esp)
   22b73:	8b 55 14             	mov    0x14(%ebp),%edx
   22b76:	89 54 24 0c          	mov    %edx,0xc(%esp)
   22b7a:	8b 55 10             	mov    0x10(%ebp),%edx
   22b7d:	89 54 24 08          	mov    %edx,0x8(%esp)
   22b81:	8b 55 0c             	mov    0xc(%ebp),%edx
   22b84:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   22b8b:	00 
   22b8c:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   22b93:	00 
   22b94:	89 54 24 04          	mov    %edx,0x4(%esp)
   22b98:	8b 40 14             	mov    0x14(%eax),%eax
   22b9b:	89 04 24             	mov    %eax,(%esp)
   22b9e:	e8 9d 8c 00 00       	call   2b840 <ipc_call_async_fast>
   22ba3:	c9                   	leave  
   22ba4:	c3                   	ret    
   22ba5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   22ba9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00022bb0 <async_msg_5>:
   22bb0:	55                   	push   %ebp
   22bb1:	89 e5                	mov    %esp,%ebp
   22bb3:	83 ec 38             	sub    $0x38,%esp
   22bb6:	8b 45 08             	mov    0x8(%ebp),%eax
   22bb9:	85 c0                	test   %eax,%eax
   22bbb:	74 4d                	je     22c0a <async_msg_5+0x5a>
   22bbd:	8b 55 20             	mov    0x20(%ebp),%edx
   22bc0:	c7 44 24 24 01 00 00 	movl   $0x1,0x24(%esp)
   22bc7:	00 
   22bc8:	89 54 24 18          	mov    %edx,0x18(%esp)
   22bcc:	8b 55 1c             	mov    0x1c(%ebp),%edx
   22bcf:	89 54 24 14          	mov    %edx,0x14(%esp)
   22bd3:	8b 55 18             	mov    0x18(%ebp),%edx
   22bd6:	89 54 24 10          	mov    %edx,0x10(%esp)
   22bda:	8b 55 14             	mov    0x14(%ebp),%edx
   22bdd:	89 54 24 0c          	mov    %edx,0xc(%esp)
   22be1:	8b 55 10             	mov    0x10(%ebp),%edx
   22be4:	89 54 24 08          	mov    %edx,0x8(%esp)
   22be8:	8b 55 0c             	mov    0xc(%ebp),%edx
   22beb:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   22bf2:	00 
   22bf3:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   22bfa:	00 
   22bfb:	89 54 24 04          	mov    %edx,0x4(%esp)
   22bff:	8b 40 14             	mov    0x14(%eax),%eax
   22c02:	89 04 24             	mov    %eax,(%esp)
   22c05:	e8 86 8e 00 00       	call   2ba90 <ipc_call_async_slow>
   22c0a:	c9                   	leave  
   22c0b:	c3                   	ret    
   22c0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00022c10 <async_answer_0>:
   22c10:	55                   	push   %ebp
   22c11:	89 e5                	mov    %esp,%ebp
   22c13:	83 ec 28             	sub    $0x28,%esp
   22c16:	8b 45 0c             	mov    0xc(%ebp),%eax
   22c19:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   22c20:	00 
   22c21:	89 44 24 04          	mov    %eax,0x4(%esp)
   22c25:	8b 45 08             	mov    0x8(%ebp),%eax
   22c28:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   22c2f:	00 
   22c30:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   22c37:	00 
   22c38:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   22c3f:	00 
   22c40:	89 04 24             	mov    %eax,(%esp)
   22c43:	e8 28 90 00 00       	call   2bc70 <ipc_answer_fast>
   22c48:	c9                   	leave  
   22c49:	c3                   	ret    
   22c4a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00022c50 <async_answer_1>:
   22c50:	55                   	push   %ebp
   22c51:	89 e5                	mov    %esp,%ebp
   22c53:	83 ec 28             	sub    $0x28,%esp
   22c56:	8b 45 10             	mov    0x10(%ebp),%eax
   22c59:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   22c60:	00 
   22c61:	89 44 24 08          	mov    %eax,0x8(%esp)
   22c65:	8b 45 0c             	mov    0xc(%ebp),%eax
   22c68:	89 44 24 04          	mov    %eax,0x4(%esp)
   22c6c:	8b 45 08             	mov    0x8(%ebp),%eax
   22c6f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   22c76:	00 
   22c77:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   22c7e:	00 
   22c7f:	89 04 24             	mov    %eax,(%esp)
   22c82:	e8 e9 8f 00 00       	call   2bc70 <ipc_answer_fast>
   22c87:	c9                   	leave  
   22c88:	c3                   	ret    
   22c89:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022c90 <async_answer_2>:
   22c90:	55                   	push   %ebp
   22c91:	89 e5                	mov    %esp,%ebp
   22c93:	83 ec 28             	sub    $0x28,%esp
   22c96:	8b 45 14             	mov    0x14(%ebp),%eax
   22c99:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   22ca0:	00 
   22ca1:	89 44 24 0c          	mov    %eax,0xc(%esp)
   22ca5:	8b 45 10             	mov    0x10(%ebp),%eax
   22ca8:	89 44 24 08          	mov    %eax,0x8(%esp)
   22cac:	8b 45 0c             	mov    0xc(%ebp),%eax
   22caf:	89 44 24 04          	mov    %eax,0x4(%esp)
   22cb3:	8b 45 08             	mov    0x8(%ebp),%eax
   22cb6:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   22cbd:	00 
   22cbe:	89 04 24             	mov    %eax,(%esp)
   22cc1:	e8 aa 8f 00 00       	call   2bc70 <ipc_answer_fast>
   22cc6:	c9                   	leave  
   22cc7:	c3                   	ret    
   22cc8:	90                   	nop
   22cc9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022cd0 <async_answer_3>:
   22cd0:	55                   	push   %ebp
   22cd1:	89 e5                	mov    %esp,%ebp
   22cd3:	83 ec 28             	sub    $0x28,%esp
   22cd6:	8b 45 18             	mov    0x18(%ebp),%eax
   22cd9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   22ce0:	00 
   22ce1:	89 44 24 10          	mov    %eax,0x10(%esp)
   22ce5:	8b 45 14             	mov    0x14(%ebp),%eax
   22ce8:	89 44 24 0c          	mov    %eax,0xc(%esp)
   22cec:	8b 45 10             	mov    0x10(%ebp),%eax
   22cef:	89 44 24 08          	mov    %eax,0x8(%esp)
   22cf3:	8b 45 0c             	mov    0xc(%ebp),%eax
   22cf6:	89 44 24 04          	mov    %eax,0x4(%esp)
   22cfa:	8b 45 08             	mov    0x8(%ebp),%eax
   22cfd:	89 04 24             	mov    %eax,(%esp)
   22d00:	e8 6b 8f 00 00       	call   2bc70 <ipc_answer_fast>
   22d05:	c9                   	leave  
   22d06:	c3                   	ret    
   22d07:	89 f6                	mov    %esi,%esi
   22d09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00022d10 <async_answer_4>:
   22d10:	55                   	push   %ebp
   22d11:	89 e5                	mov    %esp,%ebp
   22d13:	5d                   	pop    %ebp
   22d14:	e9 57 8f 00 00       	jmp    2bc70 <ipc_answer_fast>
   22d19:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022d20 <async_answer_5>:
   22d20:	55                   	push   %ebp
   22d21:	89 e5                	mov    %esp,%ebp
   22d23:	5d                   	pop    %ebp
   22d24:	e9 87 8f 00 00       	jmp    2bcb0 <ipc_answer_slow>
   22d29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022d30 <async_forward_fast>:
   22d30:	55                   	push   %ebp
   22d31:	89 e5                	mov    %esp,%ebp
   22d33:	57                   	push   %edi
   22d34:	56                   	push   %esi
   22d35:	53                   	push   %ebx
   22d36:	8b 45 0c             	mov    0xc(%ebp),%eax
   22d39:	85 c0                	test   %eax,%eax
   22d3b:	74 13                	je     22d50 <async_forward_fast+0x20>
   22d3d:	8b 40 14             	mov    0x14(%eax),%eax
   22d40:	5b                   	pop    %ebx
   22d41:	89 45 0c             	mov    %eax,0xc(%ebp)
   22d44:	5e                   	pop    %esi
   22d45:	5f                   	pop    %edi
   22d46:	5d                   	pop    %ebp
   22d47:	e9 64 93 00 00       	jmp    2c0b0 <ipc_forward_fast>
   22d4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   22d50:	5b                   	pop    %ebx
   22d51:	83 c8 ff             	or     $0xffffffff,%eax
   22d54:	5e                   	pop    %esi
   22d55:	5f                   	pop    %edi
   22d56:	5d                   	pop    %ebp
   22d57:	c3                   	ret    
   22d58:	90                   	nop
   22d59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00022d60 <async_forward_slow>:
   22d60:	55                   	push   %ebp
   22d61:	89 e5                	mov    %esp,%ebp
   22d63:	57                   	push   %edi
   22d64:	56                   	push   %esi
   22d65:	53                   	push   %ebx
   22d66:	83 ec 1c             	sub    $0x1c,%esp
   22d69:	8b 45 08             	mov    0x8(%ebp),%eax
   22d6c:	8b 55 10             	mov    0x10(%ebp),%edx
   22d6f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   22d72:	89 55 e0             	mov    %edx,-0x20(%ebp)
   22d75:	8b 45 0c             	mov    0xc(%ebp),%eax
   22d78:	8b 55 14             	mov    0x14(%ebp),%edx
   22d7b:	89 55 dc             	mov    %edx,-0x24(%ebp)
   22d7e:	85 c0                	test   %eax,%eax
   22d80:	74 16                	je     22d98 <async_forward_slow+0x38>
   22d82:	8b 40 14             	mov    0x14(%eax),%eax
   22d85:	89 45 0c             	mov    %eax,0xc(%ebp)
   22d88:	83 c4 1c             	add    $0x1c,%esp
   22d8b:	5b                   	pop    %ebx
   22d8c:	5e                   	pop    %esi
   22d8d:	5f                   	pop    %edi
   22d8e:	5d                   	pop    %ebp
   22d8f:	e9 5c 93 00 00       	jmp    2c0f0 <ipc_forward_slow>
   22d94:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   22d98:	83 c4 1c             	add    $0x1c,%esp
   22d9b:	83 c8 ff             	or     $0xffffffff,%eax
   22d9e:	5b                   	pop    %ebx
   22d9f:	5e                   	pop    %esi
   22da0:	5f                   	pop    %edi
   22da1:	5d                   	pop    %ebp
   22da2:	c3                   	ret    
   22da3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   22da9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00022db0 <async_connect_to_me>:
   22db0:	55                   	push   %ebp
   22db1:	89 e5                	mov    %esp,%ebp
   22db3:	57                   	push   %edi
   22db4:	56                   	push   %esi
   22db5:	53                   	push   %ebx
   22db6:	83 ec 7c             	sub    $0x7c,%esp
   22db9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   22dbc:	85 db                	test   %ebx,%ebx
   22dbe:	0f 84 1c 02 00 00    	je     22fe0 <async_connect_to_me+0x230>
   22dc4:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   22dcb:	e8 00 d3 ff ff       	call   200d0 <malloc>
   22dd0:	89 c6                	mov    %eax,%esi
   22dd2:	85 c0                	test   %eax,%eax
   22dd4:	0f 84 e6 01 00 00    	je     22fc0 <async_connect_to_me+0x210>
   22dda:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   22dde:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   22de2:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   22de9:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   22df0:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   22df7:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   22dfe:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   22e02:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   22e09:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   22e10:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   22e16:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   22e1a:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   22e1e:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   22e22:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   22e29:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   22e2c:	c6 46 04 01          	movb   $0x1,0x4(%esi)
   22e30:	89 46 30             	mov    %eax,0x30(%esi)
   22e33:	8b 45 14             	mov    0x14(%ebp),%eax
   22e36:	89 44 24 10          	mov    %eax,0x10(%esp)
   22e3a:	8b 45 10             	mov    0x10(%ebp),%eax
   22e3d:	89 44 24 0c          	mov    %eax,0xc(%esp)
   22e41:	8b 45 0c             	mov    0xc(%ebp),%eax
   22e44:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   22e4b:	00 
   22e4c:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   22e53:	00 
   22e54:	89 74 24 18          	mov    %esi,0x18(%esp)
   22e58:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   22e5f:	00 
   22e60:	89 44 24 08          	mov    %eax,0x8(%esp)
   22e64:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)
   22e6b:	00 
   22e6c:	8b 43 14             	mov    0x14(%ebx),%eax
   22e6f:	89 04 24             	mov    %eax,(%esp)
   22e72:	e8 c9 89 00 00       	call   2b840 <ipc_call_async_fast>
   22e77:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   22e7e:	e8 4d 5e ff ff       	call   18cd0 <futex_down>
   22e83:	80 7e 2d 00          	cmpb   $0x0,0x2d(%esi)
   22e87:	0f 85 5b 01 00 00    	jne    22fe8 <async_connect_to_me+0x238>
   22e8d:	80 7e 2e 00          	cmpb   $0x0,0x2e(%esi)
   22e91:	0f 85 72 01 00 00    	jne    23009 <async_connect_to_me+0x259>
   22e97:	80 7e 2c 00          	cmpb   $0x0,0x2c(%esi)
   22e9b:	0f 85 c7 00 00 00    	jne    22f68 <async_connect_to_me+0x1b8>
   22ea1:	e8 8a 41 ff ff       	call   17030 <fibril_get_id>
   22ea6:	c6 46 04 00          	movb   $0x0,0x4(%esi)
   22eaa:	89 06                	mov    %eax,(%esi)
   22eac:	c6 46 08 00          	movb   $0x0,0x8(%esi)
   22eb0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   22eb7:	e8 34 3c ff ff       	call   16af0 <fibril_switch>
   22ebc:	8b 5e 34             	mov    0x34(%esi),%ebx
   22ebf:	80 7e 2e 00          	cmpb   $0x0,0x2e(%esi)
   22ec3:	0f 85 3b 01 00 00    	jne    23004 <async_connect_to_me+0x254>
   22ec9:	c6 46 2e 01          	movb   $0x1,0x2e(%esi)
   22ecd:	89 34 24             	mov    %esi,(%esp)
   22ed0:	e8 0b d3 ff ff       	call   201e0 <free>
   22ed5:	89 d8                	mov    %ebx,%eax
   22ed7:	85 db                	test   %ebx,%ebx
   22ed9:	0f 85 80 00 00 00    	jne    22f5f <async_connect_to_me+0x1af>
   22edf:	8b 75 18             	mov    0x18(%ebp),%esi
   22ee2:	8b 55 d8             	mov    -0x28(%ebp),%edx
   22ee5:	85 f6                	test   %esi,%esi
   22ee7:	0f 84 c8 00 00 00    	je     22fb5 <async_connect_to_me+0x205>
   22eed:	c7 04 24 80 00 00 00 	movl   $0x80,(%esp)
   22ef4:	89 55 b4             	mov    %edx,-0x4c(%ebp)
   22ef7:	8b 75 dc             	mov    -0x24(%ebp),%esi
   22efa:	8b 7d e0             	mov    -0x20(%ebp),%edi
   22efd:	e8 ce d1 ff ff       	call   200d0 <malloc>
   22f02:	8b 55 b4             	mov    -0x4c(%ebp),%edx
   22f05:	89 c3                	mov    %eax,%ebx
   22f07:	85 c0                	test   %eax,%eax
   22f09:	0f 84 a6 00 00 00    	je     22fb5 <async_connect_to_me+0x205>
   22f0f:	89 70 34             	mov    %esi,0x34(%eax)
   22f12:	89 78 38             	mov    %edi,0x38(%eax)
   22f15:	89 50 3c             	mov    %edx,0x3c(%eax)
   22f18:	8d 40 44             	lea    0x44(%eax),%eax
   22f1b:	89 43 44             	mov    %eax,0x44(%ebx)
   22f1e:	89 43 48             	mov    %eax,0x48(%ebx)
   22f21:	8b 45 1c             	mov    0x1c(%ebp),%eax
   22f24:	c7 43 4c 00 00 00 00 	movl   $0x0,0x4c(%ebx)
   22f2b:	89 43 74             	mov    %eax,0x74(%ebx)
   22f2e:	8b 45 18             	mov    0x18(%ebp),%eax
   22f31:	c7 43 78 00 00 00 00 	movl   $0x0,0x78(%ebx)
   22f38:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   22f3c:	89 43 7c             	mov    %eax,0x7c(%ebx)
   22f3f:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   22f43:	c7 04 24 e0 0e 02 00 	movl   $0x20ee0,(%esp)
   22f4a:	e8 91 3e ff ff       	call   16de0 <fibril_create>
   22f4f:	89 03                	mov    %eax,(%ebx)
   22f51:	85 c0                	test   %eax,%eax
   22f53:	75 2b                	jne    22f80 <async_connect_to_me+0x1d0>
   22f55:	89 1c 24             	mov    %ebx,(%esp)
   22f58:	e8 83 d2 ff ff       	call   201e0 <free>
   22f5d:	31 c0                	xor    %eax,%eax
   22f5f:	83 c4 7c             	add    $0x7c,%esp
   22f62:	5b                   	pop    %ebx
   22f63:	5e                   	pop    %esi
   22f64:	5f                   	pop    %edi
   22f65:	5d                   	pop    %ebp
   22f66:	c3                   	ret    
   22f67:	90                   	nop
   22f68:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   22f6f:	e8 bc 5d ff ff       	call   18d30 <futex_up>
   22f74:	e9 43 ff ff ff       	jmp    22ebc <async_connect_to_me+0x10c>
   22f79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   22f80:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   22f87:	e8 44 5d ff ff       	call   18cd0 <futex_down>
   22f8c:	8d 43 2c             	lea    0x2c(%ebx),%eax
   22f8f:	89 44 24 04          	mov    %eax,0x4(%esp)
   22f93:	c7 04 24 f0 06 03 00 	movl   $0x306f0,(%esp)
   22f9a:	e8 b1 31 00 00       	call   26150 <hash_table_insert>
   22f9f:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   22fa6:	e8 85 5d ff ff       	call   18d30 <futex_up>
   22fab:	8b 03                	mov    (%ebx),%eax
   22fad:	89 04 24             	mov    %eax,(%esp)
   22fb0:	e8 6b 3f ff ff       	call   16f20 <fibril_add_ready>
   22fb5:	83 c4 7c             	add    $0x7c,%esp
   22fb8:	31 c0                	xor    %eax,%eax
   22fba:	5b                   	pop    %ebx
   22fbb:	5e                   	pop    %esi
   22fbc:	5f                   	pop    %edi
   22fbd:	5d                   	pop    %ebp
   22fbe:	c3                   	ret    
   22fbf:	90                   	nop
   22fc0:	c7 44 24 08 dc 04 00 	movl   $0x4dc,0x8(%esp)
   22fc7:	00 
   22fc8:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   22fcf:	00 
   22fd0:	c7 04 24 e2 e4 02 00 	movl   $0x2e4e2,(%esp)
   22fd7:	e8 d4 78 00 00       	call   2a8b0 <assert_abort>
   22fdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   22fe0:	83 c8 ff             	or     $0xffffffff,%eax
   22fe3:	e9 77 ff ff ff       	jmp    22f5f <async_connect_to_me+0x1af>
   22fe8:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   22fef:	00 
   22ff0:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   22ff7:	00 
   22ff8:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   22fff:	e8 ac 78 00 00       	call   2a8b0 <assert_abort>
   23004:	e8 78 24 00 00       	call   25481 <amsg_destroy.part.0>
   23009:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   23010:	00 
   23011:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23018:	00 
   23019:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   23020:	e8 8b 78 00 00       	call   2a8b0 <assert_abort>
   23025:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   23029:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00023030 <async_clone_establish>:
   23030:	55                   	push   %ebp
   23031:	89 e5                	mov    %esp,%ebp
   23033:	57                   	push   %edi
   23034:	56                   	push   %esi
   23035:	53                   	push   %ebx
   23036:	83 ec 6c             	sub    $0x6c,%esp
   23039:	8b 7d 0c             	mov    0xc(%ebp),%edi
   2303c:	85 ff                	test   %edi,%edi
   2303e:	0f 84 c4 01 00 00    	je     23208 <async_clone_establish+0x1d8>
   23044:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)
   2304b:	e8 80 d0 ff ff       	call   200d0 <malloc>
   23050:	89 c6                	mov    %eax,%esi
   23052:	85 c0                	test   %eax,%eax
   23054:	0f 84 be 01 00 00    	je     23218 <async_clone_establish+0x1e8>
   2305a:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   23061:	e8 6a d0 ff ff       	call   200d0 <malloc>
   23066:	89 c3                	mov    %eax,%ebx
   23068:	85 c0                	test   %eax,%eax
   2306a:	0f 84 80 01 00 00    	je     231f0 <async_clone_establish+0x1c0>
   23070:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   23074:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   23078:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   2307f:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   23086:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   2308d:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   23094:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   23098:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   2309f:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   230a6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   230ac:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   230b0:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   230b4:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   230b8:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   230bf:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   230c2:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   230c6:	89 43 30             	mov    %eax,0x30(%ebx)
   230c9:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   230d0:	00 
   230d1:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   230d8:	00 
   230d9:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   230dd:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   230e4:	00 
   230e5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   230ec:	00 
   230ed:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   230f4:	00 
   230f5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   230fc:	00 
   230fd:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)
   23104:	00 
   23105:	8b 47 14             	mov    0x14(%edi),%eax
   23108:	89 04 24             	mov    %eax,(%esp)
   2310b:	e8 30 87 00 00       	call   2b840 <ipc_call_async_fast>
   23110:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   23117:	e8 b4 5b ff ff       	call   18cd0 <futex_down>
   2311c:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   23120:	0f 85 51 01 00 00    	jne    23277 <async_clone_establish+0x247>
   23126:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   2312a:	0f 85 2b 01 00 00    	jne    2325b <async_clone_establish+0x22b>
   23130:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   23134:	0f 85 9e 00 00 00    	jne    231d8 <async_clone_establish+0x1a8>
   2313a:	e8 f1 3e ff ff       	call   17030 <fibril_get_id>
   2313f:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   23143:	89 03                	mov    %eax,(%ebx)
   23145:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   23149:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   23150:	e8 9b 39 ff ff       	call   16af0 <fibril_switch>
   23155:	8b 7b 34             	mov    0x34(%ebx),%edi
   23158:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   2315c:	0f 85 f4 00 00 00    	jne    23256 <async_clone_establish+0x226>
   23162:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   23166:	89 1c 24             	mov    %ebx,(%esp)
   23169:	e8 72 d0 ff ff       	call   201e0 <free>
   2316e:	85 ff                	test   %edi,%edi
   23170:	0f 85 b2 00 00 00    	jne    23228 <async_clone_establish+0x1f8>
   23176:	8b 5d d8             	mov    -0x28(%ebp),%ebx
   23179:	85 db                	test   %ebx,%ebx
   2317b:	0f 88 bf 00 00 00    	js     23240 <async_clone_establish+0x210>
   23181:	8b 45 08             	mov    0x8(%ebp),%eax
   23184:	89 5e 0c             	mov    %ebx,0xc(%esi)
   23187:	89 46 08             	mov    %eax,0x8(%esi)
   2318a:	8d 46 30             	lea    0x30(%esi),%eax
   2318d:	c7 46 10 00 00 00 00 	movl   $0x0,0x10(%esi)
   23194:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)
   2319b:	c7 46 18 00 00 00 00 	movl   $0x0,0x18(%esi)
   231a2:	89 04 24             	mov    %eax,(%esp)
   231a5:	e8 f6 40 ff ff       	call   172a0 <fibril_mutex_initialize>
   231aa:	8d 46 1c             	lea    0x1c(%esi),%eax
   231ad:	c7 46 40 00 00 00 00 	movl   $0x0,0x40(%esi)
   231b4:	89 36                	mov    %esi,(%esi)
   231b6:	89 76 04             	mov    %esi,0x4(%esi)
   231b9:	89 04 24             	mov    %eax,(%esp)
   231bc:	e8 df 40 ff ff       	call   172a0 <fibril_mutex_initialize>
   231c1:	c7 46 2c 00 00 00 00 	movl   $0x0,0x2c(%esi)
   231c8:	83 c4 6c             	add    $0x6c,%esp
   231cb:	89 f0                	mov    %esi,%eax
   231cd:	5b                   	pop    %ebx
   231ce:	5e                   	pop    %esi
   231cf:	5f                   	pop    %edi
   231d0:	5d                   	pop    %ebp
   231d1:	c3                   	ret    
   231d2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   231d8:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   231df:	e8 4c 5b ff ff       	call   18d30 <futex_up>
   231e4:	e9 6c ff ff ff       	jmp    23155 <async_clone_establish+0x125>
   231e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   231f0:	89 34 24             	mov    %esi,(%esp)
   231f3:	31 f6                	xor    %esi,%esi
   231f5:	e8 e6 cf ff ff       	call   201e0 <free>
   231fa:	e8 e1 d4 fe ff       	call   106e0 <__errno>
   231ff:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   23205:	eb c1                	jmp    231c8 <async_clone_establish+0x198>
   23207:	90                   	nop
   23208:	e8 d3 d4 fe ff       	call   106e0 <__errno>
   2320d:	31 f6                	xor    %esi,%esi
   2320f:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%eax)
   23215:	eb b1                	jmp    231c8 <async_clone_establish+0x198>
   23217:	90                   	nop
   23218:	e8 c3 d4 fe ff       	call   106e0 <__errno>
   2321d:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   23223:	eb a3                	jmp    231c8 <async_clone_establish+0x198>
   23225:	8d 76 00             	lea    0x0(%esi),%esi
   23228:	e8 b3 d4 fe ff       	call   106e0 <__errno>
   2322d:	89 38                	mov    %edi,(%eax)
   2322f:	89 34 24             	mov    %esi,(%esp)
   23232:	e8 a9 cf ff ff       	call   201e0 <free>
   23237:	31 f6                	xor    %esi,%esi
   23239:	eb 8d                	jmp    231c8 <async_clone_establish+0x198>
   2323b:	90                   	nop
   2323c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   23240:	e8 9b d4 fe ff       	call   106e0 <__errno>
   23245:	89 18                	mov    %ebx,(%eax)
   23247:	89 34 24             	mov    %esi,(%esp)
   2324a:	e8 91 cf ff ff       	call   201e0 <free>
   2324f:	31 f6                	xor    %esi,%esi
   23251:	e9 72 ff ff ff       	jmp    231c8 <async_clone_establish+0x198>
   23256:	e8 26 22 00 00       	call   25481 <amsg_destroy.part.0>
   2325b:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   23262:	00 
   23263:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2326a:	00 
   2326b:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   23272:	e8 39 76 00 00       	call   2a8b0 <assert_abort>
   23277:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   2327e:	00 
   2327f:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23286:	00 
   23287:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   2328e:	e8 1d 76 00 00       	call   2a8b0 <assert_abort>
   23293:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   23299:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000232a0 <async_connect_me_to>:
   232a0:	55                   	push   %ebp
   232a1:	89 e5                	mov    %esp,%ebp
   232a3:	57                   	push   %edi
   232a4:	56                   	push   %esi
   232a5:	53                   	push   %ebx
   232a6:	83 ec 1c             	sub    $0x1c,%esp
   232a9:	8b 75 0c             	mov    0xc(%ebp),%esi
   232ac:	8b 7d 18             	mov    0x18(%ebp),%edi
   232af:	85 f6                	test   %esi,%esi
   232b1:	74 7d                	je     23330 <async_connect_me_to+0x90>
   232b3:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)
   232ba:	e8 11 ce ff ff       	call   200d0 <malloc>
   232bf:	89 c3                	mov    %eax,%ebx
   232c1:	85 c0                	test   %eax,%eax
   232c3:	74 7b                	je     23340 <async_connect_me_to+0xa0>
   232c5:	8b 46 14             	mov    0x14(%esi),%eax
   232c8:	8b 4d 14             	mov    0x14(%ebp),%ecx
   232cb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   232d2:	00 
   232d3:	89 3c 24             	mov    %edi,(%esp)
   232d6:	8b 55 10             	mov    0x10(%ebp),%edx
   232d9:	e8 92 de ff ff       	call   21170 <async_connect_me_to_internal>
   232de:	89 c6                	mov    %eax,%esi
   232e0:	85 c0                	test   %eax,%eax
   232e2:	78 6c                	js     23350 <async_connect_me_to+0xb0>
   232e4:	8b 45 08             	mov    0x8(%ebp),%eax
   232e7:	89 73 0c             	mov    %esi,0xc(%ebx)
   232ea:	89 43 08             	mov    %eax,0x8(%ebx)
   232ed:	8b 45 10             	mov    0x10(%ebp),%eax
   232f0:	89 43 10             	mov    %eax,0x10(%ebx)
   232f3:	8b 45 14             	mov    0x14(%ebp),%eax
   232f6:	89 43 14             	mov    %eax,0x14(%ebx)
   232f9:	8d 43 30             	lea    0x30(%ebx),%eax
   232fc:	89 7b 18             	mov    %edi,0x18(%ebx)
   232ff:	89 04 24             	mov    %eax,(%esp)
   23302:	e8 99 3f ff ff       	call   172a0 <fibril_mutex_initialize>
   23307:	8d 43 1c             	lea    0x1c(%ebx),%eax
   2330a:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%ebx)
   23311:	89 1b                	mov    %ebx,(%ebx)
   23313:	89 5b 04             	mov    %ebx,0x4(%ebx)
   23316:	89 04 24             	mov    %eax,(%esp)
   23319:	e8 82 3f ff ff       	call   172a0 <fibril_mutex_initialize>
   2331e:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   23325:	83 c4 1c             	add    $0x1c,%esp
   23328:	89 d8                	mov    %ebx,%eax
   2332a:	5b                   	pop    %ebx
   2332b:	5e                   	pop    %esi
   2332c:	5f                   	pop    %edi
   2332d:	5d                   	pop    %ebp
   2332e:	c3                   	ret    
   2332f:	90                   	nop
   23330:	e8 ab d3 fe ff       	call   106e0 <__errno>
   23335:	31 db                	xor    %ebx,%ebx
   23337:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%eax)
   2333d:	eb e6                	jmp    23325 <async_connect_me_to+0x85>
   2333f:	90                   	nop
   23340:	e8 9b d3 fe ff       	call   106e0 <__errno>
   23345:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   2334b:	eb d8                	jmp    23325 <async_connect_me_to+0x85>
   2334d:	8d 76 00             	lea    0x0(%esi),%esi
   23350:	e8 8b d3 fe ff       	call   106e0 <__errno>
   23355:	89 30                	mov    %esi,(%eax)
   23357:	89 1c 24             	mov    %ebx,(%esp)
   2335a:	e8 81 ce ff ff       	call   201e0 <free>
   2335f:	31 db                	xor    %ebx,%ebx
   23361:	eb c2                	jmp    23325 <async_connect_me_to+0x85>
   23363:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   23369:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00023370 <async_sess_args_set>:
   23370:	55                   	push   %ebp
   23371:	89 e5                	mov    %esp,%ebp
   23373:	8b 45 08             	mov    0x8(%ebp),%eax
   23376:	8b 55 0c             	mov    0xc(%ebp),%edx
   23379:	89 50 10             	mov    %edx,0x10(%eax)
   2337c:	8b 55 10             	mov    0x10(%ebp),%edx
   2337f:	89 50 14             	mov    %edx,0x14(%eax)
   23382:	8b 55 14             	mov    0x14(%ebp),%edx
   23385:	89 50 18             	mov    %edx,0x18(%eax)
   23388:	5d                   	pop    %ebp
   23389:	c3                   	ret    
   2338a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00023390 <async_connect_me_to_blocking>:
   23390:	55                   	push   %ebp
   23391:	89 e5                	mov    %esp,%ebp
   23393:	57                   	push   %edi
   23394:	56                   	push   %esi
   23395:	53                   	push   %ebx
   23396:	83 ec 1c             	sub    $0x1c,%esp
   23399:	8b 75 0c             	mov    0xc(%ebp),%esi
   2339c:	8b 7d 18             	mov    0x18(%ebp),%edi
   2339f:	85 f6                	test   %esi,%esi
   233a1:	74 7d                	je     23420 <async_connect_me_to_blocking+0x90>
   233a3:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)
   233aa:	e8 21 cd ff ff       	call   200d0 <malloc>
   233af:	89 c3                	mov    %eax,%ebx
   233b1:	85 c0                	test   %eax,%eax
   233b3:	74 7b                	je     23430 <async_connect_me_to_blocking+0xa0>
   233b5:	8b 46 14             	mov    0x14(%esi),%eax
   233b8:	8b 4d 14             	mov    0x14(%ebp),%ecx
   233bb:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   233c2:	00 
   233c3:	89 3c 24             	mov    %edi,(%esp)
   233c6:	8b 55 10             	mov    0x10(%ebp),%edx
   233c9:	e8 a2 dd ff ff       	call   21170 <async_connect_me_to_internal>
   233ce:	89 c6                	mov    %eax,%esi
   233d0:	85 c0                	test   %eax,%eax
   233d2:	78 6c                	js     23440 <async_connect_me_to_blocking+0xb0>
   233d4:	8b 45 08             	mov    0x8(%ebp),%eax
   233d7:	89 73 0c             	mov    %esi,0xc(%ebx)
   233da:	89 43 08             	mov    %eax,0x8(%ebx)
   233dd:	8b 45 10             	mov    0x10(%ebp),%eax
   233e0:	89 43 10             	mov    %eax,0x10(%ebx)
   233e3:	8b 45 14             	mov    0x14(%ebp),%eax
   233e6:	89 43 14             	mov    %eax,0x14(%ebx)
   233e9:	8d 43 30             	lea    0x30(%ebx),%eax
   233ec:	89 7b 18             	mov    %edi,0x18(%ebx)
   233ef:	89 04 24             	mov    %eax,(%esp)
   233f2:	e8 a9 3e ff ff       	call   172a0 <fibril_mutex_initialize>
   233f7:	8d 43 1c             	lea    0x1c(%ebx),%eax
   233fa:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%ebx)
   23401:	89 1b                	mov    %ebx,(%ebx)
   23403:	89 5b 04             	mov    %ebx,0x4(%ebx)
   23406:	89 04 24             	mov    %eax,(%esp)
   23409:	e8 92 3e ff ff       	call   172a0 <fibril_mutex_initialize>
   2340e:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   23415:	83 c4 1c             	add    $0x1c,%esp
   23418:	89 d8                	mov    %ebx,%eax
   2341a:	5b                   	pop    %ebx
   2341b:	5e                   	pop    %esi
   2341c:	5f                   	pop    %edi
   2341d:	5d                   	pop    %ebp
   2341e:	c3                   	ret    
   2341f:	90                   	nop
   23420:	e8 bb d2 fe ff       	call   106e0 <__errno>
   23425:	31 db                	xor    %ebx,%ebx
   23427:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%eax)
   2342d:	eb e6                	jmp    23415 <async_connect_me_to_blocking+0x85>
   2342f:	90                   	nop
   23430:	e8 ab d2 fe ff       	call   106e0 <__errno>
   23435:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   2343b:	eb d8                	jmp    23415 <async_connect_me_to_blocking+0x85>
   2343d:	8d 76 00             	lea    0x0(%esi),%esi
   23440:	e8 9b d2 fe ff       	call   106e0 <__errno>
   23445:	89 30                	mov    %esi,(%eax)
   23447:	89 1c 24             	mov    %ebx,(%esp)
   2344a:	e8 91 cd ff ff       	call   201e0 <free>
   2344f:	31 db                	xor    %ebx,%ebx
   23451:	eb c2                	jmp    23415 <async_connect_me_to_blocking+0x85>
   23453:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   23459:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00023460 <async_connect_kbox>:
   23460:	55                   	push   %ebp
   23461:	89 e5                	mov    %esp,%ebp
   23463:	57                   	push   %edi
   23464:	56                   	push   %esi
   23465:	53                   	push   %ebx
   23466:	83 ec 1c             	sub    $0x1c,%esp
   23469:	8b 75 08             	mov    0x8(%ebp),%esi
   2346c:	8b 7d 0c             	mov    0xc(%ebp),%edi
   2346f:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)
   23476:	e8 55 cc ff ff       	call   200d0 <malloc>
   2347b:	89 c3                	mov    %eax,%ebx
   2347d:	85 c0                	test   %eax,%eax
   2347f:	74 67                	je     234e8 <async_connect_kbox+0x88>
   23481:	89 34 24             	mov    %esi,(%esp)
   23484:	89 7c 24 04          	mov    %edi,0x4(%esp)
   23488:	e8 d3 8c 00 00       	call   2c160 <ipc_connect_kbox>
   2348d:	89 c6                	mov    %eax,%esi
   2348f:	85 c0                	test   %eax,%eax
   23491:	78 65                	js     234f8 <async_connect_kbox+0x98>
   23493:	89 43 0c             	mov    %eax,0xc(%ebx)
   23496:	8d 43 30             	lea    0x30(%ebx),%eax
   23499:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
   234a0:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
   234a7:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)
   234ae:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
   234b5:	89 04 24             	mov    %eax,(%esp)
   234b8:	e8 e3 3d ff ff       	call   172a0 <fibril_mutex_initialize>
   234bd:	8d 43 1c             	lea    0x1c(%ebx),%eax
   234c0:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%ebx)
   234c7:	89 1b                	mov    %ebx,(%ebx)
   234c9:	89 5b 04             	mov    %ebx,0x4(%ebx)
   234cc:	89 04 24             	mov    %eax,(%esp)
   234cf:	e8 cc 3d ff ff       	call   172a0 <fibril_mutex_initialize>
   234d4:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   234db:	83 c4 1c             	add    $0x1c,%esp
   234de:	89 d8                	mov    %ebx,%eax
   234e0:	5b                   	pop    %ebx
   234e1:	5e                   	pop    %esi
   234e2:	5f                   	pop    %edi
   234e3:	5d                   	pop    %ebp
   234e4:	c3                   	ret    
   234e5:	8d 76 00             	lea    0x0(%esi),%esi
   234e8:	e8 f3 d1 fe ff       	call   106e0 <__errno>
   234ed:	c7 00 fe ff ff ff    	movl   $0xfffffffe,(%eax)
   234f3:	eb e6                	jmp    234db <async_connect_kbox+0x7b>
   234f5:	8d 76 00             	lea    0x0(%esi),%esi
   234f8:	e8 e3 d1 fe ff       	call   106e0 <__errno>
   234fd:	89 30                	mov    %esi,(%eax)
   234ff:	89 1c 24             	mov    %ebx,(%esp)
   23502:	e8 d9 cc ff ff       	call   201e0 <free>
   23507:	31 db                	xor    %ebx,%ebx
   23509:	eb d0                	jmp    234db <async_connect_kbox+0x7b>
   2350b:	90                   	nop
   2350c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00023510 <async_hangup>:
   23510:	55                   	push   %ebp
   23511:	89 e5                	mov    %esp,%ebp
   23513:	57                   	push   %edi
   23514:	56                   	push   %esi
   23515:	53                   	push   %ebx
   23516:	83 ec 1c             	sub    $0x1c,%esp
   23519:	8b 75 08             	mov    0x8(%ebp),%esi
   2351c:	85 f6                	test   %esi,%esi
   2351e:	0f 84 b3 00 00 00    	je     235d7 <async_hangup+0xc7>
   23524:	8b 46 2c             	mov    0x2c(%esi),%eax
   23527:	85 c0                	test   %eax,%eax
   23529:	0f 85 a1 00 00 00    	jne    235d0 <async_hangup+0xc0>
   2352f:	c7 04 24 10 06 03 00 	movl   $0x30610,(%esp)
   23536:	e8 85 3d ff ff       	call   172c0 <fibril_mutex_lock>
   2353b:	8b 46 0c             	mov    0xc(%esi),%eax
   2353e:	89 04 24             	mov    %eax,(%esp)
   23541:	e8 1a 8b 00 00       	call   2c060 <ipc_hangup>
   23546:	8b 5e 04             	mov    0x4(%esi),%ebx
   23549:	89 c7                	mov    %eax,%edi
   2354b:	39 f3                	cmp    %esi,%ebx
   2354d:	74 60                	je     235af <async_hangup+0x9f>
   2354f:	90                   	nop
   23550:	8b 13                	mov    (%ebx),%edx
   23552:	85 d2                	test   %edx,%edx
   23554:	74 0e                	je     23564 <async_hangup+0x54>
   23556:	8b 43 04             	mov    0x4(%ebx),%eax
   23559:	85 c0                	test   %eax,%eax
   2355b:	74 07                	je     23564 <async_hangup+0x54>
   2355d:	89 10                	mov    %edx,(%eax)
   2355f:	8b 13                	mov    (%ebx),%edx
   23561:	89 42 04             	mov    %eax,0x4(%edx)
   23564:	8b 53 08             	mov    0x8(%ebx),%edx
   23567:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   2356d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   23574:	85 d2                	test   %edx,%edx
   23576:	74 0f                	je     23587 <async_hangup+0x77>
   23578:	8b 43 0c             	mov    0xc(%ebx),%eax
   2357b:	85 c0                	test   %eax,%eax
   2357d:	74 08                	je     23587 <async_hangup+0x77>
   2357f:	89 10                	mov    %edx,(%eax)
   23581:	8b 53 08             	mov    0x8(%ebx),%edx
   23584:	89 42 04             	mov    %eax,0x4(%edx)
   23587:	8b 43 14             	mov    0x14(%ebx),%eax
   2358a:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
   23591:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
   23598:	89 04 24             	mov    %eax,(%esp)
   2359b:	e8 c0 8a 00 00       	call   2c060 <ipc_hangup>
   235a0:	89 1c 24             	mov    %ebx,(%esp)
   235a3:	e8 38 cc ff ff       	call   201e0 <free>
   235a8:	8b 5e 04             	mov    0x4(%esi),%ebx
   235ab:	39 f3                	cmp    %esi,%ebx
   235ad:	75 a1                	jne    23550 <async_hangup+0x40>
   235af:	89 34 24             	mov    %esi,(%esp)
   235b2:	e8 29 cc ff ff       	call   201e0 <free>
   235b7:	c7 04 24 10 06 03 00 	movl   $0x30610,(%esp)
   235be:	e8 1d 3e ff ff       	call   173e0 <fibril_mutex_unlock>
   235c3:	83 c4 1c             	add    $0x1c,%esp
   235c6:	89 f8                	mov    %edi,%eax
   235c8:	5b                   	pop    %ebx
   235c9:	5e                   	pop    %esi
   235ca:	5f                   	pop    %edi
   235cb:	5d                   	pop    %ebp
   235cc:	c3                   	ret    
   235cd:	8d 76 00             	lea    0x0(%esi),%esi
   235d0:	bf f1 ff ff ff       	mov    $0xfffffff1,%edi
   235d5:	eb ec                	jmp    235c3 <async_hangup+0xb3>
   235d7:	c7 44 24 08 7f 07 00 	movl   $0x77f,0x8(%esp)
   235de:	00 
   235df:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   235e6:	00 
   235e7:	c7 04 24 ed e4 02 00 	movl   $0x2e4ed,(%esp)
   235ee:	e8 bd 72 00 00       	call   2a8b0 <assert_abort>
   235f3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   235f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00023600 <async_poke>:
   23600:	55                   	push   %ebp
   23601:	89 e5                	mov    %esp,%ebp
   23603:	5d                   	pop    %ebp
   23604:	e9 17 88 00 00       	jmp    2be20 <ipc_poke>
   23609:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00023610 <async_exchange_begin>:
   23610:	55                   	push   %ebp
   23611:	89 e5                	mov    %esp,%ebp
   23613:	57                   	push   %edi
   23614:	56                   	push   %esi
   23615:	53                   	push   %ebx
   23616:	83 ec 7c             	sub    $0x7c,%esp
   23619:	8b 75 08             	mov    0x8(%ebp),%esi
   2361c:	85 f6                	test   %esi,%esi
   2361e:	0f 84 d9 02 00 00    	je     238fd <async_exchange_begin+0x2ed>
   23624:	c7 04 24 10 06 03 00 	movl   $0x30610,(%esp)
   2362b:	e8 90 3c ff ff       	call   172c0 <fibril_mutex_lock>
   23630:	8b 46 04             	mov    0x4(%esi),%eax
   23633:	39 f0                	cmp    %esi,%eax
   23635:	74 71                	je     236a8 <async_exchange_begin+0x98>
   23637:	8b 08                	mov    (%eax),%ecx
   23639:	85 c9                	test   %ecx,%ecx
   2363b:	74 0e                	je     2364b <async_exchange_begin+0x3b>
   2363d:	8b 50 04             	mov    0x4(%eax),%edx
   23640:	85 d2                	test   %edx,%edx
   23642:	74 07                	je     2364b <async_exchange_begin+0x3b>
   23644:	89 0a                	mov    %ecx,(%edx)
   23646:	8b 08                	mov    (%eax),%ecx
   23648:	89 51 04             	mov    %edx,0x4(%ecx)
   2364b:	8b 48 08             	mov    0x8(%eax),%ecx
   2364e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   23654:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   2365b:	85 c9                	test   %ecx,%ecx
   2365d:	74 0f                	je     2366e <async_exchange_begin+0x5e>
   2365f:	8b 50 0c             	mov    0xc(%eax),%edx
   23662:	85 d2                	test   %edx,%edx
   23664:	74 08                	je     2366e <async_exchange_begin+0x5e>
   23666:	89 0a                	mov    %ecx,(%edx)
   23668:	8b 48 08             	mov    0x8(%eax),%ecx
   2366b:	89 51 04             	mov    %edx,0x4(%ecx)
   2366e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
   23675:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   2367c:	c7 04 24 10 06 03 00 	movl   $0x30610,(%esp)
   23683:	89 45 a8             	mov    %eax,-0x58(%ebp)
   23686:	e8 55 3d ff ff       	call   173e0 <fibril_mutex_unlock>
   2368b:	f0 ff 46 2c          	lock incl 0x2c(%esi)
   2368f:	83 7e 08 02          	cmpl   $0x2,0x8(%esi)
   23693:	8b 45 a8             	mov    -0x58(%ebp),%eax
   23696:	0f 84 dc 01 00 00    	je     23878 <async_exchange_begin+0x268>
   2369c:	83 c4 7c             	add    $0x7c,%esp
   2369f:	5b                   	pop    %ebx
   236a0:	5e                   	pop    %esi
   236a1:	5f                   	pop    %edi
   236a2:	5d                   	pop    %ebp
   236a3:	c3                   	ret    
   236a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   236a8:	f7 40 08 fd ff ff ff 	testl  $0xfffffffd,0x8(%eax)
   236af:	0f 85 ad 00 00 00    	jne    23762 <async_exchange_begin+0x152>
   236b5:	e9 4a 02 00 00       	jmp    23904 <async_exchange_begin+0x2f4>
   236ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   236c0:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   236c7:	e8 64 56 ff ff       	call   18d30 <futex_up>
   236cc:	8b 5f 34             	mov    0x34(%edi),%ebx
   236cf:	80 7f 2e 00          	cmpb   $0x0,0x2e(%edi)
   236d3:	0f 85 64 02 00 00    	jne    2393d <async_exchange_begin+0x32d>
   236d9:	89 3c 24             	mov    %edi,(%esp)
   236dc:	c6 47 2e 01          	movb   $0x1,0x2e(%edi)
   236e0:	e8 fb ca ff ff       	call   201e0 <free>
   236e5:	85 db                	test   %ebx,%ebx
   236e7:	75 03                	jne    236ec <async_exchange_begin+0xdc>
   236e9:	8b 5d d8             	mov    -0x28(%ebp),%ebx
   236ec:	85 db                	test   %ebx,%ebx
   236ee:	0f 89 a4 01 00 00    	jns    23898 <async_exchange_begin+0x288>
   236f4:	a1 24 06 03 00       	mov    0x30624,%eax
   236f9:	3d 20 06 03 00       	cmp    $0x30620,%eax
   236fe:	0f 84 cc 01 00 00    	je     238d0 <async_exchange_begin+0x2c0>
   23704:	8b 48 f8             	mov    -0x8(%eax),%ecx
   23707:	8d 58 f8             	lea    -0x8(%eax),%ebx
   2370a:	85 c9                	test   %ecx,%ecx
   2370c:	74 0f                	je     2371d <async_exchange_begin+0x10d>
   2370e:	8b 53 04             	mov    0x4(%ebx),%edx
   23711:	85 d2                	test   %edx,%edx
   23713:	74 08                	je     2371d <async_exchange_begin+0x10d>
   23715:	89 0a                	mov    %ecx,(%edx)
   23717:	8b 48 f8             	mov    -0x8(%eax),%ecx
   2371a:	89 51 04             	mov    %edx,0x4(%ecx)
   2371d:	c7 40 f8 00 00 00 00 	movl   $0x0,-0x8(%eax)
   23724:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   2372b:	8b 53 08             	mov    0x8(%ebx),%edx
   2372e:	85 d2                	test   %edx,%edx
   23730:	74 0f                	je     23741 <async_exchange_begin+0x131>
   23732:	8b 43 0c             	mov    0xc(%ebx),%eax
   23735:	85 c0                	test   %eax,%eax
   23737:	74 08                	je     23741 <async_exchange_begin+0x131>
   23739:	89 10                	mov    %edx,(%eax)
   2373b:	8b 53 08             	mov    0x8(%ebx),%edx
   2373e:	89 42 04             	mov    %eax,0x4(%edx)
   23741:	8b 43 14             	mov    0x14(%ebx),%eax
   23744:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
   2374b:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
   23752:	89 04 24             	mov    %eax,(%esp)
   23755:	e8 06 89 00 00       	call   2c060 <ipc_hangup>
   2375a:	89 1c 24             	mov    %ebx,(%esp)
   2375d:	e8 7e ca ff ff       	call   201e0 <free>
   23762:	8b 46 18             	mov    0x18(%esi),%eax
   23765:	8b 5e 14             	mov    0x14(%esi),%ebx
   23768:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   2376b:	8b 46 10             	mov    0x10(%esi),%eax
   2376e:	89 45 b0             	mov    %eax,-0x50(%ebp)
   23771:	8b 46 0c             	mov    0xc(%esi),%eax
   23774:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   2377b:	89 45 ac             	mov    %eax,-0x54(%ebp)
   2377e:	e8 4d c9 ff ff       	call   200d0 <malloc>
   23783:	89 c7                	mov    %eax,%edi
   23785:	85 c0                	test   %eax,%eax
   23787:	0f 84 67 ff ff ff    	je     236f4 <async_exchange_begin+0xe4>
   2378d:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   23791:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   23795:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   2379c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   237a3:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   237aa:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   237b1:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   237b5:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   237bc:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   237c3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   237c9:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   237cd:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   237d1:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   237d5:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   237dc:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   237df:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   237e6:	00 
   237e7:	89 47 30             	mov    %eax,0x30(%edi)
   237ea:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   237ed:	89 44 24 10          	mov    %eax,0x10(%esp)
   237f1:	8b 45 b0             	mov    -0x50(%ebp),%eax
   237f4:	89 44 24 08          	mov    %eax,0x8(%esp)
   237f8:	8b 45 ac             	mov    -0x54(%ebp),%eax
   237fb:	89 04 24             	mov    %eax,(%esp)
   237fe:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   23805:	00 
   23806:	89 7c 24 18          	mov    %edi,0x18(%esp)
   2380a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   23811:	00 
   23812:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
   23816:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
   2381d:	00 
   2381e:	c6 47 04 01          	movb   $0x1,0x4(%edi)
   23822:	e8 19 80 00 00       	call   2b840 <ipc_call_async_fast>
   23827:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2382e:	e8 9d 54 ff ff       	call   18cd0 <futex_down>
   23833:	80 7f 2d 00          	cmpb   $0x0,0x2d(%edi)
   23837:	0f 85 21 01 00 00    	jne    2395e <async_exchange_begin+0x34e>
   2383d:	80 7f 2e 00          	cmpb   $0x0,0x2e(%edi)
   23841:	0f 85 fb 00 00 00    	jne    23942 <async_exchange_begin+0x332>
   23847:	80 7f 2c 00          	cmpb   $0x0,0x2c(%edi)
   2384b:	0f 85 6f fe ff ff    	jne    236c0 <async_exchange_begin+0xb0>
   23851:	e8 da 37 ff ff       	call   17030 <fibril_get_id>
   23856:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2385d:	89 07                	mov    %eax,(%edi)
   2385f:	c6 47 04 00          	movb   $0x0,0x4(%edi)
   23863:	c6 47 08 00          	movb   $0x0,0x8(%edi)
   23867:	e8 84 32 ff ff       	call   16af0 <fibril_switch>
   2386c:	e9 5b fe ff ff       	jmp    236cc <async_exchange_begin+0xbc>
   23871:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   23878:	8d 56 1c             	lea    0x1c(%esi),%edx
   2387b:	89 45 a8             	mov    %eax,-0x58(%ebp)
   2387e:	89 14 24             	mov    %edx,(%esp)
   23881:	e8 3a 3a ff ff       	call   172c0 <fibril_mutex_lock>
   23886:	8b 45 a8             	mov    -0x58(%ebp),%eax
   23889:	83 c4 7c             	add    $0x7c,%esp
   2388c:	5b                   	pop    %ebx
   2388d:	5e                   	pop    %esi
   2388e:	5f                   	pop    %edi
   2388f:	5d                   	pop    %ebp
   23890:	c3                   	ret    
   23891:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   23898:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
   2389f:	e8 2c c8 ff ff       	call   200d0 <malloc>
   238a4:	85 c0                	test   %eax,%eax
   238a6:	74 41                	je     238e9 <async_exchange_begin+0x2d9>
   238a8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   238ae:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   238b5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
   238bc:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   238c3:	89 70 10             	mov    %esi,0x10(%eax)
   238c6:	89 58 14             	mov    %ebx,0x14(%eax)
   238c9:	e9 ae fd ff ff       	jmp    2367c <async_exchange_begin+0x6c>
   238ce:	66 90                	xchg   %ax,%ax
   238d0:	c7 44 24 04 10 06 03 	movl   $0x30610,0x4(%esp)
   238d7:	00 
   238d8:	c7 04 24 28 06 03 00 	movl   $0x30628,(%esp)
   238df:	e8 2c 46 ff ff       	call   17f10 <fibril_condvar_wait>
   238e4:	e9 79 fe ff ff       	jmp    23762 <async_exchange_begin+0x152>
   238e9:	89 1c 24             	mov    %ebx,(%esp)
   238ec:	e8 6f 87 00 00       	call   2c060 <ipc_hangup>
   238f1:	c7 04 24 10 06 03 00 	movl   $0x30610,(%esp)
   238f8:	e8 e3 3a ff ff       	call   173e0 <fibril_mutex_unlock>
   238fd:	31 c0                	xor    %eax,%eax
   238ff:	e9 98 fd ff ff       	jmp    2369c <async_exchange_begin+0x8c>
   23904:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
   2390b:	e8 c0 c7 ff ff       	call   200d0 <malloc>
   23910:	85 c0                	test   %eax,%eax
   23912:	74 dd                	je     238f1 <async_exchange_begin+0x2e1>
   23914:	8b 56 0c             	mov    0xc(%esi),%edx
   23917:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   2391d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   23924:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
   2392b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   23932:	89 70 10             	mov    %esi,0x10(%eax)
   23935:	89 50 14             	mov    %edx,0x14(%eax)
   23938:	e9 3f fd ff ff       	jmp    2367c <async_exchange_begin+0x6c>
   2393d:	e8 3f 1b 00 00       	call   25481 <amsg_destroy.part.0>
   23942:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   23949:	00 
   2394a:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23951:	00 
   23952:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   23959:	e8 52 6f 00 00       	call   2a8b0 <assert_abort>
   2395e:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   23965:	00 
   23966:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2396d:	00 
   2396e:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   23975:	e8 36 6f 00 00       	call   2a8b0 <assert_abort>
   2397a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00023980 <async_exchange_end>:
   23980:	55                   	push   %ebp
   23981:	89 e5                	mov    %esp,%ebp
   23983:	56                   	push   %esi
   23984:	53                   	push   %ebx
   23985:	83 ec 10             	sub    $0x10,%esp
   23988:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2398b:	85 db                	test   %ebx,%ebx
   2398d:	74 71                	je     23a00 <async_exchange_end+0x80>
   2398f:	8b 73 10             	mov    0x10(%ebx),%esi
   23992:	f0 ff 4e 2c          	lock decl 0x2c(%esi)
   23996:	83 7e 08 02          	cmpl   $0x2,0x8(%esi)
   2399a:	74 54                	je     239f0 <async_exchange_end+0x70>
   2399c:	c7 04 24 10 06 03 00 	movl   $0x30610,(%esp)
   239a3:	e8 18 39 ff ff       	call   172c0 <fibril_mutex_lock>
   239a8:	8b 06                	mov    (%esi),%eax
   239aa:	89 03                	mov    %eax,(%ebx)
   239ac:	89 73 04             	mov    %esi,0x4(%ebx)
   239af:	8b 06                	mov    (%esi),%eax
   239b1:	89 1e                	mov    %ebx,(%esi)
   239b3:	8b 15 20 06 03 00    	mov    0x30620,%edx
   239b9:	89 58 04             	mov    %ebx,0x4(%eax)
   239bc:	8d 43 08             	lea    0x8(%ebx),%eax
   239bf:	c7 43 0c 20 06 03 00 	movl   $0x30620,0xc(%ebx)
   239c6:	89 53 08             	mov    %edx,0x8(%ebx)
   239c9:	89 42 04             	mov    %eax,0x4(%edx)
   239cc:	c7 04 24 28 06 03 00 	movl   $0x30628,(%esp)
   239d3:	a3 20 06 03 00       	mov    %eax,0x30620
   239d8:	e8 83 45 ff ff       	call   17f60 <fibril_condvar_signal>
   239dd:	c7 45 08 10 06 03 00 	movl   $0x30610,0x8(%ebp)
   239e4:	83 c4 10             	add    $0x10,%esp
   239e7:	5b                   	pop    %ebx
   239e8:	5e                   	pop    %esi
   239e9:	5d                   	pop    %ebp
   239ea:	e9 f1 39 ff ff       	jmp    173e0 <fibril_mutex_unlock>
   239ef:	90                   	nop
   239f0:	8d 46 1c             	lea    0x1c(%esi),%eax
   239f3:	89 04 24             	mov    %eax,(%esp)
   239f6:	e8 e5 39 ff ff       	call   173e0 <fibril_mutex_unlock>
   239fb:	eb 9f                	jmp    2399c <async_exchange_end+0x1c>
   239fd:	8d 76 00             	lea    0x0(%esi),%esi
   23a00:	83 c4 10             	add    $0x10,%esp
   23a03:	5b                   	pop    %ebx
   23a04:	5e                   	pop    %esi
   23a05:	5d                   	pop    %ebp
   23a06:	c3                   	ret    
   23a07:	89 f6                	mov    %esi,%esi
   23a09:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00023a10 <async_share_in_start>:
   23a10:	55                   	push   %ebp
   23a11:	89 e5                	mov    %esp,%ebp
   23a13:	57                   	push   %edi
   23a14:	56                   	push   %esi
   23a15:	53                   	push   %ebx
   23a16:	83 ec 6c             	sub    $0x6c,%esp
   23a19:	8b 7d 08             	mov    0x8(%ebp),%edi
   23a1c:	8b 75 14             	mov    0x14(%ebp),%esi
   23a1f:	85 ff                	test   %edi,%edi
   23a21:	0f 84 5d 01 00 00    	je     23b84 <async_share_in_start+0x174>
   23a27:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   23a2e:	e8 9d c6 ff ff       	call   200d0 <malloc>
   23a33:	89 c3                	mov    %eax,%ebx
   23a35:	85 c0                	test   %eax,%eax
   23a37:	0f 84 2b 01 00 00    	je     23b68 <async_share_in_start+0x158>
   23a3d:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   23a41:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   23a45:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   23a4c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   23a53:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   23a5a:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   23a61:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   23a65:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   23a6c:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   23a73:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   23a79:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   23a7d:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   23a81:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   23a85:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   23a8c:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   23a8f:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   23a96:	00 
   23a97:	89 43 30             	mov    %eax,0x30(%ebx)
   23a9a:	8b 45 10             	mov    0x10(%ebp),%eax
   23a9d:	89 44 24 0c          	mov    %eax,0xc(%esp)
   23aa1:	8b 45 0c             	mov    0xc(%ebp),%eax
   23aa4:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   23aab:	00 
   23aac:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   23ab0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   23ab7:	00 
   23ab8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   23abf:	00 
   23ac0:	89 44 24 08          	mov    %eax,0x8(%esp)
   23ac4:	c7 44 24 04 06 00 00 	movl   $0x6,0x4(%esp)
   23acb:	00 
   23acc:	8b 47 14             	mov    0x14(%edi),%eax
   23acf:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   23ad3:	89 04 24             	mov    %eax,(%esp)
   23ad6:	e8 65 7d 00 00       	call   2b840 <ipc_call_async_fast>
   23adb:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   23ae2:	e8 e9 51 ff ff       	call   18cd0 <futex_down>
   23ae7:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   23aeb:	0f 85 b9 00 00 00    	jne    23baa <async_share_in_start+0x19a>
   23af1:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   23af5:	0f 85 8e 00 00 00    	jne    23b89 <async_share_in_start+0x179>
   23afb:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   23aff:	74 47                	je     23b48 <async_share_in_start+0x138>
   23b01:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   23b08:	e8 23 52 ff ff       	call   18d30 <futex_up>
   23b0d:	8b 7b 34             	mov    0x34(%ebx),%edi
   23b10:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   23b14:	0f 85 8b 00 00 00    	jne    23ba5 <async_share_in_start+0x195>
   23b1a:	89 1c 24             	mov    %ebx,(%esp)
   23b1d:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   23b21:	e8 ba c6 ff ff       	call   201e0 <free>
   23b26:	8b 55 cc             	mov    -0x34(%ebp),%edx
   23b29:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   23b2c:	89 f8                	mov    %edi,%eax
   23b2e:	85 f6                	test   %esi,%esi
   23b30:	74 02                	je     23b34 <async_share_in_start+0x124>
   23b32:	89 16                	mov    %edx,(%esi)
   23b34:	8b 55 18             	mov    0x18(%ebp),%edx
   23b37:	89 0a                	mov    %ecx,(%edx)
   23b39:	83 c4 6c             	add    $0x6c,%esp
   23b3c:	5b                   	pop    %ebx
   23b3d:	5e                   	pop    %esi
   23b3e:	5f                   	pop    %edi
   23b3f:	5d                   	pop    %ebp
   23b40:	c3                   	ret    
   23b41:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   23b48:	e8 e3 34 ff ff       	call   17030 <fibril_get_id>
   23b4d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   23b54:	89 03                	mov    %eax,(%ebx)
   23b56:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   23b5a:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   23b5e:	e8 8d 2f ff ff       	call   16af0 <fibril_switch>
   23b63:	eb a8                	jmp    23b0d <async_share_in_start+0xfd>
   23b65:	8d 76 00             	lea    0x0(%esi),%esi
   23b68:	c7 44 24 08 dc 04 00 	movl   $0x4dc,0x8(%esp)
   23b6f:	00 
   23b70:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23b77:	00 
   23b78:	c7 04 24 e2 e4 02 00 	movl   $0x2e4e2,(%esp)
   23b7f:	e8 2c 6d 00 00       	call   2a8b0 <assert_abort>
   23b84:	83 c8 ff             	or     $0xffffffff,%eax
   23b87:	eb b0                	jmp    23b39 <async_share_in_start+0x129>
   23b89:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   23b90:	00 
   23b91:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23b98:	00 
   23b99:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   23ba0:	e8 0b 6d 00 00       	call   2a8b0 <assert_abort>
   23ba5:	e8 d7 18 00 00       	call   25481 <amsg_destroy.part.0>
   23baa:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   23bb1:	00 
   23bb2:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23bb9:	00 
   23bba:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   23bc1:	e8 ea 6c 00 00       	call   2a8b0 <assert_abort>
   23bc6:	8d 76 00             	lea    0x0(%esi),%esi
   23bc9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00023bd0 <async_share_in_receive>:
   23bd0:	55                   	push   %ebp
   23bd1:	89 e5                	mov    %esp,%ebp
   23bd3:	56                   	push   %esi
   23bd4:	53                   	push   %ebx
   23bd5:	83 ec 40             	sub    $0x40,%esp
   23bd8:	8b 5d 08             	mov    0x8(%ebp),%ebx
   23bdb:	8b 75 0c             	mov    0xc(%ebp),%esi
   23bde:	85 db                	test   %ebx,%ebx
   23be0:	74 40                	je     23c22 <async_share_in_receive+0x52>
   23be2:	85 f6                	test   %esi,%esi
   23be4:	74 20                	je     23c06 <async_share_in_receive+0x36>
   23be6:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   23be9:	e8 b2 d8 ff ff       	call   214a0 <async_get_call_timeout.constprop.11>
   23bee:	89 03                	mov    %eax,(%ebx)
   23bf0:	31 c0                	xor    %eax,%eax
   23bf2:	83 7d d4 06          	cmpl   $0x6,-0x2c(%ebp)
   23bf6:	75 07                	jne    23bff <async_share_in_receive+0x2f>
   23bf8:	8b 45 d8             	mov    -0x28(%ebp),%eax
   23bfb:	89 06                	mov    %eax,(%esi)
   23bfd:	b0 01                	mov    $0x1,%al
   23bff:	83 c4 40             	add    $0x40,%esp
   23c02:	5b                   	pop    %ebx
   23c03:	5e                   	pop    %esi
   23c04:	5d                   	pop    %ebp
   23c05:	c3                   	ret    
   23c06:	c7 44 24 08 48 08 00 	movl   $0x848,0x8(%esp)
   23c0d:	00 
   23c0e:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23c15:	00 
   23c16:	c7 04 24 a9 e2 02 00 	movl   $0x2e2a9,(%esp)
   23c1d:	e8 8e 6c 00 00       	call   2a8b0 <assert_abort>
   23c22:	c7 44 24 08 47 08 00 	movl   $0x847,0x8(%esp)
   23c29:	00 
   23c2a:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23c31:	00 
   23c32:	c7 04 24 8e e4 02 00 	movl   $0x2e48e,(%esp)
   23c39:	e8 72 6c 00 00       	call   2a8b0 <assert_abort>
   23c3e:	66 90                	xchg   %ax,%ax

00023c40 <async_share_in_finalize>:
   23c40:	55                   	push   %ebp
   23c41:	89 e5                	mov    %esp,%ebp
   23c43:	83 ec 28             	sub    $0x28,%esp
   23c46:	8b 45 10             	mov    0x10(%ebp),%eax
   23c49:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   23c50:	00 
   23c51:	89 44 24 0c          	mov    %eax,0xc(%esp)
   23c55:	8b 45 0c             	mov    0xc(%ebp),%eax
   23c58:	89 44 24 08          	mov    %eax,0x8(%esp)
   23c5c:	8b 45 08             	mov    0x8(%ebp),%eax
   23c5f:	c7 44 24 10 94 10 00 	movl   $0x1094,0x10(%esp)
   23c66:	00 
   23c67:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   23c6e:	00 
   23c6f:	89 04 24             	mov    %eax,(%esp)
   23c72:	e8 f9 7f 00 00       	call   2bc70 <ipc_answer_fast>
   23c77:	c9                   	leave  
   23c78:	c3                   	ret    
   23c79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00023c80 <async_share_out_start>:
   23c80:	55                   	push   %ebp
   23c81:	89 e5                	mov    %esp,%ebp
   23c83:	56                   	push   %esi
   23c84:	53                   	push   %ebx
   23c85:	83 ec 60             	sub    $0x60,%esp
   23c88:	8b 75 08             	mov    0x8(%ebp),%esi
   23c8b:	85 f6                	test   %esi,%esi
   23c8d:	0f 84 65 01 00 00    	je     23df8 <async_share_out_start+0x178>
   23c93:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   23c9a:	e8 31 c4 ff ff       	call   200d0 <malloc>
   23c9f:	89 c3                	mov    %eax,%ebx
   23ca1:	85 c0                	test   %eax,%eax
   23ca3:	0f 84 17 01 00 00    	je     23dc0 <async_share_out_start+0x140>
   23ca9:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   23cad:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   23cb1:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   23cb8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   23cbf:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   23cc6:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   23ccd:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   23cd1:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   23cd8:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   23cdf:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   23ce5:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   23ce9:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   23ced:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   23cf1:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   23cf8:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   23cfb:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   23d02:	00 
   23d03:	89 43 30             	mov    %eax,0x30(%ebx)
   23d06:	8b 45 10             	mov    0x10(%ebp),%eax
   23d09:	89 44 24 10          	mov    %eax,0x10(%esp)
   23d0d:	8b 45 0c             	mov    0xc(%ebp),%eax
   23d10:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   23d17:	00 
   23d18:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   23d1c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   23d23:	00 
   23d24:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   23d2b:	00 
   23d2c:	89 44 24 08          	mov    %eax,0x8(%esp)
   23d30:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)
   23d37:	00 
   23d38:	8b 46 14             	mov    0x14(%esi),%eax
   23d3b:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   23d3f:	89 04 24             	mov    %eax,(%esp)
   23d42:	e8 f9 7a 00 00       	call   2b840 <ipc_call_async_fast>
   23d47:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   23d4e:	e8 7d 4f ff ff       	call   18cd0 <futex_down>
   23d53:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   23d57:	0f 85 7f 00 00 00    	jne    23ddc <async_share_out_start+0x15c>
   23d5d:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   23d61:	0f 85 96 00 00 00    	jne    23dfd <async_share_out_start+0x17d>
   23d67:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   23d6b:	75 43                	jne    23db0 <async_share_out_start+0x130>
   23d6d:	e8 be 32 ff ff       	call   17030 <fibril_get_id>
   23d72:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   23d79:	89 03                	mov    %eax,(%ebx)
   23d7b:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   23d7f:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   23d83:	e8 68 2d ff ff       	call   16af0 <fibril_switch>
   23d88:	8b 73 34             	mov    0x34(%ebx),%esi
   23d8b:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   23d8f:	0f 85 84 00 00 00    	jne    23e19 <async_share_out_start+0x199>
   23d95:	89 1c 24             	mov    %ebx,(%esp)
   23d98:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   23d9c:	e8 3f c4 ff ff       	call   201e0 <free>
   23da1:	89 f0                	mov    %esi,%eax
   23da3:	83 c4 60             	add    $0x60,%esp
   23da6:	5b                   	pop    %ebx
   23da7:	5e                   	pop    %esi
   23da8:	5d                   	pop    %ebp
   23da9:	c3                   	ret    
   23daa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   23db0:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   23db7:	e8 74 4f ff ff       	call   18d30 <futex_up>
   23dbc:	eb ca                	jmp    23d88 <async_share_out_start+0x108>
   23dbe:	66 90                	xchg   %ax,%ax
   23dc0:	c7 44 24 08 dc 04 00 	movl   $0x4dc,0x8(%esp)
   23dc7:	00 
   23dc8:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23dcf:	00 
   23dd0:	c7 04 24 e2 e4 02 00 	movl   $0x2e4e2,(%esp)
   23dd7:	e8 d4 6a 00 00       	call   2a8b0 <assert_abort>
   23ddc:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   23de3:	00 
   23de4:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23deb:	00 
   23dec:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   23df3:	e8 b8 6a 00 00       	call   2a8b0 <assert_abort>
   23df8:	83 c8 ff             	or     $0xffffffff,%eax
   23dfb:	eb a6                	jmp    23da3 <async_share_out_start+0x123>
   23dfd:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   23e04:	00 
   23e05:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23e0c:	00 
   23e0d:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   23e14:	e8 97 6a 00 00       	call   2a8b0 <assert_abort>
   23e19:	e8 63 16 00 00       	call   25481 <amsg_destroy.part.0>
   23e1e:	66 90                	xchg   %ax,%ax

00023e20 <async_share_out_receive>:
   23e20:	55                   	push   %ebp
   23e21:	89 e5                	mov    %esp,%ebp
   23e23:	57                   	push   %edi
   23e24:	56                   	push   %esi
   23e25:	53                   	push   %ebx
   23e26:	83 ec 4c             	sub    $0x4c,%esp
   23e29:	8b 5d 08             	mov    0x8(%ebp),%ebx
   23e2c:	8b 7d 0c             	mov    0xc(%ebp),%edi
   23e2f:	8b 75 10             	mov    0x10(%ebp),%esi
   23e32:	85 db                	test   %ebx,%ebx
   23e34:	74 66                	je     23e9c <async_share_out_receive+0x7c>
   23e36:	85 ff                	test   %edi,%edi
   23e38:	74 46                	je     23e80 <async_share_out_receive+0x60>
   23e3a:	85 f6                	test   %esi,%esi
   23e3c:	74 26                	je     23e64 <async_share_out_receive+0x44>
   23e3e:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   23e41:	e8 5a d6 ff ff       	call   214a0 <async_get_call_timeout.constprop.11>
   23e46:	89 03                	mov    %eax,(%ebx)
   23e48:	31 c0                	xor    %eax,%eax
   23e4a:	83 7d c4 05          	cmpl   $0x5,-0x3c(%ebp)
   23e4e:	75 0c                	jne    23e5c <async_share_out_receive+0x3c>
   23e50:	8b 45 cc             	mov    -0x34(%ebp),%eax
   23e53:	89 07                	mov    %eax,(%edi)
   23e55:	8b 45 d0             	mov    -0x30(%ebp),%eax
   23e58:	89 06                	mov    %eax,(%esi)
   23e5a:	b0 01                	mov    $0x1,%al
   23e5c:	83 c4 4c             	add    $0x4c,%esp
   23e5f:	5b                   	pop    %ebx
   23e60:	5e                   	pop    %esi
   23e61:	5f                   	pop    %edi
   23e62:	5d                   	pop    %ebp
   23e63:	c3                   	ret    
   23e64:	c7 44 24 08 8c 08 00 	movl   $0x88c,0x8(%esp)
   23e6b:	00 
   23e6c:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23e73:	00 
   23e74:	c7 04 24 f2 e4 02 00 	movl   $0x2e4f2,(%esp)
   23e7b:	e8 30 6a 00 00       	call   2a8b0 <assert_abort>
   23e80:	c7 44 24 08 8b 08 00 	movl   $0x88b,0x8(%esp)
   23e87:	00 
   23e88:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23e8f:	00 
   23e90:	c7 04 24 a9 e2 02 00 	movl   $0x2e2a9,(%esp)
   23e97:	e8 14 6a 00 00       	call   2a8b0 <assert_abort>
   23e9c:	c7 44 24 08 8a 08 00 	movl   $0x88a,0x8(%esp)
   23ea3:	00 
   23ea4:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   23eab:	00 
   23eac:	c7 04 24 8e e4 02 00 	movl   $0x2e48e,(%esp)
   23eb3:	e8 f8 69 00 00       	call   2a8b0 <assert_abort>
   23eb8:	90                   	nop
   23eb9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00023ec0 <async_share_out_finalize>:
   23ec0:	55                   	push   %ebp
   23ec1:	89 e5                	mov    %esp,%ebp
   23ec3:	83 ec 28             	sub    $0x28,%esp
   23ec6:	8b 45 0c             	mov    0xc(%ebp),%eax
   23ec9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   23ed0:	00 
   23ed1:	89 44 24 0c          	mov    %eax,0xc(%esp)
   23ed5:	8b 45 08             	mov    0x8(%ebp),%eax
   23ed8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   23edf:	00 
   23ee0:	c7 44 24 08 94 10 00 	movl   $0x1094,0x8(%esp)
   23ee7:	00 
   23ee8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   23eef:	00 
   23ef0:	89 04 24             	mov    %eax,(%esp)
   23ef3:	e8 78 7d 00 00       	call   2bc70 <ipc_answer_fast>
   23ef8:	c9                   	leave  
   23ef9:	c3                   	ret    
   23efa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00023f00 <async_data_read>:
   23f00:	55                   	push   %ebp
   23f01:	89 e5                	mov    %esp,%ebp
   23f03:	56                   	push   %esi
   23f04:	53                   	push   %ebx
   23f05:	83 ec 30             	sub    $0x30,%esp
   23f08:	8b 75 08             	mov    0x8(%ebp),%esi
   23f0b:	85 f6                	test   %esi,%esi
   23f0d:	0f 84 bd 00 00 00    	je     23fd0 <async_data_read+0xd0>
   23f13:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   23f1a:	e8 b1 c1 ff ff       	call   200d0 <malloc>
   23f1f:	89 c3                	mov    %eax,%ebx
   23f21:	85 c0                	test   %eax,%eax
   23f23:	0f 84 a7 00 00 00    	je     23fd0 <async_data_read+0xd0>
   23f29:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   23f2d:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   23f31:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   23f38:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   23f3f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   23f46:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   23f4d:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   23f51:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   23f58:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   23f5f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   23f65:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   23f69:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   23f6d:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   23f71:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   23f78:	8b 45 14             	mov    0x14(%ebp),%eax
   23f7b:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   23f7f:	89 43 30             	mov    %eax,0x30(%ebx)
   23f82:	8b 45 10             	mov    0x10(%ebp),%eax
   23f85:	89 44 24 0c          	mov    %eax,0xc(%esp)
   23f89:	8b 45 0c             	mov    0xc(%ebp),%eax
   23f8c:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   23f93:	00 
   23f94:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   23f9b:	00 
   23f9c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   23fa3:	00 
   23fa4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   23fab:	00 
   23fac:	89 44 24 08          	mov    %eax,0x8(%esp)
   23fb0:	c7 44 24 04 08 00 00 	movl   $0x8,0x4(%esp)
   23fb7:	00 
   23fb8:	8b 46 14             	mov    0x14(%esi),%eax
   23fbb:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   23fbf:	89 04 24             	mov    %eax,(%esp)
   23fc2:	e8 79 78 00 00       	call   2b840 <ipc_call_async_fast>
   23fc7:	83 c4 30             	add    $0x30,%esp
   23fca:	89 d8                	mov    %ebx,%eax
   23fcc:	5b                   	pop    %ebx
   23fcd:	5e                   	pop    %esi
   23fce:	5d                   	pop    %ebp
   23fcf:	c3                   	ret    
   23fd0:	83 c4 30             	add    $0x30,%esp
   23fd3:	31 c0                	xor    %eax,%eax
   23fd5:	5b                   	pop    %ebx
   23fd6:	5e                   	pop    %esi
   23fd7:	5d                   	pop    %ebp
   23fd8:	c3                   	ret    
   23fd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00023fe0 <async_data_read_start>:
   23fe0:	55                   	push   %ebp
   23fe1:	89 e5                	mov    %esp,%ebp
   23fe3:	56                   	push   %esi
   23fe4:	53                   	push   %ebx
   23fe5:	83 ec 60             	sub    $0x60,%esp
   23fe8:	8b 75 08             	mov    0x8(%ebp),%esi
   23feb:	85 f6                	test   %esi,%esi
   23fed:	0f 84 65 01 00 00    	je     24158 <async_data_read_start+0x178>
   23ff3:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   23ffa:	e8 d1 c0 ff ff       	call   200d0 <malloc>
   23fff:	89 c3                	mov    %eax,%ebx
   24001:	85 c0                	test   %eax,%eax
   24003:	0f 84 17 01 00 00    	je     24120 <async_data_read_start+0x140>
   24009:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   2400d:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   24011:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   24018:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   2401f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   24026:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   2402d:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   24031:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   24038:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   2403f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   24045:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   24049:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   2404d:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   24051:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   24058:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   2405b:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   24062:	00 
   24063:	89 43 30             	mov    %eax,0x30(%ebx)
   24066:	8b 45 10             	mov    0x10(%ebp),%eax
   24069:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2406d:	8b 45 0c             	mov    0xc(%ebp),%eax
   24070:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   24077:	00 
   24078:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   2407c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   24083:	00 
   24084:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2408b:	00 
   2408c:	89 44 24 08          	mov    %eax,0x8(%esp)
   24090:	c7 44 24 04 08 00 00 	movl   $0x8,0x4(%esp)
   24097:	00 
   24098:	8b 46 14             	mov    0x14(%esi),%eax
   2409b:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   2409f:	89 04 24             	mov    %eax,(%esp)
   240a2:	e8 99 77 00 00       	call   2b840 <ipc_call_async_fast>
   240a7:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   240ae:	e8 1d 4c ff ff       	call   18cd0 <futex_down>
   240b3:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   240b7:	0f 85 7f 00 00 00    	jne    2413c <async_data_read_start+0x15c>
   240bd:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   240c1:	0f 85 96 00 00 00    	jne    2415d <async_data_read_start+0x17d>
   240c7:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   240cb:	75 43                	jne    24110 <async_data_read_start+0x130>
   240cd:	e8 5e 2f ff ff       	call   17030 <fibril_get_id>
   240d2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   240d9:	89 03                	mov    %eax,(%ebx)
   240db:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   240df:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   240e3:	e8 08 2a ff ff       	call   16af0 <fibril_switch>
   240e8:	8b 73 34             	mov    0x34(%ebx),%esi
   240eb:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   240ef:	0f 85 84 00 00 00    	jne    24179 <async_data_read_start+0x199>
   240f5:	89 1c 24             	mov    %ebx,(%esp)
   240f8:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   240fc:	e8 df c0 ff ff       	call   201e0 <free>
   24101:	89 f0                	mov    %esi,%eax
   24103:	83 c4 60             	add    $0x60,%esp
   24106:	5b                   	pop    %ebx
   24107:	5e                   	pop    %esi
   24108:	5d                   	pop    %ebp
   24109:	c3                   	ret    
   2410a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   24110:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   24117:	e8 14 4c ff ff       	call   18d30 <futex_up>
   2411c:	eb ca                	jmp    240e8 <async_data_read_start+0x108>
   2411e:	66 90                	xchg   %ax,%ax
   24120:	c7 44 24 08 dc 04 00 	movl   $0x4dc,0x8(%esp)
   24127:	00 
   24128:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2412f:	00 
   24130:	c7 04 24 e2 e4 02 00 	movl   $0x2e4e2,(%esp)
   24137:	e8 74 67 00 00       	call   2a8b0 <assert_abort>
   2413c:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   24143:	00 
   24144:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2414b:	00 
   2414c:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   24153:	e8 58 67 00 00       	call   2a8b0 <assert_abort>
   24158:	83 c8 ff             	or     $0xffffffff,%eax
   2415b:	eb a6                	jmp    24103 <async_data_read_start+0x123>
   2415d:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   24164:	00 
   24165:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2416c:	00 
   2416d:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   24174:	e8 37 67 00 00       	call   2a8b0 <assert_abort>
   24179:	e8 03 13 00 00       	call   25481 <amsg_destroy.part.0>
   2417e:	66 90                	xchg   %ax,%ax

00024180 <async_data_read_receive>:
   24180:	55                   	push   %ebp
   24181:	89 e5                	mov    %esp,%ebp
   24183:	53                   	push   %ebx
   24184:	83 ec 44             	sub    $0x44,%esp
   24187:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2418a:	85 db                	test   %ebx,%ebx
   2418c:	74 36                	je     241c4 <async_data_read_receive+0x44>
   2418e:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   24191:	e8 0a d3 ff ff       	call   214a0 <async_get_call_timeout.constprop.11>
   24196:	89 03                	mov    %eax,(%ebx)
   24198:	31 c0                	xor    %eax,%eax
   2419a:	83 7d d4 08          	cmpl   $0x8,-0x2c(%ebp)
   2419e:	74 08                	je     241a8 <async_data_read_receive+0x28>
   241a0:	83 c4 44             	add    $0x44,%esp
   241a3:	5b                   	pop    %ebx
   241a4:	5d                   	pop    %ebp
   241a5:	c3                   	ret    
   241a6:	66 90                	xchg   %ax,%ax
   241a8:	8b 45 0c             	mov    0xc(%ebp),%eax
   241ab:	85 c0                	test   %eax,%eax
   241ad:	74 11                	je     241c0 <async_data_read_receive+0x40>
   241af:	8b 55 0c             	mov    0xc(%ebp),%edx
   241b2:	8b 45 dc             	mov    -0x24(%ebp),%eax
   241b5:	89 02                	mov    %eax,(%edx)
   241b7:	83 c4 44             	add    $0x44,%esp
   241ba:	b0 01                	mov    $0x1,%al
   241bc:	5b                   	pop    %ebx
   241bd:	5d                   	pop    %ebp
   241be:	c3                   	ret    
   241bf:	90                   	nop
   241c0:	b0 01                	mov    $0x1,%al
   241c2:	eb dc                	jmp    241a0 <async_data_read_receive+0x20>
   241c4:	c7 44 24 08 dd 08 00 	movl   $0x8dd,0x8(%esp)
   241cb:	00 
   241cc:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   241d3:	00 
   241d4:	c7 04 24 8e e4 02 00 	movl   $0x2e48e,(%esp)
   241db:	e8 d0 66 00 00       	call   2a8b0 <assert_abort>

000241e0 <async_data_read_finalize>:
   241e0:	55                   	push   %ebp
   241e1:	89 e5                	mov    %esp,%ebp
   241e3:	83 ec 28             	sub    $0x28,%esp
   241e6:	8b 45 10             	mov    0x10(%ebp),%eax
   241e9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   241f0:	00 
   241f1:	89 44 24 0c          	mov    %eax,0xc(%esp)
   241f5:	8b 45 0c             	mov    0xc(%ebp),%eax
   241f8:	89 44 24 08          	mov    %eax,0x8(%esp)
   241fc:	8b 45 08             	mov    0x8(%ebp),%eax
   241ff:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24206:	00 
   24207:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2420e:	00 
   2420f:	89 04 24             	mov    %eax,(%esp)
   24212:	e8 59 7a 00 00       	call   2bc70 <ipc_answer_fast>
   24217:	c9                   	leave  
   24218:	c3                   	ret    
   24219:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00024220 <async_data_read_forward_fast>:
   24220:	55                   	push   %ebp
   24221:	89 e5                	mov    %esp,%ebp
   24223:	57                   	push   %edi
   24224:	56                   	push   %esi
   24225:	53                   	push   %ebx
   24226:	83 ec 6c             	sub    $0x6c,%esp
   24229:	8b 75 08             	mov    0x8(%ebp),%esi
   2422c:	85 f6                	test   %esi,%esi
   2422e:	0f 84 44 02 00 00    	je     24478 <async_data_read_forward_fast+0x258>
   24234:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   24237:	e8 64 d2 ff ff       	call   214a0 <async_get_call_timeout.constprop.11>
   2423c:	83 7d c4 08          	cmpl   $0x8,-0x3c(%ebp)
   24240:	89 c7                	mov    %eax,%edi
   24242:	74 44                	je     24288 <async_data_read_forward_fast+0x68>
   24244:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2424b:	00 
   2424c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24253:	00 
   24254:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2425b:	00 
   2425c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   24263:	00 
   24264:	c7 44 24 04 f2 ff ff 	movl   $0xfffffff2,0x4(%esp)
   2426b:	ff 
   2426c:	89 3c 24             	mov    %edi,(%esp)
   2426f:	e8 fc 79 00 00       	call   2bc70 <ipc_answer_fast>
   24274:	be f2 ff ff ff       	mov    $0xfffffff2,%esi
   24279:	83 c4 6c             	add    $0x6c,%esp
   2427c:	89 f0                	mov    %esi,%eax
   2427e:	5b                   	pop    %ebx
   2427f:	5e                   	pop    %esi
   24280:	5f                   	pop    %edi
   24281:	5d                   	pop    %ebp
   24282:	c3                   	ret    
   24283:	90                   	nop
   24284:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24288:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   2428f:	e8 3c be ff ff       	call   200d0 <malloc>
   24294:	89 c3                	mov    %eax,%ebx
   24296:	85 c0                	test   %eax,%eax
   24298:	74 aa                	je     24244 <async_data_read_forward_fast+0x24>
   2429a:	8b 45 20             	mov    0x20(%ebp),%eax
   2429d:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   242a4:	00 
   242a5:	89 43 30             	mov    %eax,0x30(%ebx)
   242a8:	8b 45 1c             	mov    0x1c(%ebp),%eax
   242ab:	89 44 24 14          	mov    %eax,0x14(%esp)
   242af:	8b 45 18             	mov    0x18(%ebp),%eax
   242b2:	89 44 24 10          	mov    %eax,0x10(%esp)
   242b6:	8b 45 14             	mov    0x14(%ebp),%eax
   242b9:	89 44 24 0c          	mov    %eax,0xc(%esp)
   242bd:	8b 45 10             	mov    0x10(%ebp),%eax
   242c0:	89 44 24 08          	mov    %eax,0x8(%esp)
   242c4:	8b 45 0c             	mov    0xc(%ebp),%eax
   242c7:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   242ce:	00 
   242cf:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   242d3:	89 44 24 04          	mov    %eax,0x4(%esp)
   242d7:	c6 43 2c 00          	movb   $0x0,0x2c(%ebx)
   242db:	8b 46 14             	mov    0x14(%esi),%eax
   242de:	c6 43 2d 00          	movb   $0x0,0x2d(%ebx)
   242e2:	89 04 24             	mov    %eax,(%esp)
   242e5:	c6 43 2e 00          	movb   $0x0,0x2e(%ebx)
   242e9:	c7 43 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%ebx)
   242f0:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   242f6:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   242fa:	c6 43 14 00          	movb   $0x0,0x14(%ebx)
   242fe:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
   24305:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
   2430c:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
   24313:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   2431a:	c6 43 20 00          	movb   $0x0,0x20(%ebx)
   2431e:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
   24325:	c7 43 28 00 00 00 00 	movl   $0x0,0x28(%ebx)
   2432c:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   24330:	e8 0b 75 00 00       	call   2b840 <ipc_call_async_fast>
   24335:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   2433c:	00 
   2433d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24344:	00 
   24345:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2434c:	00 
   2434d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   24354:	00 
   24355:	8b 46 14             	mov    0x14(%esi),%eax
   24358:	89 3c 24             	mov    %edi,(%esp)
   2435b:	89 44 24 04          	mov    %eax,0x4(%esp)
   2435f:	e8 4c 7d 00 00       	call   2c0b0 <ipc_forward_fast>
   24364:	89 c6                	mov    %eax,%esi
   24366:	85 c0                	test   %eax,%eax
   24368:	75 5e                	jne    243c8 <async_data_read_forward_fast+0x1a8>
   2436a:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   24371:	e8 5a 49 ff ff       	call   18cd0 <futex_down>
   24376:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   2437a:	0f 85 21 01 00 00    	jne    244a1 <async_data_read_forward_fast+0x281>
   24380:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   24384:	0f 85 f6 00 00 00    	jne    24480 <async_data_read_forward_fast+0x260>
   2438a:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   2438e:	0f 84 ac 00 00 00    	je     24440 <async_data_read_forward_fast+0x220>
   24394:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2439b:	e8 90 49 ff ff       	call   18d30 <futex_up>
   243a0:	8b 73 34             	mov    0x34(%ebx),%esi
   243a3:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   243a7:	0f 85 ef 00 00 00    	jne    2449c <async_data_read_forward_fast+0x27c>
   243ad:	89 1c 24             	mov    %ebx,(%esp)
   243b0:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   243b4:	e8 27 be ff ff       	call   201e0 <free>
   243b9:	83 c4 6c             	add    $0x6c,%esp
   243bc:	89 f0                	mov    %esi,%eax
   243be:	5b                   	pop    %ebx
   243bf:	5e                   	pop    %esi
   243c0:	5f                   	pop    %edi
   243c1:	5d                   	pop    %ebp
   243c2:	c3                   	ret    
   243c3:	90                   	nop
   243c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   243c8:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   243cc:	0f 85 eb 00 00 00    	jne    244bd <async_data_read_forward_fast+0x29d>
   243d2:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   243d6:	0f 85 fd 00 00 00    	jne    244d9 <async_data_read_forward_fast+0x2b9>
   243dc:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   243e3:	e8 e8 48 ff ff       	call   18cd0 <futex_down>
   243e8:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   243ec:	75 72                	jne    24460 <async_data_read_forward_fast+0x240>
   243ee:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
   243f5:	c6 43 2d 01          	movb   $0x1,0x2d(%ebx)
   243f9:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   24400:	e8 2b 49 ff ff       	call   18d30 <futex_up>
   24405:	89 74 24 04          	mov    %esi,0x4(%esp)
   24409:	89 3c 24             	mov    %edi,(%esp)
   2440c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   24413:	00 
   24414:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2441b:	00 
   2441c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   24423:	00 
   24424:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2442b:	00 
   2442c:	e8 3f 78 00 00       	call   2bc70 <ipc_answer_fast>
   24431:	83 c4 6c             	add    $0x6c,%esp
   24434:	89 f0                	mov    %esi,%eax
   24436:	5b                   	pop    %ebx
   24437:	5e                   	pop    %esi
   24438:	5f                   	pop    %edi
   24439:	5d                   	pop    %ebp
   2443a:	c3                   	ret    
   2443b:	90                   	nop
   2443c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24440:	e8 eb 2b ff ff       	call   17030 <fibril_get_id>
   24445:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2444c:	89 03                	mov    %eax,(%ebx)
   2444e:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   24452:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   24456:	e8 95 26 ff ff       	call   16af0 <fibril_switch>
   2445b:	e9 40 ff ff ff       	jmp    243a0 <async_data_read_forward_fast+0x180>
   24460:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   24464:	75 36                	jne    2449c <async_data_read_forward_fast+0x27c>
   24466:	89 1c 24             	mov    %ebx,(%esp)
   24469:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   2446d:	e8 6e bd ff ff       	call   201e0 <free>
   24472:	eb 85                	jmp    243f9 <async_data_read_forward_fast+0x1d9>
   24474:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24478:	83 ce ff             	or     $0xffffffff,%esi
   2447b:	e9 f9 fd ff ff       	jmp    24279 <async_data_read_forward_fast+0x59>
   24480:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   24487:	00 
   24488:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2448f:	00 
   24490:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   24497:	e8 14 64 00 00       	call   2a8b0 <assert_abort>
   2449c:	e8 e0 0f 00 00       	call   25481 <amsg_destroy.part.0>
   244a1:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   244a8:	00 
   244a9:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   244b0:	00 
   244b1:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   244b8:	e8 f3 63 00 00       	call   2a8b0 <assert_abort>
   244bd:	c7 44 24 08 55 05 00 	movl   $0x555,0x8(%esp)
   244c4:	00 
   244c5:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   244cc:	00 
   244cd:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   244d4:	e8 d7 63 00 00       	call   2a8b0 <assert_abort>
   244d9:	c7 44 24 08 56 05 00 	movl   $0x556,0x8(%esp)
   244e0:	00 
   244e1:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   244e8:	00 
   244e9:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   244f0:	e8 bb 63 00 00       	call   2a8b0 <assert_abort>
   244f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   244f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00024500 <async_data_write_start>:
   24500:	55                   	push   %ebp
   24501:	89 e5                	mov    %esp,%ebp
   24503:	56                   	push   %esi
   24504:	53                   	push   %ebx
   24505:	83 ec 60             	sub    $0x60,%esp
   24508:	8b 75 08             	mov    0x8(%ebp),%esi
   2450b:	85 f6                	test   %esi,%esi
   2450d:	0f 84 65 01 00 00    	je     24678 <async_data_write_start+0x178>
   24513:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   2451a:	e8 b1 bb ff ff       	call   200d0 <malloc>
   2451f:	89 c3                	mov    %eax,%ebx
   24521:	85 c0                	test   %eax,%eax
   24523:	0f 84 17 01 00 00    	je     24640 <async_data_write_start+0x140>
   24529:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   2452d:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   24531:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   24538:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   2453f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   24546:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   2454d:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   24551:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   24558:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   2455f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   24565:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   24569:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   2456d:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   24571:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   24578:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   2457b:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   24582:	00 
   24583:	89 43 30             	mov    %eax,0x30(%ebx)
   24586:	8b 45 10             	mov    0x10(%ebp),%eax
   24589:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2458d:	8b 45 0c             	mov    0xc(%ebp),%eax
   24590:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   24597:	00 
   24598:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   2459c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   245a3:	00 
   245a4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   245ab:	00 
   245ac:	89 44 24 08          	mov    %eax,0x8(%esp)
   245b0:	c7 44 24 04 07 00 00 	movl   $0x7,0x4(%esp)
   245b7:	00 
   245b8:	8b 46 14             	mov    0x14(%esi),%eax
   245bb:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   245bf:	89 04 24             	mov    %eax,(%esp)
   245c2:	e8 79 72 00 00       	call   2b840 <ipc_call_async_fast>
   245c7:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   245ce:	e8 fd 46 ff ff       	call   18cd0 <futex_down>
   245d3:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   245d7:	0f 85 7f 00 00 00    	jne    2465c <async_data_write_start+0x15c>
   245dd:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   245e1:	0f 85 96 00 00 00    	jne    2467d <async_data_write_start+0x17d>
   245e7:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   245eb:	75 43                	jne    24630 <async_data_write_start+0x130>
   245ed:	e8 3e 2a ff ff       	call   17030 <fibril_get_id>
   245f2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   245f9:	89 03                	mov    %eax,(%ebx)
   245fb:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   245ff:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   24603:	e8 e8 24 ff ff       	call   16af0 <fibril_switch>
   24608:	8b 73 34             	mov    0x34(%ebx),%esi
   2460b:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   2460f:	0f 85 84 00 00 00    	jne    24699 <async_data_write_start+0x199>
   24615:	89 1c 24             	mov    %ebx,(%esp)
   24618:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   2461c:	e8 bf bb ff ff       	call   201e0 <free>
   24621:	89 f0                	mov    %esi,%eax
   24623:	83 c4 60             	add    $0x60,%esp
   24626:	5b                   	pop    %ebx
   24627:	5e                   	pop    %esi
   24628:	5d                   	pop    %ebp
   24629:	c3                   	ret    
   2462a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   24630:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   24637:	e8 f4 46 ff ff       	call   18d30 <futex_up>
   2463c:	eb ca                	jmp    24608 <async_data_write_start+0x108>
   2463e:	66 90                	xchg   %ax,%ax
   24640:	c7 44 24 08 dc 04 00 	movl   $0x4dc,0x8(%esp)
   24647:	00 
   24648:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2464f:	00 
   24650:	c7 04 24 e2 e4 02 00 	movl   $0x2e4e2,(%esp)
   24657:	e8 54 62 00 00       	call   2a8b0 <assert_abort>
   2465c:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   24663:	00 
   24664:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2466b:	00 
   2466c:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   24673:	e8 38 62 00 00       	call   2a8b0 <assert_abort>
   24678:	83 c8 ff             	or     $0xffffffff,%eax
   2467b:	eb a6                	jmp    24623 <async_data_write_start+0x123>
   2467d:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   24684:	00 
   24685:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2468c:	00 
   2468d:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   24694:	e8 17 62 00 00       	call   2a8b0 <assert_abort>
   24699:	e8 e3 0d 00 00       	call   25481 <amsg_destroy.part.0>
   2469e:	66 90                	xchg   %ax,%ax

000246a0 <async_data_write_receive>:
   246a0:	55                   	push   %ebp
   246a1:	89 e5                	mov    %esp,%ebp
   246a3:	53                   	push   %ebx
   246a4:	83 ec 34             	sub    $0x34,%esp
   246a7:	8b 5d 08             	mov    0x8(%ebp),%ebx
   246aa:	85 db                	test   %ebx,%ebx
   246ac:	74 36                	je     246e4 <async_data_write_receive+0x44>
   246ae:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   246b1:	e8 ea cd ff ff       	call   214a0 <async_get_call_timeout.constprop.11>
   246b6:	89 03                	mov    %eax,(%ebx)
   246b8:	31 c0                	xor    %eax,%eax
   246ba:	83 7d d4 07          	cmpl   $0x7,-0x2c(%ebp)
   246be:	74 08                	je     246c8 <async_data_write_receive+0x28>
   246c0:	83 c4 34             	add    $0x34,%esp
   246c3:	5b                   	pop    %ebx
   246c4:	5d                   	pop    %ebp
   246c5:	c3                   	ret    
   246c6:	66 90                	xchg   %ax,%ax
   246c8:	8b 45 0c             	mov    0xc(%ebp),%eax
   246cb:	85 c0                	test   %eax,%eax
   246cd:	74 11                	je     246e0 <async_data_write_receive+0x40>
   246cf:	8b 55 0c             	mov    0xc(%ebp),%edx
   246d2:	8b 45 dc             	mov    -0x24(%ebp),%eax
   246d5:	89 02                	mov    %eax,(%edx)
   246d7:	83 c4 34             	add    $0x34,%esp
   246da:	b0 01                	mov    $0x1,%al
   246dc:	5b                   	pop    %ebx
   246dd:	5d                   	pop    %ebp
   246de:	c3                   	ret    
   246df:	90                   	nop
   246e0:	b0 01                	mov    $0x1,%al
   246e2:	eb dc                	jmp    246c0 <async_data_write_receive+0x20>
   246e4:	e8 ba 0d 00 00       	call   254a3 <async_data_write_receive.part.7>
   246e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000246f0 <async_data_write_finalize>:
   246f0:	55                   	push   %ebp
   246f1:	89 e5                	mov    %esp,%ebp
   246f3:	83 ec 28             	sub    $0x28,%esp
   246f6:	8b 45 10             	mov    0x10(%ebp),%eax
   246f9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   24700:	00 
   24701:	89 44 24 0c          	mov    %eax,0xc(%esp)
   24705:	8b 45 0c             	mov    0xc(%ebp),%eax
   24708:	89 44 24 08          	mov    %eax,0x8(%esp)
   2470c:	8b 45 08             	mov    0x8(%ebp),%eax
   2470f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24716:	00 
   24717:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2471e:	00 
   2471f:	89 04 24             	mov    %eax,(%esp)
   24722:	e8 49 75 00 00       	call   2bc70 <ipc_answer_fast>
   24727:	c9                   	leave  
   24728:	c3                   	ret    
   24729:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00024730 <async_data_write_accept>:
   24730:	55                   	push   %ebp
   24731:	89 e5                	mov    %esp,%ebp
   24733:	57                   	push   %edi
   24734:	56                   	push   %esi
   24735:	53                   	push   %ebx
   24736:	83 ec 6c             	sub    $0x6c,%esp
   24739:	8a 45 0c             	mov    0xc(%ebp),%al
   2473c:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2473f:	8b 75 14             	mov    0x14(%ebp),%esi
   24742:	88 45 b7             	mov    %al,-0x49(%ebp)
   24745:	85 db                	test   %ebx,%ebx
   24747:	0f 84 33 01 00 00    	je     24880 <async_data_write_accept+0x150>
   2474d:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   24750:	e8 4b cd ff ff       	call   214a0 <async_get_call_timeout.constprop.11>
   24755:	83 7d c4 07          	cmpl   $0x7,-0x3c(%ebp)
   24759:	89 c7                	mov    %eax,%edi
   2475b:	74 43                	je     247a0 <async_data_write_accept+0x70>
   2475d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   24764:	00 
   24765:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2476c:	00 
   2476d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   24774:	00 
   24775:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2477c:	00 
   2477d:	c7 44 24 04 f2 ff ff 	movl   $0xfffffff2,0x4(%esp)
   24784:	ff 
   24785:	89 3c 24             	mov    %edi,(%esp)
   24788:	e8 e3 74 00 00       	call   2bc70 <ipc_answer_fast>
   2478d:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   24792:	83 c4 6c             	add    $0x6c,%esp
   24795:	5b                   	pop    %ebx
   24796:	5e                   	pop    %esi
   24797:	5f                   	pop    %edi
   24798:	5d                   	pop    %ebp
   24799:	c3                   	ret    
   2479a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   247a0:	8b 5d cc             	mov    -0x34(%ebp),%ebx
   247a3:	39 5d 10             	cmp    %ebx,0x10(%ebp)
   247a6:	77 b5                	ja     2475d <async_data_write_accept+0x2d>
   247a8:	85 f6                	test   %esi,%esi
   247aa:	74 04                	je     247b0 <async_data_write_accept+0x80>
   247ac:	39 de                	cmp    %ebx,%esi
   247ae:	72 ad                	jb     2475d <async_data_write_accept+0x2d>
   247b0:	8b 4d 18             	mov    0x18(%ebp),%ecx
   247b3:	85 c9                	test   %ecx,%ecx
   247b5:	74 0b                	je     247c2 <async_data_write_accept+0x92>
   247b7:	31 d2                	xor    %edx,%edx
   247b9:	89 d8                	mov    %ebx,%eax
   247bb:	f7 75 18             	divl   0x18(%ebp)
   247be:	85 d2                	test   %edx,%edx
   247c0:	75 9b                	jne    2475d <async_data_write_accept+0x2d>
   247c2:	80 7d b7 00          	cmpb   $0x0,-0x49(%ebp)
   247c6:	74 68                	je     24830 <async_data_write_accept+0x100>
   247c8:	8d 43 01             	lea    0x1(%ebx),%eax
   247cb:	89 04 24             	mov    %eax,(%esp)
   247ce:	e8 fd b8 ff ff       	call   200d0 <malloc>
   247d3:	89 c6                	mov    %eax,%esi
   247d5:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   247dc:	00 
   247dd:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   247e4:	00 
   247e5:	85 f6                	test   %esi,%esi
   247e7:	74 6d                	je     24856 <async_data_write_accept+0x126>
   247e9:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
   247ed:	89 74 24 08          	mov    %esi,0x8(%esp)
   247f1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   247f8:	00 
   247f9:	89 3c 24             	mov    %edi,(%esp)
   247fc:	e8 6f 74 00 00       	call   2bc70 <ipc_answer_fast>
   24801:	85 c0                	test   %eax,%eax
   24803:	75 3b                	jne    24840 <async_data_write_accept+0x110>
   24805:	80 7d b7 00          	cmpb   $0x0,-0x49(%ebp)
   24809:	74 04                	je     2480f <async_data_write_accept+0xdf>
   2480b:	c6 04 1e 00          	movb   $0x0,(%esi,%ebx,1)
   2480f:	8b 55 08             	mov    0x8(%ebp),%edx
   24812:	89 32                	mov    %esi,(%edx)
   24814:	8b 55 1c             	mov    0x1c(%ebp),%edx
   24817:	85 d2                	test   %edx,%edx
   24819:	0f 84 73 ff ff ff    	je     24792 <async_data_write_accept+0x62>
   2481f:	8b 55 1c             	mov    0x1c(%ebp),%edx
   24822:	89 1a                	mov    %ebx,(%edx)
   24824:	83 c4 6c             	add    $0x6c,%esp
   24827:	5b                   	pop    %ebx
   24828:	5e                   	pop    %esi
   24829:	5f                   	pop    %edi
   2482a:	5d                   	pop    %ebp
   2482b:	c3                   	ret    
   2482c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24830:	89 1c 24             	mov    %ebx,(%esp)
   24833:	e8 98 b8 ff ff       	call   200d0 <malloc>
   24838:	89 c6                	mov    %eax,%esi
   2483a:	eb 99                	jmp    247d5 <async_data_write_accept+0xa5>
   2483c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24840:	89 34 24             	mov    %esi,(%esp)
   24843:	89 45 b0             	mov    %eax,-0x50(%ebp)
   24846:	e8 95 b9 ff ff       	call   201e0 <free>
   2484b:	8b 45 b0             	mov    -0x50(%ebp),%eax
   2484e:	83 c4 6c             	add    $0x6c,%esp
   24851:	5b                   	pop    %ebx
   24852:	5e                   	pop    %esi
   24853:	5f                   	pop    %edi
   24854:	5d                   	pop    %ebp
   24855:	c3                   	ret    
   24856:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2485d:	00 
   2485e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   24865:	00 
   24866:	c7 44 24 04 fe ff ff 	movl   $0xfffffffe,0x4(%esp)
   2486d:	ff 
   2486e:	89 3c 24             	mov    %edi,(%esp)
   24871:	e8 fa 73 00 00       	call   2bc70 <ipc_answer_fast>
   24876:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   2487b:	e9 12 ff ff ff       	jmp    24792 <async_data_write_accept+0x62>
   24880:	c7 44 24 08 7e 09 00 	movl   $0x97e,0x8(%esp)
   24887:	00 
   24888:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   2488f:	00 
   24890:	c7 04 24 d6 e4 02 00 	movl   $0x2e4d6,(%esp)
   24897:	e8 14 60 00 00       	call   2a8b0 <assert_abort>
   2489c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000248a0 <async_data_write_void>:
   248a0:	55                   	push   %ebp
   248a1:	89 e5                	mov    %esp,%ebp
   248a3:	83 ec 58             	sub    $0x58,%esp
   248a6:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   248a9:	e8 f2 cb ff ff       	call   214a0 <async_get_call_timeout.constprop.11>
   248ae:	8b 55 08             	mov    0x8(%ebp),%edx
   248b1:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   248b8:	00 
   248b9:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   248c0:	00 
   248c1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   248c8:	00 
   248c9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   248d0:	00 
   248d1:	89 54 24 04          	mov    %edx,0x4(%esp)
   248d5:	89 04 24             	mov    %eax,(%esp)
   248d8:	e8 93 73 00 00       	call   2bc70 <ipc_answer_fast>
   248dd:	c9                   	leave  
   248de:	c3                   	ret    
   248df:	90                   	nop

000248e0 <async_data_write_forward_fast>:
   248e0:	55                   	push   %ebp
   248e1:	89 e5                	mov    %esp,%ebp
   248e3:	57                   	push   %edi
   248e4:	56                   	push   %esi
   248e5:	53                   	push   %ebx
   248e6:	83 ec 6c             	sub    $0x6c,%esp
   248e9:	8b 75 08             	mov    0x8(%ebp),%esi
   248ec:	85 f6                	test   %esi,%esi
   248ee:	0f 84 44 02 00 00    	je     24b38 <async_data_write_forward_fast+0x258>
   248f4:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   248f7:	e8 a4 cb ff ff       	call   214a0 <async_get_call_timeout.constprop.11>
   248fc:	83 7d c4 07          	cmpl   $0x7,-0x3c(%ebp)
   24900:	89 c7                	mov    %eax,%edi
   24902:	74 44                	je     24948 <async_data_write_forward_fast+0x68>
   24904:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2490b:	00 
   2490c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24913:	00 
   24914:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2491b:	00 
   2491c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   24923:	00 
   24924:	c7 44 24 04 f2 ff ff 	movl   $0xfffffff2,0x4(%esp)
   2492b:	ff 
   2492c:	89 3c 24             	mov    %edi,(%esp)
   2492f:	e8 3c 73 00 00       	call   2bc70 <ipc_answer_fast>
   24934:	be f2 ff ff ff       	mov    $0xfffffff2,%esi
   24939:	83 c4 6c             	add    $0x6c,%esp
   2493c:	89 f0                	mov    %esi,%eax
   2493e:	5b                   	pop    %ebx
   2493f:	5e                   	pop    %esi
   24940:	5f                   	pop    %edi
   24941:	5d                   	pop    %ebp
   24942:	c3                   	ret    
   24943:	90                   	nop
   24944:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24948:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   2494f:	e8 7c b7 ff ff       	call   200d0 <malloc>
   24954:	89 c3                	mov    %eax,%ebx
   24956:	85 c0                	test   %eax,%eax
   24958:	74 aa                	je     24904 <async_data_write_forward_fast+0x24>
   2495a:	8b 45 20             	mov    0x20(%ebp),%eax
   2495d:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   24964:	00 
   24965:	89 43 30             	mov    %eax,0x30(%ebx)
   24968:	8b 45 1c             	mov    0x1c(%ebp),%eax
   2496b:	89 44 24 14          	mov    %eax,0x14(%esp)
   2496f:	8b 45 18             	mov    0x18(%ebp),%eax
   24972:	89 44 24 10          	mov    %eax,0x10(%esp)
   24976:	8b 45 14             	mov    0x14(%ebp),%eax
   24979:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2497d:	8b 45 10             	mov    0x10(%ebp),%eax
   24980:	89 44 24 08          	mov    %eax,0x8(%esp)
   24984:	8b 45 0c             	mov    0xc(%ebp),%eax
   24987:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   2498e:	00 
   2498f:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   24993:	89 44 24 04          	mov    %eax,0x4(%esp)
   24997:	c6 43 2c 00          	movb   $0x0,0x2c(%ebx)
   2499b:	8b 46 14             	mov    0x14(%esi),%eax
   2499e:	c6 43 2d 00          	movb   $0x0,0x2d(%ebx)
   249a2:	89 04 24             	mov    %eax,(%esp)
   249a5:	c6 43 2e 00          	movb   $0x0,0x2e(%ebx)
   249a9:	c7 43 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%ebx)
   249b0:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   249b6:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   249ba:	c6 43 14 00          	movb   $0x0,0x14(%ebx)
   249be:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
   249c5:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
   249cc:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
   249d3:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
   249da:	c6 43 20 00          	movb   $0x0,0x20(%ebx)
   249de:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
   249e5:	c7 43 28 00 00 00 00 	movl   $0x0,0x28(%ebx)
   249ec:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   249f0:	e8 4b 6e 00 00       	call   2b840 <ipc_call_async_fast>
   249f5:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
   249fc:	00 
   249fd:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24a04:	00 
   24a05:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   24a0c:	00 
   24a0d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   24a14:	00 
   24a15:	8b 46 14             	mov    0x14(%esi),%eax
   24a18:	89 3c 24             	mov    %edi,(%esp)
   24a1b:	89 44 24 04          	mov    %eax,0x4(%esp)
   24a1f:	e8 8c 76 00 00       	call   2c0b0 <ipc_forward_fast>
   24a24:	89 c6                	mov    %eax,%esi
   24a26:	85 c0                	test   %eax,%eax
   24a28:	75 5e                	jne    24a88 <async_data_write_forward_fast+0x1a8>
   24a2a:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   24a31:	e8 9a 42 ff ff       	call   18cd0 <futex_down>
   24a36:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   24a3a:	0f 85 21 01 00 00    	jne    24b61 <async_data_write_forward_fast+0x281>
   24a40:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   24a44:	0f 85 f6 00 00 00    	jne    24b40 <async_data_write_forward_fast+0x260>
   24a4a:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   24a4e:	0f 84 ac 00 00 00    	je     24b00 <async_data_write_forward_fast+0x220>
   24a54:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   24a5b:	e8 d0 42 ff ff       	call   18d30 <futex_up>
   24a60:	8b 73 34             	mov    0x34(%ebx),%esi
   24a63:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   24a67:	0f 85 ef 00 00 00    	jne    24b5c <async_data_write_forward_fast+0x27c>
   24a6d:	89 1c 24             	mov    %ebx,(%esp)
   24a70:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   24a74:	e8 67 b7 ff ff       	call   201e0 <free>
   24a79:	83 c4 6c             	add    $0x6c,%esp
   24a7c:	89 f0                	mov    %esi,%eax
   24a7e:	5b                   	pop    %ebx
   24a7f:	5e                   	pop    %esi
   24a80:	5f                   	pop    %edi
   24a81:	5d                   	pop    %ebp
   24a82:	c3                   	ret    
   24a83:	90                   	nop
   24a84:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24a88:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   24a8c:	0f 85 eb 00 00 00    	jne    24b7d <async_data_write_forward_fast+0x29d>
   24a92:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   24a96:	0f 85 fd 00 00 00    	jne    24b99 <async_data_write_forward_fast+0x2b9>
   24a9c:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   24aa3:	e8 28 42 ff ff       	call   18cd0 <futex_down>
   24aa8:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   24aac:	75 72                	jne    24b20 <async_data_write_forward_fast+0x240>
   24aae:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
   24ab5:	c6 43 2d 01          	movb   $0x1,0x2d(%ebx)
   24ab9:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   24ac0:	e8 6b 42 ff ff       	call   18d30 <futex_up>
   24ac5:	89 74 24 04          	mov    %esi,0x4(%esp)
   24ac9:	89 3c 24             	mov    %edi,(%esp)
   24acc:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   24ad3:	00 
   24ad4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24adb:	00 
   24adc:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   24ae3:	00 
   24ae4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   24aeb:	00 
   24aec:	e8 7f 71 00 00       	call   2bc70 <ipc_answer_fast>
   24af1:	83 c4 6c             	add    $0x6c,%esp
   24af4:	89 f0                	mov    %esi,%eax
   24af6:	5b                   	pop    %ebx
   24af7:	5e                   	pop    %esi
   24af8:	5f                   	pop    %edi
   24af9:	5d                   	pop    %ebp
   24afa:	c3                   	ret    
   24afb:	90                   	nop
   24afc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24b00:	e8 2b 25 ff ff       	call   17030 <fibril_get_id>
   24b05:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   24b0c:	89 03                	mov    %eax,(%ebx)
   24b0e:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   24b12:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   24b16:	e8 d5 1f ff ff       	call   16af0 <fibril_switch>
   24b1b:	e9 40 ff ff ff       	jmp    24a60 <async_data_write_forward_fast+0x180>
   24b20:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   24b24:	75 36                	jne    24b5c <async_data_write_forward_fast+0x27c>
   24b26:	89 1c 24             	mov    %ebx,(%esp)
   24b29:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   24b2d:	e8 ae b6 ff ff       	call   201e0 <free>
   24b32:	eb 85                	jmp    24ab9 <async_data_write_forward_fast+0x1d9>
   24b34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24b38:	83 ce ff             	or     $0xffffffff,%esi
   24b3b:	e9 f9 fd ff ff       	jmp    24939 <async_data_write_forward_fast+0x59>
   24b40:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   24b47:	00 
   24b48:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   24b4f:	00 
   24b50:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   24b57:	e8 54 5d 00 00       	call   2a8b0 <assert_abort>
   24b5c:	e8 20 09 00 00       	call   25481 <amsg_destroy.part.0>
   24b61:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   24b68:	00 
   24b69:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   24b70:	00 
   24b71:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   24b78:	e8 33 5d 00 00       	call   2a8b0 <assert_abort>
   24b7d:	c7 44 24 08 55 05 00 	movl   $0x555,0x8(%esp)
   24b84:	00 
   24b85:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   24b8c:	00 
   24b8d:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   24b94:	e8 17 5d 00 00       	call   2a8b0 <assert_abort>
   24b99:	c7 44 24 08 56 05 00 	movl   $0x556,0x8(%esp)
   24ba0:	00 
   24ba1:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   24ba8:	00 
   24ba9:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   24bb0:	e8 fb 5c 00 00       	call   2a8b0 <assert_abort>
   24bb5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24bb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00024bc0 <async_exchange_clone>:
   24bc0:	55                   	push   %ebp
   24bc1:	89 e5                	mov    %esp,%ebp
   24bc3:	57                   	push   %edi
   24bc4:	56                   	push   %esi
   24bc5:	53                   	push   %ebx
   24bc6:	83 ec 6c             	sub    $0x6c,%esp
   24bc9:	8b 45 0c             	mov    0xc(%ebp),%eax
   24bcc:	8b 75 08             	mov    0x8(%ebp),%esi
   24bcf:	85 f6                	test   %esi,%esi
   24bd1:	8b 78 14             	mov    0x14(%eax),%edi
   24bd4:	0f 84 06 01 00 00    	je     24ce0 <async_exchange_clone+0x120>
   24bda:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   24be1:	e8 ea b4 ff ff       	call   200d0 <malloc>
   24be6:	89 c3                	mov    %eax,%ebx
   24be8:	85 c0                	test   %eax,%eax
   24bea:	0f 84 20 01 00 00    	je     24d10 <async_exchange_clone+0x150>
   24bf0:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   24bf4:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   24bf8:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   24bff:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   24c06:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   24c0d:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   24c14:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   24c18:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   24c1f:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   24c26:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   24c2c:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   24c30:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   24c34:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   24c38:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   24c3f:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   24c42:	c7 44 24 20 01 00 00 	movl   $0x1,0x20(%esp)
   24c49:	00 
   24c4a:	c7 44 24 1c e0 0d 02 	movl   $0x20de0,0x1c(%esp)
   24c51:	00 
   24c52:	89 5c 24 18          	mov    %ebx,0x18(%esp)
   24c56:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   24c5d:	00 
   24c5e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24c65:	00 
   24c66:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   24c6d:	00 
   24c6e:	89 7c 24 08          	mov    %edi,0x8(%esp)
   24c72:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   24c79:	00 
   24c7a:	89 43 30             	mov    %eax,0x30(%ebx)
   24c7d:	8b 46 14             	mov    0x14(%esi),%eax
   24c80:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   24c84:	89 04 24             	mov    %eax,(%esp)
   24c87:	e8 b4 6b 00 00       	call   2b840 <ipc_call_async_fast>
   24c8c:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   24c93:	e8 38 40 ff ff       	call   18cd0 <futex_down>
   24c98:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   24c9c:	0f 85 8f 00 00 00    	jne    24d31 <async_exchange_clone+0x171>
   24ca2:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   24ca6:	0f 85 a1 00 00 00    	jne    24d4d <async_exchange_clone+0x18d>
   24cac:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   24cb0:	74 3e                	je     24cf0 <async_exchange_clone+0x130>
   24cb2:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   24cb9:	e8 72 40 ff ff       	call   18d30 <futex_up>
   24cbe:	8b 73 34             	mov    0x34(%ebx),%esi
   24cc1:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   24cc5:	75 65                	jne    24d2c <async_exchange_clone+0x16c>
   24cc7:	89 1c 24             	mov    %ebx,(%esp)
   24cca:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   24cce:	e8 0d b5 ff ff       	call   201e0 <free>
   24cd3:	83 c4 6c             	add    $0x6c,%esp
   24cd6:	89 f0                	mov    %esi,%eax
   24cd8:	5b                   	pop    %ebx
   24cd9:	5e                   	pop    %esi
   24cda:	5f                   	pop    %edi
   24cdb:	5d                   	pop    %ebp
   24cdc:	c3                   	ret    
   24cdd:	8d 76 00             	lea    0x0(%esi),%esi
   24ce0:	83 c4 6c             	add    $0x6c,%esp
   24ce3:	83 c8 ff             	or     $0xffffffff,%eax
   24ce6:	5b                   	pop    %ebx
   24ce7:	5e                   	pop    %esi
   24ce8:	5f                   	pop    %edi
   24ce9:	5d                   	pop    %ebp
   24cea:	c3                   	ret    
   24ceb:	90                   	nop
   24cec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24cf0:	e8 3b 23 ff ff       	call   17030 <fibril_get_id>
   24cf5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   24cfc:	89 03                	mov    %eax,(%ebx)
   24cfe:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   24d02:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   24d06:	e8 e5 1d ff ff       	call   16af0 <fibril_switch>
   24d0b:	eb b1                	jmp    24cbe <async_exchange_clone+0xfe>
   24d0d:	8d 76 00             	lea    0x0(%esi),%esi
   24d10:	c7 44 24 08 dc 04 00 	movl   $0x4dc,0x8(%esp)
   24d17:	00 
   24d18:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   24d1f:	00 
   24d20:	c7 04 24 e2 e4 02 00 	movl   $0x2e4e2,(%esp)
   24d27:	e8 84 5b 00 00       	call   2a8b0 <assert_abort>
   24d2c:	e8 50 07 00 00       	call   25481 <amsg_destroy.part.0>
   24d31:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   24d38:	00 
   24d39:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   24d40:	00 
   24d41:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   24d48:	e8 63 5b 00 00       	call   2a8b0 <assert_abort>
   24d4d:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   24d54:	00 
   24d55:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   24d5c:	00 
   24d5d:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   24d64:	e8 47 5b 00 00       	call   2a8b0 <assert_abort>
   24d69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00024d70 <async_clone_receive>:
   24d70:	55                   	push   %ebp
   24d71:	89 e5                	mov    %esp,%ebp
   24d73:	57                   	push   %edi
   24d74:	56                   	push   %esi
   24d75:	53                   	push   %ebx
   24d76:	83 ec 5c             	sub    $0x5c,%esp
   24d79:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   24d7c:	e8 1f c7 ff ff       	call   214a0 <async_get_call_timeout.constprop.11>
   24d81:	8b 75 c8             	mov    -0x38(%ebp),%esi
   24d84:	89 c7                	mov    %eax,%edi
   24d86:	83 7d c4 01          	cmpl   $0x1,-0x3c(%ebp)
   24d8a:	0f 85 a0 00 00 00    	jne    24e30 <async_clone_receive+0xc0>
   24d90:	85 f6                	test   %esi,%esi
   24d92:	0f 88 98 00 00 00    	js     24e30 <async_clone_receive+0xc0>
   24d98:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)
   24d9f:	e8 2c b3 ff ff       	call   200d0 <malloc>
   24da4:	89 c3                	mov    %eax,%ebx
   24da6:	85 c0                	test   %eax,%eax
   24da8:	0f 84 c2 00 00 00    	je     24e70 <async_clone_receive+0x100>
   24dae:	8b 45 08             	mov    0x8(%ebp),%eax
   24db1:	89 73 0c             	mov    %esi,0xc(%ebx)
   24db4:	89 43 08             	mov    %eax,0x8(%ebx)
   24db7:	8d 43 30             	lea    0x30(%ebx),%eax
   24dba:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
   24dc1:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)
   24dc8:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
   24dcf:	89 04 24             	mov    %eax,(%esp)
   24dd2:	e8 c9 24 ff ff       	call   172a0 <fibril_mutex_initialize>
   24dd7:	8d 43 1c             	lea    0x1c(%ebx),%eax
   24dda:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%ebx)
   24de1:	89 1b                	mov    %ebx,(%ebx)
   24de3:	89 5b 04             	mov    %ebx,0x4(%ebx)
   24de6:	89 04 24             	mov    %eax,(%esp)
   24de9:	e8 b2 24 ff ff       	call   172a0 <fibril_mutex_initialize>
   24dee:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   24df5:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   24dfc:	00 
   24dfd:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24e04:	00 
   24e05:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   24e0c:	00 
   24e0d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   24e14:	00 
   24e15:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   24e1c:	00 
   24e1d:	89 3c 24             	mov    %edi,(%esp)
   24e20:	e8 4b 6e 00 00       	call   2bc70 <ipc_answer_fast>
   24e25:	83 c4 5c             	add    $0x5c,%esp
   24e28:	89 d8                	mov    %ebx,%eax
   24e2a:	5b                   	pop    %ebx
   24e2b:	5e                   	pop    %esi
   24e2c:	5f                   	pop    %edi
   24e2d:	5d                   	pop    %ebp
   24e2e:	c3                   	ret    
   24e2f:	90                   	nop
   24e30:	89 3c 24             	mov    %edi,(%esp)
   24e33:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   24e3a:	00 
   24e3b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24e42:	00 
   24e43:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   24e4a:	00 
   24e4b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   24e52:	00 
   24e53:	c7 44 24 04 f2 ff ff 	movl   $0xfffffff2,0x4(%esp)
   24e5a:	ff 
   24e5b:	e8 10 6e 00 00       	call   2bc70 <ipc_answer_fast>
   24e60:	83 c4 5c             	add    $0x5c,%esp
   24e63:	31 db                	xor    %ebx,%ebx
   24e65:	89 d8                	mov    %ebx,%eax
   24e67:	5b                   	pop    %ebx
   24e68:	5e                   	pop    %esi
   24e69:	5f                   	pop    %edi
   24e6a:	5d                   	pop    %ebp
   24e6b:	c3                   	ret    
   24e6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24e70:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   24e77:	00 
   24e78:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24e7f:	00 
   24e80:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   24e87:	00 
   24e88:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   24e8f:	00 
   24e90:	c7 44 24 04 fe ff ff 	movl   $0xfffffffe,0x4(%esp)
   24e97:	ff 
   24e98:	89 3c 24             	mov    %edi,(%esp)
   24e9b:	e8 d0 6d 00 00       	call   2bc70 <ipc_answer_fast>
   24ea0:	e9 80 ff ff ff       	jmp    24e25 <async_clone_receive+0xb5>
   24ea5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24ea9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00024eb0 <async_callback_receive>:
   24eb0:	55                   	push   %ebp
   24eb1:	89 e5                	mov    %esp,%ebp
   24eb3:	57                   	push   %edi
   24eb4:	56                   	push   %esi
   24eb5:	53                   	push   %ebx
   24eb6:	83 ec 5c             	sub    $0x5c,%esp
   24eb9:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   24ebc:	e8 df c5 ff ff       	call   214a0 <async_get_call_timeout.constprop.11>
   24ec1:	8b 75 d8             	mov    -0x28(%ebp),%esi
   24ec4:	89 c7                	mov    %eax,%edi
   24ec6:	83 7d c4 03          	cmpl   $0x3,-0x3c(%ebp)
   24eca:	0f 85 a0 00 00 00    	jne    24f70 <async_callback_receive+0xc0>
   24ed0:	85 f6                	test   %esi,%esi
   24ed2:	0f 88 98 00 00 00    	js     24f70 <async_callback_receive+0xc0>
   24ed8:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)
   24edf:	e8 ec b1 ff ff       	call   200d0 <malloc>
   24ee4:	89 c3                	mov    %eax,%ebx
   24ee6:	85 c0                	test   %eax,%eax
   24ee8:	0f 84 c2 00 00 00    	je     24fb0 <async_callback_receive+0x100>
   24eee:	8b 45 08             	mov    0x8(%ebp),%eax
   24ef1:	89 73 0c             	mov    %esi,0xc(%ebx)
   24ef4:	89 43 08             	mov    %eax,0x8(%ebx)
   24ef7:	8d 43 30             	lea    0x30(%ebx),%eax
   24efa:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
   24f01:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)
   24f08:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
   24f0f:	89 04 24             	mov    %eax,(%esp)
   24f12:	e8 89 23 ff ff       	call   172a0 <fibril_mutex_initialize>
   24f17:	8d 43 1c             	lea    0x1c(%ebx),%eax
   24f1a:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%ebx)
   24f21:	89 1b                	mov    %ebx,(%ebx)
   24f23:	89 5b 04             	mov    %ebx,0x4(%ebx)
   24f26:	89 04 24             	mov    %eax,(%esp)
   24f29:	e8 72 23 ff ff       	call   172a0 <fibril_mutex_initialize>
   24f2e:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   24f35:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   24f3c:	00 
   24f3d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24f44:	00 
   24f45:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   24f4c:	00 
   24f4d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   24f54:	00 
   24f55:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   24f5c:	00 
   24f5d:	89 3c 24             	mov    %edi,(%esp)
   24f60:	e8 0b 6d 00 00       	call   2bc70 <ipc_answer_fast>
   24f65:	83 c4 5c             	add    $0x5c,%esp
   24f68:	89 d8                	mov    %ebx,%eax
   24f6a:	5b                   	pop    %ebx
   24f6b:	5e                   	pop    %esi
   24f6c:	5f                   	pop    %edi
   24f6d:	5d                   	pop    %ebp
   24f6e:	c3                   	ret    
   24f6f:	90                   	nop
   24f70:	89 3c 24             	mov    %edi,(%esp)
   24f73:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   24f7a:	00 
   24f7b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24f82:	00 
   24f83:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   24f8a:	00 
   24f8b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   24f92:	00 
   24f93:	c7 44 24 04 f2 ff ff 	movl   $0xfffffff2,0x4(%esp)
   24f9a:	ff 
   24f9b:	e8 d0 6c 00 00       	call   2bc70 <ipc_answer_fast>
   24fa0:	83 c4 5c             	add    $0x5c,%esp
   24fa3:	31 db                	xor    %ebx,%ebx
   24fa5:	89 d8                	mov    %ebx,%eax
   24fa7:	5b                   	pop    %ebx
   24fa8:	5e                   	pop    %esi
   24fa9:	5f                   	pop    %edi
   24faa:	5d                   	pop    %ebp
   24fab:	c3                   	ret    
   24fac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24fb0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   24fb7:	00 
   24fb8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   24fbf:	00 
   24fc0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   24fc7:	00 
   24fc8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   24fcf:	00 
   24fd0:	c7 44 24 04 fe ff ff 	movl   $0xfffffffe,0x4(%esp)
   24fd7:	ff 
   24fd8:	89 3c 24             	mov    %edi,(%esp)
   24fdb:	e8 90 6c 00 00       	call   2bc70 <ipc_answer_fast>
   24fe0:	e9 80 ff ff ff       	jmp    24f65 <async_callback_receive+0xb5>
   24fe5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   24fe9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00024ff0 <async_callback_receive_start>:
   24ff0:	55                   	push   %ebp
   24ff1:	89 e5                	mov    %esp,%ebp
   24ff3:	56                   	push   %esi
   24ff4:	53                   	push   %ebx
   24ff5:	83 ec 10             	sub    $0x10,%esp
   24ff8:	8b 45 0c             	mov    0xc(%ebp),%eax
   24ffb:	8b 70 14             	mov    0x14(%eax),%esi
   24ffe:	83 38 03             	cmpl   $0x3,(%eax)
   25001:	75 6d                	jne    25070 <async_callback_receive_start+0x80>
   25003:	85 f6                	test   %esi,%esi
   25005:	78 69                	js     25070 <async_callback_receive_start+0x80>
   25007:	c7 04 24 44 00 00 00 	movl   $0x44,(%esp)
   2500e:	e8 bd b0 ff ff       	call   200d0 <malloc>
   25013:	89 c3                	mov    %eax,%ebx
   25015:	85 c0                	test   %eax,%eax
   25017:	74 57                	je     25070 <async_callback_receive_start+0x80>
   25019:	8b 45 08             	mov    0x8(%ebp),%eax
   2501c:	89 73 0c             	mov    %esi,0xc(%ebx)
   2501f:	89 43 08             	mov    %eax,0x8(%ebx)
   25022:	8d 43 30             	lea    0x30(%ebx),%eax
   25025:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
   2502c:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)
   25033:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
   2503a:	89 04 24             	mov    %eax,(%esp)
   2503d:	e8 5e 22 ff ff       	call   172a0 <fibril_mutex_initialize>
   25042:	8d 43 1c             	lea    0x1c(%ebx),%eax
   25045:	c7 43 40 00 00 00 00 	movl   $0x0,0x40(%ebx)
   2504c:	89 1b                	mov    %ebx,(%ebx)
   2504e:	89 5b 04             	mov    %ebx,0x4(%ebx)
   25051:	89 04 24             	mov    %eax,(%esp)
   25054:	e8 47 22 ff ff       	call   172a0 <fibril_mutex_initialize>
   25059:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
   25060:	83 c4 10             	add    $0x10,%esp
   25063:	89 d8                	mov    %ebx,%eax
   25065:	5b                   	pop    %ebx
   25066:	5e                   	pop    %esi
   25067:	5d                   	pop    %ebp
   25068:	c3                   	ret    
   25069:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25070:	83 c4 10             	add    $0x10,%esp
   25073:	31 db                	xor    %ebx,%ebx
   25075:	89 d8                	mov    %ebx,%eax
   25077:	5b                   	pop    %ebx
   25078:	5e                   	pop    %esi
   25079:	5d                   	pop    %ebp
   2507a:	c3                   	ret    
   2507b:	90                   	nop
   2507c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00025080 <async_state_change_start>:
   25080:	55                   	push   %ebp
   25081:	89 e5                	mov    %esp,%ebp
   25083:	57                   	push   %edi
   25084:	56                   	push   %esi
   25085:	53                   	push   %ebx
   25086:	83 ec 6c             	sub    $0x6c,%esp
   25089:	8b 45 18             	mov    0x18(%ebp),%eax
   2508c:	8b 75 08             	mov    0x8(%ebp),%esi
   2508f:	85 f6                	test   %esi,%esi
   25091:	8b 78 14             	mov    0x14(%eax),%edi
   25094:	0f 84 0e 01 00 00    	je     251a8 <async_state_change_start+0x128>
   2509a:	c7 04 24 38 00 00 00 	movl   $0x38,(%esp)
   250a1:	e8 2a b0 ff ff       	call   200d0 <malloc>
   250a6:	89 c3                	mov    %eax,%ebx
   250a8:	85 c0                	test   %eax,%eax
   250aa:	0f 84 28 01 00 00    	je     251d8 <async_state_change_start+0x158>
   250b0:	c6 40 08 00          	movb   $0x0,0x8(%eax)
   250b4:	c6 40 14 00          	movb   $0x0,0x14(%eax)
   250b8:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
   250bf:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   250c6:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
   250cd:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
   250d4:	c6 40 20 00          	movb   $0x0,0x20(%eax)
   250d8:	c7 40 24 00 00 00 00 	movl   $0x0,0x24(%eax)
   250df:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)
   250e6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   250ec:	c6 40 2c 00          	movb   $0x0,0x2c(%eax)
   250f0:	c6 40 2d 00          	movb   $0x0,0x2d(%eax)
   250f4:	c6 40 2e 00          	movb   $0x0,0x2e(%eax)
   250f8:	c7 40 34 f2 ff ff ff 	movl   $0xfffffff2,0x34(%eax)
   250ff:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   25102:	c7 44 24 24 01 00 00 	movl   $0x1,0x24(%esp)
   25109:	00 
   2510a:	89 43 30             	mov    %eax,0x30(%ebx)
   2510d:	8b 45 14             	mov    0x14(%ebp),%eax
   25110:	89 44 24 10          	mov    %eax,0x10(%esp)
   25114:	8b 45 10             	mov    0x10(%ebp),%eax
   25117:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2511b:	8b 45 0c             	mov    0xc(%ebp),%eax
   2511e:	c7 44 24 20 e0 0d 02 	movl   $0x20de0,0x20(%esp)
   25125:	00 
   25126:	89 5c 24 1c          	mov    %ebx,0x1c(%esp)
   2512a:	89 7c 24 18          	mov    %edi,0x18(%esp)
   2512e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   25135:	00 
   25136:	89 44 24 08          	mov    %eax,0x8(%esp)
   2513a:	c7 44 24 04 09 00 00 	movl   $0x9,0x4(%esp)
   25141:	00 
   25142:	8b 46 14             	mov    0x14(%esi),%eax
   25145:	c6 43 04 01          	movb   $0x1,0x4(%ebx)
   25149:	89 04 24             	mov    %eax,(%esp)
   2514c:	e8 3f 69 00 00       	call   2ba90 <ipc_call_async_slow>
   25151:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   25158:	e8 73 3b ff ff       	call   18cd0 <futex_down>
   2515d:	80 7b 2d 00          	cmpb   $0x0,0x2d(%ebx)
   25161:	0f 85 92 00 00 00    	jne    251f9 <async_state_change_start+0x179>
   25167:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   2516b:	0f 85 a4 00 00 00    	jne    25215 <async_state_change_start+0x195>
   25171:	80 7b 2c 00          	cmpb   $0x0,0x2c(%ebx)
   25175:	74 41                	je     251b8 <async_state_change_start+0x138>
   25177:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2517e:	e8 ad 3b ff ff       	call   18d30 <futex_up>
   25183:	8b 73 34             	mov    0x34(%ebx),%esi
   25186:	80 7b 2e 00          	cmpb   $0x0,0x2e(%ebx)
   2518a:	75 68                	jne    251f4 <async_state_change_start+0x174>
   2518c:	89 1c 24             	mov    %ebx,(%esp)
   2518f:	c6 43 2e 01          	movb   $0x1,0x2e(%ebx)
   25193:	e8 48 b0 ff ff       	call   201e0 <free>
   25198:	83 c4 6c             	add    $0x6c,%esp
   2519b:	89 f0                	mov    %esi,%eax
   2519d:	5b                   	pop    %ebx
   2519e:	5e                   	pop    %esi
   2519f:	5f                   	pop    %edi
   251a0:	5d                   	pop    %ebp
   251a1:	c3                   	ret    
   251a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   251a8:	83 c4 6c             	add    $0x6c,%esp
   251ab:	83 c8 ff             	or     $0xffffffff,%eax
   251ae:	5b                   	pop    %ebx
   251af:	5e                   	pop    %esi
   251b0:	5f                   	pop    %edi
   251b1:	5d                   	pop    %ebp
   251b2:	c3                   	ret    
   251b3:	90                   	nop
   251b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   251b8:	e8 73 1e ff ff       	call   17030 <fibril_get_id>
   251bd:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   251c4:	89 03                	mov    %eax,(%ebx)
   251c6:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
   251ca:	c6 43 08 00          	movb   $0x0,0x8(%ebx)
   251ce:	e8 1d 19 ff ff       	call   16af0 <fibril_switch>
   251d3:	eb ae                	jmp    25183 <async_state_change_start+0x103>
   251d5:	8d 76 00             	lea    0x0(%esi),%esi
   251d8:	c7 44 24 08 dc 04 00 	movl   $0x4dc,0x8(%esp)
   251df:	00 
   251e0:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   251e7:	00 
   251e8:	c7 04 24 e2 e4 02 00 	movl   $0x2e4e2,(%esp)
   251ef:	e8 bc 56 00 00       	call   2a8b0 <assert_abort>
   251f4:	e8 88 02 00 00       	call   25481 <amsg_destroy.part.0>
   251f9:	c7 44 24 08 e2 04 00 	movl   $0x4e2,0x8(%esp)
   25200:	00 
   25201:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   25208:	00 
   25209:	c7 04 24 a7 e4 02 00 	movl   $0x2e4a7,(%esp)
   25210:	e8 9b 56 00 00       	call   2a8b0 <assert_abort>
   25215:	c7 44 24 08 e3 04 00 	movl   $0x4e3,0x8(%esp)
   2521c:	00 
   2521d:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   25224:	00 
   25225:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   2522c:	e8 7f 56 00 00       	call   2a8b0 <assert_abort>
   25231:	eb 0d                	jmp    25240 <async_state_change_receive>
   25233:	90                   	nop
   25234:	90                   	nop
   25235:	90                   	nop
   25236:	90                   	nop
   25237:	90                   	nop
   25238:	90                   	nop
   25239:	90                   	nop
   2523a:	90                   	nop
   2523b:	90                   	nop
   2523c:	90                   	nop
   2523d:	90                   	nop
   2523e:	90                   	nop
   2523f:	90                   	nop

00025240 <async_state_change_receive>:
   25240:	55                   	push   %ebp
   25241:	89 e5                	mov    %esp,%ebp
   25243:	53                   	push   %ebx
   25244:	83 ec 44             	sub    $0x44,%esp
   25247:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2524a:	85 db                	test   %ebx,%ebx
   2524c:	74 56                	je     252a4 <async_state_change_receive+0x64>
   2524e:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   25251:	e8 4a c2 ff ff       	call   214a0 <async_get_call_timeout.constprop.11>
   25256:	89 03                	mov    %eax,(%ebx)
   25258:	31 c0                	xor    %eax,%eax
   2525a:	83 7d d4 09          	cmpl   $0x9,-0x2c(%ebp)
   2525e:	74 08                	je     25268 <async_state_change_receive+0x28>
   25260:	83 c4 44             	add    $0x44,%esp
   25263:	5b                   	pop    %ebx
   25264:	5d                   	pop    %ebp
   25265:	c3                   	ret    
   25266:	66 90                	xchg   %ax,%ax
   25268:	8b 45 0c             	mov    0xc(%ebp),%eax
   2526b:	85 c0                	test   %eax,%eax
   2526d:	74 08                	je     25277 <async_state_change_receive+0x37>
   2526f:	8b 55 0c             	mov    0xc(%ebp),%edx
   25272:	8b 45 d8             	mov    -0x28(%ebp),%eax
   25275:	89 02                	mov    %eax,(%edx)
   25277:	8b 45 10             	mov    0x10(%ebp),%eax
   2527a:	85 c0                	test   %eax,%eax
   2527c:	74 08                	je     25286 <async_state_change_receive+0x46>
   2527e:	8b 55 10             	mov    0x10(%ebp),%edx
   25281:	8b 45 dc             	mov    -0x24(%ebp),%eax
   25284:	89 02                	mov    %eax,(%edx)
   25286:	8b 45 14             	mov    0x14(%ebp),%eax
   25289:	85 c0                	test   %eax,%eax
   2528b:	74 13                	je     252a0 <async_state_change_receive+0x60>
   2528d:	8b 55 14             	mov    0x14(%ebp),%edx
   25290:	8b 45 e0             	mov    -0x20(%ebp),%eax
   25293:	89 02                	mov    %eax,(%edx)
   25295:	83 c4 44             	add    $0x44,%esp
   25298:	b0 01                	mov    $0x1,%al
   2529a:	5b                   	pop    %ebx
   2529b:	5d                   	pop    %ebp
   2529c:	c3                   	ret    
   2529d:	8d 76 00             	lea    0x0(%esi),%esi
   252a0:	b0 01                	mov    $0x1,%al
   252a2:	eb bc                	jmp    25260 <async_state_change_receive+0x20>
   252a4:	c7 44 24 08 85 0a 00 	movl   $0xa85,0x8(%esp)
   252ab:	00 
   252ac:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   252b3:	00 
   252b4:	c7 04 24 8e e4 02 00 	movl   $0x2e48e,(%esp)
   252bb:	e8 f0 55 00 00       	call   2a8b0 <assert_abort>

000252c0 <async_state_change_finalize>:
   252c0:	55                   	push   %ebp
   252c1:	89 e5                	mov    %esp,%ebp
   252c3:	83 ec 28             	sub    $0x28,%esp
   252c6:	8b 45 0c             	mov    0xc(%ebp),%eax
   252c9:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   252d0:	00 
   252d1:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   252d8:	00 
   252d9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   252e0:	00 
   252e1:	8b 40 14             	mov    0x14(%eax),%eax
   252e4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   252eb:	00 
   252ec:	89 44 24 08          	mov    %eax,0x8(%esp)
   252f0:	8b 45 08             	mov    0x8(%ebp),%eax
   252f3:	89 04 24             	mov    %eax,(%esp)
   252f6:	e8 75 69 00 00       	call   2bc70 <ipc_answer_fast>
   252fb:	c9                   	leave  
   252fc:	c3                   	ret    
   252fd:	8d 76 00             	lea    0x0(%esi),%esi

00025300 <async_remote_state_acquire>:
   25300:	55                   	push   %ebp
   25301:	89 e5                	mov    %esp,%ebp
   25303:	53                   	push   %ebx
   25304:	83 ec 14             	sub    $0x14,%esp
   25307:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2530a:	8d 43 30             	lea    0x30(%ebx),%eax
   2530d:	89 04 24             	mov    %eax,(%esp)
   25310:	e8 ab 1f ff ff       	call   172c0 <fibril_mutex_lock>
   25315:	8b 43 40             	mov    0x40(%ebx),%eax
   25318:	83 c4 14             	add    $0x14,%esp
   2531b:	5b                   	pop    %ebx
   2531c:	5d                   	pop    %ebp
   2531d:	c3                   	ret    
   2531e:	66 90                	xchg   %ax,%ax

00025320 <async_remote_state_update>:
   25320:	55                   	push   %ebp
   25321:	89 e5                	mov    %esp,%ebp
   25323:	53                   	push   %ebx
   25324:	83 ec 14             	sub    $0x14,%esp
   25327:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2532a:	8d 43 30             	lea    0x30(%ebx),%eax
   2532d:	89 04 24             	mov    %eax,(%esp)
   25330:	e8 bb 21 ff ff       	call   174f0 <fibril_mutex_is_locked>
   25335:	84 c0                	test   %al,%al
   25337:	74 0c                	je     25345 <async_remote_state_update+0x25>
   25339:	8b 45 0c             	mov    0xc(%ebp),%eax
   2533c:	89 43 40             	mov    %eax,0x40(%ebx)
   2533f:	83 c4 14             	add    $0x14,%esp
   25342:	5b                   	pop    %ebx
   25343:	5d                   	pop    %ebp
   25344:	c3                   	ret    
   25345:	c7 44 24 08 b9 0a 00 	movl   $0xab9,0x8(%esp)
   2534c:	00 
   2534d:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   25354:	00 
   25355:	c7 04 24 a0 e5 02 00 	movl   $0x2e5a0,(%esp)
   2535c:	e8 4f 55 00 00       	call   2a8b0 <assert_abort>
   25361:	eb 0d                	jmp    25370 <async_remote_state_release>
   25363:	90                   	nop
   25364:	90                   	nop
   25365:	90                   	nop
   25366:	90                   	nop
   25367:	90                   	nop
   25368:	90                   	nop
   25369:	90                   	nop
   2536a:	90                   	nop
   2536b:	90                   	nop
   2536c:	90                   	nop
   2536d:	90                   	nop
   2536e:	90                   	nop
   2536f:	90                   	nop

00025370 <async_remote_state_release>:
   25370:	55                   	push   %ebp
   25371:	89 e5                	mov    %esp,%ebp
   25373:	53                   	push   %ebx
   25374:	83 ec 14             	sub    $0x14,%esp
   25377:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2537a:	83 c3 30             	add    $0x30,%ebx
   2537d:	89 1c 24             	mov    %ebx,(%esp)
   25380:	e8 6b 21 ff ff       	call   174f0 <fibril_mutex_is_locked>
   25385:	84 c0                	test   %al,%al
   25387:	74 0d                	je     25396 <async_remote_state_release+0x26>
   25389:	89 5d 08             	mov    %ebx,0x8(%ebp)
   2538c:	83 c4 14             	add    $0x14,%esp
   2538f:	5b                   	pop    %ebx
   25390:	5d                   	pop    %ebp
   25391:	e9 4a 20 ff ff       	jmp    173e0 <fibril_mutex_unlock>
   25396:	c7 44 24 08 c7 0a 00 	movl   $0xac7,0x8(%esp)
   2539d:	00 
   2539e:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   253a5:	00 
   253a6:	c7 04 24 a0 e5 02 00 	movl   $0x2e5a0,(%esp)
   253ad:	e8 fe 54 00 00       	call   2a8b0 <assert_abort>
   253b2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   253b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000253c0 <async_remote_state_release_exchange>:
   253c0:	55                   	push   %ebp
   253c1:	89 e5                	mov    %esp,%ebp
   253c3:	57                   	push   %edi
   253c4:	56                   	push   %esi
   253c5:	53                   	push   %ebx
   253c6:	83 ec 1c             	sub    $0x1c,%esp
   253c9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   253cc:	85 db                	test   %ebx,%ebx
   253ce:	0f 84 7c 00 00 00    	je     25450 <async_remote_state_release_exchange+0x90>
   253d4:	8b 7b 10             	mov    0x10(%ebx),%edi
   253d7:	83 c7 30             	add    $0x30,%edi
   253da:	89 3c 24             	mov    %edi,(%esp)
   253dd:	e8 0e 21 ff ff       	call   174f0 <fibril_mutex_is_locked>
   253e2:	84 c0                	test   %al,%al
   253e4:	74 7f                	je     25465 <async_remote_state_release_exchange+0xa5>
   253e6:	8b 73 10             	mov    0x10(%ebx),%esi
   253e9:	f0 ff 4e 2c          	lock decl 0x2c(%esi)
   253ed:	83 7e 08 02          	cmpl   $0x2,0x8(%esi)
   253f1:	74 65                	je     25458 <async_remote_state_release_exchange+0x98>
   253f3:	c7 04 24 10 06 03 00 	movl   $0x30610,(%esp)
   253fa:	e8 c1 1e ff ff       	call   172c0 <fibril_mutex_lock>
   253ff:	8b 06                	mov    (%esi),%eax
   25401:	89 03                	mov    %eax,(%ebx)
   25403:	89 73 04             	mov    %esi,0x4(%ebx)
   25406:	8b 06                	mov    (%esi),%eax
   25408:	89 1e                	mov    %ebx,(%esi)
   2540a:	8b 15 20 06 03 00    	mov    0x30620,%edx
   25410:	89 58 04             	mov    %ebx,0x4(%eax)
   25413:	8d 43 08             	lea    0x8(%ebx),%eax
   25416:	c7 43 0c 20 06 03 00 	movl   $0x30620,0xc(%ebx)
   2541d:	89 53 08             	mov    %edx,0x8(%ebx)
   25420:	89 42 04             	mov    %eax,0x4(%edx)
   25423:	c7 04 24 28 06 03 00 	movl   $0x30628,(%esp)
   2542a:	a3 20 06 03 00       	mov    %eax,0x30620
   2542f:	e8 2c 2b ff ff       	call   17f60 <fibril_condvar_signal>
   25434:	c7 04 24 10 06 03 00 	movl   $0x30610,(%esp)
   2543b:	e8 a0 1f ff ff       	call   173e0 <fibril_mutex_unlock>
   25440:	89 7d 08             	mov    %edi,0x8(%ebp)
   25443:	83 c4 1c             	add    $0x1c,%esp
   25446:	5b                   	pop    %ebx
   25447:	5e                   	pop    %esi
   25448:	5f                   	pop    %edi
   25449:	5d                   	pop    %ebp
   2544a:	e9 91 1f ff ff       	jmp    173e0 <fibril_mutex_unlock>
   2544f:	90                   	nop
   25450:	83 c4 1c             	add    $0x1c,%esp
   25453:	5b                   	pop    %ebx
   25454:	5e                   	pop    %esi
   25455:	5f                   	pop    %edi
   25456:	5d                   	pop    %ebp
   25457:	c3                   	ret    
   25458:	8d 46 1c             	lea    0x1c(%esi),%eax
   2545b:	89 04 24             	mov    %eax,(%esp)
   2545e:	e8 7d 1f ff ff       	call   173e0 <fibril_mutex_unlock>
   25463:	eb 8e                	jmp    253f3 <async_remote_state_release_exchange+0x33>
   25465:	c7 44 24 08 dc 0a 00 	movl   $0xadc,0x8(%esp)
   2546c:	00 
   2546d:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   25474:	00 
   25475:	c7 04 24 a0 e5 02 00 	movl   $0x2e5a0,(%esp)
   2547c:	e8 2f 54 00 00       	call   2a8b0 <assert_abort>

00025481 <amsg_destroy.part.0>:
   25481:	55                   	push   %ebp
   25482:	89 e5                	mov    %esp,%ebp
   25484:	83 ec 18             	sub    $0x18,%esp
   25487:	c7 44 24 08 23 01 00 	movl   $0x123,0x8(%esp)
   2548e:	00 
   2548f:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   25496:	00 
   25497:	c7 04 24 7a e4 02 00 	movl   $0x2e47a,(%esp)
   2549e:	e8 0d 54 00 00       	call   2a8b0 <assert_abort>

000254a3 <async_data_write_receive.part.7>:
   254a3:	55                   	push   %ebp
   254a4:	89 e5                	mov    %esp,%ebp
   254a6:	83 ec 18             	sub    $0x18,%esp
   254a9:	c7 44 24 08 45 09 00 	movl   $0x945,0x8(%esp)
   254b0:	00 
   254b1:	c7 44 24 04 6a e4 02 	movl   $0x2e46a,0x4(%esp)
   254b8:	00 
   254b9:	c7 04 24 8e e4 02 00 	movl   $0x2e48e,(%esp)
   254c0:	e8 eb 53 00 00       	call   2a8b0 <assert_abort>
   254c5:	66 90                	xchg   %ax,%ax
   254c7:	66 90                	xchg   %ax,%ax
   254c9:	66 90                	xchg   %ax,%ax
   254cb:	66 90                	xchg   %ax,%ax
   254cd:	66 90                	xchg   %ax,%ax
   254cf:	90                   	nop

000254d0 <loader_spawn>:
   254d0:	55                   	push   %ebp
   254d1:	89 e5                	mov    %esp,%ebp
   254d3:	56                   	push   %esi
   254d4:	53                   	push   %ebx
   254d5:	83 ec 20             	sub    $0x20,%esp
   254d8:	8b 5d 08             	mov    0x8(%ebp),%ebx
   254db:	8b 35 54 06 03 00    	mov    0x30654,%esi
   254e1:	89 1c 24             	mov    %ebx,(%esp)
   254e4:	e8 07 eb fe ff       	call   13ff0 <str_size>
   254e9:	89 1c 24             	mov    %ebx,(%esp)
   254ec:	c7 44 24 18 0b 00 00 	movl   $0xb,0x18(%esp)
   254f3:	00 
   254f4:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   254fb:	00 
   254fc:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   25503:	00 
   25504:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2550b:	00 
   2550c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   25513:	00 
   25514:	89 44 24 04          	mov    %eax,0x4(%esp)
   25518:	ff d6                	call   *%esi
   2551a:	83 c4 20             	add    $0x20,%esp
   2551d:	5b                   	pop    %ebx
   2551e:	5e                   	pop    %esi
   2551f:	5d                   	pop    %ebp
   25520:	c3                   	ret    
   25521:	eb 0d                	jmp    25530 <loader_connect>
   25523:	90                   	nop
   25524:	90                   	nop
   25525:	90                   	nop
   25526:	90                   	nop
   25527:	90                   	nop
   25528:	90                   	nop
   25529:	90                   	nop
   2552a:	90                   	nop
   2552b:	90                   	nop
   2552c:	90                   	nop
   2552d:	90                   	nop
   2552e:	90                   	nop
   2552f:	90                   	nop

00025530 <loader_connect>:
   25530:	55                   	push   %ebp
   25531:	89 e5                	mov    %esp,%ebp
   25533:	53                   	push   %ebx
   25534:	83 ec 14             	sub    $0x14,%esp
   25537:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)
   2553e:	e8 8d ab ff ff       	call   200d0 <malloc>
   25543:	89 c3                	mov    %eax,%ebx
   25545:	85 c0                	test   %eax,%eax
   25547:	74 2a                	je     25573 <loader_connect+0x43>
   25549:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   25550:	00 
   25551:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   25558:	00 
   25559:	c7 44 24 04 6c 6f 61 	movl   $0x64616f6c,0x4(%esp)
   25560:	64 
   25561:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   25568:	e8 f3 b3 ff ff       	call   20960 <service_connect_blocking>
   2556d:	85 c0                	test   %eax,%eax
   2556f:	74 0a                	je     2557b <loader_connect+0x4b>
   25571:	89 03                	mov    %eax,(%ebx)
   25573:	83 c4 14             	add    $0x14,%esp
   25576:	89 d8                	mov    %ebx,%eax
   25578:	5b                   	pop    %ebx
   25579:	5d                   	pop    %ebp
   2557a:	c3                   	ret    
   2557b:	89 1c 24             	mov    %ebx,(%esp)
   2557e:	31 db                	xor    %ebx,%ebx
   25580:	e8 5b ac ff ff       	call   201e0 <free>
   25585:	eb ec                	jmp    25573 <loader_connect+0x43>
   25587:	89 f6                	mov    %esi,%esi
   25589:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00025590 <loader_get_task_id>:
   25590:	55                   	push   %ebp
   25591:	89 e5                	mov    %esp,%ebp
   25593:	56                   	push   %esi
   25594:	53                   	push   %ebx
   25595:	83 ec 50             	sub    $0x50,%esp
   25598:	8b 45 08             	mov    0x8(%ebp),%eax
   2559b:	8b 00                	mov    (%eax),%eax
   2559d:	89 04 24             	mov    %eax,(%esp)
   255a0:	e8 6b e0 ff ff       	call   23610 <async_exchange_begin>
   255a5:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   255ac:	00 
   255ad:	89 c3                	mov    %eax,%ebx
   255af:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   255b2:	89 44 24 18          	mov    %eax,0x18(%esp)
   255b6:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   255bd:	00 
   255be:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   255c5:	00 
   255c6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   255cd:	00 
   255ce:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)
   255d5:	00 
   255d6:	89 1c 24             	mov    %ebx,(%esp)
   255d9:	e8 d2 c9 ff ff       	call   21fb0 <async_send_fast>
   255de:	c7 44 24 08 08 00 00 	movl   $0x8,0x8(%esp)
   255e5:	00 
   255e6:	89 c6                	mov    %eax,%esi
   255e8:	8b 45 0c             	mov    0xc(%ebp),%eax
   255eb:	89 44 24 04          	mov    %eax,0x4(%esp)
   255ef:	89 1c 24             	mov    %ebx,(%esp)
   255f2:	e8 e9 e9 ff ff       	call   23fe0 <async_data_read_start>
   255f7:	89 1c 24             	mov    %ebx,(%esp)
   255fa:	89 45 d0             	mov    %eax,-0x30(%ebp)
   255fd:	e8 7e e3 ff ff       	call   23980 <async_exchange_end>
   25602:	8b 45 d0             	mov    -0x30(%ebp),%eax
   25605:	85 c0                	test   %eax,%eax
   25607:	75 1f                	jne    25628 <loader_get_task_id+0x98>
   25609:	8d 45 d0             	lea    -0x30(%ebp),%eax
   2560c:	89 34 24             	mov    %esi,(%esp)
   2560f:	89 44 24 04          	mov    %eax,0x4(%esp)
   25613:	e8 68 cb ff ff       	call   22180 <async_wait_for>
   25618:	8b 45 d0             	mov    -0x30(%ebp),%eax
   2561b:	83 c4 50             	add    $0x50,%esp
   2561e:	5b                   	pop    %ebx
   2561f:	5e                   	pop    %esi
   25620:	5d                   	pop    %ebp
   25621:	c3                   	ret    
   25622:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   25628:	89 34 24             	mov    %esi,(%esp)
   2562b:	e8 a0 cd ff ff       	call   223d0 <async_forget>
   25630:	8b 45 d0             	mov    -0x30(%ebp),%eax
   25633:	83 c4 50             	add    $0x50,%esp
   25636:	5b                   	pop    %ebx
   25637:	5e                   	pop    %esi
   25638:	5d                   	pop    %ebp
   25639:	c3                   	ret    
   2563a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00025640 <loader_set_cwd>:
   25640:	55                   	push   %ebp
   25641:	89 e5                	mov    %esp,%ebp
   25643:	57                   	push   %edi
   25644:	56                   	push   %esi
   25645:	53                   	push   %ebx
   25646:	83 ec 6c             	sub    $0x6c,%esp
   25649:	c7 04 24 01 00 01 00 	movl   $0x10001,(%esp)
   25650:	e8 7b aa ff ff       	call   200d0 <malloc>
   25655:	89 c3                	mov    %eax,%ebx
   25657:	85 c0                	test   %eax,%eax
   25659:	0f 84 f1 00 00 00    	je     25750 <loader_set_cwd+0x110>
   2565f:	c7 44 24 04 01 00 01 	movl   $0x10001,0x4(%esp)
   25666:	00 
   25667:	89 04 24             	mov    %eax,(%esp)
   2566a:	e8 31 48 00 00       	call   29ea0 <getcwd>
   2566f:	85 c0                	test   %eax,%eax
   25671:	0f 84 b9 00 00 00    	je     25730 <loader_set_cwd+0xf0>
   25677:	89 1c 24             	mov    %ebx,(%esp)
   2567a:	e8 51 eb fe ff       	call   141d0 <str_length>
   2567f:	89 c2                	mov    %eax,%edx
   25681:	8b 45 08             	mov    0x8(%ebp),%eax
   25684:	8b 00                	mov    (%eax),%eax
   25686:	89 55 b4             	mov    %edx,-0x4c(%ebp)
   25689:	89 04 24             	mov    %eax,(%esp)
   2568c:	e8 7f df ff ff       	call   23610 <async_exchange_begin>
   25691:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   25698:	00 
   25699:	89 c6                	mov    %eax,%esi
   2569b:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   2569e:	89 44 24 18          	mov    %eax,0x18(%esp)
   256a2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   256a9:	00 
   256aa:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   256b1:	00 
   256b2:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   256b9:	00 
   256ba:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)
   256c1:	00 
   256c2:	89 34 24             	mov    %esi,(%esp)
   256c5:	e8 e6 c8 ff ff       	call   21fb0 <async_send_fast>
   256ca:	8b 55 b4             	mov    -0x4c(%ebp),%edx
   256cd:	89 54 24 08          	mov    %edx,0x8(%esp)
   256d1:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   256d5:	89 34 24             	mov    %esi,(%esp)
   256d8:	89 c7                	mov    %eax,%edi
   256da:	e8 21 ee ff ff       	call   24500 <async_data_write_start>
   256df:	89 34 24             	mov    %esi,(%esp)
   256e2:	89 45 c0             	mov    %eax,-0x40(%ebp)
   256e5:	e8 96 e2 ff ff       	call   23980 <async_exchange_end>
   256ea:	89 1c 24             	mov    %ebx,(%esp)
   256ed:	e8 ee aa ff ff       	call   201e0 <free>
   256f2:	8b 55 c0             	mov    -0x40(%ebp),%edx
   256f5:	85 d2                	test   %edx,%edx
   256f7:	75 1f                	jne    25718 <loader_set_cwd+0xd8>
   256f9:	8d 45 c0             	lea    -0x40(%ebp),%eax
   256fc:	89 3c 24             	mov    %edi,(%esp)
   256ff:	89 44 24 04          	mov    %eax,0x4(%esp)
   25703:	e8 78 ca ff ff       	call   22180 <async_wait_for>
   25708:	8b 45 c0             	mov    -0x40(%ebp),%eax
   2570b:	83 c4 6c             	add    $0x6c,%esp
   2570e:	5b                   	pop    %ebx
   2570f:	5e                   	pop    %esi
   25710:	5f                   	pop    %edi
   25711:	5d                   	pop    %ebp
   25712:	c3                   	ret    
   25713:	90                   	nop
   25714:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   25718:	89 3c 24             	mov    %edi,(%esp)
   2571b:	e8 b0 cc ff ff       	call   223d0 <async_forget>
   25720:	8b 45 c0             	mov    -0x40(%ebp),%eax
   25723:	83 c4 6c             	add    $0x6c,%esp
   25726:	5b                   	pop    %ebx
   25727:	5e                   	pop    %esi
   25728:	5f                   	pop    %edi
   25729:	5d                   	pop    %ebp
   2572a:	c3                   	ret    
   2572b:	90                   	nop
   2572c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   25730:	c7 44 24 08 d0 e5 02 	movl   $0x2e5d0,0x8(%esp)
   25737:	00 
   25738:	c7 44 24 04 01 00 01 	movl   $0x10001,0x4(%esp)
   2573f:	00 
   25740:	89 1c 24             	mov    %ebx,(%esp)
   25743:	e8 58 f4 fe ff       	call   14ba0 <str_cpy>
   25748:	e9 2a ff ff ff       	jmp    25677 <loader_set_cwd+0x37>
   2574d:	8d 76 00             	lea    0x0(%esi),%esi
   25750:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   25755:	eb b4                	jmp    2570b <loader_set_cwd+0xcb>
   25757:	89 f6                	mov    %esi,%esi
   25759:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00025760 <loader_set_pathname>:
   25760:	55                   	push   %ebp
   25761:	89 e5                	mov    %esp,%ebp
   25763:	57                   	push   %edi
   25764:	56                   	push   %esi
   25765:	53                   	push   %ebx
   25766:	83 ec 5c             	sub    $0x5c,%esp
   25769:	8d 45 bc             	lea    -0x44(%ebp),%eax
   2576c:	89 44 24 04          	mov    %eax,0x4(%esp)
   25770:	8b 45 0c             	mov    0xc(%ebp),%eax
   25773:	89 04 24             	mov    %eax,(%esp)
   25776:	e8 45 2a 00 00       	call   281c0 <absolutize>
   2577b:	89 c3                	mov    %eax,%ebx
   2577d:	85 c0                	test   %eax,%eax
   2577f:	0f 84 ab 00 00 00    	je     25830 <loader_set_pathname+0xd0>
   25785:	8b 45 08             	mov    0x8(%ebp),%eax
   25788:	8b 00                	mov    (%eax),%eax
   2578a:	89 04 24             	mov    %eax,(%esp)
   2578d:	e8 7e de ff ff       	call   23610 <async_exchange_begin>
   25792:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   25799:	00 
   2579a:	89 c6                	mov    %eax,%esi
   2579c:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   2579f:	89 44 24 18          	mov    %eax,0x18(%esp)
   257a3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   257aa:	00 
   257ab:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   257b2:	00 
   257b3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   257ba:	00 
   257bb:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)
   257c2:	00 
   257c3:	89 34 24             	mov    %esi,(%esp)
   257c6:	e8 e5 c7 ff ff       	call   21fb0 <async_send_fast>
   257cb:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   257cf:	89 c7                	mov    %eax,%edi
   257d1:	8b 45 bc             	mov    -0x44(%ebp),%eax
   257d4:	89 44 24 08          	mov    %eax,0x8(%esp)
   257d8:	89 34 24             	mov    %esi,(%esp)
   257db:	e8 20 ed ff ff       	call   24500 <async_data_write_start>
   257e0:	89 34 24             	mov    %esi,(%esp)
   257e3:	89 45 c0             	mov    %eax,-0x40(%ebp)
   257e6:	e8 95 e1 ff ff       	call   23980 <async_exchange_end>
   257eb:	89 1c 24             	mov    %ebx,(%esp)
   257ee:	e8 ed a9 ff ff       	call   201e0 <free>
   257f3:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   257f6:	85 c9                	test   %ecx,%ecx
   257f8:	75 1e                	jne    25818 <loader_set_pathname+0xb8>
   257fa:	8d 45 c0             	lea    -0x40(%ebp),%eax
   257fd:	89 3c 24             	mov    %edi,(%esp)
   25800:	89 44 24 04          	mov    %eax,0x4(%esp)
   25804:	e8 77 c9 ff ff       	call   22180 <async_wait_for>
   25809:	8b 45 c0             	mov    -0x40(%ebp),%eax
   2580c:	83 c4 5c             	add    $0x5c,%esp
   2580f:	5b                   	pop    %ebx
   25810:	5e                   	pop    %esi
   25811:	5f                   	pop    %edi
   25812:	5d                   	pop    %ebp
   25813:	c3                   	ret    
   25814:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   25818:	89 3c 24             	mov    %edi,(%esp)
   2581b:	e8 b0 cb ff ff       	call   223d0 <async_forget>
   25820:	8b 45 c0             	mov    -0x40(%ebp),%eax
   25823:	83 c4 5c             	add    $0x5c,%esp
   25826:	5b                   	pop    %ebx
   25827:	5e                   	pop    %esi
   25828:	5f                   	pop    %edi
   25829:	5d                   	pop    %ebp
   2582a:	c3                   	ret    
   2582b:	90                   	nop
   2582c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   25830:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   25835:	eb d5                	jmp    2580c <loader_set_pathname+0xac>
   25837:	89 f6                	mov    %esi,%esi
   25839:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00025840 <loader_set_args>:
   25840:	55                   	push   %ebp
   25841:	89 e5                	mov    %esp,%ebp
   25843:	57                   	push   %edi
   25844:	56                   	push   %esi
   25845:	53                   	push   %ebx
   25846:	83 ec 6c             	sub    $0x6c,%esp
   25849:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   2584c:	8b 03                	mov    (%ebx),%eax
   2584e:	85 c0                	test   %eax,%eax
   25850:	0f 84 0d 01 00 00    	je     25963 <loader_set_args+0x123>
   25856:	89 df                	mov    %ebx,%edi
   25858:	31 f6                	xor    %esi,%esi
   2585a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   25860:	89 04 24             	mov    %eax,(%esp)
   25863:	83 c7 04             	add    $0x4,%edi
   25866:	e8 85 e7 fe ff       	call   13ff0 <str_size>
   2586b:	8d 74 30 01          	lea    0x1(%eax,%esi,1),%esi
   2586f:	8b 07                	mov    (%edi),%eax
   25871:	85 c0                	test   %eax,%eax
   25873:	75 eb                	jne    25860 <loader_set_args+0x20>
   25875:	89 34 24             	mov    %esi,(%esp)
   25878:	e8 53 a8 ff ff       	call   200d0 <malloc>
   2587d:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   25880:	85 c0                	test   %eax,%eax
   25882:	0f 84 e2 00 00 00    	je     2596a <loader_set_args+0x12a>
   25888:	89 c7                	mov    %eax,%edi
   2588a:	8b 03                	mov    (%ebx),%eax
   2588c:	85 c0                	test   %eax,%eax
   2588e:	74 2e                	je     258be <loader_set_args+0x7e>
   25890:	89 44 24 08          	mov    %eax,0x8(%esp)
   25894:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   25897:	29 f8                	sub    %edi,%eax
   25899:	89 3c 24             	mov    %edi,(%esp)
   2589c:	01 f0                	add    %esi,%eax
   2589e:	89 44 24 04          	mov    %eax,0x4(%esp)
   258a2:	e8 f9 f2 fe ff       	call   14ba0 <str_cpy>
   258a7:	8b 03                	mov    (%ebx),%eax
   258a9:	89 04 24             	mov    %eax,(%esp)
   258ac:	83 c3 04             	add    $0x4,%ebx
   258af:	e8 3c e7 fe ff       	call   13ff0 <str_size>
   258b4:	8d 7c 07 01          	lea    0x1(%edi,%eax,1),%edi
   258b8:	8b 03                	mov    (%ebx),%eax
   258ba:	85 c0                	test   %eax,%eax
   258bc:	75 d2                	jne    25890 <loader_set_args+0x50>
   258be:	8b 45 08             	mov    0x8(%ebp),%eax
   258c1:	8b 00                	mov    (%eax),%eax
   258c3:	89 04 24             	mov    %eax,(%esp)
   258c6:	e8 45 dd ff ff       	call   23610 <async_exchange_begin>
   258cb:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   258d2:	00 
   258d3:	89 c3                	mov    %eax,%ebx
   258d5:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   258d8:	89 1c 24             	mov    %ebx,(%esp)
   258db:	89 44 24 18          	mov    %eax,0x18(%esp)
   258df:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   258e6:	00 
   258e7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   258ee:	00 
   258ef:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   258f6:	00 
   258f7:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)
   258fe:	00 
   258ff:	e8 ac c6 ff ff       	call   21fb0 <async_send_fast>
   25904:	89 1c 24             	mov    %ebx,(%esp)
   25907:	89 c7                	mov    %eax,%edi
   25909:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   2590c:	89 74 24 08          	mov    %esi,0x8(%esp)
   25910:	89 44 24 04          	mov    %eax,0x4(%esp)
   25914:	e8 e7 eb ff ff       	call   24500 <async_data_write_start>
   25919:	89 1c 24             	mov    %ebx,(%esp)
   2591c:	89 45 c0             	mov    %eax,-0x40(%ebp)
   2591f:	e8 5c e0 ff ff       	call   23980 <async_exchange_end>
   25924:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   25927:	89 04 24             	mov    %eax,(%esp)
   2592a:	e8 b1 a8 ff ff       	call   201e0 <free>
   2592f:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   25932:	85 db                	test   %ebx,%ebx
   25934:	75 1a                	jne    25950 <loader_set_args+0x110>
   25936:	8d 45 c0             	lea    -0x40(%ebp),%eax
   25939:	89 3c 24             	mov    %edi,(%esp)
   2593c:	89 44 24 04          	mov    %eax,0x4(%esp)
   25940:	e8 3b c8 ff ff       	call   22180 <async_wait_for>
   25945:	8b 45 c0             	mov    -0x40(%ebp),%eax
   25948:	83 c4 6c             	add    $0x6c,%esp
   2594b:	5b                   	pop    %ebx
   2594c:	5e                   	pop    %esi
   2594d:	5f                   	pop    %edi
   2594e:	5d                   	pop    %ebp
   2594f:	c3                   	ret    
   25950:	89 3c 24             	mov    %edi,(%esp)
   25953:	e8 78 ca ff ff       	call   223d0 <async_forget>
   25958:	8b 45 c0             	mov    -0x40(%ebp),%eax
   2595b:	83 c4 6c             	add    $0x6c,%esp
   2595e:	5b                   	pop    %ebx
   2595f:	5e                   	pop    %esi
   25960:	5f                   	pop    %edi
   25961:	5d                   	pop    %ebp
   25962:	c3                   	ret    
   25963:	31 f6                	xor    %esi,%esi
   25965:	e9 0b ff ff ff       	jmp    25875 <loader_set_args+0x35>
   2596a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   2596f:	eb d7                	jmp    25948 <loader_set_args+0x108>
   25971:	eb 0d                	jmp    25980 <loader_set_files>
   25973:	90                   	nop
   25974:	90                   	nop
   25975:	90                   	nop
   25976:	90                   	nop
   25977:	90                   	nop
   25978:	90                   	nop
   25979:	90                   	nop
   2597a:	90                   	nop
   2597b:	90                   	nop
   2597c:	90                   	nop
   2597d:	90                   	nop
   2597e:	90                   	nop
   2597f:	90                   	nop

00025980 <loader_set_files>:
   25980:	55                   	push   %ebp
   25981:	89 e5                	mov    %esp,%ebp
   25983:	57                   	push   %edi
   25984:	56                   	push   %esi
   25985:	53                   	push   %ebx
   25986:	83 ec 6c             	sub    $0x6c,%esp
   25989:	8b 45 08             	mov    0x8(%ebp),%eax
   2598c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   2598f:	8b 00                	mov    (%eax),%eax
   25991:	89 04 24             	mov    %eax,(%esp)
   25994:	e8 77 dc ff ff       	call   23610 <async_exchange_begin>
   25999:	89 c6                	mov    %eax,%esi
   2599b:	e8 a0 27 00 00       	call   28140 <vfs_exchange_begin>
   259a0:	89 c7                	mov    %eax,%edi
   259a2:	8b 03                	mov    (%ebx),%eax
   259a4:	85 c0                	test   %eax,%eax
   259a6:	0f 84 da 00 00 00    	je     25a86 <loader_set_files+0x106>
   259ac:	31 c0                	xor    %eax,%eax
   259ae:	66 90                	xchg   %ax,%ax
   259b0:	40                   	inc    %eax
   259b1:	89 c2                	mov    %eax,%edx
   259b3:	8b 0c 83             	mov    (%ebx,%eax,4),%ecx
   259b6:	85 c9                	test   %ecx,%ecx
   259b8:	75 f6                	jne    259b0 <loader_set_files+0x30>
   259ba:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   259bd:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   259c4:	00 
   259c5:	89 44 24 18          	mov    %eax,0x18(%esp)
   259c9:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   259d0:	00 
   259d1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   259d8:	00 
   259d9:	89 54 24 08          	mov    %edx,0x8(%esp)
   259dd:	c7 44 24 04 05 04 00 	movl   $0x405,0x4(%esp)
   259e4:	00 
   259e5:	89 34 24             	mov    %esi,(%esp)
   259e8:	e8 c3 c5 ff ff       	call   21fb0 <async_send_fast>
   259ed:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
   259f4:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   259f7:	8b 03                	mov    (%ebx),%eax
   259f9:	83 c3 04             	add    $0x4,%ebx
   259fc:	85 c0                	test   %eax,%eax
   259fe:	75 12                	jne    25a12 <loader_set_files+0x92>
   25a00:	eb 39                	jmp    25a3b <loader_set_files+0xbb>
   25a02:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   25a08:	83 c3 04             	add    $0x4,%ebx
   25a0b:	8b 43 fc             	mov    -0x4(%ebx),%eax
   25a0e:	85 c0                	test   %eax,%eax
   25a10:	74 29                	je     25a3b <loader_set_files+0xbb>
   25a12:	89 7c 24 10          	mov    %edi,0x10(%esp)
   25a16:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   25a1d:	00 
   25a1e:	8b 00                	mov    (%eax),%eax
   25a20:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   25a27:	00 
   25a28:	89 44 24 08          	mov    %eax,0x8(%esp)
   25a2c:	89 34 24             	mov    %esi,(%esp)
   25a2f:	e8 4c f6 ff ff       	call   25080 <async_state_change_start>
   25a34:	89 45 c0             	mov    %eax,-0x40(%ebp)
   25a37:	85 c0                	test   %eax,%eax
   25a39:	74 cd                	je     25a08 <loader_set_files+0x88>
   25a3b:	89 3c 24             	mov    %edi,(%esp)
   25a3e:	e8 6d 27 00 00       	call   281b0 <vfs_exchange_end>
   25a43:	89 34 24             	mov    %esi,(%esp)
   25a46:	e8 35 df ff ff       	call   23980 <async_exchange_end>
   25a4b:	8b 75 c0             	mov    -0x40(%ebp),%esi
   25a4e:	85 f6                	test   %esi,%esi
   25a50:	75 1e                	jne    25a70 <loader_set_files+0xf0>
   25a52:	8d 45 c0             	lea    -0x40(%ebp),%eax
   25a55:	89 44 24 04          	mov    %eax,0x4(%esp)
   25a59:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   25a5c:	89 04 24             	mov    %eax,(%esp)
   25a5f:	e8 1c c7 ff ff       	call   22180 <async_wait_for>
   25a64:	8b 45 c0             	mov    -0x40(%ebp),%eax
   25a67:	83 c4 6c             	add    $0x6c,%esp
   25a6a:	5b                   	pop    %ebx
   25a6b:	5e                   	pop    %esi
   25a6c:	5f                   	pop    %edi
   25a6d:	5d                   	pop    %ebp
   25a6e:	c3                   	ret    
   25a6f:	90                   	nop
   25a70:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   25a73:	89 04 24             	mov    %eax,(%esp)
   25a76:	e8 55 c9 ff ff       	call   223d0 <async_forget>
   25a7b:	8b 45 c0             	mov    -0x40(%ebp),%eax
   25a7e:	83 c4 6c             	add    $0x6c,%esp
   25a81:	5b                   	pop    %ebx
   25a82:	5e                   	pop    %esi
   25a83:	5f                   	pop    %edi
   25a84:	5d                   	pop    %ebp
   25a85:	c3                   	ret    
   25a86:	31 d2                	xor    %edx,%edx
   25a88:	e9 2d ff ff ff       	jmp    259ba <loader_set_files+0x3a>
   25a8d:	8d 76 00             	lea    0x0(%esi),%esi

00025a90 <loader_load_program>:
   25a90:	55                   	push   %ebp
   25a91:	89 e5                	mov    %esp,%ebp
   25a93:	53                   	push   %ebx
   25a94:	83 ec 44             	sub    $0x44,%esp
   25a97:	8b 45 08             	mov    0x8(%ebp),%eax
   25a9a:	8b 00                	mov    (%eax),%eax
   25a9c:	89 04 24             	mov    %eax,(%esp)
   25a9f:	e8 6c db ff ff       	call   23610 <async_exchange_begin>
   25aa4:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   25aab:	00 
   25aac:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   25ab3:	00 
   25ab4:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   25abb:	00 
   25abc:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   25ac3:	00 
   25ac4:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   25acb:	00 
   25acc:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   25ad3:	00 
   25ad4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   25adb:	00 
   25adc:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   25ae3:	00 
   25ae4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   25aeb:	00 
   25aec:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)
   25af3:	00 
   25af4:	89 04 24             	mov    %eax,(%esp)
   25af7:	89 c3                	mov    %eax,%ebx
   25af9:	e8 c2 ca ff ff       	call   225c0 <async_req_fast>
   25afe:	89 1c 24             	mov    %ebx,(%esp)
   25b01:	89 45 f4             	mov    %eax,-0xc(%ebp)
   25b04:	e8 77 de ff ff       	call   23980 <async_exchange_end>
   25b09:	8b 45 f4             	mov    -0xc(%ebp),%eax
   25b0c:	83 c4 44             	add    $0x44,%esp
   25b0f:	5b                   	pop    %ebx
   25b10:	5d                   	pop    %ebp
   25b11:	c3                   	ret    
   25b12:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25b19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00025b20 <loader_run>:
   25b20:	55                   	push   %ebp
   25b21:	89 e5                	mov    %esp,%ebp
   25b23:	57                   	push   %edi
   25b24:	56                   	push   %esi
   25b25:	53                   	push   %ebx
   25b26:	83 ec 3c             	sub    $0x3c,%esp
   25b29:	8b 7d 08             	mov    0x8(%ebp),%edi
   25b2c:	8b 07                	mov    (%edi),%eax
   25b2e:	89 04 24             	mov    %eax,(%esp)
   25b31:	e8 da da ff ff       	call   23610 <async_exchange_begin>
   25b36:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   25b3d:	00 
   25b3e:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   25b45:	00 
   25b46:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   25b4d:	00 
   25b4e:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   25b55:	00 
   25b56:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   25b5d:	00 
   25b5e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   25b65:	00 
   25b66:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   25b6d:	00 
   25b6e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   25b75:	00 
   25b76:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   25b7d:	00 
   25b7e:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)
   25b85:	00 
   25b86:	89 04 24             	mov    %eax,(%esp)
   25b89:	89 c6                	mov    %eax,%esi
   25b8b:	e8 30 ca ff ff       	call   225c0 <async_req_fast>
   25b90:	89 34 24             	mov    %esi,(%esp)
   25b93:	89 c3                	mov    %eax,%ebx
   25b95:	e8 e6 dd ff ff       	call   23980 <async_exchange_end>
   25b9a:	85 db                	test   %ebx,%ebx
   25b9c:	75 12                	jne    25bb0 <loader_run+0x90>
   25b9e:	8b 07                	mov    (%edi),%eax
   25ba0:	89 04 24             	mov    %eax,(%esp)
   25ba3:	e8 68 d9 ff ff       	call   23510 <async_hangup>
   25ba8:	89 3c 24             	mov    %edi,(%esp)
   25bab:	e8 30 a6 ff ff       	call   201e0 <free>
   25bb0:	83 c4 3c             	add    $0x3c,%esp
   25bb3:	89 d8                	mov    %ebx,%eax
   25bb5:	5b                   	pop    %ebx
   25bb6:	5e                   	pop    %esi
   25bb7:	5f                   	pop    %edi
   25bb8:	5d                   	pop    %ebp
   25bb9:	c3                   	ret    
   25bba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00025bc0 <loader_abort>:
   25bc0:	55                   	push   %ebp
   25bc1:	89 e5                	mov    %esp,%ebp
   25bc3:	53                   	push   %ebx
   25bc4:	83 ec 14             	sub    $0x14,%esp
   25bc7:	8b 5d 08             	mov    0x8(%ebp),%ebx
   25bca:	8b 03                	mov    (%ebx),%eax
   25bcc:	89 04 24             	mov    %eax,(%esp)
   25bcf:	e8 3c d9 ff ff       	call   23510 <async_hangup>
   25bd4:	89 5d 08             	mov    %ebx,0x8(%ebp)
   25bd7:	83 c4 14             	add    $0x14,%esp
   25bda:	5b                   	pop    %ebx
   25bdb:	5d                   	pop    %ebp
   25bdc:	e9 ff a5 ff ff       	jmp    201e0 <free>
   25be1:	66 90                	xchg   %ax,%ax
   25be3:	66 90                	xchg   %ax,%ax
   25be5:	66 90                	xchg   %ax,%ax
   25be7:	66 90                	xchg   %ax,%ax
   25be9:	66 90                	xchg   %ax,%ax
   25beb:	66 90                	xchg   %ax,%ax
   25bed:	66 90                	xchg   %ax,%ax
   25bef:	90                   	nop

00025bf0 <nop_remove_callback>:
   25bf0:	55                   	push   %ebp
   25bf1:	89 e5                	mov    %esp,%ebp
   25bf3:	5d                   	pop    %ebp
   25bf4:	c3                   	ret    
   25bf5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   25bf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00025c00 <resize>:
   25c00:	55                   	push   %ebp
   25c01:	89 e5                	mov    %esp,%ebp
   25c03:	57                   	push   %edi
   25c04:	56                   	push   %esi
   25c05:	53                   	push   %ebx
   25c06:	83 ec 2c             	sub    $0x2c,%esp
   25c09:	89 c6                	mov    %eax,%esi
   25c0b:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   25c0e:	85 c0                	test   %eax,%eax
   25c10:	0f 84 1a 01 00 00    	je     25d30 <resize+0x130>
   25c16:	8b 48 04             	mov    0x4(%eax),%ecx
   25c19:	85 c9                	test   %ecx,%ecx
   25c1b:	0f 84 0f 01 00 00    	je     25d30 <resize+0x130>
   25c21:	83 7d e4 58          	cmpl   $0x58,-0x1c(%ebp)
   25c25:	0f 86 21 01 00 00    	jbe    25d4c <resize+0x14c>
   25c2b:	80 78 18 00          	cmpb   $0x0,0x18(%eax)
   25c2f:	74 0f                	je     25c40 <resize+0x40>
   25c31:	83 c4 2c             	add    $0x2c,%esp
   25c34:	5b                   	pop    %ebx
   25c35:	5e                   	pop    %esi
   25c36:	5f                   	pop    %edi
   25c37:	5d                   	pop    %ebp
   25c38:	c3                   	ret    
   25c39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25c40:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   25c43:	c1 e3 03             	shl    $0x3,%ebx
   25c46:	89 1c 24             	mov    %ebx,(%esp)
   25c49:	e8 82 a4 ff ff       	call   200d0 <malloc>
   25c4e:	89 45 dc             	mov    %eax,-0x24(%ebp)
   25c51:	85 c0                	test   %eax,%eax
   25c53:	74 dc                	je     25c31 <resize+0x31>
   25c55:	89 c2                	mov    %eax,%edx
   25c57:	01 da                	add    %ebx,%edx
   25c59:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25c60:	89 00                	mov    %eax,(%eax)
   25c62:	89 40 04             	mov    %eax,0x4(%eax)
   25c65:	83 c0 08             	add    $0x8,%eax
   25c68:	39 d0                	cmp    %edx,%eax
   25c6a:	75 f4                	jne    25c60 <resize+0x60>
   25c6c:	8b 46 10             	mov    0x10(%esi),%eax
   25c6f:	85 c0                	test   %eax,%eax
   25c71:	0f 84 91 00 00 00    	je     25d08 <resize+0x108>
   25c77:	8b 4e 08             	mov    0x8(%esi),%ecx
   25c7a:	85 c9                	test   %ecx,%ecx
   25c7c:	0f 84 86 00 00 00    	je     25d08 <resize+0x108>
   25c82:	8b 46 04             	mov    0x4(%esi),%eax
   25c85:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
   25c8c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   25c90:	8b 55 d8             	mov    -0x28(%ebp),%edx
   25c93:	c1 e2 03             	shl    $0x3,%edx
   25c96:	89 55 e0             	mov    %edx,-0x20(%ebp)
   25c99:	01 c2                	add    %eax,%edx
   25c9b:	8b 5a 04             	mov    0x4(%edx),%ebx
   25c9e:	39 d3                	cmp    %edx,%ebx
   25ca0:	8b 7b 04             	mov    0x4(%ebx),%edi
   25ca3:	75 05                	jne    25caa <resize+0xaa>
   25ca5:	eb 51                	jmp    25cf8 <resize+0xf8>
   25ca7:	90                   	nop
   25ca8:	89 d7                	mov    %edx,%edi
   25caa:	8b 06                	mov    (%esi),%eax
   25cac:	89 1c 24             	mov    %ebx,(%esp)
   25caf:	ff 10                	call   *(%eax)
   25cb1:	31 d2                	xor    %edx,%edx
   25cb3:	f7 75 e4             	divl   -0x1c(%ebp)
   25cb6:	8b 03                	mov    (%ebx),%eax
   25cb8:	85 c0                	test   %eax,%eax
   25cba:	74 0e                	je     25cca <resize+0xca>
   25cbc:	8b 4b 04             	mov    0x4(%ebx),%ecx
   25cbf:	85 c9                	test   %ecx,%ecx
   25cc1:	74 07                	je     25cca <resize+0xca>
   25cc3:	89 01                	mov    %eax,(%ecx)
   25cc5:	8b 03                	mov    (%ebx),%eax
   25cc7:	89 48 04             	mov    %ecx,0x4(%eax)
   25cca:	8b 4d dc             	mov    -0x24(%ebp),%ecx
   25ccd:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   25cd3:	8d 04 d1             	lea    (%ecx,%edx,8),%eax
   25cd6:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   25cd9:	89 43 04             	mov    %eax,0x4(%ebx)
   25cdc:	8b 10                	mov    (%eax),%edx
   25cde:	89 13                	mov    %edx,(%ebx)
   25ce0:	8b 10                	mov    (%eax),%edx
   25ce2:	89 18                	mov    %ebx,(%eax)
   25ce4:	8b 46 04             	mov    0x4(%esi),%eax
   25ce7:	89 5a 04             	mov    %ebx,0x4(%edx)
   25cea:	01 c1                	add    %eax,%ecx
   25cec:	8b 57 04             	mov    0x4(%edi),%edx
   25cef:	89 fb                	mov    %edi,%ebx
   25cf1:	39 cf                	cmp    %ecx,%edi
   25cf3:	75 b3                	jne    25ca8 <resize+0xa8>
   25cf5:	8b 4e 08             	mov    0x8(%esi),%ecx
   25cf8:	8b 55 d8             	mov    -0x28(%ebp),%edx
   25cfb:	42                   	inc    %edx
   25cfc:	89 55 d8             	mov    %edx,-0x28(%ebp)
   25cff:	39 4d d8             	cmp    %ecx,-0x28(%ebp)
   25d02:	72 8c                	jb     25c90 <resize+0x90>
   25d04:	eb 05                	jmp    25d0b <resize+0x10b>
   25d06:	66 90                	xchg   %ax,%ax
   25d08:	8b 46 04             	mov    0x4(%esi),%eax
   25d0b:	89 04 24             	mov    %eax,(%esp)
   25d0e:	e8 cd a4 ff ff       	call   201e0 <free>
   25d13:	8b 45 dc             	mov    -0x24(%ebp),%eax
   25d16:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   25d19:	89 46 04             	mov    %eax,0x4(%esi)
   25d1c:	8b 46 14             	mov    0x14(%esi),%eax
   25d1f:	89 56 08             	mov    %edx,0x8(%esi)
   25d22:	0f af c2             	imul   %edx,%eax
   25d25:	89 46 0c             	mov    %eax,0xc(%esi)
   25d28:	83 c4 2c             	add    $0x2c,%esp
   25d2b:	5b                   	pop    %ebx
   25d2c:	5e                   	pop    %esi
   25d2d:	5f                   	pop    %edi
   25d2e:	5d                   	pop    %ebp
   25d2f:	c3                   	ret    
   25d30:	c7 44 24 08 b7 01 00 	movl   $0x1b7,0x8(%esp)
   25d37:	00 
   25d38:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   25d3f:	00 
   25d40:	c7 04 24 eb e5 02 00 	movl   $0x2e5eb,(%esp)
   25d47:	e8 64 4b 00 00       	call   2a8b0 <assert_abort>
   25d4c:	c7 44 24 08 b8 01 00 	movl   $0x1b8,0x8(%esp)
   25d53:	00 
   25d54:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   25d5b:	00 
   25d5c:	c7 04 24 30 e6 02 00 	movl   $0x2e630,(%esp)
   25d63:	e8 48 4b 00 00       	call   2a8b0 <assert_abort>
   25d68:	90                   	nop
   25d69:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00025d70 <hash_table_create>:
   25d70:	55                   	push   %ebp
   25d71:	89 e5                	mov    %esp,%ebp
   25d73:	57                   	push   %edi
   25d74:	56                   	push   %esi
   25d75:	53                   	push   %ebx
   25d76:	83 ec 1c             	sub    $0x1c,%esp
   25d79:	8b 7d 08             	mov    0x8(%ebp),%edi
   25d7c:	8b 45 0c             	mov    0xc(%ebp),%eax
   25d7f:	8b 75 14             	mov    0x14(%ebp),%esi
   25d82:	85 ff                	test   %edi,%edi
   25d84:	0f 84 f0 00 00 00    	je     25e7a <hash_table_create+0x10a>
   25d8a:	85 f6                	test   %esi,%esi
   25d8c:	0f 84 cc 00 00 00    	je     25e5e <hash_table_create+0xee>
   25d92:	8b 1e                	mov    (%esi),%ebx
   25d94:	85 db                	test   %ebx,%ebx
   25d96:	0f 84 c2 00 00 00    	je     25e5e <hash_table_create+0xee>
   25d9c:	8b 4e 04             	mov    0x4(%esi),%ecx
   25d9f:	85 c9                	test   %ecx,%ecx
   25da1:	0f 84 b7 00 00 00    	je     25e5e <hash_table_create+0xee>
   25da7:	8b 56 0c             	mov    0xc(%esi),%edx
   25daa:	85 d2                	test   %edx,%edx
   25dac:	0f 84 ac 00 00 00    	je     25e5e <hash_table_create+0xee>
   25db2:	bb 59 00 00 00       	mov    $0x59,%ebx
   25db7:	83 f8 59             	cmp    $0x59,%eax
   25dba:	0f 86 8d 00 00 00    	jbe    25e4d <hash_table_create+0xdd>
   25dc0:	8d 5c 1b 01          	lea    0x1(%ebx,%ebx,1),%ebx
   25dc4:	39 d8                	cmp    %ebx,%eax
   25dc6:	77 f8                	ja     25dc0 <hash_table_create+0x50>
   25dc8:	89 5f 08             	mov    %ebx,0x8(%edi)
   25dcb:	8d 04 dd 00 00 00 00 	lea    0x0(,%ebx,8),%eax
   25dd2:	89 04 24             	mov    %eax,(%esp)
   25dd5:	e8 f6 a2 ff ff       	call   200d0 <malloc>
   25dda:	85 c0                	test   %eax,%eax
   25ddc:	74 6b                	je     25e49 <hash_table_create+0xd9>
   25dde:	89 c2                	mov    %eax,%edx
   25de0:	31 c9                	xor    %ecx,%ecx
   25de2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   25de8:	41                   	inc    %ecx
   25de9:	89 12                	mov    %edx,(%edx)
   25deb:	89 52 04             	mov    %edx,0x4(%edx)
   25dee:	83 c2 08             	add    $0x8,%edx
   25df1:	39 d9                	cmp    %ebx,%ecx
   25df3:	72 f3                	jb     25de8 <hash_table_create+0x78>
   25df5:	89 47 04             	mov    %eax,0x4(%edi)
   25df8:	8b 45 10             	mov    0x10(%ebp),%eax
   25dfb:	85 c0                	test   %eax,%eax
   25dfd:	74 31                	je     25e30 <hash_table_create+0xc0>
   25dff:	8b 55 10             	mov    0x10(%ebp),%edx
   25e02:	8b 47 08             	mov    0x8(%edi),%eax
   25e05:	0f af c2             	imul   %edx,%eax
   25e08:	8b 5e 10             	mov    0x10(%esi),%ebx
   25e0b:	89 47 0c             	mov    %eax,0xc(%edi)
   25e0e:	89 57 14             	mov    %edx,0x14(%edi)
   25e11:	c7 47 10 00 00 00 00 	movl   $0x0,0x10(%edi)
   25e18:	89 37                	mov    %esi,(%edi)
   25e1a:	c6 47 18 00          	movb   $0x0,0x18(%edi)
   25e1e:	b0 01                	mov    $0x1,%al
   25e20:	85 db                	test   %ebx,%ebx
   25e22:	74 1c                	je     25e40 <hash_table_create+0xd0>
   25e24:	83 c4 1c             	add    $0x1c,%esp
   25e27:	5b                   	pop    %ebx
   25e28:	5e                   	pop    %esi
   25e29:	5f                   	pop    %edi
   25e2a:	5d                   	pop    %ebp
   25e2b:	c3                   	ret    
   25e2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   25e30:	c7 45 10 02 00 00 00 	movl   $0x2,0x10(%ebp)
   25e37:	eb c6                	jmp    25dff <hash_table_create+0x8f>
   25e39:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   25e40:	c7 46 10 f0 5b 02 00 	movl   $0x25bf0,0x10(%esi)
   25e47:	eb db                	jmp    25e24 <hash_table_create+0xb4>
   25e49:	31 c0                	xor    %eax,%eax
   25e4b:	eb d7                	jmp    25e24 <hash_table_create+0xb4>
   25e4d:	c7 47 08 59 00 00 00 	movl   $0x59,0x8(%edi)
   25e54:	b8 c8 02 00 00       	mov    $0x2c8,%eax
   25e59:	e9 74 ff ff ff       	jmp    25dd2 <hash_table_create+0x62>
   25e5e:	c7 44 24 08 61 00 00 	movl   $0x61,0x8(%esp)
   25e65:	00 
   25e66:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   25e6d:	00 
   25e6e:	c7 04 24 54 e6 02 00 	movl   $0x2e654,(%esp)
   25e75:	e8 36 4a 00 00       	call   2a8b0 <assert_abort>
   25e7a:	c7 44 24 08 60 00 00 	movl   $0x60,0x8(%esp)
   25e81:	00 
   25e82:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   25e89:	00 
   25e8a:	c7 04 24 73 cd 02 00 	movl   $0x2cd73,(%esp)
   25e91:	e8 1a 4a 00 00       	call   2a8b0 <assert_abort>
   25e96:	8d 76 00             	lea    0x0(%esi),%esi
   25e99:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00025ea0 <hash_table_destroy>:
   25ea0:	55                   	push   %ebp
   25ea1:	89 e5                	mov    %esp,%ebp
   25ea3:	57                   	push   %edi
   25ea4:	56                   	push   %esi
   25ea5:	53                   	push   %ebx
   25ea6:	83 ec 2c             	sub    $0x2c,%esp
   25ea9:	8b 7d 08             	mov    0x8(%ebp),%edi
   25eac:	85 ff                	test   %edi,%edi
   25eae:	0f 84 bf 00 00 00    	je     25f73 <hash_table_destroy+0xd3>
   25eb4:	8b 57 04             	mov    0x4(%edi),%edx
   25eb7:	85 d2                	test   %edx,%edx
   25eb9:	0f 84 b4 00 00 00    	je     25f73 <hash_table_destroy+0xd3>
   25ebf:	80 7f 18 00          	cmpb   $0x0,0x18(%edi)
   25ec3:	0f 85 c6 00 00 00    	jne    25f8f <hash_table_destroy+0xef>
   25ec9:	8b 47 10             	mov    0x10(%edi),%eax
   25ecc:	85 c0                	test   %eax,%eax
   25ece:	0f 84 7c 00 00 00    	je     25f50 <hash_table_destroy+0xb0>
   25ed4:	8b 47 08             	mov    0x8(%edi),%eax
   25ed7:	89 45 e0             	mov    %eax,-0x20(%ebp)
   25eda:	85 c0                	test   %eax,%eax
   25edc:	74 6b                	je     25f49 <hash_table_destroy+0xa9>
   25ede:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   25ee5:	8d 76 00             	lea    0x0(%esi),%esi
   25ee8:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   25eeb:	c1 e6 03             	shl    $0x3,%esi
   25eee:	8d 0c 32             	lea    (%edx,%esi,1),%ecx
   25ef1:	8b 41 04             	mov    0x4(%ecx),%eax
   25ef4:	39 c8                	cmp    %ecx,%eax
   25ef6:	8b 58 04             	mov    0x4(%eax),%ebx
   25ef9:	75 07                	jne    25f02 <hash_table_destroy+0x62>
   25efb:	eb 71                	jmp    25f6e <hash_table_destroy+0xce>
   25efd:	8d 76 00             	lea    0x0(%esi),%esi
   25f00:	89 cb                	mov    %ecx,%ebx
   25f02:	8b 10                	mov    (%eax),%edx
   25f04:	85 d2                	test   %edx,%edx
   25f06:	74 0b                	je     25f13 <hash_table_destroy+0x73>
   25f08:	85 db                	test   %ebx,%ebx
   25f0a:	74 07                	je     25f13 <hash_table_destroy+0x73>
   25f0c:	89 13                	mov    %edx,(%ebx)
   25f0e:	8b 10                	mov    (%eax),%edx
   25f10:	89 5a 04             	mov    %ebx,0x4(%edx)
   25f13:	8b 17                	mov    (%edi),%edx
   25f15:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   25f1b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   25f22:	89 04 24             	mov    %eax,(%esp)
   25f25:	ff 52 10             	call   *0x10(%edx)
   25f28:	8b 57 04             	mov    0x4(%edi),%edx
   25f2b:	89 d8                	mov    %ebx,%eax
   25f2d:	8b 4b 04             	mov    0x4(%ebx),%ecx
   25f30:	8d 1c 32             	lea    (%edx,%esi,1),%ebx
   25f33:	39 d8                	cmp    %ebx,%eax
   25f35:	75 c9                	jne    25f00 <hash_table_destroy+0x60>
   25f37:	8b 47 08             	mov    0x8(%edi),%eax
   25f3a:	89 45 e0             	mov    %eax,-0x20(%ebp)
   25f3d:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   25f40:	46                   	inc    %esi
   25f41:	89 75 e4             	mov    %esi,-0x1c(%ebp)
   25f44:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
   25f47:	72 9f                	jb     25ee8 <hash_table_destroy+0x48>
   25f49:	c7 47 10 00 00 00 00 	movl   $0x0,0x10(%edi)
   25f50:	89 14 24             	mov    %edx,(%esp)
   25f53:	e8 88 a2 ff ff       	call   201e0 <free>
   25f58:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%edi)
   25f5f:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%edi)
   25f66:	83 c4 2c             	add    $0x2c,%esp
   25f69:	5b                   	pop    %ebx
   25f6a:	5e                   	pop    %esi
   25f6b:	5f                   	pop    %edi
   25f6c:	5d                   	pop    %ebp
   25f6d:	c3                   	ret    
   25f6e:	8b 45 e0             	mov    -0x20(%ebp),%eax
   25f71:	eb ca                	jmp    25f3d <hash_table_destroy+0x9d>
   25f73:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
   25f7a:	00 
   25f7b:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   25f82:	00 
   25f83:	c7 04 24 eb e5 02 00 	movl   $0x2e5eb,(%esp)
   25f8a:	e8 21 49 00 00       	call   2a8b0 <assert_abort>
   25f8f:	c7 44 24 08 81 00 00 	movl   $0x81,0x8(%esp)
   25f96:	00 
   25f97:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   25f9e:	00 
   25f9f:	c7 04 24 fa e5 02 00 	movl   $0x2e5fa,(%esp)
   25fa6:	e8 05 49 00 00       	call   2a8b0 <assert_abort>
   25fab:	90                   	nop
   25fac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00025fb0 <hash_table_empty>:
   25fb0:	55                   	push   %ebp
   25fb1:	89 e5                	mov    %esp,%ebp
   25fb3:	83 ec 18             	sub    $0x18,%esp
   25fb6:	8b 45 08             	mov    0x8(%ebp),%eax
   25fb9:	85 c0                	test   %eax,%eax
   25fbb:	74 11                	je     25fce <hash_table_empty+0x1e>
   25fbd:	8b 50 04             	mov    0x4(%eax),%edx
   25fc0:	85 d2                	test   %edx,%edx
   25fc2:	74 0a                	je     25fce <hash_table_empty+0x1e>
   25fc4:	8b 40 10             	mov    0x10(%eax),%eax
   25fc7:	c9                   	leave  
   25fc8:	85 c0                	test   %eax,%eax
   25fca:	0f 94 c0             	sete   %al
   25fcd:	c3                   	ret    
   25fce:	c7 44 24 08 8e 00 00 	movl   $0x8e,0x8(%esp)
   25fd5:	00 
   25fd6:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   25fdd:	00 
   25fde:	c7 04 24 eb e5 02 00 	movl   $0x2e5eb,(%esp)
   25fe5:	e8 c6 48 00 00       	call   2a8b0 <assert_abort>
   25fea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00025ff0 <hash_table_size>:
   25ff0:	55                   	push   %ebp
   25ff1:	89 e5                	mov    %esp,%ebp
   25ff3:	83 ec 18             	sub    $0x18,%esp
   25ff6:	8b 45 08             	mov    0x8(%ebp),%eax
   25ff9:	85 c0                	test   %eax,%eax
   25ffb:	74 0c                	je     26009 <hash_table_size+0x19>
   25ffd:	8b 48 04             	mov    0x4(%eax),%ecx
   26000:	85 c9                	test   %ecx,%ecx
   26002:	74 05                	je     26009 <hash_table_size+0x19>
   26004:	8b 40 10             	mov    0x10(%eax),%eax
   26007:	c9                   	leave  
   26008:	c3                   	ret    
   26009:	c7 44 24 08 95 00 00 	movl   $0x95,0x8(%esp)
   26010:	00 
   26011:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   26018:	00 
   26019:	c7 04 24 eb e5 02 00 	movl   $0x2e5eb,(%esp)
   26020:	e8 8b 48 00 00       	call   2a8b0 <assert_abort>
   26025:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   26029:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00026030 <hash_table_clear>:
   26030:	55                   	push   %ebp
   26031:	89 e5                	mov    %esp,%ebp
   26033:	57                   	push   %edi
   26034:	56                   	push   %esi
   26035:	53                   	push   %ebx
   26036:	83 ec 2c             	sub    $0x2c,%esp
   26039:	8b 7d 08             	mov    0x8(%ebp),%edi
   2603c:	85 ff                	test   %edi,%edi
   2603e:	0f 84 ea 00 00 00    	je     2612e <hash_table_clear+0xfe>
   26044:	8b 47 04             	mov    0x4(%edi),%eax
   26047:	85 c0                	test   %eax,%eax
   26049:	0f 84 df 00 00 00    	je     2612e <hash_table_clear+0xfe>
   2604f:	80 7f 18 00          	cmpb   $0x0,0x18(%edi)
   26053:	0f 85 b9 00 00 00    	jne    26112 <hash_table_clear+0xe2>
   26059:	8b 77 10             	mov    0x10(%edi),%esi
   2605c:	85 f6                	test   %esi,%esi
   2605e:	0f 84 8f 00 00 00    	je     260f3 <hash_table_clear+0xc3>
   26064:	8b 57 08             	mov    0x8(%edi),%edx
   26067:	89 55 e0             	mov    %edx,-0x20(%ebp)
   2606a:	85 d2                	test   %edx,%edx
   2606c:	74 6b                	je     260d9 <hash_table_clear+0xa9>
   2606e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   26075:	8d 76 00             	lea    0x0(%esi),%esi
   26078:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   2607b:	c1 e6 03             	shl    $0x3,%esi
   2607e:	8d 0c 30             	lea    (%eax,%esi,1),%ecx
   26081:	8b 51 04             	mov    0x4(%ecx),%edx
   26084:	39 ca                	cmp    %ecx,%edx
   26086:	8b 5a 04             	mov    0x4(%edx),%ebx
   26089:	75 07                	jne    26092 <hash_table_clear+0x62>
   2608b:	eb 61                	jmp    260ee <hash_table_clear+0xbe>
   2608d:	8d 76 00             	lea    0x0(%esi),%esi
   26090:	89 cb                	mov    %ecx,%ebx
   26092:	8b 02                	mov    (%edx),%eax
   26094:	85 c0                	test   %eax,%eax
   26096:	74 0b                	je     260a3 <hash_table_clear+0x73>
   26098:	85 db                	test   %ebx,%ebx
   2609a:	74 07                	je     260a3 <hash_table_clear+0x73>
   2609c:	89 03                	mov    %eax,(%ebx)
   2609e:	8b 02                	mov    (%edx),%eax
   260a0:	89 58 04             	mov    %ebx,0x4(%eax)
   260a3:	8b 07                	mov    (%edi),%eax
   260a5:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   260ab:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   260b2:	89 14 24             	mov    %edx,(%esp)
   260b5:	ff 50 10             	call   *0x10(%eax)
   260b8:	8b 47 04             	mov    0x4(%edi),%eax
   260bb:	89 da                	mov    %ebx,%edx
   260bd:	8b 4b 04             	mov    0x4(%ebx),%ecx
   260c0:	8d 1c 30             	lea    (%eax,%esi,1),%ebx
   260c3:	39 da                	cmp    %ebx,%edx
   260c5:	75 c9                	jne    26090 <hash_table_clear+0x60>
   260c7:	8b 57 08             	mov    0x8(%edi),%edx
   260ca:	89 55 e0             	mov    %edx,-0x20(%ebp)
   260cd:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   260d0:	43                   	inc    %ebx
   260d1:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
   260d4:	39 55 e4             	cmp    %edx,-0x1c(%ebp)
   260d7:	72 9f                	jb     26078 <hash_table_clear+0x48>
   260d9:	c7 47 10 00 00 00 00 	movl   $0x0,0x10(%edi)
   260e0:	83 7d e0 59          	cmpl   $0x59,-0x20(%ebp)
   260e4:	77 19                	ja     260ff <hash_table_clear+0xcf>
   260e6:	83 c4 2c             	add    $0x2c,%esp
   260e9:	5b                   	pop    %ebx
   260ea:	5e                   	pop    %esi
   260eb:	5f                   	pop    %edi
   260ec:	5d                   	pop    %ebp
   260ed:	c3                   	ret    
   260ee:	8b 55 e0             	mov    -0x20(%ebp),%edx
   260f1:	eb da                	jmp    260cd <hash_table_clear+0x9d>
   260f3:	8b 47 08             	mov    0x8(%edi),%eax
   260f6:	89 45 e0             	mov    %eax,-0x20(%ebp)
   260f9:	83 7d e0 59          	cmpl   $0x59,-0x20(%ebp)
   260fd:	76 e7                	jbe    260e6 <hash_table_clear+0xb6>
   260ff:	83 c4 2c             	add    $0x2c,%esp
   26102:	89 f8                	mov    %edi,%eax
   26104:	ba 59 00 00 00       	mov    $0x59,%edx
   26109:	5b                   	pop    %ebx
   2610a:	5e                   	pop    %esi
   2610b:	5f                   	pop    %edi
   2610c:	5d                   	pop    %ebp
   2610d:	e9 ee fa ff ff       	jmp    25c00 <resize>
   26112:	c7 44 24 08 a0 00 00 	movl   $0xa0,0x8(%esp)
   26119:	00 
   2611a:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   26121:	00 
   26122:	c7 04 24 fa e5 02 00 	movl   $0x2e5fa,(%esp)
   26129:	e8 82 47 00 00       	call   2a8b0 <assert_abort>
   2612e:	c7 44 24 08 9f 00 00 	movl   $0x9f,0x8(%esp)
   26135:	00 
   26136:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   2613d:	00 
   2613e:	c7 04 24 eb e5 02 00 	movl   $0x2e5eb,(%esp)
   26145:	e8 66 47 00 00       	call   2a8b0 <assert_abort>
   2614a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00026150 <hash_table_insert>:
   26150:	55                   	push   %ebp
   26151:	89 e5                	mov    %esp,%ebp
   26153:	56                   	push   %esi
   26154:	53                   	push   %ebx
   26155:	83 ec 10             	sub    $0x10,%esp
   26158:	8b 75 0c             	mov    0xc(%ebp),%esi
   2615b:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2615e:	85 f6                	test   %esi,%esi
   26160:	0f 84 93 00 00 00    	je     261f9 <hash_table_insert+0xa9>
   26166:	85 db                	test   %ebx,%ebx
   26168:	74 57                	je     261c1 <hash_table_insert+0x71>
   2616a:	8b 43 04             	mov    0x4(%ebx),%eax
   2616d:	85 c0                	test   %eax,%eax
   2616f:	74 50                	je     261c1 <hash_table_insert+0x71>
   26171:	80 7b 18 00          	cmpb   $0x0,0x18(%ebx)
   26175:	75 66                	jne    261dd <hash_table_insert+0x8d>
   26177:	8b 03                	mov    (%ebx),%eax
   26179:	89 34 24             	mov    %esi,(%esp)
   2617c:	ff 10                	call   *(%eax)
   2617e:	8b 4b 08             	mov    0x8(%ebx),%ecx
   26181:	31 d2                	xor    %edx,%edx
   26183:	f7 f1                	div    %ecx
   26185:	8b 43 04             	mov    0x4(%ebx),%eax
   26188:	8d 04 d0             	lea    (%eax,%edx,8),%eax
   2618b:	89 46 04             	mov    %eax,0x4(%esi)
   2618e:	8b 10                	mov    (%eax),%edx
   26190:	89 16                	mov    %edx,(%esi)
   26192:	8b 10                	mov    (%eax),%edx
   26194:	89 30                	mov    %esi,(%eax)
   26196:	8b 43 10             	mov    0x10(%ebx),%eax
   26199:	40                   	inc    %eax
   2619a:	89 72 04             	mov    %esi,0x4(%edx)
   2619d:	3b 43 0c             	cmp    0xc(%ebx),%eax
   261a0:	89 43 10             	mov    %eax,0x10(%ebx)
   261a3:	77 0b                	ja     261b0 <hash_table_insert+0x60>
   261a5:	83 c4 10             	add    $0x10,%esp
   261a8:	5b                   	pop    %ebx
   261a9:	5e                   	pop    %esi
   261aa:	5d                   	pop    %ebp
   261ab:	c3                   	ret    
   261ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   261b0:	83 c4 10             	add    $0x10,%esp
   261b3:	89 d8                	mov    %ebx,%eax
   261b5:	8d 54 09 01          	lea    0x1(%ecx,%ecx,1),%edx
   261b9:	5b                   	pop    %ebx
   261ba:	5e                   	pop    %esi
   261bb:	5d                   	pop    %ebp
   261bc:	e9 3f fa ff ff       	jmp    25c00 <resize>
   261c1:	c7 44 24 08 c6 00 00 	movl   $0xc6,0x8(%esp)
   261c8:	00 
   261c9:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   261d0:	00 
   261d1:	c7 04 24 eb e5 02 00 	movl   $0x2e5eb,(%esp)
   261d8:	e8 d3 46 00 00       	call   2a8b0 <assert_abort>
   261dd:	c7 44 24 08 c7 00 00 	movl   $0xc7,0x8(%esp)
   261e4:	00 
   261e5:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   261ec:	00 
   261ed:	c7 04 24 fa e5 02 00 	movl   $0x2e5fa,(%esp)
   261f4:	e8 b7 46 00 00       	call   2a8b0 <assert_abort>
   261f9:	c7 44 24 08 c5 00 00 	movl   $0xc5,0x8(%esp)
   26200:	00 
   26201:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   26208:	00 
   26209:	c7 04 24 0c e6 02 00 	movl   $0x2e60c,(%esp)
   26210:	e8 9b 46 00 00       	call   2a8b0 <assert_abort>
   26215:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   26219:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00026220 <hash_table_insert_unique>:
   26220:	55                   	push   %ebp
   26221:	89 e5                	mov    %esp,%ebp
   26223:	57                   	push   %edi
   26224:	56                   	push   %esi
   26225:	53                   	push   %ebx
   26226:	83 ec 2c             	sub    $0x2c,%esp
   26229:	8b 75 0c             	mov    0xc(%ebp),%esi
   2622c:	8b 7d 08             	mov    0x8(%ebp),%edi
   2622f:	85 f6                	test   %esi,%esi
   26231:	0f 84 21 01 00 00    	je     26358 <hash_table_insert_unique+0x138>
   26237:	85 ff                	test   %edi,%edi
   26239:	0f 84 c5 00 00 00    	je     26304 <hash_table_insert_unique+0xe4>
   2623f:	8b 47 04             	mov    0x4(%edi),%eax
   26242:	85 c0                	test   %eax,%eax
   26244:	0f 84 ba 00 00 00    	je     26304 <hash_table_insert_unique+0xe4>
   2624a:	8b 5f 08             	mov    0x8(%edi),%ebx
   2624d:	85 db                	test   %ebx,%ebx
   2624f:	0f 84 af 00 00 00    	je     26304 <hash_table_insert_unique+0xe4>
   26255:	8b 07                	mov    (%edi),%eax
   26257:	85 c0                	test   %eax,%eax
   26259:	0f 84 c1 00 00 00    	je     26320 <hash_table_insert_unique+0x100>
   2625f:	8b 10                	mov    (%eax),%edx
   26261:	85 d2                	test   %edx,%edx
   26263:	0f 84 b7 00 00 00    	je     26320 <hash_table_insert_unique+0x100>
   26269:	8b 48 08             	mov    0x8(%eax),%ecx
   2626c:	85 c9                	test   %ecx,%ecx
   2626e:	0f 84 ac 00 00 00    	je     26320 <hash_table_insert_unique+0x100>
   26274:	80 7f 18 00          	cmpb   $0x0,0x18(%edi)
   26278:	0f 85 be 00 00 00    	jne    2633c <hash_table_insert_unique+0x11c>
   2627e:	89 34 24             	mov    %esi,(%esp)
   26281:	ff d2                	call   *%edx
   26283:	31 d2                	xor    %edx,%edx
   26285:	f7 77 08             	divl   0x8(%edi)
   26288:	c1 e2 03             	shl    $0x3,%edx
   2628b:	8b 47 04             	mov    0x4(%edi),%eax
   2628e:	01 d0                	add    %edx,%eax
   26290:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   26293:	8b 58 04             	mov    0x4(%eax),%ebx
   26296:	39 c3                	cmp    %eax,%ebx
   26298:	75 15                	jne    262af <hash_table_insert_unique+0x8f>
   2629a:	eb 34                	jmp    262d0 <hash_table_insert_unique+0xb0>
   2629c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   262a0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   262a3:	8b 57 04             	mov    0x4(%edi),%edx
   262a6:	8b 5b 04             	mov    0x4(%ebx),%ebx
   262a9:	01 d0                	add    %edx,%eax
   262ab:	39 d8                	cmp    %ebx,%eax
   262ad:	74 21                	je     262d0 <hash_table_insert_unique+0xb0>
   262af:	8b 07                	mov    (%edi),%eax
   262b1:	89 74 24 04          	mov    %esi,0x4(%esp)
   262b5:	89 1c 24             	mov    %ebx,(%esp)
   262b8:	ff 50 08             	call   *0x8(%eax)
   262bb:	84 c0                	test   %al,%al
   262bd:	74 e1                	je     262a0 <hash_table_insert_unique+0x80>
   262bf:	31 db                	xor    %ebx,%ebx
   262c1:	83 c4 2c             	add    $0x2c,%esp
   262c4:	88 d8                	mov    %bl,%al
   262c6:	5b                   	pop    %ebx
   262c7:	5e                   	pop    %esi
   262c8:	5f                   	pop    %edi
   262c9:	5d                   	pop    %ebp
   262ca:	c3                   	ret    
   262cb:	90                   	nop
   262cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   262d0:	8b 10                	mov    (%eax),%edx
   262d2:	89 46 04             	mov    %eax,0x4(%esi)
   262d5:	89 16                	mov    %edx,(%esi)
   262d7:	b3 01                	mov    $0x1,%bl
   262d9:	8b 10                	mov    (%eax),%edx
   262db:	89 30                	mov    %esi,(%eax)
   262dd:	8b 47 10             	mov    0x10(%edi),%eax
   262e0:	40                   	inc    %eax
   262e1:	89 72 04             	mov    %esi,0x4(%edx)
   262e4:	3b 47 0c             	cmp    0xc(%edi),%eax
   262e7:	89 47 10             	mov    %eax,0x10(%edi)
   262ea:	76 d5                	jbe    262c1 <hash_table_insert_unique+0xa1>
   262ec:	8b 47 08             	mov    0x8(%edi),%eax
   262ef:	8d 54 00 01          	lea    0x1(%eax,%eax,1),%edx
   262f3:	89 f8                	mov    %edi,%eax
   262f5:	e8 06 f9 ff ff       	call   25c00 <resize>
   262fa:	83 c4 2c             	add    $0x2c,%esp
   262fd:	88 d8                	mov    %bl,%al
   262ff:	5b                   	pop    %ebx
   26300:	5e                   	pop    %esi
   26301:	5f                   	pop    %edi
   26302:	5d                   	pop    %ebp
   26303:	c3                   	ret    
   26304:	c7 44 24 08 dd 00 00 	movl   $0xdd,0x8(%esp)
   2630b:	00 
   2630c:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   26313:	00 
   26314:	c7 04 24 84 e6 02 00 	movl   $0x2e684,(%esp)
   2631b:	e8 90 45 00 00       	call   2a8b0 <assert_abort>
   26320:	c7 44 24 08 de 00 00 	movl   $0xde,0x8(%esp)
   26327:	00 
   26328:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   2632f:	00 
   26330:	c7 04 24 a4 e6 02 00 	movl   $0x2e6a4,(%esp)
   26337:	e8 74 45 00 00       	call   2a8b0 <assert_abort>
   2633c:	c7 44 24 08 df 00 00 	movl   $0xdf,0x8(%esp)
   26343:	00 
   26344:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   2634b:	00 
   2634c:	c7 04 24 fa e5 02 00 	movl   $0x2e5fa,(%esp)
   26353:	e8 58 45 00 00       	call   2a8b0 <assert_abort>
   26358:	c7 44 24 08 dc 00 00 	movl   $0xdc,0x8(%esp)
   2635f:	00 
   26360:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   26367:	00 
   26368:	c7 04 24 0c e6 02 00 	movl   $0x2e60c,(%esp)
   2636f:	e8 3c 45 00 00       	call   2a8b0 <assert_abort>
   26374:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2637a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00026380 <hash_table_find>:
   26380:	55                   	push   %ebp
   26381:	89 e5                	mov    %esp,%ebp
   26383:	57                   	push   %edi
   26384:	56                   	push   %esi
   26385:	53                   	push   %ebx
   26386:	83 ec 2c             	sub    $0x2c,%esp
   26389:	8b 7d 08             	mov    0x8(%ebp),%edi
   2638c:	8b 75 0c             	mov    0xc(%ebp),%esi
   2638f:	85 ff                	test   %edi,%edi
   26391:	74 67                	je     263fa <hash_table_find+0x7a>
   26393:	8b 4f 04             	mov    0x4(%edi),%ecx
   26396:	85 c9                	test   %ecx,%ecx
   26398:	74 60                	je     263fa <hash_table_find+0x7a>
   2639a:	8b 07                	mov    (%edi),%eax
   2639c:	89 34 24             	mov    %esi,(%esp)
   2639f:	ff 50 04             	call   *0x4(%eax)
   263a2:	31 d2                	xor    %edx,%edx
   263a4:	f7 77 08             	divl   0x8(%edi)
   263a7:	c1 e2 03             	shl    $0x3,%edx
   263aa:	8b 47 04             	mov    0x4(%edi),%eax
   263ad:	01 d0                	add    %edx,%eax
   263af:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   263b2:	8b 58 04             	mov    0x4(%eax),%ebx
   263b5:	39 c3                	cmp    %eax,%ebx
   263b7:	75 16                	jne    263cf <hash_table_find+0x4f>
   263b9:	eb 35                	jmp    263f0 <hash_table_find+0x70>
   263bb:	90                   	nop
   263bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   263c0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   263c3:	8b 57 04             	mov    0x4(%edi),%edx
   263c6:	8b 5b 04             	mov    0x4(%ebx),%ebx
   263c9:	01 d0                	add    %edx,%eax
   263cb:	39 c3                	cmp    %eax,%ebx
   263cd:	74 21                	je     263f0 <hash_table_find+0x70>
   263cf:	8b 07                	mov    (%edi),%eax
   263d1:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   263d5:	89 34 24             	mov    %esi,(%esp)
   263d8:	ff 50 0c             	call   *0xc(%eax)
   263db:	84 c0                	test   %al,%al
   263dd:	74 e1                	je     263c0 <hash_table_find+0x40>
   263df:	83 c4 2c             	add    $0x2c,%esp
   263e2:	89 d8                	mov    %ebx,%eax
   263e4:	5b                   	pop    %ebx
   263e5:	5e                   	pop    %esi
   263e6:	5f                   	pop    %edi
   263e7:	5d                   	pop    %ebp
   263e8:	c3                   	ret    
   263e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   263f0:	83 c4 2c             	add    $0x2c,%esp
   263f3:	31 c0                	xor    %eax,%eax
   263f5:	5b                   	pop    %ebx
   263f6:	5e                   	pop    %esi
   263f7:	5f                   	pop    %edi
   263f8:	5d                   	pop    %ebp
   263f9:	c3                   	ret    
   263fa:	c7 44 24 08 ff 00 00 	movl   $0xff,0x8(%esp)
   26401:	00 
   26402:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   26409:	00 
   2640a:	c7 04 24 eb e5 02 00 	movl   $0x2e5eb,(%esp)
   26411:	e8 9a 44 00 00       	call   2a8b0 <assert_abort>
   26416:	8d 76 00             	lea    0x0(%esi),%esi
   26419:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00026420 <hash_table_find_next>:
   26420:	55                   	push   %ebp
   26421:	89 e5                	mov    %esp,%ebp
   26423:	57                   	push   %edi
   26424:	56                   	push   %esi
   26425:	53                   	push   %ebx
   26426:	83 ec 1c             	sub    $0x1c,%esp
   26429:	8b 75 0c             	mov    0xc(%ebp),%esi
   2642c:	8b 7d 08             	mov    0x8(%ebp),%edi
   2642f:	85 f6                	test   %esi,%esi
   26431:	74 7f                	je     264b2 <hash_table_find_next+0x92>
   26433:	85 ff                	test   %edi,%edi
   26435:	74 5f                	je     26496 <hash_table_find_next+0x76>
   26437:	8b 5f 04             	mov    0x4(%edi),%ebx
   2643a:	85 db                	test   %ebx,%ebx
   2643c:	74 58                	je     26496 <hash_table_find_next+0x76>
   2643e:	8b 5e 04             	mov    0x4(%esi),%ebx
   26441:	39 f3                	cmp    %esi,%ebx
   26443:	75 0a                	jne    2644f <hash_table_find_next+0x2f>
   26445:	eb 29                	jmp    26470 <hash_table_find_next+0x50>
   26447:	90                   	nop
   26448:	8b 5b 04             	mov    0x4(%ebx),%ebx
   2644b:	39 f3                	cmp    %esi,%ebx
   2644d:	74 21                	je     26470 <hash_table_find_next+0x50>
   2644f:	85 db                	test   %ebx,%ebx
   26451:	74 27                	je     2647a <hash_table_find_next+0x5a>
   26453:	8b 07                	mov    (%edi),%eax
   26455:	89 74 24 04          	mov    %esi,0x4(%esp)
   26459:	89 1c 24             	mov    %ebx,(%esp)
   2645c:	ff 50 08             	call   *0x8(%eax)
   2645f:	84 c0                	test   %al,%al
   26461:	74 e5                	je     26448 <hash_table_find_next+0x28>
   26463:	83 c4 1c             	add    $0x1c,%esp
   26466:	89 d8                	mov    %ebx,%eax
   26468:	5b                   	pop    %ebx
   26469:	5e                   	pop    %esi
   2646a:	5f                   	pop    %edi
   2646b:	5d                   	pop    %ebp
   2646c:	c3                   	ret    
   2646d:	8d 76 00             	lea    0x0(%esi),%esi
   26470:	83 c4 1c             	add    $0x1c,%esp
   26473:	31 c0                	xor    %eax,%eax
   26475:	5b                   	pop    %ebx
   26476:	5e                   	pop    %esi
   26477:	5f                   	pop    %edi
   26478:	5d                   	pop    %ebp
   26479:	c3                   	ret    
   2647a:	c7 44 24 08 1a 01 00 	movl   $0x11a,0x8(%esp)
   26481:	00 
   26482:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   26489:	00 
   2648a:	c7 04 24 11 e6 02 00 	movl   $0x2e611,(%esp)
   26491:	e8 1a 44 00 00       	call   2a8b0 <assert_abort>
   26496:	c7 44 24 08 16 01 00 	movl   $0x116,0x8(%esp)
   2649d:	00 
   2649e:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   264a5:	00 
   264a6:	c7 04 24 eb e5 02 00 	movl   $0x2e5eb,(%esp)
   264ad:	e8 fe 43 00 00       	call   2a8b0 <assert_abort>
   264b2:	c7 44 24 08 15 01 00 	movl   $0x115,0x8(%esp)
   264b9:	00 
   264ba:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   264c1:	00 
   264c2:	c7 04 24 0c e6 02 00 	movl   $0x2e60c,(%esp)
   264c9:	e8 e2 43 00 00       	call   2a8b0 <assert_abort>
   264ce:	66 90                	xchg   %ax,%ax

000264d0 <hash_table_remove>:
   264d0:	55                   	push   %ebp
   264d1:	89 e5                	mov    %esp,%ebp
   264d3:	57                   	push   %edi
   264d4:	56                   	push   %esi
   264d5:	53                   	push   %ebx
   264d6:	83 ec 2c             	sub    $0x2c,%esp
   264d9:	8b 7d 08             	mov    0x8(%ebp),%edi
   264dc:	85 ff                	test   %edi,%edi
   264de:	0f 84 d8 00 00 00    	je     265bc <hash_table_remove+0xec>
   264e4:	8b 5f 04             	mov    0x4(%edi),%ebx
   264e7:	85 db                	test   %ebx,%ebx
   264e9:	0f 84 cd 00 00 00    	je     265bc <hash_table_remove+0xec>
   264ef:	80 7f 18 00          	cmpb   $0x0,0x18(%edi)
   264f3:	0f 85 df 00 00 00    	jne    265d8 <hash_table_remove+0x108>
   264f9:	8b 55 0c             	mov    0xc(%ebp),%edx
   264fc:	8b 07                	mov    (%edi),%eax
   264fe:	89 14 24             	mov    %edx,(%esp)
   26501:	ff 50 04             	call   *0x4(%eax)
   26504:	31 d2                	xor    %edx,%edx
   26506:	f7 77 08             	divl   0x8(%edi)
   26509:	c1 e2 03             	shl    $0x3,%edx
   2650c:	8b 47 04             	mov    0x4(%edi),%eax
   2650f:	01 d0                	add    %edx,%eax
   26511:	89 55 e0             	mov    %edx,-0x20(%ebp)
   26514:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   2651b:	8b 58 04             	mov    0x4(%eax),%ebx
   2651e:	39 c3                	cmp    %eax,%ebx
   26520:	8b 73 04             	mov    0x4(%ebx),%esi
   26523:	75 05                	jne    2652a <hash_table_remove+0x5a>
   26525:	eb 57                	jmp    2657e <hash_table_remove+0xae>
   26527:	90                   	nop
   26528:	89 c6                	mov    %eax,%esi
   2652a:	8b 07                	mov    (%edi),%eax
   2652c:	8b 55 0c             	mov    0xc(%ebp),%edx
   2652f:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   26533:	89 14 24             	mov    %edx,(%esp)
   26536:	ff 50 0c             	call   *0xc(%eax)
   26539:	84 c0                	test   %al,%al
   2653b:	74 30                	je     2656d <hash_table_remove+0x9d>
   2653d:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   26540:	41                   	inc    %ecx
   26541:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
   26544:	8b 0b                	mov    (%ebx),%ecx
   26546:	85 c9                	test   %ecx,%ecx
   26548:	74 0e                	je     26558 <hash_table_remove+0x88>
   2654a:	8b 43 04             	mov    0x4(%ebx),%eax
   2654d:	85 c0                	test   %eax,%eax
   2654f:	74 07                	je     26558 <hash_table_remove+0x88>
   26551:	89 08                	mov    %ecx,(%eax)
   26553:	8b 0b                	mov    (%ebx),%ecx
   26555:	89 41 04             	mov    %eax,0x4(%ecx)
   26558:	8b 07                	mov    (%edi),%eax
   2655a:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   26560:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   26567:	89 1c 24             	mov    %ebx,(%esp)
   2656a:	ff 50 10             	call   *0x10(%eax)
   2656d:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   26570:	8b 57 04             	mov    0x4(%edi),%edx
   26573:	01 d1                	add    %edx,%ecx
   26575:	8b 46 04             	mov    0x4(%esi),%eax
   26578:	89 f3                	mov    %esi,%ebx
   2657a:	39 ce                	cmp    %ecx,%esi
   2657c:	75 aa                	jne    26528 <hash_table_remove+0x58>
   2657e:	8b 47 10             	mov    0x10(%edi),%eax
   26581:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   26584:	8b 57 0c             	mov    0xc(%edi),%edx
   26587:	29 f0                	sub    %esi,%eax
   26589:	c1 ea 02             	shr    $0x2,%edx
   2658c:	89 47 10             	mov    %eax,0x10(%edi)
   2658f:	39 d0                	cmp    %edx,%eax
   26591:	77 08                	ja     2659b <hash_table_remove+0xcb>
   26593:	8b 57 08             	mov    0x8(%edi),%edx
   26596:	83 fa 59             	cmp    $0x59,%edx
   26599:	77 0d                	ja     265a8 <hash_table_remove+0xd8>
   2659b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2659e:	83 c4 2c             	add    $0x2c,%esp
   265a1:	5b                   	pop    %ebx
   265a2:	5e                   	pop    %esi
   265a3:	5f                   	pop    %edi
   265a4:	5d                   	pop    %ebp
   265a5:	c3                   	ret    
   265a6:	66 90                	xchg   %ax,%ax
   265a8:	d1 ea                	shr    %edx
   265aa:	89 f8                	mov    %edi,%eax
   265ac:	e8 4f f6 ff ff       	call   25c00 <resize>
   265b1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   265b4:	83 c4 2c             	add    $0x2c,%esp
   265b7:	5b                   	pop    %ebx
   265b8:	5e                   	pop    %esi
   265b9:	5f                   	pop    %edi
   265ba:	5d                   	pop    %ebp
   265bb:	c3                   	ret    
   265bc:	c7 44 24 08 36 01 00 	movl   $0x136,0x8(%esp)
   265c3:	00 
   265c4:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   265cb:	00 
   265cc:	c7 04 24 eb e5 02 00 	movl   $0x2e5eb,(%esp)
   265d3:	e8 d8 42 00 00       	call   2a8b0 <assert_abort>
   265d8:	c7 44 24 08 37 01 00 	movl   $0x137,0x8(%esp)
   265df:	00 
   265e0:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   265e7:	00 
   265e8:	c7 04 24 fa e5 02 00 	movl   $0x2e5fa,(%esp)
   265ef:	e8 bc 42 00 00       	call   2a8b0 <assert_abort>
   265f4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   265fa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00026600 <hash_table_remove_item>:
   26600:	55                   	push   %ebp
   26601:	89 e5                	mov    %esp,%ebp
   26603:	53                   	push   %ebx
   26604:	83 ec 14             	sub    $0x14,%esp
   26607:	8b 45 0c             	mov    0xc(%ebp),%eax
   2660a:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2660d:	85 c0                	test   %eax,%eax
   2660f:	0f 84 a3 00 00 00    	je     266b8 <hash_table_remove_item+0xb8>
   26615:	85 db                	test   %ebx,%ebx
   26617:	0f 84 7f 00 00 00    	je     2669c <hash_table_remove_item+0x9c>
   2661d:	8b 4b 04             	mov    0x4(%ebx),%ecx
   26620:	85 c9                	test   %ecx,%ecx
   26622:	74 78                	je     2669c <hash_table_remove_item+0x9c>
   26624:	8b 08                	mov    (%eax),%ecx
   26626:	85 c9                	test   %ecx,%ecx
   26628:	74 56                	je     26680 <hash_table_remove_item+0x80>
   2662a:	8b 50 04             	mov    0x4(%eax),%edx
   2662d:	85 d2                	test   %edx,%edx
   2662f:	74 4f                	je     26680 <hash_table_remove_item+0x80>
   26631:	89 0a                	mov    %ecx,(%edx)
   26633:	8b 08                	mov    (%eax),%ecx
   26635:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   2663b:	89 51 04             	mov    %edx,0x4(%ecx)
   2663e:	8b 53 10             	mov    0x10(%ebx),%edx
   26641:	4a                   	dec    %edx
   26642:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   26649:	89 53 10             	mov    %edx,0x10(%ebx)
   2664c:	8b 13                	mov    (%ebx),%edx
   2664e:	89 04 24             	mov    %eax,(%esp)
   26651:	ff 52 10             	call   *0x10(%edx)
   26654:	8b 43 0c             	mov    0xc(%ebx),%eax
   26657:	c1 e8 02             	shr    $0x2,%eax
   2665a:	39 43 10             	cmp    %eax,0x10(%ebx)
   2665d:	77 08                	ja     26667 <hash_table_remove_item+0x67>
   2665f:	8b 53 08             	mov    0x8(%ebx),%edx
   26662:	83 fa 59             	cmp    $0x59,%edx
   26665:	77 09                	ja     26670 <hash_table_remove_item+0x70>
   26667:	83 c4 14             	add    $0x14,%esp
   2666a:	5b                   	pop    %ebx
   2666b:	5d                   	pop    %ebp
   2666c:	c3                   	ret    
   2666d:	8d 76 00             	lea    0x0(%esi),%esi
   26670:	83 c4 14             	add    $0x14,%esp
   26673:	89 d8                	mov    %ebx,%eax
   26675:	d1 ea                	shr    %edx
   26677:	5b                   	pop    %ebx
   26678:	5d                   	pop    %ebp
   26679:	e9 82 f5 ff ff       	jmp    25c00 <resize>
   2667e:	66 90                	xchg   %ax,%ax
   26680:	c7 44 24 08 52 01 00 	movl   $0x152,0x8(%esp)
   26687:	00 
   26688:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   2668f:	00 
   26690:	c7 04 24 15 e6 02 00 	movl   $0x2e615,(%esp)
   26697:	e8 14 42 00 00       	call   2a8b0 <assert_abort>
   2669c:	c7 44 24 08 51 01 00 	movl   $0x151,0x8(%esp)
   266a3:	00 
   266a4:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   266ab:	00 
   266ac:	c7 04 24 eb e5 02 00 	movl   $0x2e5eb,(%esp)
   266b3:	e8 f8 41 00 00       	call   2a8b0 <assert_abort>
   266b8:	c7 44 24 08 50 01 00 	movl   $0x150,0x8(%esp)
   266bf:	00 
   266c0:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   266c7:	00 
   266c8:	c7 04 24 0c e6 02 00 	movl   $0x2e60c,(%esp)
   266cf:	e8 dc 41 00 00       	call   2a8b0 <assert_abort>
   266d4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   266da:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000266e0 <hash_table_apply>:
   266e0:	55                   	push   %ebp
   266e1:	89 e5                	mov    %esp,%ebp
   266e3:	57                   	push   %edi
   266e4:	56                   	push   %esi
   266e5:	53                   	push   %ebx
   266e6:	83 ec 2c             	sub    $0x2c,%esp
   266e9:	8b 75 0c             	mov    0xc(%ebp),%esi
   266ec:	8b 55 10             	mov    0x10(%ebp),%edx
   266ef:	8b 5d 08             	mov    0x8(%ebp),%ebx
   266f2:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   266f5:	85 f6                	test   %esi,%esi
   266f7:	0f 84 0b 01 00 00    	je     26808 <hash_table_apply+0x128>
   266fd:	85 db                	test   %ebx,%ebx
   266ff:	0f 84 de 00 00 00    	je     267e3 <hash_table_apply+0x103>
   26705:	8b 43 04             	mov    0x4(%ebx),%eax
   26708:	85 c0                	test   %eax,%eax
   2670a:	0f 84 d3 00 00 00    	je     267e3 <hash_table_apply+0x103>
   26710:	8b 53 10             	mov    0x10(%ebx),%edx
   26713:	85 d2                	test   %edx,%edx
   26715:	74 5d                	je     26774 <hash_table_apply+0x94>
   26717:	8b 4b 08             	mov    0x8(%ebx),%ecx
   2671a:	c6 43 18 01          	movb   $0x1,0x18(%ebx)
   2671e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
   26721:	85 c9                	test   %ecx,%ecx
   26723:	0f 84 d6 00 00 00    	je     267ff <hash_table_apply+0x11f>
   26729:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
   26730:	89 5d e0             	mov    %ebx,-0x20(%ebp)
   26733:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   26736:	c1 e3 03             	shl    $0x3,%ebx
   26739:	8d 0c 18             	lea    (%eax,%ebx,1),%ecx
   2673c:	8b 51 04             	mov    0x4(%ecx),%edx
   2673f:	39 ca                	cmp    %ecx,%edx
   26741:	8b 7a 04             	mov    0x4(%edx),%edi
   26744:	75 1e                	jne    26764 <hash_table_apply+0x84>
   26746:	e9 93 00 00 00       	jmp    267de <hash_table_apply+0xfe>
   2674b:	90                   	nop
   2674c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   26750:	8b 55 e0             	mov    -0x20(%ebp),%edx
   26753:	8b 4f 04             	mov    0x4(%edi),%ecx
   26756:	8b 42 04             	mov    0x4(%edx),%eax
   26759:	89 fa                	mov    %edi,%edx
   2675b:	8d 3c 18             	lea    (%eax,%ebx,1),%edi
   2675e:	39 fa                	cmp    %edi,%edx
   26760:	74 1e                	je     26780 <hash_table_apply+0xa0>
   26762:	89 cf                	mov    %ecx,%edi
   26764:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   26767:	89 14 24             	mov    %edx,(%esp)
   2676a:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   2676e:	ff d6                	call   *%esi
   26770:	84 c0                	test   %al,%al
   26772:	75 dc                	jne    26750 <hash_table_apply+0x70>
   26774:	83 c4 2c             	add    $0x2c,%esp
   26777:	5b                   	pop    %ebx
   26778:	5e                   	pop    %esi
   26779:	5f                   	pop    %edi
   2677a:	5d                   	pop    %ebp
   2677b:	c3                   	ret    
   2677c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   26780:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   26783:	8b 49 08             	mov    0x8(%ecx),%ecx
   26786:	89 4d d8             	mov    %ecx,-0x28(%ebp)
   26789:	89 ca                	mov    %ecx,%edx
   2678b:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   2678e:	43                   	inc    %ebx
   2678f:	89 5d dc             	mov    %ebx,-0x24(%ebp)
   26792:	39 55 dc             	cmp    %edx,-0x24(%ebp)
   26795:	72 9c                	jb     26733 <hash_table_apply+0x53>
   26797:	8b 5d e0             	mov    -0x20(%ebp),%ebx
   2679a:	8b 43 0c             	mov    0xc(%ebx),%eax
   2679d:	8b 53 10             	mov    0x10(%ebx),%edx
   267a0:	89 c1                	mov    %eax,%ecx
   267a2:	c6 43 18 00          	movb   $0x0,0x18(%ebx)
   267a6:	c1 e9 02             	shr    $0x2,%ecx
   267a9:	39 d1                	cmp    %edx,%ecx
   267ab:	72 18                	jb     267c5 <hash_table_apply+0xe5>
   267ad:	83 7d d8 59          	cmpl   $0x59,-0x28(%ebp)
   267b1:	76 12                	jbe    267c5 <hash_table_apply+0xe5>
   267b3:	8b 55 d8             	mov    -0x28(%ebp),%edx
   267b6:	89 d8                	mov    %ebx,%eax
   267b8:	d1 ea                	shr    %edx
   267ba:	e8 41 f4 ff ff       	call   25c00 <resize>
   267bf:	8b 43 0c             	mov    0xc(%ebx),%eax
   267c2:	8b 53 10             	mov    0x10(%ebx),%edx
   267c5:	39 d0                	cmp    %edx,%eax
   267c7:	73 ab                	jae    26774 <hash_table_apply+0x94>
   267c9:	8b 43 08             	mov    0x8(%ebx),%eax
   267cc:	83 c4 2c             	add    $0x2c,%esp
   267cf:	8d 54 00 01          	lea    0x1(%eax,%eax,1),%edx
   267d3:	89 d8                	mov    %ebx,%eax
   267d5:	5b                   	pop    %ebx
   267d6:	5e                   	pop    %esi
   267d7:	5f                   	pop    %edi
   267d8:	5d                   	pop    %ebp
   267d9:	e9 22 f4 ff ff       	jmp    25c00 <resize>
   267de:	8b 55 d8             	mov    -0x28(%ebp),%edx
   267e1:	eb a8                	jmp    2678b <hash_table_apply+0xab>
   267e3:	c7 44 24 08 66 01 00 	movl   $0x166,0x8(%esp)
   267ea:	00 
   267eb:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   267f2:	00 
   267f3:	c7 04 24 eb e5 02 00 	movl   $0x2e5eb,(%esp)
   267fa:	e8 b1 40 00 00       	call   2a8b0 <assert_abort>
   267ff:	c6 43 18 00          	movb   $0x0,0x18(%ebx)
   26803:	8b 43 0c             	mov    0xc(%ebx),%eax
   26806:	eb bd                	jmp    267c5 <hash_table_apply+0xe5>
   26808:	c7 44 24 08 65 01 00 	movl   $0x165,0x8(%esp)
   2680f:	00 
   26810:	c7 44 24 04 d2 e5 02 	movl   $0x2e5d2,0x4(%esp)
   26817:	00 
   26818:	c7 04 24 fc dc 02 00 	movl   $0x2dcfc,(%esp)
   2681f:	e8 8c 40 00 00       	call   2a8b0 <assert_abort>
   26824:	66 90                	xchg   %ax,%ax
   26826:	66 90                	xchg   %ax,%ax
   26828:	66 90                	xchg   %ax,%ax
   2682a:	66 90                	xchg   %ax,%ax
   2682c:	66 90                	xchg   %ax,%ax
   2682e:	66 90                	xchg   %ax,%ax

00026830 <_days_since_epoch>:
   26830:	55                   	push   %ebp
   26831:	89 e5                	mov    %esp,%ebp
   26833:	57                   	push   %edi
   26834:	56                   	push   %esi
   26835:	53                   	push   %ebx
   26836:	89 c3                	mov    %eax,%ebx
   26838:	8d 04 c0             	lea    (%eax,%eax,8),%eax
   2683b:	83 ec 0c             	sub    $0xc,%esp
   2683e:	89 55 f0             	mov    %edx,-0x10(%ebp)
   26841:	8d 04 c3             	lea    (%ebx,%eax,8),%eax
   26844:	8d 94 80 32 9c ff ff 	lea    -0x63ce(%eax,%eax,4),%edx
   2684b:	89 d8                	mov    %ebx,%eax
   2684d:	83 e8 45             	sub    $0x45,%eax
   26850:	0f 88 ca 00 00 00    	js     26920 <_days_since_epoch+0xf0>
   26856:	89 c7                	mov    %eax,%edi
   26858:	89 de                	mov    %ebx,%esi
   2685a:	c1 ff 1f             	sar    $0x1f,%edi
   2685d:	c1 ef 1e             	shr    $0x1e,%edi
   26860:	01 c7                	add    %eax,%edi
   26862:	c1 ff 02             	sar    $0x2,%edi
   26865:	01 d7                	add    %edx,%edi
   26867:	4e                   	dec    %esi
   26868:	89 7d e8             	mov    %edi,-0x18(%ebp)
   2686b:	0f 88 df 00 00 00    	js     26950 <_days_since_epoch+0x120>
   26871:	89 f0                	mov    %esi,%eax
   26873:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
   26878:	f7 ea                	imul   %edx
   2687a:	c1 fe 1f             	sar    $0x1f,%esi
   2687d:	c1 fa 05             	sar    $0x5,%edx
   26880:	29 f2                	sub    %esi,%edx
   26882:	8b 75 e8             	mov    -0x18(%ebp),%esi
   26885:	89 df                	mov    %ebx,%edi
   26887:	29 d6                	sub    %edx,%esi
   26889:	81 c7 2b 01 00 00    	add    $0x12b,%edi
   2688f:	89 75 e8             	mov    %esi,-0x18(%ebp)
   26892:	0f 88 e8 00 00 00    	js     26980 <_days_since_epoch+0x150>
   26898:	89 f8                	mov    %edi,%eax
   2689a:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
   2689f:	f7 ea                	imul   %edx
   268a1:	c1 ff 1f             	sar    $0x1f,%edi
   268a4:	c1 fa 07             	sar    $0x7,%edx
   268a7:	29 fa                	sub    %edi,%edx
   268a9:	81 c3 6c 07 00 00    	add    $0x76c,%ebx
   268af:	8b 75 e8             	mov    -0x18(%ebp),%esi
   268b2:	01 d6                	add    %edx,%esi
   268b4:	89 d8                	mov    %ebx,%eax
   268b6:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
   268bb:	f7 ea                	imul   %edx
   268bd:	c1 fa 07             	sar    $0x7,%edx
   268c0:	89 d8                	mov    %ebx,%eax
   268c2:	c1 f8 1f             	sar    $0x1f,%eax
   268c5:	29 c2                	sub    %eax,%edx
   268c7:	8d 04 92             	lea    (%edx,%edx,4),%eax
   268ca:	8d 04 80             	lea    (%eax,%eax,4),%eax
   268cd:	c1 e0 04             	shl    $0x4,%eax
   268d0:	39 c3                	cmp    %eax,%ebx
   268d2:	74 31                	je     26905 <_days_since_epoch+0xd5>
   268d4:	89 da                	mov    %ebx,%edx
   268d6:	bf 64 00 00 00       	mov    $0x64,%edi
   268db:	c1 fa 1f             	sar    $0x1f,%edx
   268de:	89 d8                	mov    %ebx,%eax
   268e0:	f7 ff                	idiv   %edi
   268e2:	85 d2                	test   %edx,%edx
   268e4:	75 1a                	jne    26900 <_days_since_epoch+0xd0>
   268e6:	8b 55 f0             	mov    -0x10(%ebp),%edx
   268e9:	8b 04 95 60 ea 02 00 	mov    0x2ea60(,%edx,4),%eax
   268f0:	83 c4 0c             	add    $0xc,%esp
   268f3:	8d 44 08 ff          	lea    -0x1(%eax,%ecx,1),%eax
   268f7:	5b                   	pop    %ebx
   268f8:	01 f0                	add    %esi,%eax
   268fa:	5e                   	pop    %esi
   268fb:	5f                   	pop    %edi
   268fc:	5d                   	pop    %ebp
   268fd:	c3                   	ret    
   268fe:	66 90                	xchg   %ax,%ax
   26900:	83 e3 03             	and    $0x3,%ebx
   26903:	75 e1                	jne    268e6 <_days_since_epoch+0xb6>
   26905:	8b 55 f0             	mov    -0x10(%ebp),%edx
   26908:	8b 04 95 20 ea 02 00 	mov    0x2ea20(,%edx,4),%eax
   2690f:	83 c4 0c             	add    $0xc,%esp
   26912:	8d 44 08 ff          	lea    -0x1(%eax,%ecx,1),%eax
   26916:	5b                   	pop    %ebx
   26917:	01 f0                	add    %esi,%eax
   26919:	5e                   	pop    %esi
   2691a:	5f                   	pop    %edi
   2691b:	5d                   	pop    %ebp
   2691c:	c3                   	ret    
   2691d:	8d 76 00             	lea    0x0(%esi),%esi
   26920:	89 c6                	mov    %eax,%esi
   26922:	c1 fe 1f             	sar    $0x1f,%esi
   26925:	c1 ee 1e             	shr    $0x1e,%esi
   26928:	8d 3c 30             	lea    (%eax,%esi,1),%edi
   2692b:	89 7d e8             	mov    %edi,-0x18(%ebp)
   2692e:	83 e7 03             	and    $0x3,%edi
   26931:	39 f7                	cmp    %esi,%edi
   26933:	0f 84 1d ff ff ff    	je     26856 <_days_since_epoch+0x26>
   26939:	8b 7d e8             	mov    -0x18(%ebp),%edi
   2693c:	89 de                	mov    %ebx,%esi
   2693e:	c1 ff 02             	sar    $0x2,%edi
   26941:	4f                   	dec    %edi
   26942:	01 d7                	add    %edx,%edi
   26944:	4e                   	dec    %esi
   26945:	89 7d e8             	mov    %edi,-0x18(%ebp)
   26948:	0f 89 23 ff ff ff    	jns    26871 <_days_since_epoch+0x41>
   2694e:	66 90                	xchg   %ax,%ax
   26950:	89 f2                	mov    %esi,%edx
   26952:	89 f0                	mov    %esi,%eax
   26954:	c1 fa 1f             	sar    $0x1f,%edx
   26957:	bf 64 00 00 00       	mov    $0x64,%edi
   2695c:	f7 ff                	idiv   %edi
   2695e:	85 d2                	test   %edx,%edx
   26960:	0f 84 0b ff ff ff    	je     26871 <_days_since_epoch+0x41>
   26966:	89 f0                	mov    %esi,%eax
   26968:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
   2696d:	f7 ea                	imul   %edx
   2696f:	c1 fe 1f             	sar    $0x1f,%esi
   26972:	c1 fa 05             	sar    $0x5,%edx
   26975:	29 f2                	sub    %esi,%edx
   26977:	4a                   	dec    %edx
   26978:	e9 05 ff ff ff       	jmp    26882 <_days_since_epoch+0x52>
   2697d:	8d 76 00             	lea    0x0(%esi),%esi
   26980:	89 fa                	mov    %edi,%edx
   26982:	89 f8                	mov    %edi,%eax
   26984:	c1 fa 1f             	sar    $0x1f,%edx
   26987:	be 90 01 00 00       	mov    $0x190,%esi
   2698c:	f7 fe                	idiv   %esi
   2698e:	85 d2                	test   %edx,%edx
   26990:	0f 84 02 ff ff ff    	je     26898 <_days_since_epoch+0x68>
   26996:	89 f8                	mov    %edi,%eax
   26998:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
   2699d:	f7 ea                	imul   %edx
   2699f:	c1 ff 1f             	sar    $0x1f,%edi
   269a2:	c1 fa 07             	sar    $0x7,%edx
   269a5:	29 fa                	sub    %edi,%edx
   269a7:	4a                   	dec    %edx
   269a8:	e9 fc fe ff ff       	jmp    268a9 <_days_since_epoch+0x79>
   269ad:	8d 76 00             	lea    0x0(%esi),%esi

000269b0 <_wbyear.isra.3>:
   269b0:	55                   	push   %ebp
   269b1:	b9 01 00 00 00       	mov    $0x1,%ecx
   269b6:	89 e5                	mov    %esp,%ebp
   269b8:	57                   	push   %edi
   269b9:	56                   	push   %esi
   269ba:	53                   	push   %ebx
   269bb:	83 ec 1c             	sub    $0x1c,%esp
   269be:	89 d6                	mov    %edx,%esi
   269c0:	31 d2                	xor    %edx,%edx
   269c2:	89 c3                	mov    %eax,%ebx
   269c4:	e8 67 fe ff ff       	call   26830 <_days_since_epoch>
   269c9:	89 c1                	mov    %eax,%ecx
   269cb:	83 c1 04             	add    $0x4,%ecx
   269ce:	0f 88 a4 00 00 00    	js     26a78 <_wbyear.isra.3+0xc8>
   269d4:	89 c8                	mov    %ecx,%eax
   269d6:	ba 93 24 49 92       	mov    $0x92492493,%edx
   269db:	f7 ea                	imul   %edx
   269dd:	89 c8                	mov    %ecx,%eax
   269df:	01 ca                	add    %ecx,%edx
   269e1:	c1 fa 02             	sar    $0x2,%edx
   269e4:	c1 f8 1f             	sar    $0x1f,%eax
   269e7:	29 c2                	sub    %eax,%edx
   269e9:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax
   269f0:	29 d0                	sub    %edx,%eax
   269f2:	29 c1                	sub    %eax,%ecx
   269f4:	0f 88 d8 00 00 00    	js     26ad2 <_wbyear.isra.3+0x122>
   269fa:	83 f9 06             	cmp    $0x6,%ecx
   269fd:	0f 8f fd 00 00 00    	jg     26b00 <_wbyear.isra.3+0x150>
   26a03:	bf 04 00 00 00       	mov    $0x4,%edi
   26a08:	29 cf                	sub    %ecx,%edi
   26a0a:	0f 88 a0 00 00 00    	js     26ab0 <_wbyear.isra.3+0x100>
   26a10:	83 ef 03             	sub    $0x3,%edi
   26a13:	29 fe                	sub    %edi,%esi
   26a15:	0f 88 05 01 00 00    	js     26b20 <_wbyear.isra.3+0x170>
   26a1b:	8d 8b 6c 07 00 00    	lea    0x76c(%ebx),%ecx
   26a21:	bf 90 01 00 00       	mov    $0x190,%edi
   26a26:	89 ca                	mov    %ecx,%edx
   26a28:	89 c8                	mov    %ecx,%eax
   26a2a:	c1 fa 1f             	sar    $0x1f,%edx
   26a2d:	f7 ff                	idiv   %edi
   26a2f:	85 d2                	test   %edx,%edx
   26a31:	b8 6d 01 00 00       	mov    $0x16d,%eax
   26a36:	75 18                	jne    26a50 <_wbyear.isra.3+0xa0>
   26a38:	39 c6                	cmp    %eax,%esi
   26a3a:	0f 9f c0             	setg   %al
   26a3d:	25 ff 00 00 00       	and    $0xff,%eax
   26a42:	83 c4 1c             	add    $0x1c,%esp
   26a45:	01 c3                	add    %eax,%ebx
   26a47:	89 d8                	mov    %ebx,%eax
   26a49:	5b                   	pop    %ebx
   26a4a:	5e                   	pop    %esi
   26a4b:	5f                   	pop    %edi
   26a4c:	5d                   	pop    %ebp
   26a4d:	c3                   	ret    
   26a4e:	66 90                	xchg   %ax,%ax
   26a50:	89 ca                	mov    %ecx,%edx
   26a52:	66 bf 64 00          	mov    $0x64,%di
   26a56:	c1 fa 1f             	sar    $0x1f,%edx
   26a59:	89 c8                	mov    %ecx,%eax
   26a5b:	f7 ff                	idiv   %edi
   26a5d:	85 d2                	test   %edx,%edx
   26a5f:	b8 6c 01 00 00       	mov    $0x16c,%eax
   26a64:	74 d2                	je     26a38 <_wbyear.isra.3+0x88>
   26a66:	83 e1 03             	and    $0x3,%ecx
   26a69:	0f 94 c0             	sete   %al
   26a6c:	25 ff 00 00 00       	and    $0xff,%eax
   26a71:	05 6c 01 00 00       	add    $0x16c,%eax
   26a76:	eb c0                	jmp    26a38 <_wbyear.isra.3+0x88>
   26a78:	89 ca                	mov    %ecx,%edx
   26a7a:	bf 07 00 00 00       	mov    $0x7,%edi
   26a7f:	c1 fa 1f             	sar    $0x1f,%edx
   26a82:	89 c8                	mov    %ecx,%eax
   26a84:	f7 ff                	idiv   %edi
   26a86:	85 d2                	test   %edx,%edx
   26a88:	0f 84 46 ff ff ff    	je     269d4 <_wbyear.isra.3+0x24>
   26a8e:	89 c8                	mov    %ecx,%eax
   26a90:	ba 93 24 49 92       	mov    $0x92492493,%edx
   26a95:	f7 ea                	imul   %edx
   26a97:	89 c8                	mov    %ecx,%eax
   26a99:	01 ca                	add    %ecx,%edx
   26a9b:	c1 fa 02             	sar    $0x2,%edx
   26a9e:	c1 f8 1f             	sar    $0x1f,%eax
   26aa1:	29 c2                	sub    %eax,%edx
   26aa3:	4a                   	dec    %edx
   26aa4:	e9 40 ff ff ff       	jmp    269e9 <_wbyear.isra.3+0x39>
   26aa9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26ab0:	89 f8                	mov    %edi,%eax
   26ab2:	ba 93 24 49 92       	mov    $0x92492493,%edx
   26ab7:	f7 ea                	imul   %edx
   26ab9:	89 f8                	mov    %edi,%eax
   26abb:	01 fa                	add    %edi,%edx
   26abd:	c1 f8 1f             	sar    $0x1f,%eax
   26ac0:	c1 fa 02             	sar    $0x2,%edx
   26ac3:	29 c2                	sub    %eax,%edx
   26ac5:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax
   26acc:	29 d0                	sub    %edx,%eax
   26ace:	39 c7                	cmp    %eax,%edi
   26ad0:	75 1e                	jne    26af0 <_wbyear.isra.3+0x140>
   26ad2:	c7 44 24 08 ae 00 00 	movl   $0xae,0x8(%esp)
   26ad9:	00 
   26ada:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   26ae1:	00 
   26ae2:	c7 04 24 d8 e6 02 00 	movl   $0x2e6d8,(%esp)
   26ae9:	e8 c2 3d 00 00       	call   2a8b0 <assert_abort>
   26aee:	66 90                	xchg   %ax,%ax
   26af0:	bf 0b 00 00 00       	mov    $0xb,%edi
   26af5:	29 cf                	sub    %ecx,%edi
   26af7:	83 ff 06             	cmp    $0x6,%edi
   26afa:	0f 8e 10 ff ff ff    	jle    26a10 <_wbyear.isra.3+0x60>
   26b00:	c7 44 24 08 af 00 00 	movl   $0xaf,0x8(%esp)
   26b07:	00 
   26b08:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   26b0f:	00 
   26b10:	c7 04 24 e4 e6 02 00 	movl   $0x2e6e4,(%esp)
   26b17:	e8 94 3d 00 00       	call   2a8b0 <assert_abort>
   26b1c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   26b20:	83 c4 1c             	add    $0x1c,%esp
   26b23:	4b                   	dec    %ebx
   26b24:	89 d8                	mov    %ebx,%eax
   26b26:	5b                   	pop    %ebx
   26b27:	5e                   	pop    %esi
   26b28:	5f                   	pop    %edi
   26b29:	5d                   	pop    %ebp
   26b2a:	c3                   	ret    
   26b2b:	90                   	nop
   26b2c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00026b30 <_normalize_time>:
   26b30:	55                   	push   %ebp
   26b31:	89 e5                	mov    %esp,%ebp
   26b33:	57                   	push   %edi
   26b34:	56                   	push   %esi
   26b35:	53                   	push   %ebx
   26b36:	83 ec 3c             	sub    $0x3c,%esp
   26b39:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   26b3c:	8b 58 08             	mov    0x8(%eax),%ebx
   26b3f:	8b 70 0c             	mov    0xc(%eax),%esi
   26b42:	89 5d e0             	mov    %ebx,-0x20(%ebp)
   26b45:	8b 58 14             	mov    0x14(%eax),%ebx
   26b48:	89 5d cc             	mov    %ebx,-0x34(%ebp)
   26b4b:	89 d3                	mov    %edx,%ebx
   26b4d:	4e                   	dec    %esi
   26b4e:	03 18                	add    (%eax),%ebx
   26b50:	8b 48 04             	mov    0x4(%eax),%ecx
   26b53:	89 75 d8             	mov    %esi,-0x28(%ebp)
   26b56:	8b 78 10             	mov    0x10(%eax),%edi
   26b59:	0f 88 a9 03 00 00    	js     26f08 <_normalize_time+0x3d8>
   26b5f:	ba 89 88 88 88       	mov    $0x88888889,%edx
   26b64:	89 d8                	mov    %ebx,%eax
   26b66:	f7 ea                	imul   %edx
   26b68:	89 d8                	mov    %ebx,%eax
   26b6a:	01 da                	add    %ebx,%edx
   26b6c:	c1 fa 05             	sar    $0x5,%edx
   26b6f:	c1 f8 1f             	sar    $0x1f,%eax
   26b72:	29 c2                	sub    %eax,%edx
   26b74:	01 d1                	add    %edx,%ecx
   26b76:	89 d0                	mov    %edx,%eax
   26b78:	8d 14 93             	lea    (%ebx,%edx,4),%edx
   26b7b:	c1 e0 06             	shl    $0x6,%eax
   26b7e:	29 c2                	sub    %eax,%edx
   26b80:	89 55 dc             	mov    %edx,-0x24(%ebp)
   26b83:	0f 88 af 04 00 00    	js     27038 <_normalize_time+0x508>
   26b89:	83 7d dc 3b          	cmpl   $0x3b,-0x24(%ebp)
   26b8d:	0f 8f 89 04 00 00    	jg     2701c <_normalize_time+0x4ec>
   26b93:	89 c8                	mov    %ecx,%eax
   26b95:	ba 89 88 88 88       	mov    $0x88888889,%edx
   26b9a:	f7 ea                	imul   %edx
   26b9c:	89 c8                	mov    %ecx,%eax
   26b9e:	01 ca                	add    %ecx,%edx
   26ba0:	c1 fa 05             	sar    $0x5,%edx
   26ba3:	c1 f8 1f             	sar    $0x1f,%eax
   26ba6:	29 c2                	sub    %eax,%edx
   26ba8:	85 c9                	test   %ecx,%ecx
   26baa:	0f 88 40 03 00 00    	js     26ef0 <_normalize_time+0x3c0>
   26bb0:	89 d0                	mov    %edx,%eax
   26bb2:	8b 5d e0             	mov    -0x20(%ebp),%ebx
   26bb5:	c1 e0 06             	shl    $0x6,%eax
   26bb8:	01 d3                	add    %edx,%ebx
   26bba:	8d 14 91             	lea    (%ecx,%edx,4),%edx
   26bbd:	29 c2                	sub    %eax,%edx
   26bbf:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   26bc2:	0f 88 70 04 00 00    	js     27038 <_normalize_time+0x508>
   26bc8:	83 fa 3b             	cmp    $0x3b,%edx
   26bcb:	0f 8f 4b 04 00 00    	jg     2701c <_normalize_time+0x4ec>
   26bd1:	85 db                	test   %ebx,%ebx
   26bd3:	0f 88 df 02 00 00    	js     26eb8 <_normalize_time+0x388>
   26bd9:	ba ab aa aa 2a       	mov    $0x2aaaaaab,%edx
   26bde:	89 d8                	mov    %ebx,%eax
   26be0:	f7 ea                	imul   %edx
   26be2:	89 d8                	mov    %ebx,%eax
   26be4:	8b 4d d8             	mov    -0x28(%ebp),%ecx
   26be7:	c1 fa 02             	sar    $0x2,%edx
   26bea:	c1 f8 1f             	sar    $0x1f,%eax
   26bed:	29 c2                	sub    %eax,%edx
   26bef:	01 d1                	add    %edx,%ecx
   26bf1:	8d 04 52             	lea    (%edx,%edx,2),%eax
   26bf4:	c1 e0 03             	shl    $0x3,%eax
   26bf7:	29 c3                	sub    %eax,%ebx
   26bf9:	89 5d d8             	mov    %ebx,-0x28(%ebp)
   26bfc:	0f 88 36 04 00 00    	js     27038 <_normalize_time+0x508>
   26c02:	83 fb 17             	cmp    $0x17,%ebx
   26c05:	0f 8f 11 04 00 00    	jg     2701c <_normalize_time+0x4ec>
   26c0b:	85 ff                	test   %edi,%edi
   26c0d:	0f 88 6d 02 00 00    	js     26e80 <_normalize_time+0x350>
   26c13:	ba ab aa aa 2a       	mov    $0x2aaaaaab,%edx
   26c18:	89 f8                	mov    %edi,%eax
   26c1a:	f7 ea                	imul   %edx
   26c1c:	89 f8                	mov    %edi,%eax
   26c1e:	8b 5d cc             	mov    -0x34(%ebp),%ebx
   26c21:	d1 fa                	sar    %edx
   26c23:	c1 f8 1f             	sar    $0x1f,%eax
   26c26:	29 c2                	sub    %eax,%edx
   26c28:	01 d3                	add    %edx,%ebx
   26c2a:	89 5d e0             	mov    %ebx,-0x20(%ebp)
   26c2d:	8d 04 52             	lea    (%edx,%edx,2),%eax
   26c30:	89 fb                	mov    %edi,%ebx
   26c32:	c1 e0 02             	shl    $0x2,%eax
   26c35:	29 c3                	sub    %eax,%ebx
   26c37:	0f 88 fb 03 00 00    	js     27038 <_normalize_time+0x508>
   26c3d:	83 fb 0b             	cmp    $0xb,%ebx
   26c40:	0f 8f d6 03 00 00    	jg     2701c <_normalize_time+0x4ec>
   26c46:	85 c9                	test   %ecx,%ecx
   26c48:	0f 88 5a 03 00 00    	js     26fa8 <_normalize_time+0x478>
   26c4e:	ba bd 06 6b 39       	mov    $0x396b06bd,%edx
   26c53:	89 c8                	mov    %ecx,%eax
   26c55:	f7 ea                	imul   %edx
   26c57:	c1 fa 0f             	sar    $0xf,%edx
   26c5a:	89 c8                	mov    %ecx,%eax
   26c5c:	c1 f8 1f             	sar    $0x1f,%eax
   26c5f:	29 c2                	sub    %eax,%edx
   26c61:	8d 04 92             	lea    (%edx,%edx,4),%eax
   26c64:	8d 34 80             	lea    (%eax,%eax,4),%esi
   26c67:	8b 45 e0             	mov    -0x20(%ebp),%eax
   26c6a:	c1 e6 04             	shl    $0x4,%esi
   26c6d:	01 c6                	add    %eax,%esi
   26c6f:	8d 04 d2             	lea    (%edx,%edx,8),%eax
   26c72:	c1 e0 04             	shl    $0x4,%eax
   26c75:	01 d0                	add    %edx,%eax
   26c77:	c1 e0 04             	shl    $0x4,%eax
   26c7a:	29 d0                	sub    %edx,%eax
   26c7c:	89 c2                	mov    %eax,%edx
   26c7e:	c1 e2 06             	shl    $0x6,%edx
   26c81:	29 c2                	sub    %eax,%edx
   26c83:	29 d1                	sub    %edx,%ecx
   26c85:	0f 88 ad 03 00 00    	js     27038 <_normalize_time+0x508>
   26c8b:	81 f9 b0 3a 02 00    	cmp    $0x23ab0,%ecx
   26c91:	0f 8f 85 03 00 00    	jg     2701c <_normalize_time+0x4ec>
   26c97:	83 fb 01             	cmp    $0x1,%ebx
   26c9a:	0f 8e a0 02 00 00    	jle    26f40 <_normalize_time+0x410>
   26ca0:	81 f9 6d 01 00 00    	cmp    $0x16d,%ecx
   26ca6:	7e 60                	jle    26d08 <_normalize_time+0x1d8>
   26ca8:	89 5d e0             	mov    %ebx,-0x20(%ebp)
   26cab:	90                   	nop
   26cac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   26cb0:	8d be 6d 07 00 00    	lea    0x76d(%esi),%edi
   26cb6:	bb 90 01 00 00       	mov    $0x190,%ebx
   26cbb:	89 fa                	mov    %edi,%edx
   26cbd:	89 f8                	mov    %edi,%eax
   26cbf:	c1 fa 1f             	sar    $0x1f,%edx
   26cc2:	f7 fb                	idiv   %ebx
   26cc4:	85 d2                	test   %edx,%edx
   26cc6:	b8 6e 01 00 00       	mov    $0x16e,%eax
   26ccb:	74 26                	je     26cf3 <_normalize_time+0x1c3>
   26ccd:	89 fa                	mov    %edi,%edx
   26ccf:	89 f8                	mov    %edi,%eax
   26cd1:	c1 fa 1f             	sar    $0x1f,%edx
   26cd4:	66 bb 64 00          	mov    $0x64,%bx
   26cd8:	f7 fb                	idiv   %ebx
   26cda:	85 d2                	test   %edx,%edx
   26cdc:	b8 6d 01 00 00       	mov    $0x16d,%eax
   26ce1:	74 10                	je     26cf3 <_normalize_time+0x1c3>
   26ce3:	83 e7 03             	and    $0x3,%edi
   26ce6:	83 ff 01             	cmp    $0x1,%edi
   26ce9:	19 c0                	sbb    %eax,%eax
   26ceb:	83 f0 ff             	xor    $0xffffffff,%eax
   26cee:	05 6e 01 00 00       	add    $0x16e,%eax
   26cf3:	29 c1                	sub    %eax,%ecx
   26cf5:	46                   	inc    %esi
   26cf6:	81 f9 6d 01 00 00    	cmp    $0x16d,%ecx
   26cfc:	7f b2                	jg     26cb0 <_normalize_time+0x180>
   26cfe:	8b 5d e0             	mov    -0x20(%ebp),%ebx
   26d01:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26d08:	83 fb 0b             	cmp    $0xb,%ebx
   26d0b:	77 27                	ja     26d34 <_normalize_time+0x204>
   26d0d:	83 fb 01             	cmp    $0x1,%ebx
   26d10:	74 46                	je     26d58 <_normalize_time+0x228>
   26d12:	8b 04 9d a0 ea 02 00 	mov    0x2eaa0(,%ebx,4),%eax
   26d19:	39 c1                	cmp    %eax,%ecx
   26d1b:	0f 8c 87 00 00 00    	jl     26da8 <_normalize_time+0x278>
   26d21:	29 c1                	sub    %eax,%ecx
   26d23:	8d 43 01             	lea    0x1(%ebx),%eax
   26d26:	83 f8 0c             	cmp    $0xc,%eax
   26d29:	75 25                	jne    26d50 <_normalize_time+0x220>
   26d2b:	83 eb 0b             	sub    $0xb,%ebx
   26d2e:	46                   	inc    %esi
   26d2f:	83 fb 0b             	cmp    $0xb,%ebx
   26d32:	76 d9                	jbe    26d0d <_normalize_time+0x1dd>
   26d34:	c7 44 24 08 67 00 00 	movl   $0x67,0x8(%esp)
   26d3b:	00 
   26d3c:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   26d43:	00 
   26d44:	c7 04 24 f1 e6 02 00 	movl   $0x2e6f1,(%esp)
   26d4b:	e8 60 3b 00 00       	call   2a8b0 <assert_abort>
   26d50:	89 c3                	mov    %eax,%ebx
   26d52:	eb b4                	jmp    26d08 <_normalize_time+0x1d8>
   26d54:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   26d58:	8d 86 d8 0e 00 00    	lea    0xed8(%esi),%eax
   26d5e:	bf 90 01 00 00       	mov    $0x190,%edi
   26d63:	89 c2                	mov    %eax,%edx
   26d65:	89 45 cc             	mov    %eax,-0x34(%ebp)
   26d68:	c1 fa 1f             	sar    $0x1f,%edx
   26d6b:	f7 ff                	idiv   %edi
   26d6d:	85 d2                	test   %edx,%edx
   26d6f:	b8 1d 00 00 00       	mov    $0x1d,%eax
   26d74:	74 a3                	je     26d19 <_normalize_time+0x1e9>
   26d76:	8b 45 cc             	mov    -0x34(%ebp),%eax
   26d79:	66 bf 64 00          	mov    $0x64,%di
   26d7d:	89 c2                	mov    %eax,%edx
   26d7f:	c1 fa 1f             	sar    $0x1f,%edx
   26d82:	f7 ff                	idiv   %edi
   26d84:	85 d2                	test   %edx,%edx
   26d86:	b8 1c 00 00 00       	mov    $0x1c,%eax
   26d8b:	74 8c                	je     26d19 <_normalize_time+0x1e9>
   26d8d:	8b 7d cc             	mov    -0x34(%ebp),%edi
   26d90:	83 e7 03             	and    $0x3,%edi
   26d93:	83 ff 01             	cmp    $0x1,%edi
   26d96:	19 c0                	sbb    %eax,%eax
   26d98:	83 f0 ff             	xor    $0xffffffff,%eax
   26d9b:	83 c0 1d             	add    $0x1d,%eax
   26d9e:	39 c1                	cmp    %eax,%ecx
   26da0:	0f 8d 7b ff ff ff    	jge    26d21 <_normalize_time+0x1f1>
   26da6:	66 90                	xchg   %ax,%ax
   26da8:	8d 86 6c 07 00 00    	lea    0x76c(%esi),%eax
   26dae:	8d 79 01             	lea    0x1(%ecx),%edi
   26db1:	89 c2                	mov    %eax,%edx
   26db3:	b9 90 01 00 00       	mov    $0x190,%ecx
   26db8:	c1 fa 1f             	sar    $0x1f,%edx
   26dbb:	89 45 e0             	mov    %eax,-0x20(%ebp)
   26dbe:	f7 f9                	idiv   %ecx
   26dc0:	85 d2                	test   %edx,%edx
   26dc2:	0f 85 90 00 00 00    	jne    26e58 <_normalize_time+0x328>
   26dc8:	8b 04 9d 20 ea 02 00 	mov    0x2ea20(,%ebx,4),%eax
   26dcf:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   26dd2:	8d 44 07 ff          	lea    -0x1(%edi,%eax,1),%eax
   26dd6:	89 f9                	mov    %edi,%ecx
   26dd8:	89 42 1c             	mov    %eax,0x1c(%edx)
   26ddb:	89 da                	mov    %ebx,%edx
   26ddd:	89 f0                	mov    %esi,%eax
   26ddf:	e8 4c fa ff ff       	call   26830 <_days_since_epoch>
   26de4:	83 c0 04             	add    $0x4,%eax
   26de7:	89 45 cc             	mov    %eax,-0x34(%ebp)
   26dea:	0f 88 f8 01 00 00    	js     26fe8 <_normalize_time+0x4b8>
   26df0:	8b 45 cc             	mov    -0x34(%ebp),%eax
   26df3:	ba 93 24 49 92       	mov    $0x92492493,%edx
   26df8:	f7 ea                	imul   %edx
   26dfa:	8b 45 cc             	mov    -0x34(%ebp),%eax
   26dfd:	01 c2                	add    %eax,%edx
   26dff:	8b 45 cc             	mov    -0x34(%ebp),%eax
   26e02:	c1 fa 02             	sar    $0x2,%edx
   26e05:	c1 f8 1f             	sar    $0x1f,%eax
   26e08:	29 c2                	sub    %eax,%edx
   26e0a:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax
   26e11:	8b 4d cc             	mov    -0x34(%ebp),%ecx
   26e14:	29 d0                	sub    %edx,%eax
   26e16:	29 c1                	sub    %eax,%ecx
   26e18:	0f 88 1a 02 00 00    	js     27038 <_normalize_time+0x508>
   26e1e:	83 f9 06             	cmp    $0x6,%ecx
   26e21:	0f 8f f5 01 00 00    	jg     2701c <_normalize_time+0x4ec>
   26e27:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   26e2a:	8b 55 dc             	mov    -0x24(%ebp),%edx
   26e2d:	89 48 18             	mov    %ecx,0x18(%eax)
   26e30:	89 10                	mov    %edx,(%eax)
   26e32:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   26e35:	8b 55 d8             	mov    -0x28(%ebp),%edx
   26e38:	89 48 04             	mov    %ecx,0x4(%eax)
   26e3b:	89 50 08             	mov    %edx,0x8(%eax)
   26e3e:	89 78 0c             	mov    %edi,0xc(%eax)
   26e41:	89 58 10             	mov    %ebx,0x10(%eax)
   26e44:	89 70 14             	mov    %esi,0x14(%eax)
   26e47:	83 c4 3c             	add    $0x3c,%esp
   26e4a:	31 c0                	xor    %eax,%eax
   26e4c:	5b                   	pop    %ebx
   26e4d:	5e                   	pop    %esi
   26e4e:	5f                   	pop    %edi
   26e4f:	5d                   	pop    %ebp
   26e50:	c3                   	ret    
   26e51:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   26e58:	8b 45 e0             	mov    -0x20(%ebp),%eax
   26e5b:	66 b9 64 00          	mov    $0x64,%cx
   26e5f:	89 c2                	mov    %eax,%edx
   26e61:	c1 fa 1f             	sar    $0x1f,%edx
   26e64:	f7 f9                	idiv   %ecx
   26e66:	85 d2                	test   %edx,%edx
   26e68:	74 0a                	je     26e74 <_normalize_time+0x344>
   26e6a:	f6 45 e0 03          	testb  $0x3,-0x20(%ebp)
   26e6e:	0f 84 54 ff ff ff    	je     26dc8 <_normalize_time+0x298>
   26e74:	8b 04 9d 60 ea 02 00 	mov    0x2ea60(,%ebx,4),%eax
   26e7b:	e9 4f ff ff ff       	jmp    26dcf <_normalize_time+0x29f>
   26e80:	89 fa                	mov    %edi,%edx
   26e82:	bb 0c 00 00 00       	mov    $0xc,%ebx
   26e87:	c1 fa 1f             	sar    $0x1f,%edx
   26e8a:	89 f8                	mov    %edi,%eax
   26e8c:	f7 fb                	idiv   %ebx
   26e8e:	85 d2                	test   %edx,%edx
   26e90:	89 f8                	mov    %edi,%eax
   26e92:	ba ab aa aa 2a       	mov    $0x2aaaaaab,%edx
   26e97:	0f 84 7d fd ff ff    	je     26c1a <_normalize_time+0xea>
   26e9d:	f7 ea                	imul   %edx
   26e9f:	89 f8                	mov    %edi,%eax
   26ea1:	8b 5d cc             	mov    -0x34(%ebp),%ebx
   26ea4:	d1 fa                	sar    %edx
   26ea6:	c1 f8 1f             	sar    $0x1f,%eax
   26ea9:	29 c2                	sub    %eax,%edx
   26eab:	4a                   	dec    %edx
   26eac:	01 d3                	add    %edx,%ebx
   26eae:	89 5d e0             	mov    %ebx,-0x20(%ebp)
   26eb1:	e9 77 fd ff ff       	jmp    26c2d <_normalize_time+0xfd>
   26eb6:	66 90                	xchg   %ax,%ax
   26eb8:	89 da                	mov    %ebx,%edx
   26eba:	b9 18 00 00 00       	mov    $0x18,%ecx
   26ebf:	c1 fa 1f             	sar    $0x1f,%edx
   26ec2:	89 d8                	mov    %ebx,%eax
   26ec4:	f7 f9                	idiv   %ecx
   26ec6:	85 d2                	test   %edx,%edx
   26ec8:	89 d8                	mov    %ebx,%eax
   26eca:	ba ab aa aa 2a       	mov    $0x2aaaaaab,%edx
   26ecf:	0f 84 0b fd ff ff    	je     26be0 <_normalize_time+0xb0>
   26ed5:	f7 ea                	imul   %edx
   26ed7:	89 d8                	mov    %ebx,%eax
   26ed9:	8b 4d d8             	mov    -0x28(%ebp),%ecx
   26edc:	c1 fa 02             	sar    $0x2,%edx
   26edf:	c1 f8 1f             	sar    $0x1f,%eax
   26ee2:	29 c2                	sub    %eax,%edx
   26ee4:	4a                   	dec    %edx
   26ee5:	01 d1                	add    %edx,%ecx
   26ee7:	e9 05 fd ff ff       	jmp    26bf1 <_normalize_time+0xc1>
   26eec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   26ef0:	89 d0                	mov    %edx,%eax
   26ef2:	8d 1c 91             	lea    (%ecx,%edx,4),%ebx
   26ef5:	c1 e0 06             	shl    $0x6,%eax
   26ef8:	39 c3                	cmp    %eax,%ebx
   26efa:	0f 84 b0 fc ff ff    	je     26bb0 <_normalize_time+0x80>
   26f00:	4a                   	dec    %edx
   26f01:	e9 aa fc ff ff       	jmp    26bb0 <_normalize_time+0x80>
   26f06:	66 90                	xchg   %ax,%ax
   26f08:	89 da                	mov    %ebx,%edx
   26f0a:	89 d8                	mov    %ebx,%eax
   26f0c:	c1 fa 1f             	sar    $0x1f,%edx
   26f0f:	be 3c 00 00 00       	mov    $0x3c,%esi
   26f14:	f7 fe                	idiv   %esi
   26f16:	85 d2                	test   %edx,%edx
   26f18:	89 d8                	mov    %ebx,%eax
   26f1a:	ba 89 88 88 88       	mov    $0x88888889,%edx
   26f1f:	0f 84 41 fc ff ff    	je     26b66 <_normalize_time+0x36>
   26f25:	f7 ea                	imul   %edx
   26f27:	89 d8                	mov    %ebx,%eax
   26f29:	01 da                	add    %ebx,%edx
   26f2b:	c1 fa 05             	sar    $0x5,%edx
   26f2e:	c1 f8 1f             	sar    $0x1f,%eax
   26f31:	29 c2                	sub    %eax,%edx
   26f33:	4a                   	dec    %edx
   26f34:	01 d1                	add    %edx,%ecx
   26f36:	e9 3b fc ff ff       	jmp    26b76 <_normalize_time+0x46>
   26f3b:	90                   	nop
   26f3c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   26f40:	81 f9 6d 01 00 00    	cmp    $0x16d,%ecx
   26f46:	0f 8e bc fd ff ff    	jle    26d08 <_normalize_time+0x1d8>
   26f4c:	89 5d e0             	mov    %ebx,-0x20(%ebp)
   26f4f:	90                   	nop
   26f50:	8d be 6c 07 00 00    	lea    0x76c(%esi),%edi
   26f56:	bb 90 01 00 00       	mov    $0x190,%ebx
   26f5b:	89 fa                	mov    %edi,%edx
   26f5d:	89 f8                	mov    %edi,%eax
   26f5f:	c1 fa 1f             	sar    $0x1f,%edx
   26f62:	f7 fb                	idiv   %ebx
   26f64:	85 d2                	test   %edx,%edx
   26f66:	b8 6e 01 00 00       	mov    $0x16e,%eax
   26f6b:	74 26                	je     26f93 <_normalize_time+0x463>
   26f6d:	89 fa                	mov    %edi,%edx
   26f6f:	89 f8                	mov    %edi,%eax
   26f71:	c1 fa 1f             	sar    $0x1f,%edx
   26f74:	66 bb 64 00          	mov    $0x64,%bx
   26f78:	f7 fb                	idiv   %ebx
   26f7a:	85 d2                	test   %edx,%edx
   26f7c:	b8 6d 01 00 00       	mov    $0x16d,%eax
   26f81:	74 10                	je     26f93 <_normalize_time+0x463>
   26f83:	83 e7 03             	and    $0x3,%edi
   26f86:	83 ff 01             	cmp    $0x1,%edi
   26f89:	19 c0                	sbb    %eax,%eax
   26f8b:	83 f0 ff             	xor    $0xffffffff,%eax
   26f8e:	05 6e 01 00 00       	add    $0x16e,%eax
   26f93:	29 c1                	sub    %eax,%ecx
   26f95:	46                   	inc    %esi
   26f96:	81 f9 6d 01 00 00    	cmp    $0x16d,%ecx
   26f9c:	7f b2                	jg     26f50 <_normalize_time+0x420>
   26f9e:	8b 5d e0             	mov    -0x20(%ebp),%ebx
   26fa1:	e9 62 fd ff ff       	jmp    26d08 <_normalize_time+0x1d8>
   26fa6:	66 90                	xchg   %ax,%ax
   26fa8:	89 ca                	mov    %ecx,%edx
   26faa:	be b1 3a 02 00       	mov    $0x23ab1,%esi
   26faf:	c1 fa 1f             	sar    $0x1f,%edx
   26fb2:	89 c8                	mov    %ecx,%eax
   26fb4:	f7 fe                	idiv   %esi
   26fb6:	85 d2                	test   %edx,%edx
   26fb8:	89 c8                	mov    %ecx,%eax
   26fba:	ba bd 06 6b 39       	mov    $0x396b06bd,%edx
   26fbf:	0f 84 90 fc ff ff    	je     26c55 <_normalize_time+0x125>
   26fc5:	f7 ea                	imul   %edx
   26fc7:	c1 fa 0f             	sar    $0xf,%edx
   26fca:	89 c8                	mov    %ecx,%eax
   26fcc:	c1 f8 1f             	sar    $0x1f,%eax
   26fcf:	29 c2                	sub    %eax,%edx
   26fd1:	4a                   	dec    %edx
   26fd2:	8d 04 92             	lea    (%edx,%edx,4),%eax
   26fd5:	8d 34 80             	lea    (%eax,%eax,4),%esi
   26fd8:	8b 45 e0             	mov    -0x20(%ebp),%eax
   26fdb:	c1 e6 04             	shl    $0x4,%esi
   26fde:	01 c6                	add    %eax,%esi
   26fe0:	e9 8a fc ff ff       	jmp    26c6f <_normalize_time+0x13f>
   26fe5:	8d 76 00             	lea    0x0(%esi),%esi
   26fe8:	89 c2                	mov    %eax,%edx
   26fea:	b9 07 00 00 00       	mov    $0x7,%ecx
   26fef:	c1 fa 1f             	sar    $0x1f,%edx
   26ff2:	f7 f9                	idiv   %ecx
   26ff4:	85 d2                	test   %edx,%edx
   26ff6:	0f 84 f4 fd ff ff    	je     26df0 <_normalize_time+0x2c0>
   26ffc:	8b 45 cc             	mov    -0x34(%ebp),%eax
   26fff:	ba 93 24 49 92       	mov    $0x92492493,%edx
   27004:	f7 ea                	imul   %edx
   27006:	8b 4d cc             	mov    -0x34(%ebp),%ecx
   27009:	8b 45 cc             	mov    -0x34(%ebp),%eax
   2700c:	c1 f8 1f             	sar    $0x1f,%eax
   2700f:	01 ca                	add    %ecx,%edx
   27011:	c1 fa 02             	sar    $0x2,%edx
   27014:	29 c2                	sub    %eax,%edx
   27016:	4a                   	dec    %edx
   27017:	e9 ee fd ff ff       	jmp    26e0a <_normalize_time+0x2da>
   2701c:	c7 44 24 08 af 00 00 	movl   $0xaf,0x8(%esp)
   27023:	00 
   27024:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   2702b:	00 
   2702c:	c7 04 24 e4 e6 02 00 	movl   $0x2e6e4,(%esp)
   27033:	e8 78 38 00 00       	call   2a8b0 <assert_abort>
   27038:	c7 44 24 08 ae 00 00 	movl   $0xae,0x8(%esp)
   2703f:	00 
   27040:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   27047:	00 
   27048:	c7 04 24 d8 e6 02 00 	movl   $0x2e6d8,(%esp)
   2704f:	e8 5c 38 00 00       	call   2a8b0 <assert_abort>
   27054:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2705a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00027060 <tv_add>:
   27060:	55                   	push   %ebp
   27061:	ba 83 de 1b 43       	mov    $0x431bde83,%edx
   27066:	89 e5                	mov    %esp,%ebp
   27068:	57                   	push   %edi
   27069:	56                   	push   %esi
   2706a:	53                   	push   %ebx
   2706b:	8b 75 0c             	mov    0xc(%ebp),%esi
   2706e:	8b 4d 08             	mov    0x8(%ebp),%ecx
   27071:	89 f0                	mov    %esi,%eax
   27073:	f7 ea                	imul   %edx
   27075:	89 f0                	mov    %esi,%eax
   27077:	8b 39                	mov    (%ecx),%edi
   27079:	c1 f8 1f             	sar    $0x1f,%eax
   2707c:	c1 fa 12             	sar    $0x12,%edx
   2707f:	29 c2                	sub    %eax,%edx
   27081:	89 d3                	mov    %edx,%ebx
   27083:	01 d7                	add    %edx,%edi
   27085:	c1 e3 05             	shl    $0x5,%ebx
   27088:	89 39                	mov    %edi,(%ecx)
   2708a:	29 d3                	sub    %edx,%ebx
   2708c:	89 d8                	mov    %ebx,%eax
   2708e:	c1 e0 06             	shl    $0x6,%eax
   27091:	29 d8                	sub    %ebx,%eax
   27093:	8d 04 c2             	lea    (%edx,%eax,8),%eax
   27096:	c1 e0 06             	shl    $0x6,%eax
   27099:	29 c6                	sub    %eax,%esi
   2709b:	8b 41 04             	mov    0x4(%ecx),%eax
   2709e:	01 f0                	add    %esi,%eax
   270a0:	89 41 04             	mov    %eax,0x4(%ecx)
   270a3:	3d 40 42 0f 00       	cmp    $0xf4240,%eax
   270a8:	7e 0b                	jle    270b5 <tv_add+0x55>
   270aa:	47                   	inc    %edi
   270ab:	2d 40 42 0f 00       	sub    $0xf4240,%eax
   270b0:	89 39                	mov    %edi,(%ecx)
   270b2:	89 41 04             	mov    %eax,0x4(%ecx)
   270b5:	5b                   	pop    %ebx
   270b6:	5e                   	pop    %esi
   270b7:	5f                   	pop    %edi
   270b8:	5d                   	pop    %ebp
   270b9:	c3                   	ret    
   270ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000270c0 <tv_sub>:
   270c0:	55                   	push   %ebp
   270c1:	89 e5                	mov    %esp,%ebp
   270c3:	53                   	push   %ebx
   270c4:	8b 45 0c             	mov    0xc(%ebp),%eax
   270c7:	8b 55 08             	mov    0x8(%ebp),%edx
   270ca:	8b 48 04             	mov    0x4(%eax),%ecx
   270cd:	8b 5a 04             	mov    0x4(%edx),%ebx
   270d0:	29 cb                	sub    %ecx,%ebx
   270d2:	8b 12                	mov    (%edx),%edx
   270d4:	8b 08                	mov    (%eax),%ecx
   270d6:	29 ca                	sub    %ecx,%edx
   270d8:	89 d1                	mov    %edx,%ecx
   270da:	c1 e1 05             	shl    $0x5,%ecx
   270dd:	29 d1                	sub    %edx,%ecx
   270df:	89 c8                	mov    %ecx,%eax
   270e1:	c1 e0 06             	shl    $0x6,%eax
   270e4:	29 c8                	sub    %ecx,%eax
   270e6:	8d 04 c2             	lea    (%edx,%eax,8),%eax
   270e9:	c1 e0 06             	shl    $0x6,%eax
   270ec:	01 d8                	add    %ebx,%eax
   270ee:	5b                   	pop    %ebx
   270ef:	5d                   	pop    %ebp
   270f0:	c3                   	ret    
   270f1:	eb 0d                	jmp    27100 <tv_gt>
   270f3:	90                   	nop
   270f4:	90                   	nop
   270f5:	90                   	nop
   270f6:	90                   	nop
   270f7:	90                   	nop
   270f8:	90                   	nop
   270f9:	90                   	nop
   270fa:	90                   	nop
   270fb:	90                   	nop
   270fc:	90                   	nop
   270fd:	90                   	nop
   270fe:	90                   	nop
   270ff:	90                   	nop

00027100 <tv_gt>:
   27100:	55                   	push   %ebp
   27101:	b8 01 00 00 00       	mov    $0x1,%eax
   27106:	89 e5                	mov    %esp,%ebp
   27108:	53                   	push   %ebx
   27109:	8b 55 0c             	mov    0xc(%ebp),%edx
   2710c:	8b 4d 08             	mov    0x8(%ebp),%ecx
   2710f:	8b 1a                	mov    (%edx),%ebx
   27111:	39 19                	cmp    %ebx,(%ecx)
   27113:	7f 04                	jg     27119 <tv_gt+0x19>
   27115:	74 09                	je     27120 <tv_gt+0x20>
   27117:	31 c0                	xor    %eax,%eax
   27119:	5b                   	pop    %ebx
   2711a:	5d                   	pop    %ebp
   2711b:	c3                   	ret    
   2711c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   27120:	8b 5a 04             	mov    0x4(%edx),%ebx
   27123:	39 59 04             	cmp    %ebx,0x4(%ecx)
   27126:	7e ef                	jle    27117 <tv_gt+0x17>
   27128:	eb ef                	jmp    27119 <tv_gt+0x19>
   2712a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00027130 <tv_gteq>:
   27130:	55                   	push   %ebp
   27131:	b8 01 00 00 00       	mov    $0x1,%eax
   27136:	89 e5                	mov    %esp,%ebp
   27138:	53                   	push   %ebx
   27139:	8b 55 0c             	mov    0xc(%ebp),%edx
   2713c:	8b 4d 08             	mov    0x8(%ebp),%ecx
   2713f:	8b 1a                	mov    (%edx),%ebx
   27141:	39 19                	cmp    %ebx,(%ecx)
   27143:	7f 04                	jg     27149 <tv_gteq+0x19>
   27145:	74 09                	je     27150 <tv_gteq+0x20>
   27147:	31 c0                	xor    %eax,%eax
   27149:	5b                   	pop    %ebx
   2714a:	5d                   	pop    %ebp
   2714b:	c3                   	ret    
   2714c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   27150:	8b 5a 04             	mov    0x4(%edx),%ebx
   27153:	39 59 04             	cmp    %ebx,0x4(%ecx)
   27156:	7c ef                	jl     27147 <tv_gteq+0x17>
   27158:	eb ef                	jmp    27149 <tv_gteq+0x19>
   2715a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00027160 <getuptime>:
   27160:	55                   	push   %ebp
   27161:	89 e5                	mov    %esp,%ebp
   27163:	56                   	push   %esi
   27164:	53                   	push   %ebx
   27165:	83 ec 20             	sub    $0x20,%esp
   27168:	a1 0c 07 03 00       	mov    0x3070c,%eax
   2716d:	8b 5d 08             	mov    0x8(%ebp),%ebx
   27170:	85 c0                	test   %eax,%eax
   27172:	74 54                	je     271c8 <getuptime+0x68>
   27174:	8b 50 08             	mov    0x8(%eax),%edx
   27177:	0f ae e8             	lfence 
   2717a:	a1 0c 07 03 00       	mov    0x3070c,%eax
   2717f:	8b 40 04             	mov    0x4(%eax),%eax
   27182:	89 43 04             	mov    %eax,0x4(%ebx)
   27185:	0f ae e8             	lfence 
   27188:	a1 0c 07 03 00       	mov    0x3070c,%eax
   2718d:	8b 00                	mov    (%eax),%eax
   2718f:	39 d0                	cmp    %edx,%eax
   27191:	74 25                	je     271b8 <getuptime+0x58>
   27193:	39 d0                	cmp    %edx,%eax
   27195:	72 19                	jb     271b0 <getuptime+0x50>
   27197:	89 03                	mov    %eax,(%ebx)
   27199:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   271a0:	31 c0                	xor    %eax,%eax
   271a2:	83 c4 20             	add    $0x20,%esp
   271a5:	5b                   	pop    %ebx
   271a6:	5e                   	pop    %esi
   271a7:	5d                   	pop    %ebp
   271a8:	c3                   	ret    
   271a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   271b0:	89 d0                	mov    %edx,%eax
   271b2:	eb e3                	jmp    27197 <getuptime+0x37>
   271b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   271b8:	89 03                	mov    %eax,(%ebx)
   271ba:	83 c4 20             	add    $0x20,%esp
   271bd:	31 c0                	xor    %eax,%eax
   271bf:	5b                   	pop    %ebx
   271c0:	5e                   	pop    %esi
   271c1:	5d                   	pop    %ebp
   271c2:	c3                   	ret    
   271c3:	90                   	nop
   271c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   271c8:	8d 45 f0             	lea    -0x10(%ebp),%eax
   271cb:	c7 04 24 07 e7 02 00 	movl   $0x2e707,(%esp)
   271d2:	89 44 24 04          	mov    %eax,0x4(%esp)
   271d6:	e8 f5 42 00 00       	call   2b4d0 <sysinfo_get_value>
   271db:	89 c6                	mov    %eax,%esi
   271dd:	85 c0                	test   %eax,%eax
   271df:	75 3d                	jne    2721e <getuptime+0xbe>
   271e1:	8d 45 f4             	lea    -0xc(%ebp),%eax
   271e4:	c7 44 24 08 09 00 00 	movl   $0x9,0x8(%esp)
   271eb:	00 
   271ec:	89 44 24 0c          	mov    %eax,0xc(%esp)
   271f0:	8b 45 f0             	mov    -0x10(%ebp),%eax
   271f3:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
   271fa:	00 
   271fb:	89 04 24             	mov    %eax,(%esp)
   271fe:	e8 cd 38 00 00       	call   2aad0 <physmem_map>
   27203:	89 c6                	mov    %eax,%esi
   27205:	8b 45 f4             	mov    -0xc(%ebp),%eax
   27208:	85 f6                	test   %esi,%esi
   2720a:	75 0a                	jne    27216 <getuptime+0xb6>
   2720c:	a3 0c 07 03 00       	mov    %eax,0x3070c
   27211:	e9 5e ff ff ff       	jmp    27174 <getuptime+0x14>
   27216:	89 04 24             	mov    %eax,(%esp)
   27219:	e8 12 3e 00 00       	call   2b030 <as_area_destroy>
   2721e:	e8 bd 94 fe ff       	call   106e0 <__errno>
   27223:	89 30                	mov    %esi,(%eax)
   27225:	83 c8 ff             	or     $0xffffffff,%eax
   27228:	e9 75 ff ff ff       	jmp    271a2 <getuptime+0x42>
   2722d:	8d 76 00             	lea    0x0(%esi),%esi

00027230 <gettimeofday>:
   27230:	55                   	push   %ebp
   27231:	89 e5                	mov    %esp,%ebp
   27233:	56                   	push   %esi
   27234:	53                   	push   %ebx
   27235:	83 ec 50             	sub    $0x50,%esp
   27238:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
   2723f:	8b 45 0c             	mov    0xc(%ebp),%eax
   27242:	8b 5d 08             	mov    0x8(%ebp),%ebx
   27245:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
   2724c:	85 c0                	test   %eax,%eax
   2724e:	74 0d                	je     2725d <gettimeofday+0x2d>
   27250:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   27256:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   2725d:	a1 10 07 03 00       	mov    0x30710,%eax
   27262:	85 c0                	test   %eax,%eax
   27264:	0f 84 be 00 00 00    	je     27328 <gettimeofday+0xf8>
   2726a:	8d 75 d4             	lea    -0x2c(%ebp),%esi
   2726d:	89 04 24             	mov    %eax,(%esp)
   27270:	89 74 24 04          	mov    %esi,0x4(%esp)
   27274:	e8 a7 3e 00 00       	call   2b120 <clock_dev_time_get>
   27279:	85 c0                	test   %eax,%eax
   2727b:	74 2b                	je     272a8 <gettimeofday+0x78>
   2727d:	8b 45 d0             	mov    -0x30(%ebp),%eax
   27280:	89 04 24             	mov    %eax,(%esp)
   27283:	e8 58 8f ff ff       	call   201e0 <free>
   27288:	8b 45 c8             	mov    -0x38(%ebp),%eax
   2728b:	89 04 24             	mov    %eax,(%esp)
   2728e:	e8 4d 8f ff ff       	call   201e0 <free>
   27293:	89 1c 24             	mov    %ebx,(%esp)
   27296:	e8 c5 fe ff ff       	call   27160 <getuptime>
   2729b:	83 c4 50             	add    $0x50,%esp
   2729e:	5b                   	pop    %ebx
   2729f:	5e                   	pop    %esi
   272a0:	5d                   	pop    %ebp
   272a1:	c3                   	ret    
   272a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   272a8:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   272af:	31 d2                	xor    %edx,%edx
   272b1:	89 f0                	mov    %esi,%eax
   272b3:	e8 78 f8 ff ff       	call   26b30 <_normalize_time>
   272b8:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   272bb:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   272be:	8b 45 e8             	mov    -0x18(%ebp),%eax
   272c1:	e8 6a f5 ff ff       	call   26830 <_days_since_epoch>
   272c6:	8b 75 d4             	mov    -0x2c(%ebp),%esi
   272c9:	8d 04 40             	lea    (%eax,%eax,2),%eax
   272cc:	89 c2                	mov    %eax,%edx
   272ce:	c1 e2 04             	shl    $0x4,%edx
   272d1:	29 c2                	sub    %eax,%edx
   272d3:	89 d0                	mov    %edx,%eax
   272d5:	c1 e0 04             	shl    $0x4,%eax
   272d8:	29 d0                	sub    %edx,%eax
   272da:	8b 55 dc             	mov    -0x24(%ebp),%edx
   272dd:	c1 e0 07             	shl    $0x7,%eax
   272e0:	89 d1                	mov    %edx,%ecx
   272e2:	c1 e1 04             	shl    $0x4,%ecx
   272e5:	c1 e2 08             	shl    $0x8,%edx
   272e8:	29 ca                	sub    %ecx,%edx
   272ea:	89 d1                	mov    %edx,%ecx
   272ec:	c1 e1 04             	shl    $0x4,%ecx
   272ef:	29 d1                	sub    %edx,%ecx
   272f1:	8b 55 d8             	mov    -0x28(%ebp),%edx
   272f4:	01 c8                	add    %ecx,%eax
   272f6:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
   272fd:	c1 e2 06             	shl    $0x6,%edx
   27300:	29 ca                	sub    %ecx,%edx
   27302:	01 d0                	add    %edx,%eax
   27304:	01 f0                	add    %esi,%eax
   27306:	89 03                	mov    %eax,(%ebx)
   27308:	8b 45 d0             	mov    -0x30(%ebp),%eax
   2730b:	89 04 24             	mov    %eax,(%esp)
   2730e:	e8 cd 8e ff ff       	call   201e0 <free>
   27313:	8b 45 c8             	mov    -0x38(%ebp),%eax
   27316:	89 04 24             	mov    %eax,(%esp)
   27319:	e8 c2 8e ff ff       	call   201e0 <free>
   2731e:	83 c4 50             	add    $0x50,%esp
   27321:	31 c0                	xor    %eax,%eax
   27323:	5b                   	pop    %ebx
   27324:	5e                   	pop    %esi
   27325:	5d                   	pop    %ebp
   27326:	c3                   	ret    
   27327:	90                   	nop
   27328:	8d 45 c0             	lea    -0x40(%ebp),%eax
   2732b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   27332:	00 
   27333:	89 44 24 04          	mov    %eax,0x4(%esp)
   27337:	c7 04 24 13 e7 02 00 	movl   $0x2e713,(%esp)
   2733e:	e8 fd a9 fe ff       	call   11d40 <loc_category_get_id>
   27343:	85 c0                	test   %eax,%eax
   27345:	0f 85 32 ff ff ff    	jne    2727d <gettimeofday+0x4d>
   2734b:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   2734e:	89 44 24 08          	mov    %eax,0x8(%esp)
   27352:	8d 45 c8             	lea    -0x38(%ebp),%eax
   27355:	89 44 24 04          	mov    %eax,0x4(%esp)
   27359:	8b 45 c0             	mov    -0x40(%ebp),%eax
   2735c:	89 04 24             	mov    %eax,(%esp)
   2735f:	e8 cc ba fe ff       	call   12e30 <loc_category_get_svcs>
   27364:	85 c0                	test   %eax,%eax
   27366:	0f 85 11 ff ff ff    	jne    2727d <gettimeofday+0x4d>
   2736c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   2736f:	85 c0                	test   %eax,%eax
   27371:	0f 84 06 ff ff ff    	je     2727d <gettimeofday+0x4d>
   27377:	8d 45 d0             	lea    -0x30(%ebp),%eax
   2737a:	89 44 24 04          	mov    %eax,0x4(%esp)
   2737e:	8b 45 c8             	mov    -0x38(%ebp),%eax
   27381:	8b 00                	mov    (%eax),%eax
   27383:	89 04 24             	mov    %eax,(%esp)
   27386:	e8 15 a7 fe ff       	call   11aa0 <loc_service_get_name>
   2738b:	85 c0                	test   %eax,%eax
   2738d:	0f 85 ea fe ff ff    	jne    2727d <gettimeofday+0x4d>
   27393:	8d 45 cc             	lea    -0x34(%ebp),%eax
   27396:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2739d:	00 
   2739e:	89 44 24 04          	mov    %eax,0x4(%esp)
   273a2:	8b 45 d0             	mov    -0x30(%ebp),%eax
   273a5:	89 04 24             	mov    %eax,(%esp)
   273a8:	e8 73 a4 fe ff       	call   11820 <loc_service_get_id>
   273ad:	85 c0                	test   %eax,%eax
   273af:	0f 85 c8 fe ff ff    	jne    2727d <gettimeofday+0x4d>
   273b5:	8b 45 cc             	mov    -0x34(%ebp),%eax
   273b8:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   273bf:	00 
   273c0:	89 44 24 04          	mov    %eax,0x4(%esp)
   273c4:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
   273cb:	e8 40 ad fe ff       	call   12110 <loc_service_connect>
   273d0:	a3 10 07 03 00       	mov    %eax,0x30710
   273d5:	85 c0                	test   %eax,%eax
   273d7:	0f 85 8d fe ff ff    	jne    2726a <gettimeofday+0x3a>
   273dd:	e9 9b fe ff ff       	jmp    2727d <gettimeofday+0x4d>
   273e2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   273e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000273f0 <time>:
   273f0:	55                   	push   %ebp
   273f1:	89 e5                	mov    %esp,%ebp
   273f3:	53                   	push   %ebx
   273f4:	83 ec 24             	sub    $0x24,%esp
   273f7:	8d 45 f0             	lea    -0x10(%ebp),%eax
   273fa:	8b 5d 08             	mov    0x8(%ebp),%ebx
   273fd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   27404:	00 
   27405:	89 04 24             	mov    %eax,(%esp)
   27408:	e8 23 fe ff ff       	call   27230 <gettimeofday>
   2740d:	85 c0                	test   %eax,%eax
   2740f:	75 0f                	jne    27420 <time+0x30>
   27411:	8b 45 f0             	mov    -0x10(%ebp),%eax
   27414:	85 db                	test   %ebx,%ebx
   27416:	74 02                	je     2741a <time+0x2a>
   27418:	89 03                	mov    %eax,(%ebx)
   2741a:	83 c4 24             	add    $0x24,%esp
   2741d:	5b                   	pop    %ebx
   2741e:	5d                   	pop    %ebp
   2741f:	c3                   	ret    
   27420:	83 c8 ff             	or     $0xffffffff,%eax
   27423:	eb f5                	jmp    2741a <time+0x2a>
   27425:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   27429:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00027430 <usleep>:
   27430:	55                   	push   %ebp
   27431:	89 e5                	mov    %esp,%ebp
   27433:	83 ec 28             	sub    $0x28,%esp
   27436:	8b 45 08             	mov    0x8(%ebp),%eax
   27439:	c7 44 24 18 05 00 00 	movl   $0x5,0x18(%esp)
   27440:	00 
   27441:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   27448:	00 
   27449:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   27450:	00 
   27451:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   27458:	00 
   27459:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   27460:	00 
   27461:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   27468:	00 
   27469:	89 04 24             	mov    %eax,(%esp)
   2746c:	ff 15 54 06 03 00    	call   *0x30654
   27472:	31 c0                	xor    %eax,%eax
   27474:	c9                   	leave  
   27475:	c3                   	ret    
   27476:	8d 76 00             	lea    0x0(%esi),%esi
   27479:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00027480 <udelay>:
   27480:	55                   	push   %ebp
   27481:	89 e5                	mov    %esp,%ebp
   27483:	83 ec 28             	sub    $0x28,%esp
   27486:	8b 45 08             	mov    0x8(%ebp),%eax
   27489:	c7 44 24 18 06 00 00 	movl   $0x6,0x18(%esp)
   27490:	00 
   27491:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   27498:	00 
   27499:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   274a0:	00 
   274a1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   274a8:	00 
   274a9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   274b0:	00 
   274b1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   274b8:	00 
   274b9:	89 04 24             	mov    %eax,(%esp)
   274bc:	ff 15 54 06 03 00    	call   *0x30654
   274c2:	c9                   	leave  
   274c3:	c3                   	ret    
   274c4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   274ca:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000274d0 <sleep>:
   274d0:	55                   	push   %ebp
   274d1:	89 e5                	mov    %esp,%ebp
   274d3:	56                   	push   %esi
   274d4:	53                   	push   %ebx
   274d5:	83 ec 20             	sub    $0x20,%esp
   274d8:	8b 75 08             	mov    0x8(%ebp),%esi
   274db:	85 f6                	test   %esi,%esi
   274dd:	74 61                	je     27540 <sleep+0x70>
   274df:	90                   	nop
   274e0:	89 f3                	mov    %esi,%ebx
   274e2:	81 fe e8 03 00 00    	cmp    $0x3e8,%esi
   274e8:	76 05                	jbe    274ef <sleep+0x1f>
   274ea:	bb e8 03 00 00       	mov    $0x3e8,%ebx
   274ef:	89 d8                	mov    %ebx,%eax
   274f1:	c7 44 24 18 05 00 00 	movl   $0x5,0x18(%esp)
   274f8:	00 
   274f9:	c1 e0 05             	shl    $0x5,%eax
   274fc:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   27503:	00 
   27504:	29 d8                	sub    %ebx,%eax
   27506:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2750d:	00 
   2750e:	89 c2                	mov    %eax,%edx
   27510:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   27517:	00 
   27518:	c1 e2 06             	shl    $0x6,%edx
   2751b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   27522:	00 
   27523:	29 c2                	sub    %eax,%edx
   27525:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2752c:	00 
   2752d:	8d 04 d3             	lea    (%ebx,%edx,8),%eax
   27530:	c1 e0 06             	shl    $0x6,%eax
   27533:	89 04 24             	mov    %eax,(%esp)
   27536:	ff 15 54 06 03 00    	call   *0x30654
   2753c:	29 de                	sub    %ebx,%esi
   2753e:	75 a0                	jne    274e0 <sleep+0x10>
   27540:	83 c4 20             	add    $0x20,%esp
   27543:	31 c0                	xor    %eax,%eax
   27545:	5b                   	pop    %ebx
   27546:	5e                   	pop    %esi
   27547:	5d                   	pop    %ebp
   27548:	c3                   	ret    
   27549:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00027550 <mktime>:
   27550:	55                   	push   %ebp
   27551:	31 d2                	xor    %edx,%edx
   27553:	89 e5                	mov    %esp,%ebp
   27555:	53                   	push   %ebx
   27556:	50                   	push   %eax
   27557:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2755a:	89 d8                	mov    %ebx,%eax
   2755c:	e8 cf f5 ff ff       	call   26b30 <_normalize_time>
   27561:	8b 4b 0c             	mov    0xc(%ebx),%ecx
   27564:	8b 53 10             	mov    0x10(%ebx),%edx
   27567:	8b 43 14             	mov    0x14(%ebx),%eax
   2756a:	e8 c1 f2 ff ff       	call   26830 <_days_since_epoch>
   2756f:	8d 04 40             	lea    (%eax,%eax,2),%eax
   27572:	89 c2                	mov    %eax,%edx
   27574:	c1 e2 04             	shl    $0x4,%edx
   27577:	29 c2                	sub    %eax,%edx
   27579:	89 d0                	mov    %edx,%eax
   2757b:	c1 e0 04             	shl    $0x4,%eax
   2757e:	29 d0                	sub    %edx,%eax
   27580:	8b 53 08             	mov    0x8(%ebx),%edx
   27583:	c1 e0 07             	shl    $0x7,%eax
   27586:	89 d1                	mov    %edx,%ecx
   27588:	c1 e1 04             	shl    $0x4,%ecx
   2758b:	c1 e2 08             	shl    $0x8,%edx
   2758e:	29 ca                	sub    %ecx,%edx
   27590:	89 d1                	mov    %edx,%ecx
   27592:	c1 e1 04             	shl    $0x4,%ecx
   27595:	29 d1                	sub    %edx,%ecx
   27597:	8b 53 04             	mov    0x4(%ebx),%edx
   2759a:	01 c8                	add    %ecx,%eax
   2759c:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
   275a3:	c1 e2 06             	shl    $0x6,%edx
   275a6:	29 ca                	sub    %ecx,%edx
   275a8:	01 d0                	add    %edx,%eax
   275aa:	8b 13                	mov    (%ebx),%edx
   275ac:	01 d0                	add    %edx,%eax
   275ae:	59                   	pop    %ecx
   275af:	5b                   	pop    %ebx
   275b0:	5d                   	pop    %ebp
   275b1:	c3                   	ret    
   275b2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   275b9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000275c0 <strftime>:
   275c0:	55                   	push   %ebp
   275c1:	89 e5                	mov    %esp,%ebp
   275c3:	57                   	push   %edi
   275c4:	56                   	push   %esi
   275c5:	53                   	push   %ebx
   275c6:	83 ec 3c             	sub    $0x3c,%esp
   275c9:	8b 45 08             	mov    0x8(%ebp),%eax
   275cc:	8b 75 10             	mov    0x10(%ebp),%esi
   275cf:	85 c0                	test   %eax,%eax
   275d1:	0f 84 e4 07 00 00    	je     27dbb <strftime+0x7fb>
   275d7:	85 f6                	test   %esi,%esi
   275d9:	0f 84 14 08 00 00    	je     27df3 <strftime+0x833>
   275df:	8b 7d 14             	mov    0x14(%ebp),%edi
   275e2:	85 ff                	test   %edi,%edi
   275e4:	0f 84 ed 07 00 00    	je     27dd7 <strftime+0x817>
   275ea:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   275ed:	85 db                	test   %ebx,%ebx
   275ef:	0f 84 c3 00 00 00    	je     276b8 <strftime+0xf8>
   275f5:	8b 7d 0c             	mov    0xc(%ebp),%edi
   275f8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   275fb:	0f be 06             	movsbl (%esi),%eax
   275fe:	84 c0                	test   %al,%al
   27600:	74 39                	je     2763b <strftime+0x7b>
   27602:	3c 25                	cmp    $0x25,%al
   27604:	74 42                	je     27648 <strftime+0x88>
   27606:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2760a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2760d:	c7 44 24 08 46 e7 02 	movl   $0x2e746,0x8(%esp)
   27614:	00 
   27615:	89 7c 24 04          	mov    %edi,0x4(%esp)
   27619:	89 04 24             	mov    %eax,(%esp)
   2761c:	e8 cf 3e ff ff       	call   1b4f0 <snprintf>
   27621:	39 c7                	cmp    %eax,%edi
   27623:	0f 86 8f 00 00 00    	jbe    276b8 <strftime+0xf8>
   27629:	46                   	inc    %esi
   2762a:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   2762d:	01 c1                	add    %eax,%ecx
   2762f:	29 c7                	sub    %eax,%edi
   27631:	0f be 06             	movsbl (%esi),%eax
   27634:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
   27637:	84 c0                	test   %al,%al
   27639:	75 c7                	jne    27602 <strftime+0x42>
   2763b:	8b 45 0c             	mov    0xc(%ebp),%eax
   2763e:	29 f8                	sub    %edi,%eax
   27640:	eb 78                	jmp    276ba <strftime+0xfa>
   27642:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27648:	8a 46 01             	mov    0x1(%esi),%al
   2764b:	3c 2b                	cmp    $0x2b,%al
   2764d:	74 07                	je     27656 <strftime+0x96>
   2764f:	8d 5e 01             	lea    0x1(%esi),%ebx
   27652:	3c 30                	cmp    $0x30,%al
   27654:	75 15                	jne    2766b <strftime+0xab>
   27656:	8a 46 02             	mov    0x2(%esi),%al
   27659:	8d 5e 02             	lea    0x2(%esi),%ebx
   2765c:	0f be d0             	movsbl %al,%edx
   2765f:	83 ea 30             	sub    $0x30,%edx
   27662:	83 fa 09             	cmp    $0x9,%edx
   27665:	77 0f                	ja     27676 <strftime+0xb6>
   27667:	90                   	nop
   27668:	43                   	inc    %ebx
   27669:	8a 03                	mov    (%ebx),%al
   2766b:	0f be d0             	movsbl %al,%edx
   2766e:	83 ea 30             	sub    $0x30,%edx
   27671:	83 fa 09             	cmp    $0x9,%edx
   27674:	76 f2                	jbe    27668 <strftime+0xa8>
   27676:	3c 45                	cmp    $0x45,%al
   27678:	74 4e                	je     276c8 <strftime+0x108>
   2767a:	3c 4f                	cmp    $0x4f,%al
   2767c:	74 4a                	je     276c8 <strftime+0x108>
   2767e:	8d 50 db             	lea    -0x25(%eax),%edx
   27681:	80 fa 55             	cmp    $0x55,%dl
   27684:	76 4e                	jbe    276d4 <strftime+0x114>
   27686:	3c 25                	cmp    $0x25,%al
   27688:	74 0c                	je     27696 <strftime+0xd6>
   2768a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27690:	4b                   	dec    %ebx
   27691:	80 3b 25             	cmpb   $0x25,(%ebx)
   27694:	75 fa                	jne    27690 <strftime+0xd0>
   27696:	c7 44 24 08 a4 e7 02 	movl   $0x2e7a4,0x8(%esp)
   2769d:	00 
   2769e:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   276a1:	89 7c 24 04          	mov    %edi,0x4(%esp)
   276a5:	89 34 24             	mov    %esi,(%esp)
   276a8:	e8 43 3e ff ff       	call   1b4f0 <snprintf>
   276ad:	39 c7                	cmp    %eax,%edi
   276af:	77 52                	ja     27703 <strftime+0x143>
   276b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   276b8:	31 c0                	xor    %eax,%eax
   276ba:	83 c4 3c             	add    $0x3c,%esp
   276bd:	5b                   	pop    %ebx
   276be:	5e                   	pop    %esi
   276bf:	5f                   	pop    %edi
   276c0:	5d                   	pop    %ebp
   276c1:	c3                   	ret    
   276c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   276c8:	8a 43 01             	mov    0x1(%ebx),%al
   276cb:	43                   	inc    %ebx
   276cc:	8d 50 db             	lea    -0x25(%eax),%edx
   276cf:	80 fa 55             	cmp    $0x55,%dl
   276d2:	77 b2                	ja     27686 <strftime+0xc6>
   276d4:	81 e2 ff 00 00 00    	and    $0xff,%edx
   276da:	ff 24 95 c0 e8 02 00 	jmp    *0x2e8c0(,%edx,4)
   276e1:	8b 75 14             	mov    0x14(%ebp),%esi
   276e4:	c7 44 24 08 55 e7 02 	movl   $0x2e755,0x8(%esp)
   276eb:	00 
   276ec:	89 74 24 0c          	mov    %esi,0xc(%esp)
   276f0:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   276f3:	89 7c 24 04          	mov    %edi,0x4(%esp)
   276f7:	89 34 24             	mov    %esi,(%esp)
   276fa:	e8 c1 fe ff ff       	call   275c0 <strftime>
   276ff:	85 c0                	test   %eax,%eax
   27701:	74 b5                	je     276b8 <strftime+0xf8>
   27703:	01 c6                	add    %eax,%esi
   27705:	29 c7                	sub    %eax,%edi
   27707:	89 75 e4             	mov    %esi,-0x1c(%ebp)
   2770a:	8d 73 01             	lea    0x1(%ebx),%esi
   2770d:	e9 e9 fe ff ff       	jmp    275fb <strftime+0x3b>
   27712:	8b 75 14             	mov    0x14(%ebp),%esi
   27715:	8b 76 14             	mov    0x14(%esi),%esi
   27718:	89 f0                	mov    %esi,%eax
   2771a:	05 6c 07 00 00       	add    $0x76c,%eax
   2771f:	89 44 24 0c          	mov    %eax,0xc(%esp)
   27723:	c7 44 24 08 63 d9 02 	movl   $0x2d963,0x8(%esp)
   2772a:	00 
   2772b:	90                   	nop
   2772c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   27730:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   27733:	89 7c 24 04          	mov    %edi,0x4(%esp)
   27737:	89 34 24             	mov    %esi,(%esp)
   2773a:	e8 b1 3d ff ff       	call   1b4f0 <snprintf>
   2773f:	39 c7                	cmp    %eax,%edi
   27741:	77 c0                	ja     27703 <strftime+0x143>
   27743:	e9 70 ff ff ff       	jmp    276b8 <strftime+0xf8>
   27748:	8b 75 14             	mov    0x14(%ebp),%esi
   2774b:	8b 46 10             	mov    0x10(%esi),%eax
   2774e:	c7 44 24 08 5e e7 02 	movl   $0x2e75e,0x8(%esp)
   27755:	00 
   27756:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2775a:	eb d4                	jmp    27730 <strftime+0x170>
   2775c:	8b 75 14             	mov    0x14(%ebp),%esi
   2775f:	8b 46 08             	mov    0x8(%esi),%eax
   27762:	83 f8 0c             	cmp    $0xc,%eax
   27765:	0f 8e 50 05 00 00    	jle    27cbb <strftime+0x6fb>
   2776b:	83 e8 0c             	sub    $0xc,%eax
   2776e:	89 44 24 0c          	mov    %eax,0xc(%esp)
   27772:	c7 44 24 08 6c e7 02 	movl   $0x2e76c,0x8(%esp)
   27779:	00 
   2777a:	eb b4                	jmp    27730 <strftime+0x170>
   2777c:	8b 75 14             	mov    0x14(%ebp),%esi
   2777f:	8b 46 08             	mov    0x8(%esi),%eax
   27782:	c7 44 24 08 6c e7 02 	movl   $0x2e76c,0x8(%esp)
   27789:	00 
   2778a:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2778e:	eb a0                	jmp    27730 <strftime+0x170>
   27790:	8b 75 14             	mov    0x14(%ebp),%esi
   27793:	8b 46 1c             	mov    0x1c(%esi),%eax
   27796:	c7 44 24 08 7e e7 02 	movl   $0x2e77e,0x8(%esp)
   2779d:	00 
   2779e:	89 44 24 0c          	mov    %eax,0xc(%esp)
   277a2:	eb 8c                	jmp    27730 <strftime+0x170>
   277a4:	8b 75 14             	mov    0x14(%ebp),%esi
   277a7:	c7 44 24 08 7b e7 02 	movl   $0x2e77b,0x8(%esp)
   277ae:	00 
   277af:	89 74 24 0c          	mov    %esi,0xc(%esp)
   277b3:	e9 38 ff ff ff       	jmp    276f0 <strftime+0x130>
   277b8:	8b 75 14             	mov    0x14(%ebp),%esi
   277bb:	8b 56 1c             	mov    0x1c(%esi),%edx
   277be:	8b 46 14             	mov    0x14(%esi),%eax
   277c1:	e8 ea f1 ff ff       	call   269b0 <_wbyear.isra.3>
   277c6:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
   277cb:	89 c1                	mov    %eax,%ecx
   277cd:	c7 44 24 08 5e e7 02 	movl   $0x2e75e,0x8(%esp)
   277d4:	00 
   277d5:	f7 ea                	imul   %edx
   277d7:	c1 fa 05             	sar    $0x5,%edx
   277da:	89 c8                	mov    %ecx,%eax
   277dc:	c1 f8 1f             	sar    $0x1f,%eax
   277df:	29 c2                	sub    %eax,%edx
   277e1:	8d 04 92             	lea    (%edx,%edx,4),%eax
   277e4:	8d 04 80             	lea    (%eax,%eax,4),%eax
   277e7:	c1 e0 02             	shl    $0x2,%eax
   277ea:	29 c1                	sub    %eax,%ecx
   277ec:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   277f0:	e9 3b ff ff ff       	jmp    27730 <strftime+0x170>
   277f5:	8b 45 14             	mov    0x14(%ebp),%eax
   277f8:	b9 01 00 00 00       	mov    $0x1,%ecx
   277fd:	31 d2                	xor    %edx,%edx
   277ff:	8b 70 1c             	mov    0x1c(%eax),%esi
   27802:	8b 40 14             	mov    0x14(%eax),%eax
   27805:	e8 26 f0 ff ff       	call   26830 <_days_since_epoch>
   2780a:	89 c1                	mov    %eax,%ecx
   2780c:	83 c1 04             	add    $0x4,%ecx
   2780f:	0f 88 b5 04 00 00    	js     27cca <strftime+0x70a>
   27815:	b8 93 24 49 92       	mov    $0x92492493,%eax
   2781a:	f7 e9                	imul   %ecx
   2781c:	89 c8                	mov    %ecx,%eax
   2781e:	01 ca                	add    %ecx,%edx
   27820:	c1 fa 02             	sar    $0x2,%edx
   27823:	c1 f8 1f             	sar    $0x1f,%eax
   27826:	29 c2                	sub    %eax,%edx
   27828:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax
   2782f:	29 d0                	sub    %edx,%eax
   27831:	29 c1                	sub    %eax,%ecx
   27833:	89 c8                	mov    %ecx,%eax
   27835:	0f 88 03 05 00 00    	js     27d3e <strftime+0x77e>
   2783b:	83 f9 06             	cmp    $0x6,%ecx
   2783e:	0f 8f 5b 05 00 00    	jg     27d9f <strftime+0x7df>
   27844:	b9 01 00 00 00       	mov    $0x1,%ecx
   27849:	29 c1                	sub    %eax,%ecx
   2784b:	b8 93 24 49 92       	mov    $0x92492493,%eax
   27850:	f7 e9                	imul   %ecx
   27852:	8d 04 0a             	lea    (%edx,%ecx,1),%eax
   27855:	89 ca                	mov    %ecx,%edx
   27857:	c1 fa 1f             	sar    $0x1f,%edx
   2785a:	c1 f8 02             	sar    $0x2,%eax
   2785d:	29 d0                	sub    %edx,%eax
   2785f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx
   27866:	29 c2                	sub    %eax,%edx
   27868:	29 ce                	sub    %ecx,%esi
   2786a:	b8 93 24 49 92       	mov    $0x92492493,%eax
   2786f:	8d 4c 16 07          	lea    0x7(%esi,%edx,1),%ecx
   27873:	f7 e9                	imul   %ecx
   27875:	8d 04 0a             	lea    (%edx,%ecx,1),%eax
   27878:	c1 f8 02             	sar    $0x2,%eax
   2787b:	c1 f9 1f             	sar    $0x1f,%ecx
   2787e:	29 c8                	sub    %ecx,%eax
   27880:	89 44 24 0c          	mov    %eax,0xc(%esp)
   27884:	c7 44 24 08 5e e7 02 	movl   $0x2e75e,0x8(%esp)
   2788b:	00 
   2788c:	e9 9f fe ff ff       	jmp    27730 <strftime+0x170>
   27891:	8b 75 14             	mov    0x14(%ebp),%esi
   27894:	8b 46 18             	mov    0x18(%esi),%eax
   27897:	c7 44 24 08 49 e7 02 	movl   $0x2e749,0x8(%esp)
   2789e:	00 
   2789f:	8b 04 85 ec ea 02 00 	mov    0x2eaec(,%eax,4),%eax
   278a6:	89 44 24 0c          	mov    %eax,0xc(%esp)
   278aa:	e9 81 fe ff ff       	jmp    27730 <strftime+0x170>
   278af:	8b 75 14             	mov    0x14(%ebp),%esi
   278b2:	8b 46 10             	mov    0x10(%esi),%eax
   278b5:	c7 44 24 08 49 e7 02 	movl   $0x2e749,0x8(%esp)
   278bc:	00 
   278bd:	8b 04 85 60 eb 02 00 	mov    0x2eb60(,%eax,4),%eax
   278c4:	89 44 24 0c          	mov    %eax,0xc(%esp)
   278c8:	e9 63 fe ff ff       	jmp    27730 <strftime+0x170>
   278cd:	8b 75 14             	mov    0x14(%ebp),%esi
   278d0:	8b 46 08             	mov    0x8(%esi),%eax
   278d3:	c7 44 24 08 5e e7 02 	movl   $0x2e75e,0x8(%esp)
   278da:	00 
   278db:	89 44 24 0c          	mov    %eax,0xc(%esp)
   278df:	e9 4c fe ff ff       	jmp    27730 <strftime+0x170>
   278e4:	c7 44 24 08 99 e7 02 	movl   $0x2e799,0x8(%esp)
   278eb:	00 
   278ec:	e9 ad fd ff ff       	jmp    2769e <strftime+0xde>
   278f1:	8b 75 14             	mov    0x14(%ebp),%esi
   278f4:	8b 4e 0c             	mov    0xc(%esi),%ecx
   278f7:	8b 56 10             	mov    0x10(%esi),%edx
   278fa:	8b 46 14             	mov    0x14(%esi),%eax
   278fd:	e8 2e ef ff ff       	call   26830 <_days_since_epoch>
   27902:	8d 04 40             	lea    (%eax,%eax,2),%eax
   27905:	89 c2                	mov    %eax,%edx
   27907:	c1 e2 04             	shl    $0x4,%edx
   2790a:	29 c2                	sub    %eax,%edx
   2790c:	89 d0                	mov    %edx,%eax
   2790e:	c1 e0 04             	shl    $0x4,%eax
   27911:	29 d0                	sub    %edx,%eax
   27913:	8b 56 08             	mov    0x8(%esi),%edx
   27916:	c1 e0 07             	shl    $0x7,%eax
   27919:	89 d1                	mov    %edx,%ecx
   2791b:	c1 e1 04             	shl    $0x4,%ecx
   2791e:	c1 e2 08             	shl    $0x8,%edx
   27921:	29 ca                	sub    %ecx,%edx
   27923:	89 d1                	mov    %edx,%ecx
   27925:	c1 e1 04             	shl    $0x4,%ecx
   27928:	29 d1                	sub    %edx,%ecx
   2792a:	8b 56 04             	mov    0x4(%esi),%edx
   2792d:	01 c8                	add    %ecx,%eax
   2792f:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
   27936:	c1 e2 06             	shl    $0x6,%edx
   27939:	29 ca                	sub    %ecx,%edx
   2793b:	01 d0                	add    %edx,%eax
   2793d:	8b 16                	mov    (%esi),%edx
   2793f:	01 d0                	add    %edx,%eax
   27941:	c7 44 24 08 95 e7 02 	movl   $0x2e795,0x8(%esp)
   27948:	00 
   27949:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2794d:	e9 de fd ff ff       	jmp    27730 <strftime+0x170>
   27952:	8b 75 14             	mov    0x14(%ebp),%esi
   27955:	c7 44 24 08 83 e7 02 	movl   $0x2e783,0x8(%esp)
   2795c:	00 
   2795d:	89 74 24 0c          	mov    %esi,0xc(%esp)
   27961:	e9 8a fd ff ff       	jmp    276f0 <strftime+0x130>
   27966:	8b 75 14             	mov    0x14(%ebp),%esi
   27969:	b8 1c e7 02 00       	mov    $0x2e71c,%eax
   2796e:	83 7e 08 0b          	cmpl   $0xb,0x8(%esi)
   27972:	7f 05                	jg     27979 <strftime+0x3b9>
   27974:	b8 19 e7 02 00       	mov    $0x2e719,%eax
   27979:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2797d:	c7 44 24 08 49 e7 02 	movl   $0x2e749,0x8(%esp)
   27984:	00 
   27985:	e9 a6 fd ff ff       	jmp    27730 <strftime+0x170>
   2798a:	c7 44 24 08 07 cf 02 	movl   $0x2cf07,0x8(%esp)
   27991:	00 
   27992:	e9 07 fd ff ff       	jmp    2769e <strftime+0xde>
   27997:	8b 75 14             	mov    0x14(%ebp),%esi
   2799a:	b9 64 00 00 00       	mov    $0x64,%ecx
   2799f:	8b 46 14             	mov    0x14(%esi),%eax
   279a2:	89 c2                	mov    %eax,%edx
   279a4:	c1 fa 1f             	sar    $0x1f,%edx
   279a7:	f7 f9                	idiv   %ecx
   279a9:	89 54 24 0c          	mov    %edx,0xc(%esp)
   279ad:	c7 44 24 08 5e e7 02 	movl   $0x2e75e,0x8(%esp)
   279b4:	00 
   279b5:	e9 76 fd ff ff       	jmp    27730 <strftime+0x170>
   279ba:	8b 75 14             	mov    0x14(%ebp),%esi
   279bd:	8b 06                	mov    (%esi),%eax
   279bf:	c7 44 24 08 5e e7 02 	movl   $0x2e75e,0x8(%esp)
   279c6:	00 
   279c7:	89 44 24 0c          	mov    %eax,0xc(%esp)
   279cb:	e9 60 fd ff ff       	jmp    27730 <strftime+0x170>
   279d0:	8b 75 14             	mov    0x14(%ebp),%esi
   279d3:	c7 44 24 08 8f e7 02 	movl   $0x2e78f,0x8(%esp)
   279da:	00 
   279db:	89 74 24 0c          	mov    %esi,0xc(%esp)
   279df:	e9 0c fd ff ff       	jmp    276f0 <strftime+0x130>
   279e4:	8b 75 14             	mov    0x14(%ebp),%esi
   279e7:	b8 1c e7 02 00       	mov    $0x2e71c,%eax
   279ec:	83 7e 08 0b          	cmpl   $0xb,0x8(%esi)
   279f0:	7f 87                	jg     27979 <strftime+0x3b9>
   279f2:	b8 1f e7 02 00       	mov    $0x2e71f,%eax
   279f7:	eb 80                	jmp    27979 <strftime+0x3b9>
   279f9:	8b 75 14             	mov    0x14(%ebp),%esi
   279fc:	8b 46 04             	mov    0x4(%esi),%eax
   279ff:	c7 44 24 08 5e e7 02 	movl   $0x2e75e,0x8(%esp)
   27a06:	00 
   27a07:	89 44 24 0c          	mov    %eax,0xc(%esp)
   27a0b:	e9 20 fd ff ff       	jmp    27730 <strftime+0x170>
   27a10:	8b 75 14             	mov    0x14(%ebp),%esi
   27a13:	8b 46 08             	mov    0x8(%esi),%eax
   27a16:	83 f8 0c             	cmp    $0xc,%eax
   27a19:	0f 8e 8d 02 00 00    	jle    27cac <strftime+0x6ec>
   27a1f:	83 e8 0c             	sub    $0xc,%eax
   27a22:	e9 59 fe ff ff       	jmp    27880 <strftime+0x2c0>
   27a27:	8b 75 14             	mov    0x14(%ebp),%esi
   27a2a:	8b 46 0c             	mov    0xc(%esi),%eax
   27a2d:	c7 44 24 08 6c e7 02 	movl   $0x2e76c,0x8(%esp)
   27a34:	00 
   27a35:	89 44 24 0c          	mov    %eax,0xc(%esp)
   27a39:	e9 f2 fc ff ff       	jmp    27730 <strftime+0x170>
   27a3e:	8b 75 14             	mov    0x14(%ebp),%esi
   27a41:	8b 46 0c             	mov    0xc(%esi),%eax
   27a44:	c7 44 24 08 5e e7 02 	movl   $0x2e75e,0x8(%esp)
   27a4b:	00 
   27a4c:	89 44 24 0c          	mov    %eax,0xc(%esp)
   27a50:	e9 db fc ff ff       	jmp    27730 <strftime+0x170>
   27a55:	8b 75 14             	mov    0x14(%ebp),%esi
   27a58:	c7 44 24 08 4c e7 02 	movl   $0x2e74c,0x8(%esp)
   27a5f:	00 
   27a60:	89 74 24 0c          	mov    %esi,0xc(%esp)
   27a64:	e9 87 fc ff ff       	jmp    276f0 <strftime+0x130>
   27a69:	8b 75 14             	mov    0x14(%ebp),%esi
   27a6c:	8b 46 10             	mov    0x10(%esi),%eax
   27a6f:	c7 44 24 08 49 e7 02 	movl   $0x2e749,0x8(%esp)
   27a76:	00 
   27a77:	8b 04 85 20 eb 02 00 	mov    0x2eb20(,%eax,4),%eax
   27a7e:	89 44 24 0c          	mov    %eax,0xc(%esp)
   27a82:	e9 a9 fc ff ff       	jmp    27730 <strftime+0x170>
   27a87:	8b 75 14             	mov    0x14(%ebp),%esi
   27a8a:	8b 46 18             	mov    0x18(%esi),%eax
   27a8d:	c7 44 24 08 49 e7 02 	movl   $0x2e749,0x8(%esp)
   27a94:	00 
   27a95:	8b 04 85 d0 ea 02 00 	mov    0x2ead0(,%eax,4),%eax
   27a9c:	89 44 24 0c          	mov    %eax,0xc(%esp)
   27aa0:	e9 8b fc ff ff       	jmp    27730 <strftime+0x170>
   27aa5:	8b 75 14             	mov    0x14(%ebp),%esi
   27aa8:	8b 56 1c             	mov    0x1c(%esi),%edx
   27aab:	8b 46 14             	mov    0x14(%esi),%eax
   27aae:	e8 fd ee ff ff       	call   269b0 <_wbyear.isra.3>
   27ab3:	e9 67 fc ff ff       	jmp    2771f <strftime+0x15f>
   27ab8:	8b 75 14             	mov    0x14(%ebp),%esi
   27abb:	c7 44 24 08 70 e7 02 	movl   $0x2e770,0x8(%esp)
   27ac2:	00 
   27ac3:	89 74 24 0c          	mov    %esi,0xc(%esp)
   27ac7:	e9 24 fc ff ff       	jmp    276f0 <strftime+0x130>
   27acc:	8b 75 14             	mov    0x14(%ebp),%esi
   27acf:	c7 44 24 08 63 e7 02 	movl   $0x2e763,0x8(%esp)
   27ad6:	00 
   27ad7:	89 74 24 0c          	mov    %esi,0xc(%esp)
   27adb:	e9 10 fc ff ff       	jmp    276f0 <strftime+0x130>
   27ae0:	8b 75 14             	mov    0x14(%ebp),%esi
   27ae3:	31 d2                	xor    %edx,%edx
   27ae5:	b9 01 00 00 00       	mov    $0x1,%ecx
   27aea:	8b 76 14             	mov    0x14(%esi),%esi
   27aed:	89 75 dc             	mov    %esi,-0x24(%ebp)
   27af0:	8b 75 14             	mov    0x14(%ebp),%esi
   27af3:	8b 45 dc             	mov    -0x24(%ebp),%eax
   27af6:	8b 76 1c             	mov    0x1c(%esi),%esi
   27af9:	89 75 e0             	mov    %esi,-0x20(%ebp)
   27afc:	e8 2f ed ff ff       	call   26830 <_days_since_epoch>
   27b01:	89 c6                	mov    %eax,%esi
   27b03:	83 c6 04             	add    $0x4,%esi
   27b06:	0f 88 e8 01 00 00    	js     27cf4 <strftime+0x734>
   27b0c:	b8 93 24 49 92       	mov    $0x92492493,%eax
   27b11:	f7 ee                	imul   %esi
   27b13:	89 f0                	mov    %esi,%eax
   27b15:	01 f2                	add    %esi,%edx
   27b17:	c1 fa 02             	sar    $0x2,%edx
   27b1a:	c1 f8 1f             	sar    $0x1f,%eax
   27b1d:	29 c2                	sub    %eax,%edx
   27b1f:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax
   27b26:	29 d0                	sub    %edx,%eax
   27b28:	29 c6                	sub    %eax,%esi
   27b2a:	0f 88 0e 02 00 00    	js     27d3e <strftime+0x77e>
   27b30:	83 fe 06             	cmp    $0x6,%esi
   27b33:	0f 8f 66 02 00 00    	jg     27d9f <strftime+0x7df>
   27b39:	b9 04 00 00 00       	mov    $0x4,%ecx
   27b3e:	29 f1                	sub    %esi,%ecx
   27b40:	0f 88 d8 01 00 00    	js     27d1e <strftime+0x75e>
   27b46:	83 e9 03             	sub    $0x3,%ecx
   27b49:	8b 75 e0             	mov    -0x20(%ebp),%esi
   27b4c:	29 ce                	sub    %ecx,%esi
   27b4e:	ba 35 00 00 00       	mov    $0x35,%edx
   27b53:	89 f1                	mov    %esi,%ecx
   27b55:	0f 88 4e fe ff ff    	js     279a9 <strftime+0x3e9>
   27b5b:	8b 45 dc             	mov    -0x24(%ebp),%eax
   27b5e:	be 90 01 00 00       	mov    $0x190,%esi
   27b63:	05 6c 07 00 00       	add    $0x76c,%eax
   27b68:	89 c2                	mov    %eax,%edx
   27b6a:	89 45 e0             	mov    %eax,-0x20(%ebp)
   27b6d:	c1 fa 1f             	sar    $0x1f,%edx
   27b70:	f7 fe                	idiv   %esi
   27b72:	85 d2                	test   %edx,%edx
   27b74:	b8 6d 01 00 00       	mov    $0x16d,%eax
   27b79:	74 28                	je     27ba3 <strftime+0x5e3>
   27b7b:	8b 45 e0             	mov    -0x20(%ebp),%eax
   27b7e:	66 be 64 00          	mov    $0x64,%si
   27b82:	89 c2                	mov    %eax,%edx
   27b84:	c1 fa 1f             	sar    $0x1f,%edx
   27b87:	f7 fe                	idiv   %esi
   27b89:	85 d2                	test   %edx,%edx
   27b8b:	b8 6c 01 00 00       	mov    $0x16c,%eax
   27b90:	74 11                	je     27ba3 <strftime+0x5e3>
   27b92:	f6 45 e0 03          	testb  $0x3,-0x20(%ebp)
   27b96:	0f 94 c0             	sete   %al
   27b99:	25 ff 00 00 00       	and    $0xff,%eax
   27b9e:	05 6c 01 00 00       	add    $0x16c,%eax
   27ba3:	ba 01 00 00 00       	mov    $0x1,%edx
   27ba8:	39 c1                	cmp    %eax,%ecx
   27baa:	0f 8f f9 fd ff ff    	jg     279a9 <strftime+0x3e9>
   27bb0:	b8 93 24 49 92       	mov    $0x92492493,%eax
   27bb5:	f7 e9                	imul   %ecx
   27bb7:	01 ca                	add    %ecx,%edx
   27bb9:	c1 fa 02             	sar    $0x2,%edx
   27bbc:	c1 f9 1f             	sar    $0x1f,%ecx
   27bbf:	29 ca                	sub    %ecx,%edx
   27bc1:	42                   	inc    %edx
   27bc2:	e9 e2 fd ff ff       	jmp    279a9 <strftime+0x3e9>
   27bc7:	8b 75 14             	mov    0x14(%ebp),%esi
   27bca:	b9 01 00 00 00       	mov    $0x1,%ecx
   27bcf:	31 d2                	xor    %edx,%edx
   27bd1:	8b 76 1c             	mov    0x1c(%esi),%esi
   27bd4:	89 75 dc             	mov    %esi,-0x24(%ebp)
   27bd7:	8b 75 14             	mov    0x14(%ebp),%esi
   27bda:	8b 46 14             	mov    0x14(%esi),%eax
   27bdd:	e8 4e ec ff ff       	call   26830 <_days_since_epoch>
   27be2:	89 c1                	mov    %eax,%ecx
   27be4:	83 c1 04             	add    $0x4,%ecx
   27be7:	0f 88 73 01 00 00    	js     27d60 <strftime+0x7a0>
   27bed:	b8 93 24 49 92       	mov    $0x92492493,%eax
   27bf2:	f7 e9                	imul   %ecx
   27bf4:	89 c8                	mov    %ecx,%eax
   27bf6:	01 ca                	add    %ecx,%edx
   27bf8:	c1 fa 02             	sar    $0x2,%edx
   27bfb:	c1 f8 1f             	sar    $0x1f,%eax
   27bfe:	29 c2                	sub    %eax,%edx
   27c00:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax
   27c07:	29 d0                	sub    %edx,%eax
   27c09:	29 c1                	sub    %eax,%ecx
   27c0b:	89 c8                	mov    %ecx,%eax
   27c0d:	0f 88 2b 01 00 00    	js     27d3e <strftime+0x77e>
   27c13:	83 f9 06             	cmp    $0x6,%ecx
   27c16:	0f 8f 83 01 00 00    	jg     27d9f <strftime+0x7df>
   27c1c:	b9 07 00 00 00       	mov    $0x7,%ecx
   27c21:	8b 75 dc             	mov    -0x24(%ebp),%esi
   27c24:	29 c1                	sub    %eax,%ecx
   27c26:	b8 93 24 49 92       	mov    $0x92492493,%eax
   27c2b:	f7 e9                	imul   %ecx
   27c2d:	8d 04 0a             	lea    (%edx,%ecx,1),%eax
   27c30:	89 ca                	mov    %ecx,%edx
   27c32:	c1 fa 1f             	sar    $0x1f,%edx
   27c35:	c1 f8 02             	sar    $0x2,%eax
   27c38:	29 d0                	sub    %edx,%eax
   27c3a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx
   27c41:	29 c2                	sub    %eax,%edx
   27c43:	e9 20 fc ff ff       	jmp    27868 <strftime+0x2a8>
   27c48:	8b 75 14             	mov    0x14(%ebp),%esi
   27c4b:	c7 44 24 08 9b e7 02 	movl   $0x2e79b,0x8(%esp)
   27c52:	00 
   27c53:	89 74 24 0c          	mov    %esi,0xc(%esp)
   27c57:	e9 94 fa ff ff       	jmp    276f0 <strftime+0x130>
   27c5c:	8b 75 14             	mov    0x14(%ebp),%esi
   27c5f:	8b 46 18             	mov    0x18(%esi),%eax
   27c62:	e9 b8 fa ff ff       	jmp    2771f <strftime+0x15f>
   27c67:	8b 75 14             	mov    0x14(%ebp),%esi
   27c6a:	8b 46 18             	mov    0x18(%esi),%eax
   27c6d:	85 c0                	test   %eax,%eax
   27c6f:	0f 85 aa fa ff ff    	jne    2771f <strftime+0x15f>
   27c75:	b0 07                	mov    $0x7,%al
   27c77:	e9 a3 fa ff ff       	jmp    2771f <strftime+0x15f>
   27c7c:	8b 75 14             	mov    0x14(%ebp),%esi
   27c7f:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx
   27c84:	8b 76 14             	mov    0x14(%esi),%esi
   27c87:	c7 44 24 08 5e e7 02 	movl   $0x2e75e,0x8(%esp)
   27c8e:	00 
   27c8f:	89 f1                	mov    %esi,%ecx
   27c91:	81 c1 6c 07 00 00    	add    $0x76c,%ecx
   27c97:	89 c8                	mov    %ecx,%eax
   27c99:	f7 ea                	imul   %edx
   27c9b:	c1 f9 1f             	sar    $0x1f,%ecx
   27c9e:	c1 fa 05             	sar    $0x5,%edx
   27ca1:	29 ca                	sub    %ecx,%edx
   27ca3:	89 54 24 0c          	mov    %edx,0xc(%esp)
   27ca7:	e9 84 fa ff ff       	jmp    27730 <strftime+0x170>
   27cac:	85 c0                	test   %eax,%eax
   27cae:	0f 85 cc fb ff ff    	jne    27880 <strftime+0x2c0>
   27cb4:	b0 0c                	mov    $0xc,%al
   27cb6:	e9 c5 fb ff ff       	jmp    27880 <strftime+0x2c0>
   27cbb:	85 c0                	test   %eax,%eax
   27cbd:	0f 85 ab fa ff ff    	jne    2776e <strftime+0x1ae>
   27cc3:	b0 0c                	mov    $0xc,%al
   27cc5:	e9 a4 fa ff ff       	jmp    2776e <strftime+0x1ae>
   27cca:	b8 93 24 49 92       	mov    $0x92492493,%eax
   27ccf:	f7 e9                	imul   %ecx
   27cd1:	89 c8                	mov    %ecx,%eax
   27cd3:	01 ca                	add    %ecx,%edx
   27cd5:	c1 f8 1f             	sar    $0x1f,%eax
   27cd8:	c1 fa 02             	sar    $0x2,%edx
   27cdb:	29 c2                	sub    %eax,%edx
   27cdd:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax
   27ce4:	29 d0                	sub    %edx,%eax
   27ce6:	4a                   	dec    %edx
   27ce7:	39 c1                	cmp    %eax,%ecx
   27ce9:	0f 85 39 fb ff ff    	jne    27828 <strftime+0x268>
   27cef:	e9 21 fb ff ff       	jmp    27815 <strftime+0x255>
   27cf4:	b8 93 24 49 92       	mov    $0x92492493,%eax
   27cf9:	f7 ee                	imul   %esi
   27cfb:	89 f0                	mov    %esi,%eax
   27cfd:	01 f2                	add    %esi,%edx
   27cff:	c1 f8 1f             	sar    $0x1f,%eax
   27d02:	c1 fa 02             	sar    $0x2,%edx
   27d05:	29 c2                	sub    %eax,%edx
   27d07:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax
   27d0e:	29 d0                	sub    %edx,%eax
   27d10:	4a                   	dec    %edx
   27d11:	39 c6                	cmp    %eax,%esi
   27d13:	0f 85 06 fe ff ff    	jne    27b1f <strftime+0x55f>
   27d19:	e9 ee fd ff ff       	jmp    27b0c <strftime+0x54c>
   27d1e:	b8 93 24 49 92       	mov    $0x92492493,%eax
   27d23:	f7 e9                	imul   %ecx
   27d25:	89 c8                	mov    %ecx,%eax
   27d27:	01 ca                	add    %ecx,%edx
   27d29:	c1 f8 1f             	sar    $0x1f,%eax
   27d2c:	c1 fa 02             	sar    $0x2,%edx
   27d2f:	29 c2                	sub    %eax,%edx
   27d31:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax
   27d38:	29 d0                	sub    %edx,%eax
   27d3a:	39 c1                	cmp    %eax,%ecx
   27d3c:	75 51                	jne    27d8f <strftime+0x7cf>
   27d3e:	c7 44 24 08 ae 00 00 	movl   $0xae,0x8(%esp)
   27d45:	00 
   27d46:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   27d4d:	00 
   27d4e:	c7 04 24 d8 e6 02 00 	movl   $0x2e6d8,(%esp)
   27d55:	e8 56 2b 00 00       	call   2a8b0 <assert_abort>
   27d5a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   27d60:	89 ca                	mov    %ecx,%edx
   27d62:	89 c8                	mov    %ecx,%eax
   27d64:	c1 fa 1f             	sar    $0x1f,%edx
   27d67:	be 07 00 00 00       	mov    $0x7,%esi
   27d6c:	f7 fe                	idiv   %esi
   27d6e:	85 d2                	test   %edx,%edx
   27d70:	0f 84 77 fe ff ff    	je     27bed <strftime+0x62d>
   27d76:	b8 93 24 49 92       	mov    $0x92492493,%eax
   27d7b:	f7 e9                	imul   %ecx
   27d7d:	89 c8                	mov    %ecx,%eax
   27d7f:	01 ca                	add    %ecx,%edx
   27d81:	c1 fa 02             	sar    $0x2,%edx
   27d84:	c1 f8 1f             	sar    $0x1f,%eax
   27d87:	29 c2                	sub    %eax,%edx
   27d89:	4a                   	dec    %edx
   27d8a:	e9 71 fe ff ff       	jmp    27c00 <strftime+0x640>
   27d8f:	b9 0b 00 00 00       	mov    $0xb,%ecx
   27d94:	29 f1                	sub    %esi,%ecx
   27d96:	83 f9 06             	cmp    $0x6,%ecx
   27d99:	0f 8e a7 fd ff ff    	jle    27b46 <strftime+0x586>
   27d9f:	c7 44 24 08 af 00 00 	movl   $0xaf,0x8(%esp)
   27da6:	00 
   27da7:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   27dae:	00 
   27daf:	c7 04 24 e4 e6 02 00 	movl   $0x2e6e4,(%esp)
   27db6:	e8 f5 2a 00 00       	call   2a8b0 <assert_abort>
   27dbb:	c7 44 24 08 97 02 00 	movl   $0x297,0x8(%esp)
   27dc2:	00 
   27dc3:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   27dca:	00 
   27dcb:	c7 04 24 22 e7 02 00 	movl   $0x2e722,(%esp)
   27dd2:	e8 d9 2a 00 00       	call   2a8b0 <assert_abort>
   27dd7:	c7 44 24 08 99 02 00 	movl   $0x299,0x8(%esp)
   27dde:	00 
   27ddf:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   27de6:	00 
   27de7:	c7 04 24 3b e7 02 00 	movl   $0x2e73b,(%esp)
   27dee:	e8 bd 2a 00 00       	call   2a8b0 <assert_abort>
   27df3:	c7 44 24 08 98 02 00 	movl   $0x298,0x8(%esp)
   27dfa:	00 
   27dfb:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   27e02:	00 
   27e03:	c7 04 24 2c e7 02 00 	movl   $0x2e72c,(%esp)
   27e0a:	e8 a1 2a 00 00       	call   2a8b0 <assert_abort>
   27e0f:	90                   	nop

00027e10 <time_utc2tm>:
   27e10:	55                   	push   %ebp
   27e11:	89 e5                	mov    %esp,%ebp
   27e13:	83 ec 18             	sub    $0x18,%esp
   27e16:	8b 45 0c             	mov    0xc(%ebp),%eax
   27e19:	85 c0                	test   %eax,%eax
   27e1b:	74 40                	je     27e5d <time_utc2tm+0x4d>
   27e1d:	8b 55 08             	mov    0x8(%ebp),%edx
   27e20:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   27e26:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   27e2d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
   27e34:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
   27e3b:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   27e42:	c7 40 14 46 00 00 00 	movl   $0x46,0x14(%eax)
   27e49:	e8 e2 ec ff ff       	call   26b30 <_normalize_time>
   27e4e:	c9                   	leave  
   27e4f:	40                   	inc    %eax
   27e50:	0f 95 c0             	setne  %al
   27e53:	25 ff 00 00 00       	and    $0xff,%eax
   27e58:	48                   	dec    %eax
   27e59:	83 e0 f0             	and    $0xfffffff0,%eax
   27e5c:	c3                   	ret    
   27e5d:	c7 44 24 08 55 03 00 	movl   $0x355,0x8(%esp)
   27e64:	00 
   27e65:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   27e6c:	00 
   27e6d:	c7 04 24 a7 d7 02 00 	movl   $0x2d7a7,(%esp)
   27e74:	e8 37 2a 00 00       	call   2a8b0 <assert_abort>
   27e79:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00027e80 <time_utc2str>:
   27e80:	55                   	push   %ebp
   27e81:	89 e5                	mov    %esp,%ebp
   27e83:	53                   	push   %ebx
   27e84:	83 ec 64             	sub    $0x64,%esp
   27e87:	8b 55 08             	mov    0x8(%ebp),%edx
   27e8a:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   27e8d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   27e90:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
   27e97:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
   27e9e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
   27ea5:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
   27eac:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   27eb3:	c7 45 e8 46 00 00 00 	movl   $0x46,-0x18(%ebp)
   27eba:	e8 71 ec ff ff       	call   26b30 <_normalize_time>
   27ebf:	40                   	inc    %eax
   27ec0:	74 68                	je     27f2a <time_utc2str+0xaa>
   27ec2:	85 db                	test   %ebx,%ebx
   27ec4:	74 6b                	je     27f31 <time_utc2str+0xb1>
   27ec6:	8b 45 e8             	mov    -0x18(%ebp),%eax
   27ec9:	c7 44 24 08 b3 e7 02 	movl   $0x2e7b3,0x8(%esp)
   27ed0:	00 
   27ed1:	05 6c 07 00 00       	add    $0x76c,%eax
   27ed6:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)
   27edd:	00 
   27ede:	89 44 24 24          	mov    %eax,0x24(%esp)
   27ee2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   27ee5:	89 44 24 20          	mov    %eax,0x20(%esp)
   27ee9:	8b 45 d8             	mov    -0x28(%ebp),%eax
   27eec:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   27ef0:	8b 45 dc             	mov    -0x24(%ebp),%eax
   27ef3:	89 44 24 18          	mov    %eax,0x18(%esp)
   27ef7:	8b 45 e0             	mov    -0x20(%ebp),%eax
   27efa:	89 44 24 14          	mov    %eax,0x14(%esp)
   27efe:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   27f01:	89 1c 24             	mov    %ebx,(%esp)
   27f04:	8b 04 85 a0 eb 02 00 	mov    0x2eba0(,%eax,4),%eax
   27f0b:	89 44 24 10          	mov    %eax,0x10(%esp)
   27f0f:	8b 45 ec             	mov    -0x14(%ebp),%eax
   27f12:	8b 04 85 d0 eb 02 00 	mov    0x2ebd0(,%eax,4),%eax
   27f19:	89 44 24 0c          	mov    %eax,0xc(%esp)
   27f1d:	e8 ce 35 ff ff       	call   1b4f0 <snprintf>
   27f22:	31 c0                	xor    %eax,%eax
   27f24:	83 c4 64             	add    $0x64,%esp
   27f27:	5b                   	pop    %ebx
   27f28:	5d                   	pop    %ebp
   27f29:	c3                   	ret    
   27f2a:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   27f2f:	eb f3                	jmp    27f24 <time_utc2str+0xa4>
   27f31:	c7 44 24 08 86 03 00 	movl   $0x386,0x8(%esp)
   27f38:	00 
   27f39:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   27f40:	00 
   27f41:	c7 04 24 a7 e7 02 00 	movl   $0x2e7a7,(%esp)
   27f48:	e8 63 29 00 00       	call   2a8b0 <assert_abort>
   27f4d:	8d 76 00             	lea    0x0(%esi),%esi

00027f50 <time_tm2str>:
   27f50:	55                   	push   %ebp
   27f51:	89 e5                	mov    %esp,%ebp
   27f53:	83 ec 38             	sub    $0x38,%esp
   27f56:	8b 45 08             	mov    0x8(%ebp),%eax
   27f59:	8b 55 0c             	mov    0xc(%ebp),%edx
   27f5c:	85 c0                	test   %eax,%eax
   27f5e:	74 62                	je     27fc2 <time_tm2str+0x72>
   27f60:	85 d2                	test   %edx,%edx
   27f62:	74 7a                	je     27fde <time_tm2str+0x8e>
   27f64:	8b 48 14             	mov    0x14(%eax),%ecx
   27f67:	81 c1 6c 07 00 00    	add    $0x76c,%ecx
   27f6d:	89 4c 24 24          	mov    %ecx,0x24(%esp)
   27f71:	8b 08                	mov    (%eax),%ecx
   27f73:	89 4c 24 20          	mov    %ecx,0x20(%esp)
   27f77:	8b 48 04             	mov    0x4(%eax),%ecx
   27f7a:	89 4c 24 1c          	mov    %ecx,0x1c(%esp)
   27f7e:	8b 48 08             	mov    0x8(%eax),%ecx
   27f81:	89 4c 24 18          	mov    %ecx,0x18(%esp)
   27f85:	8b 48 0c             	mov    0xc(%eax),%ecx
   27f88:	89 4c 24 14          	mov    %ecx,0x14(%esp)
   27f8c:	8b 48 10             	mov    0x10(%eax),%ecx
   27f8f:	8b 0c 8d a0 eb 02 00 	mov    0x2eba0(,%ecx,4),%ecx
   27f96:	89 4c 24 10          	mov    %ecx,0x10(%esp)
   27f9a:	8b 40 18             	mov    0x18(%eax),%eax
   27f9d:	c7 44 24 08 b3 e7 02 	movl   $0x2e7b3,0x8(%esp)
   27fa4:	00 
   27fa5:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)
   27fac:	00 
   27fad:	89 14 24             	mov    %edx,(%esp)
   27fb0:	8b 04 85 d0 eb 02 00 	mov    0x2ebd0(,%eax,4),%eax
   27fb7:	89 44 24 0c          	mov    %eax,0xc(%esp)
   27fbb:	e8 30 35 ff ff       	call   1b4f0 <snprintf>
   27fc0:	c9                   	leave  
   27fc1:	c3                   	ret    
   27fc2:	c7 44 24 08 85 03 00 	movl   $0x385,0x8(%esp)
   27fc9:	00 
   27fca:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   27fd1:	00 
   27fd2:	c7 04 24 d0 e7 02 00 	movl   $0x2e7d0,(%esp)
   27fd9:	e8 d2 28 00 00       	call   2a8b0 <assert_abort>
   27fde:	c7 44 24 08 86 03 00 	movl   $0x386,0x8(%esp)
   27fe5:	00 
   27fe6:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   27fed:	00 
   27fee:	c7 04 24 a7 e7 02 00 	movl   $0x2e7a7,(%esp)
   27ff5:	e8 b6 28 00 00       	call   2a8b0 <assert_abort>
   27ffa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

00028000 <time_local2tm>:
   28000:	55                   	push   %ebp
   28001:	89 e5                	mov    %esp,%ebp
   28003:	83 ec 08             	sub    $0x8,%esp
   28006:	8b 45 0c             	mov    0xc(%ebp),%eax
   28009:	8b 55 08             	mov    0x8(%ebp),%edx
   2800c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   28012:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   28019:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
   28020:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
   28027:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
   2802e:	c7 40 14 46 00 00 00 	movl   $0x46,0x14(%eax)
   28035:	e8 f6 ea ff ff       	call   26b30 <_normalize_time>
   2803a:	c9                   	leave  
   2803b:	40                   	inc    %eax
   2803c:	0f 95 c0             	setne  %al
   2803f:	25 ff 00 00 00       	and    $0xff,%eax
   28044:	48                   	dec    %eax
   28045:	83 e0 f0             	and    $0xfffffff0,%eax
   28048:	c3                   	ret    
   28049:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00028050 <time_local2str>:
   28050:	55                   	push   %ebp
   28051:	89 e5                	mov    %esp,%ebp
   28053:	53                   	push   %ebx
   28054:	83 ec 64             	sub    $0x64,%esp
   28057:	8b 55 08             	mov    0x8(%ebp),%edx
   2805a:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   2805d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   28060:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
   28067:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
   2806e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
   28075:	c7 45 e0 01 00 00 00 	movl   $0x1,-0x20(%ebp)
   2807c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
   28083:	c7 45 e8 46 00 00 00 	movl   $0x46,-0x18(%ebp)
   2808a:	e8 a1 ea ff ff       	call   26b30 <_normalize_time>
   2808f:	40                   	inc    %eax
   28090:	74 68                	je     280fa <time_local2str+0xaa>
   28092:	85 db                	test   %ebx,%ebx
   28094:	74 6b                	je     28101 <time_local2str+0xb1>
   28096:	8b 45 e8             	mov    -0x18(%ebp),%eax
   28099:	c7 44 24 08 b3 e7 02 	movl   $0x2e7b3,0x8(%esp)
   280a0:	00 
   280a1:	05 6c 07 00 00       	add    $0x76c,%eax
   280a6:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)
   280ad:	00 
   280ae:	89 44 24 24          	mov    %eax,0x24(%esp)
   280b2:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   280b5:	89 44 24 20          	mov    %eax,0x20(%esp)
   280b9:	8b 45 d8             	mov    -0x28(%ebp),%eax
   280bc:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   280c0:	8b 45 dc             	mov    -0x24(%ebp),%eax
   280c3:	89 44 24 18          	mov    %eax,0x18(%esp)
   280c7:	8b 45 e0             	mov    -0x20(%ebp),%eax
   280ca:	89 44 24 14          	mov    %eax,0x14(%esp)
   280ce:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   280d1:	89 1c 24             	mov    %ebx,(%esp)
   280d4:	8b 04 85 a0 eb 02 00 	mov    0x2eba0(,%eax,4),%eax
   280db:	89 44 24 10          	mov    %eax,0x10(%esp)
   280df:	8b 45 ec             	mov    -0x14(%ebp),%eax
   280e2:	8b 04 85 d0 eb 02 00 	mov    0x2ebd0(,%eax,4),%eax
   280e9:	89 44 24 0c          	mov    %eax,0xc(%esp)
   280ed:	e8 fe 33 ff ff       	call   1b4f0 <snprintf>
   280f2:	31 c0                	xor    %eax,%eax
   280f4:	83 c4 64             	add    $0x64,%esp
   280f7:	5b                   	pop    %ebx
   280f8:	5d                   	pop    %ebp
   280f9:	c3                   	ret    
   280fa:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
   280ff:	eb f3                	jmp    280f4 <time_local2str+0xa4>
   28101:	c7 44 24 08 86 03 00 	movl   $0x386,0x8(%esp)
   28108:	00 
   28109:	c7 44 24 04 c9 e6 02 	movl   $0x2e6c9,0x4(%esp)
   28110:	00 
   28111:	c7 04 24 a7 e7 02 00 	movl   $0x2e7a7,(%esp)
   28118:	e8 93 27 00 00       	call   2a8b0 <assert_abort>
   2811d:	8d 76 00             	lea    0x0(%esi),%esi

00028120 <difftime>:
   28120:	55                   	push   %ebp
   28121:	89 e5                	mov    %esp,%ebp
   28123:	83 ec 08             	sub    $0x8,%esp
   28126:	8b 45 08             	mov    0x8(%ebp),%eax
   28129:	8b 55 0c             	mov    0xc(%ebp),%edx
   2812c:	29 d0                	sub    %edx,%eax
   2812e:	89 45 fc             	mov    %eax,-0x4(%ebp)
   28131:	db 45 fc             	fildl  -0x4(%ebp)
   28134:	c9                   	leave  
   28135:	c3                   	ret    
   28136:	66 90                	xchg   %ax,%ax
   28138:	66 90                	xchg   %ax,%ax
   2813a:	66 90                	xchg   %ax,%ax
   2813c:	66 90                	xchg   %ax,%ax
   2813e:	66 90                	xchg   %ax,%ax

00028140 <vfs_exchange_begin>:
   28140:	55                   	push   %ebp
   28141:	89 e5                	mov    %esp,%ebp
   28143:	83 ec 18             	sub    $0x18,%esp
   28146:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2814d:	e8 6e f1 fe ff       	call   172c0 <fibril_mutex_lock>
   28152:	a1 14 07 03 00       	mov    0x30714,%eax
   28157:	85 c0                	test   %eax,%eax
   28159:	75 32                	jne    2818d <vfs_exchange_begin+0x4d>
   2815b:	90                   	nop
   2815c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   28160:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28167:	00 
   28168:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2816f:	00 
   28170:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   28177:	20 
   28178:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2817f:	e8 dc 87 ff ff       	call   20960 <service_connect_blocking>
   28184:	a3 14 07 03 00       	mov    %eax,0x30714
   28189:	85 c0                	test   %eax,%eax
   2818b:	74 d3                	je     28160 <vfs_exchange_begin+0x20>
   2818d:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28194:	e8 47 f2 fe ff       	call   173e0 <fibril_mutex_unlock>
   28199:	a1 14 07 03 00       	mov    0x30714,%eax
   2819e:	89 04 24             	mov    %eax,(%esp)
   281a1:	e8 6a b4 ff ff       	call   23610 <async_exchange_begin>
   281a6:	c9                   	leave  
   281a7:	c3                   	ret    
   281a8:	90                   	nop
   281a9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000281b0 <vfs_exchange_end>:
   281b0:	55                   	push   %ebp
   281b1:	89 e5                	mov    %esp,%ebp
   281b3:	5d                   	pop    %ebp
   281b4:	e9 c7 b7 ff ff       	jmp    23980 <async_exchange_end>
   281b9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000281c0 <absolutize>:
   281c0:	55                   	push   %ebp
   281c1:	89 e5                	mov    %esp,%ebp
   281c3:	57                   	push   %edi
   281c4:	56                   	push   %esi
   281c5:	53                   	push   %ebx
   281c6:	83 ec 2c             	sub    $0x2c,%esp
   281c9:	8b 75 08             	mov    0x8(%ebp),%esi
   281cc:	c7 04 24 40 06 03 00 	movl   $0x30640,(%esp)
   281d3:	e8 e8 f0 fe ff       	call   172c0 <fibril_mutex_lock>
   281d8:	89 34 24             	mov    %esi,(%esp)
   281db:	e8 10 be fe ff       	call   13ff0 <str_size>
   281e0:	80 3e 2f             	cmpb   $0x2f,(%esi)
   281e3:	89 c7                	mov    %eax,%edi
   281e5:	0f 84 ad 00 00 00    	je     28298 <absolutize+0xd8>
   281eb:	8b 15 18 07 03 00    	mov    0x30718,%edx
   281f1:	85 d2                	test   %edx,%edx
   281f3:	0f 84 bf 00 00 00    	je     282b8 <absolutize+0xf8>
   281f9:	a1 1c 07 03 00       	mov    0x3071c,%eax
   281fe:	8d 44 07 02          	lea    0x2(%edi,%eax,1),%eax
   28202:	89 04 24             	mov    %eax,(%esp)
   28205:	e8 c6 7e ff ff       	call   200d0 <malloc>
   2820a:	89 c3                	mov    %eax,%ebx
   2820c:	85 c0                	test   %eax,%eax
   2820e:	0f 84 a4 00 00 00    	je     282b8 <absolutize+0xf8>
   28214:	a1 18 07 03 00       	mov    0x30718,%eax
   28219:	89 1c 24             	mov    %ebx,(%esp)
   2821c:	89 44 24 08          	mov    %eax,0x8(%esp)
   28220:	a1 1c 07 03 00       	mov    0x3071c,%eax
   28225:	8d 44 07 02          	lea    0x2(%edi,%eax,1),%eax
   28229:	89 44 24 04          	mov    %eax,0x4(%esp)
   2822d:	e8 6e c9 fe ff       	call   14ba0 <str_cpy>
   28232:	a1 1c 07 03 00       	mov    0x3071c,%eax
   28237:	c6 04 03 2f          	movb   $0x2f,(%ebx,%eax,1)
   2823b:	c6 44 03 01 00       	movb   $0x0,0x1(%ebx,%eax,1)
   28240:	8d 44 07 02          	lea    0x2(%edi,%eax,1),%eax
   28244:	89 74 24 08          	mov    %esi,0x8(%esp)
   28248:	89 44 24 04          	mov    %eax,0x4(%esp)
   2824c:	89 1c 24             	mov    %ebx,(%esp)
   2824f:	e8 6c cd fe ff       	call   14fc0 <str_append>
   28254:	8b 45 0c             	mov    0xc(%ebp),%eax
   28257:	89 44 24 04          	mov    %eax,0x4(%esp)
   2825b:	89 1c 24             	mov    %ebx,(%esp)
   2825e:	e8 3d 23 00 00       	call   2a5a0 <canonify>
   28263:	85 c0                	test   %eax,%eax
   28265:	74 61                	je     282c8 <absolutize+0x108>
   28267:	89 04 24             	mov    %eax,(%esp)
   2826a:	e8 21 dd fe ff       	call   15f90 <str_dup>
   2826f:	89 1c 24             	mov    %ebx,(%esp)
   28272:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   28275:	e8 66 7f ff ff       	call   201e0 <free>
   2827a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2827d:	85 c0                	test   %eax,%eax
   2827f:	74 37                	je     282b8 <absolutize+0xf8>
   28281:	c7 04 24 40 06 03 00 	movl   $0x30640,(%esp)
   28288:	e8 53 f1 fe ff       	call   173e0 <fibril_mutex_unlock>
   2828d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   28290:	83 c4 2c             	add    $0x2c,%esp
   28293:	5b                   	pop    %ebx
   28294:	5e                   	pop    %esi
   28295:	5f                   	pop    %edi
   28296:	5d                   	pop    %ebp
   28297:	c3                   	ret    
   28298:	8d 40 01             	lea    0x1(%eax),%eax
   2829b:	89 04 24             	mov    %eax,(%esp)
   2829e:	e8 2d 7e ff ff       	call   200d0 <malloc>
   282a3:	89 c3                	mov    %eax,%ebx
   282a5:	85 c0                	test   %eax,%eax
   282a7:	74 0f                	je     282b8 <absolutize+0xf8>
   282a9:	c6 00 00             	movb   $0x0,(%eax)
   282ac:	a1 1c 07 03 00       	mov    0x3071c,%eax
   282b1:	eb 8d                	jmp    28240 <absolutize+0x80>
   282b3:	90                   	nop
   282b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   282b8:	c7 04 24 40 06 03 00 	movl   $0x30640,(%esp)
   282bf:	e8 1c f1 fe ff       	call   173e0 <fibril_mutex_unlock>
   282c4:	31 c0                	xor    %eax,%eax
   282c6:	eb c8                	jmp    28290 <absolutize+0xd0>
   282c8:	c7 04 24 40 06 03 00 	movl   $0x30640,(%esp)
   282cf:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   282d2:	e8 09 f1 fe ff       	call   173e0 <fibril_mutex_unlock>
   282d7:	89 1c 24             	mov    %ebx,(%esp)
   282da:	e8 01 7f ff ff       	call   201e0 <free>
   282df:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   282e2:	eb ac                	jmp    28290 <absolutize+0xd0>
   282e4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   282ea:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

000282f0 <_unlink>:
   282f0:	55                   	push   %ebp
   282f1:	89 e5                	mov    %esp,%ebp
   282f3:	57                   	push   %edi
   282f4:	56                   	push   %esi
   282f5:	53                   	push   %ebx
   282f6:	83 ec 3c             	sub    $0x3c,%esp
   282f9:	89 d6                	mov    %edx,%esi
   282fb:	8d 55 e0             	lea    -0x20(%ebp),%edx
   282fe:	89 54 24 04          	mov    %edx,0x4(%esp)
   28302:	89 04 24             	mov    %eax,(%esp)
   28305:	e8 b6 fe ff ff       	call   281c0 <absolutize>
   2830a:	89 c3                	mov    %eax,%ebx
   2830c:	85 c0                	test   %eax,%eax
   2830e:	0f 84 12 01 00 00    	je     28426 <_unlink+0x136>
   28314:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2831b:	e8 a0 ef fe ff       	call   172c0 <fibril_mutex_lock>
   28320:	8b 0d 14 07 03 00    	mov    0x30714,%ecx
   28326:	85 c9                	test   %ecx,%ecx
   28328:	75 33                	jne    2835d <_unlink+0x6d>
   2832a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   28330:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28337:	00 
   28338:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2833f:	00 
   28340:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   28347:	20 
   28348:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2834f:	e8 0c 86 ff ff       	call   20960 <service_connect_blocking>
   28354:	a3 14 07 03 00       	mov    %eax,0x30714
   28359:	85 c0                	test   %eax,%eax
   2835b:	74 d3                	je     28330 <_unlink+0x40>
   2835d:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28364:	e8 77 f0 fe ff       	call   173e0 <fibril_mutex_unlock>
   28369:	a1 14 07 03 00       	mov    0x30714,%eax
   2836e:	89 04 24             	mov    %eax,(%esp)
   28371:	e8 9a b2 ff ff       	call   23610 <async_exchange_begin>
   28376:	89 74 24 08          	mov    %esi,0x8(%esp)
   2837a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   28381:	00 
   28382:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   28389:	00 
   2838a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   28391:	00 
   28392:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28399:	00 
   2839a:	c7 44 24 04 0d 04 00 	movl   $0x40d,0x4(%esp)
   283a1:	00 
   283a2:	89 04 24             	mov    %eax,(%esp)
   283a5:	89 c7                	mov    %eax,%edi
   283a7:	e8 04 9c ff ff       	call   21fb0 <async_send_fast>
   283ac:	89 c6                	mov    %eax,%esi
   283ae:	8b 45 e0             	mov    -0x20(%ebp),%eax
   283b1:	89 44 24 08          	mov    %eax,0x8(%esp)
   283b5:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   283b9:	89 3c 24             	mov    %edi,(%esp)
   283bc:	e8 3f c1 ff ff       	call   24500 <async_data_write_start>
   283c1:	89 45 dc             	mov    %eax,-0x24(%ebp)
   283c4:	85 c0                	test   %eax,%eax
   283c6:	75 30                	jne    283f8 <_unlink+0x108>
   283c8:	89 3c 24             	mov    %edi,(%esp)
   283cb:	e8 b0 b5 ff ff       	call   23980 <async_exchange_end>
   283d0:	89 1c 24             	mov    %ebx,(%esp)
   283d3:	e8 08 7e ff ff       	call   201e0 <free>
   283d8:	8d 45 dc             	lea    -0x24(%ebp),%eax
   283db:	89 44 24 04          	mov    %eax,0x4(%esp)
   283df:	89 34 24             	mov    %esi,(%esp)
   283e2:	e8 99 9d ff ff       	call   22180 <async_wait_for>
   283e7:	8b 45 dc             	mov    -0x24(%ebp),%eax
   283ea:	83 c4 3c             	add    $0x3c,%esp
   283ed:	5b                   	pop    %ebx
   283ee:	5e                   	pop    %esi
   283ef:	5f                   	pop    %edi
   283f0:	5d                   	pop    %ebp
   283f1:	c3                   	ret    
   283f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   283f8:	89 3c 24             	mov    %edi,(%esp)
   283fb:	e8 80 b5 ff ff       	call   23980 <async_exchange_end>
   28400:	89 1c 24             	mov    %ebx,(%esp)
   28403:	e8 d8 7d ff ff       	call   201e0 <free>
   28408:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   2840b:	89 44 24 04          	mov    %eax,0x4(%esp)
   2840f:	89 34 24             	mov    %esi,(%esp)
   28412:	e8 69 9d ff ff       	call   22180 <async_wait_for>
   28417:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2841a:	85 c0                	test   %eax,%eax
   2841c:	74 c9                	je     283e7 <_unlink+0xf7>
   2841e:	83 c4 3c             	add    $0x3c,%esp
   28421:	5b                   	pop    %ebx
   28422:	5e                   	pop    %esi
   28423:	5f                   	pop    %edi
   28424:	5d                   	pop    %ebp
   28425:	c3                   	ret    
   28426:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   2842b:	eb bd                	jmp    283ea <_unlink+0xfa>
   2842d:	8d 76 00             	lea    0x0(%esi),%esi

00028430 <mount>:
   28430:	55                   	push   %ebp
   28431:	89 e5                	mov    %esp,%ebp
   28433:	57                   	push   %edi
   28434:	56                   	push   %esi
   28435:	53                   	push   %ebx
   28436:	81 ec 5c 01 00 00    	sub    $0x15c,%esp
   2843c:	8b 5d 10             	mov    0x10(%ebp),%ebx
   2843f:	c7 44 24 04 9a e7 02 	movl   $0x2e79a,0x4(%esp)
   28446:	00 
   28447:	89 1c 24             	mov    %ebx,(%esp)
   2844a:	e8 d1 c0 fe ff       	call   14520 <str_cmp>
   2844f:	85 c0                	test   %eax,%eax
   28451:	74 35                	je     28488 <mount+0x58>
   28453:	8b 45 18             	mov    0x18(%ebp),%eax
   28456:	89 1c 24             	mov    %ebx,(%esp)
   28459:	89 44 24 08          	mov    %eax,0x8(%esp)
   2845d:	8d 85 d8 fe ff ff    	lea    -0x128(%ebp),%eax
   28463:	89 44 24 04          	mov    %eax,0x4(%esp)
   28467:	e8 b4 93 fe ff       	call   11820 <loc_service_get_id>
   2846c:	85 c0                	test   %eax,%eax
   2846e:	0f 84 d1 02 00 00    	je     28745 <mount+0x315>
   28474:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   28478:	81 c4 5c 01 00 00    	add    $0x15c,%esp
   2847e:	5b                   	pop    %ebx
   2847f:	5e                   	pop    %esi
   28480:	5f                   	pop    %edi
   28481:	5d                   	pop    %ebp
   28482:	c3                   	ret    
   28483:	90                   	nop
   28484:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   28488:	e8 c3 9c fe ff       	call   12150 <loc_null_create>
   2848d:	89 c3                	mov    %eax,%ebx
   2848f:	83 f8 ff             	cmp    $0xffffffff,%eax
   28492:	74 66                	je     284fa <mount+0xca>
   28494:	8d b5 e9 fe ff ff    	lea    -0x117(%ebp),%esi
   2849a:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2849e:	c7 44 24 08 ec eb 02 	movl   $0x2ebec,0x8(%esp)
   284a5:	00 
   284a6:	c7 44 24 04 ff 00 00 	movl   $0xff,0x4(%esp)
   284ad:	00 
   284ae:	89 34 24             	mov    %esi,(%esp)
   284b1:	e8 3a 30 ff ff       	call   1b4f0 <snprintf>
   284b6:	8b 45 18             	mov    0x18(%ebp),%eax
   284b9:	89 44 24 08          	mov    %eax,0x8(%esp)
   284bd:	8d 85 d8 fe ff ff    	lea    -0x128(%ebp),%eax
   284c3:	89 44 24 04          	mov    %eax,0x4(%esp)
   284c7:	89 34 24             	mov    %esi,(%esp)
   284ca:	e8 51 93 fe ff       	call   11820 <loc_service_get_id>
   284cf:	85 c0                	test   %eax,%eax
   284d1:	74 37                	je     2850a <mount+0xda>
   284d3:	89 1c 24             	mov    %ebx,(%esp)
   284d6:	89 85 d0 fe ff ff    	mov    %eax,-0x130(%ebp)
   284dc:	e8 df 9d fe ff       	call   122c0 <loc_null_destroy>
   284e1:	8b 85 d0 fe ff ff    	mov    -0x130(%ebp),%eax
   284e7:	81 c4 5c 01 00 00    	add    $0x15c,%esp
   284ed:	5b                   	pop    %ebx
   284ee:	5e                   	pop    %esi
   284ef:	5f                   	pop    %edi
   284f0:	5d                   	pop    %ebp
   284f1:	c3                   	ret    
   284f2:	89 1c 24             	mov    %ebx,(%esp)
   284f5:	e8 c6 9d fe ff       	call   122c0 <loc_null_destroy>
   284fa:	81 c4 5c 01 00 00    	add    $0x15c,%esp
   28500:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   28505:	5b                   	pop    %ebx
   28506:	5e                   	pop    %esi
   28507:	5f                   	pop    %edi
   28508:	5d                   	pop    %ebp
   28509:	c3                   	ret    
   2850a:	8d 85 dc fe ff ff    	lea    -0x124(%ebp),%eax
   28510:	89 44 24 04          	mov    %eax,0x4(%esp)
   28514:	8b 45 0c             	mov    0xc(%ebp),%eax
   28517:	89 04 24             	mov    %eax,(%esp)
   2851a:	e8 a1 fc ff ff       	call   281c0 <absolutize>
   2851f:	89 c7                	mov    %eax,%edi
   28521:	85 c0                	test   %eax,%eax
   28523:	74 cd                	je     284f2 <mount+0xc2>
   28525:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2852c:	e8 8f ed fe ff       	call   172c0 <fibril_mutex_lock>
   28531:	8b 35 14 07 03 00    	mov    0x30714,%esi
   28537:	85 f6                	test   %esi,%esi
   28539:	75 32                	jne    2856d <mount+0x13d>
   2853b:	90                   	nop
   2853c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   28540:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28547:	00 
   28548:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2854f:	00 
   28550:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   28557:	20 
   28558:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2855f:	e8 fc 83 ff ff       	call   20960 <service_connect_blocking>
   28564:	a3 14 07 03 00       	mov    %eax,0x30714
   28569:	85 c0                	test   %eax,%eax
   2856b:	74 d3                	je     28540 <mount+0x110>
   2856d:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28574:	e8 67 ee fe ff       	call   173e0 <fibril_mutex_unlock>
   28579:	a1 14 07 03 00       	mov    0x30714,%eax
   2857e:	89 04 24             	mov    %eax,(%esp)
   28581:	e8 8a b0 ff ff       	call   23610 <async_exchange_begin>
   28586:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   2858d:	00 
   2858e:	89 c6                	mov    %eax,%esi
   28590:	8b 45 1c             	mov    0x1c(%ebp),%eax
   28593:	89 44 24 10          	mov    %eax,0x10(%esp)
   28597:	8b 45 18             	mov    0x18(%ebp),%eax
   2859a:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2859e:	8b 85 d8 fe ff ff    	mov    -0x128(%ebp),%eax
   285a4:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   285ab:	00 
   285ac:	89 44 24 08          	mov    %eax,0x8(%esp)
   285b0:	c7 44 24 04 08 04 00 	movl   $0x408,0x4(%esp)
   285b7:	00 
   285b8:	89 34 24             	mov    %esi,(%esp)
   285bb:	e8 f0 99 ff ff       	call   21fb0 <async_send_fast>
   285c0:	89 7c 24 04          	mov    %edi,0x4(%esp)
   285c4:	89 85 d4 fe ff ff    	mov    %eax,-0x12c(%ebp)
   285ca:	8b 85 dc fe ff ff    	mov    -0x124(%ebp),%eax
   285d0:	89 44 24 08          	mov    %eax,0x8(%esp)
   285d4:	89 34 24             	mov    %esi,(%esp)
   285d7:	e8 24 bf ff ff       	call   24500 <async_data_write_start>
   285dc:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
   285e2:	85 c0                	test   %eax,%eax
   285e4:	0f 85 16 01 00 00    	jne    28700 <mount+0x2d0>
   285ea:	8b 45 14             	mov    0x14(%ebp),%eax
   285ed:	89 04 24             	mov    %eax,(%esp)
   285f0:	e8 fb b9 fe ff       	call   13ff0 <str_size>
   285f5:	89 34 24             	mov    %esi,(%esp)
   285f8:	89 44 24 08          	mov    %eax,0x8(%esp)
   285fc:	8b 45 14             	mov    0x14(%ebp),%eax
   285ff:	89 44 24 04          	mov    %eax,0x4(%esp)
   28603:	e8 f8 be ff ff       	call   24500 <async_data_write_start>
   28608:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
   2860e:	85 c0                	test   %eax,%eax
   28610:	0f 85 ea 00 00 00    	jne    28700 <mount+0x2d0>
   28616:	8b 45 08             	mov    0x8(%ebp),%eax
   28619:	89 04 24             	mov    %eax,(%esp)
   2861c:	e8 cf b9 fe ff       	call   13ff0 <str_size>
   28621:	89 34 24             	mov    %esi,(%esp)
   28624:	89 44 24 08          	mov    %eax,0x8(%esp)
   28628:	8b 45 08             	mov    0x8(%ebp),%eax
   2862b:	89 44 24 04          	mov    %eax,0x4(%esp)
   2862f:	e8 cc be ff ff       	call   24500 <async_data_write_start>
   28634:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
   2863a:	85 c0                	test   %eax,%eax
   2863c:	0f 85 be 00 00 00    	jne    28700 <mount+0x2d0>
   28642:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   28649:	00 
   2864a:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   28651:	00 
   28652:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   28659:	00 
   2865a:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   28661:	00 
   28662:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   28669:	00 
   2866a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   28671:	00 
   28672:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   28679:	00 
   2867a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28681:	00 
   28682:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   28689:	00 
   2868a:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)
   28691:	00 
   28692:	89 34 24             	mov    %esi,(%esp)
   28695:	e8 26 9f ff ff       	call   225c0 <async_req_fast>
   2869a:	89 34 24             	mov    %esi,(%esp)
   2869d:	89 85 e4 fe ff ff    	mov    %eax,-0x11c(%ebp)
   286a3:	85 c0                	test   %eax,%eax
   286a5:	75 5c                	jne    28703 <mount+0x2d3>
   286a7:	e8 d4 b2 ff ff       	call   23980 <async_exchange_end>
   286ac:	89 3c 24             	mov    %edi,(%esp)
   286af:	e8 2c 7b ff ff       	call   201e0 <free>
   286b4:	8d 85 e4 fe ff ff    	lea    -0x11c(%ebp),%eax
   286ba:	89 44 24 04          	mov    %eax,0x4(%esp)
   286be:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
   286c4:	89 04 24             	mov    %eax,(%esp)
   286c7:	e8 b4 9a ff ff       	call   22180 <async_wait_for>
   286cc:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
   286d2:	85 c0                	test   %eax,%eax
   286d4:	0f 84 9e fd ff ff    	je     28478 <mount+0x48>
   286da:	83 fb ff             	cmp    $0xffffffff,%ebx
   286dd:	0f 84 95 fd ff ff    	je     28478 <mount+0x48>
   286e3:	89 1c 24             	mov    %ebx,(%esp)
   286e6:	e8 d5 9b fe ff       	call   122c0 <loc_null_destroy>
   286eb:	90                   	nop
   286ec:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   286f0:	8b 85 e4 fe ff ff    	mov    -0x11c(%ebp),%eax
   286f6:	e9 7d fd ff ff       	jmp    28478 <mount+0x48>
   286fb:	90                   	nop
   286fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   28700:	89 34 24             	mov    %esi,(%esp)
   28703:	e8 78 b2 ff ff       	call   23980 <async_exchange_end>
   28708:	89 3c 24             	mov    %edi,(%esp)
   2870b:	e8 d0 7a ff ff       	call   201e0 <free>
   28710:	8d 85 e0 fe ff ff    	lea    -0x120(%ebp),%eax
   28716:	89 44 24 04          	mov    %eax,0x4(%esp)
   2871a:	8b 85 d4 fe ff ff    	mov    -0x12c(%ebp),%eax
   28720:	89 04 24             	mov    %eax,(%esp)
   28723:	e8 58 9a ff ff       	call   22180 <async_wait_for>
   28728:	83 fb ff             	cmp    $0xffffffff,%ebx
   2872b:	74 08                	je     28735 <mount+0x305>
   2872d:	89 1c 24             	mov    %ebx,(%esp)
   28730:	e8 8b 9b fe ff       	call   122c0 <loc_null_destroy>
   28735:	8b 85 e0 fe ff ff    	mov    -0x120(%ebp),%eax
   2873b:	85 c0                	test   %eax,%eax
   2873d:	0f 85 35 fd ff ff    	jne    28478 <mount+0x48>
   28743:	eb ab                	jmp    286f0 <mount+0x2c0>
   28745:	8d 85 dc fe ff ff    	lea    -0x124(%ebp),%eax
   2874b:	89 44 24 04          	mov    %eax,0x4(%esp)
   2874f:	8b 45 0c             	mov    0xc(%ebp),%eax
   28752:	89 04 24             	mov    %eax,(%esp)
   28755:	e8 66 fa ff ff       	call   281c0 <absolutize>
   2875a:	89 c7                	mov    %eax,%edi
   2875c:	85 c0                	test   %eax,%eax
   2875e:	0f 84 96 fd ff ff    	je     284fa <mount+0xca>
   28764:	83 cb ff             	or     $0xffffffff,%ebx
   28767:	e9 b9 fd ff ff       	jmp    28525 <mount+0xf5>
   2876c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00028770 <unmount>:
   28770:	55                   	push   %ebp
   28771:	89 e5                	mov    %esp,%ebp
   28773:	57                   	push   %edi
   28774:	56                   	push   %esi
   28775:	53                   	push   %ebx
   28776:	83 ec 3c             	sub    $0x3c,%esp
   28779:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   2877c:	89 44 24 04          	mov    %eax,0x4(%esp)
   28780:	8b 45 08             	mov    0x8(%ebp),%eax
   28783:	89 04 24             	mov    %eax,(%esp)
   28786:	e8 35 fa ff ff       	call   281c0 <absolutize>
   2878b:	89 c3                	mov    %eax,%ebx
   2878d:	85 c0                	test   %eax,%eax
   2878f:	0f 84 11 01 00 00    	je     288a6 <unmount+0x136>
   28795:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2879c:	e8 1f eb fe ff       	call   172c0 <fibril_mutex_lock>
   287a1:	8b 3d 14 07 03 00    	mov    0x30714,%edi
   287a7:	85 ff                	test   %edi,%edi
   287a9:	75 32                	jne    287dd <unmount+0x6d>
   287ab:	90                   	nop
   287ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   287b0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   287b7:	00 
   287b8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   287bf:	00 
   287c0:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   287c7:	20 
   287c8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   287cf:	e8 8c 81 ff ff       	call   20960 <service_connect_blocking>
   287d4:	a3 14 07 03 00       	mov    %eax,0x30714
   287d9:	85 c0                	test   %eax,%eax
   287db:	74 d3                	je     287b0 <unmount+0x40>
   287dd:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   287e4:	e8 f7 eb fe ff       	call   173e0 <fibril_mutex_unlock>
   287e9:	a1 14 07 03 00       	mov    0x30714,%eax
   287ee:	89 04 24             	mov    %eax,(%esp)
   287f1:	e8 1a ae ff ff       	call   23610 <async_exchange_begin>
   287f6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   287fd:	00 
   287fe:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   28805:	00 
   28806:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2880d:	00 
   2880e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28815:	00 
   28816:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2881d:	00 
   2881e:	c7 44 24 04 09 04 00 	movl   $0x409,0x4(%esp)
   28825:	00 
   28826:	89 04 24             	mov    %eax,(%esp)
   28829:	89 c6                	mov    %eax,%esi
   2882b:	e8 80 97 ff ff       	call   21fb0 <async_send_fast>
   28830:	89 c7                	mov    %eax,%edi
   28832:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   28835:	89 44 24 08          	mov    %eax,0x8(%esp)
   28839:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   2883d:	89 34 24             	mov    %esi,(%esp)
   28840:	e8 bb bc ff ff       	call   24500 <async_data_write_start>
   28845:	89 45 dc             	mov    %eax,-0x24(%ebp)
   28848:	85 c0                	test   %eax,%eax
   2884a:	75 2c                	jne    28878 <unmount+0x108>
   2884c:	89 34 24             	mov    %esi,(%esp)
   2884f:	e8 2c b1 ff ff       	call   23980 <async_exchange_end>
   28854:	89 1c 24             	mov    %ebx,(%esp)
   28857:	e8 84 79 ff ff       	call   201e0 <free>
   2885c:	8d 45 dc             	lea    -0x24(%ebp),%eax
   2885f:	89 44 24 04          	mov    %eax,0x4(%esp)
   28863:	89 3c 24             	mov    %edi,(%esp)
   28866:	e8 15 99 ff ff       	call   22180 <async_wait_for>
   2886b:	8b 45 dc             	mov    -0x24(%ebp),%eax
   2886e:	83 c4 3c             	add    $0x3c,%esp
   28871:	5b                   	pop    %ebx
   28872:	5e                   	pop    %esi
   28873:	5f                   	pop    %edi
   28874:	5d                   	pop    %ebp
   28875:	c3                   	ret    
   28876:	66 90                	xchg   %ax,%ax
   28878:	89 34 24             	mov    %esi,(%esp)
   2887b:	e8 00 b1 ff ff       	call   23980 <async_exchange_end>
   28880:	89 1c 24             	mov    %ebx,(%esp)
   28883:	e8 58 79 ff ff       	call   201e0 <free>
   28888:	8d 45 e0             	lea    -0x20(%ebp),%eax
   2888b:	89 44 24 04          	mov    %eax,0x4(%esp)
   2888f:	89 3c 24             	mov    %edi,(%esp)
   28892:	e8 e9 98 ff ff       	call   22180 <async_wait_for>
   28897:	8b 45 e0             	mov    -0x20(%ebp),%eax
   2889a:	85 c0                	test   %eax,%eax
   2889c:	74 cd                	je     2886b <unmount+0xfb>
   2889e:	83 c4 3c             	add    $0x3c,%esp
   288a1:	5b                   	pop    %ebx
   288a2:	5e                   	pop    %esi
   288a3:	5f                   	pop    %edi
   288a4:	5d                   	pop    %ebp
   288a5:	c3                   	ret    
   288a6:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   288ab:	eb c1                	jmp    2886e <unmount+0xfe>
   288ad:	8d 76 00             	lea    0x0(%esi),%esi

000288b0 <open>:
   288b0:	55                   	push   %ebp
   288b1:	89 e5                	mov    %esp,%ebp
   288b3:	57                   	push   %edi
   288b4:	56                   	push   %esi
   288b5:	53                   	push   %ebx
   288b6:	83 ec 6c             	sub    $0x6c,%esp
   288b9:	8d 45 b8             	lea    -0x48(%ebp),%eax
   288bc:	89 44 24 04          	mov    %eax,0x4(%esp)
   288c0:	8b 45 08             	mov    0x8(%ebp),%eax
   288c3:	89 04 24             	mov    %eax,(%esp)
   288c6:	e8 f5 f8 ff ff       	call   281c0 <absolutize>
   288cb:	89 c3                	mov    %eax,%ebx
   288cd:	85 c0                	test   %eax,%eax
   288cf:	0f 84 0e 01 00 00    	je     289e3 <open+0x133>
   288d5:	8b 45 b8             	mov    -0x48(%ebp),%eax
   288d8:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   288df:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   288e2:	e8 d9 e9 fe ff       	call   172c0 <fibril_mutex_lock>
   288e7:	a1 14 07 03 00       	mov    0x30714,%eax
   288ec:	85 c0                	test   %eax,%eax
   288ee:	75 2d                	jne    2891d <open+0x6d>
   288f0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   288f7:	00 
   288f8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   288ff:	00 
   28900:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   28907:	20 
   28908:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2890f:	e8 4c 80 ff ff       	call   20960 <service_connect_blocking>
   28914:	a3 14 07 03 00       	mov    %eax,0x30714
   28919:	85 c0                	test   %eax,%eax
   2891b:	74 d3                	je     288f0 <open+0x40>
   2891d:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28924:	e8 b7 ea fe ff       	call   173e0 <fibril_mutex_unlock>
   28929:	a1 14 07 03 00       	mov    0x30714,%eax
   2892e:	89 04 24             	mov    %eax,(%esp)
   28931:	e8 da ac ff ff       	call   23610 <async_exchange_begin>
   28936:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2893d:	00 
   2893e:	89 c6                	mov    %eax,%esi
   28940:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   28943:	89 44 24 18          	mov    %eax,0x18(%esp)
   28947:	8b 45 0c             	mov    0xc(%ebp),%eax
   2894a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   28951:	00 
   28952:	89 44 24 0c          	mov    %eax,0xc(%esp)
   28956:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   2895d:	00 
   2895e:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)
   28965:	00 
   28966:	89 34 24             	mov    %esi,(%esp)
   28969:	e8 42 96 ff ff       	call   21fb0 <async_send_fast>
   2896e:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   28972:	89 c7                	mov    %eax,%edi
   28974:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   28977:	89 44 24 08          	mov    %eax,0x8(%esp)
   2897b:	89 34 24             	mov    %esi,(%esp)
   2897e:	e8 7d bb ff ff       	call   24500 <async_data_write_start>
   28983:	89 45 bc             	mov    %eax,-0x44(%ebp)
   28986:	85 c0                	test   %eax,%eax
   28988:	75 36                	jne    289c0 <open+0x110>
   2898a:	89 34 24             	mov    %esi,(%esp)
   2898d:	e8 ee af ff ff       	call   23980 <async_exchange_end>
   28992:	8d 45 bc             	lea    -0x44(%ebp),%eax
   28995:	89 44 24 04          	mov    %eax,0x4(%esp)
   28999:	89 3c 24             	mov    %edi,(%esp)
   2899c:	e8 df 97 ff ff       	call   22180 <async_wait_for>
   289a1:	8b 75 bc             	mov    -0x44(%ebp),%esi
   289a4:	85 f6                	test   %esi,%esi
   289a6:	75 03                	jne    289ab <open+0xfb>
   289a8:	8b 75 c8             	mov    -0x38(%ebp),%esi
   289ab:	89 1c 24             	mov    %ebx,(%esp)
   289ae:	e8 2d 78 ff ff       	call   201e0 <free>
   289b3:	83 c4 6c             	add    $0x6c,%esp
   289b6:	89 f0                	mov    %esi,%eax
   289b8:	5b                   	pop    %ebx
   289b9:	5e                   	pop    %esi
   289ba:	5f                   	pop    %edi
   289bb:	5d                   	pop    %ebp
   289bc:	c3                   	ret    
   289bd:	8d 76 00             	lea    0x0(%esi),%esi
   289c0:	89 34 24             	mov    %esi,(%esp)
   289c3:	e8 b8 af ff ff       	call   23980 <async_exchange_end>
   289c8:	8d 45 c0             	lea    -0x40(%ebp),%eax
   289cb:	89 44 24 04          	mov    %eax,0x4(%esp)
   289cf:	89 3c 24             	mov    %edi,(%esp)
   289d2:	e8 a9 97 ff ff       	call   22180 <async_wait_for>
   289d7:	8b 75 c0             	mov    -0x40(%ebp),%esi
   289da:	85 f6                	test   %esi,%esi
   289dc:	75 cd                	jne    289ab <open+0xfb>
   289de:	8b 75 bc             	mov    -0x44(%ebp),%esi
   289e1:	eb c8                	jmp    289ab <open+0xfb>
   289e3:	be fe ff ff ff       	mov    $0xfffffffe,%esi
   289e8:	eb c9                	jmp    289b3 <open+0x103>
   289ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000289f0 <close>:
   289f0:	55                   	push   %ebp
   289f1:	89 e5                	mov    %esp,%ebp
   289f3:	53                   	push   %ebx
   289f4:	83 ec 44             	sub    $0x44,%esp
   289f7:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   289fe:	e8 bd e8 fe ff       	call   172c0 <fibril_mutex_lock>
   28a03:	a1 14 07 03 00       	mov    0x30714,%eax
   28a08:	85 c0                	test   %eax,%eax
   28a0a:	75 31                	jne    28a3d <close+0x4d>
   28a0c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   28a10:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28a17:	00 
   28a18:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   28a1f:	00 
   28a20:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   28a27:	20 
   28a28:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   28a2f:	e8 2c 7f ff ff       	call   20960 <service_connect_blocking>
   28a34:	a3 14 07 03 00       	mov    %eax,0x30714
   28a39:	85 c0                	test   %eax,%eax
   28a3b:	74 d3                	je     28a10 <close+0x20>
   28a3d:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28a44:	e8 97 e9 fe ff       	call   173e0 <fibril_mutex_unlock>
   28a49:	a1 14 07 03 00       	mov    0x30714,%eax
   28a4e:	89 04 24             	mov    %eax,(%esp)
   28a51:	e8 ba ab ff ff       	call   23610 <async_exchange_begin>
   28a56:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   28a5d:	00 
   28a5e:	89 c3                	mov    %eax,%ebx
   28a60:	8b 45 08             	mov    0x8(%ebp),%eax
   28a63:	89 1c 24             	mov    %ebx,(%esp)
   28a66:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   28a6d:	00 
   28a6e:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   28a75:	00 
   28a76:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   28a7d:	00 
   28a7e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   28a85:	00 
   28a86:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   28a8d:	00 
   28a8e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   28a95:	00 
   28a96:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28a9d:	00 
   28a9e:	89 44 24 08          	mov    %eax,0x8(%esp)
   28aa2:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)
   28aa9:	00 
   28aaa:	e8 11 9b ff ff       	call   225c0 <async_req_fast>
   28aaf:	89 1c 24             	mov    %ebx,(%esp)
   28ab2:	89 45 f4             	mov    %eax,-0xc(%ebp)
   28ab5:	e8 c6 ae ff ff       	call   23980 <async_exchange_end>
   28aba:	8b 45 f4             	mov    -0xc(%ebp),%eax
   28abd:	83 c4 44             	add    $0x44,%esp
   28ac0:	5b                   	pop    %ebx
   28ac1:	5d                   	pop    %ebp
   28ac2:	c3                   	ret    
   28ac3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   28ac9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00028ad0 <read>:
   28ad0:	55                   	push   %ebp
   28ad1:	89 e5                	mov    %esp,%ebp
   28ad3:	56                   	push   %esi
   28ad4:	53                   	push   %ebx
   28ad5:	83 ec 50             	sub    $0x50,%esp
   28ad8:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28adf:	e8 dc e7 fe ff       	call   172c0 <fibril_mutex_lock>
   28ae4:	a1 14 07 03 00       	mov    0x30714,%eax
   28ae9:	85 c0                	test   %eax,%eax
   28aeb:	75 30                	jne    28b1d <read+0x4d>
   28aed:	8d 76 00             	lea    0x0(%esi),%esi
   28af0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28af7:	00 
   28af8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   28aff:	00 
   28b00:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   28b07:	20 
   28b08:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   28b0f:	e8 4c 7e ff ff       	call   20960 <service_connect_blocking>
   28b14:	a3 14 07 03 00       	mov    %eax,0x30714
   28b19:	85 c0                	test   %eax,%eax
   28b1b:	74 d3                	je     28af0 <read+0x20>
   28b1d:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28b24:	e8 b7 e8 fe ff       	call   173e0 <fibril_mutex_unlock>
   28b29:	a1 14 07 03 00       	mov    0x30714,%eax
   28b2e:	89 04 24             	mov    %eax,(%esp)
   28b31:	e8 da aa ff ff       	call   23610 <async_exchange_begin>
   28b36:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   28b3d:	00 
   28b3e:	89 c3                	mov    %eax,%ebx
   28b40:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   28b43:	89 44 24 18          	mov    %eax,0x18(%esp)
   28b47:	8b 45 08             	mov    0x8(%ebp),%eax
   28b4a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   28b51:	00 
   28b52:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28b59:	00 
   28b5a:	89 44 24 08          	mov    %eax,0x8(%esp)
   28b5e:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)
   28b65:	00 
   28b66:	89 1c 24             	mov    %ebx,(%esp)
   28b69:	e8 42 94 ff ff       	call   21fb0 <async_send_fast>
   28b6e:	89 1c 24             	mov    %ebx,(%esp)
   28b71:	89 c6                	mov    %eax,%esi
   28b73:	8b 45 10             	mov    0x10(%ebp),%eax
   28b76:	89 44 24 08          	mov    %eax,0x8(%esp)
   28b7a:	8b 45 0c             	mov    0xc(%ebp),%eax
   28b7d:	89 44 24 04          	mov    %eax,0x4(%esp)
   28b81:	e8 5a b4 ff ff       	call   23fe0 <async_data_read_start>
   28b86:	89 45 cc             	mov    %eax,-0x34(%ebp)
   28b89:	85 c0                	test   %eax,%eax
   28b8b:	74 2b                	je     28bb8 <read+0xe8>
   28b8d:	89 1c 24             	mov    %ebx,(%esp)
   28b90:	e8 eb ad ff ff       	call   23980 <async_exchange_end>
   28b95:	8d 45 d0             	lea    -0x30(%ebp),%eax
   28b98:	89 44 24 04          	mov    %eax,0x4(%esp)
   28b9c:	89 34 24             	mov    %esi,(%esp)
   28b9f:	e8 dc 95 ff ff       	call   22180 <async_wait_for>
   28ba4:	8b 45 d0             	mov    -0x30(%ebp),%eax
   28ba7:	85 c0                	test   %eax,%eax
   28ba9:	75 03                	jne    28bae <read+0xde>
   28bab:	8b 45 cc             	mov    -0x34(%ebp),%eax
   28bae:	83 c4 50             	add    $0x50,%esp
   28bb1:	5b                   	pop    %ebx
   28bb2:	5e                   	pop    %esi
   28bb3:	5d                   	pop    %ebp
   28bb4:	c3                   	ret    
   28bb5:	8d 76 00             	lea    0x0(%esi),%esi
   28bb8:	89 1c 24             	mov    %ebx,(%esp)
   28bbb:	e8 c0 ad ff ff       	call   23980 <async_exchange_end>
   28bc0:	8d 45 cc             	lea    -0x34(%ebp),%eax
   28bc3:	89 44 24 04          	mov    %eax,0x4(%esp)
   28bc7:	89 34 24             	mov    %esi,(%esp)
   28bca:	e8 b1 95 ff ff       	call   22180 <async_wait_for>
   28bcf:	8b 45 cc             	mov    -0x34(%ebp),%eax
   28bd2:	85 c0                	test   %eax,%eax
   28bd4:	75 d8                	jne    28bae <read+0xde>
   28bd6:	8b 45 d8             	mov    -0x28(%ebp),%eax
   28bd9:	83 c4 50             	add    $0x50,%esp
   28bdc:	5b                   	pop    %ebx
   28bdd:	5e                   	pop    %esi
   28bde:	5d                   	pop    %ebp
   28bdf:	c3                   	ret    

00028be0 <write>:
   28be0:	55                   	push   %ebp
   28be1:	89 e5                	mov    %esp,%ebp
   28be3:	56                   	push   %esi
   28be4:	53                   	push   %ebx
   28be5:	83 ec 50             	sub    $0x50,%esp
   28be8:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28bef:	e8 cc e6 fe ff       	call   172c0 <fibril_mutex_lock>
   28bf4:	a1 14 07 03 00       	mov    0x30714,%eax
   28bf9:	85 c0                	test   %eax,%eax
   28bfb:	75 30                	jne    28c2d <write+0x4d>
   28bfd:	8d 76 00             	lea    0x0(%esi),%esi
   28c00:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28c07:	00 
   28c08:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   28c0f:	00 
   28c10:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   28c17:	20 
   28c18:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   28c1f:	e8 3c 7d ff ff       	call   20960 <service_connect_blocking>
   28c24:	a3 14 07 03 00       	mov    %eax,0x30714
   28c29:	85 c0                	test   %eax,%eax
   28c2b:	74 d3                	je     28c00 <write+0x20>
   28c2d:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28c34:	e8 a7 e7 fe ff       	call   173e0 <fibril_mutex_unlock>
   28c39:	a1 14 07 03 00       	mov    0x30714,%eax
   28c3e:	89 04 24             	mov    %eax,(%esp)
   28c41:	e8 ca a9 ff ff       	call   23610 <async_exchange_begin>
   28c46:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   28c4d:	00 
   28c4e:	89 c3                	mov    %eax,%ebx
   28c50:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   28c53:	89 44 24 18          	mov    %eax,0x18(%esp)
   28c57:	8b 45 08             	mov    0x8(%ebp),%eax
   28c5a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   28c61:	00 
   28c62:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28c69:	00 
   28c6a:	89 44 24 08          	mov    %eax,0x8(%esp)
   28c6e:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)
   28c75:	00 
   28c76:	89 1c 24             	mov    %ebx,(%esp)
   28c79:	e8 32 93 ff ff       	call   21fb0 <async_send_fast>
   28c7e:	89 1c 24             	mov    %ebx,(%esp)
   28c81:	89 c6                	mov    %eax,%esi
   28c83:	8b 45 10             	mov    0x10(%ebp),%eax
   28c86:	89 44 24 08          	mov    %eax,0x8(%esp)
   28c8a:	8b 45 0c             	mov    0xc(%ebp),%eax
   28c8d:	89 44 24 04          	mov    %eax,0x4(%esp)
   28c91:	e8 6a b8 ff ff       	call   24500 <async_data_write_start>
   28c96:	89 45 cc             	mov    %eax,-0x34(%ebp)
   28c99:	85 c0                	test   %eax,%eax
   28c9b:	74 2b                	je     28cc8 <write+0xe8>
   28c9d:	89 1c 24             	mov    %ebx,(%esp)
   28ca0:	e8 db ac ff ff       	call   23980 <async_exchange_end>
   28ca5:	8d 45 d0             	lea    -0x30(%ebp),%eax
   28ca8:	89 44 24 04          	mov    %eax,0x4(%esp)
   28cac:	89 34 24             	mov    %esi,(%esp)
   28caf:	e8 cc 94 ff ff       	call   22180 <async_wait_for>
   28cb4:	8b 45 d0             	mov    -0x30(%ebp),%eax
   28cb7:	85 c0                	test   %eax,%eax
   28cb9:	75 03                	jne    28cbe <write+0xde>
   28cbb:	8b 45 cc             	mov    -0x34(%ebp),%eax
   28cbe:	83 c4 50             	add    $0x50,%esp
   28cc1:	5b                   	pop    %ebx
   28cc2:	5e                   	pop    %esi
   28cc3:	5d                   	pop    %ebp
   28cc4:	c3                   	ret    
   28cc5:	8d 76 00             	lea    0x0(%esi),%esi
   28cc8:	89 1c 24             	mov    %ebx,(%esp)
   28ccb:	e8 b0 ac ff ff       	call   23980 <async_exchange_end>
   28cd0:	8d 45 cc             	lea    -0x34(%ebp),%eax
   28cd3:	89 44 24 04          	mov    %eax,0x4(%esp)
   28cd7:	89 34 24             	mov    %esi,(%esp)
   28cda:	e8 a1 94 ff ff       	call   22180 <async_wait_for>
   28cdf:	8b 45 cc             	mov    -0x34(%ebp),%eax
   28ce2:	85 c0                	test   %eax,%eax
   28ce4:	75 0a                	jne    28cf0 <write+0x110>
   28ce6:	8b 45 d8             	mov    -0x28(%ebp),%eax
   28ce9:	83 c4 50             	add    $0x50,%esp
   28cec:	5b                   	pop    %ebx
   28ced:	5e                   	pop    %esi
   28cee:	5d                   	pop    %ebp
   28cef:	c3                   	ret    
   28cf0:	83 c8 ff             	or     $0xffffffff,%eax
   28cf3:	eb c9                	jmp    28cbe <write+0xde>
   28cf5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   28cf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00028d00 <read_all>:
   28d00:	55                   	push   %ebp
   28d01:	31 c0                	xor    %eax,%eax
   28d03:	89 e5                	mov    %esp,%ebp
   28d05:	57                   	push   %edi
   28d06:	56                   	push   %esi
   28d07:	53                   	push   %ebx
   28d08:	83 ec 6c             	sub    $0x6c,%esp
   28d0b:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
   28d12:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   28d15:	8d 76 00             	lea    0x0(%esi),%esi
   28d18:	8b 55 b4             	mov    -0x4c(%ebp),%edx
   28d1b:	01 c3                	add    %eax,%ebx
   28d1d:	01 c2                	add    %eax,%edx
   28d1f:	8b 45 10             	mov    0x10(%ebp),%eax
   28d22:	89 55 b4             	mov    %edx,-0x4c(%ebp)
   28d25:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28d2c:	8b 4d b4             	mov    -0x4c(%ebp),%ecx
   28d2f:	29 c8                	sub    %ecx,%eax
   28d31:	89 45 b0             	mov    %eax,-0x50(%ebp)
   28d34:	e8 87 e5 fe ff       	call   172c0 <fibril_mutex_lock>
   28d39:	8b 35 14 07 03 00    	mov    0x30714,%esi
   28d3f:	85 f6                	test   %esi,%esi
   28d41:	75 32                	jne    28d75 <read_all+0x75>
   28d43:	90                   	nop
   28d44:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   28d48:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28d4f:	00 
   28d50:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   28d57:	00 
   28d58:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   28d5f:	20 
   28d60:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   28d67:	e8 f4 7b ff ff       	call   20960 <service_connect_blocking>
   28d6c:	a3 14 07 03 00       	mov    %eax,0x30714
   28d71:	85 c0                	test   %eax,%eax
   28d73:	74 d3                	je     28d48 <read_all+0x48>
   28d75:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28d7c:	e8 5f e6 fe ff       	call   173e0 <fibril_mutex_unlock>
   28d81:	a1 14 07 03 00       	mov    0x30714,%eax
   28d86:	89 04 24             	mov    %eax,(%esp)
   28d89:	e8 82 a8 ff ff       	call   23610 <async_exchange_begin>
   28d8e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   28d95:	00 
   28d96:	89 c6                	mov    %eax,%esi
   28d98:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   28d9b:	89 44 24 18          	mov    %eax,0x18(%esp)
   28d9f:	8b 45 08             	mov    0x8(%ebp),%eax
   28da2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   28da9:	00 
   28daa:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28db1:	00 
   28db2:	89 44 24 08          	mov    %eax,0x8(%esp)
   28db6:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)
   28dbd:	00 
   28dbe:	89 34 24             	mov    %esi,(%esp)
   28dc1:	e8 ea 91 ff ff       	call   21fb0 <async_send_fast>
   28dc6:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   28dca:	89 c7                	mov    %eax,%edi
   28dcc:	8b 45 b0             	mov    -0x50(%ebp),%eax
   28dcf:	89 44 24 08          	mov    %eax,0x8(%esp)
   28dd3:	89 34 24             	mov    %esi,(%esp)
   28dd6:	e8 05 b2 ff ff       	call   23fe0 <async_data_read_start>
   28ddb:	89 45 bc             	mov    %eax,-0x44(%ebp)
   28dde:	85 c0                	test   %eax,%eax
   28de0:	74 3e                	je     28e20 <read_all+0x120>
   28de2:	89 34 24             	mov    %esi,(%esp)
   28de5:	e8 96 ab ff ff       	call   23980 <async_exchange_end>
   28dea:	8d 45 c0             	lea    -0x40(%ebp),%eax
   28ded:	89 44 24 04          	mov    %eax,0x4(%esp)
   28df1:	89 3c 24             	mov    %edi,(%esp)
   28df4:	e8 87 93 ff ff       	call   22180 <async_wait_for>
   28df9:	8b 45 c0             	mov    -0x40(%ebp),%eax
   28dfc:	85 c0                	test   %eax,%eax
   28dfe:	75 03                	jne    28e03 <read_all+0x103>
   28e00:	8b 45 bc             	mov    -0x44(%ebp),%eax
   28e03:	83 f8 00             	cmp    $0x0,%eax
   28e06:	7e 3e                	jle    28e46 <read_all+0x146>
   28e08:	89 c2                	mov    %eax,%edx
   28e0a:	39 45 b0             	cmp    %eax,-0x50(%ebp)
   28e0d:	0f 85 05 ff ff ff    	jne    28d18 <read_all+0x18>
   28e13:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   28e16:	01 d0                	add    %edx,%eax
   28e18:	83 c4 6c             	add    $0x6c,%esp
   28e1b:	5b                   	pop    %ebx
   28e1c:	5e                   	pop    %esi
   28e1d:	5f                   	pop    %edi
   28e1e:	5d                   	pop    %ebp
   28e1f:	c3                   	ret    
   28e20:	89 34 24             	mov    %esi,(%esp)
   28e23:	e8 58 ab ff ff       	call   23980 <async_exchange_end>
   28e28:	8d 45 bc             	lea    -0x44(%ebp),%eax
   28e2b:	89 44 24 04          	mov    %eax,0x4(%esp)
   28e2f:	89 3c 24             	mov    %edi,(%esp)
   28e32:	e8 49 93 ff ff       	call   22180 <async_wait_for>
   28e37:	8b 45 bc             	mov    -0x44(%ebp),%eax
   28e3a:	85 c0                	test   %eax,%eax
   28e3c:	75 c5                	jne    28e03 <read_all+0x103>
   28e3e:	8b 45 c8             	mov    -0x38(%ebp),%eax
   28e41:	83 f8 00             	cmp    $0x0,%eax
   28e44:	7f c2                	jg     28e08 <read_all+0x108>
   28e46:	75 d0                	jne    28e18 <read_all+0x118>
   28e48:	31 d2                	xor    %edx,%edx
   28e4a:	eb c7                	jmp    28e13 <read_all+0x113>
   28e4c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00028e50 <write_all>:
   28e50:	55                   	push   %ebp
   28e51:	31 d2                	xor    %edx,%edx
   28e53:	89 e5                	mov    %esp,%ebp
   28e55:	57                   	push   %edi
   28e56:	56                   	push   %esi
   28e57:	53                   	push   %ebx
   28e58:	83 ec 6c             	sub    $0x6c,%esp
   28e5b:	31 ff                	xor    %edi,%edi
   28e5d:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   28e60:	8b 45 10             	mov    0x10(%ebp),%eax
   28e63:	90                   	nop
   28e64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   28e68:	01 d7                	add    %edx,%edi
   28e6a:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28e71:	29 f8                	sub    %edi,%eax
   28e73:	01 d3                	add    %edx,%ebx
   28e75:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   28e78:	e8 43 e4 fe ff       	call   172c0 <fibril_mutex_lock>
   28e7d:	a1 14 07 03 00       	mov    0x30714,%eax
   28e82:	85 c0                	test   %eax,%eax
   28e84:	75 2f                	jne    28eb5 <write_all+0x65>
   28e86:	66 90                	xchg   %ax,%ax
   28e88:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28e8f:	00 
   28e90:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   28e97:	00 
   28e98:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   28e9f:	20 
   28ea0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   28ea7:	e8 b4 7a ff ff       	call   20960 <service_connect_blocking>
   28eac:	a3 14 07 03 00       	mov    %eax,0x30714
   28eb1:	85 c0                	test   %eax,%eax
   28eb3:	74 d3                	je     28e88 <write_all+0x38>
   28eb5:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28ebc:	e8 1f e5 fe ff       	call   173e0 <fibril_mutex_unlock>
   28ec1:	a1 14 07 03 00       	mov    0x30714,%eax
   28ec6:	89 04 24             	mov    %eax,(%esp)
   28ec9:	e8 42 a7 ff ff       	call   23610 <async_exchange_begin>
   28ece:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   28ed5:	00 
   28ed6:	89 c6                	mov    %eax,%esi
   28ed8:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   28edb:	89 44 24 18          	mov    %eax,0x18(%esp)
   28edf:	8b 45 08             	mov    0x8(%ebp),%eax
   28ee2:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   28ee9:	00 
   28eea:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28ef1:	00 
   28ef2:	89 44 24 08          	mov    %eax,0x8(%esp)
   28ef6:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)
   28efd:	00 
   28efe:	89 34 24             	mov    %esi,(%esp)
   28f01:	e8 aa 90 ff ff       	call   21fb0 <async_send_fast>
   28f06:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   28f0a:	89 45 b0             	mov    %eax,-0x50(%ebp)
   28f0d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   28f10:	89 44 24 08          	mov    %eax,0x8(%esp)
   28f14:	89 34 24             	mov    %esi,(%esp)
   28f17:	e8 e4 b5 ff ff       	call   24500 <async_data_write_start>
   28f1c:	89 45 bc             	mov    %eax,-0x44(%ebp)
   28f1f:	85 c0                	test   %eax,%eax
   28f21:	74 45                	je     28f68 <write_all+0x118>
   28f23:	89 34 24             	mov    %esi,(%esp)
   28f26:	e8 55 aa ff ff       	call   23980 <async_exchange_end>
   28f2b:	8d 45 c0             	lea    -0x40(%ebp),%eax
   28f2e:	89 44 24 04          	mov    %eax,0x4(%esp)
   28f32:	8b 45 b0             	mov    -0x50(%ebp),%eax
   28f35:	89 04 24             	mov    %eax,(%esp)
   28f38:	e8 43 92 ff ff       	call   22180 <async_wait_for>
   28f3d:	8b 55 c0             	mov    -0x40(%ebp),%edx
   28f40:	85 d2                	test   %edx,%edx
   28f42:	75 03                	jne    28f47 <write_all+0xf7>
   28f44:	8b 55 bc             	mov    -0x44(%ebp),%edx
   28f47:	85 d2                	test   %edx,%edx
   28f49:	7e 45                	jle    28f90 <write_all+0x140>
   28f4b:	8b 45 10             	mov    0x10(%ebp),%eax
   28f4e:	89 c1                	mov    %eax,%ecx
   28f50:	29 f9                	sub    %edi,%ecx
   28f52:	29 d1                	sub    %edx,%ecx
   28f54:	85 c9                	test   %ecx,%ecx
   28f56:	0f 8f 0c ff ff ff    	jg     28e68 <write_all+0x18>
   28f5c:	83 c4 6c             	add    $0x6c,%esp
   28f5f:	5b                   	pop    %ebx
   28f60:	5e                   	pop    %esi
   28f61:	5f                   	pop    %edi
   28f62:	5d                   	pop    %ebp
   28f63:	c3                   	ret    
   28f64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   28f68:	89 34 24             	mov    %esi,(%esp)
   28f6b:	e8 10 aa ff ff       	call   23980 <async_exchange_end>
   28f70:	8d 45 bc             	lea    -0x44(%ebp),%eax
   28f73:	89 44 24 04          	mov    %eax,0x4(%esp)
   28f77:	8b 45 b0             	mov    -0x50(%ebp),%eax
   28f7a:	89 04 24             	mov    %eax,(%esp)
   28f7d:	e8 fe 91 ff ff       	call   22180 <async_wait_for>
   28f82:	8b 45 bc             	mov    -0x44(%ebp),%eax
   28f85:	85 c0                	test   %eax,%eax
   28f87:	75 1f                	jne    28fa8 <write_all+0x158>
   28f89:	8b 55 c8             	mov    -0x38(%ebp),%edx
   28f8c:	85 d2                	test   %edx,%edx
   28f8e:	7f bb                	jg     28f4b <write_all+0xfb>
   28f90:	89 d0                	mov    %edx,%eax
   28f92:	85 d2                	test   %edx,%edx
   28f94:	75 c6                	jne    28f5c <write_all+0x10c>
   28f96:	8b 45 10             	mov    0x10(%ebp),%eax
   28f99:	89 c2                	mov    %eax,%edx
   28f9b:	29 fa                	sub    %edi,%edx
   28f9d:	85 d2                	test   %edx,%edx
   28f9f:	7e bb                	jle    28f5c <write_all+0x10c>
   28fa1:	b8 f7 fe ff ff       	mov    $0xfffffef7,%eax
   28fa6:	eb b4                	jmp    28f5c <write_all+0x10c>
   28fa8:	83 c4 6c             	add    $0x6c,%esp
   28fab:	83 c8 ff             	or     $0xffffffff,%eax
   28fae:	5b                   	pop    %ebx
   28faf:	5e                   	pop    %esi
   28fb0:	5f                   	pop    %edi
   28fb1:	5d                   	pop    %ebp
   28fb2:	c3                   	ret    
   28fb3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   28fb9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00028fc0 <fsync>:
   28fc0:	55                   	push   %ebp
   28fc1:	89 e5                	mov    %esp,%ebp
   28fc3:	53                   	push   %ebx
   28fc4:	83 ec 44             	sub    $0x44,%esp
   28fc7:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   28fce:	e8 ed e2 fe ff       	call   172c0 <fibril_mutex_lock>
   28fd3:	a1 14 07 03 00       	mov    0x30714,%eax
   28fd8:	85 c0                	test   %eax,%eax
   28fda:	75 31                	jne    2900d <fsync+0x4d>
   28fdc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   28fe0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   28fe7:	00 
   28fe8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   28fef:	00 
   28ff0:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   28ff7:	20 
   28ff8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   28fff:	e8 5c 79 ff ff       	call   20960 <service_connect_blocking>
   29004:	a3 14 07 03 00       	mov    %eax,0x30714
   29009:	85 c0                	test   %eax,%eax
   2900b:	74 d3                	je     28fe0 <fsync+0x20>
   2900d:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29014:	e8 c7 e3 fe ff       	call   173e0 <fibril_mutex_unlock>
   29019:	a1 14 07 03 00       	mov    0x30714,%eax
   2901e:	89 04 24             	mov    %eax,(%esp)
   29021:	e8 ea a5 ff ff       	call   23610 <async_exchange_begin>
   29026:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   2902d:	00 
   2902e:	89 c3                	mov    %eax,%ebx
   29030:	8b 45 08             	mov    0x8(%ebp),%eax
   29033:	89 1c 24             	mov    %ebx,(%esp)
   29036:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   2903d:	00 
   2903e:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   29045:	00 
   29046:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   2904d:	00 
   2904e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   29055:	00 
   29056:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2905d:	00 
   2905e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   29065:	00 
   29066:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2906d:	00 
   2906e:	89 44 24 08          	mov    %eax,0x8(%esp)
   29072:	c7 44 24 04 0a 04 00 	movl   $0x40a,0x4(%esp)
   29079:	00 
   2907a:	e8 41 95 ff ff       	call   225c0 <async_req_fast>
   2907f:	89 1c 24             	mov    %ebx,(%esp)
   29082:	89 45 f4             	mov    %eax,-0xc(%ebp)
   29085:	e8 f6 a8 ff ff       	call   23980 <async_exchange_end>
   2908a:	8b 45 f4             	mov    -0xc(%ebp),%eax
   2908d:	83 c4 44             	add    $0x44,%esp
   29090:	5b                   	pop    %ebx
   29091:	5d                   	pop    %ebp
   29092:	c3                   	ret    
   29093:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   29099:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

000290a0 <lseek>:
   290a0:	55                   	push   %ebp
   290a1:	89 e5                	mov    %esp,%ebp
   290a3:	57                   	push   %edi
   290a4:	56                   	push   %esi
   290a5:	53                   	push   %ebx
   290a6:	83 ec 4c             	sub    $0x4c,%esp
   290a9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   290ac:	8b 75 10             	mov    0x10(%ebp),%esi
   290af:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   290b6:	e8 05 e2 fe ff       	call   172c0 <fibril_mutex_lock>
   290bb:	a1 14 07 03 00       	mov    0x30714,%eax
   290c0:	85 c0                	test   %eax,%eax
   290c2:	75 31                	jne    290f5 <lseek+0x55>
   290c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   290c8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   290cf:	00 
   290d0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   290d7:	00 
   290d8:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   290df:	20 
   290e0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   290e7:	e8 74 78 ff ff       	call   20960 <service_connect_blocking>
   290ec:	a3 14 07 03 00       	mov    %eax,0x30714
   290f1:	85 c0                	test   %eax,%eax
   290f3:	74 d3                	je     290c8 <lseek+0x28>
   290f5:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   290fc:	e8 df e2 fe ff       	call   173e0 <fibril_mutex_unlock>
   29101:	a1 14 07 03 00       	mov    0x30714,%eax
   29106:	89 04 24             	mov    %eax,(%esp)
   29109:	e8 02 a5 ff ff       	call   23610 <async_exchange_begin>
   2910e:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
   29112:	89 c7                	mov    %eax,%edi
   29114:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   29117:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   2911b:	8d 45 e0             	lea    -0x20(%ebp),%eax
   2911e:	89 44 24 18          	mov    %eax,0x18(%esp)
   29122:	8b 45 14             	mov    0x14(%ebp),%eax
   29125:	89 44 24 14          	mov    %eax,0x14(%esp)
   29129:	8b 45 08             	mov    0x8(%ebp),%eax
   2912c:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   29133:	00 
   29134:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   2913b:	00 
   2913c:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   29143:	00 
   29144:	89 74 24 10          	mov    %esi,0x10(%esp)
   29148:	89 44 24 08          	mov    %eax,0x8(%esp)
   2914c:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)
   29153:	00 
   29154:	89 3c 24             	mov    %edi,(%esp)
   29157:	e8 64 94 ff ff       	call   225c0 <async_req_fast>
   2915c:	89 3c 24             	mov    %edi,(%esp)
   2915f:	89 c3                	mov    %eax,%ebx
   29161:	e8 1a a8 ff ff       	call   23980 <async_exchange_end>
   29166:	85 db                	test   %ebx,%ebx
   29168:	75 0e                	jne    29178 <lseek+0xd8>
   2916a:	8b 45 e0             	mov    -0x20(%ebp),%eax
   2916d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   29170:	83 c4 4c             	add    $0x4c,%esp
   29173:	5b                   	pop    %ebx
   29174:	5e                   	pop    %esi
   29175:	5f                   	pop    %edi
   29176:	5d                   	pop    %ebp
   29177:	c3                   	ret    
   29178:	83 c8 ff             	or     $0xffffffff,%eax
   2917b:	83 ca ff             	or     $0xffffffff,%edx
   2917e:	eb f0                	jmp    29170 <lseek+0xd0>

00029180 <ftruncate>:
   29180:	55                   	push   %ebp
   29181:	89 e5                	mov    %esp,%ebp
   29183:	57                   	push   %edi
   29184:	56                   	push   %esi
   29185:	53                   	push   %ebx
   29186:	83 ec 4c             	sub    $0x4c,%esp
   29189:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   2918c:	8b 75 10             	mov    0x10(%ebp),%esi
   2918f:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29196:	e8 25 e1 fe ff       	call   172c0 <fibril_mutex_lock>
   2919b:	a1 14 07 03 00       	mov    0x30714,%eax
   291a0:	85 c0                	test   %eax,%eax
   291a2:	75 31                	jne    291d5 <ftruncate+0x55>
   291a4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   291a8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   291af:	00 
   291b0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   291b7:	00 
   291b8:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   291bf:	20 
   291c0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   291c7:	e8 94 77 ff ff       	call   20960 <service_connect_blocking>
   291cc:	a3 14 07 03 00       	mov    %eax,0x30714
   291d1:	85 c0                	test   %eax,%eax
   291d3:	74 d3                	je     291a8 <ftruncate+0x28>
   291d5:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   291dc:	e8 ff e1 fe ff       	call   173e0 <fibril_mutex_unlock>
   291e1:	a1 14 07 03 00       	mov    0x30714,%eax
   291e6:	89 04 24             	mov    %eax,(%esp)
   291e9:	e8 22 a4 ff ff       	call   23610 <async_exchange_begin>
   291ee:	89 74 24 10          	mov    %esi,0x10(%esp)
   291f2:	89 c7                	mov    %eax,%edi
   291f4:	8b 45 08             	mov    0x8(%ebp),%eax
   291f7:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
   291fb:	89 3c 24             	mov    %edi,(%esp)
   291fe:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   29205:	00 
   29206:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   2920d:	00 
   2920e:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   29215:	00 
   29216:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   2921d:	00 
   2921e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   29225:	00 
   29226:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2922d:	00 
   2922e:	89 44 24 08          	mov    %eax,0x8(%esp)
   29232:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)
   29239:	00 
   2923a:	e8 81 93 ff ff       	call   225c0 <async_req_fast>
   2923f:	89 3c 24             	mov    %edi,(%esp)
   29242:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   29245:	e8 36 a7 ff ff       	call   23980 <async_exchange_end>
   2924a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2924d:	83 c4 4c             	add    $0x4c,%esp
   29250:	5b                   	pop    %ebx
   29251:	5e                   	pop    %esi
   29252:	5f                   	pop    %edi
   29253:	5d                   	pop    %ebp
   29254:	c3                   	ret    
   29255:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   29259:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00029260 <fstat>:
   29260:	55                   	push   %ebp
   29261:	89 e5                	mov    %esp,%ebp
   29263:	56                   	push   %esi
   29264:	53                   	push   %ebx
   29265:	83 ec 30             	sub    $0x30,%esp
   29268:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2926f:	e8 4c e0 fe ff       	call   172c0 <fibril_mutex_lock>
   29274:	a1 14 07 03 00       	mov    0x30714,%eax
   29279:	85 c0                	test   %eax,%eax
   2927b:	75 30                	jne    292ad <fstat+0x4d>
   2927d:	8d 76 00             	lea    0x0(%esi),%esi
   29280:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   29287:	00 
   29288:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2928f:	00 
   29290:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   29297:	20 
   29298:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2929f:	e8 bc 76 ff ff       	call   20960 <service_connect_blocking>
   292a4:	a3 14 07 03 00       	mov    %eax,0x30714
   292a9:	85 c0                	test   %eax,%eax
   292ab:	74 d3                	je     29280 <fstat+0x20>
   292ad:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   292b4:	e8 27 e1 fe ff       	call   173e0 <fibril_mutex_unlock>
   292b9:	a1 14 07 03 00       	mov    0x30714,%eax
   292be:	89 04 24             	mov    %eax,(%esp)
   292c1:	e8 4a a3 ff ff       	call   23610 <async_exchange_begin>
   292c6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   292cd:	00 
   292ce:	89 c3                	mov    %eax,%ebx
   292d0:	8b 45 08             	mov    0x8(%ebp),%eax
   292d3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   292da:	00 
   292db:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   292e2:	00 
   292e3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   292ea:	00 
   292eb:	89 44 24 08          	mov    %eax,0x8(%esp)
   292ef:	c7 44 24 04 05 04 00 	movl   $0x405,0x4(%esp)
   292f6:	00 
   292f7:	89 1c 24             	mov    %ebx,(%esp)
   292fa:	e8 b1 8c ff ff       	call   21fb0 <async_send_fast>
   292ff:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)
   29306:	00 
   29307:	89 c6                	mov    %eax,%esi
   29309:	8b 45 0c             	mov    0xc(%ebp),%eax
   2930c:	89 44 24 04          	mov    %eax,0x4(%esp)
   29310:	89 1c 24             	mov    %ebx,(%esp)
   29313:	e8 c8 ac ff ff       	call   23fe0 <async_data_read_start>
   29318:	89 45 f0             	mov    %eax,-0x10(%ebp)
   2931b:	85 c0                	test   %eax,%eax
   2931d:	74 29                	je     29348 <fstat+0xe8>
   2931f:	89 1c 24             	mov    %ebx,(%esp)
   29322:	e8 59 a6 ff ff       	call   23980 <async_exchange_end>
   29327:	8d 45 f4             	lea    -0xc(%ebp),%eax
   2932a:	89 44 24 04          	mov    %eax,0x4(%esp)
   2932e:	89 34 24             	mov    %esi,(%esp)
   29331:	e8 4a 8e ff ff       	call   22180 <async_wait_for>
   29336:	8b 45 f4             	mov    -0xc(%ebp),%eax
   29339:	85 c0                	test   %eax,%eax
   2933b:	75 03                	jne    29340 <fstat+0xe0>
   2933d:	8b 45 f0             	mov    -0x10(%ebp),%eax
   29340:	83 c4 30             	add    $0x30,%esp
   29343:	5b                   	pop    %ebx
   29344:	5e                   	pop    %esi
   29345:	5d                   	pop    %ebp
   29346:	c3                   	ret    
   29347:	90                   	nop
   29348:	89 1c 24             	mov    %ebx,(%esp)
   2934b:	e8 30 a6 ff ff       	call   23980 <async_exchange_end>
   29350:	8d 45 f0             	lea    -0x10(%ebp),%eax
   29353:	89 44 24 04          	mov    %eax,0x4(%esp)
   29357:	89 34 24             	mov    %esi,(%esp)
   2935a:	e8 21 8e ff ff       	call   22180 <async_wait_for>
   2935f:	8b 45 f0             	mov    -0x10(%ebp),%eax
   29362:	eb dc                	jmp    29340 <fstat+0xe0>
   29364:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2936a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

00029370 <stat>:
   29370:	55                   	push   %ebp
   29371:	89 e5                	mov    %esp,%ebp
   29373:	57                   	push   %edi
   29374:	56                   	push   %esi
   29375:	53                   	push   %ebx
   29376:	83 ec 3c             	sub    $0x3c,%esp
   29379:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   2937c:	89 44 24 04          	mov    %eax,0x4(%esp)
   29380:	8b 45 08             	mov    0x8(%ebp),%eax
   29383:	89 04 24             	mov    %eax,(%esp)
   29386:	e8 35 ee ff ff       	call   281c0 <absolutize>
   2938b:	89 c6                	mov    %eax,%esi
   2938d:	85 c0                	test   %eax,%eax
   2938f:	0f 84 31 01 00 00    	je     294c6 <stat+0x156>
   29395:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2939c:	e8 1f df fe ff       	call   172c0 <fibril_mutex_lock>
   293a1:	8b 15 14 07 03 00    	mov    0x30714,%edx
   293a7:	85 d2                	test   %edx,%edx
   293a9:	75 32                	jne    293dd <stat+0x6d>
   293ab:	90                   	nop
   293ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   293b0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   293b7:	00 
   293b8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   293bf:	00 
   293c0:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   293c7:	20 
   293c8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   293cf:	e8 8c 75 ff ff       	call   20960 <service_connect_blocking>
   293d4:	a3 14 07 03 00       	mov    %eax,0x30714
   293d9:	85 c0                	test   %eax,%eax
   293db:	74 d3                	je     293b0 <stat+0x40>
   293dd:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   293e4:	e8 f7 df fe ff       	call   173e0 <fibril_mutex_unlock>
   293e9:	a1 14 07 03 00       	mov    0x30714,%eax
   293ee:	89 04 24             	mov    %eax,(%esp)
   293f1:	e8 1a a2 ff ff       	call   23610 <async_exchange_begin>
   293f6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   293fd:	00 
   293fe:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   29405:	00 
   29406:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2940d:	00 
   2940e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   29415:	00 
   29416:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2941d:	00 
   2941e:	c7 44 24 04 0f 04 00 	movl   $0x40f,0x4(%esp)
   29425:	00 
   29426:	89 04 24             	mov    %eax,(%esp)
   29429:	89 c3                	mov    %eax,%ebx
   2942b:	e8 80 8b ff ff       	call   21fb0 <async_send_fast>
   29430:	89 c7                	mov    %eax,%edi
   29432:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   29435:	89 44 24 08          	mov    %eax,0x8(%esp)
   29439:	89 74 24 04          	mov    %esi,0x4(%esp)
   2943d:	89 1c 24             	mov    %ebx,(%esp)
   29440:	e8 bb b0 ff ff       	call   24500 <async_data_write_start>
   29445:	89 45 dc             	mov    %eax,-0x24(%ebp)
   29448:	85 c0                	test   %eax,%eax
   2944a:	75 4c                	jne    29498 <stat+0x128>
   2944c:	8b 45 0c             	mov    0xc(%ebp),%eax
   2944f:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)
   29456:	00 
   29457:	89 44 24 04          	mov    %eax,0x4(%esp)
   2945b:	89 1c 24             	mov    %ebx,(%esp)
   2945e:	e8 7d ab ff ff       	call   23fe0 <async_data_read_start>
   29463:	89 1c 24             	mov    %ebx,(%esp)
   29466:	89 45 dc             	mov    %eax,-0x24(%ebp)
   29469:	85 c0                	test   %eax,%eax
   2946b:	75 2e                	jne    2949b <stat+0x12b>
   2946d:	e8 0e a5 ff ff       	call   23980 <async_exchange_end>
   29472:	89 34 24             	mov    %esi,(%esp)
   29475:	e8 66 6d ff ff       	call   201e0 <free>
   2947a:	8d 45 dc             	lea    -0x24(%ebp),%eax
   2947d:	89 44 24 04          	mov    %eax,0x4(%esp)
   29481:	89 3c 24             	mov    %edi,(%esp)
   29484:	e8 f7 8c ff ff       	call   22180 <async_wait_for>
   29489:	8b 45 dc             	mov    -0x24(%ebp),%eax
   2948c:	83 c4 3c             	add    $0x3c,%esp
   2948f:	5b                   	pop    %ebx
   29490:	5e                   	pop    %esi
   29491:	5f                   	pop    %edi
   29492:	5d                   	pop    %ebp
   29493:	c3                   	ret    
   29494:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   29498:	89 1c 24             	mov    %ebx,(%esp)
   2949b:	e8 e0 a4 ff ff       	call   23980 <async_exchange_end>
   294a0:	89 34 24             	mov    %esi,(%esp)
   294a3:	e8 38 6d ff ff       	call   201e0 <free>
   294a8:	8d 45 e0             	lea    -0x20(%ebp),%eax
   294ab:	89 44 24 04          	mov    %eax,0x4(%esp)
   294af:	89 3c 24             	mov    %edi,(%esp)
   294b2:	e8 c9 8c ff ff       	call   22180 <async_wait_for>
   294b7:	8b 45 e0             	mov    -0x20(%ebp),%eax
   294ba:	85 c0                	test   %eax,%eax
   294bc:	74 cb                	je     29489 <stat+0x119>
   294be:	83 c4 3c             	add    $0x3c,%esp
   294c1:	5b                   	pop    %ebx
   294c2:	5e                   	pop    %esi
   294c3:	5f                   	pop    %edi
   294c4:	5d                   	pop    %ebp
   294c5:	c3                   	ret    
   294c6:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   294cb:	eb bf                	jmp    2948c <stat+0x11c>
   294cd:	8d 76 00             	lea    0x0(%esi),%esi

000294d0 <opendir>:
   294d0:	55                   	push   %ebp
   294d1:	89 e5                	mov    %esp,%ebp
   294d3:	57                   	push   %edi
   294d4:	56                   	push   %esi
   294d5:	53                   	push   %ebx
   294d6:	83 ec 6c             	sub    $0x6c,%esp
   294d9:	c7 04 24 08 01 00 00 	movl   $0x108,(%esp)
   294e0:	e8 eb 6b ff ff       	call   200d0 <malloc>
   294e5:	89 c3                	mov    %eax,%ebx
   294e7:	85 c0                	test   %eax,%eax
   294e9:	0f 84 07 01 00 00    	je     295f6 <opendir+0x126>
   294ef:	8d 45 b8             	lea    -0x48(%ebp),%eax
   294f2:	89 44 24 04          	mov    %eax,0x4(%esp)
   294f6:	8b 45 08             	mov    0x8(%ebp),%eax
   294f9:	89 04 24             	mov    %eax,(%esp)
   294fc:	e8 bf ec ff ff       	call   281c0 <absolutize>
   29501:	89 c6                	mov    %eax,%esi
   29503:	85 c0                	test   %eax,%eax
   29505:	0f 84 1b 01 00 00    	je     29626 <opendir+0x156>
   2950b:	8b 45 b8             	mov    -0x48(%ebp),%eax
   2950e:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29515:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   29518:	e8 a3 dd fe ff       	call   172c0 <fibril_mutex_lock>
   2951d:	8b 0d 14 07 03 00    	mov    0x30714,%ecx
   29523:	85 c9                	test   %ecx,%ecx
   29525:	75 2e                	jne    29555 <opendir+0x85>
   29527:	90                   	nop
   29528:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2952f:	00 
   29530:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   29537:	00 
   29538:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   2953f:	20 
   29540:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   29547:	e8 14 74 ff ff       	call   20960 <service_connect_blocking>
   2954c:	a3 14 07 03 00       	mov    %eax,0x30714
   29551:	85 c0                	test   %eax,%eax
   29553:	74 d3                	je     29528 <opendir+0x58>
   29555:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2955c:	e8 7f de fe ff       	call   173e0 <fibril_mutex_unlock>
   29561:	a1 14 07 03 00       	mov    0x30714,%eax
   29566:	89 04 24             	mov    %eax,(%esp)
   29569:	e8 a2 a0 ff ff       	call   23610 <async_exchange_begin>
   2956e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   29575:	00 
   29576:	89 c7                	mov    %eax,%edi
   29578:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   2957b:	89 44 24 18          	mov    %eax,0x18(%esp)
   2957f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   29586:	00 
   29587:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2958e:	00 
   2958f:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   29596:	00 
   29597:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)
   2959e:	00 
   2959f:	89 3c 24             	mov    %edi,(%esp)
   295a2:	e8 09 8a ff ff       	call   21fb0 <async_send_fast>
   295a7:	89 74 24 04          	mov    %esi,0x4(%esp)
   295ab:	89 45 b0             	mov    %eax,-0x50(%ebp)
   295ae:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   295b1:	89 44 24 08          	mov    %eax,0x8(%esp)
   295b5:	89 3c 24             	mov    %edi,(%esp)
   295b8:	e8 43 af ff ff       	call   24500 <async_data_write_start>
   295bd:	89 45 bc             	mov    %eax,-0x44(%ebp)
   295c0:	85 c0                	test   %eax,%eax
   295c2:	75 3c                	jne    29600 <opendir+0x130>
   295c4:	89 3c 24             	mov    %edi,(%esp)
   295c7:	e8 b4 a3 ff ff       	call   23980 <async_exchange_end>
   295cc:	8d 45 bc             	lea    -0x44(%ebp),%eax
   295cf:	89 44 24 04          	mov    %eax,0x4(%esp)
   295d3:	8b 45 b0             	mov    -0x50(%ebp),%eax
   295d6:	89 04 24             	mov    %eax,(%esp)
   295d9:	e8 a2 8b ff ff       	call   22180 <async_wait_for>
   295de:	8b 7d bc             	mov    -0x44(%ebp),%edi
   295e1:	85 ff                	test   %edi,%edi
   295e3:	75 03                	jne    295e8 <opendir+0x118>
   295e5:	8b 7d c8             	mov    -0x38(%ebp),%edi
   295e8:	89 34 24             	mov    %esi,(%esp)
   295eb:	e8 f0 6b ff ff       	call   201e0 <free>
   295f0:	85 ff                	test   %edi,%edi
   295f2:	78 32                	js     29626 <opendir+0x156>
   295f4:	89 3b                	mov    %edi,(%ebx)
   295f6:	83 c4 6c             	add    $0x6c,%esp
   295f9:	89 d8                	mov    %ebx,%eax
   295fb:	5b                   	pop    %ebx
   295fc:	5e                   	pop    %esi
   295fd:	5f                   	pop    %edi
   295fe:	5d                   	pop    %ebp
   295ff:	c3                   	ret    
   29600:	89 3c 24             	mov    %edi,(%esp)
   29603:	e8 78 a3 ff ff       	call   23980 <async_exchange_end>
   29608:	8d 45 c0             	lea    -0x40(%ebp),%eax
   2960b:	89 44 24 04          	mov    %eax,0x4(%esp)
   2960f:	8b 45 b0             	mov    -0x50(%ebp),%eax
   29612:	89 04 24             	mov    %eax,(%esp)
   29615:	e8 66 8b ff ff       	call   22180 <async_wait_for>
   2961a:	8b 7d c0             	mov    -0x40(%ebp),%edi
   2961d:	85 ff                	test   %edi,%edi
   2961f:	75 c7                	jne    295e8 <opendir+0x118>
   29621:	8b 7d bc             	mov    -0x44(%ebp),%edi
   29624:	eb c2                	jmp    295e8 <opendir+0x118>
   29626:	89 1c 24             	mov    %ebx,(%esp)
   29629:	31 db                	xor    %ebx,%ebx
   2962b:	e8 b0 6b ff ff       	call   201e0 <free>
   29630:	eb c4                	jmp    295f6 <opendir+0x126>
   29632:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   29639:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00029640 <readdir>:
   29640:	55                   	push   %ebp
   29641:	89 e5                	mov    %esp,%ebp
   29643:	57                   	push   %edi
   29644:	56                   	push   %esi
   29645:	53                   	push   %ebx
   29646:	83 ec 5c             	sub    $0x5c,%esp
   29649:	8b 45 08             	mov    0x8(%ebp),%eax
   2964c:	8b 30                	mov    (%eax),%esi
   2964e:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29655:	8d 58 04             	lea    0x4(%eax),%ebx
   29658:	e8 63 dc fe ff       	call   172c0 <fibril_mutex_lock>
   2965d:	8b 3d 14 07 03 00    	mov    0x30714,%edi
   29663:	85 ff                	test   %edi,%edi
   29665:	75 2e                	jne    29695 <readdir+0x55>
   29667:	90                   	nop
   29668:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2966f:	00 
   29670:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   29677:	00 
   29678:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   2967f:	20 
   29680:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   29687:	e8 d4 72 ff ff       	call   20960 <service_connect_blocking>
   2968c:	a3 14 07 03 00       	mov    %eax,0x30714
   29691:	85 c0                	test   %eax,%eax
   29693:	74 d3                	je     29668 <readdir+0x28>
   29695:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2969c:	e8 3f dd fe ff       	call   173e0 <fibril_mutex_unlock>
   296a1:	a1 14 07 03 00       	mov    0x30714,%eax
   296a6:	89 04 24             	mov    %eax,(%esp)
   296a9:	e8 62 9f ff ff       	call   23610 <async_exchange_begin>
   296ae:	89 74 24 08          	mov    %esi,0x8(%esp)
   296b2:	89 c7                	mov    %eax,%edi
   296b4:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   296b7:	89 44 24 18          	mov    %eax,0x18(%esp)
   296bb:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   296c2:	00 
   296c3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   296ca:	00 
   296cb:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   296d2:	00 
   296d3:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)
   296da:	00 
   296db:	89 3c 24             	mov    %edi,(%esp)
   296de:	e8 cd 88 ff ff       	call   21fb0 <async_send_fast>
   296e3:	c7 44 24 08 01 01 00 	movl   $0x101,0x8(%esp)
   296ea:	00 
   296eb:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   296ef:	89 3c 24             	mov    %edi,(%esp)
   296f2:	89 c6                	mov    %eax,%esi
   296f4:	e8 e7 a8 ff ff       	call   23fe0 <async_data_read_start>
   296f9:	89 45 bc             	mov    %eax,-0x44(%ebp)
   296fc:	85 c0                	test   %eax,%eax
   296fe:	74 30                	je     29730 <readdir+0xf0>
   29700:	89 3c 24             	mov    %edi,(%esp)
   29703:	e8 78 a2 ff ff       	call   23980 <async_exchange_end>
   29708:	8d 45 c0             	lea    -0x40(%ebp),%eax
   2970b:	89 44 24 04          	mov    %eax,0x4(%esp)
   2970f:	89 34 24             	mov    %esi,(%esp)
   29712:	e8 69 8a ff ff       	call   22180 <async_wait_for>
   29717:	8b 45 c0             	mov    -0x40(%ebp),%eax
   2971a:	85 c0                	test   %eax,%eax
   2971c:	74 3a                	je     29758 <readdir+0x118>
   2971e:	85 c0                	test   %eax,%eax
   29720:	7e 3b                	jle    2975d <readdir+0x11d>
   29722:	89 d8                	mov    %ebx,%eax
   29724:	83 c4 5c             	add    $0x5c,%esp
   29727:	5b                   	pop    %ebx
   29728:	5e                   	pop    %esi
   29729:	5f                   	pop    %edi
   2972a:	5d                   	pop    %ebp
   2972b:	c3                   	ret    
   2972c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   29730:	89 3c 24             	mov    %edi,(%esp)
   29733:	e8 48 a2 ff ff       	call   23980 <async_exchange_end>
   29738:	8d 45 bc             	lea    -0x44(%ebp),%eax
   2973b:	89 44 24 04          	mov    %eax,0x4(%esp)
   2973f:	89 34 24             	mov    %esi,(%esp)
   29742:	e8 39 8a ff ff       	call   22180 <async_wait_for>
   29747:	8b 45 bc             	mov    -0x44(%ebp),%eax
   2974a:	85 c0                	test   %eax,%eax
   2974c:	75 d0                	jne    2971e <readdir+0xde>
   2974e:	8b 45 c8             	mov    -0x38(%ebp),%eax
   29751:	eb cb                	jmp    2971e <readdir+0xde>
   29753:	90                   	nop
   29754:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   29758:	8b 45 bc             	mov    -0x44(%ebp),%eax
   2975b:	eb c1                	jmp    2971e <readdir+0xde>
   2975d:	31 c0                	xor    %eax,%eax
   2975f:	eb c3                	jmp    29724 <readdir+0xe4>
   29761:	eb 0d                	jmp    29770 <rewinddir>
   29763:	90                   	nop
   29764:	90                   	nop
   29765:	90                   	nop
   29766:	90                   	nop
   29767:	90                   	nop
   29768:	90                   	nop
   29769:	90                   	nop
   2976a:	90                   	nop
   2976b:	90                   	nop
   2976c:	90                   	nop
   2976d:	90                   	nop
   2976e:	90                   	nop
   2976f:	90                   	nop

00029770 <rewinddir>:
   29770:	55                   	push   %ebp
   29771:	89 e5                	mov    %esp,%ebp
   29773:	56                   	push   %esi
   29774:	53                   	push   %ebx
   29775:	83 ec 40             	sub    $0x40,%esp
   29778:	8b 45 08             	mov    0x8(%ebp),%eax
   2977b:	8b 30                	mov    (%eax),%esi
   2977d:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29784:	e8 37 db fe ff       	call   172c0 <fibril_mutex_lock>
   29789:	a1 14 07 03 00       	mov    0x30714,%eax
   2978e:	85 c0                	test   %eax,%eax
   29790:	75 33                	jne    297c5 <rewinddir+0x55>
   29792:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   29798:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2979f:	00 
   297a0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   297a7:	00 
   297a8:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   297af:	20 
   297b0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   297b7:	e8 a4 71 ff ff       	call   20960 <service_connect_blocking>
   297bc:	a3 14 07 03 00       	mov    %eax,0x30714
   297c1:	85 c0                	test   %eax,%eax
   297c3:	74 d3                	je     29798 <rewinddir+0x28>
   297c5:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   297cc:	e8 0f dc fe ff       	call   173e0 <fibril_mutex_unlock>
   297d1:	a1 14 07 03 00       	mov    0x30714,%eax
   297d6:	89 04 24             	mov    %eax,(%esp)
   297d9:	e8 32 9e ff ff       	call   23610 <async_exchange_begin>
   297de:	89 74 24 08          	mov    %esi,0x8(%esp)
   297e2:	89 c3                	mov    %eax,%ebx
   297e4:	8d 45 f4             	lea    -0xc(%ebp),%eax
   297e7:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   297eb:	8d 45 f0             	lea    -0x10(%ebp),%eax
   297ee:	89 1c 24             	mov    %ebx,(%esp)
   297f1:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   297f8:	00 
   297f9:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   29800:	00 
   29801:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   29808:	00 
   29809:	89 44 24 18          	mov    %eax,0x18(%esp)
   2980d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   29814:	00 
   29815:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2981c:	00 
   2981d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   29824:	00 
   29825:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)
   2982c:	00 
   2982d:	e8 8e 8d ff ff       	call   225c0 <async_req_fast>
   29832:	89 1c 24             	mov    %ebx,(%esp)
   29835:	e8 46 a1 ff ff       	call   23980 <async_exchange_end>
   2983a:	83 c4 40             	add    $0x40,%esp
   2983d:	5b                   	pop    %ebx
   2983e:	5e                   	pop    %esi
   2983f:	5d                   	pop    %ebp
   29840:	c3                   	ret    
   29841:	eb 0d                	jmp    29850 <closedir>
   29843:	90                   	nop
   29844:	90                   	nop
   29845:	90                   	nop
   29846:	90                   	nop
   29847:	90                   	nop
   29848:	90                   	nop
   29849:	90                   	nop
   2984a:	90                   	nop
   2984b:	90                   	nop
   2984c:	90                   	nop
   2984d:	90                   	nop
   2984e:	90                   	nop
   2984f:	90                   	nop

00029850 <closedir>:
   29850:	55                   	push   %ebp
   29851:	89 e5                	mov    %esp,%ebp
   29853:	57                   	push   %edi
   29854:	56                   	push   %esi
   29855:	53                   	push   %ebx
   29856:	83 ec 3c             	sub    $0x3c,%esp
   29859:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2985c:	8b 33                	mov    (%ebx),%esi
   2985e:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29865:	e8 56 da fe ff       	call   172c0 <fibril_mutex_lock>
   2986a:	a1 14 07 03 00       	mov    0x30714,%eax
   2986f:	85 c0                	test   %eax,%eax
   29871:	75 32                	jne    298a5 <closedir+0x55>
   29873:	90                   	nop
   29874:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   29878:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2987f:	00 
   29880:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   29887:	00 
   29888:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   2988f:	20 
   29890:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   29897:	e8 c4 70 ff ff       	call   20960 <service_connect_blocking>
   2989c:	a3 14 07 03 00       	mov    %eax,0x30714
   298a1:	85 c0                	test   %eax,%eax
   298a3:	74 d3                	je     29878 <closedir+0x28>
   298a5:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   298ac:	e8 2f db fe ff       	call   173e0 <fibril_mutex_unlock>
   298b1:	a1 14 07 03 00       	mov    0x30714,%eax
   298b6:	89 04 24             	mov    %eax,(%esp)
   298b9:	e8 52 9d ff ff       	call   23610 <async_exchange_begin>
   298be:	89 74 24 08          	mov    %esi,0x8(%esp)
   298c2:	89 c7                	mov    %eax,%edi
   298c4:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   298cb:	00 
   298cc:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   298d3:	00 
   298d4:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   298db:	00 
   298dc:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   298e3:	00 
   298e4:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   298eb:	00 
   298ec:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   298f3:	00 
   298f4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   298fb:	00 
   298fc:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   29903:	00 
   29904:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)
   2990b:	00 
   2990c:	89 04 24             	mov    %eax,(%esp)
   2990f:	e8 ac 8c ff ff       	call   225c0 <async_req_fast>
   29914:	89 3c 24             	mov    %edi,(%esp)
   29917:	e8 64 a0 ff ff       	call   23980 <async_exchange_end>
   2991c:	89 1c 24             	mov    %ebx,(%esp)
   2991f:	e8 bc 68 ff ff       	call   201e0 <free>
   29924:	83 c4 3c             	add    $0x3c,%esp
   29927:	31 c0                	xor    %eax,%eax
   29929:	5b                   	pop    %ebx
   2992a:	5e                   	pop    %esi
   2992b:	5f                   	pop    %edi
   2992c:	5d                   	pop    %ebp
   2992d:	c3                   	ret    
   2992e:	66 90                	xchg   %ax,%ax

00029930 <mkdir>:
   29930:	55                   	push   %ebp
   29931:	89 e5                	mov    %esp,%ebp
   29933:	57                   	push   %edi
   29934:	56                   	push   %esi
   29935:	53                   	push   %ebx
   29936:	83 ec 3c             	sub    $0x3c,%esp
   29939:	8d 45 e0             	lea    -0x20(%ebp),%eax
   2993c:	89 44 24 04          	mov    %eax,0x4(%esp)
   29940:	8b 45 08             	mov    0x8(%ebp),%eax
   29943:	89 04 24             	mov    %eax,(%esp)
   29946:	e8 75 e8 ff ff       	call   281c0 <absolutize>
   2994b:	89 c3                	mov    %eax,%ebx
   2994d:	85 c0                	test   %eax,%eax
   2994f:	0f 84 11 01 00 00    	je     29a66 <mkdir+0x136>
   29955:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2995c:	e8 5f d9 fe ff       	call   172c0 <fibril_mutex_lock>
   29961:	a1 14 07 03 00       	mov    0x30714,%eax
   29966:	85 c0                	test   %eax,%eax
   29968:	75 33                	jne    2999d <mkdir+0x6d>
   2996a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   29970:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   29977:	00 
   29978:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2997f:	00 
   29980:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   29987:	20 
   29988:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2998f:	e8 cc 6f ff ff       	call   20960 <service_connect_blocking>
   29994:	a3 14 07 03 00       	mov    %eax,0x30714
   29999:	85 c0                	test   %eax,%eax
   2999b:	74 d3                	je     29970 <mkdir+0x40>
   2999d:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   299a4:	e8 37 da fe ff       	call   173e0 <fibril_mutex_unlock>
   299a9:	a1 14 07 03 00       	mov    0x30714,%eax
   299ae:	89 04 24             	mov    %eax,(%esp)
   299b1:	e8 5a 9c ff ff       	call   23610 <async_exchange_begin>
   299b6:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   299bd:	00 
   299be:	89 c6                	mov    %eax,%esi
   299c0:	8b 45 0c             	mov    0xc(%ebp),%eax
   299c3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   299ca:	00 
   299cb:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   299d2:	00 
   299d3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   299da:	00 
   299db:	89 44 24 08          	mov    %eax,0x8(%esp)
   299df:	c7 44 24 04 0c 04 00 	movl   $0x40c,0x4(%esp)
   299e6:	00 
   299e7:	89 34 24             	mov    %esi,(%esp)
   299ea:	e8 c1 85 ff ff       	call   21fb0 <async_send_fast>
   299ef:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   299f3:	89 c7                	mov    %eax,%edi
   299f5:	8b 45 e0             	mov    -0x20(%ebp),%eax
   299f8:	89 44 24 08          	mov    %eax,0x8(%esp)
   299fc:	89 34 24             	mov    %esi,(%esp)
   299ff:	e8 fc aa ff ff       	call   24500 <async_data_write_start>
   29a04:	89 45 dc             	mov    %eax,-0x24(%ebp)
   29a07:	85 c0                	test   %eax,%eax
   29a09:	75 2d                	jne    29a38 <mkdir+0x108>
   29a0b:	89 34 24             	mov    %esi,(%esp)
   29a0e:	e8 6d 9f ff ff       	call   23980 <async_exchange_end>
   29a13:	89 1c 24             	mov    %ebx,(%esp)
   29a16:	e8 c5 67 ff ff       	call   201e0 <free>
   29a1b:	8d 45 dc             	lea    -0x24(%ebp),%eax
   29a1e:	89 44 24 04          	mov    %eax,0x4(%esp)
   29a22:	89 3c 24             	mov    %edi,(%esp)
   29a25:	e8 56 87 ff ff       	call   22180 <async_wait_for>
   29a2a:	8b 45 dc             	mov    -0x24(%ebp),%eax
   29a2d:	83 c4 3c             	add    $0x3c,%esp
   29a30:	5b                   	pop    %ebx
   29a31:	5e                   	pop    %esi
   29a32:	5f                   	pop    %edi
   29a33:	5d                   	pop    %ebp
   29a34:	c3                   	ret    
   29a35:	8d 76 00             	lea    0x0(%esi),%esi
   29a38:	89 34 24             	mov    %esi,(%esp)
   29a3b:	e8 40 9f ff ff       	call   23980 <async_exchange_end>
   29a40:	89 1c 24             	mov    %ebx,(%esp)
   29a43:	e8 98 67 ff ff       	call   201e0 <free>
   29a48:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   29a4b:	89 44 24 04          	mov    %eax,0x4(%esp)
   29a4f:	89 3c 24             	mov    %edi,(%esp)
   29a52:	e8 29 87 ff ff       	call   22180 <async_wait_for>
   29a57:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   29a5a:	85 c0                	test   %eax,%eax
   29a5c:	74 cc                	je     29a2a <mkdir+0xfa>
   29a5e:	83 c4 3c             	add    $0x3c,%esp
   29a61:	5b                   	pop    %ebx
   29a62:	5e                   	pop    %esi
   29a63:	5f                   	pop    %edi
   29a64:	5d                   	pop    %ebp
   29a65:	c3                   	ret    
   29a66:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   29a6b:	eb c0                	jmp    29a2d <mkdir+0xfd>
   29a6d:	8d 76 00             	lea    0x0(%esi),%esi

00029a70 <unlink>:
   29a70:	55                   	push   %ebp
   29a71:	31 d2                	xor    %edx,%edx
   29a73:	89 e5                	mov    %esp,%ebp
   29a75:	8b 45 08             	mov    0x8(%ebp),%eax
   29a78:	5d                   	pop    %ebp
   29a79:	e9 72 e8 ff ff       	jmp    282f0 <_unlink>
   29a7e:	66 90                	xchg   %ax,%ax

00029a80 <rmdir>:
   29a80:	55                   	push   %ebp
   29a81:	ba 02 00 00 00       	mov    $0x2,%edx
   29a86:	89 e5                	mov    %esp,%ebp
   29a88:	8b 45 08             	mov    0x8(%ebp),%eax
   29a8b:	5d                   	pop    %ebp
   29a8c:	e9 5f e8 ff ff       	jmp    282f0 <_unlink>
   29a91:	eb 0d                	jmp    29aa0 <rename>
   29a93:	90                   	nop
   29a94:	90                   	nop
   29a95:	90                   	nop
   29a96:	90                   	nop
   29a97:	90                   	nop
   29a98:	90                   	nop
   29a99:	90                   	nop
   29a9a:	90                   	nop
   29a9b:	90                   	nop
   29a9c:	90                   	nop
   29a9d:	90                   	nop
   29a9e:	90                   	nop
   29a9f:	90                   	nop

00029aa0 <rename>:
   29aa0:	55                   	push   %ebp
   29aa1:	89 e5                	mov    %esp,%ebp
   29aa3:	57                   	push   %edi
   29aa4:	56                   	push   %esi
   29aa5:	53                   	push   %ebx
   29aa6:	83 ec 4c             	sub    $0x4c,%esp
   29aa9:	8d 45 e0             	lea    -0x20(%ebp),%eax
   29aac:	89 44 24 04          	mov    %eax,0x4(%esp)
   29ab0:	8b 45 08             	mov    0x8(%ebp),%eax
   29ab3:	89 04 24             	mov    %eax,(%esp)
   29ab6:	e8 05 e7 ff ff       	call   281c0 <absolutize>
   29abb:	89 c6                	mov    %eax,%esi
   29abd:	85 c0                	test   %eax,%eax
   29abf:	0f 84 5c 01 00 00    	je     29c21 <rename+0x181>
   29ac5:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   29ac8:	89 44 24 04          	mov    %eax,0x4(%esp)
   29acc:	8b 45 0c             	mov    0xc(%ebp),%eax
   29acf:	89 04 24             	mov    %eax,(%esp)
   29ad2:	e8 e9 e6 ff ff       	call   281c0 <absolutize>
   29ad7:	89 c7                	mov    %eax,%edi
   29ad9:	85 c0                	test   %eax,%eax
   29adb:	0f 84 47 01 00 00    	je     29c28 <rename+0x188>
   29ae1:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29ae8:	e8 d3 d7 fe ff       	call   172c0 <fibril_mutex_lock>
   29aed:	a1 14 07 03 00       	mov    0x30714,%eax
   29af2:	85 c0                	test   %eax,%eax
   29af4:	75 2f                	jne    29b25 <rename+0x85>
   29af6:	66 90                	xchg   %ax,%ax
   29af8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   29aff:	00 
   29b00:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   29b07:	00 
   29b08:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   29b0f:	20 
   29b10:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   29b17:	e8 44 6e ff ff       	call   20960 <service_connect_blocking>
   29b1c:	a3 14 07 03 00       	mov    %eax,0x30714
   29b21:	85 c0                	test   %eax,%eax
   29b23:	74 d3                	je     29af8 <rename+0x58>
   29b25:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29b2c:	e8 af d8 fe ff       	call   173e0 <fibril_mutex_unlock>
   29b31:	a1 14 07 03 00       	mov    0x30714,%eax
   29b36:	89 04 24             	mov    %eax,(%esp)
   29b39:	e8 d2 9a ff ff       	call   23610 <async_exchange_begin>
   29b3e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   29b45:	00 
   29b46:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   29b4d:	00 
   29b4e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   29b55:	00 
   29b56:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   29b5d:	00 
   29b5e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   29b65:	00 
   29b66:	c7 44 24 04 0e 04 00 	movl   $0x40e,0x4(%esp)
   29b6d:	00 
   29b6e:	89 04 24             	mov    %eax,(%esp)
   29b71:	89 c3                	mov    %eax,%ebx
   29b73:	e8 38 84 ff ff       	call   21fb0 <async_send_fast>
   29b78:	89 45 d4             	mov    %eax,-0x2c(%ebp)
   29b7b:	8b 45 e0             	mov    -0x20(%ebp),%eax
   29b7e:	89 44 24 08          	mov    %eax,0x8(%esp)
   29b82:	89 74 24 04          	mov    %esi,0x4(%esp)
   29b86:	89 1c 24             	mov    %ebx,(%esp)
   29b89:	e8 72 a9 ff ff       	call   24500 <async_data_write_start>
   29b8e:	89 45 d8             	mov    %eax,-0x28(%ebp)
   29b91:	85 c0                	test   %eax,%eax
   29b93:	75 53                	jne    29be8 <rename+0x148>
   29b95:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   29b98:	89 7c 24 04          	mov    %edi,0x4(%esp)
   29b9c:	89 44 24 08          	mov    %eax,0x8(%esp)
   29ba0:	89 1c 24             	mov    %ebx,(%esp)
   29ba3:	e8 58 a9 ff ff       	call   24500 <async_data_write_start>
   29ba8:	89 1c 24             	mov    %ebx,(%esp)
   29bab:	89 45 d8             	mov    %eax,-0x28(%ebp)
   29bae:	85 c0                	test   %eax,%eax
   29bb0:	75 39                	jne    29beb <rename+0x14b>
   29bb2:	e8 c9 9d ff ff       	call   23980 <async_exchange_end>
   29bb7:	89 34 24             	mov    %esi,(%esp)
   29bba:	e8 21 66 ff ff       	call   201e0 <free>
   29bbf:	89 3c 24             	mov    %edi,(%esp)
   29bc2:	e8 19 66 ff ff       	call   201e0 <free>
   29bc7:	8d 45 d8             	lea    -0x28(%ebp),%eax
   29bca:	89 44 24 04          	mov    %eax,0x4(%esp)
   29bce:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   29bd1:	89 04 24             	mov    %eax,(%esp)
   29bd4:	e8 a7 85 ff ff       	call   22180 <async_wait_for>
   29bd9:	8b 45 d8             	mov    -0x28(%ebp),%eax
   29bdc:	83 c4 4c             	add    $0x4c,%esp
   29bdf:	5b                   	pop    %ebx
   29be0:	5e                   	pop    %esi
   29be1:	5f                   	pop    %edi
   29be2:	5d                   	pop    %ebp
   29be3:	c3                   	ret    
   29be4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   29be8:	89 1c 24             	mov    %ebx,(%esp)
   29beb:	e8 90 9d ff ff       	call   23980 <async_exchange_end>
   29bf0:	89 34 24             	mov    %esi,(%esp)
   29bf3:	e8 e8 65 ff ff       	call   201e0 <free>
   29bf8:	89 3c 24             	mov    %edi,(%esp)
   29bfb:	e8 e0 65 ff ff       	call   201e0 <free>
   29c00:	8d 45 dc             	lea    -0x24(%ebp),%eax
   29c03:	89 44 24 04          	mov    %eax,0x4(%esp)
   29c07:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   29c0a:	89 04 24             	mov    %eax,(%esp)
   29c0d:	e8 6e 85 ff ff       	call   22180 <async_wait_for>
   29c12:	8b 45 dc             	mov    -0x24(%ebp),%eax
   29c15:	85 c0                	test   %eax,%eax
   29c17:	74 c0                	je     29bd9 <rename+0x139>
   29c19:	83 c4 4c             	add    $0x4c,%esp
   29c1c:	5b                   	pop    %ebx
   29c1d:	5e                   	pop    %esi
   29c1e:	5f                   	pop    %edi
   29c1f:	5d                   	pop    %ebp
   29c20:	c3                   	ret    
   29c21:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   29c26:	eb b4                	jmp    29bdc <rename+0x13c>
   29c28:	89 34 24             	mov    %esi,(%esp)
   29c2b:	e8 b0 65 ff ff       	call   201e0 <free>
   29c30:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   29c35:	eb a5                	jmp    29bdc <rename+0x13c>
   29c37:	89 f6                	mov    %esi,%esi
   29c39:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00029c40 <chdir>:
   29c40:	55                   	push   %ebp
   29c41:	89 e5                	mov    %esp,%ebp
   29c43:	57                   	push   %edi
   29c44:	56                   	push   %esi
   29c45:	53                   	push   %ebx
   29c46:	83 ec 7c             	sub    $0x7c,%esp
   29c49:	8d 45 b8             	lea    -0x48(%ebp),%eax
   29c4c:	89 44 24 04          	mov    %eax,0x4(%esp)
   29c50:	8b 45 08             	mov    0x8(%ebp),%eax
   29c53:	89 04 24             	mov    %eax,(%esp)
   29c56:	e8 65 e5 ff ff       	call   281c0 <absolutize>
   29c5b:	89 c3                	mov    %eax,%ebx
   29c5d:	85 c0                	test   %eax,%eax
   29c5f:	0f 84 25 02 00 00    	je     29e8a <chdir+0x24a>
   29c65:	8b 45 b8             	mov    -0x48(%ebp),%eax
   29c68:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29c6f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
   29c72:	e8 49 d6 fe ff       	call   172c0 <fibril_mutex_lock>
   29c77:	a1 14 07 03 00       	mov    0x30714,%eax
   29c7c:	85 c0                	test   %eax,%eax
   29c7e:	75 2d                	jne    29cad <chdir+0x6d>
   29c80:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   29c87:	00 
   29c88:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   29c8f:	00 
   29c90:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   29c97:	20 
   29c98:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   29c9f:	e8 bc 6c ff ff       	call   20960 <service_connect_blocking>
   29ca4:	a3 14 07 03 00       	mov    %eax,0x30714
   29ca9:	85 c0                	test   %eax,%eax
   29cab:	74 d3                	je     29c80 <chdir+0x40>
   29cad:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29cb4:	e8 27 d7 fe ff       	call   173e0 <fibril_mutex_unlock>
   29cb9:	a1 14 07 03 00       	mov    0x30714,%eax
   29cbe:	89 04 24             	mov    %eax,(%esp)
   29cc1:	e8 4a 99 ff ff       	call   23610 <async_exchange_begin>
   29cc6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   29ccd:	00 
   29cce:	89 c6                	mov    %eax,%esi
   29cd0:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   29cd3:	89 44 24 18          	mov    %eax,0x18(%esp)
   29cd7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   29cde:	00 
   29cdf:	c7 44 24 0c 80 00 00 	movl   $0x80,0xc(%esp)
   29ce6:	00 
   29ce7:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)
   29cee:	00 
   29cef:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)
   29cf6:	00 
   29cf7:	89 34 24             	mov    %esi,(%esp)
   29cfa:	e8 b1 82 ff ff       	call   21fb0 <async_send_fast>
   29cff:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   29d03:	89 c7                	mov    %eax,%edi
   29d05:	8b 45 b4             	mov    -0x4c(%ebp),%eax
   29d08:	89 44 24 08          	mov    %eax,0x8(%esp)
   29d0c:	89 34 24             	mov    %esi,(%esp)
   29d0f:	e8 ec a7 ff ff       	call   24500 <async_data_write_start>
   29d14:	89 45 bc             	mov    %eax,-0x44(%ebp)
   29d17:	85 c0                	test   %eax,%eax
   29d19:	0f 85 41 01 00 00    	jne    29e60 <chdir+0x220>
   29d1f:	89 34 24             	mov    %esi,(%esp)
   29d22:	e8 59 9c ff ff       	call   23980 <async_exchange_end>
   29d27:	8d 45 bc             	lea    -0x44(%ebp),%eax
   29d2a:	89 44 24 04          	mov    %eax,0x4(%esp)
   29d2e:	89 3c 24             	mov    %edi,(%esp)
   29d31:	e8 4a 84 ff ff       	call   22180 <async_wait_for>
   29d36:	8b 75 bc             	mov    -0x44(%ebp),%esi
   29d39:	85 f6                	test   %esi,%esi
   29d3b:	75 03                	jne    29d40 <chdir+0x100>
   29d3d:	8b 75 c8             	mov    -0x38(%ebp),%esi
   29d40:	85 f6                	test   %esi,%esi
   29d42:	0f 88 49 01 00 00    	js     29e91 <chdir+0x251>
   29d48:	c7 04 24 40 06 03 00 	movl   $0x30640,(%esp)
   29d4f:	e8 6c d5 fe ff       	call   172c0 <fibril_mutex_lock>
   29d54:	8b 3d 50 06 03 00    	mov    0x30650,%edi
   29d5a:	85 ff                	test   %edi,%edi
   29d5c:	0f 88 be 00 00 00    	js     29e20 <chdir+0x1e0>
   29d62:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29d69:	e8 52 d5 fe ff       	call   172c0 <fibril_mutex_lock>
   29d6e:	a1 14 07 03 00       	mov    0x30714,%eax
   29d73:	85 c0                	test   %eax,%eax
   29d75:	75 2e                	jne    29da5 <chdir+0x165>
   29d77:	90                   	nop
   29d78:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   29d7f:	00 
   29d80:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   29d87:	00 
   29d88:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   29d8f:	20 
   29d90:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   29d97:	e8 c4 6b ff ff       	call   20960 <service_connect_blocking>
   29d9c:	a3 14 07 03 00       	mov    %eax,0x30714
   29da1:	85 c0                	test   %eax,%eax
   29da3:	74 d3                	je     29d78 <chdir+0x138>
   29da5:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29dac:	e8 2f d6 fe ff       	call   173e0 <fibril_mutex_unlock>
   29db1:	a1 14 07 03 00       	mov    0x30714,%eax
   29db6:	89 04 24             	mov    %eax,(%esp)
   29db9:	e8 52 98 ff ff       	call   23610 <async_exchange_begin>
   29dbe:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   29dc5:	00 
   29dc6:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   29dcd:	00 
   29dce:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   29dd5:	00 
   29dd6:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   29ddd:	00 
   29dde:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   29de5:	00 
   29de6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   29ded:	00 
   29dee:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   29df5:	00 
   29df6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   29dfd:	00 
   29dfe:	89 7c 24 08          	mov    %edi,0x8(%esp)
   29e02:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)
   29e09:	00 
   29e0a:	89 04 24             	mov    %eax,(%esp)
   29e0d:	89 45 b0             	mov    %eax,-0x50(%ebp)
   29e10:	e8 ab 87 ff ff       	call   225c0 <async_req_fast>
   29e15:	8b 55 b0             	mov    -0x50(%ebp),%edx
   29e18:	89 14 24             	mov    %edx,(%esp)
   29e1b:	e8 60 9b ff ff       	call   23980 <async_exchange_end>
   29e20:	a1 18 07 03 00       	mov    0x30718,%eax
   29e25:	85 c0                	test   %eax,%eax
   29e27:	74 08                	je     29e31 <chdir+0x1f1>
   29e29:	89 04 24             	mov    %eax,(%esp)
   29e2c:	e8 af 63 ff ff       	call   201e0 <free>
   29e31:	8b 45 b8             	mov    -0x48(%ebp),%eax
   29e34:	c7 04 24 40 06 03 00 	movl   $0x30640,(%esp)
   29e3b:	a3 1c 07 03 00       	mov    %eax,0x3071c
   29e40:	89 35 50 06 03 00    	mov    %esi,0x30650
   29e46:	89 1d 18 07 03 00    	mov    %ebx,0x30718
   29e4c:	e8 8f d5 fe ff       	call   173e0 <fibril_mutex_unlock>
   29e51:	31 c0                	xor    %eax,%eax
   29e53:	83 c4 7c             	add    $0x7c,%esp
   29e56:	5b                   	pop    %ebx
   29e57:	5e                   	pop    %esi
   29e58:	5f                   	pop    %edi
   29e59:	5d                   	pop    %ebp
   29e5a:	c3                   	ret    
   29e5b:	90                   	nop
   29e5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   29e60:	89 34 24             	mov    %esi,(%esp)
   29e63:	e8 18 9b ff ff       	call   23980 <async_exchange_end>
   29e68:	8d 45 c0             	lea    -0x40(%ebp),%eax
   29e6b:	89 44 24 04          	mov    %eax,0x4(%esp)
   29e6f:	89 3c 24             	mov    %edi,(%esp)
   29e72:	e8 09 83 ff ff       	call   22180 <async_wait_for>
   29e77:	8b 75 c0             	mov    -0x40(%ebp),%esi
   29e7a:	85 f6                	test   %esi,%esi
   29e7c:	0f 85 be fe ff ff    	jne    29d40 <chdir+0x100>
   29e82:	8b 75 bc             	mov    -0x44(%ebp),%esi
   29e85:	e9 b6 fe ff ff       	jmp    29d40 <chdir+0x100>
   29e8a:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   29e8f:	eb c2                	jmp    29e53 <chdir+0x213>
   29e91:	89 1c 24             	mov    %ebx,(%esp)
   29e94:	e8 47 63 ff ff       	call   201e0 <free>
   29e99:	83 c8 ff             	or     $0xffffffff,%eax
   29e9c:	eb b5                	jmp    29e53 <chdir+0x213>
   29e9e:	66 90                	xchg   %ax,%ax

00029ea0 <getcwd>:
   29ea0:	55                   	push   %ebp
   29ea1:	89 e5                	mov    %esp,%ebp
   29ea3:	56                   	push   %esi
   29ea4:	53                   	push   %ebx
   29ea5:	83 ec 10             	sub    $0x10,%esp
   29ea8:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   29eab:	8b 75 08             	mov    0x8(%ebp),%esi
   29eae:	85 db                	test   %ebx,%ebx
   29eb0:	74 46                	je     29ef8 <getcwd+0x58>
   29eb2:	c7 04 24 40 06 03 00 	movl   $0x30640,(%esp)
   29eb9:	e8 02 d4 fe ff       	call   172c0 <fibril_mutex_lock>
   29ebe:	a1 1c 07 03 00       	mov    0x3071c,%eax
   29ec3:	85 c0                	test   %eax,%eax
   29ec5:	74 41                	je     29f08 <getcwd+0x68>
   29ec7:	40                   	inc    %eax
   29ec8:	39 c3                	cmp    %eax,%ebx
   29eca:	72 3c                	jb     29f08 <getcwd+0x68>
   29ecc:	a1 18 07 03 00       	mov    0x30718,%eax
   29ed1:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   29ed5:	89 44 24 08          	mov    %eax,0x8(%esp)
   29ed9:	89 34 24             	mov    %esi,(%esp)
   29edc:	e8 bf ac fe ff       	call   14ba0 <str_cpy>
   29ee1:	c7 04 24 40 06 03 00 	movl   $0x30640,(%esp)
   29ee8:	e8 f3 d4 fe ff       	call   173e0 <fibril_mutex_unlock>
   29eed:	83 c4 10             	add    $0x10,%esp
   29ef0:	89 f0                	mov    %esi,%eax
   29ef2:	5b                   	pop    %ebx
   29ef3:	5e                   	pop    %esi
   29ef4:	5d                   	pop    %ebp
   29ef5:	c3                   	ret    
   29ef6:	66 90                	xchg   %ax,%ax
   29ef8:	83 c4 10             	add    $0x10,%esp
   29efb:	31 f6                	xor    %esi,%esi
   29efd:	89 f0                	mov    %esi,%eax
   29eff:	5b                   	pop    %ebx
   29f00:	5e                   	pop    %esi
   29f01:	5d                   	pop    %ebp
   29f02:	c3                   	ret    
   29f03:	90                   	nop
   29f04:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   29f08:	c7 04 24 40 06 03 00 	movl   $0x30640,(%esp)
   29f0f:	31 f6                	xor    %esi,%esi
   29f11:	e8 ca d4 fe ff       	call   173e0 <fibril_mutex_unlock>
   29f16:	83 c4 10             	add    $0x10,%esp
   29f19:	89 f0                	mov    %esi,%eax
   29f1b:	5b                   	pop    %ebx
   29f1c:	5e                   	pop    %esi
   29f1d:	5d                   	pop    %ebp
   29f1e:	c3                   	ret    
   29f1f:	90                   	nop

00029f20 <fd_session>:
   29f20:	55                   	push   %ebp
   29f21:	89 e5                	mov    %esp,%ebp
   29f23:	56                   	push   %esi
   29f24:	53                   	push   %ebx
   29f25:	83 ec 50             	sub    $0x50,%esp
   29f28:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29f2f:	e8 8c d3 fe ff       	call   172c0 <fibril_mutex_lock>
   29f34:	8b 15 14 07 03 00    	mov    0x30714,%edx
   29f3a:	85 d2                	test   %edx,%edx
   29f3c:	75 2f                	jne    29f6d <fd_session+0x4d>
   29f3e:	66 90                	xchg   %ax,%ax
   29f40:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   29f47:	00 
   29f48:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   29f4f:	00 
   29f50:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   29f57:	20 
   29f58:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   29f5f:	e8 fc 69 ff ff       	call   20960 <service_connect_blocking>
   29f64:	a3 14 07 03 00       	mov    %eax,0x30714
   29f69:	85 c0                	test   %eax,%eax
   29f6b:	74 d3                	je     29f40 <fd_session+0x20>
   29f6d:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   29f74:	e8 67 d4 fe ff       	call   173e0 <fibril_mutex_unlock>
   29f79:	a1 14 07 03 00       	mov    0x30714,%eax
   29f7e:	89 04 24             	mov    %eax,(%esp)
   29f81:	e8 8a 96 ff ff       	call   23610 <async_exchange_begin>
   29f86:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   29f8d:	00 
   29f8e:	89 c3                	mov    %eax,%ebx
   29f90:	8b 45 0c             	mov    0xc(%ebp),%eax
   29f93:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   29f9a:	00 
   29f9b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   29fa2:	00 
   29fa3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   29faa:	00 
   29fab:	89 44 24 08          	mov    %eax,0x8(%esp)
   29faf:	c7 44 24 04 05 04 00 	movl   $0x405,0x4(%esp)
   29fb6:	00 
   29fb7:	89 1c 24             	mov    %ebx,(%esp)
   29fba:	e8 f1 7f ff ff       	call   21fb0 <async_send_fast>
   29fbf:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)
   29fc6:	00 
   29fc7:	89 c6                	mov    %eax,%esi
   29fc9:	8d 45 d8             	lea    -0x28(%ebp),%eax
   29fcc:	89 44 24 04          	mov    %eax,0x4(%esp)
   29fd0:	89 1c 24             	mov    %ebx,(%esp)
   29fd3:	e8 08 a0 ff ff       	call   23fe0 <async_data_read_start>
   29fd8:	89 45 d0             	mov    %eax,-0x30(%ebp)
   29fdb:	85 c0                	test   %eax,%eax
   29fdd:	74 49                	je     2a028 <fd_session+0x108>
   29fdf:	89 1c 24             	mov    %ebx,(%esp)
   29fe2:	e8 99 99 ff ff       	call   23980 <async_exchange_end>
   29fe7:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   29fea:	89 44 24 04          	mov    %eax,0x4(%esp)
   29fee:	89 34 24             	mov    %esi,(%esp)
   29ff1:	e8 8a 81 ff ff       	call   22180 <async_wait_for>
   29ff6:	8b 5d d4             	mov    -0x2c(%ebp),%ebx
   29ff9:	85 db                	test   %ebx,%ebx
   29ffb:	74 42                	je     2a03f <fd_session+0x11f>
   29ffd:	85 db                	test   %ebx,%ebx
   29fff:	75 45                	jne    2a046 <fd_session+0x126>
   2a001:	8b 45 f4             	mov    -0xc(%ebp),%eax
   2a004:	85 c0                	test   %eax,%eax
   2a006:	74 50                	je     2a058 <fd_session+0x138>
   2a008:	89 44 24 04          	mov    %eax,0x4(%esp)
   2a00c:	8b 45 08             	mov    0x8(%ebp),%eax
   2a00f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2a016:	00 
   2a017:	89 04 24             	mov    %eax,(%esp)
   2a01a:	e8 f1 80 fe ff       	call   12110 <loc_service_connect>
   2a01f:	83 c4 50             	add    $0x50,%esp
   2a022:	5b                   	pop    %ebx
   2a023:	5e                   	pop    %esi
   2a024:	5d                   	pop    %ebp
   2a025:	c3                   	ret    
   2a026:	66 90                	xchg   %ax,%ax
   2a028:	89 1c 24             	mov    %ebx,(%esp)
   2a02b:	e8 50 99 ff ff       	call   23980 <async_exchange_end>
   2a030:	8d 45 d0             	lea    -0x30(%ebp),%eax
   2a033:	89 44 24 04          	mov    %eax,0x4(%esp)
   2a037:	89 34 24             	mov    %esi,(%esp)
   2a03a:	e8 41 81 ff ff       	call   22180 <async_wait_for>
   2a03f:	8b 5d d0             	mov    -0x30(%ebp),%ebx
   2a042:	85 db                	test   %ebx,%ebx
   2a044:	74 bb                	je     2a001 <fd_session+0xe1>
   2a046:	e8 95 66 fe ff       	call   106e0 <__errno>
   2a04b:	89 18                	mov    %ebx,(%eax)
   2a04d:	83 c4 50             	add    $0x50,%esp
   2a050:	31 c0                	xor    %eax,%eax
   2a052:	5b                   	pop    %ebx
   2a053:	5e                   	pop    %esi
   2a054:	5d                   	pop    %ebp
   2a055:	c3                   	ret    
   2a056:	66 90                	xchg   %ax,%ax
   2a058:	e8 83 66 fe ff       	call   106e0 <__errno>
   2a05d:	c7 00 ff ff ff ff    	movl   $0xffffffff,(%eax)
   2a063:	83 c4 50             	add    $0x50,%esp
   2a066:	31 c0                	xor    %eax,%eax
   2a068:	5b                   	pop    %ebx
   2a069:	5e                   	pop    %esi
   2a06a:	5d                   	pop    %ebp
   2a06b:	c3                   	ret    
   2a06c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0002a070 <dup2>:
   2a070:	55                   	push   %ebp
   2a071:	89 e5                	mov    %esp,%ebp
   2a073:	56                   	push   %esi
   2a074:	53                   	push   %ebx
   2a075:	83 ec 40             	sub    $0x40,%esp
   2a078:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2a07f:	e8 3c d2 fe ff       	call   172c0 <fibril_mutex_lock>
   2a084:	8b 0d 14 07 03 00    	mov    0x30714,%ecx
   2a08a:	85 c9                	test   %ecx,%ecx
   2a08c:	75 2f                	jne    2a0bd <dup2+0x4d>
   2a08e:	66 90                	xchg   %ax,%ax
   2a090:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2a097:	00 
   2a098:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2a09f:	00 
   2a0a0:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   2a0a7:	20 
   2a0a8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2a0af:	e8 ac 68 ff ff       	call   20960 <service_connect_blocking>
   2a0b4:	a3 14 07 03 00       	mov    %eax,0x30714
   2a0b9:	85 c0                	test   %eax,%eax
   2a0bb:	74 d3                	je     2a090 <dup2+0x20>
   2a0bd:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2a0c4:	e8 17 d3 fe ff       	call   173e0 <fibril_mutex_unlock>
   2a0c9:	a1 14 07 03 00       	mov    0x30714,%eax
   2a0ce:	89 04 24             	mov    %eax,(%esp)
   2a0d1:	e8 3a 95 ff ff       	call   23610 <async_exchange_begin>
   2a0d6:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   2a0dd:	00 
   2a0de:	89 c3                	mov    %eax,%ebx
   2a0e0:	8d 45 f4             	lea    -0xc(%ebp),%eax
   2a0e3:	89 44 24 18          	mov    %eax,0x18(%esp)
   2a0e7:	8b 45 0c             	mov    0xc(%ebp),%eax
   2a0ea:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2a0ee:	8b 45 08             	mov    0x8(%ebp),%eax
   2a0f1:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   2a0f8:	00 
   2a0f9:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   2a100:	00 
   2a101:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   2a108:	00 
   2a109:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2a110:	00 
   2a111:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2a118:	00 
   2a119:	89 44 24 08          	mov    %eax,0x8(%esp)
   2a11d:	c7 44 24 04 10 04 00 	movl   $0x410,0x4(%esp)
   2a124:	00 
   2a125:	89 1c 24             	mov    %ebx,(%esp)
   2a128:	e8 93 84 ff ff       	call   225c0 <async_req_fast>
   2a12d:	89 1c 24             	mov    %ebx,(%esp)
   2a130:	89 c6                	mov    %eax,%esi
   2a132:	e8 49 98 ff ff       	call   23980 <async_exchange_end>
   2a137:	89 f0                	mov    %esi,%eax
   2a139:	85 f6                	test   %esi,%esi
   2a13b:	75 03                	jne    2a140 <dup2+0xd0>
   2a13d:	8b 45 f4             	mov    -0xc(%ebp),%eax
   2a140:	83 c4 40             	add    $0x40,%esp
   2a143:	5b                   	pop    %ebx
   2a144:	5e                   	pop    %esi
   2a145:	5d                   	pop    %ebp
   2a146:	c3                   	ret    
   2a147:	89 f6                	mov    %esi,%esi
   2a149:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002a150 <fd_wait>:
   2a150:	55                   	push   %ebp
   2a151:	89 e5                	mov    %esp,%ebp
   2a153:	56                   	push   %esi
   2a154:	53                   	push   %ebx
   2a155:	83 ec 40             	sub    $0x40,%esp
   2a158:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2a15f:	e8 5c d1 fe ff       	call   172c0 <fibril_mutex_lock>
   2a164:	8b 1d 14 07 03 00    	mov    0x30714,%ebx
   2a16a:	85 db                	test   %ebx,%ebx
   2a16c:	75 2f                	jne    2a19d <fd_wait+0x4d>
   2a16e:	66 90                	xchg   %ax,%ax
   2a170:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2a177:	00 
   2a178:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2a17f:	00 
   2a180:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   2a187:	20 
   2a188:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2a18f:	e8 cc 67 ff ff       	call   20960 <service_connect_blocking>
   2a194:	a3 14 07 03 00       	mov    %eax,0x30714
   2a199:	85 c0                	test   %eax,%eax
   2a19b:	74 d3                	je     2a170 <fd_wait+0x20>
   2a19d:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2a1a4:	e8 37 d2 fe ff       	call   173e0 <fibril_mutex_unlock>
   2a1a9:	a1 14 07 03 00       	mov    0x30714,%eax
   2a1ae:	89 04 24             	mov    %eax,(%esp)
   2a1b1:	e8 5a 94 ff ff       	call   23610 <async_exchange_begin>
   2a1b6:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   2a1bd:	00 
   2a1be:	89 c3                	mov    %eax,%ebx
   2a1c0:	8d 45 f4             	lea    -0xc(%ebp),%eax
   2a1c3:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   2a1ca:	00 
   2a1cb:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   2a1d2:	00 
   2a1d3:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   2a1da:	00 
   2a1db:	89 44 24 18          	mov    %eax,0x18(%esp)
   2a1df:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2a1e6:	00 
   2a1e7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2a1ee:	00 
   2a1ef:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2a1f6:	00 
   2a1f7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2a1fe:	00 
   2a1ff:	c7 44 24 04 11 04 00 	movl   $0x411,0x4(%esp)
   2a206:	00 
   2a207:	89 1c 24             	mov    %ebx,(%esp)
   2a20a:	e8 b1 83 ff ff       	call   225c0 <async_req_fast>
   2a20f:	89 1c 24             	mov    %ebx,(%esp)
   2a212:	89 c6                	mov    %eax,%esi
   2a214:	e8 67 97 ff ff       	call   23980 <async_exchange_end>
   2a219:	89 f0                	mov    %esi,%eax
   2a21b:	85 f6                	test   %esi,%esi
   2a21d:	75 03                	jne    2a222 <fd_wait+0xd2>
   2a21f:	8b 45 f4             	mov    -0xc(%ebp),%eax
   2a222:	83 c4 40             	add    $0x40,%esp
   2a225:	5b                   	pop    %ebx
   2a226:	5e                   	pop    %esi
   2a227:	5d                   	pop    %ebp
   2a228:	c3                   	ret    
   2a229:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0002a230 <get_mtab_list>:
   2a230:	55                   	push   %ebp
   2a231:	89 e5                	mov    %esp,%ebp
   2a233:	57                   	push   %edi
   2a234:	56                   	push   %esi
   2a235:	53                   	push   %ebx
   2a236:	83 ec 5c             	sub    $0x5c,%esp
   2a239:	8b 75 08             	mov    0x8(%ebp),%esi
   2a23c:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2a243:	e8 78 d0 fe ff       	call   172c0 <fibril_mutex_lock>
   2a248:	a1 14 07 03 00       	mov    0x30714,%eax
   2a24d:	85 c0                	test   %eax,%eax
   2a24f:	75 34                	jne    2a285 <get_mtab_list+0x55>
   2a251:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2a258:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2a25f:	00 
   2a260:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2a267:	00 
   2a268:	c7 44 24 04 76 66 73 	movl   $0x20736676,0x4(%esp)
   2a26f:	20 
   2a270:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
   2a277:	e8 e4 66 ff ff       	call   20960 <service_connect_blocking>
   2a27c:	a3 14 07 03 00       	mov    %eax,0x30714
   2a281:	85 c0                	test   %eax,%eax
   2a283:	74 d3                	je     2a258 <get_mtab_list+0x28>
   2a285:	c7 04 24 30 06 03 00 	movl   $0x30630,(%esp)
   2a28c:	e8 4f d1 fe ff       	call   173e0 <fibril_mutex_unlock>
   2a291:	a1 14 07 03 00       	mov    0x30714,%eax
   2a296:	89 04 24             	mov    %eax,(%esp)
   2a299:	e8 72 93 ff ff       	call   23610 <async_exchange_begin>
   2a29e:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   2a2a5:	00 
   2a2a6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2a2ad:	00 
   2a2ae:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2a2b5:	00 
   2a2b6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2a2bd:	00 
   2a2be:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2a2c5:	00 
   2a2c6:	c7 44 24 04 12 04 00 	movl   $0x412,0x4(%esp)
   2a2cd:	00 
   2a2ce:	89 04 24             	mov    %eax,(%esp)
   2a2d1:	89 c3                	mov    %eax,%ebx
   2a2d3:	e8 d8 7c ff ff       	call   21fb0 <async_send_fast>
   2a2d8:	89 45 d0             	mov    %eax,-0x30(%ebp)
   2a2db:	8d 45 dc             	lea    -0x24(%ebp),%eax
   2a2de:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   2a2e5:	00 
   2a2e6:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   2a2ed:	00 
   2a2ee:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   2a2f5:	00 
   2a2f6:	c7 44 24 1c 00 00 00 	movl   $0x0,0x1c(%esp)
   2a2fd:	00 
   2a2fe:	89 44 24 18          	mov    %eax,0x18(%esp)
   2a302:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2a309:	00 
   2a30a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2a311:	00 
   2a312:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2a319:	00 
   2a31a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2a321:	00 
   2a322:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)
   2a329:	00 
   2a32a:	89 1c 24             	mov    %ebx,(%esp)
   2a32d:	e8 8e 82 ff ff       	call   225c0 <async_req_fast>
   2a332:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2a335:	85 c0                	test   %eax,%eax
   2a337:	0f 85 4b 01 00 00    	jne    2a488 <get_mtab_list+0x258>
   2a33d:	8b 45 dc             	mov    -0x24(%ebp),%eax
   2a340:	85 c0                	test   %eax,%eax
   2a342:	0f 84 40 01 00 00    	je     2a488 <get_mtab_list+0x258>
   2a348:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
   2a34f:	e9 12 01 00 00       	jmp    2a466 <get_mtab_list+0x236>
   2a354:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2a358:	c7 44 24 08 24 01 01 	movl   $0x10124,0x8(%esp)
   2a35f:	00 
   2a360:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2a367:	00 
   2a368:	89 04 24             	mov    %eax,(%esp)
   2a36b:	e8 f0 8c fe ff       	call   13060 <memset>
   2a370:	8d 47 08             	lea    0x8(%edi),%eax
   2a373:	c7 44 24 08 00 00 01 	movl   $0x10000,0x8(%esp)
   2a37a:	00 
   2a37b:	89 44 24 04          	mov    %eax,0x4(%esp)
   2a37f:	89 1c 24             	mov    %ebx,(%esp)
   2a382:	e8 59 9c ff ff       	call   23fe0 <async_data_read_start>
   2a387:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2a38a:	85 c0                	test   %eax,%eax
   2a38c:	0f 85 f6 00 00 00    	jne    2a488 <get_mtab_list+0x258>
   2a392:	8d 87 08 00 01 00    	lea    0x10008(%edi),%eax
   2a398:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)
   2a39f:	00 
   2a3a0:	89 44 24 04          	mov    %eax,0x4(%esp)
   2a3a4:	89 1c 24             	mov    %ebx,(%esp)
   2a3a7:	e8 34 9c ff ff       	call   23fe0 <async_data_read_start>
   2a3ac:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2a3af:	85 c0                	test   %eax,%eax
   2a3b1:	0f 85 d1 00 00 00    	jne    2a488 <get_mtab_list+0x258>
   2a3b7:	8d 87 08 01 01 00    	lea    0x10108(%edi),%eax
   2a3bd:	c7 44 24 08 14 00 00 	movl   $0x14,0x8(%esp)
   2a3c4:	00 
   2a3c5:	89 44 24 04          	mov    %eax,0x4(%esp)
   2a3c9:	89 1c 24             	mov    %ebx,(%esp)
   2a3cc:	e8 0f 9c ff ff       	call   23fe0 <async_data_read_start>
   2a3d1:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2a3d4:	85 c0                	test   %eax,%eax
   2a3d6:	0f 85 ac 00 00 00    	jne    2a488 <get_mtab_list+0x258>
   2a3dc:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   2a3df:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
   2a3e6:	00 
   2a3e7:	89 44 24 1c          	mov    %eax,0x1c(%esp)
   2a3eb:	8d 45 e0             	lea    -0x20(%ebp),%eax
   2a3ee:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
   2a3f5:	00 
   2a3f6:	c7 44 24 20 00 00 00 	movl   $0x0,0x20(%esp)
   2a3fd:	00 
   2a3fe:	89 44 24 18          	mov    %eax,0x18(%esp)
   2a402:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2a409:	00 
   2a40a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2a411:	00 
   2a412:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2a419:	00 
   2a41a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2a421:	00 
   2a422:	c7 44 24 04 07 04 00 	movl   $0x407,0x4(%esp)
   2a429:	00 
   2a42a:	89 1c 24             	mov    %ebx,(%esp)
   2a42d:	e8 8e 81 ff ff       	call   225c0 <async_req_fast>
   2a432:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2a435:	85 c0                	test   %eax,%eax
   2a437:	75 4f                	jne    2a488 <get_mtab_list+0x258>
   2a439:	8b 45 e0             	mov    -0x20(%ebp),%eax
   2a43c:	89 77 04             	mov    %esi,0x4(%edi)
   2a43f:	89 87 1c 01 01 00    	mov    %eax,0x1011c(%edi)
   2a445:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2a448:	89 87 20 01 01 00    	mov    %eax,0x10120(%edi)
   2a44e:	8b 06                	mov    (%esi),%eax
   2a450:	89 07                	mov    %eax,(%edi)
   2a452:	89 3e                	mov    %edi,(%esi)
   2a454:	89 78 04             	mov    %edi,0x4(%eax)
   2a457:	8b 7d d4             	mov    -0x2c(%ebp),%edi
   2a45a:	47                   	inc    %edi
   2a45b:	89 7d d4             	mov    %edi,-0x2c(%ebp)
   2a45e:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   2a461:	39 45 dc             	cmp    %eax,-0x24(%ebp)
   2a464:	76 22                	jbe    2a488 <get_mtab_list+0x258>
   2a466:	c7 04 24 24 01 01 00 	movl   $0x10124,(%esp)
   2a46d:	e8 5e 5c ff ff       	call   200d0 <malloc>
   2a472:	89 c7                	mov    %eax,%edi
   2a474:	85 c0                	test   %eax,%eax
   2a476:	0f 85 dc fe ff ff    	jne    2a358 <get_mtab_list+0x128>
   2a47c:	c7 45 d8 fe ff ff ff 	movl   $0xfffffffe,-0x28(%ebp)
   2a483:	90                   	nop
   2a484:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2a488:	8d 45 d8             	lea    -0x28(%ebp),%eax
   2a48b:	89 44 24 04          	mov    %eax,0x4(%esp)
   2a48f:	8b 45 d0             	mov    -0x30(%ebp),%eax
   2a492:	89 04 24             	mov    %eax,(%esp)
   2a495:	e8 e6 7c ff ff       	call   22180 <async_wait_for>
   2a49a:	89 1c 24             	mov    %ebx,(%esp)
   2a49d:	e8 de 94 ff ff       	call   23980 <async_exchange_end>
   2a4a2:	8b 45 d8             	mov    -0x28(%ebp),%eax
   2a4a5:	83 c4 5c             	add    $0x5c,%esp
   2a4a8:	5b                   	pop    %ebx
   2a4a9:	5e                   	pop    %esi
   2a4aa:	5f                   	pop    %edi
   2a4ab:	5d                   	pop    %ebp
   2a4ac:	c3                   	ret    
   2a4ad:	66 90                	xchg   %ax,%ax
   2a4af:	90                   	nop

0002a4b0 <set_first_slash>:
   2a4b0:	55                   	push   %ebp
   2a4b1:	89 e5                	mov    %esp,%ebp
   2a4b3:	53                   	push   %ebx
   2a4b4:	8b 45 08             	mov    0x8(%ebp),%eax
   2a4b7:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   2a4ba:	8b 55 10             	mov    0x10(%ebp),%edx
   2a4bd:	8b 18                	mov    (%eax),%ebx
   2a4bf:	89 19                	mov    %ebx,(%ecx)
   2a4c1:	8b 58 04             	mov    0x4(%eax),%ebx
   2a4c4:	89 59 04             	mov    %ebx,0x4(%ecx)
   2a4c7:	8b 58 08             	mov    0x8(%eax),%ebx
   2a4ca:	89 59 08             	mov    %ebx,0x8(%ecx)
   2a4cd:	8b 08                	mov    (%eax),%ecx
   2a4cf:	89 0a                	mov    %ecx,(%edx)
   2a4d1:	8b 48 04             	mov    0x4(%eax),%ecx
   2a4d4:	89 4a 04             	mov    %ecx,0x4(%edx)
   2a4d7:	8b 40 08             	mov    0x8(%eax),%eax
   2a4da:	89 42 08             	mov    %eax,0x8(%edx)
   2a4dd:	5b                   	pop    %ebx
   2a4de:	5d                   	pop    %ebp
   2a4df:	c3                   	ret    

0002a4e0 <save_component>:
   2a4e0:	55                   	push   %ebp
   2a4e1:	89 e5                	mov    %esp,%ebp
   2a4e3:	8b 55 08             	mov    0x8(%ebp),%edx
   2a4e6:	8b 45 10             	mov    0x10(%ebp),%eax
   2a4e9:	8b 0a                	mov    (%edx),%ecx
   2a4eb:	89 08                	mov    %ecx,(%eax)
   2a4ed:	8b 4a 04             	mov    0x4(%edx),%ecx
   2a4f0:	89 48 04             	mov    %ecx,0x4(%eax)
   2a4f3:	8b 52 08             	mov    0x8(%edx),%edx
   2a4f6:	89 50 08             	mov    %edx,0x8(%eax)
   2a4f9:	5d                   	pop    %ebp
   2a4fa:	c3                   	ret    
   2a4fb:	90                   	nop
   2a4fc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0002a500 <terminate_slash>:
   2a500:	55                   	push   %ebp
   2a501:	89 e5                	mov    %esp,%ebp
   2a503:	8b 45 0c             	mov    0xc(%ebp),%eax
   2a506:	8b 40 08             	mov    0x8(%eax),%eax
   2a509:	80 78 01 00          	cmpb   $0x0,0x1(%eax)
   2a50d:	74 04                	je     2a513 <terminate_slash+0x13>
   2a50f:	c6 40 01 00          	movb   $0x0,0x1(%eax)
   2a513:	5d                   	pop    %ebp
   2a514:	c3                   	ret    
   2a515:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2a519:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002a520 <remove_trailing_slash>:
   2a520:	55                   	push   %ebp
   2a521:	89 e5                	mov    %esp,%ebp
   2a523:	8b 45 08             	mov    0x8(%ebp),%eax
   2a526:	8b 40 04             	mov    0x4(%eax),%eax
   2a529:	c6 40 ff 00          	movb   $0x0,-0x1(%eax)
   2a52d:	5d                   	pop    %ebp
   2a52e:	c3                   	ret    
   2a52f:	90                   	nop

0002a530 <shift_slash>:
   2a530:	55                   	push   %ebp
   2a531:	89 e5                	mov    %esp,%ebp
   2a533:	53                   	push   %ebx
   2a534:	8b 45 08             	mov    0x8(%ebp),%eax
   2a537:	8b 58 04             	mov    0x4(%eax),%ebx
   2a53a:	8b 48 08             	mov    0x8(%eax),%ecx
   2a53d:	31 c0                	xor    %eax,%eax
   2a53f:	90                   	nop
   2a540:	8a 54 01 01          	mov    0x1(%ecx,%eax,1),%dl
   2a544:	88 14 03             	mov    %dl,(%ebx,%eax,1)
   2a547:	40                   	inc    %eax
   2a548:	84 d2                	test   %dl,%dl
   2a54a:	75 f4                	jne    2a540 <shift_slash+0x10>
   2a54c:	5b                   	pop    %ebx
   2a54d:	5d                   	pop    %ebp
   2a54e:	c3                   	ret    
   2a54f:	90                   	nop

0002a550 <shift_dot>:
   2a550:	55                   	push   %ebp
   2a551:	89 e5                	mov    %esp,%ebp
   2a553:	53                   	push   %ebx
   2a554:	8b 45 08             	mov    0x8(%ebp),%eax
   2a557:	8b 58 04             	mov    0x4(%eax),%ebx
   2a55a:	8b 48 08             	mov    0x8(%eax),%ecx
   2a55d:	31 c0                	xor    %eax,%eax
   2a55f:	90                   	nop
   2a560:	8a 54 01 01          	mov    0x1(%ecx,%eax,1),%dl
   2a564:	88 14 03             	mov    %dl,(%ebx,%eax,1)
   2a567:	40                   	inc    %eax
   2a568:	84 d2                	test   %dl,%dl
   2a56a:	75 f4                	jne    2a560 <shift_dot+0x10>
   2a56c:	5b                   	pop    %ebx
   2a56d:	5d                   	pop    %ebp
   2a56e:	c3                   	ret    
   2a56f:	90                   	nop

0002a570 <shift_dotdot>:
   2a570:	55                   	push   %ebp
   2a571:	89 e5                	mov    %esp,%ebp
   2a573:	53                   	push   %ebx
   2a574:	8b 45 10             	mov    0x10(%ebp),%eax
   2a577:	8b 58 04             	mov    0x4(%eax),%ebx
   2a57a:	8b 45 08             	mov    0x8(%ebp),%eax
   2a57d:	8b 48 08             	mov    0x8(%eax),%ecx
   2a580:	31 c0                	xor    %eax,%eax
   2a582:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2a588:	8a 54 01 01          	mov    0x1(%ecx,%eax,1),%dl
   2a58c:	88 14 03             	mov    %dl,(%ebx,%eax,1)
   2a58f:	40                   	inc    %eax
   2a590:	84 d2                	test   %dl,%dl
   2a592:	75 f4                	jne    2a588 <shift_dotdot+0x18>
   2a594:	5b                   	pop    %ebx
   2a595:	5d                   	pop    %ebp
   2a596:	c3                   	ret    
   2a597:	89 f6                	mov    %esi,%esi
   2a599:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002a5a0 <canonify>:
   2a5a0:	55                   	push   %ebp
   2a5a1:	89 e5                	mov    %esp,%ebp
   2a5a3:	57                   	push   %edi
   2a5a4:	56                   	push   %esi
   2a5a5:	53                   	push   %ebx
   2a5a6:	83 ec 4c             	sub    $0x4c,%esp
   2a5a9:	8b 45 08             	mov    0x8(%ebp),%eax
   2a5ac:	80 38 2f             	cmpb   $0x2f,(%eax)
   2a5af:	0f 85 48 01 00 00    	jne    2a6fd <canonify+0x15d>
   2a5b5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
   2a5b8:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2a5bb:	89 45 c8             	mov    %eax,-0x38(%ebp)
   2a5be:	89 45 cc             	mov    %eax,-0x34(%ebp)
   2a5c1:	89 45 e0             	mov    %eax,-0x20(%ebp)
   2a5c4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   2a5c7:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)
   2a5ce:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)
   2a5d5:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)
   2a5dc:	b8 01 00 00 00       	mov    $0x1,%eax
   2a5e1:	31 f6                	xor    %esi,%esi
   2a5e3:	8d 5d dc             	lea    -0x24(%ebp),%ebx
   2a5e6:	66 90                	xchg   %ax,%ax
   2a5e8:	8d 14 76             	lea    (%esi,%esi,2),%edx
   2a5eb:	8d 14 50             	lea    (%eax,%edx,2),%edx
   2a5ee:	8b 14 d5 04 ec 02 00 	mov    0x2ec04(,%edx,8),%edx
   2a5f5:	85 d2                	test   %edx,%edx
   2a5f7:	74 16                	je     2a60f <canonify+0x6f>
   2a5f9:	8d 45 d0             	lea    -0x30(%ebp),%eax
   2a5fc:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   2a600:	89 44 24 04          	mov    %eax,0x4(%esp)
   2a604:	8d 45 c4             	lea    -0x3c(%ebp),%eax
   2a607:	89 04 24             	mov    %eax,(%esp)
   2a60a:	ff d2                	call   *%edx
   2a60c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
   2a60f:	8d 14 76             	lea    (%esi,%esi,2),%edx
   2a612:	8b 4d cc             	mov    -0x34(%ebp),%ecx
   2a615:	8d 04 50             	lea    (%eax,%edx,2),%eax
   2a618:	8b 34 c5 00 ec 02 00 	mov    0x2ec00(,%eax,8),%esi
   2a61f:	8a 41 01             	mov    0x1(%ecx),%al
   2a622:	84 c0                	test   %al,%al
   2a624:	74 72                	je     2a698 <canonify+0xf8>
   2a626:	3c 2f                	cmp    $0x2f,%al
   2a628:	0f 84 b2 00 00 00    	je     2a6e0 <canonify+0x140>
   2a62e:	3c 2e                	cmp    $0x2e,%al
   2a630:	74 76                	je     2a6a8 <canonify+0x108>
   2a632:	8d 79 01             	lea    0x1(%ecx),%edi
   2a635:	b8 01 00 00 00       	mov    $0x1,%eax
   2a63a:	eb 08                	jmp    2a644 <canonify+0xa4>
   2a63c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2a640:	84 d2                	test   %dl,%dl
   2a642:	74 09                	je     2a64d <canonify+0xad>
   2a644:	40                   	inc    %eax
   2a645:	8a 14 01             	mov    (%ecx,%eax,1),%dl
   2a648:	80 fa 2f             	cmp    $0x2f,%dl
   2a64b:	75 f3                	jne    2a640 <canonify+0xa0>
   2a64d:	8d 4c 01 ff          	lea    -0x1(%ecx,%eax,1),%ecx
   2a651:	b8 04 00 00 00       	mov    $0x4,%eax
   2a656:	8d 56 fc             	lea    -0x4(%esi),%edx
   2a659:	89 45 c4             	mov    %eax,-0x3c(%ebp)
   2a65c:	89 7d c8             	mov    %edi,-0x38(%ebp)
   2a65f:	89 4d cc             	mov    %ecx,-0x34(%ebp)
   2a662:	83 fa 02             	cmp    $0x2,%edx
   2a665:	77 81                	ja     2a5e8 <canonify+0x48>
   2a667:	83 fe 05             	cmp    $0x5,%esi
   2a66a:	0f 84 97 00 00 00    	je     2a707 <canonify+0x167>
   2a670:	83 fe 06             	cmp    $0x6,%esi
   2a673:	0f 84 84 00 00 00    	je     2a6fd <canonify+0x15d>
   2a679:	8b 55 0c             	mov    0xc(%ebp),%edx
   2a67c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   2a67f:	85 d2                	test   %edx,%edx
   2a681:	74 0b                	je     2a68e <canonify+0xee>
   2a683:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   2a686:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   2a689:	29 c2                	sub    %eax,%edx
   2a68b:	42                   	inc    %edx
   2a68c:	89 11                	mov    %edx,(%ecx)
   2a68e:	83 c4 4c             	add    $0x4c,%esp
   2a691:	5b                   	pop    %ebx
   2a692:	5e                   	pop    %esi
   2a693:	5f                   	pop    %edi
   2a694:	5d                   	pop    %ebp
   2a695:	c3                   	ret    
   2a696:	66 90                	xchg   %ax,%ax
   2a698:	41                   	inc    %ecx
   2a699:	b8 05 00 00 00       	mov    $0x5,%eax
   2a69e:	89 cf                	mov    %ecx,%edi
   2a6a0:	eb b4                	jmp    2a656 <canonify+0xb6>
   2a6a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2a6a8:	8a 41 02             	mov    0x2(%ecx),%al
   2a6ab:	3c 2f                	cmp    $0x2f,%al
   2a6ad:	74 41                	je     2a6f0 <canonify+0x150>
   2a6af:	84 c0                	test   %al,%al
   2a6b1:	74 3d                	je     2a6f0 <canonify+0x150>
   2a6b3:	3c 2e                	cmp    $0x2e,%al
   2a6b5:	0f 85 77 ff ff ff    	jne    2a632 <canonify+0x92>
   2a6bb:	8a 41 03             	mov    0x3(%ecx),%al
   2a6be:	3c 2f                	cmp    $0x2f,%al
   2a6c0:	74 08                	je     2a6ca <canonify+0x12a>
   2a6c2:	84 c0                	test   %al,%al
   2a6c4:	0f 85 68 ff ff ff    	jne    2a632 <canonify+0x92>
   2a6ca:	8d 79 01             	lea    0x1(%ecx),%edi
   2a6cd:	b8 03 00 00 00       	mov    $0x3,%eax
   2a6d2:	83 c1 02             	add    $0x2,%ecx
   2a6d5:	e9 7c ff ff ff       	jmp    2a656 <canonify+0xb6>
   2a6da:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2a6e0:	41                   	inc    %ecx
   2a6e1:	b8 01 00 00 00       	mov    $0x1,%eax
   2a6e6:	89 cf                	mov    %ecx,%edi
   2a6e8:	e9 69 ff ff ff       	jmp    2a656 <canonify+0xb6>
   2a6ed:	8d 76 00             	lea    0x0(%esi),%esi
   2a6f0:	41                   	inc    %ecx
   2a6f1:	b8 02 00 00 00       	mov    $0x2,%eax
   2a6f6:	89 cf                	mov    %ecx,%edi
   2a6f8:	e9 59 ff ff ff       	jmp    2a656 <canonify+0xb6>
   2a6fd:	83 c4 4c             	add    $0x4c,%esp
   2a700:	31 c0                	xor    %eax,%eax
   2a702:	5b                   	pop    %ebx
   2a703:	5e                   	pop    %esi
   2a704:	5f                   	pop    %edi
   2a705:	5d                   	pop    %ebp
   2a706:	c3                   	ret    
   2a707:	8b 45 d0             	mov    -0x30(%ebp),%eax
   2a70a:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   2a70d:	8b 55 d8             	mov    -0x28(%ebp),%edx
   2a710:	89 45 c4             	mov    %eax,-0x3c(%ebp)
   2a713:	89 4d c8             	mov    %ecx,-0x38(%ebp)
   2a716:	89 55 cc             	mov    %edx,-0x34(%ebp)
   2a719:	89 45 dc             	mov    %eax,-0x24(%ebp)
   2a71c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
   2a71f:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   2a722:	31 f6                	xor    %esi,%esi
   2a724:	e9 bf fe ff ff       	jmp    2a5e8 <canonify+0x48>
   2a729:	66 90                	xchg   %ax,%ax
   2a72b:	66 90                	xchg   %ax,%ax
   2a72d:	66 90                	xchg   %ax,%ax
   2a72f:	90                   	nop

0002a730 <stack_size_get>:
   2a730:	a1 20 07 03 00       	mov    0x30720,%eax
   2a735:	85 c0                	test   %eax,%eax
   2a737:	74 07                	je     2a740 <stack_size_get+0x10>
   2a739:	c3                   	ret    
   2a73a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2a740:	55                   	push   %ebp
   2a741:	89 e5                	mov    %esp,%ebp
   2a743:	83 ec 18             	sub    $0x18,%esp
   2a746:	c7 44 24 04 20 07 03 	movl   $0x30720,0x4(%esp)
   2a74d:	00 
   2a74e:	c7 04 24 c0 ec 02 00 	movl   $0x2ecc0,(%esp)
   2a755:	e8 76 0d 00 00       	call   2b4d0 <sysinfo_get_value>
   2a75a:	a1 20 07 03 00       	mov    0x30720,%eax
   2a75f:	c9                   	leave  
   2a760:	c3                   	ret    
   2a761:	66 90                	xchg   %ax,%ax
   2a763:	66 90                	xchg   %ax,%ax
   2a765:	66 90                	xchg   %ax,%ax
   2a767:	66 90                	xchg   %ax,%ax
   2a769:	66 90                	xchg   %ax,%ax
   2a76b:	66 90                	xchg   %ax,%ax
   2a76d:	66 90                	xchg   %ax,%ax
   2a76f:	90                   	nop

0002a770 <stacktrace_read_uintptr>:
   2a770:	55                   	push   %ebp
   2a771:	89 e5                	mov    %esp,%ebp
   2a773:	8b 45 0c             	mov    0xc(%ebp),%eax
   2a776:	8b 10                	mov    (%eax),%edx
   2a778:	8b 45 10             	mov    0x10(%ebp),%eax
   2a77b:	89 10                	mov    %edx,(%eax)
   2a77d:	31 c0                	xor    %eax,%eax
   2a77f:	5d                   	pop    %ebp
   2a780:	c3                   	ret    
   2a781:	eb 0d                	jmp    2a790 <stacktrace_print_fp_pc>
   2a783:	90                   	nop
   2a784:	90                   	nop
   2a785:	90                   	nop
   2a786:	90                   	nop
   2a787:	90                   	nop
   2a788:	90                   	nop
   2a789:	90                   	nop
   2a78a:	90                   	nop
   2a78b:	90                   	nop
   2a78c:	90                   	nop
   2a78d:	90                   	nop
   2a78e:	90                   	nop
   2a78f:	90                   	nop

0002a790 <stacktrace_print_fp_pc>:
   2a790:	55                   	push   %ebp
   2a791:	89 e5                	mov    %esp,%ebp
   2a793:	57                   	push   %edi
   2a794:	56                   	push   %esi
   2a795:	53                   	push   %ebx
   2a796:	83 ec 2c             	sub    $0x2c,%esp
   2a799:	8d 75 e0             	lea    -0x20(%ebp),%esi
   2a79c:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2a79f:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
   2a7a6:	c7 45 e4 70 a7 02 00 	movl   $0x2a770,-0x1c(%ebp)
   2a7ad:	8d 7d 0c             	lea    0xc(%ebp),%edi
   2a7b0:	eb 43                	jmp    2a7f5 <stacktrace_print_fp_pc+0x65>
   2a7b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2a7b8:	8b 45 0c             	mov    0xc(%ebp),%eax
   2a7bb:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   2a7bf:	89 44 24 08          	mov    %eax,0x8(%esp)
   2a7c3:	c7 04 24 d3 ec 02 00 	movl   $0x2ecd3,(%esp)
   2a7ca:	e8 81 0a ff ff       	call   1b250 <printf>
   2a7cf:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   2a7d3:	89 7c 24 08          	mov    %edi,0x8(%esp)
   2a7d7:	89 34 24             	mov    %esi,(%esp)
   2a7da:	e8 71 02 00 00       	call   2aa50 <stacktrace_ra_get>
   2a7df:	8d 45 dc             	lea    -0x24(%ebp),%eax
   2a7e2:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   2a7e6:	89 44 24 08          	mov    %eax,0x8(%esp)
   2a7ea:	89 34 24             	mov    %esi,(%esp)
   2a7ed:	e8 3e 02 00 00       	call   2aa30 <stacktrace_fp_prev>
   2a7f2:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   2a7f5:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   2a7f9:	89 34 24             	mov    %esi,(%esp)
   2a7fc:	e8 1f 02 00 00       	call   2aa20 <stacktrace_fp_valid>
   2a801:	84 c0                	test   %al,%al
   2a803:	75 b3                	jne    2a7b8 <stacktrace_print_fp_pc+0x28>
   2a805:	83 c4 2c             	add    $0x2c,%esp
   2a808:	5b                   	pop    %ebx
   2a809:	5e                   	pop    %esi
   2a80a:	5f                   	pop    %edi
   2a80b:	5d                   	pop    %ebp
   2a80c:	c3                   	ret    
   2a80d:	8d 76 00             	lea    0x0(%esi),%esi

0002a810 <stacktrace_print>:
   2a810:	55                   	push   %ebp
   2a811:	89 e5                	mov    %esp,%ebp
   2a813:	57                   	push   %edi
   2a814:	56                   	push   %esi
   2a815:	53                   	push   %ebx
   2a816:	83 ec 2c             	sub    $0x2c,%esp
   2a819:	8d 7d d8             	lea    -0x28(%ebp),%edi
   2a81c:	e8 4b 02 00 00       	call   2aa6c <stacktrace_prepare>
   2a821:	e8 4a 02 00 00       	call   2aa70 <stacktrace_pc_get>
   2a826:	89 c6                	mov    %eax,%esi
   2a828:	e8 40 02 00 00       	call   2aa6d <stacktrace_fp_get>
   2a82d:	89 75 d8             	mov    %esi,-0x28(%ebp)
   2a830:	89 c3                	mov    %eax,%ebx
   2a832:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
   2a839:	c7 45 e4 70 a7 02 00 	movl   $0x2a770,-0x1c(%ebp)
   2a840:	8d 75 e0             	lea    -0x20(%ebp),%esi
   2a843:	eb 40                	jmp    2a885 <stacktrace_print+0x75>
   2a845:	8d 76 00             	lea    0x0(%esi),%esi
   2a848:	8b 45 d8             	mov    -0x28(%ebp),%eax
   2a84b:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   2a84f:	89 44 24 08          	mov    %eax,0x8(%esp)
   2a853:	c7 04 24 d3 ec 02 00 	movl   $0x2ecd3,(%esp)
   2a85a:	e8 f1 09 ff ff       	call   1b250 <printf>
   2a85f:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   2a863:	89 7c 24 08          	mov    %edi,0x8(%esp)
   2a867:	89 34 24             	mov    %esi,(%esp)
   2a86a:	e8 e1 01 00 00       	call   2aa50 <stacktrace_ra_get>
   2a86f:	8d 45 dc             	lea    -0x24(%ebp),%eax
   2a872:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   2a876:	89 44 24 08          	mov    %eax,0x8(%esp)
   2a87a:	89 34 24             	mov    %esi,(%esp)
   2a87d:	e8 ae 01 00 00       	call   2aa30 <stacktrace_fp_prev>
   2a882:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   2a885:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   2a889:	89 34 24             	mov    %esi,(%esp)
   2a88c:	e8 8f 01 00 00       	call   2aa20 <stacktrace_fp_valid>
   2a891:	84 c0                	test   %al,%al
   2a893:	75 b3                	jne    2a848 <stacktrace_print+0x38>
   2a895:	c7 04 24 dd ec 02 00 	movl   $0x2ecdd,(%esp)
   2a89c:	e8 af 09 ff ff       	call   1b250 <printf>
   2a8a1:	83 c4 2c             	add    $0x2c,%esp
   2a8a4:	5b                   	pop    %ebx
   2a8a5:	5e                   	pop    %esi
   2a8a6:	5f                   	pop    %edi
   2a8a7:	5d                   	pop    %ebp
   2a8a8:	c3                   	ret    
   2a8a9:	66 90                	xchg   %ax,%ax
   2a8ab:	66 90                	xchg   %ax,%ax
   2a8ad:	66 90                	xchg   %ax,%ax
   2a8af:	90                   	nop

0002a8b0 <assert_abort>:
   2a8b0:	55                   	push   %ebp
   2a8b1:	89 e5                	mov    %esp,%ebp
   2a8b3:	57                   	push   %edi
   2a8b4:	56                   	push   %esi
   2a8b5:	53                   	push   %ebx
   2a8b6:	83 ec 1c             	sub    $0x1c,%esp
   2a8b9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2a8bc:	8b 75 0c             	mov    0xc(%ebp),%esi
   2a8bf:	8b 7d 10             	mov    0x10(%ebp),%edi
   2a8c2:	89 74 24 08          	mov    %esi,0x8(%esp)
   2a8c6:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   2a8ca:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   2a8ce:	c7 04 24 f8 ec 02 00 	movl   $0x2ecf8,(%esp)
   2a8d5:	e8 96 0b ff ff       	call   1b470 <klog_printf>
   2a8da:	b8 01 00 00 00       	mov    $0x1,%eax
   2a8df:	f0 0f c1 05 24 07 03 	lock xadd %eax,0x30724
   2a8e6:	00 
   2a8e7:	85 c0                	test   %eax,%eax
   2a8e9:	75 1d                	jne    2a908 <assert_abort+0x58>
   2a8eb:	89 7c 24 0c          	mov    %edi,0xc(%esp)
   2a8ef:	89 74 24 08          	mov    %esi,0x8(%esp)
   2a8f3:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   2a8f7:	c7 04 24 f8 ec 02 00 	movl   $0x2ecf8,(%esp)
   2a8fe:	e8 4d 09 ff ff       	call   1b250 <printf>
   2a903:	e8 08 ff ff ff       	call   2a810 <stacktrace_print>
   2a908:	e8 83 58 fe ff       	call   10190 <abort>
   2a90d:	66 90                	xchg   %ax,%ax
   2a90f:	90                   	nop

0002a910 <__syscall_slow>:
   2a910:	53                   	push   %ebx
   2a911:	56                   	push   %esi
   2a912:	57                   	push   %edi
   2a913:	55                   	push   %ebp
   2a914:	8b 54 24 14          	mov    0x14(%esp),%edx
   2a918:	8b 4c 24 18          	mov    0x18(%esp),%ecx
   2a91c:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2a920:	8b 74 24 20          	mov    0x20(%esp),%esi
   2a924:	8b 7c 24 24          	mov    0x24(%esp),%edi
   2a928:	8b 6c 24 28          	mov    0x28(%esp),%ebp
   2a92c:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   2a930:	cd 30                	int    $0x30
   2a932:	5d                   	pop    %ebp
   2a933:	5f                   	pop    %edi
   2a934:	5e                   	pop    %esi
   2a935:	5b                   	pop    %ebx
   2a936:	c3                   	ret    

0002a937 <__syscall_fast>:
   2a937:	53                   	push   %ebx
   2a938:	56                   	push   %esi
   2a939:	57                   	push   %edi
   2a93a:	55                   	push   %ebp
   2a93b:	89 e5                	mov    %esp,%ebp
   2a93d:	8d 3d 59 a9 02 00    	lea    0x2a959,%edi
   2a943:	8b 54 24 14          	mov    0x14(%esp),%edx
   2a947:	8b 4c 24 18          	mov    0x18(%esp),%ecx
   2a94b:	8b 5c 24 1c          	mov    0x1c(%esp),%ebx
   2a94f:	8b 74 24 20          	mov    0x20(%esp),%esi
   2a953:	8b 44 24 2c          	mov    0x2c(%esp),%eax
   2a957:	0f 34                	sysenter 

0002a959 <ra>:
   2a959:	66 8c c9             	mov    %cs,%cx
   2a95c:	66 83 c1 08          	add    $0x8,%cx
   2a960:	8e d9                	mov    %ecx,%ds
   2a962:	8e c1                	mov    %ecx,%es
   2a964:	8e e1                	mov    %ecx,%fs
   2a966:	5d                   	pop    %ebp
   2a967:	5f                   	pop    %edi
   2a968:	5e                   	pop    %esi
   2a969:	5b                   	pop    %ebx
   2a96a:	c3                   	ret    
   2a96b:	90                   	nop

0002a96c <context_save>:
   2a96c:	8b 04 24             	mov    (%esp),%eax
   2a96f:	8b 54 24 04          	mov    0x4(%esp),%edx
   2a973:	89 22                	mov    %esp,(%edx)
   2a975:	89 42 04             	mov    %eax,0x4(%edx)
   2a978:	89 5a 08             	mov    %ebx,0x8(%edx)
   2a97b:	89 72 0c             	mov    %esi,0xc(%edx)
   2a97e:	89 7a 10             	mov    %edi,0x10(%edx)
   2a981:	89 6a 14             	mov    %ebp,0x14(%edx)
   2a984:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax
   2a98a:	89 42 18             	mov    %eax,0x18(%edx)
   2a98d:	31 c0                	xor    %eax,%eax
   2a98f:	40                   	inc    %eax
   2a990:	c3                   	ret    

0002a991 <context_restore>:
   2a991:	8b 44 24 04          	mov    0x4(%esp),%eax
   2a995:	8b 20                	mov    (%eax),%esp
   2a997:	8b 50 04             	mov    0x4(%eax),%edx
   2a99a:	8b 58 08             	mov    0x8(%eax),%ebx
   2a99d:	8b 70 0c             	mov    0xc(%eax),%esi
   2a9a0:	8b 78 10             	mov    0x10(%eax),%edi
   2a9a3:	8b 68 14             	mov    0x14(%eax),%ebp
   2a9a6:	89 14 24             	mov    %edx,(%esp)
   2a9a9:	52                   	push   %edx
   2a9aa:	8b 50 18             	mov    0x18(%eax),%edx
   2a9ad:	b8 01 00 00 00       	mov    $0x1,%eax
   2a9b2:	cd 30                	int    $0x30
   2a9b4:	5a                   	pop    %edx
   2a9b5:	31 c0                	xor    %eax,%eax
   2a9b7:	c3                   	ret    
   2a9b8:	66 90                	xchg   %ax,%ax
   2a9ba:	66 90                	xchg   %ax,%ax
   2a9bc:	66 90                	xchg   %ax,%ax
   2a9be:	66 90                	xchg   %ax,%ax

0002a9c0 <__alloc_tls>:
   2a9c0:	55                   	push   %ebp
   2a9c1:	89 e5                	mov    %esp,%ebp
   2a9c3:	5d                   	pop    %ebp
   2a9c4:	e9 37 dc fe ff       	jmp    18600 <tls_alloc_variant_2>
   2a9c9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0002a9d0 <__free_tls_arch>:
   2a9d0:	55                   	push   %ebp
   2a9d1:	89 e5                	mov    %esp,%ebp
   2a9d3:	5d                   	pop    %ebp
   2a9d4:	e9 77 dc fe ff       	jmp    18650 <tls_free_variant_2>
   2a9d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0002a9e0 <___tls_get_addr>:
   2a9e0:	55                   	push   %ebp
   2a9e1:	b9 d3 06 03 00       	mov    $0x306d3,%ecx
   2a9e6:	89 e5                	mov    %esp,%ebp
   2a9e8:	81 e9 88 06 03 00    	sub    $0x30688,%ecx
   2a9ee:	53                   	push   %ebx
   2a9ef:	bb 04 00 00 00       	mov    $0x4,%ebx
   2a9f4:	f7 db                	neg    %ebx
   2a9f6:	81 c1 04 00 00 00    	add    $0x4,%ecx
   2a9fc:	21 d9                	and    %ebx,%ecx
   2a9fe:	5b                   	pop    %ebx
   2a9ff:	65 8b 15 00 00 00 00 	mov    %gs:0x0,%edx
   2aa06:	29 ca                	sub    %ecx,%edx
   2aa08:	8b 48 04             	mov    0x4(%eax),%ecx
   2aa0b:	01 ca                	add    %ecx,%edx
   2aa0d:	5d                   	pop    %ebp
   2aa0e:	89 d0                	mov    %edx,%eax
   2aa10:	c3                   	ret    
   2aa11:	66 90                	xchg   %ax,%ax
   2aa13:	66 90                	xchg   %ax,%ax
   2aa15:	66 90                	xchg   %ax,%ax
   2aa17:	66 90                	xchg   %ax,%ax
   2aa19:	66 90                	xchg   %ax,%ax
   2aa1b:	66 90                	xchg   %ax,%ax
   2aa1d:	66 90                	xchg   %ax,%ax
   2aa1f:	90                   	nop

0002aa20 <stacktrace_fp_valid>:
   2aa20:	55                   	push   %ebp
   2aa21:	89 e5                	mov    %esp,%ebp
   2aa23:	8b 45 0c             	mov    0xc(%ebp),%eax
   2aa26:	5d                   	pop    %ebp
   2aa27:	85 c0                	test   %eax,%eax
   2aa29:	0f 9f c0             	setg   %al
   2aa2c:	c3                   	ret    
   2aa2d:	8d 76 00             	lea    0x0(%esi),%esi

0002aa30 <stacktrace_fp_prev>:
   2aa30:	55                   	push   %ebp
   2aa31:	89 e5                	mov    %esp,%ebp
   2aa33:	8b 45 08             	mov    0x8(%ebp),%eax
   2aa36:	8b 10                	mov    (%eax),%edx
   2aa38:	89 55 08             	mov    %edx,0x8(%ebp)
   2aa3b:	5d                   	pop    %ebp
   2aa3c:	8b 40 04             	mov    0x4(%eax),%eax
   2aa3f:	ff e0                	jmp    *%eax
   2aa41:	eb 0d                	jmp    2aa50 <stacktrace_ra_get>
   2aa43:	90                   	nop
   2aa44:	90                   	nop
   2aa45:	90                   	nop
   2aa46:	90                   	nop
   2aa47:	90                   	nop
   2aa48:	90                   	nop
   2aa49:	90                   	nop
   2aa4a:	90                   	nop
   2aa4b:	90                   	nop
   2aa4c:	90                   	nop
   2aa4d:	90                   	nop
   2aa4e:	90                   	nop
   2aa4f:	90                   	nop

0002aa50 <stacktrace_ra_get>:
   2aa50:	55                   	push   %ebp
   2aa51:	89 e5                	mov    %esp,%ebp
   2aa53:	8b 55 0c             	mov    0xc(%ebp),%edx
   2aa56:	8b 45 08             	mov    0x8(%ebp),%eax
   2aa59:	83 c2 04             	add    $0x4,%edx
   2aa5c:	89 55 0c             	mov    %edx,0xc(%ebp)
   2aa5f:	8b 10                	mov    (%eax),%edx
   2aa61:	89 55 08             	mov    %edx,0x8(%ebp)
   2aa64:	5d                   	pop    %ebp
   2aa65:	8b 40 04             	mov    0x4(%eax),%eax
   2aa68:	ff e0                	jmp    *%eax
   2aa6a:	66 90                	xchg   %ax,%ax

0002aa6c <stacktrace_prepare>:
   2aa6c:	c3                   	ret    

0002aa6d <stacktrace_fp_get>:
   2aa6d:	89 e8                	mov    %ebp,%eax
   2aa6f:	c3                   	ret    

0002aa70 <stacktrace_pc_get>:
   2aa70:	8b 04 24             	mov    (%esp),%eax
   2aa73:	c3                   	ret    
   2aa74:	66 90                	xchg   %ax,%ax
   2aa76:	66 90                	xchg   %ax,%ax
   2aa78:	66 90                	xchg   %ax,%ax
   2aa7a:	66 90                	xchg   %ax,%ax
   2aa7c:	66 90                	xchg   %ax,%ax
   2aa7e:	66 90                	xchg   %ax,%ax

0002aa80 <device_assign_devno>:
   2aa80:	55                   	push   %ebp
   2aa81:	89 e5                	mov    %esp,%ebp
   2aa83:	83 ec 28             	sub    $0x28,%esp
   2aa86:	c7 44 24 18 22 00 00 	movl   $0x22,0x18(%esp)
   2aa8d:	00 
   2aa8e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2aa95:	00 
   2aa96:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2aa9d:	00 
   2aa9e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2aaa5:	00 
   2aaa6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2aaad:	00 
   2aaae:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2aab5:	00 
   2aab6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
   2aabd:	ff 15 54 06 03 00    	call   *0x30654
   2aac3:	c9                   	leave  
   2aac4:	c3                   	ret    
   2aac5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2aac9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002aad0 <physmem_map>:
   2aad0:	55                   	push   %ebp
   2aad1:	89 e5                	mov    %esp,%ebp
   2aad3:	83 ec 28             	sub    $0x28,%esp
   2aad6:	8b 45 14             	mov    0x14(%ebp),%eax
   2aad9:	c7 44 24 18 23 00 00 	movl   $0x23,0x18(%esp)
   2aae0:	00 
   2aae1:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2aae5:	8b 45 10             	mov    0x10(%ebp),%eax
   2aae8:	89 44 24 08          	mov    %eax,0x8(%esp)
   2aaec:	8b 45 0c             	mov    0xc(%ebp),%eax
   2aaef:	89 44 24 04          	mov    %eax,0x4(%esp)
   2aaf3:	8b 45 08             	mov    0x8(%ebp),%eax
   2aaf6:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2aafd:	00 
   2aafe:	c7 44 24 10 94 10 00 	movl   $0x1094,0x10(%esp)
   2ab05:	00 
   2ab06:	89 04 24             	mov    %eax,(%esp)
   2ab09:	e8 02 fe ff ff       	call   2a910 <__syscall_slow>
   2ab0e:	c9                   	leave  
   2ab0f:	c3                   	ret    

0002ab10 <dmamem_map>:
   2ab10:	55                   	push   %ebp
   2ab11:	89 e5                	mov    %esp,%ebp
   2ab13:	83 ec 28             	sub    $0x28,%esp
   2ab16:	8b 45 14             	mov    0x14(%ebp),%eax
   2ab19:	8b 55 08             	mov    0x8(%ebp),%edx
   2ab1c:	83 e0 fe             	and    $0xfffffffe,%eax
   2ab1f:	89 54 24 10          	mov    %edx,0x10(%esp)
   2ab23:	89 44 24 08          	mov    %eax,0x8(%esp)
   2ab27:	8b 45 10             	mov    0x10(%ebp),%eax
   2ab2a:	8b 55 18             	mov    0x18(%ebp),%edx
   2ab2d:	89 44 24 04          	mov    %eax,0x4(%esp)
   2ab31:	8b 45 0c             	mov    0xc(%ebp),%eax
   2ab34:	c7 44 24 18 25 00 00 	movl   $0x25,0x18(%esp)
   2ab3b:	00 
   2ab3c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2ab43:	00 
   2ab44:	89 54 24 0c          	mov    %edx,0xc(%esp)
   2ab48:	89 04 24             	mov    %eax,(%esp)
   2ab4b:	e8 c0 fd ff ff       	call   2a910 <__syscall_slow>
   2ab50:	c9                   	leave  
   2ab51:	c3                   	ret    
   2ab52:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2ab59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002ab60 <dmamem_map_anonymous>:
   2ab60:	55                   	push   %ebp
   2ab61:	89 e5                	mov    %esp,%ebp
   2ab63:	83 ec 28             	sub    $0x28,%esp
   2ab66:	8b 45 10             	mov    0x10(%ebp),%eax
   2ab69:	8b 55 18             	mov    0x18(%ebp),%edx
   2ab6c:	83 c8 01             	or     $0x1,%eax
   2ab6f:	89 54 24 10          	mov    %edx,0x10(%esp)
   2ab73:	89 44 24 08          	mov    %eax,0x8(%esp)
   2ab77:	8b 45 0c             	mov    0xc(%ebp),%eax
   2ab7a:	8b 55 14             	mov    0x14(%ebp),%edx
   2ab7d:	89 44 24 04          	mov    %eax,0x4(%esp)
   2ab81:	8b 45 08             	mov    0x8(%ebp),%eax
   2ab84:	c7 44 24 18 25 00 00 	movl   $0x25,0x18(%esp)
   2ab8b:	00 
   2ab8c:	c7 44 24 14 94 10 00 	movl   $0x1094,0x14(%esp)
   2ab93:	00 
   2ab94:	89 54 24 0c          	mov    %edx,0xc(%esp)
   2ab98:	89 04 24             	mov    %eax,(%esp)
   2ab9b:	e8 70 fd ff ff       	call   2a910 <__syscall_slow>
   2aba0:	c9                   	leave  
   2aba1:	c3                   	ret    
   2aba2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2aba9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002abb0 <dmamem_unmap>:
   2abb0:	55                   	push   %ebp
   2abb1:	89 e5                	mov    %esp,%ebp
   2abb3:	83 ec 28             	sub    $0x28,%esp
   2abb6:	8b 45 0c             	mov    0xc(%ebp),%eax
   2abb9:	c7 44 24 18 26 00 00 	movl   $0x26,0x18(%esp)
   2abc0:	00 
   2abc1:	89 44 24 04          	mov    %eax,0x4(%esp)
   2abc5:	8b 45 08             	mov    0x8(%ebp),%eax
   2abc8:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2abcf:	00 
   2abd0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2abd7:	00 
   2abd8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2abdf:	00 
   2abe0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2abe7:	00 
   2abe8:	89 04 24             	mov    %eax,(%esp)
   2abeb:	ff 15 54 06 03 00    	call   *0x30654
   2abf1:	c9                   	leave  
   2abf2:	c3                   	ret    
   2abf3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2abf9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002ac00 <dmamem_unmap_anonymous>:
   2ac00:	55                   	push   %ebp
   2ac01:	89 e5                	mov    %esp,%ebp
   2ac03:	83 ec 28             	sub    $0x28,%esp
   2ac06:	8b 45 08             	mov    0x8(%ebp),%eax
   2ac09:	c7 44 24 18 26 00 00 	movl   $0x26,0x18(%esp)
   2ac10:	00 
   2ac11:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2ac18:	00 
   2ac19:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2ac20:	00 
   2ac21:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2ac28:	00 
   2ac29:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   2ac30:	00 
   2ac31:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2ac38:	00 
   2ac39:	89 04 24             	mov    %eax,(%esp)
   2ac3c:	ff 15 54 06 03 00    	call   *0x30654
   2ac42:	c9                   	leave  
   2ac43:	c3                   	ret    
   2ac44:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2ac4a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0002ac50 <pio_enable>:
   2ac50:	55                   	push   %ebp
   2ac51:	89 e5                	mov    %esp,%ebp
   2ac53:	56                   	push   %esi
   2ac54:	53                   	push   %ebx
   2ac55:	83 ec 40             	sub    $0x40,%esp
   2ac58:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2ac5b:	8b 75 10             	mov    0x10(%ebp),%esi
   2ac5e:	81 fb ff ff 00 00    	cmp    $0xffff,%ebx
   2ac64:	77 62                	ja     2acc8 <pio_enable+0x78>
   2ac66:	85 f6                	test   %esi,%esi
   2ac68:	74 02                	je     2ac6c <pio_enable+0x1c>
   2ac6a:	89 1e                	mov    %ebx,(%esi)
   2ac6c:	e8 0f da fe ff       	call   18680 <task_get_id>
   2ac71:	89 5d f0             	mov    %ebx,-0x10(%ebp)
   2ac74:	89 45 e8             	mov    %eax,-0x18(%ebp)
   2ac77:	8b 45 0c             	mov    0xc(%ebp),%eax
   2ac7a:	89 45 f4             	mov    %eax,-0xc(%ebp)
   2ac7d:	8d 45 e8             	lea    -0x18(%ebp),%eax
   2ac80:	89 55 ec             	mov    %edx,-0x14(%ebp)
   2ac83:	c7 44 24 18 27 00 00 	movl   $0x27,0x18(%esp)
   2ac8a:	00 
   2ac8b:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2ac92:	00 
   2ac93:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2ac9a:	00 
   2ac9b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2aca2:	00 
   2aca3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2acaa:	00 
   2acab:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2acb2:	00 
   2acb3:	89 04 24             	mov    %eax,(%esp)
   2acb6:	ff 15 54 06 03 00    	call   *0x30654
   2acbc:	83 c4 40             	add    $0x40,%esp
   2acbf:	5b                   	pop    %ebx
   2acc0:	5e                   	pop    %esi
   2acc1:	5d                   	pop    %ebp
   2acc2:	c3                   	ret    
   2acc3:	90                   	nop
   2acc4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2acc8:	85 f6                	test   %esi,%esi
   2acca:	74 5e                	je     2ad2a <pio_enable+0xda>
   2accc:	89 d8                	mov    %ebx,%eax
   2acce:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   2acd1:	25 00 f0 ff ff       	and    $0xfffff000,%eax
   2acd6:	31 d2                	xor    %edx,%edx
   2acd8:	29 c3                	sub    %eax,%ebx
   2acda:	01 d9                	add    %ebx,%ecx
   2acdc:	74 07                	je     2ace5 <pio_enable+0x95>
   2acde:	8d 51 ff             	lea    -0x1(%ecx),%edx
   2ace1:	c1 ea 0c             	shr    $0xc,%edx
   2ace4:	42                   	inc    %edx
   2ace5:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
   2ace8:	c7 44 24 18 23 00 00 	movl   $0x23,0x18(%esp)
   2acef:	00 
   2acf0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2acf7:	00 
   2acf8:	c7 44 24 10 94 10 00 	movl   $0x1094,0x10(%esp)
   2acff:	00 
   2ad00:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   2ad04:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)
   2ad0b:	00 
   2ad0c:	89 54 24 04          	mov    %edx,0x4(%esp)
   2ad10:	89 04 24             	mov    %eax,(%esp)
   2ad13:	e8 f8 fb ff ff       	call   2a910 <__syscall_slow>
   2ad18:	85 c0                	test   %eax,%eax
   2ad1a:	75 a0                	jne    2acbc <pio_enable+0x6c>
   2ad1c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   2ad1f:	01 d3                	add    %edx,%ebx
   2ad21:	89 1e                	mov    %ebx,(%esi)
   2ad23:	83 c4 40             	add    $0x40,%esp
   2ad26:	5b                   	pop    %ebx
   2ad27:	5e                   	pop    %esi
   2ad28:	5d                   	pop    %ebp
   2ad29:	c3                   	ret    
   2ad2a:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
   2ad2f:	eb 8b                	jmp    2acbc <pio_enable+0x6c>
   2ad31:	eb 0d                	jmp    2ad40 <pio_write_8>
   2ad33:	90                   	nop
   2ad34:	90                   	nop
   2ad35:	90                   	nop
   2ad36:	90                   	nop
   2ad37:	90                   	nop
   2ad38:	90                   	nop
   2ad39:	90                   	nop
   2ad3a:	90                   	nop
   2ad3b:	90                   	nop
   2ad3c:	90                   	nop
   2ad3d:	90                   	nop
   2ad3e:	90                   	nop
   2ad3f:	90                   	nop

0002ad40 <pio_write_8>:
   2ad40:	55                   	push   %ebp
   2ad41:	89 e5                	mov    %esp,%ebp
   2ad43:	57                   	push   %edi
   2ad44:	56                   	push   %esi
   2ad45:	53                   	push   %ebx
   2ad46:	83 ec 1c             	sub    $0x1c,%esp
   2ad49:	8b 75 0c             	mov    0xc(%ebp),%esi
   2ad4c:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2ad4f:	89 f0                	mov    %esi,%eax
   2ad51:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   2ad58:	00 
   2ad59:	25 ff 00 00 00       	and    $0xff,%eax
   2ad5e:	89 1c 24             	mov    %ebx,(%esp)
   2ad61:	89 44 24 04          	mov    %eax,0x4(%esp)
   2ad65:	e8 46 14 00 00       	call   2c1b0 <pio_trace_log>
   2ad6a:	81 fb ff ff 00 00    	cmp    $0xffff,%ebx
   2ad70:	76 0e                	jbe    2ad80 <pio_write_8+0x40>
   2ad72:	89 f0                	mov    %esi,%eax
   2ad74:	88 03                	mov    %al,(%ebx)
   2ad76:	83 c4 1c             	add    $0x1c,%esp
   2ad79:	5b                   	pop    %ebx
   2ad7a:	5e                   	pop    %esi
   2ad7b:	5f                   	pop    %edi
   2ad7c:	5d                   	pop    %ebp
   2ad7d:	c3                   	ret    
   2ad7e:	66 90                	xchg   %ax,%ax
   2ad80:	89 f0                	mov    %esi,%eax
   2ad82:	89 da                	mov    %ebx,%edx
   2ad84:	ee                   	out    %al,(%dx)
   2ad85:	83 c4 1c             	add    $0x1c,%esp
   2ad88:	5b                   	pop    %ebx
   2ad89:	5e                   	pop    %esi
   2ad8a:	5f                   	pop    %edi
   2ad8b:	5d                   	pop    %ebp
   2ad8c:	c3                   	ret    
   2ad8d:	8d 76 00             	lea    0x0(%esi),%esi

0002ad90 <pio_write_16>:
   2ad90:	55                   	push   %ebp
   2ad91:	89 e5                	mov    %esp,%ebp
   2ad93:	57                   	push   %edi
   2ad94:	56                   	push   %esi
   2ad95:	53                   	push   %ebx
   2ad96:	83 ec 1c             	sub    $0x1c,%esp
   2ad99:	8b 75 0c             	mov    0xc(%ebp),%esi
   2ad9c:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2ad9f:	89 f0                	mov    %esi,%eax
   2ada1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   2ada8:	00 
   2ada9:	25 ff ff 00 00       	and    $0xffff,%eax
   2adae:	89 1c 24             	mov    %ebx,(%esp)
   2adb1:	89 44 24 04          	mov    %eax,0x4(%esp)
   2adb5:	e8 f6 13 00 00       	call   2c1b0 <pio_trace_log>
   2adba:	81 fb ff ff 00 00    	cmp    $0xffff,%ebx
   2adc0:	76 0e                	jbe    2add0 <pio_write_16+0x40>
   2adc2:	66 89 33             	mov    %si,(%ebx)
   2adc5:	83 c4 1c             	add    $0x1c,%esp
   2adc8:	5b                   	pop    %ebx
   2adc9:	5e                   	pop    %esi
   2adca:	5f                   	pop    %edi
   2adcb:	5d                   	pop    %ebp
   2adcc:	c3                   	ret    
   2adcd:	8d 76 00             	lea    0x0(%esi),%esi
   2add0:	89 f0                	mov    %esi,%eax
   2add2:	89 da                	mov    %ebx,%edx
   2add4:	66 ef                	out    %ax,(%dx)
   2add6:	83 c4 1c             	add    $0x1c,%esp
   2add9:	5b                   	pop    %ebx
   2adda:	5e                   	pop    %esi
   2addb:	5f                   	pop    %edi
   2addc:	5d                   	pop    %ebp
   2addd:	c3                   	ret    
   2adde:	66 90                	xchg   %ax,%ax

0002ade0 <pio_write_32>:
   2ade0:	55                   	push   %ebp
   2ade1:	89 e5                	mov    %esp,%ebp
   2ade3:	56                   	push   %esi
   2ade4:	53                   	push   %ebx
   2ade5:	83 ec 10             	sub    $0x10,%esp
   2ade8:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2adeb:	8b 75 0c             	mov    0xc(%ebp),%esi
   2adee:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   2adf5:	00 
   2adf6:	89 74 24 04          	mov    %esi,0x4(%esp)
   2adfa:	89 1c 24             	mov    %ebx,(%esp)
   2adfd:	e8 ae 13 00 00       	call   2c1b0 <pio_trace_log>
   2ae02:	81 fb ff ff 00 00    	cmp    $0xffff,%ebx
   2ae08:	76 0e                	jbe    2ae18 <pio_write_32+0x38>
   2ae0a:	89 33                	mov    %esi,(%ebx)
   2ae0c:	83 c4 10             	add    $0x10,%esp
   2ae0f:	5b                   	pop    %ebx
   2ae10:	5e                   	pop    %esi
   2ae11:	5d                   	pop    %ebp
   2ae12:	c3                   	ret    
   2ae13:	90                   	nop
   2ae14:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2ae18:	89 f0                	mov    %esi,%eax
   2ae1a:	89 da                	mov    %ebx,%edx
   2ae1c:	ef                   	out    %eax,(%dx)
   2ae1d:	83 c4 10             	add    $0x10,%esp
   2ae20:	5b                   	pop    %ebx
   2ae21:	5e                   	pop    %esi
   2ae22:	5d                   	pop    %ebp
   2ae23:	c3                   	ret    
   2ae24:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2ae2a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0002ae30 <pio_read_8>:
   2ae30:	55                   	push   %ebp
   2ae31:	89 e5                	mov    %esp,%ebp
   2ae33:	53                   	push   %ebx
   2ae34:	83 ec 14             	sub    $0x14,%esp
   2ae37:	8b 55 08             	mov    0x8(%ebp),%edx
   2ae3a:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
   2ae40:	76 26                	jbe    2ae68 <pio_read_8+0x38>
   2ae42:	8a 1a                	mov    (%edx),%bl
   2ae44:	31 c0                	xor    %eax,%eax
   2ae46:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2ae4d:	00 
   2ae4e:	88 d8                	mov    %bl,%al
   2ae50:	89 14 24             	mov    %edx,(%esp)
   2ae53:	89 44 24 04          	mov    %eax,0x4(%esp)
   2ae57:	e8 54 13 00 00       	call   2c1b0 <pio_trace_log>
   2ae5c:	83 c4 14             	add    $0x14,%esp
   2ae5f:	88 d8                	mov    %bl,%al
   2ae61:	5b                   	pop    %ebx
   2ae62:	5d                   	pop    %ebp
   2ae63:	c3                   	ret    
   2ae64:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2ae68:	ec                   	in     (%dx),%al
   2ae69:	88 c3                	mov    %al,%bl
   2ae6b:	eb d7                	jmp    2ae44 <pio_read_8+0x14>
   2ae6d:	8d 76 00             	lea    0x0(%esi),%esi

0002ae70 <pio_read_16>:
   2ae70:	55                   	push   %ebp
   2ae71:	89 e5                	mov    %esp,%ebp
   2ae73:	53                   	push   %ebx
   2ae74:	83 ec 14             	sub    $0x14,%esp
   2ae77:	8b 55 08             	mov    0x8(%ebp),%edx
   2ae7a:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
   2ae80:	76 26                	jbe    2aea8 <pio_read_16+0x38>
   2ae82:	66 8b 1a             	mov    (%edx),%bx
   2ae85:	89 d8                	mov    %ebx,%eax
   2ae87:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2ae8e:	00 
   2ae8f:	25 ff ff 00 00       	and    $0xffff,%eax
   2ae94:	89 14 24             	mov    %edx,(%esp)
   2ae97:	89 44 24 04          	mov    %eax,0x4(%esp)
   2ae9b:	e8 10 13 00 00       	call   2c1b0 <pio_trace_log>
   2aea0:	83 c4 14             	add    $0x14,%esp
   2aea3:	89 d8                	mov    %ebx,%eax
   2aea5:	5b                   	pop    %ebx
   2aea6:	5d                   	pop    %ebp
   2aea7:	c3                   	ret    
   2aea8:	66 ed                	in     (%dx),%ax
   2aeaa:	89 c3                	mov    %eax,%ebx
   2aeac:	eb d7                	jmp    2ae85 <pio_read_16+0x15>
   2aeae:	66 90                	xchg   %ax,%ax

0002aeb0 <pio_read_32>:
   2aeb0:	55                   	push   %ebp
   2aeb1:	89 e5                	mov    %esp,%ebp
   2aeb3:	53                   	push   %ebx
   2aeb4:	83 ec 14             	sub    $0x14,%esp
   2aeb7:	8b 55 08             	mov    0x8(%ebp),%edx
   2aeba:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
   2aec0:	76 1e                	jbe    2aee0 <pio_read_32+0x30>
   2aec2:	8b 1a                	mov    (%edx),%ebx
   2aec4:	89 5c 24 04          	mov    %ebx,0x4(%esp)
   2aec8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2aecf:	00 
   2aed0:	89 14 24             	mov    %edx,(%esp)
   2aed3:	e8 d8 12 00 00       	call   2c1b0 <pio_trace_log>
   2aed8:	83 c4 14             	add    $0x14,%esp
   2aedb:	89 d8                	mov    %ebx,%eax
   2aedd:	5b                   	pop    %ebx
   2aede:	5d                   	pop    %ebp
   2aedf:	c3                   	ret    
   2aee0:	ed                   	in     (%dx),%eax
   2aee1:	89 c3                	mov    %eax,%ebx
   2aee3:	eb df                	jmp    2aec4 <pio_read_32+0x14>
   2aee5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2aee9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002aef0 <irq_register>:
   2aef0:	55                   	push   %ebp
   2aef1:	89 e5                	mov    %esp,%ebp
   2aef3:	83 ec 28             	sub    $0x28,%esp
   2aef6:	8b 45 14             	mov    0x14(%ebp),%eax
   2aef9:	c7 44 24 18 29 00 00 	movl   $0x29,0x18(%esp)
   2af00:	00 
   2af01:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2af05:	8b 45 10             	mov    0x10(%ebp),%eax
   2af08:	89 44 24 08          	mov    %eax,0x8(%esp)
   2af0c:	8b 45 0c             	mov    0xc(%ebp),%eax
   2af0f:	89 44 24 04          	mov    %eax,0x4(%esp)
   2af13:	8b 45 08             	mov    0x8(%ebp),%eax
   2af16:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2af1d:	00 
   2af1e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2af25:	00 
   2af26:	89 04 24             	mov    %eax,(%esp)
   2af29:	ff 15 54 06 03 00    	call   *0x30654
   2af2f:	c9                   	leave  
   2af30:	c3                   	ret    
   2af31:	eb 0d                	jmp    2af40 <irq_unregister>
   2af33:	90                   	nop
   2af34:	90                   	nop
   2af35:	90                   	nop
   2af36:	90                   	nop
   2af37:	90                   	nop
   2af38:	90                   	nop
   2af39:	90                   	nop
   2af3a:	90                   	nop
   2af3b:	90                   	nop
   2af3c:	90                   	nop
   2af3d:	90                   	nop
   2af3e:	90                   	nop
   2af3f:	90                   	nop

0002af40 <irq_unregister>:
   2af40:	55                   	push   %ebp
   2af41:	89 e5                	mov    %esp,%ebp
   2af43:	83 ec 28             	sub    $0x28,%esp
   2af46:	8b 45 0c             	mov    0xc(%ebp),%eax
   2af49:	c7 44 24 18 2a 00 00 	movl   $0x2a,0x18(%esp)
   2af50:	00 
   2af51:	89 44 24 04          	mov    %eax,0x4(%esp)
   2af55:	8b 45 08             	mov    0x8(%ebp),%eax
   2af58:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2af5f:	00 
   2af60:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2af67:	00 
   2af68:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2af6f:	00 
   2af70:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2af77:	00 
   2af78:	89 04 24             	mov    %eax,(%esp)
   2af7b:	ff 15 54 06 03 00    	call   *0x30654
   2af81:	c9                   	leave  
   2af82:	c3                   	ret    
   2af83:	66 90                	xchg   %ax,%ax
   2af85:	66 90                	xchg   %ax,%ax
   2af87:	66 90                	xchg   %ax,%ax
   2af89:	66 90                	xchg   %ax,%ax
   2af8b:	66 90                	xchg   %ax,%ax
   2af8d:	66 90                	xchg   %ax,%ax
   2af8f:	90                   	nop

0002af90 <as_area_create>:
   2af90:	55                   	push   %ebp
   2af91:	89 e5                	mov    %esp,%ebp
   2af93:	83 ec 28             	sub    $0x28,%esp
   2af96:	8b 45 10             	mov    0x10(%ebp),%eax
   2af99:	c7 44 24 18 0f 00 00 	movl   $0xf,0x18(%esp)
   2afa0:	00 
   2afa1:	89 44 24 08          	mov    %eax,0x8(%esp)
   2afa5:	8b 45 0c             	mov    0xc(%ebp),%eax
   2afa8:	89 44 24 04          	mov    %eax,0x4(%esp)
   2afac:	8b 45 08             	mov    0x8(%ebp),%eax
   2afaf:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2afb6:	00 
   2afb7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2afbe:	00 
   2afbf:	c7 44 24 0c 94 10 00 	movl   $0x1094,0xc(%esp)
   2afc6:	00 
   2afc7:	89 04 24             	mov    %eax,(%esp)
   2afca:	ff 15 54 06 03 00    	call   *0x30654
   2afd0:	c9                   	leave  
   2afd1:	c3                   	ret    
   2afd2:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2afd9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002afe0 <as_area_resize>:
   2afe0:	55                   	push   %ebp
   2afe1:	89 e5                	mov    %esp,%ebp
   2afe3:	83 ec 28             	sub    $0x28,%esp
   2afe6:	8b 45 10             	mov    0x10(%ebp),%eax
   2afe9:	c7 44 24 18 10 00 00 	movl   $0x10,0x18(%esp)
   2aff0:	00 
   2aff1:	89 44 24 08          	mov    %eax,0x8(%esp)
   2aff5:	8b 45 0c             	mov    0xc(%ebp),%eax
   2aff8:	89 44 24 04          	mov    %eax,0x4(%esp)
   2affc:	8b 45 08             	mov    0x8(%ebp),%eax
   2afff:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b006:	00 
   2b007:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2b00e:	00 
   2b00f:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2b016:	00 
   2b017:	89 04 24             	mov    %eax,(%esp)
   2b01a:	ff 15 54 06 03 00    	call   *0x30654
   2b020:	c9                   	leave  
   2b021:	c3                   	ret    
   2b022:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2b029:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002b030 <as_area_destroy>:
   2b030:	55                   	push   %ebp
   2b031:	89 e5                	mov    %esp,%ebp
   2b033:	83 ec 28             	sub    $0x28,%esp
   2b036:	8b 45 08             	mov    0x8(%ebp),%eax
   2b039:	c7 44 24 18 12 00 00 	movl   $0x12,0x18(%esp)
   2b040:	00 
   2b041:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b048:	00 
   2b049:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2b050:	00 
   2b051:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2b058:	00 
   2b059:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2b060:	00 
   2b061:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2b068:	00 
   2b069:	89 04 24             	mov    %eax,(%esp)
   2b06c:	ff 15 54 06 03 00    	call   *0x30654
   2b072:	c9                   	leave  
   2b073:	c3                   	ret    
   2b074:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2b07a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0002b080 <as_area_change_flags>:
   2b080:	55                   	push   %ebp
   2b081:	89 e5                	mov    %esp,%ebp
   2b083:	83 ec 28             	sub    $0x28,%esp
   2b086:	8b 45 0c             	mov    0xc(%ebp),%eax
   2b089:	c7 44 24 18 11 00 00 	movl   $0x11,0x18(%esp)
   2b090:	00 
   2b091:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b095:	8b 45 08             	mov    0x8(%ebp),%eax
   2b098:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b09f:	00 
   2b0a0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2b0a7:	00 
   2b0a8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2b0af:	00 
   2b0b0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2b0b7:	00 
   2b0b8:	89 04 24             	mov    %eax,(%esp)
   2b0bb:	ff 15 54 06 03 00    	call   *0x30654
   2b0c1:	c9                   	leave  
   2b0c2:	c3                   	ret    
   2b0c3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2b0c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002b0d0 <as_get_physical_mapping>:
   2b0d0:	55                   	push   %ebp
   2b0d1:	89 e5                	mov    %esp,%ebp
   2b0d3:	83 ec 28             	sub    $0x28,%esp
   2b0d6:	8b 45 0c             	mov    0xc(%ebp),%eax
   2b0d9:	c7 44 24 18 13 00 00 	movl   $0x13,0x18(%esp)
   2b0e0:	00 
   2b0e1:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b0e5:	8b 45 08             	mov    0x8(%ebp),%eax
   2b0e8:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b0ef:	00 
   2b0f0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2b0f7:	00 
   2b0f8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2b0ff:	00 
   2b100:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2b107:	00 
   2b108:	89 04 24             	mov    %eax,(%esp)
   2b10b:	ff 15 54 06 03 00    	call   *0x30654
   2b111:	c9                   	leave  
   2b112:	c3                   	ret    
   2b113:	66 90                	xchg   %ax,%ax
   2b115:	66 90                	xchg   %ax,%ax
   2b117:	66 90                	xchg   %ax,%ax
   2b119:	66 90                	xchg   %ax,%ax
   2b11b:	66 90                	xchg   %ax,%ax
   2b11d:	66 90                	xchg   %ax,%ax
   2b11f:	90                   	nop

0002b120 <clock_dev_time_get>:
   2b120:	55                   	push   %ebp
   2b121:	89 e5                	mov    %esp,%ebp
   2b123:	57                   	push   %edi
   2b124:	53                   	push   %ebx
   2b125:	83 ec 40             	sub    $0x40,%esp
   2b128:	8b 45 08             	mov    0x8(%ebp),%eax
   2b12b:	89 04 24             	mov    %eax,(%esp)
   2b12e:	e8 dd 84 ff ff       	call   23610 <async_exchange_begin>
   2b133:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   2b13a:	00 
   2b13b:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b142:	00 
   2b143:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2b14a:	00 
   2b14b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2b152:	00 
   2b153:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2b15a:	00 
   2b15b:	c7 44 24 04 08 04 00 	movl   $0x408,0x4(%esp)
   2b162:	00 
   2b163:	89 04 24             	mov    %eax,(%esp)
   2b166:	89 c3                	mov    %eax,%ebx
   2b168:	e8 43 6e ff ff       	call   21fb0 <async_send_fast>
   2b16d:	89 c7                	mov    %eax,%edi
   2b16f:	8b 45 0c             	mov    0xc(%ebp),%eax
   2b172:	c7 44 24 08 24 00 00 	movl   $0x24,0x8(%esp)
   2b179:	00 
   2b17a:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b17e:	89 1c 24             	mov    %ebx,(%esp)
   2b181:	e8 5a 8e ff ff       	call   23fe0 <async_data_read_start>
   2b186:	89 1c 24             	mov    %ebx,(%esp)
   2b189:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   2b18c:	e8 ef 87 ff ff       	call   23980 <async_exchange_end>
   2b191:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2b194:	85 c0                	test   %eax,%eax
   2b196:	75 20                	jne    2b1b8 <clock_dev_time_get+0x98>
   2b198:	8d 45 f4             	lea    -0xc(%ebp),%eax
   2b19b:	89 3c 24             	mov    %edi,(%esp)
   2b19e:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b1a2:	e8 d9 6f ff ff       	call   22180 <async_wait_for>
   2b1a7:	8b 45 f4             	mov    -0xc(%ebp),%eax
   2b1aa:	83 c4 40             	add    $0x40,%esp
   2b1ad:	5b                   	pop    %ebx
   2b1ae:	5f                   	pop    %edi
   2b1af:	5d                   	pop    %ebp
   2b1b0:	c3                   	ret    
   2b1b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2b1b8:	89 3c 24             	mov    %edi,(%esp)
   2b1bb:	e8 10 72 ff ff       	call   223d0 <async_forget>
   2b1c0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2b1c3:	83 c4 40             	add    $0x40,%esp
   2b1c6:	5b                   	pop    %ebx
   2b1c7:	5f                   	pop    %edi
   2b1c8:	5d                   	pop    %ebp
   2b1c9:	c3                   	ret    
   2b1ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0002b1d0 <clock_dev_time_set>:
   2b1d0:	55                   	push   %ebp
   2b1d1:	89 e5                	mov    %esp,%ebp
   2b1d3:	57                   	push   %edi
   2b1d4:	53                   	push   %ebx
   2b1d5:	83 ec 40             	sub    $0x40,%esp
   2b1d8:	8b 45 08             	mov    0x8(%ebp),%eax
   2b1db:	89 04 24             	mov    %eax,(%esp)
   2b1de:	e8 2d 84 ff ff       	call   23610 <async_exchange_begin>
   2b1e3:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
   2b1ea:	00 
   2b1eb:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b1f2:	00 
   2b1f3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2b1fa:	00 
   2b1fb:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2b202:	00 
   2b203:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   2b20a:	00 
   2b20b:	c7 44 24 04 08 04 00 	movl   $0x408,0x4(%esp)
   2b212:	00 
   2b213:	89 04 24             	mov    %eax,(%esp)
   2b216:	89 c3                	mov    %eax,%ebx
   2b218:	e8 93 6d ff ff       	call   21fb0 <async_send_fast>
   2b21d:	89 c7                	mov    %eax,%edi
   2b21f:	8b 45 0c             	mov    0xc(%ebp),%eax
   2b222:	c7 44 24 08 24 00 00 	movl   $0x24,0x8(%esp)
   2b229:	00 
   2b22a:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b22e:	89 1c 24             	mov    %ebx,(%esp)
   2b231:	e8 ca 92 ff ff       	call   24500 <async_data_write_start>
   2b236:	89 1c 24             	mov    %ebx,(%esp)
   2b239:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   2b23c:	e8 3f 87 ff ff       	call   23980 <async_exchange_end>
   2b241:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2b244:	85 c0                	test   %eax,%eax
   2b246:	75 20                	jne    2b268 <clock_dev_time_set+0x98>
   2b248:	8d 45 f4             	lea    -0xc(%ebp),%eax
   2b24b:	89 3c 24             	mov    %edi,(%esp)
   2b24e:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b252:	e8 29 6f ff ff       	call   22180 <async_wait_for>
   2b257:	8b 45 f4             	mov    -0xc(%ebp),%eax
   2b25a:	83 c4 40             	add    $0x40,%esp
   2b25d:	5b                   	pop    %ebx
   2b25e:	5f                   	pop    %edi
   2b25f:	5d                   	pop    %ebp
   2b260:	c3                   	ret    
   2b261:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2b268:	89 3c 24             	mov    %edi,(%esp)
   2b26b:	e8 60 71 ff ff       	call   223d0 <async_forget>
   2b270:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2b273:	83 c4 40             	add    $0x40,%esp
   2b276:	5b                   	pop    %ebx
   2b277:	5f                   	pop    %edi
   2b278:	5d                   	pop    %ebp
   2b279:	c3                   	ret    
   2b27a:	66 90                	xchg   %ax,%ax
   2b27c:	66 90                	xchg   %ax,%ax
   2b27e:	66 90                	xchg   %ax,%ax

0002b280 <get_power_of_ten>:
   2b280:	55                   	push   %ebp
   2b281:	89 e5                	mov    %esp,%ebp
   2b283:	56                   	push   %esi
   2b284:	53                   	push   %ebx
   2b285:	83 ec 10             	sub    $0x10,%esp
   2b288:	8b 75 08             	mov    0x8(%ebp),%esi
   2b28b:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   2b28e:	8d 9e 06 05 00 00    	lea    0x506(%esi),%ebx
   2b294:	81 fb a8 09 00 00    	cmp    $0x9a8,%ebx
   2b29a:	0f 87 b0 00 00 00    	ja     2b350 <get_power_of_ten+0xd0>
   2b2a0:	89 d8                	mov    %ebx,%eax
   2b2a2:	ba f7 12 da 4b       	mov    $0x4bda12f7,%edx
   2b2a7:	f7 ea                	imul   %edx
   2b2a9:	c1 fb 1f             	sar    $0x1f,%ebx
   2b2ac:	c1 fa 03             	sar    $0x3,%edx
   2b2af:	29 da                	sub    %ebx,%edx
   2b2b1:	8d 04 52             	lea    (%edx,%edx,2),%eax
   2b2b4:	0f bf 04 85 08 ee 02 	movswl 0x2ee08(,%eax,4),%eax
   2b2bb:	00 
   2b2bc:	39 c6                	cmp    %eax,%esi
   2b2be:	7e 74                	jle    2b334 <get_power_of_ten+0xb4>
   2b2c0:	8d 44 52 03          	lea    0x3(%edx,%edx,2),%eax
   2b2c4:	8d 04 85 08 ee 02 00 	lea    0x2ee08(,%eax,4),%eax
   2b2cb:	90                   	nop
   2b2cc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2b2d0:	42                   	inc    %edx
   2b2d1:	83 fa 5d             	cmp    $0x5d,%edx
   2b2d4:	7f 42                	jg     2b318 <get_power_of_ten+0x98>
   2b2d6:	0f bf 18             	movswl (%eax),%ebx
   2b2d9:	83 c0 0c             	add    $0xc,%eax
   2b2dc:	39 de                	cmp    %ebx,%esi
   2b2de:	7f f0                	jg     2b2d0 <get_power_of_ten+0x50>
   2b2e0:	83 c6 1b             	add    $0x1b,%esi
   2b2e3:	39 f3                	cmp    %esi,%ebx
   2b2e5:	0f 8f 81 00 00 00    	jg     2b36c <get_power_of_ten+0xec>
   2b2eb:	8d 34 52             	lea    (%edx,%edx,2),%esi
   2b2ee:	89 59 08             	mov    %ebx,0x8(%ecx)
   2b2f1:	c1 e6 02             	shl    $0x2,%esi
   2b2f4:	8b 86 00 ee 02 00    	mov    0x2ee00(%esi),%eax
   2b2fa:	8b 96 04 ee 02 00    	mov    0x2ee04(%esi),%edx
   2b300:	89 01                	mov    %eax,(%ecx)
   2b302:	89 51 04             	mov    %edx,0x4(%ecx)
   2b305:	8b 45 10             	mov    0x10(%ebp),%eax
   2b308:	0f bf 96 0a ee 02 00 	movswl 0x2ee0a(%esi),%edx
   2b30f:	89 10                	mov    %edx,(%eax)
   2b311:	83 c4 10             	add    $0x10,%esp
   2b314:	5b                   	pop    %ebx
   2b315:	5e                   	pop    %esi
   2b316:	5d                   	pop    %ebp
   2b317:	c3                   	ret    
   2b318:	c7 44 24 08 b9 00 00 	movl   $0xb9,0x8(%esp)
   2b31f:	00 
   2b320:	c7 44 24 04 26 ed 02 	movl   $0x2ed26,0x4(%esp)
   2b327:	00 
   2b328:	c7 04 24 c4 cd 02 00 	movl   $0x2cdc4,(%esp)
   2b32f:	e8 7c f5 ff ff       	call   2a8b0 <assert_abort>
   2b334:	c7 44 24 08 ab 00 00 	movl   $0xab,0x8(%esp)
   2b33b:	00 
   2b33c:	c7 44 24 04 26 ed 02 	movl   $0x2ed26,0x4(%esp)
   2b343:	00 
   2b344:	c7 04 24 78 ed 02 00 	movl   $0x2ed78,(%esp)
   2b34b:	e8 60 f5 ff ff       	call   2a8b0 <assert_abort>
   2b350:	c7 44 24 08 a0 00 00 	movl   $0xa0,0x8(%esp)
   2b357:	00 
   2b358:	c7 44 24 04 26 ed 02 	movl   $0x2ed26,0x4(%esp)
   2b35f:	00 
   2b360:	c7 04 24 40 ed 02 00 	movl   $0x2ed40,(%esp)
   2b367:	e8 44 f5 ff ff       	call   2a8b0 <assert_abort>
   2b36c:	c7 44 24 08 b0 00 00 	movl   $0xb0,0x8(%esp)
   2b373:	00 
   2b374:	c7 44 24 04 26 ed 02 	movl   $0x2ed26,0x4(%esp)
   2b37b:	00 
   2b37c:	c7 04 24 a8 ed 02 00 	movl   $0x2eda8,(%esp)
   2b383:	e8 28 f5 ff ff       	call   2a8b0 <assert_abort>
   2b388:	66 90                	xchg   %ax,%ax
   2b38a:	66 90                	xchg   %ax,%ax
   2b38c:	66 90                	xchg   %ax,%ax
   2b38e:	66 90                	xchg   %ax,%ax

0002b390 <sysinfo_get_keys>:
   2b390:	55                   	push   %ebp
   2b391:	89 e5                	mov    %esp,%ebp
   2b393:	57                   	push   %edi
   2b394:	56                   	push   %esi
   2b395:	53                   	push   %ebx
   2b396:	83 ec 4c             	sub    $0x4c,%esp
   2b399:	8b 75 08             	mov    0x8(%ebp),%esi
   2b39c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   2b39f:	89 34 24             	mov    %esi,(%esp)
   2b3a2:	8b 3d 54 06 03 00    	mov    0x30654,%edi
   2b3a8:	e8 43 8c fe ff       	call   13ff0 <str_size>
   2b3ad:	c7 44 24 18 2b 00 00 	movl   $0x2b,0x18(%esp)
   2b3b4:	00 
   2b3b5:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b3bc:	00 
   2b3bd:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2b3c4:	00 
   2b3c5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2b3cc:	00 
   2b3cd:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   2b3d1:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b3d5:	89 34 24             	mov    %esi,(%esp)
   2b3d8:	ff d7                	call   *%edi
   2b3da:	85 c0                	test   %eax,%eax
   2b3dc:	75 72                	jne    2b450 <sysinfo_get_keys+0xc0>
   2b3de:	85 db                	test   %ebx,%ebx
   2b3e0:	74 6e                	je     2b450 <sysinfo_get_keys+0xc0>
   2b3e2:	8b 03                	mov    (%ebx),%eax
   2b3e4:	89 04 24             	mov    %eax,(%esp)
   2b3e7:	e8 e4 4c ff ff       	call   200d0 <malloc>
   2b3ec:	89 c7                	mov    %eax,%edi
   2b3ee:	85 c0                	test   %eax,%eax
   2b3f0:	74 76                	je     2b468 <sysinfo_get_keys+0xd8>
   2b3f2:	8b 13                	mov    (%ebx),%edx
   2b3f4:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
   2b3f7:	89 34 24             	mov    %esi,(%esp)
   2b3fa:	89 55 d0             	mov    %edx,-0x30(%ebp)
   2b3fd:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
   2b400:	e8 eb 8b fe ff       	call   13ff0 <str_size>
   2b405:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   2b408:	8b 55 d0             	mov    -0x30(%ebp),%edx
   2b40b:	c7 44 24 18 2c 00 00 	movl   $0x2c,0x18(%esp)
   2b412:	00 
   2b413:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b41a:	00 
   2b41b:	89 4c 24 10          	mov    %ecx,0x10(%esp)
   2b41f:	89 54 24 0c          	mov    %edx,0xc(%esp)
   2b423:	89 7c 24 08          	mov    %edi,0x8(%esp)
   2b427:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b42b:	89 34 24             	mov    %esi,(%esp)
   2b42e:	e8 dd f4 ff ff       	call   2a910 <__syscall_slow>
   2b433:	85 c0                	test   %eax,%eax
   2b435:	75 11                	jne    2b448 <sysinfo_get_keys+0xb8>
   2b437:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2b43a:	89 03                	mov    %eax,(%ebx)
   2b43c:	83 c4 4c             	add    $0x4c,%esp
   2b43f:	89 f8                	mov    %edi,%eax
   2b441:	5b                   	pop    %ebx
   2b442:	5e                   	pop    %esi
   2b443:	5f                   	pop    %edi
   2b444:	5d                   	pop    %ebp
   2b445:	c3                   	ret    
   2b446:	66 90                	xchg   %ax,%ax
   2b448:	89 3c 24             	mov    %edi,(%esp)
   2b44b:	e8 90 4d ff ff       	call   201e0 <free>
   2b450:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   2b456:	83 c4 4c             	add    $0x4c,%esp
   2b459:	31 ff                	xor    %edi,%edi
   2b45b:	5b                   	pop    %ebx
   2b45c:	89 f8                	mov    %edi,%eax
   2b45e:	5e                   	pop    %esi
   2b45f:	5f                   	pop    %edi
   2b460:	5d                   	pop    %ebp
   2b461:	c3                   	ret    
   2b462:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2b468:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   2b46e:	eb cc                	jmp    2b43c <sysinfo_get_keys+0xac>

0002b470 <sysinfo_get_val_type>:
   2b470:	55                   	push   %ebp
   2b471:	89 e5                	mov    %esp,%ebp
   2b473:	56                   	push   %esi
   2b474:	53                   	push   %ebx
   2b475:	83 ec 20             	sub    $0x20,%esp
   2b478:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2b47b:	8b 35 54 06 03 00    	mov    0x30654,%esi
   2b481:	89 1c 24             	mov    %ebx,(%esp)
   2b484:	e8 67 8b fe ff       	call   13ff0 <str_size>
   2b489:	89 1c 24             	mov    %ebx,(%esp)
   2b48c:	c7 44 24 18 2d 00 00 	movl   $0x2d,0x18(%esp)
   2b493:	00 
   2b494:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b49b:	00 
   2b49c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2b4a3:	00 
   2b4a4:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2b4ab:	00 
   2b4ac:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2b4b3:	00 
   2b4b4:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b4b8:	ff d6                	call   *%esi
   2b4ba:	83 c4 20             	add    $0x20,%esp
   2b4bd:	5b                   	pop    %ebx
   2b4be:	5e                   	pop    %esi
   2b4bf:	5d                   	pop    %ebp
   2b4c0:	c3                   	ret    
   2b4c1:	eb 0d                	jmp    2b4d0 <sysinfo_get_value>
   2b4c3:	90                   	nop
   2b4c4:	90                   	nop
   2b4c5:	90                   	nop
   2b4c6:	90                   	nop
   2b4c7:	90                   	nop
   2b4c8:	90                   	nop
   2b4c9:	90                   	nop
   2b4ca:	90                   	nop
   2b4cb:	90                   	nop
   2b4cc:	90                   	nop
   2b4cd:	90                   	nop
   2b4ce:	90                   	nop
   2b4cf:	90                   	nop

0002b4d0 <sysinfo_get_value>:
   2b4d0:	55                   	push   %ebp
   2b4d1:	89 e5                	mov    %esp,%ebp
   2b4d3:	56                   	push   %esi
   2b4d4:	53                   	push   %ebx
   2b4d5:	83 ec 20             	sub    $0x20,%esp
   2b4d8:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2b4db:	8b 35 54 06 03 00    	mov    0x30654,%esi
   2b4e1:	89 1c 24             	mov    %ebx,(%esp)
   2b4e4:	e8 07 8b fe ff       	call   13ff0 <str_size>
   2b4e9:	8b 55 0c             	mov    0xc(%ebp),%edx
   2b4ec:	89 1c 24             	mov    %ebx,(%esp)
   2b4ef:	c7 44 24 18 2e 00 00 	movl   $0x2e,0x18(%esp)
   2b4f6:	00 
   2b4f7:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b4fe:	00 
   2b4ff:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2b506:	00 
   2b507:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2b50e:	00 
   2b50f:	89 54 24 08          	mov    %edx,0x8(%esp)
   2b513:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b517:	ff d6                	call   *%esi
   2b519:	83 c4 20             	add    $0x20,%esp
   2b51c:	5b                   	pop    %ebx
   2b51d:	5e                   	pop    %esi
   2b51e:	5d                   	pop    %ebp
   2b51f:	c3                   	ret    

0002b520 <sysinfo_get_data>:
   2b520:	55                   	push   %ebp
   2b521:	89 e5                	mov    %esp,%ebp
   2b523:	57                   	push   %edi
   2b524:	56                   	push   %esi
   2b525:	53                   	push   %ebx
   2b526:	83 ec 4c             	sub    $0x4c,%esp
   2b529:	8b 75 08             	mov    0x8(%ebp),%esi
   2b52c:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   2b52f:	89 34 24             	mov    %esi,(%esp)
   2b532:	8b 3d 54 06 03 00    	mov    0x30654,%edi
   2b538:	e8 b3 8a fe ff       	call   13ff0 <str_size>
   2b53d:	c7 44 24 18 2f 00 00 	movl   $0x2f,0x18(%esp)
   2b544:	00 
   2b545:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b54c:	00 
   2b54d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2b554:	00 
   2b555:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2b55c:	00 
   2b55d:	89 5c 24 08          	mov    %ebx,0x8(%esp)
   2b561:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b565:	89 34 24             	mov    %esi,(%esp)
   2b568:	ff d7                	call   *%edi
   2b56a:	85 c0                	test   %eax,%eax
   2b56c:	75 72                	jne    2b5e0 <sysinfo_get_data+0xc0>
   2b56e:	85 db                	test   %ebx,%ebx
   2b570:	74 6e                	je     2b5e0 <sysinfo_get_data+0xc0>
   2b572:	8b 03                	mov    (%ebx),%eax
   2b574:	89 04 24             	mov    %eax,(%esp)
   2b577:	e8 54 4b ff ff       	call   200d0 <malloc>
   2b57c:	89 c7                	mov    %eax,%edi
   2b57e:	85 c0                	test   %eax,%eax
   2b580:	74 76                	je     2b5f8 <sysinfo_get_data+0xd8>
   2b582:	8b 13                	mov    (%ebx),%edx
   2b584:	8d 4d e4             	lea    -0x1c(%ebp),%ecx
   2b587:	89 34 24             	mov    %esi,(%esp)
   2b58a:	89 55 d0             	mov    %edx,-0x30(%ebp)
   2b58d:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
   2b590:	e8 5b 8a fe ff       	call   13ff0 <str_size>
   2b595:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   2b598:	8b 55 d0             	mov    -0x30(%ebp),%edx
   2b59b:	c7 44 24 18 30 00 00 	movl   $0x30,0x18(%esp)
   2b5a2:	00 
   2b5a3:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b5aa:	00 
   2b5ab:	89 4c 24 10          	mov    %ecx,0x10(%esp)
   2b5af:	89 54 24 0c          	mov    %edx,0xc(%esp)
   2b5b3:	89 7c 24 08          	mov    %edi,0x8(%esp)
   2b5b7:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b5bb:	89 34 24             	mov    %esi,(%esp)
   2b5be:	e8 4d f3 ff ff       	call   2a910 <__syscall_slow>
   2b5c3:	85 c0                	test   %eax,%eax
   2b5c5:	75 11                	jne    2b5d8 <sysinfo_get_data+0xb8>
   2b5c7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2b5ca:	89 03                	mov    %eax,(%ebx)
   2b5cc:	83 c4 4c             	add    $0x4c,%esp
   2b5cf:	89 f8                	mov    %edi,%eax
   2b5d1:	5b                   	pop    %ebx
   2b5d2:	5e                   	pop    %esi
   2b5d3:	5f                   	pop    %edi
   2b5d4:	5d                   	pop    %ebp
   2b5d5:	c3                   	ret    
   2b5d6:	66 90                	xchg   %ax,%ax
   2b5d8:	89 3c 24             	mov    %edi,(%esp)
   2b5db:	e8 00 4c ff ff       	call   201e0 <free>
   2b5e0:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   2b5e6:	83 c4 4c             	add    $0x4c,%esp
   2b5e9:	31 ff                	xor    %edi,%edi
   2b5eb:	5b                   	pop    %ebx
   2b5ec:	89 f8                	mov    %edi,%eax
   2b5ee:	5e                   	pop    %esi
   2b5ef:	5f                   	pop    %edi
   2b5f0:	5d                   	pop    %ebp
   2b5f1:	c3                   	ret    
   2b5f2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2b5f8:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   2b5fe:	eb cc                	jmp    2b5cc <sysinfo_get_data+0xac>

0002b600 <sysinfo_get_property>:
   2b600:	55                   	push   %ebp
   2b601:	89 e5                	mov    %esp,%ebp
   2b603:	57                   	push   %edi
   2b604:	56                   	push   %esi
   2b605:	53                   	push   %ebx
   2b606:	83 ec 3c             	sub    $0x3c,%esp
   2b609:	8d 45 e0             	lea    -0x20(%ebp),%eax
   2b60c:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b610:	8b 45 08             	mov    0x8(%ebp),%eax
   2b613:	89 04 24             	mov    %eax,(%esp)
   2b616:	e8 05 ff ff ff       	call   2b520 <sysinfo_get_data>
   2b61b:	89 c6                	mov    %eax,%esi
   2b61d:	85 c0                	test   %eax,%eax
   2b61f:	74 7e                	je     2b69f <sysinfo_get_property+0x9f>
   2b621:	8b 55 e0             	mov    -0x20(%ebp),%edx
   2b624:	31 db                	xor    %ebx,%ebx
   2b626:	85 d2                	test   %edx,%edx
   2b628:	75 54                	jne    2b67e <sysinfo_get_property+0x7e>
   2b62a:	eb 73                	jmp    2b69f <sysinfo_get_property+0x9f>
   2b62c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2b630:	8b 55 0c             	mov    0xc(%ebp),%edx
   2b633:	89 3c 24             	mov    %edi,(%esp)
   2b636:	89 54 24 04          	mov    %edx,0x4(%esp)
   2b63a:	e8 e1 8e fe ff       	call   14520 <str_cmp>
   2b63f:	89 c7                	mov    %eax,%edi
   2b641:	8d 43 01             	lea    0x1(%ebx),%eax
   2b644:	3b 45 e0             	cmp    -0x20(%ebp),%eax
   2b647:	73 4e                	jae    2b697 <sysinfo_get_property+0x97>
   2b649:	01 f0                	add    %esi,%eax
   2b64b:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)
   2b652:	00 
   2b653:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b657:	8d 45 e4             	lea    -0x1c(%ebp),%eax
   2b65a:	89 04 24             	mov    %eax,(%esp)
   2b65d:	e8 7e 7b fe ff       	call   131e0 <memcpy>
   2b662:	8d 4b 05             	lea    0x5(%ebx),%ecx
   2b665:	8b 55 e0             	mov    -0x20(%ebp),%edx
   2b668:	39 d1                	cmp    %edx,%ecx
   2b66a:	73 2b                	jae    2b697 <sysinfo_get_property+0x97>
   2b66c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2b66f:	8d 1c 01             	lea    (%ecx,%eax,1),%ebx
   2b672:	39 da                	cmp    %ebx,%edx
   2b674:	72 21                	jb     2b697 <sysinfo_get_property+0x97>
   2b676:	85 ff                	test   %edi,%edi
   2b678:	74 3e                	je     2b6b8 <sysinfo_get_property+0xb8>
   2b67a:	39 da                	cmp    %ebx,%edx
   2b67c:	76 19                	jbe    2b697 <sysinfo_get_property+0x97>
   2b67e:	29 da                	sub    %ebx,%edx
   2b680:	8d 3c 1e             	lea    (%esi,%ebx,1),%edi
   2b683:	89 54 24 04          	mov    %edx,0x4(%esp)
   2b687:	89 3c 24             	mov    %edi,(%esp)
   2b68a:	e8 91 8a fe ff       	call   14120 <str_nsize>
   2b68f:	01 c3                	add    %eax,%ebx
   2b691:	80 3c 1e 00          	cmpb   $0x0,(%esi,%ebx,1)
   2b695:	74 99                	je     2b630 <sysinfo_get_property+0x30>
   2b697:	89 34 24             	mov    %esi,(%esp)
   2b69a:	e8 41 4b ff ff       	call   201e0 <free>
   2b69f:	8b 45 10             	mov    0x10(%ebp),%eax
   2b6a2:	31 ff                	xor    %edi,%edi
   2b6a4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   2b6aa:	83 c4 3c             	add    $0x3c,%esp
   2b6ad:	89 f8                	mov    %edi,%eax
   2b6af:	5b                   	pop    %ebx
   2b6b0:	5e                   	pop    %esi
   2b6b1:	5f                   	pop    %edi
   2b6b2:	5d                   	pop    %ebp
   2b6b3:	c3                   	ret    
   2b6b4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2b6b8:	89 04 24             	mov    %eax,(%esp)
   2b6bb:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
   2b6be:	e8 0d 4a ff ff       	call   200d0 <malloc>
   2b6c3:	8b 4d d4             	mov    -0x2c(%ebp),%ecx
   2b6c6:	89 c7                	mov    %eax,%edi
   2b6c8:	85 c0                	test   %eax,%eax
   2b6ca:	74 cb                	je     2b697 <sysinfo_get_property+0x97>
   2b6cc:	01 f1                	add    %esi,%ecx
   2b6ce:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2b6d1:	89 4c 24 04          	mov    %ecx,0x4(%esp)
   2b6d5:	89 3c 24             	mov    %edi,(%esp)
   2b6d8:	89 44 24 08          	mov    %eax,0x8(%esp)
   2b6dc:	e8 ff 7a fe ff       	call   131e0 <memcpy>
   2b6e1:	89 34 24             	mov    %esi,(%esp)
   2b6e4:	e8 f7 4a ff ff       	call   201e0 <free>
   2b6e9:	8b 55 10             	mov    0x10(%ebp),%edx
   2b6ec:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2b6ef:	89 02                	mov    %eax,(%edx)
   2b6f1:	83 c4 3c             	add    $0x3c,%esp
   2b6f4:	89 f8                	mov    %edi,%eax
   2b6f6:	5b                   	pop    %ebx
   2b6f7:	5e                   	pop    %esi
   2b6f8:	5f                   	pop    %edi
   2b6f9:	5d                   	pop    %ebp
   2b6fa:	c3                   	ret    
   2b6fb:	66 90                	xchg   %ax,%ax
   2b6fd:	66 90                	xchg   %ax,%ax
   2b6ff:	90                   	nop

0002b700 <dispatch_queued_calls>:
   2b700:	55                   	push   %ebp
   2b701:	89 e5                	mov    %esp,%ebp
   2b703:	56                   	push   %esi
   2b704:	53                   	push   %ebx
   2b705:	83 ec 20             	sub    $0x20,%esp
   2b708:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2b70f:	e8 bc d5 fe ff       	call   18cd0 <futex_down>
   2b714:	8b 1d 5c 06 03 00    	mov    0x3065c,%ebx
   2b71a:	81 fb 58 06 03 00    	cmp    $0x30658,%ebx
   2b720:	0f 84 02 01 00 00    	je     2b828 <dispatch_queued_calls+0x128>
   2b726:	8d 43 10             	lea    0x10(%ebx),%eax
   2b729:	c7 44 24 18 15 00 00 	movl   $0x15,0x18(%esp)
   2b730:	00 
   2b731:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2b738:	00 
   2b739:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2b740:	00 
   2b741:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2b748:	00 
   2b749:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2b750:	00 
   2b751:	89 44 24 04          	mov    %eax,0x4(%esp)
   2b755:	8b 43 34             	mov    0x34(%ebx),%eax
   2b758:	89 04 24             	mov    %eax,(%esp)
   2b75b:	ff 15 54 06 03 00    	call   *0x30654
   2b761:	89 c6                	mov    %eax,%esi
   2b763:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2b766:	0f 84 bc 00 00 00    	je     2b828 <dispatch_queued_calls+0x128>
   2b76c:	8b 13                	mov    (%ebx),%edx
   2b76e:	85 d2                	test   %edx,%edx
   2b770:	74 0e                	je     2b780 <dispatch_queued_calls+0x80>
   2b772:	8b 43 04             	mov    0x4(%ebx),%eax
   2b775:	85 c0                	test   %eax,%eax
   2b777:	74 07                	je     2b780 <dispatch_queued_calls+0x80>
   2b779:	89 10                	mov    %edx,(%eax)
   2b77b:	8b 13                	mov    (%ebx),%edx
   2b77d:	89 42 04             	mov    %eax,0x4(%edx)
   2b780:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   2b786:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   2b78d:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2b794:	e8 97 d5 fe ff       	call   18d30 <futex_up>
   2b799:	8b 43 38             	mov    0x38(%ebx),%eax
   2b79c:	85 c0                	test   %eax,%eax
   2b79e:	75 78                	jne    2b818 <dispatch_queued_calls+0x118>
   2b7a0:	83 fe ff             	cmp    $0xffffffff,%esi
   2b7a3:	75 33                	jne    2b7d8 <dispatch_queued_calls+0xd8>
   2b7a5:	8b 43 08             	mov    0x8(%ebx),%eax
   2b7a8:	85 c0                	test   %eax,%eax
   2b7aa:	74 18                	je     2b7c4 <dispatch_queued_calls+0xc4>
   2b7ac:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2b7b3:	00 
   2b7b4:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%esp)
   2b7bb:	ff 
   2b7bc:	8b 53 0c             	mov    0xc(%ebx),%edx
   2b7bf:	89 14 24             	mov    %edx,(%esp)
   2b7c2:	ff d0                	call   *%eax
   2b7c4:	89 1c 24             	mov    %ebx,(%esp)
   2b7c7:	e8 14 4a ff ff       	call   201e0 <free>
   2b7cc:	e9 37 ff ff ff       	jmp    2b708 <dispatch_queued_calls+0x8>
   2b7d1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2b7d8:	89 73 10             	mov    %esi,0x10(%ebx)
   2b7db:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2b7e2:	e8 e9 d4 fe ff       	call   18cd0 <futex_down>
   2b7e7:	a1 60 06 03 00       	mov    0x30660,%eax
   2b7ec:	89 03                	mov    %eax,(%ebx)
   2b7ee:	c7 43 04 60 06 03 00 	movl   $0x30660,0x4(%ebx)
   2b7f5:	a1 60 06 03 00       	mov    0x30660,%eax
   2b7fa:	89 1d 60 06 03 00    	mov    %ebx,0x30660
   2b800:	89 58 04             	mov    %ebx,0x4(%eax)
   2b803:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2b80a:	e8 21 d5 fe ff       	call   18d30 <futex_up>
   2b80f:	e9 f4 fe ff ff       	jmp    2b708 <dispatch_queued_calls+0x8>
   2b814:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2b818:	89 04 24             	mov    %eax,(%esp)
   2b81b:	e8 00 b7 fe ff       	call   16f20 <fibril_add_ready>
   2b820:	e9 7b ff ff ff       	jmp    2b7a0 <dispatch_queued_calls+0xa0>
   2b825:	8d 76 00             	lea    0x0(%esi),%esi
   2b828:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2b82f:	e8 fc d4 fe ff       	call   18d30 <futex_up>
   2b834:	83 c4 20             	add    $0x20,%esp
   2b837:	5b                   	pop    %ebx
   2b838:	5e                   	pop    %esi
   2b839:	5d                   	pop    %ebp
   2b83a:	c3                   	ret    
   2b83b:	90                   	nop
   2b83c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0002b840 <ipc_call_async_fast>:
   2b840:	55                   	push   %ebp
   2b841:	89 e5                	mov    %esp,%ebp
   2b843:	57                   	push   %edi
   2b844:	56                   	push   %esi
   2b845:	53                   	push   %ebx
   2b846:	83 ec 4c             	sub    $0x4c,%esp
   2b849:	8b 45 08             	mov    0x8(%ebp),%eax
   2b84c:	8b 55 24             	mov    0x24(%ebp),%edx
   2b84f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   2b852:	8b 45 10             	mov    0x10(%ebp),%eax
   2b855:	89 45 e0             	mov    %eax,-0x20(%ebp)
   2b858:	8b 45 14             	mov    0x14(%ebp),%eax
   2b85b:	89 45 dc             	mov    %eax,-0x24(%ebp)
   2b85e:	8b 45 18             	mov    0x18(%ebp),%eax
   2b861:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2b864:	8a 45 28             	mov    0x28(%ebp),%al
   2b867:	8b 75 0c             	mov    0xc(%ebp),%esi
   2b86a:	8b 7d 1c             	mov    0x1c(%ebp),%edi
   2b86d:	8b 4d 20             	mov    0x20(%ebp),%ecx
   2b870:	88 45 d7             	mov    %al,-0x29(%ebp)
   2b873:	85 d2                	test   %edx,%edx
   2b875:	0f 84 a3 00 00 00    	je     2b91e <ipc_call_async_fast+0xde>
   2b87b:	c7 04 24 3c 00 00 00 	movl   $0x3c,(%esp)
   2b882:	89 55 cc             	mov    %edx,-0x34(%ebp)
   2b885:	89 4d d0             	mov    %ecx,-0x30(%ebp)
   2b888:	e8 43 48 ff ff       	call   200d0 <malloc>
   2b88d:	8b 55 cc             	mov    -0x34(%ebp),%edx
   2b890:	89 c3                	mov    %eax,%ebx
   2b892:	85 c0                	test   %eax,%eax
   2b894:	8b 4d d0             	mov    -0x30(%ebp),%ecx
   2b897:	0f 84 cb 01 00 00    	je     2ba68 <ipc_call_async_fast+0x228>
   2b89d:	89 50 08             	mov    %edx,0x8(%eax)
   2b8a0:	89 48 0c             	mov    %ecx,0xc(%eax)
   2b8a3:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2b8aa:	e8 21 d4 fe ff       	call   18cd0 <futex_down>
   2b8af:	8b 45 d8             	mov    -0x28(%ebp),%eax
   2b8b2:	89 44 24 10          	mov    %eax,0x10(%esp)
   2b8b6:	8b 45 dc             	mov    -0x24(%ebp),%eax
   2b8b9:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2b8bd:	8b 45 e0             	mov    -0x20(%ebp),%eax
   2b8c0:	89 44 24 08          	mov    %eax,0x8(%esp)
   2b8c4:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2b8c7:	c7 44 24 18 14 00 00 	movl   $0x14,0x18(%esp)
   2b8ce:	00 
   2b8cf:	89 7c 24 14          	mov    %edi,0x14(%esp)
   2b8d3:	89 74 24 04          	mov    %esi,0x4(%esp)
   2b8d7:	89 04 24             	mov    %eax,(%esp)
   2b8da:	e8 31 f0 ff ff       	call   2a910 <__syscall_slow>
   2b8df:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2b8e2:	0f 84 a8 00 00 00    	je     2b990 <ipc_call_async_fast+0x150>
   2b8e8:	83 f8 ff             	cmp    $0xffffffff,%eax
   2b8eb:	0f 84 17 01 00 00    	je     2ba08 <ipc_call_async_fast+0x1c8>
   2b8f1:	89 43 10             	mov    %eax,0x10(%ebx)
   2b8f4:	a1 60 06 03 00       	mov    0x30660,%eax
   2b8f9:	c7 43 04 60 06 03 00 	movl   $0x30660,0x4(%ebx)
   2b900:	89 03                	mov    %eax,(%ebx)
   2b902:	89 58 04             	mov    %ebx,0x4(%eax)
   2b905:	89 1d 60 06 03 00    	mov    %ebx,0x30660
   2b90b:	c7 45 08 68 06 03 00 	movl   $0x30668,0x8(%ebp)
   2b912:	83 c4 4c             	add    $0x4c,%esp
   2b915:	5b                   	pop    %ebx
   2b916:	5e                   	pop    %esi
   2b917:	5f                   	pop    %edi
   2b918:	5d                   	pop    %ebp
   2b919:	e9 12 d4 fe ff       	jmp    18d30 <futex_up>
   2b91e:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2b925:	89 4d d0             	mov    %ecx,-0x30(%ebp)
   2b928:	e8 a3 d3 fe ff       	call   18cd0 <futex_down>
   2b92d:	8b 45 d8             	mov    -0x28(%ebp),%eax
   2b930:	89 44 24 10          	mov    %eax,0x10(%esp)
   2b934:	8b 45 dc             	mov    -0x24(%ebp),%eax
   2b937:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2b93b:	8b 45 e0             	mov    -0x20(%ebp),%eax
   2b93e:	89 44 24 08          	mov    %eax,0x8(%esp)
   2b942:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2b945:	c7 44 24 18 14 00 00 	movl   $0x14,0x18(%esp)
   2b94c:	00 
   2b94d:	89 7c 24 14          	mov    %edi,0x14(%esp)
   2b951:	89 74 24 04          	mov    %esi,0x4(%esp)
   2b955:	89 04 24             	mov    %eax,(%esp)
   2b958:	e8 b3 ef ff ff       	call   2a910 <__syscall_slow>
   2b95d:	8b 4d d0             	mov    -0x30(%ebp),%ecx
   2b960:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2b963:	75 a6                	jne    2b90b <ipc_call_async_fast+0xcb>
   2b965:	c7 04 24 3c 00 00 00 	movl   $0x3c,(%esp)
   2b96c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
   2b96f:	e8 5c 47 ff ff       	call   200d0 <malloc>
   2b974:	8b 4d d0             	mov    -0x30(%ebp),%ecx
   2b977:	89 c3                	mov    %eax,%ebx
   2b979:	85 c0                	test   %eax,%eax
   2b97b:	0f 84 01 01 00 00    	je     2ba82 <ipc_call_async_fast+0x242>
   2b981:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
   2b988:	89 48 0c             	mov    %ecx,0xc(%eax)
   2b98b:	90                   	nop
   2b98c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2b990:	8b 45 e0             	mov    -0x20(%ebp),%eax
   2b993:	89 73 10             	mov    %esi,0x10(%ebx)
   2b996:	89 43 14             	mov    %eax,0x14(%ebx)
   2b999:	8b 45 dc             	mov    -0x24(%ebp),%eax
   2b99c:	89 43 18             	mov    %eax,0x18(%ebx)
   2b99f:	8b 45 d8             	mov    -0x28(%ebp),%eax
   2b9a2:	89 43 1c             	mov    %eax,0x1c(%ebx)
   2b9a5:	89 7b 20             	mov    %edi,0x20(%ebx)
   2b9a8:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
   2b9af:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2b9b6:	e8 75 d3 fe ff       	call   18d30 <futex_up>
   2b9bb:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2b9be:	89 43 34             	mov    %eax,0x34(%ebx)
   2b9c1:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2b9c8:	e8 03 d3 fe ff       	call   18cd0 <futex_down>
   2b9cd:	a1 58 06 03 00       	mov    0x30658,%eax
   2b9d2:	c7 43 04 58 06 03 00 	movl   $0x30658,0x4(%ebx)
   2b9d9:	89 03                	mov    %eax,(%ebx)
   2b9db:	89 58 04             	mov    %ebx,0x4(%eax)
   2b9de:	89 1d 58 06 03 00    	mov    %ebx,0x30658
   2b9e4:	80 7d d7 00          	cmpb   $0x0,-0x29(%ebp)
   2b9e8:	74 5e                	je     2ba48 <ipc_call_async_fast+0x208>
   2b9ea:	e8 41 b6 fe ff       	call   17030 <fibril_get_id>
   2b9ef:	89 43 38             	mov    %eax,0x38(%ebx)
   2b9f2:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%ebp)
   2b9f9:	83 c4 4c             	add    $0x4c,%esp
   2b9fc:	5b                   	pop    %ebx
   2b9fd:	5e                   	pop    %esi
   2b9fe:	5f                   	pop    %edi
   2b9ff:	5d                   	pop    %ebp
   2ba00:	e9 eb b0 fe ff       	jmp    16af0 <fibril_switch>
   2ba05:	8d 76 00             	lea    0x0(%esi),%esi
   2ba08:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2ba0f:	e8 1c d3 fe ff       	call   18d30 <futex_up>
   2ba14:	8b 43 08             	mov    0x8(%ebx),%eax
   2ba17:	85 c0                	test   %eax,%eax
   2ba19:	74 18                	je     2ba33 <ipc_call_async_fast+0x1f3>
   2ba1b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2ba22:	00 
   2ba23:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%esp)
   2ba2a:	ff 
   2ba2b:	8b 53 0c             	mov    0xc(%ebx),%edx
   2ba2e:	89 14 24             	mov    %edx,(%esp)
   2ba31:	ff d0                	call   *%eax
   2ba33:	89 5d 08             	mov    %ebx,0x8(%ebp)
   2ba36:	83 c4 4c             	add    $0x4c,%esp
   2ba39:	5b                   	pop    %ebx
   2ba3a:	5e                   	pop    %esi
   2ba3b:	5f                   	pop    %edi
   2ba3c:	5d                   	pop    %ebp
   2ba3d:	e9 9e 47 ff ff       	jmp    201e0 <free>
   2ba42:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2ba48:	c7 43 38 00 00 00 00 	movl   $0x0,0x38(%ebx)
   2ba4f:	c7 45 08 cc 05 03 00 	movl   $0x305cc,0x8(%ebp)
   2ba56:	83 c4 4c             	add    $0x4c,%esp
   2ba59:	5b                   	pop    %ebx
   2ba5a:	5e                   	pop    %esi
   2ba5b:	5f                   	pop    %edi
   2ba5c:	5d                   	pop    %ebp
   2ba5d:	e9 ce d2 fe ff       	jmp    18d30 <futex_up>
   2ba62:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2ba68:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%ebp)
   2ba6f:	c7 45 0c fe ff ff ff 	movl   $0xfffffffe,0xc(%ebp)
   2ba76:	89 4d 08             	mov    %ecx,0x8(%ebp)
   2ba79:	83 c4 4c             	add    $0x4c,%esp
   2ba7c:	5b                   	pop    %ebx
   2ba7d:	5e                   	pop    %esi
   2ba7e:	5f                   	pop    %edi
   2ba7f:	5d                   	pop    %ebp
   2ba80:	ff e2                	jmp    *%edx
   2ba82:	83 c4 4c             	add    $0x4c,%esp
   2ba85:	5b                   	pop    %ebx
   2ba86:	5e                   	pop    %esi
   2ba87:	5f                   	pop    %edi
   2ba88:	5d                   	pop    %ebp
   2ba89:	c3                   	ret    
   2ba8a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

0002ba90 <ipc_call_async_slow>:
   2ba90:	55                   	push   %ebp
   2ba91:	89 e5                	mov    %esp,%ebp
   2ba93:	57                   	push   %edi
   2ba94:	56                   	push   %esi
   2ba95:	53                   	push   %ebx
   2ba96:	83 ec 4c             	sub    $0x4c,%esp
   2ba99:	8b 45 0c             	mov    0xc(%ebp),%eax
   2ba9c:	8b 4d 28             	mov    0x28(%ebp),%ecx
   2ba9f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   2baa2:	8b 45 10             	mov    0x10(%ebp),%eax
   2baa5:	89 45 e0             	mov    %eax,-0x20(%ebp)
   2baa8:	8b 45 14             	mov    0x14(%ebp),%eax
   2baab:	89 45 dc             	mov    %eax,-0x24(%ebp)
   2baae:	8b 45 18             	mov    0x18(%ebp),%eax
   2bab1:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2bab4:	8b 45 1c             	mov    0x1c(%ebp),%eax
   2bab7:	89 45 d4             	mov    %eax,-0x2c(%ebp)
   2baba:	8b 45 20             	mov    0x20(%ebp),%eax
   2babd:	89 45 d0             	mov    %eax,-0x30(%ebp)
   2bac0:	c7 04 24 3c 00 00 00 	movl   $0x3c,(%esp)
   2bac7:	8a 45 2c             	mov    0x2c(%ebp),%al
   2baca:	89 4d c8             	mov    %ecx,-0x38(%ebp)
   2bacd:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2bad0:	8b 75 24             	mov    0x24(%ebp),%esi
   2bad3:	88 45 cf             	mov    %al,-0x31(%ebp)
   2bad6:	e8 f5 45 ff ff       	call   200d0 <malloc>
   2badb:	8b 4d c8             	mov    -0x38(%ebp),%ecx
   2bade:	89 c7                	mov    %eax,%edi
   2bae0:	85 c0                	test   %eax,%eax
   2bae2:	0f 84 08 01 00 00    	je     2bbf0 <ipc_call_async_slow+0x160>
   2bae8:	89 48 08             	mov    %ecx,0x8(%eax)
   2baeb:	89 70 0c             	mov    %esi,0xc(%eax)
   2baee:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2baf1:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2baf8:	89 47 10             	mov    %eax,0x10(%edi)
   2bafb:	8b 45 e0             	mov    -0x20(%ebp),%eax
   2bafe:	89 47 14             	mov    %eax,0x14(%edi)
   2bb01:	8b 45 dc             	mov    -0x24(%ebp),%eax
   2bb04:	89 47 18             	mov    %eax,0x18(%edi)
   2bb07:	8b 45 d8             	mov    -0x28(%ebp),%eax
   2bb0a:	89 47 1c             	mov    %eax,0x1c(%edi)
   2bb0d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
   2bb10:	89 47 20             	mov    %eax,0x20(%edi)
   2bb13:	8b 45 d0             	mov    -0x30(%ebp),%eax
   2bb16:	89 47 24             	mov    %eax,0x24(%edi)
   2bb19:	e8 b2 d1 fe ff       	call   18cd0 <futex_down>
   2bb1e:	8d 47 10             	lea    0x10(%edi),%eax
   2bb21:	c7 44 24 18 15 00 00 	movl   $0x15,0x18(%esp)
   2bb28:	00 
   2bb29:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2bb30:	00 
   2bb31:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2bb38:	00 
   2bb39:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2bb40:	00 
   2bb41:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2bb48:	00 
   2bb49:	89 44 24 04          	mov    %eax,0x4(%esp)
   2bb4d:	89 1c 24             	mov    %ebx,(%esp)
   2bb50:	ff 15 54 06 03 00    	call   *0x30654
   2bb56:	83 f8 ff             	cmp    $0xffffffff,%eax
   2bb59:	0f 84 b9 00 00 00    	je     2bc18 <ipc_call_async_slow+0x188>
   2bb5f:	83 f8 fe             	cmp    $0xfffffffe,%eax
   2bb62:	74 34                	je     2bb98 <ipc_call_async_slow+0x108>
   2bb64:	89 47 10             	mov    %eax,0x10(%edi)
   2bb67:	a1 60 06 03 00       	mov    0x30660,%eax
   2bb6c:	c7 47 04 60 06 03 00 	movl   $0x30660,0x4(%edi)
   2bb73:	89 07                	mov    %eax,(%edi)
   2bb75:	89 78 04             	mov    %edi,0x4(%eax)
   2bb78:	89 3d 60 06 03 00    	mov    %edi,0x30660
   2bb7e:	c7 45 08 68 06 03 00 	movl   $0x30668,0x8(%ebp)
   2bb85:	83 c4 4c             	add    $0x4c,%esp
   2bb88:	5b                   	pop    %ebx
   2bb89:	5e                   	pop    %esi
   2bb8a:	5f                   	pop    %edi
   2bb8b:	5d                   	pop    %ebp
   2bb8c:	e9 9f d1 fe ff       	jmp    18d30 <futex_up>
   2bb91:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2bb98:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2bb9f:	e8 8c d1 fe ff       	call   18d30 <futex_up>
   2bba4:	c7 04 24 cc 05 03 00 	movl   $0x305cc,(%esp)
   2bbab:	89 5f 34             	mov    %ebx,0x34(%edi)
   2bbae:	e8 1d d1 fe ff       	call   18cd0 <futex_down>
   2bbb3:	a1 58 06 03 00       	mov    0x30658,%eax
   2bbb8:	c7 47 04 58 06 03 00 	movl   $0x30658,0x4(%edi)
   2bbbf:	89 07                	mov    %eax,(%edi)
   2bbc1:	89 3d 58 06 03 00    	mov    %edi,0x30658
   2bbc7:	89 78 04             	mov    %edi,0x4(%eax)
   2bbca:	80 7d cf 00          	cmpb   $0x0,-0x31(%ebp)
   2bbce:	0f 84 84 00 00 00    	je     2bc58 <ipc_call_async_slow+0x1c8>
   2bbd4:	e8 57 b4 fe ff       	call   17030 <fibril_get_id>
   2bbd9:	c7 45 08 01 00 00 00 	movl   $0x1,0x8(%ebp)
   2bbe0:	89 47 38             	mov    %eax,0x38(%edi)
   2bbe3:	83 c4 4c             	add    $0x4c,%esp
   2bbe6:	5b                   	pop    %ebx
   2bbe7:	5e                   	pop    %esi
   2bbe8:	5f                   	pop    %edi
   2bbe9:	5d                   	pop    %ebp
   2bbea:	e9 01 af fe ff       	jmp    16af0 <fibril_switch>
   2bbef:	90                   	nop
   2bbf0:	85 c9                	test   %ecx,%ecx
   2bbf2:	74 1c                	je     2bc10 <ipc_call_async_slow+0x180>
   2bbf4:	89 75 08             	mov    %esi,0x8(%ebp)
   2bbf7:	c7 45 10 00 00 00 00 	movl   $0x0,0x10(%ebp)
   2bbfe:	c7 45 0c fe ff ff ff 	movl   $0xfffffffe,0xc(%ebp)
   2bc05:	83 c4 4c             	add    $0x4c,%esp
   2bc08:	5b                   	pop    %ebx
   2bc09:	5e                   	pop    %esi
   2bc0a:	5f                   	pop    %edi
   2bc0b:	5d                   	pop    %ebp
   2bc0c:	ff e1                	jmp    *%ecx
   2bc0e:	66 90                	xchg   %ax,%ax
   2bc10:	83 c4 4c             	add    $0x4c,%esp
   2bc13:	5b                   	pop    %ebx
   2bc14:	5e                   	pop    %esi
   2bc15:	5f                   	pop    %edi
   2bc16:	5d                   	pop    %ebp
   2bc17:	c3                   	ret    
   2bc18:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2bc1f:	e8 0c d1 fe ff       	call   18d30 <futex_up>
   2bc24:	8b 47 08             	mov    0x8(%edi),%eax
   2bc27:	85 c0                	test   %eax,%eax
   2bc29:	74 18                	je     2bc43 <ipc_call_async_slow+0x1b3>
   2bc2b:	8b 4f 0c             	mov    0xc(%edi),%ecx
   2bc2e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2bc35:	00 
   2bc36:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%esp)
   2bc3d:	ff 
   2bc3e:	89 0c 24             	mov    %ecx,(%esp)
   2bc41:	ff d0                	call   *%eax
   2bc43:	89 7d 08             	mov    %edi,0x8(%ebp)
   2bc46:	83 c4 4c             	add    $0x4c,%esp
   2bc49:	5b                   	pop    %ebx
   2bc4a:	5e                   	pop    %esi
   2bc4b:	5f                   	pop    %edi
   2bc4c:	5d                   	pop    %ebp
   2bc4d:	e9 8e 45 ff ff       	jmp    201e0 <free>
   2bc52:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2bc58:	c7 47 38 00 00 00 00 	movl   $0x0,0x38(%edi)
   2bc5f:	c7 45 08 cc 05 03 00 	movl   $0x305cc,0x8(%ebp)
   2bc66:	e9 1a ff ff ff       	jmp    2bb85 <ipc_call_async_slow+0xf5>
   2bc6b:	90                   	nop
   2bc6c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0002bc70 <ipc_answer_fast>:
   2bc70:	55                   	push   %ebp
   2bc71:	89 e5                	mov    %esp,%ebp
   2bc73:	83 ec 28             	sub    $0x28,%esp
   2bc76:	8b 45 1c             	mov    0x1c(%ebp),%eax
   2bc79:	c7 44 24 18 16 00 00 	movl   $0x16,0x18(%esp)
   2bc80:	00 
   2bc81:	89 44 24 14          	mov    %eax,0x14(%esp)
   2bc85:	8b 45 18             	mov    0x18(%ebp),%eax
   2bc88:	89 44 24 10          	mov    %eax,0x10(%esp)
   2bc8c:	8b 45 14             	mov    0x14(%ebp),%eax
   2bc8f:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2bc93:	8b 45 10             	mov    0x10(%ebp),%eax
   2bc96:	89 44 24 08          	mov    %eax,0x8(%esp)
   2bc9a:	8b 45 0c             	mov    0xc(%ebp),%eax
   2bc9d:	89 44 24 04          	mov    %eax,0x4(%esp)
   2bca1:	8b 45 08             	mov    0x8(%ebp),%eax
   2bca4:	89 04 24             	mov    %eax,(%esp)
   2bca7:	e8 64 ec ff ff       	call   2a910 <__syscall_slow>
   2bcac:	c9                   	leave  
   2bcad:	c3                   	ret    
   2bcae:	66 90                	xchg   %ax,%ax

0002bcb0 <ipc_answer_slow>:
   2bcb0:	55                   	push   %ebp
   2bcb1:	89 e5                	mov    %esp,%ebp
   2bcb3:	83 ec 58             	sub    $0x58,%esp
   2bcb6:	8b 45 0c             	mov    0xc(%ebp),%eax
   2bcb9:	c7 44 24 18 17 00 00 	movl   $0x17,0x18(%esp)
   2bcc0:	00 
   2bcc1:	89 45 d4             	mov    %eax,-0x2c(%ebp)
   2bcc4:	8b 45 10             	mov    0x10(%ebp),%eax
   2bcc7:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2bcca:	8b 45 14             	mov    0x14(%ebp),%eax
   2bccd:	89 45 dc             	mov    %eax,-0x24(%ebp)
   2bcd0:	8b 45 18             	mov    0x18(%ebp),%eax
   2bcd3:	89 45 e0             	mov    %eax,-0x20(%ebp)
   2bcd6:	8b 45 1c             	mov    0x1c(%ebp),%eax
   2bcd9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   2bcdc:	8b 45 20             	mov    0x20(%ebp),%eax
   2bcdf:	89 45 e8             	mov    %eax,-0x18(%ebp)
   2bce2:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   2bce5:	89 44 24 04          	mov    %eax,0x4(%esp)
   2bce9:	8b 45 08             	mov    0x8(%ebp),%eax
   2bcec:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2bcf3:	00 
   2bcf4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2bcfb:	00 
   2bcfc:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2bd03:	00 
   2bd04:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2bd0b:	00 
   2bd0c:	89 04 24             	mov    %eax,(%esp)
   2bd0f:	ff 15 54 06 03 00    	call   *0x30654
   2bd15:	c9                   	leave  
   2bd16:	c3                   	ret    
   2bd17:	89 f6                	mov    %esi,%esi
   2bd19:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002bd20 <ipc_wait_cycle>:
   2bd20:	55                   	push   %ebp
   2bd21:	89 e5                	mov    %esp,%ebp
   2bd23:	57                   	push   %edi
   2bd24:	56                   	push   %esi
   2bd25:	53                   	push   %ebx
   2bd26:	83 ec 2c             	sub    $0x2c,%esp
   2bd29:	8b 45 10             	mov    0x10(%ebp),%eax
   2bd2c:	8b 55 08             	mov    0x8(%ebp),%edx
   2bd2f:	89 44 24 08          	mov    %eax,0x8(%esp)
   2bd33:	8b 45 0c             	mov    0xc(%ebp),%eax
   2bd36:	c7 44 24 18 1a 00 00 	movl   $0x1a,0x18(%esp)
   2bd3d:	00 
   2bd3e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2bd45:	00 
   2bd46:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2bd4d:	00 
   2bd4e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2bd55:	00 
   2bd56:	89 44 24 04          	mov    %eax,0x4(%esp)
   2bd5a:	89 14 24             	mov    %edx,(%esp)
   2bd5d:	ff 15 54 06 03 00    	call   *0x30654
   2bd63:	89 c6                	mov    %eax,%esi
   2bd65:	a8 01                	test   $0x1,%al
   2bd67:	75 0f                	jne    2bd78 <ipc_wait_cycle+0x58>
   2bd69:	83 c4 2c             	add    $0x2c,%esp
   2bd6c:	89 f0                	mov    %esi,%eax
   2bd6e:	5b                   	pop    %ebx
   2bd6f:	5e                   	pop    %esi
   2bd70:	5f                   	pop    %edi
   2bd71:	5d                   	pop    %ebp
   2bd72:	c3                   	ret    
   2bd73:	90                   	nop
   2bd74:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2bd78:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2bd7f:	89 c7                	mov    %eax,%edi
   2bd81:	e8 4a cf fe ff       	call   18cd0 <futex_down>
   2bd86:	8b 1d 64 06 03 00    	mov    0x30664,%ebx
   2bd8c:	83 e7 fe             	and    $0xfffffffe,%edi
   2bd8f:	81 fb 60 06 03 00    	cmp    $0x30660,%ebx
   2bd95:	75 14                	jne    2bdab <ipc_wait_cycle+0x8b>
   2bd97:	eb 77                	jmp    2be10 <ipc_wait_cycle+0xf0>
   2bd99:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2bda0:	8b 5b 04             	mov    0x4(%ebx),%ebx
   2bda3:	81 fb 60 06 03 00    	cmp    $0x30660,%ebx
   2bda9:	74 65                	je     2be10 <ipc_wait_cycle+0xf0>
   2bdab:	3b 7b 10             	cmp    0x10(%ebx),%edi
   2bdae:	75 f0                	jne    2bda0 <ipc_wait_cycle+0x80>
   2bdb0:	8b 13                	mov    (%ebx),%edx
   2bdb2:	85 d2                	test   %edx,%edx
   2bdb4:	74 0e                	je     2bdc4 <ipc_wait_cycle+0xa4>
   2bdb6:	8b 43 04             	mov    0x4(%ebx),%eax
   2bdb9:	85 c0                	test   %eax,%eax
   2bdbb:	74 07                	je     2bdc4 <ipc_wait_cycle+0xa4>
   2bdbd:	89 10                	mov    %edx,(%eax)
   2bdbf:	8b 13                	mov    (%ebx),%edx
   2bdc1:	89 42 04             	mov    %eax,0x4(%edx)
   2bdc4:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   2bdca:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   2bdd1:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2bdd8:	e8 53 cf fe ff       	call   18d30 <futex_up>
   2bddd:	8b 43 08             	mov    0x8(%ebx),%eax
   2bde0:	85 c0                	test   %eax,%eax
   2bde2:	74 15                	je     2bdf9 <ipc_wait_cycle+0xd9>
   2bde4:	8b 4d 08             	mov    0x8(%ebp),%ecx
   2bde7:	89 4c 24 08          	mov    %ecx,0x8(%esp)
   2bdeb:	8b 11                	mov    (%ecx),%edx
   2bded:	89 54 24 04          	mov    %edx,0x4(%esp)
   2bdf1:	8b 53 0c             	mov    0xc(%ebx),%edx
   2bdf4:	89 14 24             	mov    %edx,(%esp)
   2bdf7:	ff d0                	call   *%eax
   2bdf9:	89 1c 24             	mov    %ebx,(%esp)
   2bdfc:	e8 df 43 ff ff       	call   201e0 <free>
   2be01:	e8 fa f8 ff ff       	call   2b700 <dispatch_queued_calls>
   2be06:	83 c4 2c             	add    $0x2c,%esp
   2be09:	89 f0                	mov    %esi,%eax
   2be0b:	5b                   	pop    %ebx
   2be0c:	5e                   	pop    %esi
   2be0d:	5f                   	pop    %edi
   2be0e:	5d                   	pop    %ebp
   2be0f:	c3                   	ret    
   2be10:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2be17:	e8 14 cf fe ff       	call   18d30 <futex_up>
   2be1c:	eb e3                	jmp    2be01 <ipc_wait_cycle+0xe1>
   2be1e:	66 90                	xchg   %ax,%ax

0002be20 <ipc_poke>:
   2be20:	55                   	push   %ebp
   2be21:	89 e5                	mov    %esp,%ebp
   2be23:	83 ec 28             	sub    $0x28,%esp
   2be26:	c7 44 24 18 1b 00 00 	movl   $0x1b,0x18(%esp)
   2be2d:	00 
   2be2e:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2be35:	00 
   2be36:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2be3d:	00 
   2be3e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2be45:	00 
   2be46:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2be4d:	00 
   2be4e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2be55:	00 
   2be56:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
   2be5d:	ff 15 54 06 03 00    	call   *0x30654
   2be63:	c9                   	leave  
   2be64:	c3                   	ret    
   2be65:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2be69:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002be70 <ipc_wait_for_call_timeout>:
   2be70:	55                   	push   %ebp
   2be71:	89 e5                	mov    %esp,%ebp
   2be73:	57                   	push   %edi
   2be74:	56                   	push   %esi
   2be75:	53                   	push   %ebx
   2be76:	83 ec 3c             	sub    $0x3c,%esp
   2be79:	8b 75 08             	mov    0x8(%ebp),%esi
   2be7c:	8b 7d 0c             	mov    0xc(%ebp),%edi
   2be7f:	c7 44 24 18 1a 00 00 	movl   $0x1a,0x18(%esp)
   2be86:	00 
   2be87:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2be8e:	00 
   2be8f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2be96:	00 
   2be97:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2be9e:	00 
   2be9f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2bea6:	00 
   2bea7:	89 7c 24 04          	mov    %edi,0x4(%esp)
   2beab:	89 34 24             	mov    %esi,(%esp)
   2beae:	ff 15 54 06 03 00    	call   *0x30654
   2beb4:	a8 01                	test   $0x1,%al
   2beb6:	75 08                	jne    2bec0 <ipc_wait_for_call_timeout+0x50>
   2beb8:	83 c4 3c             	add    $0x3c,%esp
   2bebb:	5b                   	pop    %ebx
   2bebc:	5e                   	pop    %esi
   2bebd:	5f                   	pop    %edi
   2bebe:	5d                   	pop    %ebp
   2bebf:	c3                   	ret    
   2bec0:	89 c2                	mov    %eax,%edx
   2bec2:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2bec9:	83 e2 fe             	and    $0xfffffffe,%edx
   2becc:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   2becf:	e8 fc cd fe ff       	call   18cd0 <futex_down>
   2bed4:	8b 1d 64 06 03 00    	mov    0x30664,%ebx
   2beda:	8b 55 e4             	mov    -0x1c(%ebp),%edx
   2bedd:	81 fb 60 06 03 00    	cmp    $0x30660,%ebx
   2bee3:	75 0e                	jne    2bef3 <ipc_wait_for_call_timeout+0x83>
   2bee5:	eb 69                	jmp    2bf50 <ipc_wait_for_call_timeout+0xe0>
   2bee7:	90                   	nop
   2bee8:	8b 5b 04             	mov    0x4(%ebx),%ebx
   2beeb:	81 fb 60 06 03 00    	cmp    $0x30660,%ebx
   2bef1:	74 5d                	je     2bf50 <ipc_wait_for_call_timeout+0xe0>
   2bef3:	3b 53 10             	cmp    0x10(%ebx),%edx
   2bef6:	75 f0                	jne    2bee8 <ipc_wait_for_call_timeout+0x78>
   2bef8:	8b 13                	mov    (%ebx),%edx
   2befa:	85 d2                	test   %edx,%edx
   2befc:	74 0e                	je     2bf0c <ipc_wait_for_call_timeout+0x9c>
   2befe:	8b 43 04             	mov    0x4(%ebx),%eax
   2bf01:	85 c0                	test   %eax,%eax
   2bf03:	74 07                	je     2bf0c <ipc_wait_for_call_timeout+0x9c>
   2bf05:	89 10                	mov    %edx,(%eax)
   2bf07:	8b 13                	mov    (%ebx),%edx
   2bf09:	89 42 04             	mov    %eax,0x4(%edx)
   2bf0c:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   2bf12:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   2bf19:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2bf20:	e8 0b ce fe ff       	call   18d30 <futex_up>
   2bf25:	8b 43 08             	mov    0x8(%ebx),%eax
   2bf28:	85 c0                	test   %eax,%eax
   2bf2a:	74 12                	je     2bf3e <ipc_wait_for_call_timeout+0xce>
   2bf2c:	89 74 24 08          	mov    %esi,0x8(%esp)
   2bf30:	8b 16                	mov    (%esi),%edx
   2bf32:	89 54 24 04          	mov    %edx,0x4(%esp)
   2bf36:	8b 53 0c             	mov    0xc(%ebx),%edx
   2bf39:	89 14 24             	mov    %edx,(%esp)
   2bf3c:	ff d0                	call   *%eax
   2bf3e:	89 1c 24             	mov    %ebx,(%esp)
   2bf41:	e8 9a 42 ff ff       	call   201e0 <free>
   2bf46:	e8 b5 f7 ff ff       	call   2b700 <dispatch_queued_calls>
   2bf4b:	e9 2f ff ff ff       	jmp    2be7f <ipc_wait_for_call_timeout+0xf>
   2bf50:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2bf57:	e8 d4 cd fe ff       	call   18d30 <futex_up>
   2bf5c:	eb e8                	jmp    2bf46 <ipc_wait_for_call_timeout+0xd6>
   2bf5e:	66 90                	xchg   %ax,%ax

0002bf60 <ipc_trywait_for_call>:
   2bf60:	55                   	push   %ebp
   2bf61:	89 e5                	mov    %esp,%ebp
   2bf63:	57                   	push   %edi
   2bf64:	56                   	push   %esi
   2bf65:	53                   	push   %ebx
   2bf66:	83 ec 2c             	sub    $0x2c,%esp
   2bf69:	8b 7d 08             	mov    0x8(%ebp),%edi
   2bf6c:	c7 44 24 18 1a 00 00 	movl   $0x1a,0x18(%esp)
   2bf73:	00 
   2bf74:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2bf7b:	00 
   2bf7c:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2bf83:	00 
   2bf84:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2bf8b:	00 
   2bf8c:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)
   2bf93:	00 
   2bf94:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2bf9b:	00 
   2bf9c:	89 3c 24             	mov    %edi,(%esp)
   2bf9f:	ff 15 54 06 03 00    	call   *0x30654
   2bfa5:	a8 01                	test   $0x1,%al
   2bfa7:	75 0f                	jne    2bfb8 <ipc_trywait_for_call+0x58>
   2bfa9:	83 c4 2c             	add    $0x2c,%esp
   2bfac:	5b                   	pop    %ebx
   2bfad:	5e                   	pop    %esi
   2bfae:	5f                   	pop    %edi
   2bfaf:	5d                   	pop    %ebp
   2bfb0:	c3                   	ret    
   2bfb1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2bfb8:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2bfbf:	89 c6                	mov    %eax,%esi
   2bfc1:	e8 0a cd fe ff       	call   18cd0 <futex_down>
   2bfc6:	8b 1d 64 06 03 00    	mov    0x30664,%ebx
   2bfcc:	83 e6 fe             	and    $0xfffffffe,%esi
   2bfcf:	81 fb 60 06 03 00    	cmp    $0x30660,%ebx
   2bfd5:	75 14                	jne    2bfeb <ipc_trywait_for_call+0x8b>
   2bfd7:	eb 6f                	jmp    2c048 <ipc_trywait_for_call+0xe8>
   2bfd9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2bfe0:	8b 5b 04             	mov    0x4(%ebx),%ebx
   2bfe3:	81 fb 60 06 03 00    	cmp    $0x30660,%ebx
   2bfe9:	74 5d                	je     2c048 <ipc_trywait_for_call+0xe8>
   2bfeb:	3b 73 10             	cmp    0x10(%ebx),%esi
   2bfee:	75 f0                	jne    2bfe0 <ipc_trywait_for_call+0x80>
   2bff0:	8b 13                	mov    (%ebx),%edx
   2bff2:	85 d2                	test   %edx,%edx
   2bff4:	74 0e                	je     2c004 <ipc_trywait_for_call+0xa4>
   2bff6:	8b 43 04             	mov    0x4(%ebx),%eax
   2bff9:	85 c0                	test   %eax,%eax
   2bffb:	74 07                	je     2c004 <ipc_trywait_for_call+0xa4>
   2bffd:	89 10                	mov    %edx,(%eax)
   2bfff:	8b 13                	mov    (%ebx),%edx
   2c001:	89 42 04             	mov    %eax,0x4(%edx)
   2c004:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
   2c00a:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
   2c011:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2c018:	e8 13 cd fe ff       	call   18d30 <futex_up>
   2c01d:	8b 43 08             	mov    0x8(%ebx),%eax
   2c020:	85 c0                	test   %eax,%eax
   2c022:	74 12                	je     2c036 <ipc_trywait_for_call+0xd6>
   2c024:	89 7c 24 08          	mov    %edi,0x8(%esp)
   2c028:	8b 17                	mov    (%edi),%edx
   2c02a:	89 54 24 04          	mov    %edx,0x4(%esp)
   2c02e:	8b 53 0c             	mov    0xc(%ebx),%edx
   2c031:	89 14 24             	mov    %edx,(%esp)
   2c034:	ff d0                	call   *%eax
   2c036:	89 1c 24             	mov    %ebx,(%esp)
   2c039:	e8 a2 41 ff ff       	call   201e0 <free>
   2c03e:	e8 bd f6 ff ff       	call   2b700 <dispatch_queued_calls>
   2c043:	e9 24 ff ff ff       	jmp    2bf6c <ipc_trywait_for_call+0xc>
   2c048:	c7 04 24 68 06 03 00 	movl   $0x30668,(%esp)
   2c04f:	e8 dc cc fe ff       	call   18d30 <futex_up>
   2c054:	eb e8                	jmp    2c03e <ipc_trywait_for_call+0xde>
   2c056:	8d 76 00             	lea    0x0(%esi),%esi
   2c059:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002c060 <ipc_hangup>:
   2c060:	55                   	push   %ebp
   2c061:	89 e5                	mov    %esp,%ebp
   2c063:	83 ec 28             	sub    $0x28,%esp
   2c066:	8b 45 08             	mov    0x8(%ebp),%eax
   2c069:	c7 44 24 18 1c 00 00 	movl   $0x1c,0x18(%esp)
   2c070:	00 
   2c071:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2c078:	00 
   2c079:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2c080:	00 
   2c081:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2c088:	00 
   2c089:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2c090:	00 
   2c091:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2c098:	00 
   2c099:	89 04 24             	mov    %eax,(%esp)
   2c09c:	ff 15 54 06 03 00    	call   *0x30654
   2c0a2:	c9                   	leave  
   2c0a3:	c3                   	ret    
   2c0a4:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2c0aa:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

0002c0b0 <ipc_forward_fast>:
   2c0b0:	55                   	push   %ebp
   2c0b1:	89 e5                	mov    %esp,%ebp
   2c0b3:	83 ec 28             	sub    $0x28,%esp
   2c0b6:	8b 45 1c             	mov    0x1c(%ebp),%eax
   2c0b9:	c7 44 24 18 18 00 00 	movl   $0x18,0x18(%esp)
   2c0c0:	00 
   2c0c1:	89 44 24 14          	mov    %eax,0x14(%esp)
   2c0c5:	8b 45 18             	mov    0x18(%ebp),%eax
   2c0c8:	89 44 24 10          	mov    %eax,0x10(%esp)
   2c0cc:	8b 45 14             	mov    0x14(%ebp),%eax
   2c0cf:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2c0d3:	8b 45 10             	mov    0x10(%ebp),%eax
   2c0d6:	89 44 24 08          	mov    %eax,0x8(%esp)
   2c0da:	8b 45 0c             	mov    0xc(%ebp),%eax
   2c0dd:	89 44 24 04          	mov    %eax,0x4(%esp)
   2c0e1:	8b 45 08             	mov    0x8(%ebp),%eax
   2c0e4:	89 04 24             	mov    %eax,(%esp)
   2c0e7:	e8 24 e8 ff ff       	call   2a910 <__syscall_slow>
   2c0ec:	c9                   	leave  
   2c0ed:	c3                   	ret    
   2c0ee:	66 90                	xchg   %ax,%ax

0002c0f0 <ipc_forward_slow>:
   2c0f0:	55                   	push   %ebp
   2c0f1:	89 e5                	mov    %esp,%ebp
   2c0f3:	83 ec 58             	sub    $0x58,%esp
   2c0f6:	8b 45 10             	mov    0x10(%ebp),%eax
   2c0f9:	c7 44 24 18 19 00 00 	movl   $0x19,0x18(%esp)
   2c100:	00 
   2c101:	89 45 d4             	mov    %eax,-0x2c(%ebp)
   2c104:	8b 45 14             	mov    0x14(%ebp),%eax
   2c107:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2c10a:	8b 45 18             	mov    0x18(%ebp),%eax
   2c10d:	89 45 dc             	mov    %eax,-0x24(%ebp)
   2c110:	8b 45 1c             	mov    0x1c(%ebp),%eax
   2c113:	89 45 e0             	mov    %eax,-0x20(%ebp)
   2c116:	8b 45 20             	mov    0x20(%ebp),%eax
   2c119:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   2c11c:	8b 45 24             	mov    0x24(%ebp),%eax
   2c11f:	89 45 e8             	mov    %eax,-0x18(%ebp)
   2c122:	8b 45 28             	mov    0x28(%ebp),%eax
   2c125:	89 44 24 0c          	mov    %eax,0xc(%esp)
   2c129:	8d 45 d4             	lea    -0x2c(%ebp),%eax
   2c12c:	89 44 24 08          	mov    %eax,0x8(%esp)
   2c130:	8b 45 0c             	mov    0xc(%ebp),%eax
   2c133:	89 44 24 04          	mov    %eax,0x4(%esp)
   2c137:	8b 45 08             	mov    0x8(%ebp),%eax
   2c13a:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2c141:	00 
   2c142:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2c149:	00 
   2c14a:	89 04 24             	mov    %eax,(%esp)
   2c14d:	ff 15 54 06 03 00    	call   *0x30654
   2c153:	c9                   	leave  
   2c154:	c3                   	ret    
   2c155:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2c159:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002c160 <ipc_connect_kbox>:
   2c160:	55                   	push   %ebp
   2c161:	89 e5                	mov    %esp,%ebp
   2c163:	83 ec 38             	sub    $0x38,%esp
   2c166:	8b 45 08             	mov    0x8(%ebp),%eax
   2c169:	8b 55 0c             	mov    0xc(%ebp),%edx
   2c16c:	89 45 f0             	mov    %eax,-0x10(%ebp)
   2c16f:	8d 45 f0             	lea    -0x10(%ebp),%eax
   2c172:	89 55 f4             	mov    %edx,-0xc(%ebp)
   2c175:	c7 44 24 18 1d 00 00 	movl   $0x1d,0x18(%esp)
   2c17c:	00 
   2c17d:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
   2c184:	00 
   2c185:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
   2c18c:	00 
   2c18d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
   2c194:	00 
   2c195:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
   2c19c:	00 
   2c19d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
   2c1a4:	00 
   2c1a5:	89 04 24             	mov    %eax,(%esp)
   2c1a8:	ff 15 54 06 03 00    	call   *0x30654
   2c1ae:	c9                   	leave  
   2c1af:	c3                   	ret    

0002c1b0 <pio_trace_log>:
   2c1b0:	55                   	push   %ebp
   2c1b1:	89 e5                	mov    %esp,%ebp
   2c1b3:	57                   	push   %edi
   2c1b4:	56                   	push   %esi
   2c1b5:	53                   	push   %ebx
   2c1b6:	83 ec 3c             	sub    $0x3c,%esp
   2c1b9:	8b 45 0c             	mov    0xc(%ebp),%eax
   2c1bc:	8b 75 08             	mov    0x8(%ebp),%esi
   2c1bf:	c7 04 24 74 06 03 00 	movl   $0x30674,(%esp)
   2c1c6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
   2c1c9:	8a 5d 10             	mov    0x10(%ebp),%bl
   2c1cc:	e8 8f b3 fe ff       	call   17560 <fibril_rwlock_read_lock>
   2c1d1:	a1 70 06 03 00       	mov    0x30670,%eax
   2c1d6:	3d 6c 06 03 00       	cmp    $0x3066c,%eax
   2c1db:	74 22                	je     2c1ff <pio_trace_log+0x4f>
   2c1dd:	8d 76 00             	lea    0x0(%esi),%esi
   2c1e0:	85 c0                	test   %eax,%eax
   2c1e2:	74 62                	je     2c246 <pio_trace_log+0x96>
   2c1e4:	8b 50 08             	mov    0x8(%eax),%edx
   2c1e7:	39 f2                	cmp    %esi,%edx
   2c1e9:	77 0a                	ja     2c1f5 <pio_trace_log+0x45>
   2c1eb:	8b 48 0c             	mov    0xc(%eax),%ecx
   2c1ee:	8d 3c 0a             	lea    (%edx,%ecx,1),%edi
   2c1f1:	39 fe                	cmp    %edi,%esi
   2c1f3:	72 23                	jb     2c218 <pio_trace_log+0x68>
   2c1f5:	8b 40 04             	mov    0x4(%eax),%eax
   2c1f8:	3d 6c 06 03 00       	cmp    $0x3066c,%eax
   2c1fd:	75 e1                	jne    2c1e0 <pio_trace_log+0x30>
   2c1ff:	c7 45 08 74 06 03 00 	movl   $0x30674,0x8(%ebp)
   2c206:	83 c4 3c             	add    $0x3c,%esp
   2c209:	5b                   	pop    %ebx
   2c20a:	5e                   	pop    %esi
   2c20b:	5f                   	pop    %edi
   2c20c:	5d                   	pop    %ebp
   2c20d:	e9 0e b5 fe ff       	jmp    17720 <fibril_rwlock_read_unlock>
   2c212:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2c218:	8b 78 14             	mov    0x14(%eax),%edi
   2c21b:	85 ff                	test   %edi,%edi
   2c21d:	74 e0                	je     2c1ff <pio_trace_log+0x4f>
   2c21f:	81 e3 ff 00 00 00    	and    $0xff,%ebx
   2c225:	89 5c 24 14          	mov    %ebx,0x14(%esp)
   2c229:	8b 40 10             	mov    0x10(%eax),%eax
   2c22c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
   2c230:	89 44 24 10          	mov    %eax,0x10(%esp)
   2c234:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2c237:	89 54 24 08          	mov    %edx,0x8(%esp)
   2c23b:	89 44 24 04          	mov    %eax,0x4(%esp)
   2c23f:	89 34 24             	mov    %esi,(%esp)
   2c242:	ff d7                	call   *%edi
   2c244:	eb b9                	jmp    2c1ff <pio_trace_log+0x4f>
   2c246:	c7 44 24 08 62 00 00 	movl   $0x62,0x8(%esp)
   2c24d:	00 
   2c24e:	c7 44 24 04 68 f2 02 	movl   $0x2f268,0x4(%esp)
   2c255:	00 
   2c256:	c7 04 24 45 d1 02 00 	movl   $0x2d145,(%esp)
   2c25d:	e8 4e e6 ff ff       	call   2a8b0 <assert_abort>
   2c262:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2c269:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002c270 <pio_trace_enable>:
   2c270:	55                   	push   %ebp
   2c271:	89 e5                	mov    %esp,%ebp
   2c273:	53                   	push   %ebx
   2c274:	83 ec 14             	sub    $0x14,%esp
   2c277:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)
   2c27e:	e8 4d 3e ff ff       	call   200d0 <malloc>
   2c283:	89 c3                	mov    %eax,%ebx
   2c285:	85 c0                	test   %eax,%eax
   2c287:	74 5f                	je     2c2e8 <pio_trace_enable+0x78>
   2c289:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   2c28f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   2c296:	8b 45 08             	mov    0x8(%ebp),%eax
   2c299:	c7 04 24 74 06 03 00 	movl   $0x30674,(%esp)
   2c2a0:	89 43 08             	mov    %eax,0x8(%ebx)
   2c2a3:	8b 45 14             	mov    0x14(%ebp),%eax
   2c2a6:	89 43 10             	mov    %eax,0x10(%ebx)
   2c2a9:	8b 45 0c             	mov    0xc(%ebp),%eax
   2c2ac:	89 43 0c             	mov    %eax,0xc(%ebx)
   2c2af:	8b 45 10             	mov    0x10(%ebp),%eax
   2c2b2:	89 43 14             	mov    %eax,0x14(%ebx)
   2c2b5:	e8 86 b3 fe ff       	call   17640 <fibril_rwlock_write_lock>
   2c2ba:	a1 6c 06 03 00       	mov    0x3066c,%eax
   2c2bf:	c7 43 04 6c 06 03 00 	movl   $0x3066c,0x4(%ebx)
   2c2c6:	89 03                	mov    %eax,(%ebx)
   2c2c8:	89 1d 6c 06 03 00    	mov    %ebx,0x3066c
   2c2ce:	89 58 04             	mov    %ebx,0x4(%eax)
   2c2d1:	c7 04 24 74 06 03 00 	movl   $0x30674,(%esp)
   2c2d8:	e8 a3 b4 fe ff       	call   17780 <fibril_rwlock_write_unlock>
   2c2dd:	83 c4 14             	add    $0x14,%esp
   2c2e0:	31 c0                	xor    %eax,%eax
   2c2e2:	5b                   	pop    %ebx
   2c2e3:	5d                   	pop    %ebp
   2c2e4:	c3                   	ret    
   2c2e5:	8d 76 00             	lea    0x0(%esi),%esi
   2c2e8:	83 c4 14             	add    $0x14,%esp
   2c2eb:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
   2c2f0:	5b                   	pop    %ebx
   2c2f1:	5d                   	pop    %ebp
   2c2f2:	c3                   	ret    
   2c2f3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2c2f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002c300 <pio_trace_disable>:
   2c300:	55                   	push   %ebp
   2c301:	89 e5                	mov    %esp,%ebp
   2c303:	56                   	push   %esi
   2c304:	53                   	push   %ebx
   2c305:	83 ec 10             	sub    $0x10,%esp
   2c308:	8b 75 08             	mov    0x8(%ebp),%esi
   2c30b:	c7 04 24 74 06 03 00 	movl   $0x30674,(%esp)
   2c312:	e8 29 b3 fe ff       	call   17640 <fibril_rwlock_write_lock>
   2c317:	a1 70 06 03 00       	mov    0x30670,%eax
   2c31c:	3d 6c 06 03 00       	cmp    $0x3066c,%eax
   2c321:	8b 58 04             	mov    0x4(%eax),%ebx
   2c324:	75 04                	jne    2c32a <pio_trace_disable+0x2a>
   2c326:	eb 45                	jmp    2c36d <pio_trace_disable+0x6d>
   2c328:	89 d3                	mov    %edx,%ebx
   2c32a:	8b 50 08             	mov    0x8(%eax),%edx
   2c32d:	39 f2                	cmp    %esi,%edx
   2c32f:	77 2f                	ja     2c360 <pio_trace_disable+0x60>
   2c331:	8b 48 0c             	mov    0xc(%eax),%ecx
   2c334:	01 ca                	add    %ecx,%edx
   2c336:	39 d6                	cmp    %edx,%esi
   2c338:	73 26                	jae    2c360 <pio_trace_disable+0x60>
   2c33a:	8b 10                	mov    (%eax),%edx
   2c33c:	85 d2                	test   %edx,%edx
   2c33e:	74 0b                	je     2c34b <pio_trace_disable+0x4b>
   2c340:	85 db                	test   %ebx,%ebx
   2c342:	74 07                	je     2c34b <pio_trace_disable+0x4b>
   2c344:	89 13                	mov    %edx,(%ebx)
   2c346:	8b 10                	mov    (%eax),%edx
   2c348:	89 5a 04             	mov    %ebx,0x4(%edx)
   2c34b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
   2c351:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
   2c358:	89 04 24             	mov    %eax,(%esp)
   2c35b:	e8 80 3e ff ff       	call   201e0 <free>
   2c360:	8b 53 04             	mov    0x4(%ebx),%edx
   2c363:	89 d8                	mov    %ebx,%eax
   2c365:	81 fb 6c 06 03 00    	cmp    $0x3066c,%ebx
   2c36b:	75 bb                	jne    2c328 <pio_trace_disable+0x28>
   2c36d:	c7 45 08 74 06 03 00 	movl   $0x30674,0x8(%ebp)
   2c374:	83 c4 10             	add    $0x10,%esp
   2c377:	5b                   	pop    %ebx
   2c378:	5e                   	pop    %esi
   2c379:	5d                   	pop    %ebp
   2c37a:	e9 01 b4 fe ff       	jmp    17780 <fibril_rwlock_write_unlock>
   2c37f:	90                   	nop

0002c380 <__divsi3>:
   2c380:	55                   	push   %ebp
   2c381:	31 c0                	xor    %eax,%eax
   2c383:	89 e5                	mov    %esp,%ebp
   2c385:	57                   	push   %edi
   2c386:	56                   	push   %esi
   2c387:	53                   	push   %ebx
   2c388:	51                   	push   %ecx
   2c389:	8b 55 0c             	mov    0xc(%ebp),%edx
   2c38c:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   2c38f:	c1 fa 1f             	sar    $0x1f,%edx
   2c392:	31 d1                	xor    %edx,%ecx
   2c394:	29 d1                	sub    %edx,%ecx
   2c396:	74 4d                	je     2c3e5 <__divsi3+0x65>
   2c398:	8b 55 08             	mov    0x8(%ebp),%edx
   2c39b:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2c39e:	c1 fa 1f             	sar    $0x1f,%edx
   2c3a1:	31 d3                	xor    %edx,%ebx
   2c3a3:	29 d3                	sub    %edx,%ebx
   2c3a5:	39 d9                	cmp    %ebx,%ecx
   2c3a7:	77 3c                	ja     2c3e5 <__divsi3+0x65>
   2c3a9:	bf 20 00 00 00       	mov    $0x20,%edi
   2c3ae:	31 d2                	xor    %edx,%edx
   2c3b0:	31 f6                	xor    %esi,%esi
   2c3b2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2c3b8:	8d 04 12             	lea    (%edx,%edx,1),%eax
   2c3bb:	89 da                	mov    %ebx,%edx
   2c3bd:	c1 ea 1f             	shr    $0x1f,%edx
   2c3c0:	09 c2                	or     %eax,%edx
   2c3c2:	8d 04 36             	lea    (%esi,%esi,1),%eax
   2c3c5:	89 d6                	mov    %edx,%esi
   2c3c7:	29 ce                	sub    %ecx,%esi
   2c3c9:	89 75 f0             	mov    %esi,-0x10(%ebp)
   2c3cc:	89 c6                	mov    %eax,%esi
   2c3ce:	83 ce 01             	or     $0x1,%esi
   2c3d1:	39 d1                	cmp    %edx,%ecx
   2c3d3:	77 02                	ja     2c3d7 <__divsi3+0x57>
   2c3d5:	89 f0                	mov    %esi,%eax
   2c3d7:	89 c6                	mov    %eax,%esi
   2c3d9:	39 d1                	cmp    %edx,%ecx
   2c3db:	77 03                	ja     2c3e0 <__divsi3+0x60>
   2c3dd:	8b 55 f0             	mov    -0x10(%ebp),%edx
   2c3e0:	01 db                	add    %ebx,%ebx
   2c3e2:	4f                   	dec    %edi
   2c3e3:	75 d3                	jne    2c3b8 <__divsi3+0x38>
   2c3e5:	8b 55 0c             	mov    0xc(%ebp),%edx
   2c3e8:	8b 4d 08             	mov    0x8(%ebp),%ecx
   2c3eb:	c1 e9 1f             	shr    $0x1f,%ecx
   2c3ee:	83 f2 ff             	xor    $0xffffffff,%edx
   2c3f1:	c1 ea 1f             	shr    $0x1f,%edx
   2c3f4:	31 ca                	xor    %ecx,%edx
   2c3f6:	75 02                	jne    2c3fa <__divsi3+0x7a>
   2c3f8:	f7 d8                	neg    %eax
   2c3fa:	5a                   	pop    %edx
   2c3fb:	5b                   	pop    %ebx
   2c3fc:	5e                   	pop    %esi
   2c3fd:	5f                   	pop    %edi
   2c3fe:	5d                   	pop    %ebp
   2c3ff:	c3                   	ret    

0002c400 <__divdi3>:
   2c400:	55                   	push   %ebp
   2c401:	89 e5                	mov    %esp,%ebp
   2c403:	57                   	push   %edi
   2c404:	56                   	push   %esi
   2c405:	53                   	push   %ebx
   2c406:	83 ec 34             	sub    $0x34,%esp
   2c409:	8b 55 0c             	mov    0xc(%ebp),%edx
   2c40c:	8b 4d 14             	mov    0x14(%ebp),%ecx
   2c40f:	89 55 c4             	mov    %edx,-0x3c(%ebp)
   2c412:	8b 55 10             	mov    0x10(%ebp),%edx
   2c415:	89 55 c8             	mov    %edx,-0x38(%ebp)
   2c418:	89 ca                	mov    %ecx,%edx
   2c41a:	c1 fa 1f             	sar    $0x1f,%edx
   2c41d:	8b 45 08             	mov    0x8(%ebp),%eax
   2c420:	89 4d cc             	mov    %ecx,-0x34(%ebp)
   2c423:	89 45 c0             	mov    %eax,-0x40(%ebp)
   2c426:	8b 4d c8             	mov    -0x38(%ebp),%ecx
   2c429:	89 d0                	mov    %edx,%eax
   2c42b:	31 c1                	xor    %eax,%ecx
   2c42d:	8b 5d cc             	mov    -0x34(%ebp),%ebx
   2c430:	89 4d e8             	mov    %ecx,-0x18(%ebp)
   2c433:	31 d3                	xor    %edx,%ebx
   2c435:	29 45 e8             	sub    %eax,-0x18(%ebp)
   2c438:	89 5d ec             	mov    %ebx,-0x14(%ebp)
   2c43b:	19 55 ec             	sbb    %edx,-0x14(%ebp)
   2c43e:	31 c0                	xor    %eax,%eax
   2c440:	8b 4d ec             	mov    -0x14(%ebp),%ecx
   2c443:	31 d2                	xor    %edx,%edx
   2c445:	0b 4d e8             	or     -0x18(%ebp),%ecx
   2c448:	74 2a                	je     2c474 <__divdi3+0x74>
   2c44a:	8b 55 c4             	mov    -0x3c(%ebp),%edx
   2c44d:	8b 5d c0             	mov    -0x40(%ebp),%ebx
   2c450:	c1 fa 1f             	sar    $0x1f,%edx
   2c453:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
   2c456:	89 d0                	mov    %edx,%eax
   2c458:	31 d1                	xor    %edx,%ecx
   2c45a:	31 c3                	xor    %eax,%ebx
   2c45c:	89 4d dc             	mov    %ecx,-0x24(%ebp)
   2c45f:	89 5d d8             	mov    %ebx,-0x28(%ebp)
   2c462:	29 45 d8             	sub    %eax,-0x28(%ebp)
   2c465:	19 55 dc             	sbb    %edx,-0x24(%ebp)
   2c468:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   2c46b:	39 5d ec             	cmp    %ebx,-0x14(%ebp)
   2c46e:	76 28                	jbe    2c498 <__divdi3+0x98>
   2c470:	31 c0                	xor    %eax,%eax
   2c472:	31 d2                	xor    %edx,%edx
   2c474:	8b 5d cc             	mov    -0x34(%ebp),%ebx
   2c477:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
   2c47a:	c1 e9 1f             	shr    $0x1f,%ecx
   2c47d:	83 f3 ff             	xor    $0xffffffff,%ebx
   2c480:	c1 eb 1f             	shr    $0x1f,%ebx
   2c483:	38 cb                	cmp    %cl,%bl
   2c485:	75 07                	jne    2c48e <__divdi3+0x8e>
   2c487:	f7 d8                	neg    %eax
   2c489:	83 d2 00             	adc    $0x0,%edx
   2c48c:	f7 da                	neg    %edx
   2c48e:	83 c4 34             	add    $0x34,%esp
   2c491:	5b                   	pop    %ebx
   2c492:	5e                   	pop    %esi
   2c493:	5f                   	pop    %edi
   2c494:	5d                   	pop    %ebp
   2c495:	c3                   	ret    
   2c496:	66 90                	xchg   %ax,%ax
   2c498:	0f 83 94 00 00 00    	jae    2c532 <__divdi3+0x132>
   2c49e:	31 c9                	xor    %ecx,%ecx
   2c4a0:	31 db                	xor    %ebx,%ebx
   2c4a2:	c7 45 d4 40 00 00 00 	movl   $0x40,-0x2c(%ebp)
   2c4a9:	31 c0                	xor    %eax,%eax
   2c4ab:	31 d2                	xor    %edx,%edx
   2c4ad:	89 4d e0             	mov    %ecx,-0x20(%ebp)
   2c4b0:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
   2c4b3:	eb 2d                	jmp    2c4e2 <__divdi3+0xe2>
   2c4b5:	8d 76 00             	lea    0x0(%esi),%esi
   2c4b8:	72 05                	jb     2c4bf <__divdi3+0xbf>
   2c4ba:	39 75 e8             	cmp    %esi,-0x18(%ebp)
   2c4bd:	77 6d                	ja     2c52c <__divdi3+0x12c>
   2c4bf:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   2c4c2:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   2c4c5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
   2c4c8:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
   2c4cb:	8b 4d d8             	mov    -0x28(%ebp),%ecx
   2c4ce:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   2c4d1:	0f a4 cb 01          	shld   $0x1,%ecx,%ebx
   2c4d5:	01 c9                	add    %ecx,%ecx
   2c4d7:	ff 4d d4             	decl   -0x2c(%ebp)
   2c4da:	89 4d d8             	mov    %ecx,-0x28(%ebp)
   2c4dd:	89 5d dc             	mov    %ebx,-0x24(%ebp)
   2c4e0:	74 92                	je     2c474 <__divdi3+0x74>
   2c4e2:	8b 4d e0             	mov    -0x20(%ebp),%ecx
   2c4e5:	8b 5d e4             	mov    -0x1c(%ebp),%ebx
   2c4e8:	8b 75 dc             	mov    -0x24(%ebp),%esi
   2c4eb:	0f a4 cb 01          	shld   $0x1,%ecx,%ebx
   2c4ef:	c1 ee 1f             	shr    $0x1f,%esi
   2c4f2:	01 c9                	add    %ecx,%ecx
   2c4f4:	09 ce                	or     %ecx,%esi
   2c4f6:	89 df                	mov    %ebx,%edi
   2c4f8:	89 f1                	mov    %esi,%ecx
   2c4fa:	0f a4 c2 01          	shld   $0x1,%eax,%edx
   2c4fe:	01 c0                	add    %eax,%eax
   2c500:	2b 4d e8             	sub    -0x18(%ebp),%ecx
   2c503:	1b 5d ec             	sbb    -0x14(%ebp),%ebx
   2c506:	89 4d e0             	mov    %ecx,-0x20(%ebp)
   2c509:	89 c1                	mov    %eax,%ecx
   2c50b:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
   2c50e:	83 c9 01             	or     $0x1,%ecx
   2c511:	89 d3                	mov    %edx,%ebx
   2c513:	39 7d ec             	cmp    %edi,-0x14(%ebp)
   2c516:	77 07                	ja     2c51f <__divdi3+0x11f>
   2c518:	72 09                	jb     2c523 <__divdi3+0x123>
   2c51a:	39 75 e8             	cmp    %esi,-0x18(%ebp)
   2c51d:	76 04                	jbe    2c523 <__divdi3+0x123>
   2c51f:	89 c1                	mov    %eax,%ecx
   2c521:	89 d3                	mov    %edx,%ebx
   2c523:	89 c8                	mov    %ecx,%eax
   2c525:	89 da                	mov    %ebx,%edx
   2c527:	39 7d ec             	cmp    %edi,-0x14(%ebp)
   2c52a:	76 8c                	jbe    2c4b8 <__divdi3+0xb8>
   2c52c:	89 f1                	mov    %esi,%ecx
   2c52e:	89 fb                	mov    %edi,%ebx
   2c530:	eb 93                	jmp    2c4c5 <__divdi3+0xc5>
   2c532:	8b 45 d8             	mov    -0x28(%ebp),%eax
   2c535:	39 45 e8             	cmp    %eax,-0x18(%ebp)
   2c538:	0f 87 32 ff ff ff    	ja     2c470 <__divdi3+0x70>
   2c53e:	e9 5b ff ff ff       	jmp    2c49e <__divdi3+0x9e>
   2c543:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2c549:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002c550 <__udivsi3>:
   2c550:	55                   	push   %ebp
   2c551:	31 c0                	xor    %eax,%eax
   2c553:	89 e5                	mov    %esp,%ebp
   2c555:	57                   	push   %edi
   2c556:	56                   	push   %esi
   2c557:	53                   	push   %ebx
   2c558:	56                   	push   %esi
   2c559:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   2c55c:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2c55f:	85 c9                	test   %ecx,%ecx
   2c561:	74 37                	je     2c59a <__udivsi3+0x4a>
   2c563:	39 cb                	cmp    %ecx,%ebx
   2c565:	72 33                	jb     2c59a <__udivsi3+0x4a>
   2c567:	bf 20 00 00 00       	mov    $0x20,%edi
   2c56c:	31 d2                	xor    %edx,%edx
   2c56e:	66 90                	xchg   %ax,%ax
   2c570:	8d 34 12             	lea    (%edx,%edx,1),%esi
   2c573:	89 da                	mov    %ebx,%edx
   2c575:	c1 ea 1f             	shr    $0x1f,%edx
   2c578:	01 c0                	add    %eax,%eax
   2c57a:	09 f2                	or     %esi,%edx
   2c57c:	89 d6                	mov    %edx,%esi
   2c57e:	29 ce                	sub    %ecx,%esi
   2c580:	89 75 f0             	mov    %esi,-0x10(%ebp)
   2c583:	89 c6                	mov    %eax,%esi
   2c585:	83 ce 01             	or     $0x1,%esi
   2c588:	39 d1                	cmp    %edx,%ecx
   2c58a:	77 02                	ja     2c58e <__udivsi3+0x3e>
   2c58c:	89 f0                	mov    %esi,%eax
   2c58e:	39 d1                	cmp    %edx,%ecx
   2c590:	77 03                	ja     2c595 <__udivsi3+0x45>
   2c592:	8b 55 f0             	mov    -0x10(%ebp),%edx
   2c595:	01 db                	add    %ebx,%ebx
   2c597:	4f                   	dec    %edi
   2c598:	75 d6                	jne    2c570 <__udivsi3+0x20>
   2c59a:	5b                   	pop    %ebx
   2c59b:	5b                   	pop    %ebx
   2c59c:	5e                   	pop    %esi
   2c59d:	5f                   	pop    %edi
   2c59e:	5d                   	pop    %ebp
   2c59f:	c3                   	ret    

0002c5a0 <__udivdi3>:
   2c5a0:	55                   	push   %ebp
   2c5a1:	89 e5                	mov    %esp,%ebp
   2c5a3:	57                   	push   %edi
   2c5a4:	56                   	push   %esi
   2c5a5:	53                   	push   %ebx
   2c5a6:	83 ec 24             	sub    $0x24,%esp
   2c5a9:	8b 55 0c             	mov    0xc(%ebp),%edx
   2c5ac:	8b 45 08             	mov    0x8(%ebp),%eax
   2c5af:	89 55 dc             	mov    %edx,-0x24(%ebp)
   2c5b2:	8b 55 14             	mov    0x14(%ebp),%edx
   2c5b5:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   2c5b8:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2c5bb:	8b 45 10             	mov    0x10(%ebp),%eax
   2c5be:	8b 75 e4             	mov    -0x1c(%ebp),%esi
   2c5c1:	89 45 e0             	mov    %eax,-0x20(%ebp)
   2c5c4:	31 d2                	xor    %edx,%edx
   2c5c6:	31 c0                	xor    %eax,%eax
   2c5c8:	0b 75 e0             	or     -0x20(%ebp),%esi
   2c5cb:	74 0c                	je     2c5d9 <__udivdi3+0x39>
   2c5cd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2c5d0:	39 45 dc             	cmp    %eax,-0x24(%ebp)
   2c5d3:	73 13                	jae    2c5e8 <__udivdi3+0x48>
   2c5d5:	31 c0                	xor    %eax,%eax
   2c5d7:	31 d2                	xor    %edx,%edx
   2c5d9:	83 c4 24             	add    $0x24,%esp
   2c5dc:	5b                   	pop    %ebx
   2c5dd:	5e                   	pop    %esi
   2c5de:	5f                   	pop    %edi
   2c5df:	5d                   	pop    %ebp
   2c5e0:	c3                   	ret    
   2c5e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2c5e8:	0f 86 90 00 00 00    	jbe    2c67e <__udivdi3+0xde>
   2c5ee:	c7 45 d4 40 00 00 00 	movl   $0x40,-0x2c(%ebp)
   2c5f5:	31 f6                	xor    %esi,%esi
   2c5f7:	31 ff                	xor    %edi,%edi
   2c5f9:	31 c0                	xor    %eax,%eax
   2c5fb:	31 d2                	xor    %edx,%edx
   2c5fd:	eb 41                	jmp    2c640 <__udivdi3+0xa0>
   2c5ff:	90                   	nop
   2c600:	72 08                	jb     2c60a <__udivdi3+0x6a>
   2c602:	8b 4d e8             	mov    -0x18(%ebp),%ecx
   2c605:	39 4d e0             	cmp    %ecx,-0x20(%ebp)
   2c608:	77 6e                	ja     2c678 <__udivdi3+0xd8>
   2c60a:	8b 4d d0             	mov    -0x30(%ebp),%ecx
   2c60d:	89 da                	mov    %ebx,%edx
   2c60f:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   2c612:	89 c8                	mov    %ecx,%eax
   2c614:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)
   2c617:	77 0a                	ja     2c623 <__udivdi3+0x83>
   2c619:	72 0e                	jb     2c629 <__udivdi3+0x89>
   2c61b:	8b 4d e8             	mov    -0x18(%ebp),%ecx
   2c61e:	39 4d e0             	cmp    %ecx,-0x20(%ebp)
   2c621:	76 06                	jbe    2c629 <__udivdi3+0x89>
   2c623:	8b 75 e8             	mov    -0x18(%ebp),%esi
   2c626:	8b 7d ec             	mov    -0x14(%ebp),%edi
   2c629:	8b 4d d8             	mov    -0x28(%ebp),%ecx
   2c62c:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   2c62f:	0f a4 cb 01          	shld   $0x1,%ecx,%ebx
   2c633:	01 c9                	add    %ecx,%ecx
   2c635:	ff 4d d4             	decl   -0x2c(%ebp)
   2c638:	89 4d d8             	mov    %ecx,-0x28(%ebp)
   2c63b:	89 5d dc             	mov    %ebx,-0x24(%ebp)
   2c63e:	74 99                	je     2c5d9 <__udivdi3+0x39>
   2c640:	8b 4d dc             	mov    -0x24(%ebp),%ecx
   2c643:	0f a4 f7 01          	shld   $0x1,%esi,%edi
   2c647:	c1 e9 1f             	shr    $0x1f,%ecx
   2c64a:	01 f6                	add    %esi,%esi
   2c64c:	09 f1                	or     %esi,%ecx
   2c64e:	89 7d ec             	mov    %edi,-0x14(%ebp)
   2c651:	89 4d e8             	mov    %ecx,-0x18(%ebp)
   2c654:	8b 7d ec             	mov    -0x14(%ebp),%edi
   2c657:	8b 75 e8             	mov    -0x18(%ebp),%esi
   2c65a:	0f a4 c2 01          	shld   $0x1,%eax,%edx
   2c65e:	01 c0                	add    %eax,%eax
   2c660:	2b 75 e0             	sub    -0x20(%ebp),%esi
   2c663:	89 c1                	mov    %eax,%ecx
   2c665:	89 d3                	mov    %edx,%ebx
   2c667:	1b 7d e4             	sbb    -0x1c(%ebp),%edi
   2c66a:	83 c9 01             	or     $0x1,%ecx
   2c66d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
   2c670:	8b 4d ec             	mov    -0x14(%ebp),%ecx
   2c673:	39 4d e4             	cmp    %ecx,-0x1c(%ebp)
   2c676:	76 88                	jbe    2c600 <__udivdi3+0x60>
   2c678:	89 c1                	mov    %eax,%ecx
   2c67a:	89 d3                	mov    %edx,%ebx
   2c67c:	eb 8f                	jmp    2c60d <__udivdi3+0x6d>
   2c67e:	8b 55 e0             	mov    -0x20(%ebp),%edx
   2c681:	39 55 d8             	cmp    %edx,-0x28(%ebp)
   2c684:	0f 82 4b ff ff ff    	jb     2c5d5 <__udivdi3+0x35>
   2c68a:	e9 5f ff ff ff       	jmp    2c5ee <__udivdi3+0x4e>
   2c68f:	90                   	nop

0002c690 <__modsi3>:
   2c690:	55                   	push   %ebp
   2c691:	31 c0                	xor    %eax,%eax
   2c693:	89 e5                	mov    %esp,%ebp
   2c695:	57                   	push   %edi
   2c696:	56                   	push   %esi
   2c697:	53                   	push   %ebx
   2c698:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   2c69b:	8b 7d 08             	mov    0x8(%ebp),%edi
   2c69e:	85 db                	test   %ebx,%ebx
   2c6a0:	74 30                	je     2c6d2 <__modsi3+0x42>
   2c6a2:	89 fa                	mov    %edi,%edx
   2c6a4:	89 f8                	mov    %edi,%eax
   2c6a6:	39 fb                	cmp    %edi,%ebx
   2c6a8:	77 28                	ja     2c6d2 <__modsi3+0x42>
   2c6aa:	b9 20 00 00 00       	mov    $0x20,%ecx
   2c6af:	31 f6                	xor    %esi,%esi
   2c6b1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2c6b8:	89 d0                	mov    %edx,%eax
   2c6ba:	01 f6                	add    %esi,%esi
   2c6bc:	c1 e8 1f             	shr    $0x1f,%eax
   2c6bf:	09 f0                	or     %esi,%eax
   2c6c1:	89 c6                	mov    %eax,%esi
   2c6c3:	29 de                	sub    %ebx,%esi
   2c6c5:	39 c3                	cmp    %eax,%ebx
   2c6c7:	77 02                	ja     2c6cb <__modsi3+0x3b>
   2c6c9:	89 f0                	mov    %esi,%eax
   2c6cb:	01 d2                	add    %edx,%edx
   2c6cd:	49                   	dec    %ecx
   2c6ce:	89 c6                	mov    %eax,%esi
   2c6d0:	75 e6                	jne    2c6b8 <__modsi3+0x28>
   2c6d2:	85 ff                	test   %edi,%edi
   2c6d4:	78 0a                	js     2c6e0 <__modsi3+0x50>
   2c6d6:	5b                   	pop    %ebx
   2c6d7:	5e                   	pop    %esi
   2c6d8:	5f                   	pop    %edi
   2c6d9:	5d                   	pop    %ebp
   2c6da:	c3                   	ret    
   2c6db:	90                   	nop
   2c6dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2c6e0:	5b                   	pop    %ebx
   2c6e1:	5e                   	pop    %esi
   2c6e2:	f7 d8                	neg    %eax
   2c6e4:	5f                   	pop    %edi
   2c6e5:	5d                   	pop    %ebp
   2c6e6:	c3                   	ret    
   2c6e7:	89 f6                	mov    %esi,%esi
   2c6e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002c6f0 <__moddi3>:
   2c6f0:	55                   	push   %ebp
   2c6f1:	89 e5                	mov    %esp,%ebp
   2c6f3:	57                   	push   %edi
   2c6f4:	56                   	push   %esi
   2c6f5:	53                   	push   %ebx
   2c6f6:	83 ec 24             	sub    $0x24,%esp
   2c6f9:	8b 45 0c             	mov    0xc(%ebp),%eax
   2c6fc:	8b 55 14             	mov    0x14(%ebp),%edx
   2c6ff:	89 55 dc             	mov    %edx,-0x24(%ebp)
   2c702:	89 45 e0             	mov    %eax,-0x20(%ebp)
   2c705:	8b 45 10             	mov    0x10(%ebp),%eax
   2c708:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   2c70b:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2c70e:	31 d2                	xor    %edx,%edx
   2c710:	31 c0                	xor    %eax,%eax
   2c712:	8b 4d 08             	mov    0x8(%ebp),%ecx
   2c715:	0b 5d d8             	or     -0x28(%ebp),%ebx
   2c718:	0f 84 7e 00 00 00    	je     2c79c <__moddi3+0xac>
   2c71e:	8b 45 e0             	mov    -0x20(%ebp),%eax
   2c721:	89 4d e8             	mov    %ecx,-0x18(%ebp)
   2c724:	89 45 ec             	mov    %eax,-0x14(%ebp)
   2c727:	39 45 dc             	cmp    %eax,-0x24(%ebp)
   2c72a:	0f 83 80 00 00 00    	jae    2c7b0 <__moddi3+0xc0>
   2c730:	c7 45 e4 40 00 00 00 	movl   $0x40,-0x1c(%ebp)
   2c737:	31 c9                	xor    %ecx,%ecx
   2c739:	31 db                	xor    %ebx,%ebx
   2c73b:	eb 2b                	jmp    2c768 <__moddi3+0x78>
   2c73d:	8d 76 00             	lea    0x0(%esi),%esi
   2c740:	72 05                	jb     2c747 <__moddi3+0x57>
   2c742:	39 75 d8             	cmp    %esi,-0x28(%ebp)
   2c745:	77 42                	ja     2c789 <__moddi3+0x99>
   2c747:	89 45 d0             	mov    %eax,-0x30(%ebp)
   2c74a:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   2c74d:	89 c1                	mov    %eax,%ecx
   2c74f:	89 d3                	mov    %edx,%ebx
   2c751:	8b 45 e8             	mov    -0x18(%ebp),%eax
   2c754:	8b 55 ec             	mov    -0x14(%ebp),%edx
   2c757:	0f a4 c2 01          	shld   $0x1,%eax,%edx
   2c75b:	01 c0                	add    %eax,%eax
   2c75d:	ff 4d e4             	decl   -0x1c(%ebp)
   2c760:	89 45 e8             	mov    %eax,-0x18(%ebp)
   2c763:	89 55 ec             	mov    %edx,-0x14(%ebp)
   2c766:	74 30                	je     2c798 <__moddi3+0xa8>
   2c768:	8b 45 ec             	mov    -0x14(%ebp),%eax
   2c76b:	c1 e8 1f             	shr    $0x1f,%eax
   2c76e:	0f a4 cb 01          	shld   $0x1,%ecx,%ebx
   2c772:	89 c6                	mov    %eax,%esi
   2c774:	01 c9                	add    %ecx,%ecx
   2c776:	09 ce                	or     %ecx,%esi
   2c778:	89 da                	mov    %ebx,%edx
   2c77a:	89 f0                	mov    %esi,%eax
   2c77c:	89 df                	mov    %ebx,%edi
   2c77e:	2b 45 d8             	sub    -0x28(%ebp),%eax
   2c781:	1b 55 dc             	sbb    -0x24(%ebp),%edx
   2c784:	39 5d dc             	cmp    %ebx,-0x24(%ebp)
   2c787:	76 b7                	jbe    2c740 <__moddi3+0x50>
   2c789:	89 75 d0             	mov    %esi,-0x30(%ebp)
   2c78c:	89 7d d4             	mov    %edi,-0x2c(%ebp)
   2c78f:	89 f1                	mov    %esi,%ecx
   2c791:	89 fb                	mov    %edi,%ebx
   2c793:	eb bc                	jmp    2c751 <__moddi3+0x61>
   2c795:	8d 76 00             	lea    0x0(%esi),%esi
   2c798:	89 c8                	mov    %ecx,%eax
   2c79a:	89 da                	mov    %ebx,%edx
   2c79c:	8b 7d e0             	mov    -0x20(%ebp),%edi
   2c79f:	85 ff                	test   %edi,%edi
   2c7a1:	78 1b                	js     2c7be <__moddi3+0xce>
   2c7a3:	83 c4 24             	add    $0x24,%esp
   2c7a6:	5b                   	pop    %ebx
   2c7a7:	5e                   	pop    %esi
   2c7a8:	5f                   	pop    %edi
   2c7a9:	5d                   	pop    %ebp
   2c7aa:	c3                   	ret    
   2c7ab:	90                   	nop
   2c7ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2c7b0:	76 1b                	jbe    2c7cd <__moddi3+0xdd>
   2c7b2:	8b 7d e0             	mov    -0x20(%ebp),%edi
   2c7b5:	89 c8                	mov    %ecx,%eax
   2c7b7:	8b 55 e0             	mov    -0x20(%ebp),%edx
   2c7ba:	85 ff                	test   %edi,%edi
   2c7bc:	79 e5                	jns    2c7a3 <__moddi3+0xb3>
   2c7be:	f7 d8                	neg    %eax
   2c7c0:	83 d2 00             	adc    $0x0,%edx
   2c7c3:	83 c4 24             	add    $0x24,%esp
   2c7c6:	f7 da                	neg    %edx
   2c7c8:	5b                   	pop    %ebx
   2c7c9:	5e                   	pop    %esi
   2c7ca:	5f                   	pop    %edi
   2c7cb:	5d                   	pop    %ebp
   2c7cc:	c3                   	ret    
   2c7cd:	39 4d d8             	cmp    %ecx,-0x28(%ebp)
   2c7d0:	0f 86 5a ff ff ff    	jbe    2c730 <__moddi3+0x40>
   2c7d6:	eb da                	jmp    2c7b2 <__moddi3+0xc2>
   2c7d8:	90                   	nop
   2c7d9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

0002c7e0 <__umodsi3>:
   2c7e0:	55                   	push   %ebp
   2c7e1:	31 c0                	xor    %eax,%eax
   2c7e3:	89 e5                	mov    %esp,%ebp
   2c7e5:	56                   	push   %esi
   2c7e6:	53                   	push   %ebx
   2c7e7:	8b 5d 0c             	mov    0xc(%ebp),%ebx
   2c7ea:	8b 55 08             	mov    0x8(%ebp),%edx
   2c7ed:	85 db                	test   %ebx,%ebx
   2c7ef:	74 28                	je     2c819 <__umodsi3+0x39>
   2c7f1:	89 d0                	mov    %edx,%eax
   2c7f3:	39 da                	cmp    %ebx,%edx
   2c7f5:	72 22                	jb     2c819 <__umodsi3+0x39>
   2c7f7:	b9 20 00 00 00       	mov    $0x20,%ecx
   2c7fc:	31 c0                	xor    %eax,%eax
   2c7fe:	66 90                	xchg   %ax,%ax
   2c800:	8d 34 00             	lea    (%eax,%eax,1),%esi
   2c803:	89 d0                	mov    %edx,%eax
   2c805:	c1 e8 1f             	shr    $0x1f,%eax
   2c808:	09 f0                	or     %esi,%eax
   2c80a:	89 c6                	mov    %eax,%esi
   2c80c:	29 de                	sub    %ebx,%esi
   2c80e:	39 c3                	cmp    %eax,%ebx
   2c810:	77 02                	ja     2c814 <__umodsi3+0x34>
   2c812:	89 f0                	mov    %esi,%eax
   2c814:	01 d2                	add    %edx,%edx
   2c816:	49                   	dec    %ecx
   2c817:	75 e7                	jne    2c800 <__umodsi3+0x20>
   2c819:	5b                   	pop    %ebx
   2c81a:	5e                   	pop    %esi
   2c81b:	5d                   	pop    %ebp
   2c81c:	c3                   	ret    
   2c81d:	8d 76 00             	lea    0x0(%esi),%esi

0002c820 <__umoddi3>:
   2c820:	55                   	push   %ebp
   2c821:	89 e5                	mov    %esp,%ebp
   2c823:	57                   	push   %edi
   2c824:	56                   	push   %esi
   2c825:	53                   	push   %ebx
   2c826:	83 ec 1c             	sub    $0x1c,%esp
   2c829:	8b 55 14             	mov    0x14(%ebp),%edx
   2c82c:	8b 45 10             	mov    0x10(%ebp),%eax
   2c82f:	89 55 e4             	mov    %edx,-0x1c(%ebp)
   2c832:	89 45 e0             	mov    %eax,-0x20(%ebp)
   2c835:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
   2c838:	31 c0                	xor    %eax,%eax
   2c83a:	31 d2                	xor    %edx,%edx
   2c83c:	8b 75 08             	mov    0x8(%ebp),%esi
   2c83f:	8b 7d 0c             	mov    0xc(%ebp),%edi
   2c842:	0b 4d e0             	or     -0x20(%ebp),%ecx
   2c845:	74 09                	je     2c850 <__umoddi3+0x30>
   2c847:	3b 7d e4             	cmp    -0x1c(%ebp),%edi
   2c84a:	73 0c                	jae    2c858 <__umoddi3+0x38>
   2c84c:	89 f0                	mov    %esi,%eax
   2c84e:	89 fa                	mov    %edi,%edx
   2c850:	83 c4 1c             	add    $0x1c,%esp
   2c853:	5b                   	pop    %ebx
   2c854:	5e                   	pop    %esi
   2c855:	5f                   	pop    %edi
   2c856:	5d                   	pop    %ebp
   2c857:	c3                   	ret    
   2c858:	76 4b                	jbe    2c8a5 <__umoddi3+0x85>
   2c85a:	c7 45 ec 40 00 00 00 	movl   $0x40,-0x14(%ebp)
   2c861:	31 c0                	xor    %eax,%eax
   2c863:	31 d2                	xor    %edx,%edx
   2c865:	8d 76 00             	lea    0x0(%esi),%esi
   2c868:	89 f9                	mov    %edi,%ecx
   2c86a:	0f a4 c2 01          	shld   $0x1,%eax,%edx
   2c86e:	c1 e9 1f             	shr    $0x1f,%ecx
   2c871:	01 c0                	add    %eax,%eax
   2c873:	89 4d e8             	mov    %ecx,-0x18(%ebp)
   2c876:	09 c1                	or     %eax,%ecx
   2c878:	89 c8                	mov    %ecx,%eax
   2c87a:	89 d3                	mov    %edx,%ebx
   2c87c:	2b 45 e0             	sub    -0x20(%ebp),%eax
   2c87f:	1b 55 e4             	sbb    -0x1c(%ebp),%edx
   2c882:	39 5d e4             	cmp    %ebx,-0x1c(%ebp)
   2c885:	77 07                	ja     2c88e <__umoddi3+0x6e>
   2c887:	72 09                	jb     2c892 <__umoddi3+0x72>
   2c889:	39 4d e0             	cmp    %ecx,-0x20(%ebp)
   2c88c:	76 04                	jbe    2c892 <__umoddi3+0x72>
   2c88e:	89 c8                	mov    %ecx,%eax
   2c890:	89 da                	mov    %ebx,%edx
   2c892:	0f a4 f7 01          	shld   $0x1,%esi,%edi
   2c896:	01 f6                	add    %esi,%esi
   2c898:	ff 4d ec             	decl   -0x14(%ebp)
   2c89b:	75 cb                	jne    2c868 <__umoddi3+0x48>
   2c89d:	83 c4 1c             	add    $0x1c,%esp
   2c8a0:	5b                   	pop    %ebx
   2c8a1:	5e                   	pop    %esi
   2c8a2:	5f                   	pop    %edi
   2c8a3:	5d                   	pop    %ebp
   2c8a4:	c3                   	ret    
   2c8a5:	3b 75 e0             	cmp    -0x20(%ebp),%esi
   2c8a8:	72 a2                	jb     2c84c <__umoddi3+0x2c>
   2c8aa:	eb ae                	jmp    2c85a <__umoddi3+0x3a>
   2c8ac:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

0002c8b0 <__divmodsi3>:
   2c8b0:	55                   	push   %ebp
   2c8b1:	89 e5                	mov    %esp,%ebp
   2c8b3:	57                   	push   %edi
   2c8b4:	56                   	push   %esi
   2c8b5:	53                   	push   %ebx
   2c8b6:	51                   	push   %ecx
   2c8b7:	8b 45 0c             	mov    0xc(%ebp),%eax
   2c8ba:	8b 4d 0c             	mov    0xc(%ebp),%ecx
   2c8bd:	c1 f8 1f             	sar    $0x1f,%eax
   2c8c0:	31 c1                	xor    %eax,%ecx
   2c8c2:	29 c1                	sub    %eax,%ecx
   2c8c4:	74 72                	je     2c938 <__divmodsi3+0x88>
   2c8c6:	8b 45 08             	mov    0x8(%ebp),%eax
   2c8c9:	8b 5d 08             	mov    0x8(%ebp),%ebx
   2c8cc:	c1 f8 1f             	sar    $0x1f,%eax
   2c8cf:	31 c3                	xor    %eax,%ebx
   2c8d1:	29 c3                	sub    %eax,%ebx
   2c8d3:	31 c0                	xor    %eax,%eax
   2c8d5:	39 d9                	cmp    %ebx,%ecx
   2c8d7:	77 3d                	ja     2c916 <__divmodsi3+0x66>
   2c8d9:	c7 45 f0 20 00 00 00 	movl   $0x20,-0x10(%ebp)
   2c8e0:	31 ff                	xor    %edi,%edi
   2c8e2:	31 f6                	xor    %esi,%esi
   2c8e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2c8e8:	89 da                	mov    %ebx,%edx
   2c8ea:	01 ff                	add    %edi,%edi
   2c8ec:	c1 ea 1f             	shr    $0x1f,%edx
   2c8ef:	8d 04 36             	lea    (%esi,%esi,1),%eax
   2c8f2:	09 fa                	or     %edi,%edx
   2c8f4:	89 c6                	mov    %eax,%esi
   2c8f6:	89 d7                	mov    %edx,%edi
   2c8f8:	83 ce 01             	or     $0x1,%esi
   2c8fb:	29 cf                	sub    %ecx,%edi
   2c8fd:	39 d1                	cmp    %edx,%ecx
   2c8ff:	77 02                	ja     2c903 <__divmodsi3+0x53>
   2c901:	89 f0                	mov    %esi,%eax
   2c903:	89 c6                	mov    %eax,%esi
   2c905:	39 d1                	cmp    %edx,%ecx
   2c907:	77 02                	ja     2c90b <__divmodsi3+0x5b>
   2c909:	89 fa                	mov    %edi,%edx
   2c90b:	01 db                	add    %ebx,%ebx
   2c90d:	ff 4d f0             	decl   -0x10(%ebp)
   2c910:	89 d7                	mov    %edx,%edi
   2c912:	75 d4                	jne    2c8e8 <__divmodsi3+0x38>
   2c914:	89 d3                	mov    %edx,%ebx
   2c916:	8b 55 0c             	mov    0xc(%ebp),%edx
   2c919:	8b 4d 08             	mov    0x8(%ebp),%ecx
   2c91c:	c1 e9 1f             	shr    $0x1f,%ecx
   2c91f:	83 f2 ff             	xor    $0xffffffff,%edx
   2c922:	c1 ea 1f             	shr    $0x1f,%edx
   2c925:	31 ca                	xor    %ecx,%edx
   2c927:	75 04                	jne    2c92d <__divmodsi3+0x7d>
   2c929:	f7 db                	neg    %ebx
   2c92b:	f7 d8                	neg    %eax
   2c92d:	8b 55 10             	mov    0x10(%ebp),%edx
   2c930:	89 1a                	mov    %ebx,(%edx)
   2c932:	5a                   	pop    %edx
   2c933:	5b                   	pop    %ebx
   2c934:	5e                   	pop    %esi
   2c935:	5f                   	pop    %edi
   2c936:	5d                   	pop    %ebp
   2c937:	c3                   	ret    
   2c938:	31 c0                	xor    %eax,%eax
   2c93a:	31 db                	xor    %ebx,%ebx
   2c93c:	eb d8                	jmp    2c916 <__divmodsi3+0x66>
   2c93e:	66 90                	xchg   %ax,%ax

0002c940 <__udivmodsi3>:
   2c940:	55                   	push   %ebp
   2c941:	31 c0                	xor    %eax,%eax
   2c943:	89 e5                	mov    %esp,%ebp
   2c945:	57                   	push   %edi
   2c946:	56                   	push   %esi
   2c947:	53                   	push   %ebx
   2c948:	8b 7d 10             	mov    0x10(%ebp),%edi
   2c94b:	8b 55 0c             	mov    0xc(%ebp),%edx
   2c94e:	8b 4d 08             	mov    0x8(%ebp),%ecx
   2c951:	85 d2                	test   %edx,%edx
   2c953:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
   2c959:	74 3c                	je     2c997 <__udivmodsi3+0x57>
   2c95b:	3b 4d 0c             	cmp    0xc(%ebp),%ecx
   2c95e:	72 40                	jb     2c9a0 <__udivmodsi3+0x60>
   2c960:	bb 20 00 00 00       	mov    $0x20,%ebx
   2c965:	31 d2                	xor    %edx,%edx
   2c967:	eb 0e                	jmp    2c977 <__udivmodsi3+0x37>
   2c969:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
   2c970:	01 c9                	add    %ecx,%ecx
   2c972:	4b                   	dec    %ebx
   2c973:	89 17                	mov    %edx,(%edi)
   2c975:	74 20                	je     2c997 <__udivmodsi3+0x57>
   2c977:	8d 34 12             	lea    (%edx,%edx,1),%esi
   2c97a:	89 ca                	mov    %ecx,%edx
   2c97c:	c1 ea 1f             	shr    $0x1f,%edx
   2c97f:	01 c0                	add    %eax,%eax
   2c981:	09 f2                	or     %esi,%edx
   2c983:	39 55 0c             	cmp    %edx,0xc(%ebp)
   2c986:	77 e8                	ja     2c970 <__udivmodsi3+0x30>
   2c988:	8b 75 0c             	mov    0xc(%ebp),%esi
   2c98b:	83 c8 01             	or     $0x1,%eax
   2c98e:	29 f2                	sub    %esi,%edx
   2c990:	01 c9                	add    %ecx,%ecx
   2c992:	4b                   	dec    %ebx
   2c993:	89 17                	mov    %edx,(%edi)
   2c995:	75 e0                	jne    2c977 <__udivmodsi3+0x37>
   2c997:	5b                   	pop    %ebx
   2c998:	5e                   	pop    %esi
   2c999:	5f                   	pop    %edi
   2c99a:	5d                   	pop    %ebp
   2c99b:	c3                   	ret    
   2c99c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2c9a0:	89 0f                	mov    %ecx,(%edi)
   2c9a2:	5b                   	pop    %ebx
   2c9a3:	5e                   	pop    %esi
   2c9a4:	5f                   	pop    %edi
   2c9a5:	5d                   	pop    %ebp
   2c9a6:	c3                   	ret    
   2c9a7:	89 f6                	mov    %esi,%esi
   2c9a9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002c9b0 <__divmoddi3>:
   2c9b0:	55                   	push   %ebp
   2c9b1:	89 e5                	mov    %esp,%ebp
   2c9b3:	57                   	push   %edi
   2c9b4:	56                   	push   %esi
   2c9b5:	53                   	push   %ebx
   2c9b6:	83 ec 3c             	sub    $0x3c,%esp
   2c9b9:	8b 55 0c             	mov    0xc(%ebp),%edx
   2c9bc:	8b 4d 14             	mov    0x14(%ebp),%ecx
   2c9bf:	89 55 c4             	mov    %edx,-0x3c(%ebp)
   2c9c2:	8b 55 10             	mov    0x10(%ebp),%edx
   2c9c5:	89 55 c8             	mov    %edx,-0x38(%ebp)
   2c9c8:	89 ca                	mov    %ecx,%edx
   2c9ca:	c1 fa 1f             	sar    $0x1f,%edx
   2c9cd:	8b 45 08             	mov    0x8(%ebp),%eax
   2c9d0:	89 4d cc             	mov    %ecx,-0x34(%ebp)
   2c9d3:	89 45 c0             	mov    %eax,-0x40(%ebp)
   2c9d6:	8b 4d c8             	mov    -0x38(%ebp),%ecx
   2c9d9:	89 d0                	mov    %edx,%eax
   2c9db:	31 c1                	xor    %eax,%ecx
   2c9dd:	8b 5d cc             	mov    -0x34(%ebp),%ebx
   2c9e0:	89 4d e0             	mov    %ecx,-0x20(%ebp)
   2c9e3:	31 d3                	xor    %edx,%ebx
   2c9e5:	29 45 e0             	sub    %eax,-0x20(%ebp)
   2c9e8:	89 5d e4             	mov    %ebx,-0x1c(%ebp)
   2c9eb:	19 55 e4             	sbb    %edx,-0x1c(%ebp)
   2c9ee:	8b 45 e4             	mov    -0x1c(%ebp),%eax
   2c9f1:	0b 45 e0             	or     -0x20(%ebp),%eax
   2c9f4:	0f 84 1e 01 00 00    	je     2cb18 <__divmoddi3+0x168>
   2c9fa:	8b 55 c4             	mov    -0x3c(%ebp),%edx
   2c9fd:	8b 4d c0             	mov    -0x40(%ebp),%ecx
   2ca00:	c1 fa 1f             	sar    $0x1f,%edx
   2ca03:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
   2ca06:	89 d0                	mov    %edx,%eax
   2ca08:	31 d3                	xor    %edx,%ebx
   2ca0a:	31 c1                	xor    %eax,%ecx
   2ca0c:	89 5d dc             	mov    %ebx,-0x24(%ebp)
   2ca0f:	89 4d d8             	mov    %ecx,-0x28(%ebp)
   2ca12:	29 45 d8             	sub    %eax,-0x28(%ebp)
   2ca15:	19 55 dc             	sbb    %edx,-0x24(%ebp)
   2ca18:	8b 45 dc             	mov    -0x24(%ebp),%eax
   2ca1b:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
   2ca1e:	76 40                	jbe    2ca60 <__divmoddi3+0xb0>
   2ca20:	31 c0                	xor    %eax,%eax
   2ca22:	31 d2                	xor    %edx,%edx
   2ca24:	8b 4d cc             	mov    -0x34(%ebp),%ecx
   2ca27:	8b 5d c4             	mov    -0x3c(%ebp),%ebx
   2ca2a:	c1 eb 1f             	shr    $0x1f,%ebx
   2ca2d:	83 f1 ff             	xor    $0xffffffff,%ecx
   2ca30:	c1 e9 1f             	shr    $0x1f,%ecx
   2ca33:	38 d9                	cmp    %bl,%cl
   2ca35:	8b 4d d8             	mov    -0x28(%ebp),%ecx
   2ca38:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   2ca3b:	75 0e                	jne    2ca4b <__divmoddi3+0x9b>
   2ca3d:	f7 d9                	neg    %ecx
   2ca3f:	83 d3 00             	adc    $0x0,%ebx
   2ca42:	f7 db                	neg    %ebx
   2ca44:	f7 d8                	neg    %eax
   2ca46:	83 d2 00             	adc    $0x0,%edx
   2ca49:	f7 da                	neg    %edx
   2ca4b:	8b 75 18             	mov    0x18(%ebp),%esi
   2ca4e:	89 0e                	mov    %ecx,(%esi)
   2ca50:	89 5e 04             	mov    %ebx,0x4(%esi)
   2ca53:	83 c4 3c             	add    $0x3c,%esp
   2ca56:	5b                   	pop    %ebx
   2ca57:	5e                   	pop    %esi
   2ca58:	5f                   	pop    %edi
   2ca59:	5d                   	pop    %ebp
   2ca5a:	c3                   	ret    
   2ca5b:	90                   	nop
   2ca5c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
   2ca60:	0f 83 e0 00 00 00    	jae    2cb46 <__divmoddi3+0x196>
   2ca66:	c7 45 d4 40 00 00 00 	movl   $0x40,-0x2c(%ebp)
   2ca6d:	31 c0                	xor    %eax,%eax
   2ca6f:	31 d2                	xor    %edx,%edx
   2ca71:	31 f6                	xor    %esi,%esi
   2ca73:	31 ff                	xor    %edi,%edi
   2ca75:	eb 30                	jmp    2caa7 <__divmoddi3+0xf7>
   2ca77:	90                   	nop
   2ca78:	72 08                	jb     2ca82 <__divmoddi3+0xd2>
   2ca7a:	8b 45 e8             	mov    -0x18(%ebp),%eax
   2ca7d:	39 45 e0             	cmp    %eax,-0x20(%ebp)
   2ca80:	77 76                	ja     2caf8 <__divmoddi3+0x148>
   2ca82:	89 4d b8             	mov    %ecx,-0x48(%ebp)
   2ca85:	89 5d bc             	mov    %ebx,-0x44(%ebp)
   2ca88:	89 c8                	mov    %ecx,%eax
   2ca8a:	89 da                	mov    %ebx,%edx
   2ca8c:	8b 4d d8             	mov    -0x28(%ebp),%ecx
   2ca8f:	8b 5d dc             	mov    -0x24(%ebp),%ebx
   2ca92:	0f a4 cb 01          	shld   $0x1,%ecx,%ebx
   2ca96:	01 c9                	add    %ecx,%ecx
   2ca98:	ff 4d d4             	decl   -0x2c(%ebp)
   2ca9b:	89 4d d8             	mov    %ecx,-0x28(%ebp)
   2ca9e:	89 5d dc             	mov    %ebx,-0x24(%ebp)
   2caa1:	0f 84 89 00 00 00    	je     2cb30 <__divmoddi3+0x180>
   2caa7:	8b 4d dc             	mov    -0x24(%ebp),%ecx
   2caaa:	0f a4 c2 01          	shld   $0x1,%eax,%edx
   2caae:	c1 e9 1f             	shr    $0x1f,%ecx
   2cab1:	01 c0                	add    %eax,%eax
   2cab3:	09 c1                	or     %eax,%ecx
   2cab5:	89 55 ec             	mov    %edx,-0x14(%ebp)
   2cab8:	89 4d e8             	mov    %ecx,-0x18(%ebp)
   2cabb:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   2cabe:	8b 4d e8             	mov    -0x18(%ebp),%ecx
   2cac1:	0f a4 f7 01          	shld   $0x1,%esi,%edi
   2cac5:	01 f6                	add    %esi,%esi
   2cac7:	2b 4d e0             	sub    -0x20(%ebp),%ecx
   2caca:	89 f0                	mov    %esi,%eax
   2cacc:	89 fa                	mov    %edi,%edx
   2cace:	1b 5d e4             	sbb    -0x1c(%ebp),%ebx
   2cad1:	83 c8 01             	or     $0x1,%eax
   2cad4:	89 45 d0             	mov    %eax,-0x30(%ebp)
   2cad7:	8b 45 ec             	mov    -0x14(%ebp),%eax
   2cada:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
   2cadd:	77 31                	ja     2cb10 <__divmoddi3+0x160>
   2cadf:	72 08                	jb     2cae9 <__divmoddi3+0x139>
   2cae1:	8b 45 e8             	mov    -0x18(%ebp),%eax
   2cae4:	39 45 e0             	cmp    %eax,-0x20(%ebp)
   2cae7:	77 27                	ja     2cb10 <__divmoddi3+0x160>
   2cae9:	8b 45 d0             	mov    -0x30(%ebp),%eax
   2caec:	89 d7                	mov    %edx,%edi
   2caee:	8b 55 ec             	mov    -0x14(%ebp),%edx
   2caf1:	89 c6                	mov    %eax,%esi
   2caf3:	39 55 e4             	cmp    %edx,-0x1c(%ebp)
   2caf6:	76 80                	jbe    2ca78 <__divmoddi3+0xc8>
   2caf8:	8b 55 e8             	mov    -0x18(%ebp),%edx
   2cafb:	8b 4d ec             	mov    -0x14(%ebp),%ecx
   2cafe:	89 55 b8             	mov    %edx,-0x48(%ebp)
   2cb01:	89 d0                	mov    %edx,%eax
   2cb03:	89 4d bc             	mov    %ecx,-0x44(%ebp)
   2cb06:	89 ca                	mov    %ecx,%edx
   2cb08:	eb 82                	jmp    2ca8c <__divmoddi3+0xdc>
   2cb0a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
   2cb10:	89 f0                	mov    %esi,%eax
   2cb12:	89 fa                	mov    %edi,%edx
   2cb14:	eb d6                	jmp    2caec <__divmoddi3+0x13c>
   2cb16:	66 90                	xchg   %ax,%ax
   2cb18:	31 c0                	xor    %eax,%eax
   2cb1a:	31 d2                	xor    %edx,%edx
   2cb1c:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
   2cb23:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
   2cb2a:	e9 f5 fe ff ff       	jmp    2ca24 <__divmoddi3+0x74>
   2cb2f:	90                   	nop
   2cb30:	89 c1                	mov    %eax,%ecx
   2cb32:	89 d3                	mov    %edx,%ebx
   2cb34:	89 f2                	mov    %esi,%edx
   2cb36:	89 f0                	mov    %esi,%eax
   2cb38:	c1 fa 1f             	sar    $0x1f,%edx
   2cb3b:	89 4d d8             	mov    %ecx,-0x28(%ebp)
   2cb3e:	89 5d dc             	mov    %ebx,-0x24(%ebp)
   2cb41:	e9 de fe ff ff       	jmp    2ca24 <__divmoddi3+0x74>
   2cb46:	8b 55 d8             	mov    -0x28(%ebp),%edx
   2cb49:	39 55 e0             	cmp    %edx,-0x20(%ebp)
   2cb4c:	0f 87 ce fe ff ff    	ja     2ca20 <__divmoddi3+0x70>
   2cb52:	e9 0f ff ff ff       	jmp    2ca66 <__divmoddi3+0xb6>
   2cb57:	89 f6                	mov    %esi,%esi
   2cb59:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

0002cb60 <__udivmoddi3>:
   2cb60:	55                   	push   %ebp
   2cb61:	89 e5                	mov    %esp,%ebp
   2cb63:	57                   	push   %edi
   2cb64:	56                   	push   %esi
   2cb65:	53                   	push   %ebx
   2cb66:	83 ec 24             	sub    $0x24,%esp
   2cb69:	8b 55 14             	mov    0x14(%ebp),%edx
   2cb6c:	8b 45 10             	mov    0x10(%ebp),%eax
   2cb6f:	89 55 dc             	mov    %edx,-0x24(%ebp)
   2cb72:	8b 55 18             	mov    0x18(%ebp),%edx
   2cb75:	89 45 d8             	mov    %eax,-0x28(%ebp)
   2cb78:	8b 4d dc             	mov    -0x24(%ebp),%ecx
   2cb7b:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
   2cb81:	c7 42 04 00 00 00 00 	movl   $0x0,0x4(%edx)
   2cb88:	31 c0                	xor    %eax,%eax
   2cb8a:	31 d2                	xor    %edx,%edx
   2cb8c:	8b 75 08             	mov    0x8(%ebp),%esi
   2cb8f:	8b 7d 0c             	mov    0xc(%ebp),%edi
   2cb92:	0b 4d d8             	or     -0x28(%ebp),%ecx
   2cb95:	74 11                	je     2cba8 <__udivmoddi3+0x48>
   2cb97:	3b 7d dc             	cmp    -0x24(%ebp),%edi
   2cb9a:	73 14                	jae    2cbb0 <__udivmoddi3+0x50>
   2cb9c:	8b 55 18             	mov    0x18(%ebp),%edx
   2cb9f:	31 c0                	xor    %eax,%eax
   2cba1:	89 32                	mov    %esi,(%edx)
   2cba3:	89 7a 04             	mov    %edi,0x4(%edx)
   2cba6:	31 d2                	xor    %edx,%edx
   2cba8:	83 c4 24             	add    $0x24,%esp
   2cbab:	5b                   	pop    %ebx
   2cbac:	5e                   	pop    %esi
   2cbad:	5f                   	pop    %edi
   2cbae:	5d                   	pop    %ebp
   2cbaf:	c3                   	ret    
   2cbb0:	0f 86 9e 00 00 00    	jbe    2cc54 <__udivmoddi3+0xf4>
   2cbb6:	31 c0                	xor    %eax,%eax
   2cbb8:	31 d2                	xor    %edx,%edx
   2cbba:	89 75 e8             	mov    %esi,-0x18(%ebp)
   2cbbd:	89 7d ec             	mov    %edi,-0x14(%ebp)
   2cbc0:	89 c6                	mov    %eax,%esi
   2cbc2:	89 d7                	mov    %edx,%edi
   2cbc4:	8b 45 e8             	mov    -0x18(%ebp),%eax
   2cbc7:	8b 55 ec             	mov    -0x14(%ebp),%edx
   2cbca:	c7 45 e4 40 00 00 00 	movl   $0x40,-0x1c(%ebp)
   2cbd1:	31 c9                	xor    %ecx,%ecx
   2cbd3:	31 db                	xor    %ebx,%ebx
   2cbd5:	89 45 d0             	mov    %eax,-0x30(%ebp)
   2cbd8:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   2cbdb:	eb 29                	jmp    2cc06 <__udivmoddi3+0xa6>
   2cbdd:	8d 76 00             	lea    0x0(%esi),%esi
   2cbe0:	77 05                	ja     2cbe7 <__udivmoddi3+0x87>
   2cbe2:	39 4d d8             	cmp    %ecx,-0x28(%ebp)
   2cbe5:	76 48                	jbe    2cc2f <__udivmoddi3+0xcf>
   2cbe7:	8b 55 18             	mov    0x18(%ebp),%edx
   2cbea:	89 0a                	mov    %ecx,(%edx)
   2cbec:	89 5a 04             	mov    %ebx,0x4(%edx)
   2cbef:	8b 45 d0             	mov    -0x30(%ebp),%eax
   2cbf2:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   2cbf5:	0f a4 c2 01          	shld   $0x1,%eax,%edx
   2cbf9:	01 c0                	add    %eax,%eax
   2cbfb:	ff 4d e4             	decl   -0x1c(%ebp)
   2cbfe:	89 45 d0             	mov    %eax,-0x30(%ebp)
   2cc01:	89 55 d4             	mov    %edx,-0x2c(%ebp)
   2cc04:	74 42                	je     2cc48 <__udivmoddi3+0xe8>
   2cc06:	89 c8                	mov    %ecx,%eax
   2cc08:	89 da                	mov    %ebx,%edx
   2cc0a:	0f a4 c2 01          	shld   $0x1,%eax,%edx
   2cc0e:	01 c0                	add    %eax,%eax
   2cc10:	89 55 ec             	mov    %edx,-0x14(%ebp)
   2cc13:	89 45 e8             	mov    %eax,-0x18(%ebp)
   2cc16:	8b 55 d4             	mov    -0x2c(%ebp),%edx
   2cc19:	c1 ea 1f             	shr    $0x1f,%edx
   2cc1c:	8b 4d e8             	mov    -0x18(%ebp),%ecx
   2cc1f:	8b 5d ec             	mov    -0x14(%ebp),%ebx
   2cc22:	09 d1                	or     %edx,%ecx
   2cc24:	0f a4 f7 01          	shld   $0x1,%esi,%edi
   2cc28:	01 f6                	add    %esi,%esi
   2cc2a:	39 5d dc             	cmp    %ebx,-0x24(%ebp)
   2cc2d:	73 b1                	jae    2cbe0 <__udivmoddi3+0x80>
   2cc2f:	2b 4d d8             	sub    -0x28(%ebp),%ecx
   2cc32:	8b 45 18             	mov    0x18(%ebp),%eax
   2cc35:	1b 5d dc             	sbb    -0x24(%ebp),%ebx
   2cc38:	89 f2                	mov    %esi,%edx
   2cc3a:	83 ca 01             	or     $0x1,%edx
   2cc3d:	89 08                	mov    %ecx,(%eax)
   2cc3f:	89 58 04             	mov    %ebx,0x4(%eax)
   2cc42:	89 d6                	mov    %edx,%esi
   2cc44:	eb a9                	jmp    2cbef <__udivmoddi3+0x8f>
   2cc46:	66 90                	xchg   %ax,%ax
   2cc48:	83 c4 24             	add    $0x24,%esp
   2cc4b:	89 f0                	mov    %esi,%eax
   2cc4d:	89 fa                	mov    %edi,%edx
   2cc4f:	5b                   	pop    %ebx
   2cc50:	5e                   	pop    %esi
   2cc51:	5f                   	pop    %edi
   2cc52:	5d                   	pop    %ebp
   2cc53:	c3                   	ret    
   2cc54:	3b 75 d8             	cmp    -0x28(%ebp),%esi
   2cc57:	0f 82 3f ff ff ff    	jb     2cb9c <__udivmoddi3+0x3c>
   2cc5d:	e9 54 ff ff ff       	jmp    2cbb6 <__udivmoddi3+0x56>
   2cc62:	66 90                	xchg   %ax,%ax
   2cc64:	2e                   	cs
   2cc65:	2e                   	cs
   2cc66:	2f                   	das    
   2cc67:	2e                   	cs
   2cc68:	2e                   	cs
   2cc69:	2f                   	das    
   2cc6a:	6c                   	insb   (%dx),%es:(%edi)
   2cc6b:	69 62 2f 62 69 74 68 	imul   $0x68746962,0x2f(%edx),%esp
   2cc72:	65 6e                	outsb  %gs:(%esi),(%dx)
   2cc74:	67                   	addr16
   2cc75:	65                   	gs
   2cc76:	2f                   	das    
   2cc77:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
   2cc7e:	2f                   	das    
   2cc7f:	62 69 74             	bound  %ebp,0x74(%ecx)
   2cc82:	68 65 6e 67 65       	push   $0x65676e65
   2cc87:	2f                   	das    
   2cc88:	74 72                	je     2ccfc <__udivmoddi3+0x19c>
   2cc8a:	61                   	popa   
   2cc8b:	6e                   	outsb  %ds:(%esi),(%dx)
   2cc8c:	73 66                	jae    2ccf4 <__udivmoddi3+0x194>
   2cc8e:	6f                   	outsl  %ds:(%esi),(%dx)
   2cc8f:	72 6d                	jb     2ccfe <__udivmoddi3+0x19e>
   2cc91:	2e                   	cs
   2cc92:	68 00 45 72 72       	push   $0x72724500
   2cc97:	6f                   	outsl  %ds:(%esi),(%dx)
   2cc98:	72 20                	jb     2ccba <__udivmoddi3+0x15a>
   2cc9a:	63 72 65             	arpl   %si,0x65(%edx)
   2cc9d:	61                   	popa   
   2cc9e:	74 69                	je     2cd09 <__udivmoddi3+0x1a9>
   2cca0:	6e                   	outsb  %ds:(%esi),(%dx)
   2cca1:	67 20 6e 6f          	and    %ch,0x6f(%bp)
   2cca5:	64 65 20 66 72       	fs and %ah,%fs:%gs:0x72(%esi)
   2ccaa:	6f                   	outsl  %ds:(%esi),(%dx)
   2ccab:	6d                   	insl   (%dx),%es:(%edi)
   2ccac:	20 73 6f             	and    %dh,0x6f(%ebx)
   2ccaf:	75 72                	jne    2cd23 <__udivmoddi3+0x1c3>
   2ccb1:	63 65 3a             	arpl   %sp,0x3a(%ebp)
   2ccb4:	20 25 73 0a 00 73    	and    %ah,0x73000a73
   2ccba:	65                   	gs
   2ccbb:	6c                   	insb   (%dx),%es:(%edi)
   2ccbc:	66 2d 3e 6f          	sub    $0x6f3e,%ax
   2ccc0:	70 73                	jo     2cd35 <__udivmoddi3+0x1d5>
   2ccc2:	00 73 65             	add    %dh,0x65(%ebx)
   2ccc5:	6c                   	insb   (%dx),%es:(%edi)
   2ccc6:	66 2d 3e 72          	sub    $0x723e,%ax
   2ccca:	65                   	gs
   2cccb:	66                   	data16
   2cccc:	73 20                	jae    2ccee <__udivmoddi3+0x18e>
   2ccce:	3e 20 30             	and    %dh,%ds:(%eax)
   2ccd1:	00 55 73             	add    %dl,0x73(%ebp)
   2ccd4:	61                   	popa   
   2ccd5:	67 65 3a 20          	cmp    %gs:(%bx,%si),%ah
   2ccd9:	25 73 20 3c 73       	and    $0x733c2073,%eax
   2ccde:	63 72 69             	arpl   %si,0x69(%edx)
   2cce1:	70 74                	jo     2cd57 <__udivmoddi3+0x1f7>
   2cce3:	3e 20 3c 73          	and    %bh,%ds:(%ebx,%esi,2)
   2cce7:	6f                   	outsl  %ds:(%esi),(%dx)
   2cce8:	75 72                	jne    2cd5c <__udivmoddi3+0x1fc>
   2ccea:	63 65 3e             	arpl   %sp,0x3e(%ebp)
   2cced:	0a 00                	or     (%eax),%al
   2ccef:	45                   	inc    %ebp
   2ccf0:	72 72                	jb     2cd64 <__udivmoddi3+0x204>
   2ccf2:	6f                   	outsl  %ds:(%esi),(%dx)
   2ccf3:	72 20                	jb     2cd15 <__udivmoddi3+0x1b5>
   2ccf5:	63 72 65             	arpl   %si,0x65(%edx)
   2ccf8:	61                   	popa   
   2ccf9:	74 69                	je     2cd64 <__udivmoddi3+0x204>
   2ccfb:	6e                   	outsb  %ds:(%esi),(%dx)
   2ccfc:	67 20 73 63          	and    %dh,0x63(%bp,%di)
   2cd00:	6f                   	outsl  %ds:(%esi),(%dx)
   2cd01:	70 65                	jo     2cd68 <__udivmoddi3+0x208>
   2cd03:	3a 20                	cmp    (%eax),%ah
   2cd05:	25 73 0a 00 45       	and    $0x45000a73,%eax
   2cd0a:	72 72                	jb     2cd7e <__udivmoddi3+0x21e>
   2cd0c:	6f                   	outsl  %ds:(%esi),(%dx)
   2cd0d:	72 20                	jb     2cd2f <__udivmoddi3+0x1cf>
   2cd0f:	70 61                	jo     2cd72 <__udivmoddi3+0x212>
   2cd11:	72 73                	jb     2cd86 <__udivmoddi3+0x226>
   2cd13:	69 6e 67 20 73 63 72 	imul   $0x72637320,0x67(%esi),%ebp
   2cd1a:	69 70 74 3a 20 25 73 	imul   $0x7325203a,0x74(%eax),%esi
   2cd21:	0a 00                	or     (%eax),%al
   2cd23:	45                   	inc    %ebp
   2cd24:	72 72                	jb     2cd98 <__udivmoddi3+0x238>
   2cd26:	6f                   	outsl  %ds:(%esi),(%dx)
   2cd27:	72 20                	jb     2cd49 <__udivmoddi3+0x1e9>
   2cd29:	61                   	popa   
   2cd2a:	70 70                	jo     2cd9c <__udivmoddi3+0x23c>
   2cd2c:	6c                   	insb   (%dx),%es:(%edi)
   2cd2d:	79 69                	jns    2cd98 <__udivmoddi3+0x238>
   2cd2f:	6e                   	outsb  %ds:(%esi),(%dx)
   2cd30:	67 20 74 72          	and    %dh,0x72(%si)
   2cd34:	61                   	popa   
   2cd35:	6e                   	outsb  %ds:(%esi),(%dx)
   2cd36:	73 66                	jae    2cd9e <__udivmoddi3+0x23e>
   2cd38:	6f                   	outsl  %ds:(%esi),(%dx)
   2cd39:	72 6d                	jb     2cda8 <__udivmoddi3+0x248>
   2cd3b:	3a 20                	cmp    (%eax),%ah
   2cd3d:	25 73 0a 00 45       	and    $0x45000a73,%eax
   2cd42:	72 72                	jb     2cdb6 <__udivmoddi3+0x256>
   2cd44:	6f                   	outsl  %ds:(%esi),(%dx)
   2cd45:	72 20                	jb     2cd67 <__udivmoddi3+0x207>
   2cd47:	70 72                	jo     2cdbb <__udivmoddi3+0x25b>
   2cd49:	69 6e 74 69 6e 67 20 	imul   $0x20676e69,0x74(%esi),%ebp
   2cd50:	6e                   	outsb  %ds:(%esi),(%dx)
   2cd51:	6f                   	outsl  %ds:(%esi),(%dx)
   2cd52:	64 65 3a 20          	fs cmp %fs:%gs:(%eax),%ah
   2cd56:	25 73 0a 00 62       	and    $0x62000a73,%eax
   2cd5b:	22 00                	and    (%eax),%al
   2cd5d:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
   2cd64:	2f                   	das    
   2cd65:	62 69 74             	bound  %ebp,0x74(%ecx)
   2cd68:	68 65 6e 67 65       	push   $0x65676e65
   2cd6d:	2f                   	das    
   2cd6e:	62 6c 6f 62          	bound  %ebp,0x62(%edi,%ebp,2)
   2cd72:	2e                   	cs
   2cd73:	68 00 73 65 6c       	push   $0x6c657300
   2cd78:	66 2d 3e 62          	sub    $0x623e,%ax
   2cd7c:	61                   	popa   
   2cd7d:	73 65                	jae    2cde4 <__udivmoddi3+0x284>
   2cd7f:	2e 62 6c 6f 62       	bound  %ebp,%cs:0x62(%edi,%ebp,2)
   2cd84:	5f                   	pop    %edi
   2cd85:	6f                   	outsl  %ds:(%esi),(%dx)
   2cd86:	70 73                	jo     2cdfb <__udivmoddi3+0x29b>
   2cd88:	00 5c 78 25          	add    %bl,0x25(%eax,%edi,2)
   2cd8c:	30 32                	xor    %dh,(%edx)
   2cd8e:	78 00                	js     2cd90 <__udivmoddi3+0x230>
   2cd90:	69 6e 63 6c 75 64 65 	imul   $0x6564756c,0x63(%esi),%ebp
   2cd97:	2f                   	das    
   2cd98:	62 69 74             	bound  %ebp,0x74(%ecx)
   2cd9b:	68 65 6e 67 65       	push   $0x65676e65
   2cda0:	2f                   	das    
   2cda1:	74 72                	je     2ce15 <__udivmoddi3+0x2b5>
   2cda3:	65                   	gs
   2cda4:	65                   	gs
   2cda5:	2e                   	cs
   2cda6:	68 00 5c 25 6c       	push   $0x6c255c00
   2cdab:	63 00                	arpl   %ax,(%eax)
   2cdad:	5c                   	pop    %esp
   2cdae:	75 25                	jne    2cdd5 <__udivmoddi3+0x275>
   2cdb0:	30 34 78             	xor    %dh,(%eax,%edi,2)
   2cdb3:	00 54 72 75          	add    %dl,0x75(%edx,%esi,2)
   2cdb7:	65 00 46 61          	add    %al,%gs:0x61(%esi)
   2cdbb:	6c                   	insb   (%dx),%es:(%edi)
   2cdbc:	73 65                	jae    2ce23 <__udivmoddi3+0x2c3>
   2cdbe:	00 74 72 75          	add    %dh,0x75(%edx,%esi,2)
   2cdc2:	65 00 66 61          	add    %ah,%gs:0x61(%esi)
   2cdc6:	6c                   	insb   (%dx),%es:(%edi)
   2cdc7:	73 65                	jae    2ce2e <__udivmoddi3+0x2ce>
   2cdc9:	00 2c 00             	add    %ch,(%eax,%eax,1)
   2cdcc:	20 20                	and    %ah,(%eax)
   2cdce:	20 20                	and    %ah,(%eax)
   2cdd0:	00 7b 00             	add    %bh,0x0(%ebx)
   2cdd3:	7d 00                	jge    2cdd5 <__udivmoddi3+0x275>
   2cdd5:	25 6c 6c 64 00       	and    $0x646c6c,%eax
   2cdda:	66 90                	xchg   %ax,%ax
   2cddc:	6e                   	outsb  %ds:(%esi),(%dx)
   2cddd:	6f                   	outsl  %ds:(%esi),(%dx)
   2cdde:	64                   	fs
   2cddf:	65                   	gs
   2cde0:	2d 3e 74 79 70       	sub    $0x7079743e,%eax
   2cde5:	65 20 3d 3d 20 42 49 	and    %bh,%gs:0x4942203d
   2cdec:	54                   	push   %esp
   2cded:	48                   	dec    %eax
   2cdee:	45                   	inc    %ebp
   2cdef:	4e                   	dec    %esi
   2cdf0:	47                   	inc    %edi
   2cdf1:	45                   	inc    %ebp
   2cdf2:	5f                   	pop    %edi
   2cdf3:	4e                   	dec    %esi
   2cdf4:	4f                   	dec    %edi
   2cdf5:	44                   	inc    %esp
   2cdf6:	45                   	inc    %ebp
   2cdf7:	5f                   	pop    %edi
   2cdf8:	42                   	inc    %edx
   2cdf9:	4c                   	dec    %esp
   2cdfa:	4f                   	dec    %edi
   2cdfb:	42                   	inc    %edx
   2cdfc:	00 00                	add    %al,(%eax)
   2cdfe:	00 00                	add    %al,(%eax)
   2ce00:	73 65                	jae    2ce67 <__udivmoddi3+0x307>
   2ce02:	6c                   	insb   (%dx),%es:(%edi)
   2ce03:	66 2d 3e 74          	sub    $0x743e,%ax
   2ce07:	79 70                	jns    2ce79 <__udivmoddi3+0x319>
   2ce09:	65 20 3d 3d 20 42 49 	and    %bh,%gs:0x4942203d
   2ce10:	54                   	push   %esp
   2ce11:	48                   	dec    %eax
   2ce12:	45                   	inc    %ebp
   2ce13:	4e                   	dec    %esi
   2ce14:	47                   	inc    %edi
   2ce15:	45                   	inc    %ebp
   2ce16:	5f                   	pop    %edi
   2ce17:	4e                   	dec    %esi
   2ce18:	4f                   	dec    %edi
   2ce19:	44                   	inc    %esp
   2ce1a:	45                   	inc    %ebp
   2ce1b:	5f                   	pop    %edi
   2ce1c:	53                   	push   %ebx
   2ce1d:	54                   	push   %esp
   2ce1e:	52                   	push   %edx
   2ce1f:	49                   	dec    %ecx
   2ce20:	4e                   	dec    %esi
   2ce21:	47                   	inc    %edi
   2ce22:	00 00                	add    %al,(%eax)
   2ce24:	73 65                	jae    2ce8b <__udivmoddi3+0x32b>
   2ce26:	6c                   	insb   (%dx),%es:(%edi)
   2ce27:	66 2d 3e 74          	sub    $0x743e,%ax
   2ce2b:	79 70                	jns    2ce9d <__udivmoddi3+0x33d>
   2ce2d:	65 20 3d 3d 20 42 49 	and    %bh,%gs:0x4942203d
   2ce34:	54                   	push   %esp
   2ce35:	48                   	dec    %eax
   2ce36:	45                   	inc    %ebp
   2ce37:	4e                   	dec    %esi
   2ce38:	47                   	inc    %edi
   2ce39:	45                   	inc    %ebp
   2ce3a:	5f                   	pop    %edi
   2ce3b:	4e                   	dec    %esi
   2ce3c:	4f                   	dec    %edi
   2ce3d:	44                   	inc    %esp
   2ce3e:	45                   	inc    %ebp
   2ce3f:	5f                   	pop    %edi
   2ce40:	49                   	dec    %ecx
   2ce41:	4e                   	dec    %esi
   2ce42:	54                   	push   %esp
   2ce43:	45                   	inc    %ebp
   2ce44:	52                   	push   %edx
   2ce45:	4e                   	dec    %esi
   2ce46:	41                   	inc    %ecx
   2ce47:	4c                   	dec    %esp
   2ce48:	00 66 90             	add    %ah,-0x70(%esi)
   2ce4b:	90                   	nop
   2ce4c:	58                   	pop    %eax
   2ce4d:	17                   	pop    %ss
   2ce4e:	00 00                	add    %al,(%eax)
   2ce50:	64 18 00             	sbb    %al,%fs:(%eax)
   2ce53:	00 39                	add    %bh,(%ecx)
   2ce55:	18 00                	sbb    %al,(%eax)
   2ce57:	00 03                	add    %al,(%ebx)
   2ce59:	18 00                	sbb    %al,(%eax)
   2ce5b:	00 f8                	add    %bh,%al
   2ce5d:	17                   	pop    %ss
   2ce5e:	00 00                	add    %al,(%eax)
   2ce60:	c0 17 00             	rclb   $0x0,(%edi)
   2ce63:	00 58 17             	add    %bl,0x17(%eax)
   2ce66:	00 00                	add    %al,(%eax)
   2ce68:	ec                   	in     (%dx),%al
   2ce69:	18 00                	sbb    %al,(%eax)
   2ce6b:	00 87 19 00 00 5f    	add    %al,0x5f000019(%edi)
   2ce71:	19 00                	sbb    %eax,(%eax)
   2ce73:	00 dd                	add    %bl,%ch
   2ce75:	18 00                	sbb    %al,(%eax)
   2ce77:	00 ce                	add    %cl,%dh
   2ce79:	18 00                	sbb    %al,(%eax)
   2ce7b:	00 df                	add    %bl,%bh
   2ce7d:	1a 00                	sbb    (%eax),%al
   2ce7f:	00 10                	add    %dl,(%eax)
   2ce81:	1b 00                	sbb    (%eax),%eax
   2ce83:	00 98 1b 00 00 c0    	add    %bl,-0x3fffffe5(%eax)
   2ce89:	1b 00                	sbb    (%eax),%eax
   2ce8b:	00 88 1b 00 00 00    	add    %cl,0x1b(%eax)
   2ce91:	1b 00                	sbb    (%eax),%eax
   2ce93:	00 b2 1c 00 00 f8    	add    %dh,-0x7ffffe4(%edx)
   2ce99:	1c 00                	sbb    $0x0,%al
   2ce9b:	00 90 1d 00 00 c8    	add    %dl,-0x37ffffe3(%eax)
   2cea1:	1d 00 00 80 1d       	sbb    $0x1d800000,%eax
   2cea6:	00 00                	add    %al,(%eax)
   2cea8:	d8 1c 00             	fcomps (%eax,%eax,1)
   2ceab:	00 69 6e             	add    %ch,0x6e(%ecx)
   2ceae:	63 6c 75 64          	arpl   %bp,0x64(%ebp,%esi,2)
   2ceb2:	65                   	gs
   2ceb3:	2f                   	das    
   2ceb4:	62 69 74             	bound  %ebp,0x74(%ecx)
   2ceb7:	68 65 6e 67 65       	push   $0x65676e65
   2cebc:	2f                   	das    
   2cebd:	65                   	gs
   2cebe:	78 70                	js     2cf30 <__udivmoddi3+0x3d0>
   2cec0:	72 65                	jb     2cf27 <__udivmoddi3+0x3c7>
   2cec2:	73 73                	jae    2cf37 <__udivmoddi3+0x3d7>
   2cec4:	69 6f 6e 2e 68 00 69 	imul   $0x6900682e,0x6e(%edi),%ebp
   2cecb:	6e                   	outsb  %ds:(%esi),(%dx)
   2cecc:	63 6c 75 64          	arpl   %bp,0x64(%ebp,%esi,2)
   2ced0:	65                   	gs
   2ced1:	2f                   	das    
   2ced2:	62 69 74             	bound  %ebp,0x74(%ecx)
   2ced5:	68 65 6e 67 65       	push   $0x65676e65
   2ceda:	2f                   	das    
   2cedb:	74 72                	je     2cf4f <__udivmoddi3+0x3ef>
   2cedd:	61                   	popa   
   2cede:	6e                   	outsb  %ds:(%esi),(%dx)
   2cedf:	73 66                	jae    2cf47 <__udivmoddi3+0x3e7>
   2cee1:	6f                   	outsl  %ds:(%esi),(%dx)
   2cee2:	72 6d                	jb     2cf51 <__udivmoddi3+0x3f1>
   2cee4:	2e                   	cs
   2cee5:	68 00 73 65 6c       	push   $0x6c657300
   2ceea:	66                   	data16
   2ceeb:	00 25 73 3a 25 64    	add    %ah,0x64253a73
   2cef1:	3a 00                	cmp    (%eax),%al
   2cef3:	25 7a 64 2d 25       	and    $0x252d647a,%eax
   2cef8:	7a 64                	jp     2cf5e <__udivmoddi3+0x3fe>
   2cefa:	3a 20                	cmp    (%eax),%ah
   2cefc:	00 25 73 3a 20 22    	add    %ah,0x22203a73
   2cf02:	25 2e 2a 73 22       	and    $0x22732a2e,%eax
   2cf07:	0a 00                	or     (%eax),%al
   2cf09:	64 6f                	outsl  %fs:(%esi),(%dx)
   2cf0b:	00 65 6c             	add    %ah,0x6c(%ebp)
   2cf0e:	73 65                	jae    2cf75 <__udivmoddi3+0x415>
   2cf10:	00 69 66             	add    %ch,0x66(%ecx)
   2cf13:	00 70 61             	add    %dh,0x61(%eax)
   2cf16:	72 74                	jb     2cf8c <__udivmoddi3+0x42c>
   2cf18:	69 61 6c 00 72 65 70 	imul   $0x70657200,0x6c(%ecx),%esp
   2cf1f:	65                   	gs
   2cf20:	61                   	popa   
   2cf21:	74 00                	je     2cf23 <__udivmoddi3+0x3c3>
   2cf23:	73 74                	jae    2cf99 <__udivmoddi3+0x439>
   2cf25:	72 75                	jb     2cf9c <__udivmoddi3+0x43c>
   2cf27:	63 74 00 73          	arpl   %si,0x73(%eax,%eax,1)
   2cf2b:	77 69                	ja     2cf96 <__udivmoddi3+0x436>
   2cf2d:	74 63                	je     2cf92 <__udivmoddi3+0x432>
   2cf2f:	68 00 77 68 69       	push   $0x69687700
   2cf34:	6c                   	insb   (%dx),%es:(%edi)
   2cf35:	65 00 75 6e          	add    %dh,%gs:0x6e(%ebp)
   2cf39:	6b 6e 6f 77          	imul   $0x77,0x6f(%esi),%ebp
   2cf3d:	6e                   	outsb  %ds:(%esi),(%dx)
   2cf3e:	20 69 64             	and    %ch,0x64(%ecx)
   2cf41:	65 6e                	outsb  %gs:(%esi),(%dx)
   2cf43:	74 69                	je     2cfae <__udivmoddi3+0x44e>
   2cf45:	66 69 65 72 00 75    	imul   $0x7500,0x72(%ebp),%sp
   2cf4b:	6e                   	outsb  %ds:(%esi),(%dx)
   2cf4c:	65                   	gs
   2cf4d:	78 70                	js     2cfbf <__udivmoddi3+0x45f>
   2cf4f:	65 63 74 65 64       	arpl   %si,%gs:0x64(%ebp,%eiz,2)
   2cf54:	00 65 78             	add    %ah,0x78(%ebp)
   2cf57:	70 72                	jo     2cfcb <__udivmoddi3+0x46b>
   2cf59:	65                   	gs
   2cf5a:	73 73                	jae    2cfcf <__udivmoddi3+0x46f>
   2cf5c:	69 6f 6e 20 65 78 70 	imul   $0x70786520,0x6e(%edi),%ebp
   2cf63:	65 63 74 65 64       	arpl   %si,%gs:0x64(%ebp,%eiz,2)
   2cf68:	00 65 78             	add    %ah,0x78(%ebp)
   2cf6b:	70 65                	jo     2cfd2 <__udivmoddi3+0x472>
   2cf6d:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
   2cf71:	20 27                	and    %ah,(%edi)
   2cf73:	2c 27                	sub    $0x27,%al
   2cf75:	2c 20                	sub    $0x20,%al
   2cf77:	27                   	daa    
   2cf78:	3a 27                	cmp    (%edi),%ah
   2cf7a:	2c 20                	sub    $0x20,%al
   2cf7c:	6f                   	outsl  %ds:(%esi),(%dx)
   2cf7d:	72 20                	jb     2cf9f <__udivmoddi3+0x43f>
   2cf7f:	27                   	daa    
   2cf80:	5d                   	pop    %ebp
   2cf81:	27                   	daa    
   2cf82:	00 74 72 61          	add    %dh,0x61(%edx,%esi,2)
   2cf86:	6e                   	outsb  %ds:(%esi),(%dx)
   2cf87:	73 66                	jae    2cfef <__udivmoddi3+0x48f>
   2cf89:	6f                   	outsl  %ds:(%esi),(%dx)
   2cf8a:	72 6d                	jb     2cff9 <__udivmoddi3+0x499>
   2cf8c:	20 6e 6f             	and    %ch,0x6f(%esi)
   2cf8f:	74 20                	je     2cfb1 <__udivmoddi3+0x451>
   2cf91:	66 6f                	outsw  %ds:(%esi),(%dx)
   2cf93:	75 6e                	jne    2d003 <__udivmoddi3+0x4a3>
   2cf95:	64 00 65 6c          	add    %ah,%fs:0x6c(%ebp)
   2cf99:	73 65                	jae    2d000 <__udivmoddi3+0x4a0>
   2cf9b:	20 65 78             	and    %ah,0x78(%ebp)
   2cf9e:	70 65                	jo     2d005 <__udivmoddi3+0x4a5>
   2cfa0:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
   2cfa4:	00 6d 61             	add    %ch,0x61(%ebp)
   2cfa7:	69 6e 00 6e 6f 20 22 	imul   $0x22206f6e,0x0(%esi),%ebp
   2cfae:	6d                   	insl   (%dx),%es:(%edi)
   2cfaf:	61                   	popa   
   2cfb0:	69 6e 22 20 74 72 61 	imul   $0x61727420,0x22(%esi),%ebp
   2cfb7:	6e                   	outsb  %ds:(%esi),(%dx)
   2cfb8:	73 66                	jae    2d020 <__udivmoddi3+0x4c0>
   2cfba:	6f                   	outsl  %ds:(%esi),(%dx)
   2cfbb:	72 6d                	jb     2d02a <__udivmoddi3+0x4ca>
   2cfbd:	0a 00                	or     (%eax),%al
   2cfbf:	90                   	nop
   2cfc0:	75 6e                	jne    2d030 <__udivmoddi3+0x4d0>
   2cfc2:	65                   	gs
   2cfc3:	78 70                	js     2d035 <__udivmoddi3+0x4d5>
   2cfc5:	65 63 74 65 64       	arpl   %si,%gs:0x64(%ebp,%eiz,2)
   2cfca:	20 28                	and    %ch,(%eax)
   2cfcc:	69 64 65 6e 74 69 66 	imul   $0x69666974,0x6e(%ebp,%eiz,2),%esp
   2cfd3:	69 
   2cfd4:	65                   	gs
   2cfd5:	72 20                	jb     2cff7 <__udivmoddi3+0x497>
   2cfd7:	65                   	gs
   2cfd8:	78 70                	js     2d04a <CSWTCH.54+0xa>
   2cfda:	65 63 74 65 64       	arpl   %si,%gs:0x64(%ebp,%eiz,2)
   2cfdf:	29 00                	sub    %eax,(%eax)
   2cfe1:	00 00                	add    %al,(%eax)
   2cfe3:	00 69 6e             	add    %ch,0x6e(%ecx)
   2cfe6:	63 6f 72             	arpl   %bp,0x72(%edi)
   2cfe9:	72 65                	jb     2d050 <CSWTCH.54+0x10>
   2cfeb:	63 74 20 6e          	arpl   %si,0x6e(%eax,%eiz,1)
   2cfef:	75 6d                	jne    2d05e <CSWTCH.54+0x1e>
   2cff1:	62 65 72             	bound  %esp,0x72(%ebp)
   2cff4:	20 6f 66             	and    %ch,0x66(%edi)
   2cff7:	20 70 61             	and    %dh,0x61(%eax)
   2cffa:	72 61                	jb     2d05d <CSWTCH.54+0x1d>
   2cffc:	6d                   	insl   (%dx),%es:(%edi)
   2cffd:	65                   	gs
   2cffe:	74 65                	je     2d065 <CSWTCH.54+0x25>
   2d000:	72 73                	jb     2d075 <CSWTCH.54+0x35>
   2d002:	20 62 65             	and    %ah,0x65(%edx)
   2d005:	66 6f                	outsw  %ds:(%esi),(%dx)
   2d007:	72 65                	jb     2d06e <CSWTCH.54+0x2e>
   2d009:	00 00                	add    %al,(%eax)
   2d00b:	00 75 6e             	add    %dh,0x6e(%ebp)
   2d00e:	65                   	gs
   2d00f:	78 70                	js     2d081 <CSWTCH.54+0x41>
   2d011:	65 63 74 65 64       	arpl   %si,%gs:0x64(%ebp,%eiz,2)
   2d016:	20 28                	and    %ch,(%eax)
   2d018:	74 72                	je     2d08c <CSWTCH.54+0x4c>
   2d01a:	61                   	popa   
   2d01b:	6e                   	outsb  %ds:(%esi),(%dx)
   2d01c:	73 66                	jae    2d084 <CSWTCH.54+0x44>
   2d01e:	6f                   	outsl  %ds:(%esi),(%dx)
   2d01f:	72 6d                	jb     2d08e <CSWTCH.54+0x4e>
   2d021:	20 65 78             	and    %ah,0x78(%ebp)
   2d024:	70 65                	jo     2d08b <CSWTCH.54+0x4b>
   2d026:	63 74 65 64          	arpl   %si,0x64(%ebp,%eiz,2)
   2d02a:	29 00                	sub    %eax,(%eax)
   2d02c:	66 90                	xchg   %ax,%ax
   2d02e:	66 90                	xchg   %ax,%ax
   2d030:	66 90                	xchg   %ax,%ax
   2d032:	66 90                	xchg   %ax,%ax
   2d034:	66 90                	xchg   %ax,%ax
   2d036:	66 90                	xchg   %ax,%ax
   2d038:	66 90                	xchg   %ax,%ax
   2d03a:	66 90                	xchg   %ax,%ax
   2d03c:	66 90                	xchg   %ax,%ax
   2d03e:	66 90                	xchg   %ax,%ax

0002d040 <CSWTCH.54>:
   2d040:	01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00     ................
   2d050:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
   2d09c:	01 00 00 00 6e 6f 64 65 00 66 90 90                 ....node.f..

0002d0a8 <struct_node_ops>:
   2d0a8:	20 72 00 00 d0 70 00 00 d0 63 00 00                  r...p...c..

0002d0b4 <struct_node_seq_ops>:
   2d0b4:	d0 5c 00 00                                         .\..

0002d0b8 <repeat_transform_ops>:
   2d0b8:	e0 62 00 00 00 00 00 00 e0 69 00 00 70 60 00 00     .b.......i..p`..

0002d0c8 <repeat_node_ops>:
   2d0c8:	b0 73 00 00 50 70 00 00 70 5e 00 00                 .s..Pp..p^..

0002d0d4 <repeat_node_seq_ops>:
   2d0d4:	a0 5c 00 00                                         .\..

0002d0d8 <do_while_transform_ops>:
	...
   2d0e0:	40 67 00 00 c0 5f 00 00                             @g..._..

0002d0e8 <do_while_node_ops>:
   2d0e8:	a0 6e 00 00 00 00 00 00 f0 5e 00 00                 .n.......^..

0002d0f4 <do_while_node_seq_ops>:
   2d0f4:	70 5c 00 00 66 69 6c 65 3a 00 62 6c 6f 63 6b 3a     p\..file:.block:
   2d104:	00 68 65 78 3a 00 73 72 63 2f 74 72 61 6e 73 66     .hex:.src/transf
   2d114:	6f 72 6d 2e 63 00 73 63 6f 70 65 00 6f 70 73 2d     orm.c.scope.ops-
   2d124:	3e 64 65 73 74 72 6f 79 00 21 73 65 6c 66 2d 3e     >destroy.!self->
   2d134:	74 72 61 6e 73 66 6f 72 6d 00 61 73 63 69 69 00     transform.ascii.
   2d144:	62 69 74 00 62 69 74 73 5f 62 65 00 62 69 74 73     bit.bits_be.bits
   2d154:	5f 6c 65 00 6b 6e 6f 77 6e 5f 6c 65 6e 67 74 68     _le.known_length
   2d164:	00 6e 6f 6e 7a 65 72 6f 5f 62 6f 6f 6c 65 61 6e     .nonzero_boolean
   2d174:	00 75 69 6e 74 38 00 75 69 6e 74 31 36 62 65 00     .uint8.uint16be.
   2d184:	75 69 6e 74 31 36 6c 65 00 75 69 6e 74 33 32 62     uint16le.uint32b
   2d194:	65 00 75 69 6e 74 33 32 6c 65 00 75 69 6e 74 36     e.uint32le.uint6
   2d1a4:	34 62 65 00 75 69 6e 74 36 34 6c 65 00 75 69 6e     4be.uint64le.uin
   2d1b4:	74 5f 62 65 00 75 69 6e 74 5f 6c 65 00 7a 65 72     t_be.uint_le.zer
   2d1c4:	6f 5f 74 65 72 6d 69 6e 61 74 65 64 00 66 90 90     o_terminated.f..
   2d1d4:	73 65 6c 66 2d 3e 74 79 70 65 20 3d 3d 20 42 49     self->type == BI
   2d1e4:	54 48 45 4e 47 45 5f 4e 4f 44 45 5f 49 4e 54 45     THENGE_NODE_INTE
   2d1f4:	47 45 52 00 69 20 3e 3d 20 30 20 26 26 20 69 20     GER.i >= 0 && i 
   2d204:	3c 20 73 63 6f 70 65 2d 3e 6e 75 6d 5f 70 61 72     < scope->num_par
   2d214:	61 6d 73 00 6f 70 73 2d 3e 61 70 70 6c 79 20 7c     ams.ops->apply |
   2d224:	7c 20 6f 70 73 2d 3e 70 72 65 66 69 78 5f 61 70     | ops->prefix_ap
   2d234:	70 6c 79 00 62 69 74 68 65 6e 67 65 5f 74 72 61     ply.bithenge_tra
   2d244:	6e 73 66 6f 72 6d 5f 6e 75 6d 5f 70 61 72 61 6d     nsform_num_param
   2d254:	73 28 74 72 61 6e 73 66 6f 72 6d 29 20 3d 3d 20     s(transform) == 
   2d264:	30 00 66 90                                         0.f.

0002d268 <bits_xe_blob_ops>:
   2d268:	e0 7f 00 00 00 00 00 00 20 81 00 00 40 7c 00 00     ........ ...@|..

0002d278 <barrier_transform_ops>:
   2d278:	90 92 00 00 d0 96 00 00 b0 93 00 00 a0 7c 00 00     .............|..

0002d288 <zero_terminated_ops>:
   2d288:	30 8d 00 00 20 7d 00 00 00 00 00 00 10 7c 00 00     0... }.......|..

0002d298 <uint_xe_ops>:
	...
   2d2a0:	80 89 00 00 10 7c 00 00                             .....|..

0002d2a8 <uint64be_ops>:
   2d2a8:	e0 86 00 00 f0 7b 00 00 00 00 00 00 10 7c 00 00     .....{.......|..

0002d2b8 <uint64le_ops>:
   2d2b8:	90 87 00 00 f0 7b 00 00 00 00 00 00 10 7c 00 00     .....{.......|..

0002d2c8 <uint32be_ops>:
   2d2c8:	30 88 00 00 d0 7b 00 00 00 00 00 00 10 7c 00 00     0....{.......|..

0002d2d8 <uint32le_ops>:
   2d2d8:	e0 88 00 00 d0 7b 00 00 00 00 00 00 10 7c 00 00     .....{.......|..

0002d2e8 <uint16be_ops>:
   2d2e8:	80 85 00 00 b0 7b 00 00 00 00 00 00 10 7c 00 00     .....{.......|..

0002d2f8 <uint16le_ops>:
   2d2f8:	30 86 00 00 b0 7b 00 00 00 00 00 00 10 7c 00 00     0....{.......|..

0002d308 <uint8_ops>:
   2d308:	d0 84 00 00 90 7b 00 00 00 00 00 00 10 7c 00 00     .....{.......|..

0002d318 <nonzero_boolean_ops>:
   2d318:	70 7c 00 00 00 00 00 00 00 00 00 00 10 7c 00 00     p|...........|..

0002d328 <known_length_ops>:
   2d328:	30 8c 00 00 40 7f 00 00 00 00 00 00 10 7c 00 00     0...@........|..

0002d338 <invalid_ops>:
   2d338:	80 7b 00 00 00 00 00 00 00 00 00 00 10 7c 00 00     .{...........|..

0002d348 <bits_xe_ops>:
   2d348:	a0 7e 00 00 00 00 00 00 00 00 00 00 10 7c 00 00     .~...........|..

0002d358 <bit_ops>:
	...
   2d360:	40 80 00 00 10 7c 00 00                             @....|..

0002d368 <ascii_ops>:
   2d368:	80 83 00 00 00 00 00 00 00 00 00 00 10 7c 00 00     .............|..
   2d378:	73 72 63 2f 74 72 65 65 2e 63 00 6e 6f 64 65 2d     src/tree.c.node-
   2d388:	3e 72 65 66 73 20 3e 20 30 00 6f 75 74 00 66 90     >refs > 0.out.f.
   2d398:	f5 a0 00 00 aa a0 00 00 a0 a1 00 00 80 a1 00 00     ................
   2d3a8:	d0 a1 00 00 b8 a1 00 00 ad aa 00 00 97 aa 00 00     ................
   2d3b8:	18 ab 00 00 f8 aa 00 00 d8 aa 00 00 c0 aa 00 00     ................

0002d3c8 <empty_internal_node_ops>:
   2d3c8:	30 9e 00 00 40 9e 00 00 50 9e 00 00 73 72 63 2f     0...@...P...src/
   2d3d8:	68 65 6c 65 6e 6f 73 2f 62 6c 6f 63 6b 2e 63 00     helenos/block.c.

0002d3e8 <block_ops>:
   2d3e8:	90 ab 00 00 e0 ab 00 00 00 00 00 00 b0 ab 00 00     ................
   2d3f8:	73 72 63 2f 62 6c 6f 62 2e 63 00 73 6f 75 72 63     src/blob.c.sourc
   2d408:	65 00 62 6c 6f 62 00 6f 70 73 2d 3e 72 65 61 64     e.blob.ops->read
   2d418:	20 7c 7c 20 6f 70 73 2d 3e 72 65 61 64 5f 62 69      || ops->read_bi
   2d428:	74 73 00 6f 70 73 2d 3e 73 69 7a 65 00 6f 70 73     ts.ops->size.ops
   2d438:	2d 3e 72 65 61 64 00 62 75 66 66 65 72 20 7c 7c     ->read.buffer ||
   2d448:	20 21 6c 65 6e 00 61 2d 3e 62 61 73 65 2e 62 6c      !len.a->base.bl
   2d458:	6f 62 5f 6f 70 73 00 62 2d 3e 62 61 73 65 2e 62     ob_ops.b->base.b
   2d468:	6c 6f 62 5f 6f 70 73 00                             lob_ops.

0002d470 <sequential_ops>:
   2d470:	50 b5 00 00 f0 af 00 00 00 00 00 00 20 af 00 00     P........... ...

0002d480 <memory_ops>:
   2d480:	c0 ad 00 00 50 af 00 00 00 00 00 00 f0 ae 00 00     ....P...........

0002d490 <subblob_ops>:
   2d490:	70 b2 00 00 90 b1 00 00 e0 ad 00 00 10 b3 00 00     p...............

0002d4a0 <compose_transform_ops>:
   2d4a0:	e0 bc 00 00 c0 bc 00 00 00 00 00 00 50 be 00 00     ............P...

0002d4b0 <if_transform_ops>:
   2d4b0:	20 c0 00 00 90 bd 00 00 00 00 00 00 40 bf 00 00      ...........@...

0002d4c0 <partial_transform_ops>:
   2d4c0:	80 bc 00 00 00 00 00 00 00 00 00 00 e0 be 00 00     ................
   2d4d0:	73 72 63 2f 65 78 70 72 65 73 73 69 6f 6e 2e 63     src/expression.c
   2d4e0:	00 4e 6f 20 73 63 6f 70 65 20 6d 65 6d 62 65 72     .No scope member
   2d4f0:	20 25 74 00 61 5f 73 69 7a 65 20 25 20 38 20 3d      %t.a_size % 8 =
   2d500:	3d 20 30 00 61 5f 73 69 7a 65 20 2b 20 62 5f 73     = 0.a_size + b_s
   2d510:	69 7a 65 20 3c 3d 20 2a 73 69 7a 65 00 6f 70 73     ize <= *size.ops
   2d520:	2d 3e 65 76 61 6c 75 61 74 65 00 62 5f 65 78 70     ->evaluate.b_exp
   2d530:	72 00 66 90 43 6f 6e 63 61 74 65 6e 61 74 69 6f     r.f.Concatenatio
   2d540:	6e 20 61 72 67 75 6d 65 6e 74 73 20 6d 75 73 74     n arguments must
   2d550:	20 62 65 20 62 6c 6f 62 73 00 66 90 c8 df 00 00      be blobs.f.....
   2d560:	d8 e0 00 00 d8 e0 00 00 d8 e0 00 00 d8 e0 00 00     ................
   2d570:	d8 e0 00 00 d8 e0 00 00 d8 e0 00 00 d8 e0 00 00     ................
   2d580:	d8 e0 00 00 c8 df 00 00 c8 df 00 00 88 e0 00 00     ................
   2d590:	88 e0 00 00 c8 df 00 00 1c e0 00 00 46 e3 00 00     ............F...
   2d5a0:	1d e3 00 00 07 e3 00 00 c2 e2 00 00 c1 e3 00 00     ................
   2d5b0:	62 e3 00 00 cb e1 00 00 b0 e1 00 00 98 e2 00 00     b...............
   2d5c0:	6e e2 00 00 2d e2 00 00 e6 e1 00 00 91 e1 00 00     n...-...........
   2d5d0:	72 e1 00 00 48 e1 00 00 24 e0 00 00                 r...H...$...

0002d5dc <binary_expression_ops>:
   2d5dc:	40 df 00 00 70 cb 00 00                             @...p...

0002d5e4 <param_expression_ops>:
   2d5e4:	30 c5 00 00 a0 c4 00 00                             0.......

0002d5ec <const_expression_ops>:
   2d5ec:	80 cc 00 00 e0 c4 00 00                             ........

0002d5f4 <scope_member_expression_ops>:
   2d5f4:	a0 c5 00 00 b0 c4 00 00                             ........

0002d5fc <subblob_expression_ops>:
   2d5fc:	c0 cc 00 00 70 c9 00 00                             ....p...

0002d604 <param_wrapper_ops>:
   2d604:	a0 d3 00 00 70 c6 00 00 c0 d4 00 00 20 ca 00 00     ....p....... ...

0002d614 <expression_transform_ops>:
   2d614:	60 ce 00 00 00 00 00 00 00 00 00 00 10 cb 00 00     `...............

0002d624 <inputless_transform_ops>:
   2d624:	00 00 00 00 50 c4 00 00 90 c7 00 00 10 cb 00 00     ....P...........

0002d634 <concat_blob_ops>:
   2d634:	00 c9 00 00 60 d1 00 00 00 cf 00 00 f0 cb 00 00     ....`...........

0002d644 <in_node_ops>:
   2d644:	50 c5 00 00 70 c4 00 00                             P...p...

0002d64c <current_node_ops>:
   2d64c:	10 c5 00 00 70 c4 00 00 73 72 63 2f 66 69 6c 65     ....p...src/file
   2d65c:	2e 63 00 66 69 6c 65 6e 61 6d 65 00                 .c.filename.

0002d668 <file_ops>:
   2d668:	b0 e5 00 00 00 e6 00 00 00 00 00 00 d0 e5 00 00     ................
   2d678:	64 65 76 63 6f 6e 00 64 65 76 63 6f 6e 2d 3e 63     devcon.devcon->c
   2d688:	61 63 68 65 00 62 6c 6f 63 6b 2d 3e 72 65 66 63     ache.block->refc
   2d698:	6e 74 20 3e 3d 20 31 00 64 65 76 63 6f 6e 2d 3e     nt >= 1.devcon->
   2d6a8:	63 61 63 68 65 20 21 3d 20 4e 55 4c 4c 00 62 2d     cache != NULL.b-
   2d6b8:	3e 74 6f 78 69 63 00 90 45 72 72 6f 72 20 25 64     >toxic..Error %d
   2d6c8:	20 72 65 61 64 69 6e 67 20 25 7a 75 20 62 6c 6f      reading %zu blo
   2d6d8:	63 6b 73 20 73 74 61 72 74 69 6e 67 20 61 74 20     cks starting at 
   2d6e8:	62 6c 6f 63 6b 20 25 6c 6c 75 20 66 72 6f 6d 20     block %llu from 
   2d6f8:	64 65 76 69 63 65 20 68 61 6e 64 6c 65 20 25 75     device handle %u
   2d708:	0a 00 00 00 45 72 72 6f 72 20 25 64 20 77 72 69     ....Error %d wri
   2d718:	74 69 6e 67 20 25 7a 75 20 62 6c 6f 63 6b 73 20     ting %zu blocks 
   2d728:	73 74 61 72 74 69 6e 67 20 61 74 20 62 6c 6f 63     starting at bloc
   2d738:	6b 20 25 6c 6c 75 20 74 6f 20 64 65 76 69 63 65     k %llu to device
   2d748:	20 68 61 6e 64 6c 65 20 25 75 0a 00 67 65 6e 65      handle %u..gene
   2d758:	72 69 63 2f 6c 6f 63 2e 63 00 61 63 74 5f 73 69     ric/loc.c.act_si
   2d768:	7a 65 20 3c 3d 20 4c 4f 43 5f 4e 41 4d 45 5f 4d     ze <= LOC_NAME_M
   2d778:	41 58 4c 45 4e 00 67 65 6e 65 72 69 63 2f 73 74     AXLEN.generic/st
   2d788:	72 2e 63 00 65 6e 64 70 74 72 20 21 3d 20 4e 55     r.c.endptr != NU
   2d798:	4c 4c 00 6e 65 67 20 21 3d 20 4e 55 4c 4c 00 72     LL.neg != NULL.r
   2d7a8:	65 73 75 6c 74 20 21 3d 20 4e 55 4c 4c 00 64 6c     esult != NULL.dl
   2d7b8:	65 6e 20 3e 20 30 00 45 69 42 00 54 69 42 00 47     en > 0.EiB.TiB.G
   2d7c8:	69 42 00 4d 69 42 00 4b 69 42 00 42 20 20 00 66     iB.MiB.KiB.B  .f
   2d7d8:	90 66 90 66 90 66 90 90 3c 3b 01 00 ea 3a 01 00     .f.f.f..<;...:..
   2d7e8:	2f 3b 01 00 ea 3a 01 00 ea 3a 01 00 ea 3a 01 00     /;...:...:...:..
   2d7f8:	ea 3a 01 00 ea 3a 01 00 ea 3a 01 00 ea 3a 01 00     .:...:...:...:..
   2d808:	ea 3a 01 00 ea 3a 01 00 ea 3a 01 00 22 3b 01 00     .:...:...:..";..
   2d818:	ea 3a 01 00 ea 3a 01 00 ea 3a 01 00 ea 3a 01 00     .:...:...:...:..
   2d828:	2f 3b 01 00 ea 3a 01 00 ea 3a 01 00 ea 3a 01 00     /;...:...:...:..
   2d838:	15 3b 01 00 ea 3a 01 00 ea 3a 01 00 ea 3a 01 00     .;...:...:...:..
   2d848:	ea 3a 01 00 ea 3a 01 00 ea 3a 01 00 ea 3a 01 00     .:...:...:...:..
   2d858:	ea 3a 01 00 ea 3a 01 00 3c 3b 01 00 ea 3a 01 00     .:...:..<;...:..
   2d868:	2f 3b 01 00 ea 3a 01 00 ea 3a 01 00 ea 3a 01 00     /;...:...:...:..
   2d878:	ea 3a 01 00 ea 3a 01 00 ea 3a 01 00 ea 3a 01 00     .:...:...:...:..
   2d888:	ea 3a 01 00 ea 3a 01 00 ea 3a 01 00 22 3b 01 00     .:...:...:..";..
   2d898:	ea 3a 01 00 ea 3a 01 00 ea 3a 01 00 ea 3a 01 00     .:...:...:...:..
   2d8a8:	2f 3b 01 00 ea 3a 01 00 ea 3a 01 00 ea 3a 01 00     /;...:...:...:..
   2d8b8:	15 3b 01 00 00 00 00 00                             .;......

0002d8c0 <CSWTCH.43>:
   2d8c0:	01 00 00 00 01 00 00 00 01 00 00 00 01 00 00 00     ................
   2d8d0:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
   2d91c:	01 00 00 00 42 61 64 20 63 68 65 63 6b 73 75 6d     ....Bad checksum
   2d92c:	00 4f 70 65 72 61 74 69 6f 6e 20 73 74 61 6c 6c     .Operation stall
   2d93c:	65 64 00 52 65 73 6f 75 72 63 65 20 69 73 20 65     ed.Resource is e
   2d94c:	6d 70 74 79 00 55 6e 6b 6f 77 6e 20 65 72 72 6f     mpty.Unkown erro
   2d95c:	72 20 63 6f 64 65 20 25 64 00 4e 6f 20 65 72 72     r code %d.No err
   2d96c:	6f 72 00 4e 6f 20 73 75 63 68 20 65 6e 74 72 79     or.No such entry
   2d97c:	00 4e 6f 74 20 65 6e 6f 75 67 68 20 6d 65 6d 6f     .Not enough memo
   2d98c:	72 79 00 4c 69 6d 69 74 20 65 78 63 65 65 64 65     ry.Limit exceede
   2d99c:	64 00 43 6f 6e 6e 65 63 74 69 6f 6e 20 72 65 66     d.Connection ref
   2d9ac:	75 73 65 64 00 46 6f 72 77 61 72 64 69 6e 67 20     used.Forwarding 
   2d9bc:	65 72 72 6f 72 00 50 65 72 6d 69 73 73 69 6f 6e     error.Permission
   2d9cc:	20 64 65 6e 69 65 64 00 41 6e 73 77 65 72 62 6f      denied.Answerbo
   2d9dc:	78 20 63 6c 6f 73 65 64 20 63 6f 6e 6e 65 63 74     x closed connect
   2d9ec:	69 6f 6e 00 4f 74 68 65 72 20 70 61 72 74 79 20     ion.Other party 
   2d9fc:	65 72 72 6f 72 00 45 6e 74 72 79 20 61 6c 72 65     error.Entry alre
   2da0c:	61 64 79 20 65 78 69 73 74 73 00 42 61 64 20 6d     ady exists.Bad m
   2da1c:	65 6d 6f 72 79 20 70 6f 69 6e 74 65 72 00 4e 6f     emory pointer.No
   2da2c:	74 20 73 75 70 70 6f 72 74 65 64 00 41 64 64 72     t supported.Addr
   2da3c:	65 73 73 20 6e 6f 74 20 61 76 61 69 6c 61 62 6c     ess not availabl
   2da4c:	65 00 54 69 6d 65 6f 75 74 20 65 78 70 69 72 65     e.Timeout expire
   2da5c:	64 00 49 6e 76 61 6c 69 64 20 76 61 6c 75 65 00     d.Invalid value.
   2da6c:	52 65 73 6f 75 72 63 65 20 69 73 20 62 75 73 79     Resource is busy
   2da7c:	00 52 65 73 75 6c 74 20 64 6f 65 73 20 6e 6f 74     .Result does not
   2da8c:	20 66 69 74 20 69 74 73 20 73 69 7a 65 00 4f 70      fit its size.Op
   2da9c:	65 72 61 74 69 6f 6e 20 69 6e 74 65 72 72 75 70     eration interrup
   2daac:	74 65 64 00 52 65 73 6f 75 72 63 65 20 74 65 6d     ted.Resource tem
   2dabc:	70 6f 72 61 72 69 6c 79 20 75 6e 61 76 61 69 6c     porarily unavail
   2dacc:	61 62 6c 65 00 66 90 66 90 66 90 66 90 66 90 66     able.f.f.f.f.f.f
   2dadc:	90 66 90 90                                         .f..

0002dae0 <err_desc>:
   2dae0:	66 d9 02 00 6f d9 02 00 7d d9 02 00 8f d9 02 00     f...o...}.......
   2daf0:	9e d9 02 00 b1 d9 02 00 c2 d9 02 00 d4 d9 02 00     ................
   2db00:	f0 d9 02 00 02 da 02 00 17 da 02 00 2a da 02 00     ............*...
   2db10:	38 da 02 00 4e da 02 00 5e da 02 00 6c da 02 00     8...N...^...l...
   2db20:	7d da 02 00 9a da 02 00 44 65 61 64 6c 6f 63 6b     }.......Deadlock
   2db30:	20 64 65 74 65 63 74 65 64 2e 0a 00 67 65 6e 65      detected...gene
   2db40:	72 69 63 2f 66 69 62 72 69 6c 5f 73 79 6e 63 68     ric/fibril_synch
   2db50:	2e 63 00 74 6d 70 20 21 3d 20 4e 55 4c 4c 00 66     .c.tmp != NULL.f
   2db60:	69 62 72 69 6c 5f 6d 75 74 65 78 5f 69 73 5f 6c     ibril_mutex_is_l
   2db70:	6f 63 6b 65 64 28 66 6d 29 00 66 72 77 2d 3e 77     ocked(fm).frw->w
   2db80:	72 69 74 65 72 73 20 3d 3d 20 31 00 72 63 20 3d     riters == 1.rc =
   2db90:	3d 20 45 4f 4b 00 74 69 6d 65 72 2d 3e 73 74 61     = EOK.timer->sta
   2dba0:	74 65 20 21 3d 20 66 74 73 5f 61 63 74 69 76 65     te != fts_active
   2dbb0:	00 66 90 90 46 69 62 72 69 6c 20 25 70 20 77 61     .f..Fibril %p wa
   2dbc0:	69 74 73 20 66 6f 72 20 70 72 69 6d 69 74 69 76     its for primitiv
   2dbd0:	65 20 25 70 2e 0a 00 00 50 72 69 6d 69 74 69 76     e %p....Primitiv
   2dbe0:	65 20 25 70 20 69 73 20 6f 77 6e 65 64 20 62 79     e %p is owned by
   2dbf0:	20 66 69 62 72 69 6c 20 25 70 2e 0a 00 00 00 00      fibril %p......
   2dc00:	21 66 72 77 2d 3e 72 65 61 64 65 72 73 20 26 26     !frw->readers &&
   2dc10:	20 21 66 72 77 2d 3e 77 72 69 74 65 72 73 00 00      !frw->writers..
   2dc20:	66 69 62 72 69 6c 5f 72 77 6c 6f 63 6b 5f 69 73     fibril_rwlock_is
   2dc30:	5f 72 65 61 64 5f 6c 6f 63 6b 65 64 28 66 72 77     _read_locked(frw
   2dc40:	29 00 00 00 66 69 62 72 69 6c 5f 72 77 6c 6f 63     )...fibril_rwloc
   2dc50:	6b 5f 69 73 5f 77 72 69 74 65 5f 6c 6f 63 6b 65     k_is_write_locke
   2dc60:	64 28 66 72 77 29 00 67 65 6e 65 72 69 63 2f 74     d(frw).generic/t
   2dc70:	61 73 6b 2e 63 00 74 65 78 69 74 00 72 65 74 76     ask.c.texit.retv
   2dc80:	61 6c 00 67 65 6e 65 72 69 63 2f 69 6f 2f 70 72     al.generic/io/pr
   2dc90:	69 6e 74 66 5f 63 6f 72 65 2e 63 00 30 20 3c 20     intf_core.c.0 < 
   2dca0:	6c 65 6e 00 30 20 3c 3d 20 70 72 65 63 69 73 69     len.0 <= precisi
   2dcb0:	6f 6e 00 4e 41 4e 00 6e 61 6e 00 69 6e 66 00 49     on.NAN.nan.inf.I
   2dcc0:	4e 46 00 76 61 6c 2e 69 73 5f 73 70 65 63 69 61     NF.val.is_specia
   2dcd0:	6c 00 31 20 3c 3d 20 2a 6c 65 6e 00 30 31 32 33     l.1 <= *len.0123
   2dce0:	34 35 36 37 38 39 41 42 43 44 45 46 00 30 31 32     456789ABCDEF.012
   2dcf0:	33 34 35 36 37 38 39 61 62 63 64 65 66 00 28 4e     3456789abcdef.(N
   2dd00:	55 4c 4c 29 00 66 90 90 30 20 3c 3d 20 64 65 63     ULL).f..0 <= dec
   2dd10:	5f 65 78 70 20 7c 7c 20 2d 64 65 63 5f 65 78 70     _exp || -dec_exp
   2dd20:	20 3c 3d 20 70 72 65 63 69 73 69 6f 6e 00 66 90      <= precision.f.
   2dd30:	38 c9 01 00 47 c8 01 00 47 c8 01 00 28 c9 01 00     8...G...G...(...
   2dd40:	47 c8 01 00 47 c8 01 00 47 c8 01 00 47 c8 01 00     G...G...G...G...
   2dd50:	47 c8 01 00 47 c8 01 00 47 c8 01 00 18 c9 01 00     G...G...G.......
   2dd60:	47 c8 01 00 08 c9 01 00 47 c8 01 00 47 c8 01 00     G.......G...G...
   2dd70:	f8 c8 01 00 c8 c7 01 00 df c8 01 00 df c8 01 00     ................
   2dd80:	df c8 01 00 df c8 01 00 df c8 01 00 df c8 01 00     ................
   2dd90:	df c8 01 00 df c8 01 00 df c8 01 00 df c8 01 00     ................
   2dda0:	df c8 01 00 df c8 01 00 df c8 01 00 df c8 01 00     ................
   2ddb0:	df c8 01 00 df c8 01 00 df c8 01 00 df c8 01 00     ................
   2ddc0:	df c8 01 00 df c8 01 00 df c8 01 00 df c8 01 00     ................
   2ddd0:	df c8 01 00 df c8 01 00 df c8 01 00 df c8 01 00     ................
   2dde0:	df c8 01 00 df c8 01 00 df c8 01 00 df c8 01 00     ................
   2ddf0:	df c8 01 00 32 d4 01 00 32 d4 01 00 32 d4 01 00     ....2...2...2...
   2de00:	df c8 01 00 df c8 01 00 df c8 01 00 df c8 01 00     ................
   2de10:	df c8 01 00 df c8 01 00 df c8 01 00 df c8 01 00     ................
   2de20:	29 cb 01 00 df c8 01 00 df c8 01 00 df c8 01 00     )...............
   2de30:	df c8 01 00 df c8 01 00 df c8 01 00 df c8 01 00     ................
   2de40:	2f d1 01 00 df c8 01 00 df c8 01 00 df c8 01 00     /...............
   2de50:	df c8 01 00 df c8 01 00 df c8 01 00 df c8 01 00     ................
   2de60:	df c8 01 00 df c8 01 00 26 d2 01 00 3f d2 01 00     ........&...?...
   2de70:	d7 d2 01 00 32 d4 01 00 32 d4 01 00 32 d4 01 00     ....2...2...2...
   2de80:	df c8 01 00 d7 d2 01 00 df c8 01 00 df c8 01 00     ................
   2de90:	df c8 01 00 df c8 01 00 df c8 01 00 19 d4 01 00     ................
   2dea0:	33 cb 01 00 df c8 01 00 df c8 01 00 f7 d2 01 00     3...............
   2deb0:	df c8 01 00 00 d4 01 00 df c8 01 00 df c8 01 00     ................
   2dec0:	70 d4 01 00 60 d1 01 00 60 d1 01 00 60 d1 01 00     p...`...`...`...
   2ded0:	60 d1 01 00 ba d1 01 00 4e cb 01 00 f6 d1 01 00     `.......N.......
   2dee0:	09 d9 01 00 a7 d8 01 00 c7 d7 01 00 52 d4 01 00     ............R...
   2def0:	52 d4 01 00 52 d4 01 00 52 d4 01 00 52 d4 01 00     R...R...R...R...
   2df00:	52 d4 01 00 52 d4 01 00 52 d4 01 00 52 d4 01 00     R...R...R...R...
   2df10:	52 d4 01 00 52 d4 01 00 52 d4 01 00 52 d4 01 00     R...R...R...R...
   2df20:	52 d4 01 00 52 d4 01 00 52 d4 01 00 52 d4 01 00     R...R...R...R...
   2df30:	52 d4 01 00 52 d4 01 00 52 d4 01 00 52 d4 01 00     R...R...R...R...
   2df40:	52 d4 01 00 52 d4 01 00 52 d4 01 00 52 d4 01 00     R...R...R...R...
   2df50:	52 d4 01 00 52 d4 01 00 52 d4 01 00 52 d4 01 00     R...R...R...R...
   2df60:	13 d9 01 00 b1 d8 01 00 d1 d7 01 00                 ............

0002df6c <invalch>:
   2df6c:	3f 67 65 6e 65 72 69 63 2f 64 6f 75 62 6c 65 5f     ?generic/double_
   2df7c:	74 6f 5f 73 74 72 2e 63 00 69 73 5f 6e 6f 72 6d     to_str.c.is_norm
   2df8c:	61 6c 69 7a 65 64 28 79 29 00 21 69 73 5f 6e 6f     alized(y).!is_no
   2df9c:	72 6d 61 6c 69 7a 65 64 28 76 61 6c 2e 70 6f 73     rmalized(val.pos
   2dfac:	5f 76 61 6c 29 00 73 63 61 6c 65 64 5f 75 70 70     _val).scaled_upp
   2dfbc:	65 72 2e 73 69 67 6e 69 66 69 63 61 6e 64 20 21     er.significand !
   2dfcc:	3d 20 30 00 30 20 3c 20 6c 65 6e 20 26 26 20 6c     = 0.0 < len && l
   2dfdc:	65 6e 20 3c 20 62 75 66 5f 73 69 7a 65 00 27 30     en < buf_size.'0
   2dfec:	27 20 3c 20 62 75 66 5b 6c 65 6e 20 2d 20 31 5d     ' < buf[len - 1]
   2dffc:	00 30 20 3c 20 64 69 67 69 74 5f 76 61 6c 5f 64     .0 < digit_val_d
   2e00c:	69 66 66 00 6c 65 6e 20 3c 3d 20 4d 41 58 5f 44     iff.len <= MAX_D
   2e01c:	4f 55 42 4c 45 5f 53 54 52 5f 4c 45 4e 00 30 20     OUBLE_STR_LEN.0 
   2e02c:	21 3d 20 77 5f 73 63 61 6c 65 64 2e 73 69 67 6e     != w_scaled.sign
   2e03c:	69 66 69 63 61 6e 64 00 6e 6f 72 6d 61 6c 69 7a     ificand.normaliz
   2e04c:	65 28 76 61 6c 2e 70 6f 73 5f 76 61 6c 29 2e 65     e(val.pos_val).e
   2e05c:	78 70 6f 6e 65 6e 74 20 3d 3d 20 75 70 70 65 72     xponent == upper
   2e06c:	5f 62 6f 75 6e 64 2e 65 78 70 6f 6e 65 6e 74 00     _bound.exponent.
   2e07c:	61 6c 70 68 61 20 3c 3d 20 75 70 70 65 72 5f 62     alpha <= upper_b
   2e08c:	6f 75 6e 64 2e 65 78 70 6f 6e 65 6e 74 20 2b 20     ound.exponent + 
   2e09c:	73 63 61 6c 65 5f 65 78 70 20 2b 20 73 69 67 6e     scale_exp + sign
   2e0ac:	69 66 69 63 61 6e 64 5f 77 69 64 74 68 00 00 00     ificand_width...
   2e0bc:	75 70 70 65 72 5f 62 6f 75 6e 64 2e 65 78 70 6f     upper_bound.expo
   2e0cc:	6e 65 6e 74 20 2b 20 73 63 61 6c 65 5f 65 78 70     nent + scale_exp
   2e0dc:	20 2b 20 73 69 67 6e 69 66 69 63 61 6e 64 5f 77      + significand_w
   2e0ec:	69 64 74 68 20 3c 3d 20 67 61 6d 6d 61 00 00 00     idth <= gamma...
   2e0fc:	61 2e 73 69 67 6e 69 66 69 63 61 6e 64 20 3e 3d     a.significand >=
   2e10c:	20 62 2e 73 69 67 6e 69 66 69 63 61 6e 64 00 00      b.significand..
   2e11c:	76 61 6c 5f 64 69 73 74 2e 73 69 67 6e 69 66 69     val_dist.signifi
   2e12c:	63 61 6e 64 20 3c 3d 20 64 65 6c 74 61 2e 73 69     cand <= delta.si
   2e13c:	67 6e 69 66 69 63 61 6e 64 00 00 00 61 6c 70 68     gnificand...alph
   2e14c:	61 20 3c 3d 20 77 5f 73 63 61 6c 65 64 2e 65 78     a <= w_scaled.ex
   2e15c:	70 6f 6e 65 6e 74 20 26 26 20 77 5f 73 63 61 6c     ponent && w_scal
   2e16c:	65 64 2e 65 78 70 6f 6e 65 6e 74 20 3c 3d 20 67     ed.exponent <= g
   2e17c:	61 6d 6d 61 00 00 00 00 66 72 61 63 5f 64 5f 63     amma....frac_d_c
   2e18c:	6e 74 20 3c 20 30 20 7c 7c 20 2d 66 72 61 63 5f     nt < 0 || -frac_
   2e19c:	64 5f 63 6e 74 20 3c 3d 20 2a 64 65 63 5f 65 78     d_cnt <= *dec_ex
   2e1ac:	70 6f 6e 65 6e 74 00 00 72 65 6d 5f 66 72 61 63     ponent..rem_frac
   2e1bc:	5f 64 5f 63 6e 74 20 3c 3d 20 30 20 7c 7c 20 77     _d_cnt <= 0 || w
   2e1cc:	5f 73 63 61 6c 65 64 2e 73 69 67 6e 69 66 69 63     _scaled.signific
   2e1dc:	61 6e 64 20 3d 3d 20 30 00 00 00 00 73 69 67 6e     and == 0....sign
   2e1ec:	69 66 5f 64 5f 63 6e 74 20 3c 20 30 20 7c 7c 20     if_d_cnt < 0 || 
   2e1fc:	28 69 6e 74 29 6c 65 6e 20 3c 3d 20 73 69 67 6e     (int)len <= sign
   2e20c:	69 66 5f 64 5f 63 6e 74 00 67 65 6e 65 72 69 63     if_d_cnt.generic
   2e21c:	2f 6d 61 6c 6c 6f 63 2e 63 00 61 64 64 72 20 3d     /malloc.c.addr =
   2e22c:	3d 20 61 72 65 61 2d 3e 73 74 61 72 74 00 61 72     = area->start.ar
   2e23c:	65 61 2d 3e 73 74 61 72 74 20 3c 20 61 72 65 61     ea->start < area
   2e24c:	2d 3e 65 6e 64 00 68 65 61 64 2d 3e 73 69 7a 65     ->end.head->size
   2e25c:	20 3d 3d 20 66 6f 6f 74 2d 3e 73 69 7a 65 00 6c      == foot->size.l
   2e26c:	61 73 74 5f 68 65 61 64 2d 3e 61 72 65 61 20 3d     ast_head->area =
   2e27c:	3d 20 61 72 65 61 00 66 69 72 73 74 5f 68 65 61     = area.first_hea
   2e28c:	64 2d 3e 61 72 65 61 20 3d 3d 20 61 72 65 61 00     d->area == area.
   2e29c:	63 75 72 2d 3e 73 69 7a 65 20 3e 3d 20 73 69 7a     cur->size >= siz
   2e2ac:	65 00 66 69 72 73 74 5f 68 65 61 70 5f 61 72 65     e.first_heap_are
   2e2bc:	61 20 21 3d 20 4e 55 4c 4c 00 6e 65 74 5f 73 69     a != NULL.net_si
   2e2cc:	7a 65 20 3e 20 30 00 61 64 64 72 20 21 3d 20 4e     ze > 0.addr != N
   2e2dc:	55 4c 4c 00 21 68 65 61 64 2d 3e 66 72 65 65 00     ULL.!head->free.
   2e2ec:	28 76 6f 69 64 20 2a 29 20 68 65 61 64 20 3c 20     (void *) head < 
   2e2fc:	61 72 65 61 2d 3e 65 6e 64 00 66 90 61 72 65 61     area->end.f.area
   2e30c:	2d 3e 6d 61 67 69 63 20 3d 3d 20 48 45 41 50 5f     ->magic == HEAP_
   2e31c:	41 52 45 41 5f 4d 41 47 49 43 00 00 28 28 75 69     AREA_MAGIC..((ui
   2e32c:	6e 74 70 74 72 5f 74 29 20 61 72 65 61 2d 3e 73     ntptr_t) area->s
   2e33c:	74 61 72 74 20 25 20 50 41 47 45 5f 53 49 5a 45     tart % PAGE_SIZE
   2e34c:	29 20 3d 3d 20 30 00 00 28 28 75 69 6e 74 70 74     ) == 0..((uintpt
   2e35c:	72 5f 74 29 20 61 72 65 61 2d 3e 65 6e 64 20 25     r_t) area->end %
   2e36c:	20 50 41 47 45 5f 53 49 5a 45 29 20 3d 3d 20 30      PAGE_SIZE) == 0
   2e37c:	00 00 00 00 68 65 61 64 2d 3e 6d 61 67 69 63 20     ....head->magic 
   2e38c:	3d 3d 20 48 45 41 50 5f 42 4c 4f 43 4b 5f 48 45     == HEAP_BLOCK_HE
   2e39c:	41 44 5f 4d 41 47 49 43 00 00 00 00 66 6f 6f 74     AD_MAGIC....foot
   2e3ac:	2d 3e 6d 61 67 69 63 20 3d 3d 20 48 45 41 50 5f     ->magic == HEAP_
   2e3bc:	42 4c 4f 43 4b 5f 46 4f 4f 54 5f 4d 41 47 49 43     BLOCK_FOOT_MAGIC
   2e3cc:	00 00 00 00 28 76 6f 69 64 20 2a 29 20 66 69 72     ....(void *) fir
   2e3dc:	73 74 5f 62 6c 6f 63 6b 20 3e 3d 20 28 76 6f 69     st_block >= (voi
   2e3ec:	64 20 2a 29 20 41 52 45 41 5f 46 49 52 53 54 5f     d *) AREA_FIRST_
   2e3fc:	42 4c 4f 43 4b 5f 48 45 41 44 28 61 72 65 61 29     BLOCK_HEAD(area)
   2e40c:	00 00 00 00 28 76 6f 69 64 20 2a 29 20 66 69 72     ....(void *) fir
   2e41c:	73 74 5f 62 6c 6f 63 6b 20 3c 20 61 72 65 61 2d     st_block < area-
   2e42c:	3e 65 6e 64 00 00 00 00 28 76 6f 69 64 20 2a 29     >end....(void *)
   2e43c:	20 68 65 61 64 20 3e 3d 20 28 76 6f 69 64 20 2a      head >= (void *
   2e44c:	29 20 41 52 45 41 5f 46 49 52 53 54 5f 42 4c 4f     ) AREA_FIRST_BLO
   2e45c:	43 4b 5f 48 45 41 44 28 61 72 65 61 29 00 67 65     CK_HEAD(area).ge
   2e46c:	6e 65 72 69 63 2f 61 73 79 6e 63 2e 63 00 21 6d     neric/async.c.!m
   2e47c:	73 67 2d 3e 64 65 73 74 72 6f 79 65 64 00 61 72     sg->destroyed.ar
   2e48c:	67 00 63 61 6c 6c 69 64 00 6d 73 67 2d 3e 77 64     g.callid.msg->wd
   2e49c:	61 74 61 2e 61 63 74 69 76 65 00 21 6d 73 67 2d     ata.active.!msg-
   2e4ac:	3e 66 6f 72 67 65 74 00 77 64 00 63 61 6c 6c 00     >forget.wd.call.
   2e4bc:	66 69 62 72 69 6c 5f 63 6f 6e 6e 65 63 74 69 6f     fibril_connectio
   2e4cc:	6e 00 63 6c 69 65 6e 74 2d 3e 64 61 74 61 00 63     n.client->data.c
   2e4dc:	6c 69 65 6e 74 00 61 6d 73 67 69 64 00 6d 73 67     lient.amsgid.msg
   2e4ec:	00 73 65 73 73 00 66 6c 61 67 73 00 61 73 79 6e     .sess.flags.asyn
   2e4fc:	63 5f 63 6c 69 65 6e 74 5f 64 61 74 61 5f 63 72     c_client_data_cr
   2e50c:	65 61 74 65 20 3d 3d 20 64 65 66 61 75 6c 74 5f     eate == default_
   2e51c:	63 6c 69 65 6e 74 5f 64 61 74 61 5f 63 6f 6e 73     client_data_cons
   2e52c:	74 72 75 63 74 6f 72 00 61 73 79 6e 63 5f 63 6c     tructor.async_cl
   2e53c:	69 65 6e 74 5f 64 61 74 61 5f 64 65 73 74 72 6f     ient_data_destro
   2e54c:	79 20 3d 3d 20 64 65 66 61 75 6c 74 5f 63 6c 69     y == default_cli
   2e55c:	65 6e 74 5f 64 61 74 61 5f 64 65 73 74 72 75 63     ent_data_destruc
   2e56c:	74 6f 72 00 63 6c 69 65 6e 74 5f 63 6f 6e 6e 65     tor.client_conne
   2e57c:	63 74 69 6f 6e 20 3d 3d 20 64 65 66 61 75 6c 74     ction == default
   2e58c:	5f 63 6c 69 65 6e 74 5f 63 6f 6e 6e 65 63 74 69     _client_connecti
   2e59c:	6f 6e 00 00 66 69 62 72 69 6c 5f 6d 75 74 65 78     on..fibril_mutex
   2e5ac:	5f 69 73 5f 6c 6f 63 6b 65 64 28 26 73 65 73 73     _is_locked(&sess
   2e5bc:	2d 3e 72 65 6d 6f 74 65 5f 73 74 61 74 65 5f 6d     ->remote_state_m
   2e5cc:	74 78 29 00 2f 00 67 65 6e 65 72 69 63 2f 61 64     tx)./.generic/ad
   2e5dc:	74 2f 68 61 73 68 5f 74 61 62 6c 65 2e 63 00 68     t/hash_table.c.h
   2e5ec:	20 26 26 20 68 2d 3e 62 75 63 6b 65 74 00 21 68      && h->bucket.!h
   2e5fc:	2d 3e 61 70 70 6c 79 5f 6f 6e 67 6f 69 6e 67 00     ->apply_ongoing.
   2e60c:	69 74 65 6d 00 63 75 72 00 6c 69 6e 6b 5f 69 6e     item.cur.link_in
   2e61c:	5f 75 73 65 28 26 69 74 65 6d 2d 3e 6c 69 6e 6b     _use(&item->link
   2e62c:	29 00 66 90 48 54 5f 4d 49 4e 5f 42 55 43 4b 45     ).f.HT_MIN_BUCKE
   2e63c:	54 53 20 3c 3d 20 6e 65 77 5f 62 75 63 6b 65 74     TS <= new_bucket
   2e64c:	5f 63 6e 74 00 00 00 00 6f 70 20 26 26 20 6f 70     _cnt....op && op
   2e65c:	2d 3e 68 61 73 68 20 26 26 20 6f 70 2d 3e 6b 65     ->hash && op->ke
   2e66c:	79 5f 68 61 73 68 20 26 26 20 6f 70 2d 3e 6b 65     y_hash && op->ke
   2e67c:	79 5f 65 71 75 61 6c 00 68 20 26 26 20 68 2d 3e     y_equal.h && h->
   2e68c:	62 75 63 6b 65 74 20 26 26 20 68 2d 3e 62 75 63     bucket && h->buc
   2e69c:	6b 65 74 5f 63 6e 74 00 68 2d 3e 6f 70 20 26 26     ket_cnt.h->op &&
   2e6ac:	20 68 2d 3e 6f 70 2d 3e 68 61 73 68 20 26 26 20      h->op->hash && 
   2e6bc:	68 2d 3e 6f 70 2d 3e 65 71 75 61 6c 00 67 65 6e     h->op->equal.gen
   2e6cc:	65 72 69 63 2f 74 69 6d 65 2e 63 00 72 65 73 75     eric/time.c.resu
   2e6dc:	6c 74 20 3e 3d 20 30 00 72 65 73 75 6c 74 20 3c     lt >= 0.result <
   2e6ec:	20 6f 70 32 00 6d 6f 6e 20 3e 3d 20 30 20 26 26      op2.mon >= 0 &&
   2e6fc:	20 6d 6f 6e 20 3c 3d 20 31 31 00 63 6c 6f 63 6b      mon <= 11.clock
   2e70c:	2e 66 61 64 64 72 00 63 6c 6f 63 6b 00 41 4d 00     .faddr.clock.AM.
   2e71c:	50 4d 00 61 6d 00 73 20 21 3d 20 4e 55 4c 4c 00     PM.am.s != NULL.
   2e72c:	66 6f 72 6d 61 74 20 21 3d 20 4e 55 4c 4c 00 74     format != NULL.t
   2e73c:	6d 20 21 3d 20 4e 55 4c 4c 00 25 63 00 25 73 00     m != NULL.%c.%s.
   2e74c:	25 59 2d 25 6d 2d 25 64 20 25 48 3a 25 4d 3a 25     %Y-%m-%d %H:%M:%
   2e75c:	53 00 25 30 32 64 00 25 6d 2f 25 64 2f 25 79 00     S.%02d.%m/%d/%y.
   2e76c:	25 32 64 00 25 2b 34 59 2d 25 6d 2d 25 64 00 25     %2d.%+4Y-%m-%d.%
   2e77c:	62 00 25 30 33 64 00 25 49 3a 25 4d 3a 25 53 20     b.%03d.%I:%M:%S 
   2e78c:	25 70 00 25 48 3a 25 4d 00 25 6c 64 00 09 00 25     %p.%H:%M.%ld...%
   2e79c:	59 2d 25 6d 2d 25 64 00 25 25 00 62 75 66 20 21     Y-%m-%d.%%.buf !
   2e7ac:	3d 20 4e 55 4c 4c 00 25 73 20 25 73 20 25 32 64     = NULL.%s %s %2d
   2e7bc:	20 25 30 32 64 3a 25 30 32 64 3a 25 30 32 64 20      %02d:%02d:%02d 
   2e7cc:	25 64 0a 00 74 69 6d 65 70 74 72 20 21 3d 20 4e     %d..timeptr != N
   2e7dc:	55 4c 4c 00 53 75 6e 00 4d 6f 6e 00 54 75 65 00     ULL.Sun.Mon.Tue.
   2e7ec:	57 65 64 00 54 68 75 00 46 72 69 00 53 61 74 00     Wed.Thu.Fri.Sat.
   2e7fc:	53 75 6e 64 61 79 00 4d 6f 6e 64 61 79 00 54 75     Sunday.Monday.Tu
   2e80c:	65 73 64 61 79 00 57 65 64 6e 65 73 64 61 79 00     esday.Wednesday.
   2e81c:	54 68 75 72 73 64 61 79 00 46 72 69 64 61 79 00     Thursday.Friday.
   2e82c:	53 61 74 75 72 64 61 79 00 4a 61 6e 00 46 65 62     Saturday.Jan.Feb
   2e83c:	00 4d 61 72 00 41 70 72 00 4d 61 79 00 4a 75 6e     .Mar.Apr.May.Jun
   2e84c:	00 4a 75 6c 00 41 75 67 00 53 65 70 00 4f 63 74     .Jul.Aug.Sep.Oct
   2e85c:	00 4e 6f 76 00 44 65 63 00 4a 61 6e 75 61 72 79     .Nov.Dec.January
   2e86c:	00 46 65 62 72 75 61 72 79 00 4d 61 72 63 68 00     .February.March.
   2e87c:	41 70 72 69 6c 00 4a 75 6e 65 00 4a 75 6c 79 00     April.June.July.
   2e88c:	41 75 67 75 73 74 00 53 65 70 74 65 6d 62 65 72     August.September
   2e89c:	00 4f 63 74 6f 62 65 72 00 4e 6f 76 65 6d 62 65     .October.Novembe
   2e8ac:	72 00 44 65 63 65 6d 62 65 72 00 66 90 66 90 66     r.December.f.f.f
   2e8bc:	90 66 90 90 96 76 02 00 86 76 02 00 86 76 02 00     .f...v...v...v..
   2e8cc:	86 76 02 00 86 76 02 00 86 76 02 00 86 76 02 00     .v...v...v...v..
   2e8dc:	86 76 02 00 86 76 02 00 86 76 02 00 86 76 02 00     .v...v...v...v..
   2e8ec:	86 76 02 00 86 76 02 00 86 76 02 00 86 76 02 00     .v...v...v...v..
   2e8fc:	86 76 02 00 86 76 02 00 86 76 02 00 86 76 02 00     .v...v...v...v..
   2e90c:	86 76 02 00 86 76 02 00 86 76 02 00 86 76 02 00     .v...v...v...v..
   2e91c:	86 76 02 00 86 76 02 00 86 76 02 00 86 76 02 00     .v...v...v...v..
   2e92c:	86 76 02 00 91 78 02 00 af 78 02 00 7c 7c 02 00     .v...x...x..||..
   2e93c:	cc 7a 02 00 86 76 02 00 b8 7a 02 00 a5 7a 02 00     .z...v...z...z..
   2e94c:	cd 78 02 00 10 7a 02 00 86 76 02 00 86 76 02 00     .x...z...v...v..
   2e95c:	86 76 02 00 f9 79 02 00 86 76 02 00 86 76 02 00     .v...y...v...v..
   2e96c:	e4 79 02 00 86 76 02 00 d0 79 02 00 ba 79 02 00     .y...v...y...y..
   2e97c:	e1 76 02 00 c7 7b 02 00 e0 7a 02 00 f5 77 02 00     .v...{...z...w..
   2e98c:	e1 76 02 00 12 77 02 00 0a 77 02 00 86 76 02 00     .v...w...w...v..
   2e99c:	86 76 02 00 86 76 02 00 86 76 02 00 86 76 02 00     .v...v...v...v..
   2e9ac:	86 76 02 00 87 7a 02 00 69 7a 02 00 55 7a 02 00     .v...z..iz..Uz..
   2e9bc:	3e 7a 02 00 27 7a 02 00 86 76 02 00 b8 77 02 00     >z..'z...v...w..
   2e9cc:	a4 77 02 00 86 76 02 00 90 77 02 00 7c 77 02 00     .w...v...w..|w..
   2e9dc:	5c 77 02 00 48 77 02 00 8a 79 02 00 86 76 02 00     \w..Hw...y...v..
   2e9ec:	66 79 02 00 86 76 02 00 52 79 02 00 f1 78 02 00     fy...v..Ry...x..
   2e9fc:	e4 78 02 00 67 7c 02 00 86 76 02 00 5c 7c 02 00     .x..g|...v..\|..
   2ea0c:	48 7c 02 00 97 79 02 00 0a 77 02 00 00 00 00 00     H|...y...w......
   2ea1c:	00 00 00 00                                         ....

0002ea20 <leap_mdays.2430>:
   2ea20:	00 00 00 00 1f 00 00 00 3c 00 00 00 5b 00 00 00     ........<...[...
   2ea30:	79 00 00 00 98 00 00 00 b6 00 00 00 d5 00 00 00     y...............
   2ea40:	f4 00 00 00 12 01 00 00 31 01 00 00 4f 01 00 00     ........1...O...
	...

0002ea60 <mdays.2429>:
   2ea60:	00 00 00 00 1f 00 00 00 3b 00 00 00 5a 00 00 00     ........;...Z...
   2ea70:	78 00 00 00 97 00 00 00 b5 00 00 00 d4 00 00 00     x...............
   2ea80:	f3 00 00 00 11 01 00 00 30 01 00 00 4e 01 00 00     ........0...N...
	...

0002eaa0 <month_days.2423>:
   2eaa0:	1f 00 00 00 00 00 00 00 1f 00 00 00 1e 00 00 00     ................
   2eab0:	1f 00 00 00 1e 00 00 00 1f 00 00 00 1f 00 00 00     ................
   2eac0:	1e 00 00 00 1f 00 00 00 1e 00 00 00 1f 00 00 00     ................

0002ead0 <wday_abbr.2556>:
   2ead0:	e0 e7 02 00 e4 e7 02 00 e8 e7 02 00 ec e7 02 00     ................
   2eae0:	f0 e7 02 00 f4 e7 02 00 f8 e7 02 00                 ............

0002eaec <wday.2557>:
   2eaec:	fc e7 02 00 03 e8 02 00 0a e8 02 00 12 e8 02 00     ................
   2eafc:	1c e8 02 00 25 e8 02 00 2c e8 02 00 00 00 00 00     ....%...,.......
	...

0002eb20 <mon_abbr.2558>:
   2eb20:	35 e8 02 00 39 e8 02 00 3d e8 02 00 41 e8 02 00     5...9...=...A...
   2eb30:	45 e8 02 00 49 e8 02 00 4d e8 02 00 51 e8 02 00     E...I...M...Q...
   2eb40:	55 e8 02 00 59 e8 02 00 5d e8 02 00 61 e8 02 00     U...Y...]...a...
	...

0002eb60 <mon.2559>:
   2eb60:	65 e8 02 00 6d e8 02 00 76 e8 02 00 7c e8 02 00     e...m...v...|...
   2eb70:	45 e8 02 00 82 e8 02 00 87 e8 02 00 8c e8 02 00     E...............
   2eb80:	93 e8 02 00 9d e8 02 00 a5 e8 02 00 ae e8 02 00     ................
	...

0002eba0 <mon.2630>:
   2eba0:	35 e8 02 00 39 e8 02 00 3d e8 02 00 41 e8 02 00     5...9...=...A...
   2ebb0:	45 e8 02 00 49 e8 02 00 4d e8 02 00 51 e8 02 00     E...I...M...Q...
   2ebc0:	55 e8 02 00 59 e8 02 00 5d e8 02 00 61 e8 02 00     U...Y...]...a...

0002ebd0 <wday.2629>:
   2ebd0:	e0 e7 02 00 e4 e7 02 00 e8 e7 02 00 ec e7 02 00     ................
   2ebe0:	f0 e7 02 00 f4 e7 02 00 f8 e7 02 00 6e 75 6c 6c     ............null
   2ebf0:	2f 25 64 00 66 90 66 90 66 90 66 90 66 90 66 90     /%d.f.f.f.f.f.f.

0002ec00 <trans>:
   2ec00:	06 00 00 00 00 00 00 00 01 00 00 00 b0 a4 02 00     ................
   2ec10:	06 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00     ................
   2ec20:	06 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00     ................
   2ec30:	06 00 00 00 00 00 00 00 01 00 00 00 b0 a4 02 00     ................
   2ec40:	01 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00     ................
   2ec50:	02 00 00 00 e0 a4 02 00 04 00 00 00 00 a5 02 00     ................
   2ec60:	06 00 00 00 00 00 00 00 03 00 00 00 00 00 00 00     ................
   2ec70:	06 00 00 00 00 00 00 00 06 00 00 00 00 00 00 00     ................
   2ec80:	06 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00     ................
   2ec90:	06 00 00 00 00 00 00 00 05 00 00 00 30 a5 02 00     ............0...
   2eca0:	05 00 00 00 50 a5 02 00 05 00 00 00 70 a5 02 00     ....P.......p...
   2ecb0:	02 00 00 00 e0 a4 02 00 04 00 00 00 20 a5 02 00     ............ ...
   2ecc0:	64 65 66 61 75 6c 74 2e 73 74 61 63 6b 5f 73 69     default.stack_si
   2ecd0:	7a 65 00 25 70 3a 20 25 70 28 29 0a 00 2d 2d 20     ze.%p: %p()..-- 
   2ece0:	65 6e 64 20 6f 66 20 73 74 61 63 6b 20 74 72 61     end of stack tra
   2ecf0:	63 65 20 2d 2d 0a 00 90 41 73 73 65 72 74 69 6f     ce --...Assertio
   2ed00:	6e 20 66 61 69 6c 65 64 20 28 25 73 29 20 69 6e     n failed (%s) in
   2ed10:	20 66 69 6c 65 20 22 25 73 22 2c 20 6c 69 6e 65      file "%s", line
   2ed20:	20 25 75 2e 0a 00 67 65 6e 65 72 69 63 2f 70 6f      %u...generic/po
   2ed30:	77 65 72 5f 6f 66 5f 74 65 6e 2e 63 00 66 90 90     wer_of_ten.c.f..
   2ed40:	6d 69 6e 5f 62 69 6e 5f 65 78 70 20 3c 3d 20 62     min_bin_exp <= b
   2ed50:	69 6e 61 72 79 5f 65 78 70 20 26 26 20 62 69 6e     inary_exp && bin
   2ed60:	61 72 79 5f 65 78 70 20 3c 3d 20 6d 61 78 5f 62     ary_exp <= max_b
   2ed70:	69 6e 5f 65 78 70 00 00 66 70 5f 70 6f 77 65 72     in_exp..fp_power
   2ed80:	73 5f 6f 66 5f 31 30 5b 73 65 65 64 5f 69 64 78     s_of_10[seed_idx
   2ed90:	5d 2e 62 69 6e 5f 65 78 70 20 3c 20 62 69 6e 61     ].bin_exp < bina
   2eda0:	72 79 5f 65 78 70 00 00 66 70 5f 70 6f 77 65 72     ry_exp..fp_power
   2edb0:	73 5f 6f 66 5f 31 30 5b 69 5d 2e 62 69 6e 5f 65     s_of_10[i].bin_e
   2edc0:	78 70 20 3c 3d 20 62 69 6e 61 72 79 5f 65 78 70     xp <= binary_exp
   2edd0:	20 2b 20 6d 61 78 5f 62 69 6e 5f 65 78 70 5f 64      + max_bin_exp_d
   2ede0:	69 66 66 00 66 90 66 90 66 90 66 90 66 90 66 90     iff.f.f.f.f.f.f.
   2edf0:	66 90 66 90 66 90 66 90 66 90 66 90 66 90 66 90     f.f.f.f.f.f.f.f.

0002ee00 <fp_powers_of_10>:
   2ee00:	69 0b ef 8b c2 cb e1 b8 fa fa 90 fe 82 7f 32 40     i.............2@
   2ee10:	28 72 bf 89 15 fb 98 fe 7d 4f f3 46 13 a1 42 cd     (r......}O.F..B.
   2ee20:	2f fb a0 fe 8c 18 f3 ec 22 4a ee 98 4a fb a8 fe     /......."J..J...
   2ee30:	b8 98 8d 4d 44 7a e2 e3 64 fb b0 fe 06 95 00 cb     ...MDz..d.......
   2ee40:	8c 8d c9 a9 7f fb b8 fe d1 38 82 47 97 b8 00 fd     .........8.G....
   2ee50:	99 fb c0 fe bd 12 3e ed 27 75 80 bc b4 fb c8 fe     ......>.'u......
   2ee60:	26 49 0b ba d9 dc 71 8c cf fb d0 fe aa 6f 28 07     &I....q......o(.
   2ee70:	2c 6e 47 d1 e9 fb d8 fe 77 c5 6a 83 62 ce ec 9b     ,nG.....w.j.b...
   2ee80:	04 fc e0 fe ca 22 5c 8f 24 ad 58 e8 1e fc e8 fe     ....."\.$.X.....
   2ee90:	67 3b e4 5e ab 8e 1c ad 39 fc f0 fe 8e 7f 1c 88     g;.^....9.......
   2eea0:	7f 68 fa 80 54 fc f8 fe 3a 19 7a 63 25 43 31 c0     .h..T...:.zc%C1.
   2eeb0:	6e fc 00 ff d3 58 ae 37 09 cc 31 8f 89 fc 08 ff     n....X.7..1.....
   2eec0:	d7 e1 32 cf cd 5f 60 d5 a3 fc 10 ff e2 a6 e5 26     ..2.._`........&
   2eed0:	8d 54 fa 9e be fc 18 ff be 4e 31 4a ec 3c e5 ec     .T.......N1J.<..
   2eee0:	d8 fc 20 ff ed 9d 34 c4 2c 39 80 b0 f3 fc 28 ff     .. ...4.,9....(.
   2eef0:	60 bc a4 3d a9 de 80 83 0e fd 30 ff fd 60 bd 77     `..=......0..`.w
   2ef00:	aa 90 f4 c3 28 fd 38 ff 06 cc 23 54 77 83 ff 91     ....(.8...#Tw...
   2ef10:	43 fd 40 ff 76 8c 06 19 ee da 8d d9 5d fd 48 ff     C.@.v.......].H.
   2ef20:	30 00 cb 38 db 27 17 a2 78 fd 50 ff a2 8c 3f bc     0..8.'..x.P...?.
   2ef30:	b1 99 88 f1 92 fd 58 ff 93 a0 73 db 93 e0 f4 b3     ......X...s.....
   2ef40:	ad fd 60 ff 86 75 87 45 01 fd 13 86 c8 fd 68 ff     ..`..u.E......h.
   2ef50:	c9 82 53 7c 6e ba ca c7 e2 fd 70 ff f0 17 b7 40     ..S|n.....p....@
   2ef60:	38 48 db 94 fd fd 78 ff a1 e4 bc 64 7c 46 d0 dd     8H....x....d|F..
   2ef70:	17 fe 80 ff ff b8 ed 1e fe 94 43 a5 32 fe 88 ff     ..........C.2...
   2ef80:	7d d3 65 f0 bc 35 43 f6 4c fe 90 ff cb bb e3 17     }.e..5C.L.......
   2ef90:	06 da 7a b7 67 fe 98 ff 9b 53 75 fd f7 02 b4 88     ..z.g....Su.....
   2efa0:	82 fe a0 ff ca 6b 34 79 f9 1e b4 cb 9c fe a8 ff     .....k4y........
   2efb0:	a6 19 09 6b ba 60 c5 97 b7 fe b0 ff 32 52 dd 20     ...k.`......2R. 
   2efc0:	6c 0b 28 e2 d1 fe b8 ff a5 e9 39 a5 27 ea 7f a8     l.(.......9.'...
   2efd0:	ec fe c0 ff 2f 8d 06 be 92 85 15 fb 06 ff c8 ff     ..../...........
   2efe0:	59 c1 7e b1 53 7c 12 bb 21 ff d0 ff c6 e2 bc ba     Y.~.S|..!.......
   2eff0:	3b 31 61 8b 3c ff d8 ff ba 94 39 45 ad 1e b1 cf     ;1a.<.....9E....
   2f000:	56 ff e0 ff 53 3b 75 44 cd 14 be 9a 71 ff e8 ff     V...S;uD....q...
   2f010:	5b e1 4d c4 be 94 95 e6 8b ff f0 ff fd ce 61 84     [.M...........a.
   2f020:	11 77 cc ab a6 ff f8 ff 00 00 00 00 00 00 00 80     .w..............
   2f030:	c1 ff 00 00 00 00 00 00 00 20 bc be db ff 08 00     ......... ......
   2f040:	00 00 00 04 bf c9 1b 8e f6 ff 10 00 00 a1 ed cc     ................
   2f050:	ce 1b c2 d3 10 00 18 00 9e b5 70 2b a8 ad c5 9d     ..........p+....
   2f060:	2b 00 20 00 fd 25 e5 1a 8e 4f 19 eb 45 00 28 00     +. ..%...O..E.(.
   2f070:	d7 95 43 0e 05 8d 29 af 60 00 30 00 a0 44 ed 81     ..C...).`.0..D..
   2f080:	12 8f 81 82 7b 00 38 00 d5 a6 cf ff 49 1f 78 c2     ....{.8.....I.x.
   2f090:	95 00 40 00 4b 3a 1d ea be 0f e4 90 b0 00 48 00     ..@.K:........H.
   2f0a0:	fc f7 da 87 8f 7a e7 d7 ca 00 50 00 d6 39 8e 77     .....z....P..9.w
   2f0b0:	f1 75 dc a0 e5 00 58 00 a3 14 9b c5 16 ab b3 ef     .u....X.........
   2f0c0:	ff 00 60 00 e7 0f c5 00 e3 7e 97 b2 1a 01 68 00     ..`......~....h.
   2f0d0:	9e 32 23 99 c0 ad 0f 85 35 01 70 00 1e 51 a1 01     .2#.....5.p..Q..
   2f0e0:	35 d6 46 c6 4f 01 78 00 e0 8c e9 80 c9 47 ba 93     5.F.O.x......G..
   2f0f0:	6a 01 80 00 5d 64 42 1d 17 a1 21 dc 84 01 88 00     j...]dB...!.....
   2f100:	e7 a6 d3 a8 c5 b9 02 a4 9f 01 90 00 d1 8c 5b ef     ..............[.
   2f110:	c2 18 65 f4 b9 01 98 00 aa 17 e6 7f 2b a1 16 b6     ..e.........+...
   2f120:	d4 01 a0 00 87 22 04 79 ff 9a aa 87 ef 01 a8 00     .....".y........
   2f130:	93 bf 9b 85 91 a2 28 ca 09 02 b0 00 44 e7 59 78     ......(.....D.Yx
   2f140:	c4 b7 9e 96 24 02 b8 00 6b 55 27 39 8d f7 70 e0     ....$...kU'9..p.
   2f150:	3e 02 c0 00 6d d1 12 bb be c6 38 a7 59 02 c8 00     >...m.....8.Y...
   2f160:	46 61 82 37 35 0c 2e f9 73 02 d0 00 e1 2e ce 37     Fa.75...s......7
   2f170:	06 4a a7 b9 8e 02 d8 00 30 c9 3c e3 ff 96 52 8a     .J......0.<...R.
   2f180:	a9 02 e0 00 b9 f4 e3 42 06 e4 1d ce c3 02 e8 00     .......B........
   2f190:	66 17 bf d6 f3 a6 91 99 de 02 f0 00 15 05 a4 92     f...............
   2f1a0:	23 e8 d5 e4 f8 02 f8 00 8e de f9 9d fb eb 7e aa     #.............~.
   2f1b0:	13 03 00 01 d8 d4 0d d3 53 fb 0e fe 2d 03 08 01     ........S...-...
   2f1c0:	82 bc 9d a7 4a d1 49 bd 48 03 10 01 b3 7e 63 55     ....J.I.H....~cU
   2f1d0:	34 e3 07 8d 63 03 18 01 8c 2f 6a 5c 19 fc 26 d2     4...c..../j\..&.
   2f1e0:	7d 03 20 01 d2 d8 b9 d4 00 5e 93 9c 98 03 28 01     }. ......^....(.
   2f1f0:	fd 83 7c 24 20 df 50 e9 b2 03 30 01 f6 39 93 d2     ..|$ .P...0..9..
   2f200:	27 7a d5 ad cd 03 38 01 76 e3 cc f2 29 2f 84 81     'z....8.v...)/..
   2f210:	e8 03 40 01 44 3b cf 95 88 90 fe c0 02 04 48 01     ..@.D;........H.
   2f220:	e6 e4 8e 55 57 c2 ca 8f 1d 04 50 01 0a 9b db c3     ...UW.....P.....
   2f230:	39 4e 44 d6 37 04 58 01 d2 0a 90 db 00 27 a4 9f     9ND.7.X......'..
   2f240:	52 04 60 01 84 82 ec 98 e7 4a e2 ed 6c 04 68 01     R.`......J..l.h.
   2f250:	ac c9 f0 2e 83 c3 3c b1 87 04 70 01 5f 94 9d 89     ......<...p._...
   2f260:	e2 57 0d 84 a2 04 78 01 67 65 6e 65 72 69 63 2f     .W....x.generic/
   2f270:	70 69 6f 5f 74 72 61 63 65 2e 63 00                 pio_trace.c.
